#include \
<stdio.h>
#include \
<assert.h>
#include \
<math.h>
#include \
<algorithm>
#include \
<iostream>
#include \
<vector>
#include \
<string>
#include \
<cmath>
using
namespace
O
;
typedef
long
long
o
;
typedef
Oo
<
int
,
int
>
oo
;
typedef
Oo
<
double
,
double
>
io
;
typedef
Oo
<
double
,
int
>
Io
;
const
double
lo
=
.000000000000001E07
;
const
double
Oi
=
oi
(
-
01
)
;
const
int
oio
=
0151
;
int
ii
,
Ii
,
OI
,
oI
;
int
oOo
[
oio
]
,
iio
[
oio
]
;
o
Iio
[
oio
]
[
oio
]
;
int
II
,
lio
;
int
iI
(
)
{
ol
(
"\045d%\144"
,
&
II
,
&
lio
)
;
for
(
int
o0
=
01
;
o0
<=
II
;
o0
++
)
ol
(
"%d\045d"
,
oOo
+
o0
,
iio
+
o0
)
;
for
(
int
o0
=
01
;
o0
<=
II
;
o0
++
)
{
for
(
int
OIo
=
01
;
OIo
<=
II
;
OIo
++
)
{
ol
(
"\045lld"
,
Iio
[
o0
]
+
OIo
)
;
}
}
for
(
int
o0
=
01
;
o0
<=
II
;
o0
++
)
Iio
[
o0
]
[
o0
]
=
0
;
for
(
int
oIo
=
01
;
oIo
<=
II
;
oIo
++
)
{
for
(
int
o0
=
01
;
o0
<=
II
;
o0
++
)
{
for
(
int
OIo
=
01
;
OIo
<=
II
;
OIo
++
)
{
if
(
Iio
[
o0
]
[
oIo
]
==
-
01
||
Iio
[
oIo
]
[
OIo
]
==
-
01
)
continue
;
if
(
Iio
[
o0
]
[
OIo
]
!=
-
01
)
Iio
[
o0
]
[
OIo
]
=
IOo
(
Iio
[
o0
]
[
oIo
]
+
Iio
[
oIo
]
[
OIo
]
,
Iio
[
o0
]
[
OIo
]
)
;
else
Iio
[
o0
]
[
OIo
]
=
Iio
[
o0
]
[
oIo
]
+
Iio
[
oIo
]
[
OIo
]
;
}
}
}
int
iIo
,
IIo
;
for
(
int
o0
=
01
;
o0
<=
lio
;
o0
++
)
{
ol
(
"\045\144%d"
,
&
iIo
,
&
IIo
)
;
double
lIo
[
oio
]
;
int
Olo
[
oio
]
=
{
}
;
for
(
int
o0
=
01
;
o0
<=
II
;
o0
++
)
lIo
[
o0
]
=
.000000000001E030
;
lIo
[
iIo
]
=
0
;
for
(
int
o0
=
01
;
o0
<=
II
;
o0
++
)
{
int
olo
=
-
01
;
for
(
int
o0
=
01
;
o0
<=
II
;
o0
++
)
if
(
!
Olo
[
o0
]
&&
(
olo
==
-
01
||
lIo
[
olo
]
>
lIo
[
o0
]
)
)
olo
=
o0
;
Olo
[
olo
]
=
01
;
for
(
int
o0
=
01
;
o0
<=
II
;
o0
++
)
{
if
(
Olo
[
o0
]
)
continue
;
if
(
Iio
[
olo
]
[
o0
]
==
-
01
||
Iio
[
olo
]
[
o0
]
>
oOo
[
olo
]
)
continue
;
lIo
[
o0
]
=
IOo
(
lIo
[
o0
]
,
lIo
[
olo
]
+
Iio
[
olo
]
[
o0
]
/
(
double
)
iio
[
olo
]
)
;
}
}
I0
(
"\045.\061\060\154f "
,
lIo
[
IIo
]
)
;
}
I0
(
"\n"
)
;
}
int
l0
(
)
{
int
O1
;
ol
(
"\045d"
,
&
O1
)
;
for
(
int
o1
=
01
;
o1
<=
O1
;
o1
++
)
{
I0
(
"\103\141se #\045d\072 "
,
o1
)
;
iI
(
)
;
}
}
