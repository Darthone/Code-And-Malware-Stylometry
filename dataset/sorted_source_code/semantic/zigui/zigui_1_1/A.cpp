#include \
<stdio.h>
#include \
<assert.h>
#include \
<math.h>
#include \
<algorithm>
#include \
<iostream>
#include \
<vector>
#include \
<string>
#include \
<cmath>
using
namespace
O
;
typedef
long
long
o
;
typedef
Oo
<
int
,
int
>
oo
;
typedef
Oo
<
double
,
double
>
io
;
typedef
Oo
<
double
,
int
>
Io
;
const
double
lo
=
01.E-08
;
const
double
Oi
=
oi
(
-
01
)
;
int
ii
,
Ii
,
OI
,
oI
;
char
*
i1
=
"\075R\117\131G\102\126"
;
int
iI
(
)
{
int
II
;
int
Ol
[
012
]
;
ol
(
"%\144"
,
&
II
)
;
for
(
int
o0
=
01
;
o0
<=
06
;
o0
++
)
ol
(
"\045\144"
,
Ol
+
o0
)
;
int
I1
[
03
]
[
02
]
=
{
02
,
05
,
04
,
01
,
06
,
03
}
;
for
(
int
o0
=
0
;
o0
<
03
;
o0
++
)
{
int
ii
=
I1
[
o0
]
[
0
]
,
Ii
=
I1
[
o0
]
[
01
]
;
if
(
Ol
[
ii
]
+
Ol
[
Ii
]
==
II
&&
Ol
[
ii
]
==
Ol
[
Ii
]
)
{
for
(
int
o0
=
0
;
o0
<
Ol
[
ii
]
;
o0
++
)
{
I0
(
"\045\143"
,
i1
[
ii
]
)
;
I0
(
"\045c"
,
i1
[
Ii
]
)
;
}
return
!
I0
(
"\n"
)
;
}
}
if
(
Ol
[
02
]
&&
Ol
[
02
]
>=
Ol
[
05
]
)
return
!
I0
(
"IM\120\117\123SI\102\114E\012"
)
;
if
(
Ol
[
04
]
&&
Ol
[
04
]
>=
Ol
[
01
]
)
return
!
I0
(
"\111\115\120\117\123\123\111\102L\105\n"
)
;
if
(
Ol
[
06
]
&&
Ol
[
06
]
>=
Ol
[
03
]
)
return
!
I0
(
"\111MPOS\123\111BLE\n"
)
;
Ol
[
01
]
-=
Ol
[
04
]
,
Ol
[
03
]
-=
Ol
[
06
]
,
Ol
[
05
]
-=
Ol
[
02
]
;
int
l1
=
01
;
if
(
Ol
[
l1
]
<
Ol
[
03
]
)
l1
=
03
;
if
(
Ol
[
l1
]
<
Ol
[
05
]
)
l1
=
05
;
if
(
Ol
[
l1
]
>
(
Ol
[
01
]
+
Ol
[
03
]
+
Ol
[
05
]
-
Ol
[
l1
]
)
)
return
!
I0
(
"\111\115PO\123\123IBLE\012"
)
;
int
ii
,
Ii
;
if
(
l1
==
01
)
ii
=
03
,
Ii
=
05
;
if
(
l1
==
03
)
ii
=
01
,
Ii
=
05
;
if
(
l1
==
05
)
ii
=
01
,
Ii
=
03
;
OOo
oOo
=
""
,
iOo
=
""
;
if
(
Ol
[
ii
]
<
Ol
[
Ii
]
)
for
(
int
o0
=
01
;
o0
<=
Ol
[
Ii
]
-
Ol
[
ii
]
;
o0
++
)
oOo
+=
i1
[
Ii
]
;
if
(
Ol
[
Ii
]
<
Ol
[
ii
]
)
for
(
int
o0
=
01
;
o0
<=
Ol
[
ii
]
-
Ol
[
Ii
]
;
o0
++
)
oOo
+=
i1
[
ii
]
;
for
(
int
o0
=
01
;
o0
<=
IOo
(
Ol
[
ii
]
,
Ol
[
Ii
]
)
;
o0
++
)
{
oOo
+=
i1
[
ii
]
;
oOo
+=
i1
[
Ii
]
;
}
lOo
(
oOo
.
Ooo
(
)
,
oOo
.
ooo
(
)
)
;
for
(
int
o0
=
01
;
o0
<=
Ol
[
l1
]
;
o0
++
)
{
iOo
+=
i1
[
l1
]
;
iOo
+=
oOo
.
ioo
(
)
;
oOo
.
Ioo
(
)
;
}
while
(
oOo
.
loo
(
)
)
iOo
+=
oOo
.
ioo
(
)
,
oOo
.
Ioo
(
)
;
OOo
O0
=
""
;
for
(
int
o0
=
0
;
o0
<
iOo
.
loo
(
)
;
o0
++
)
{
O0
+=
iOo
[
o0
]
;
if
(
iOo
[
o0
]
==
'\122'
)
{
for
(
int
o0
=
0
;
o0
<
Ol
[
04
]
;
o0
++
)
O0
+=
"\107\122"
;
Ol
[
04
]
=
0
;
}
if
(
iOo
[
o0
]
==
'\102'
)
{
for
(
int
o0
=
0
;
o0
<
Ol
[
02
]
;
o0
++
)
O0
+=
"O\102"
;
Ol
[
02
]
=
0
;
}
if
(
iOo
[
o0
]
==
'\131'
)
{
for
(
int
o0
=
0
;
o0
<
Ol
[
06
]
;
o0
++
)
O0
+=
"\126Y"
;
Ol
[
06
]
=
0
;
}
}
Oio
<<
O0
<<
"\n"
;
O0
+=
O0
[
0
]
;
for
(
int
o0
=
0
;
o0
<
II
;
o0
++
)
{
if
(
O0
[
o0
+
01
]
==
O0
[
o0
]
||
O0
[
o0
]
==
'\117'
&&
O0
[
o0
+
01
]
!=
'\102'
||
O0
[
o0
]
==
'\107'
&&
O0
[
o0
+
01
]
!=
'\122'
||
O0
[
o0
]
==
'\126'
&&
O0
[
o0
+
01
]
!=
'\131'
)
return
!
I0
(
"WA\127AW\101\127A\127AW\101\n"
)
;
}
}
int
l0
(
)
{
int
O1
;
ol
(
"%\144"
,
&
O1
)
;
for
(
int
o1
=
01
;
o1
<=
O1
;
o1
++
)
{
I0
(
"\103ase\040\043\045d\072 "
,
o1
)
;
iI
(
)
;
}
}
