#ifdef \
O
#define \
o \
 
#endif
#include \
<bits/stdc++.h>
using
namespace
Oo
;
oo
io
(
Io
{
}
(
)
)
;
int
lo
(
int
Oi
)
{
return
io
(
)
%
Oi
;
}
typedef
long
double
oi
;
typedef
long
long
ii
;
#ifdef \
O
#define \
Ii( \
... \
) \
OI \
( \
oI \
, \
iI \
) \
, \
II \
( \
oI \
)
#else
#define \
Ii( \
... \
) \
;
#endif
#define \
Ol \
  \
ol
#define \
O0 \
  \
o0
#define \
i0( \
Oi \
) \
( \
( \
int \
) \
( \
Oi \
) \
. \
I0 \
( \
) \
)
#define \
l0 \
  \
"t\145x\164"
const
int
O1
=
(
int
)
010100000000000.E-04
;
const
oi
o1
=
010.E-010
;
const
oi
i1
=
I1
(
(
oi
)
-
.000001E06
)
;
const
int
l1
=
(
int
)
0100000000000000.E-05
+
07
;
void
OOo
(
int
&
Oi
,
int
oOo
)
{
if
(
(
Oi
+=
oOo
)
>=
l1
)
{
Oi
-=
l1
;
}
}
int
iOo
(
int
Oi
,
int
oOo
)
{
return
(
long
long
)
Oi
*
oOo
%
l1
;
}
int
IOo
(
int
Oi
,
int
lOo
)
{
int
Ooo
=
01
;
for
(
;
lOo
;
lOo
>>=
01
)
{
if
(
lOo
&
01
)
{
Ooo
=
iOo
(
Ooo
,
Oi
)
;
}
Oi
=
iOo
(
Oi
,
Oi
)
;
}
return
Ooo
;
}
void
ooo
(
)
{
}
const
int
oOi
=
0156
;
int
iOi
[
oOi
]
[
oOi
]
;
int
ioo
,
IOi
;
int
lOi
[
oOi
]
[
02
]
;
int
loo
(
)
{
if
(
Oio
(
"\045\144\045\144"
,
&
ioo
,
&
IOi
)
<
02
)
{
return
0
;
}
for
(
int
oio
=
0
;
oio
<
ioo
;
++
oio
)
{
Oio
(
"\045\144%d"
,
&
lOi
[
oio
]
[
0
]
,
&
lOi
[
oio
]
[
01
]
)
;
}
for
(
int
oio
=
0
;
oio
<
ioo
;
++
oio
)
{
for
(
int
Olo
=
0
;
Olo
<
ioo
;
++
Olo
)
{
Oio
(
"\045\144"
,
iOi
[
oio
]
+
Olo
)
;
if
(
iOi
[
oio
]
[
Olo
]
==
-
01
)
{
iOi
[
oio
]
[
Olo
]
=
O1
;
}
}
}
return
01
;
}
int
Ooi
[
oOi
]
;
oi
lIo
[
oOi
]
;
void
lio
(
)
{
for
(
int
ooi
=
0
;
ooi
<
ioo
;
++
ooi
)
{
for
(
int
oio
=
0
;
oio
<
ioo
;
++
oio
)
{
for
(
int
Olo
=
0
;
Olo
<
ioo
;
++
Olo
)
{
iOi
[
oio
]
[
Olo
]
=
ioi
(
iOi
[
oio
]
[
Olo
]
,
iOi
[
oio
]
[
ooi
]
+
iOi
[
ooi
]
[
Olo
]
)
;
}
}
}
for
(
int
Ioi
=
0
;
Ioi
<
IOi
;
++
Ioi
)
{
int
loi
,
Oii
;
Oio
(
"%d\045\144"
,
&
loi
,
&
Oii
)
;
--
loi
,
--
Oii
;
for
(
int
oio
=
0
;
oio
<
ioo
;
++
oio
)
{
lIo
[
oio
]
=
.0000000000001E031
;
Ooi
[
oio
]
=
0
;
}
lIo
[
loi
]
=
0
;
for
(
int
Ioi
=
0
;
Ioi
<
ioo
;
++
Ioi
)
{
int
oii
=
-
01
;
for
(
int
oio
=
0
;
oio
<
ioo
;
++
oio
)
{
if
(
Ooi
[
oio
]
)
{
continue
;
}
if
(
oii
==
-
01
||
lIo
[
oii
]
>
lIo
[
oio
]
)
{
oii
=
oio
;
}
}
Ooi
[
oii
]
=
01
;
for
(
int
iii
=
0
;
iii
<
ioo
;
++
iii
)
{
if
(
Ooi
[
iii
]
||
iOi
[
oii
]
[
iii
]
>
lOi
[
oii
]
[
0
]
)
{
continue
;
}
auto
Iii
=
lIo
[
oii
]
+
(
(
oi
)
iOi
[
oii
]
[
iii
]
/
lOi
[
oii
]
[
01
]
)
;
if
(
lIo
[
iii
]
>
Iii
)
{
lIo
[
iii
]
=
Iii
;
}
}
}
oIo
(
"%\056\061\070\146%c"
,
(
double
)
lIo
[
Oii
]
,
"\040\012"
[
Ioi
==
IOi
-
01
]
)
;
}
}
int
I0o
(
)
{
ooo
(
)
;
#ifdef \
l0o
O1o
(
l0
".out"
,
"\167"
,
o1o
)
;
iio
(
O1o
(
l0
".i\156"
,
"r"
,
i1o
)
)
;
#endif
int
I1o
;
Oio
(
"\045\144"
,
&
I1o
)
;
I1o
=
0
;
while
(
01
)
{
if
(
!
loo
(
)
)
{
break
;
}
oIo
(
"C\141se\040\043%\144\072\040"
,
++
I1o
)
;
lio
(
)
;
#ifdef \
O
Ii
(
"\124\151m\145\040\045.\062f\n"
,
(
double
)
l1o
(
)
/
OOi
)
;
#endif
}
return
0
;
}
