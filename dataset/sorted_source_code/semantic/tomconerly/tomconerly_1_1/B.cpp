#include \
<algorithm>
#include \
<cstdio>
#include \
<vector>
#include \
<cassert>
#include \
<string>
using
namespace
O
;
typedef
llo
O0o
;
i1o
I1o
(
O0o
l1o
,
O0o
OOi
,
O0o
oOi
)
{
i1o
lo
(
l1o
+
OOi
+
oOi
,
'\040'
)
;
iOi
<
IOi
<
O0o
,
char
>>
lOi
=
{
{
l1o
,
'\122'
}
,
{
OOi
,
'\131'
}
,
{
oOi
,
'\102'
}
}
;
Ooi
(
lOi
.
ooi
(
)
,
lOi
.
ioi
(
)
)
;
int
Ioi
=
0
;
for
(
O0o
oI
=
0
;
oI
<
lOi
[
02
]
.
loi
;
oI
++
)
{
lo
[
Ioi
]
=
lOi
[
02
]
.
Oii
;
Ioi
+=
02
;
}
Ioi
--
;
for
(
O0o
oI
=
0
;
oI
<
lOi
[
01
]
.
loi
;
oI
++
)
{
if
(
Ioi
<
lo
.
oii
(
)
)
{
lo
[
Ioi
]
=
lOi
[
01
]
.
Oii
;
Ioi
+=
02
;
}
else
{
Ioi
=
01
;
lo
[
Ioi
]
=
lOi
[
01
]
.
Oii
;
Ioi
+=
02
;
}
}
O0o
oOo
=
0
;
for
(
O0o
oI
=
0
;
oI
<
lo
.
oii
(
)
;
oI
++
)
{
if
(
lo
[
oI
]
==
'\040'
)
{
lo
[
oI
]
=
lOi
[
0
]
.
Oii
;
oOo
++
;
}
}
iii
(
oOo
==
lOi
[
0
]
.
loi
)
;
for
(
O0o
oI
=
0
;
oI
<
lo
.
oii
(
)
;
oI
++
)
{
iii
(
lo
[
oI
]
!=
lo
[
(
oI
+
01
)
%
lo
.
oii
(
)
]
)
;
iii
(
lo
[
oI
]
!=
'\040'
)
;
}
return
lo
;
}
i1o
Iii
(
i1o
lo
,
char
lii
,
char
Oo
,
O0o
OIi
)
{
if
(
OIi
==
0
)
return
lo
;
for
(
O0o
oI
=
0
;
oI
<
lo
.
oii
(
)
;
oI
++
)
{
if
(
lo
[
oI
]
==
lii
)
{
i1o
oIi
=
lo
.
iIi
(
0
,
oI
+
01
)
;
for
(
O0o
ol
=
0
;
ol
<
OIi
;
ol
++
)
{
oIi
+=
Oo
;
oIi
+=
lii
;
}
oIi
+=
lo
.
iIi
(
oI
+
01
)
;
return
oIi
;
}
}
iii
(
false
)
;
}
void
lOo
(
i1o
lo
,
O0o
IIi
,
O0o
lIi
,
O0o
Oli
,
O0o
oli
,
O0o
ili
,
O0o
Ili
)
{
iii
(
lo
.
oii
(
)
==
IIi
+
lIi
+
Oli
+
oli
+
ili
+
Ili
)
;
O0o
O0i
=
0
,
lii
=
0
,
oo
=
0
,
o0i
=
0
,
ooo
=
0
,
lOi
=
0
;
for
(
O0o
oI
=
0
;
oI
<
lo
.
oii
(
)
;
oI
++
)
{
O0o
i0i
=
(
oI
-
01
+
lo
.
oii
(
)
)
%
lo
.
oii
(
)
;
O0o
Oo
=
(
oI
+
01
+
lo
.
oii
(
)
)
%
lo
.
oii
(
)
;
if
(
lo
[
oI
]
==
'\107'
)
{
o0i
++
;
iii
(
lo
[
i0i
]
==
'\122'
)
;
iii
(
lo
[
Oo
]
==
'\122'
)
;
}
else
if
(
lo
[
oI
]
==
'\126'
)
{
lOi
++
;
iii
(
lo
[
i0i
]
==
'\131'
)
;
iii
(
lo
[
Oo
]
==
'\131'
)
;
}
else
if
(
lo
[
oI
]
==
'\117'
)
{
lii
++
;
iii
(
lo
[
i0i
]
==
'\102'
)
;
iii
(
lo
[
Oo
]
==
'\102'
)
;
}
else
{
iii
(
lo
[
i0i
]
!=
lo
[
oI
]
&&
lo
[
Oo
]
!=
lo
[
oI
]
)
;
}
if
(
lo
[
oI
]
==
'\122'
)
O0i
++
;
if
(
lo
[
oI
]
==
'\131'
)
oo
++
;
if
(
lo
[
oI
]
==
'\102'
)
ooo
++
;
}
iii
(
IIi
==
O0i
&&
lIi
==
lii
&&
Oli
==
oo
&&
oli
==
o0i
&&
ili
==
ooo
&&
Ili
==
lOi
)
;
}
int
i1
(
)
{
O0o
o0o
;
II
(
"%lld"
,
&
o0o
)
;
for
(
O0o
i0o
=
01
;
i0o
<=
o0o
;
i0o
++
)
{
O0o
IOo
,
IIi
,
lIi
,
Oli
,
oli
,
ili
,
Ili
;
II
(
"\045l\154d\040%\154l\144\040%lld\040\045l\154d %lld %l\154d \045ll\144"
,
&
IOo
,
&
IIi
,
&
lIi
,
&
Oli
,
&
oli
,
&
ili
,
&
Ili
)
;
O0o
l1o
=
IIi
-
oli
;
O0o
OOi
=
Oli
-
Ili
;
O0o
oOi
=
ili
-
lIi
;
if
(
l1o
<
0
||
OOi
<
0
||
oOi
<
0
||
o0
(
l1o
,
o0
(
OOi
,
oOi
)
)
*
02
>
(
l1o
+
OOi
+
oOi
)
)
{
O0
(
"C\141\163e #\045\154l\144: \111M\120O\123\123IB\114E\n"
,
i0o
)
;
continue
;
}
if
(
l1o
==
0
&&
OOi
==
0
&&
oOi
==
0
)
{
O0o
I0i
=
(
oli
>
0
?
01
:
0
)
+
(
Ili
>
0
?
01
:
0
)
+
(
lIi
>
0
?
01
:
0
)
;
iii
(
I0i
>
0
)
;
if
(
I0i
>
01
)
{
O0
(
"C\141s\145\040#%\154\154d: \111M\120OS\123\111\102\114E\012"
,
i0o
)
;
continue
;
}
i1o
lo
;
char
Ooo
,
ooo
;
if
(
oli
>
0
)
{
Ooo
=
'\122'
;
ooo
=
'\107'
;
}
else
if
(
Ili
>
0
)
{
Ooo
=
'\131'
;
ooo
=
'\126'
;
}
else
if
(
lIi
>
0
)
{
Ooo
=
'\102'
;
ooo
=
'\117'
;
}
for
(
O0o
oI
=
0
;
oI
<
o0
(
oli
,
o0
(
Ili
,
lIi
)
)
;
oI
++
)
{
lo
+=
Ooo
;
lo
+=
ooo
;
}
lOo
(
lo
,
IIi
,
lIi
,
Oli
,
oli
,
ili
,
Ili
)
;
O0
(
"Ca\163\145 \043\045\154l\144\072 \045\163\012"
,
i0o
,
lo
.
l0i
(
)
)
;
continue
;
}
if
(
(
l1o
==
0
&&
oli
>
0
)
||
(
OOi
==
0
&&
Ili
>
0
)
||
(
oOi
==
0
&&
lIi
>
0
)
)
{
O0
(
"\103\141s\145\040#%\154\154d:\040\111\115\120O\123SIB\114\105\012"
,
i0o
)
;
continue
;
}
auto
O1i
=
I1o
(
l1o
,
OOi
,
oOi
)
;
auto
o1i
=
Iii
(
O1i
,
'\122'
,
'\107'
,
oli
)
;
auto
i1i
=
Iii
(
o1i
,
'\131'
,
'\126'
,
Ili
)
;
auto
I1i
=
Iii
(
i1i
,
'\102'
,
'\117'
,
lIi
)
;
lOo
(
I1i
,
IIi
,
lIi
,
Oli
,
oli
,
ili
,
Ili
)
;
O0
(
"C\141\163\145\040\043%l\154\144\072 %\163\012"
,
i0o
,
I1i
.
l0i
(
)
)
;
}
}
