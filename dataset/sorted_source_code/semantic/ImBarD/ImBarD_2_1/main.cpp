#include \
<iostream>
#include \
<vector>
#include \
<algorithm>
#include \
<string>
#include \
<ctype.h>
#include \
<deque>
#include \
<queue>
#include \
<cstring>
#include \
<set>
#include \
<list>
#include \
<map>
#include \
<random>
#include \
<unordered_map>
#include \
<stdio.h>
using
namespace
O
;
typedef
long
long
o
;
typedef
long
double
Oo
;
typedef
O
::
oo
<
Oo
>
i1o
;
typedef
O
::
oo
<
i1o
>
I1o
;
typedef
O
::
oo
<
int
>
io
;
typedef
O
::
oo
<
bool
>
Io
;
typedef
O
::
oo
<
lo
>
Oi
;
typedef
O
::
oo
<
double
>
oi
;
typedef
O
::
oo
<
long
long
>
ii
;
typedef
O
::
oo
<
O
::
oo
<
int
>
>
Ii
;
typedef
oo
<
Ii
>
OI
;
typedef
oo
<
ii
>
oI
;
typedef
O
::
oo
<
O
::
iI
<
int
,
int
>
>
II
;
typedef
oo
<
II
>
Ol
;
typedef
O
::
iI
<
int
,
int
>
ol
;
typedef
O
::
iI
<
o
,
o
>
O0
;
typedef
O
::
oo
<
O0
>
o0
;
const
long
long
i0
=
07346545007
;
#define \
I0( \
l0 \
) \
( \
l0 \
) \
. \
O1 \
( \
) \
, \
( \
l0 \
) \
. \
o1 \
( \
)
#define \
i1( \
l0 \
) \
( \
int \
) \
( \
l0 \
) \
. \
I1 \
( \
)
#define \
l1( \
OOo \
, \
oOo \
, \
iOo \
) \
for \
( \
int \
OOo \
= \
oOo \
; \
OOo \
< \
iOo \
; \
OOo \
++ \
)
#define \
IOo \
  \
lOo
#define \
Ooo \
  \
ooo
int
ioo
(
)
{
#ifndef \
Ioo
loo
(
"\151np\165t\056\164x\164"
,
"r\164"
,
Oio
)
;
loo
(
"o\165\164\160\165\164\056t\170\164"
,
"\167t"
,
oio
)
;
#endif
int
iio
;
Iio
(
"%\144"
,
&
iio
)
;
l1
(
lio
,
0
,
iio
)
{
OIo
(
"\103\141\163\145 #%\144:"
,
lio
+
01
)
;
int
oIo
,
l1o
;
Iio
(
"\045d %\144"
,
&
oIo
,
&
l1o
)
;
ii
OOi
(
oIo
)
,
oOi
(
oIo
)
;
l1
(
OOo
,
0
,
oIo
)
{
Iio
(
"%\154\154\144 %\154\154d"
,
&
OOi
[
OOo
]
,
&
oOi
[
OOo
]
)
;
}
oI
iOi
(
oIo
,
ii
(
oIo
,
0
)
)
;
l1
(
OOo
,
0
,
oIo
)
l1
(
IOi
,
0
,
oIo
)
Iio
(
"\045l\154d"
,
&
iOi
[
OOo
]
[
IOi
]
)
;
const
o
lOi
=
0100.E016
;
l1
(
OOo
,
0
,
oIo
)
l1
(
IOi
,
0
,
oIo
)
if
(
iOi
[
OOo
]
[
IOi
]
==
-
01
)
iOi
[
OOo
]
[
IOi
]
=
lOi
;
for
(
int
I0o
=
0
;
I0o
<
oIo
;
++
I0o
)
for
(
int
OOo
=
0
;
OOo
<
oIo
;
++
OOo
)
for
(
int
IOi
=
0
;
IOi
<
oIo
;
++
IOi
)
if
(
iOi
[
OOo
]
[
I0o
]
<
lOi
&&
iOi
[
I0o
]
[
IOi
]
<
lOi
)
iOi
[
OOo
]
[
IOi
]
=
Ooi
(
iOi
[
OOo
]
[
IOi
]
,
iOi
[
OOo
]
[
I0o
]
+
iOi
[
I0o
]
[
IOi
]
)
;
const
Oo
ooi
=
.0000000000000001E034
;
I1o
ioi
(
oIo
,
i1o
(
oIo
,
02
*
ooi
)
)
;
l1
(
OOo
,
0
,
oIo
)
l1
(
IOi
,
0
,
oIo
)
{
if
(
iOi
[
OOo
]
[
IOi
]
<=
OOi
[
OOo
]
)
ioi
[
OOo
]
[
IOi
]
=
(
Oo
)
iOi
[
OOo
]
[
IOi
]
/
(
Oo
)
oOi
[
OOo
]
;
}
for
(
int
I0o
=
0
;
I0o
<
oIo
;
++
I0o
)
for
(
int
OOo
=
0
;
OOo
<
oIo
;
++
OOo
)
for
(
int
IOi
=
0
;
IOi
<
oIo
;
++
IOi
)
if
(
ioi
[
OOo
]
[
I0o
]
<
ooi
&&
ioi
[
I0o
]
[
IOi
]
<
ooi
)
ioi
[
OOo
]
[
IOi
]
=
Ooi
(
ioi
[
OOo
]
[
IOi
]
,
ioi
[
OOo
]
[
I0o
]
+
ioi
[
I0o
]
[
IOi
]
)
;
l1
(
OOo
,
0
,
l1o
)
{
int
Ioi
,
olo
;
Iio
(
"\045d %d"
,
&
Ioi
,
&
olo
)
;
Ioi
--
;
olo
--
;
OIo
(
"\040%\05610\154f"
,
(
double
)
ioi
[
Ioi
]
[
olo
]
)
;
}
OIo
(
"\012"
)
;
}
}
