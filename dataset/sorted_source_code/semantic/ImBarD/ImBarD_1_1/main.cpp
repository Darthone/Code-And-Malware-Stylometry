#include \
<iostream>
#include \
<vector>
#include \
<algorithm>
#include \
<string>
#include \
<ctype.h>
#include \
<deque>
#include \
<queue>
#include \
<cstring>
#include \
<set>
#include \
<list>
#include \
<map>
#include \
<random>
#include \
<unordered_map>
#include \
<stdio.h>
using
namespace
O
;
typedef
long
long
o
;
typedef
long
double
Oo
;
typedef
O
::
oo
<
int
>
io
;
typedef
O
::
oo
<
bool
>
Io
;
typedef
O
::
oo
<
lo
>
Oi
;
typedef
O
::
oo
<
double
>
oi
;
typedef
O
::
oo
<
long
long
>
ii
;
typedef
O
::
oo
<
O
::
oo
<
int
>
>
Ii
;
typedef
oo
<
Ii
>
OI
;
typedef
oo
<
ii
>
oI
;
typedef
O
::
oo
<
O
::
iI
<
int
,
int
>
>
II
;
typedef
oo
<
II
>
Ol
;
typedef
O
::
iI
<
int
,
int
>
ol
;
typedef
O
::
iI
<
o
,
o
>
O0
;
typedef
O
::
oo
<
O0
>
o0
;
const
long
long
i0
=
07346545007
;
#define \
I0( \
l0 \
) \
( \
l0 \
) \
. \
O1 \
( \
) \
, \
( \
l0 \
) \
. \
o1 \
( \
)
#define \
i1( \
l0 \
) \
( \
int \
) \
( \
l0 \
) \
. \
I1 \
( \
)
#define \
l1( \
OOo \
, \
oOo \
, \
iOo \
) \
for \
( \
int \
OOo \
= \
oOo \
; \
OOo \
< \
iOo \
; \
OOo \
++ \
)
#define \
IOo \
  \
lOo
#define \
Ooo \
  \
ooo
int
ioo
(
)
{
#ifndef \
Ioo
loo
(
"in\160\165t.t\170t"
,
"r\164"
,
Oio
)
;
loo
(
"\157\165tp\165t.txt"
,
"w\164"
,
oio
)
;
#endif
int
iio
;
Iio
(
"%d"
,
&
iio
)
;
l1
(
lio
,
0
,
iio
)
{
OIo
(
"C\141\163\145 #%d\072 "
,
lio
+
01
)
;
int
oIo
;
int
iIo
,
IIo
,
lIo
,
Olo
,
iOo
,
olo
;
lo
ilo
;
Ilo
>>
oIo
>>
iIo
>>
IIo
>>
lIo
>>
Olo
>>
iOo
>>
olo
;
if
(
iIo
+
lIo
==
0
)
{
if
(
Olo
>
0
||
olo
>
0
||
iOo
!=
IIo
)
{
llo
<<
"I\115\120O\123S\111\102\114\105\012"
;
continue
;
}
else
{
l1
(
OOo
,
0
,
iOo
)
ilo
+=
"BO"
;
llo
<<
ilo
<<
O0o
;
continue
;
}
}
if
(
iIo
+
iOo
==
0
)
{
if
(
Olo
>
0
||
IIo
>
0
||
lIo
!=
olo
)
{
llo
<<
"IM\120OS\123I\102\114\105\012"
;
continue
;
}
else
{
l1
(
OOo
,
0
,
lIo
)
ilo
+=
"\131\126"
;
llo
<<
ilo
<<
O0o
;
continue
;
}
}
if
(
iOo
+
lIo
==
0
)
{
if
(
IIo
>
0
||
olo
>
0
||
iIo
!=
Olo
)
{
llo
<<
"I\115\120OSS\111\102LE\012"
;
continue
;
}
else
{
l1
(
OOo
,
0
,
Olo
)
ilo
+=
"R\107"
;
llo
<<
ilo
<<
O0o
;
continue
;
}
}
iIo
-=
Olo
;
lIo
-=
olo
;
iOo
-=
IIo
;
if
(
iIo
<
0
||
lIo
<
0
||
iOo
<
0
)
{
llo
<<
"\111MP\117SSIB\114E\012"
;
continue
;
}
if
(
iIo
==
0
&&
Olo
>
0
)
{
llo
<<
"IM\120\117\123\123\111\102\114\105\n"
;
continue
;
}
if
(
lIo
==
0
&&
olo
>
0
)
{
llo
<<
"I\115\120O\123SIB\114\105\012"
;
continue
;
}
if
(
iOo
==
0
&&
IIo
>
0
)
{
llo
<<
"IM\120\117S\123\111BLE\n"
;
continue
;
}
if
(
iIo
+
lIo
<
iOo
||
iIo
+
iOo
<
lIo
||
iOo
+
lIo
<
iIo
)
{
llo
<<
"I\115\120\117\123S\111\102LE\012"
;
continue
;
}
int
o0o
=
iIo
+
lIo
+
iOo
;
ilo
=
lo
(
o0o
,
'\056'
)
;
int
i0o
=
0
;
if
(
02
*
iIo
==
o0o
)
{
l1
(
OOo
,
0
,
iIo
)
{
ilo
[
02
*
OOo
]
=
'\122'
;
}
l1
(
OOo
,
0
,
iIo
)
{
if
(
lIo
>
0
)
{
ilo
[
02
*
OOo
+
01
]
=
'\131'
;
lIo
--
;
}
else
ilo
[
02
*
OOo
+
01
]
=
'\102'
;
}
}
else
if
(
02
*
iOo
==
o0o
)
{
l1
(
OOo
,
0
,
iOo
)
{
ilo
[
02
*
OOo
]
=
'\102'
;
}
l1
(
OOo
,
0
,
iOo
)
{
if
(
lIo
>
0
)
{
ilo
[
02
*
OOo
+
01
]
=
'\131'
;
lIo
--
;
}
else
ilo
[
02
*
OOo
+
01
]
=
'\122'
;
}
}
else
if
(
02
*
lIo
==
o0o
)
{
l1
(
OOo
,
0
,
lIo
)
{
ilo
[
02
*
OOo
]
=
'\131'
;
}
l1
(
OOo
,
0
,
lIo
)
{
if
(
iIo
>
0
)
{
ilo
[
02
*
OOo
+
01
]
=
'\122'
;
iIo
--
;
}
else
ilo
[
02
*
OOo
+
01
]
=
'\102'
;
}
}
else
{
l1
(
OOo
,
0
,
o0o
)
{
if
(
iIo
>
0
)
{
ilo
[
i0o
]
=
'\122'
;
iIo
--
;
}
else
if
(
lIo
>
0
)
{
ilo
[
i0o
]
=
'\131'
;
lIo
--
;
}
else
if
(
iOo
>
0
)
{
ilo
[
i0o
]
=
'\102'
;
iOo
--
;
}
i0o
+=
02
;
if
(
i0o
>=
o0o
)
i0o
=
01
;
}
}
if
(
Olo
>
0
)
{
int
I0o
=
0
;
while
(
ilo
[
I0o
]
!=
'\122'
)
I0o
++
;
lo
l0o
=
ilo
.
O1o
(
0
,
I0o
)
;
lo
o1o
=
ilo
.
O1o
(
I0o
)
;
l1
(
OOo
,
0
,
Olo
)
l0o
+=
"RG"
;
ilo
=
l0o
+
o1o
;
}
if
(
olo
>
0
)
{
int
I0o
=
0
;
while
(
ilo
[
I0o
]
!=
'\131'
)
I0o
++
;
lo
l0o
=
ilo
.
O1o
(
0
,
I0o
)
;
lo
o1o
=
ilo
.
O1o
(
I0o
)
;
l1
(
OOo
,
0
,
olo
)
l0o
+=
"\131V"
;
ilo
=
l0o
+
o1o
;
}
if
(
IIo
>
0
)
{
int
I0o
=
0
;
while
(
ilo
[
I0o
]
!=
'\102'
)
I0o
++
;
lo
l0o
=
ilo
.
O1o
(
0
,
I0o
)
;
lo
o1o
=
ilo
.
O1o
(
I0o
)
;
l1
(
OOo
,
0
,
IIo
)
l0o
+=
"\102\117"
;
ilo
=
l0o
+
o1o
;
}
llo
<<
ilo
<<
O0o
;
}
}
