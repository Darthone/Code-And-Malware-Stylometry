#include \
<iostream>
#include \
<vector>
#include \
<algorithm>
#include \
<string>
#include \
<ctype.h>
#include \
<deque>
#include \
<queue>
#include \
<cstring>
#include \
<set>
#include \
<list>
#include \
<map>
#include \
<random>
#include \
<unordered_map>
#include \
<stdio.h>
using
namespace
O
;
typedef
long
long
lio
;
typedef
long
double
Ilo
;
typedef
O
::
OI
<
int
>
llo
;
typedef
O
::
OI
<
bool
>
O0o
;
typedef
O
::
OI
<
I0
>
o0o
;
typedef
O
::
OI
<
double
>
i0o
;
typedef
O
::
OI
<
long
long
>
I0o
;
typedef
O
::
OI
<
O
::
OI
<
int
>
>
l0o
;
typedef
OI
<
l0o
>
O1o
;
typedef
OI
<
I0o
>
o1o
;
typedef
O
::
OI
<
O
::
i1o
<
int
,
int
>
>
I1o
;
typedef
OI
<
I1o
>
l1o
;
typedef
O
::
i1o
<
int
,
int
>
OOi
;
typedef
O
::
i1o
<
lio
,
lio
>
oOi
;
typedef
O
::
OI
<
oOi
>
iOi
;
const
long
long
IOi
=
07346545007
;
#define \
lOi( \
Ooi \
) \
( \
Ooi \
) \
. \
ooi \
( \
) \
, \
( \
Ooi \
) \
. \
ioi \
( \
)
#define \
Ioi( \
Ooi \
) \
( \
int \
) \
( \
Ooi \
) \
. \
loi \
( \
)
#define \
o( \
Oo \
, \
o1 \
, \
i1 \
) \
for \
( \
int \
Oo \
= \
o1 \
; \
Oo \
< \
i1 \
; \
Oo \
++ \
)
#define \
Oii \
  \
oii
#define \
iii \
  \
Iii
int
ol
(
)
{
#ifndef \
lii
OIi
(
"inpu\164.\164x\164"
,
"\162\164"
,
oIi
)
;
OIi
(
"o\165\164pu\164.\164\170t"
,
"w\164"
,
iIi
)
;
#endif
int
iI
;
Ii
(
"%d"
,
&
iI
)
;
o
(
IIi
,
0
,
iI
)
{
Ol
(
"\103ase #\045d: "
,
IIi
+
01
)
;
int
oo
;
int
oli
,
ili
,
Ili
,
O0i
,
i1
,
o0i
;
I0
l0
;
lIi
>>
oo
>>
oli
>>
ili
>>
Ili
>>
O0i
>>
i1
>>
o0i
;
if
(
oli
+
Ili
==
0
)
{
if
(
O0i
>
0
||
o0i
>
0
||
i1
!=
ili
)
{
i0i
<<
"\111M\120O\123\123\111B\114E\012"
;
continue
;
}
else
{
o
(
Oo
,
0
,
i1
)
l0
+=
"\102\117"
;
i0i
<<
l0
<<
I0i
;
continue
;
}
}
if
(
oli
+
i1
==
0
)
{
if
(
O0i
>
0
||
ili
>
0
||
Ili
!=
o0i
)
{
i0i
<<
"I\115P\117SSIB\114E\n"
;
continue
;
}
else
{
o
(
Oo
,
0
,
Ili
)
l0
+=
"Y\126"
;
i0i
<<
l0
<<
I0i
;
continue
;
}
}
if
(
i1
+
Ili
==
0
)
{
if
(
ili
>
0
||
o0i
>
0
||
oli
!=
O0i
)
{
i0i
<<
"I\115P\117SS\111\102\114\105\012"
;
continue
;
}
else
{
o
(
Oo
,
0
,
O0i
)
l0
+=
"RG"
;
i0i
<<
l0
<<
I0i
;
continue
;
}
}
oli
-=
O0i
;
Ili
-=
o0i
;
i1
-=
ili
;
if
(
oli
<
0
||
Ili
<
0
||
i1
<
0
)
{
i0i
<<
"IM\120\117\123\123\111\102LE\012"
;
continue
;
}
if
(
oli
==
0
&&
O0i
>
0
)
{
i0i
<<
"\111M\120OSSIBLE\n"
;
continue
;
}
if
(
Ili
==
0
&&
o0i
>
0
)
{
i0i
<<
"IMPO\123S\111B\114\105\n"
;
continue
;
}
if
(
i1
==
0
&&
ili
>
0
)
{
i0i
<<
"IM\120O\123\123IB\114\105\012"
;
continue
;
}
if
(
oli
+
Ili
<
i1
||
oli
+
i1
<
Ili
||
i1
+
Ili
<
oli
)
{
i0i
<<
"\111M\120O\123S\111B\114E\n"
;
continue
;
}
int
Oio
=
oli
+
Ili
+
i1
;
l0
=
I0
(
Oio
,
'\056'
)
;
int
l0i
=
0
;
if
(
02
*
oli
==
Oio
)
{
o
(
Oo
,
0
,
oli
)
{
l0
[
02
*
Oo
]
=
'\122'
;
}
o
(
Oo
,
0
,
oli
)
{
if
(
Ili
>
0
)
{
l0
[
02
*
Oo
+
01
]
=
'\131'
;
Ili
--
;
}
else
l0
[
02
*
Oo
+
01
]
=
'\102'
;
}
}
else
if
(
02
*
i1
==
Oio
)
{
o
(
Oo
,
0
,
i1
)
{
l0
[
02
*
Oo
]
=
'\102'
;
}
o
(
Oo
,
0
,
i1
)
{
if
(
Ili
>
0
)
{
l0
[
02
*
Oo
+
01
]
=
'\131'
;
Ili
--
;
}
else
l0
[
02
*
Oo
+
01
]
=
'\122'
;
}
}
else
if
(
02
*
Ili
==
Oio
)
{
o
(
Oo
,
0
,
Ili
)
{
l0
[
02
*
Oo
]
=
'\131'
;
}
o
(
Oo
,
0
,
Ili
)
{
if
(
oli
>
0
)
{
l0
[
02
*
Oo
+
01
]
=
'\122'
;
oli
--
;
}
else
l0
[
02
*
Oo
+
01
]
=
'\102'
;
}
}
else
{
o
(
Oo
,
0
,
Oio
)
{
if
(
oli
>
0
)
{
l0
[
l0i
]
=
'\122'
;
oli
--
;
}
else
if
(
Ili
>
0
)
{
l0
[
l0i
]
=
'\131'
;
Ili
--
;
}
else
if
(
i1
>
0
)
{
l0
[
l0i
]
=
'\102'
;
i1
--
;
}
l0i
+=
02
;
if
(
l0i
>=
Oio
)
l0i
=
01
;
}
}
if
(
O0i
>
0
)
{
int
olo
=
0
;
while
(
l0
[
olo
]
!=
'\122'
)
olo
++
;
I0
O1i
=
l0
.
o1i
(
0
,
olo
)
;
I0
i1i
=
l0
.
o1i
(
olo
)
;
o
(
Oo
,
0
,
O0i
)
O1i
+=
"RG"
;
l0
=
O1i
+
i1i
;
}
if
(
o0i
>
0
)
{
int
olo
=
0
;
while
(
l0
[
olo
]
!=
'\131'
)
olo
++
;
I0
O1i
=
l0
.
o1i
(
0
,
olo
)
;
I0
i1i
=
l0
.
o1i
(
olo
)
;
o
(
Oo
,
0
,
o0i
)
O1i
+=
"\131V"
;
l0
=
O1i
+
i1i
;
}
if
(
ili
>
0
)
{
int
olo
=
0
;
while
(
l0
[
olo
]
!=
'\102'
)
olo
++
;
I0
O1i
=
l0
.
o1i
(
0
,
olo
)
;
I0
i1i
=
l0
.
o1i
(
olo
)
;
o
(
Oo
,
0
,
ili
)
O1i
+=
"B\117"
;
l0
=
O1i
+
i1i
;
}
i0i
<<
l0
<<
I0i
;
}
}
