#include \
<iostream>
#include \
<vector>
#include \
<algorithm>
#include \
<map>
#include \
<set>
#include \
<queue>
#include \
<cstdio>
#include \
<cassert>
using
namespace
O
;
o
Oo
(
int
oo
,
char
io
,
char
Io
)
{
o
lo
;
for
(
int
Oi
=
0
;
Oi
<
oo
;
Oi
++
)
{
lo
+=
io
;
lo
+=
Io
;
}
return
lo
;
}
o
oi
(
const
o
&
lo
,
int
oo
,
char
io
,
char
Io
)
{
if
(
oo
==
0
)
return
lo
;
o
ii
=
Oo
(
oo
,
io
,
Io
)
;
for
(
int
Oi
=
0
;
Oi
<
lo
.
Ii
(
)
;
Oi
++
)
{
if
(
lo
[
Oi
]
==
io
)
{
return
lo
.
OI
(
0
,
Oi
)
+
ii
+
lo
.
OI
(
Oi
)
;
}
}
return
""
;
}
o
oI
(
int
oo
,
int
iI
,
int
II
,
int
Ol
,
int
ol
,
int
O0
,
int
o0
)
{
if
(
iI
+
ol
==
oo
&&
iI
==
ol
)
{
return
Oo
(
iI
,
'\122'
,
'\107'
)
;
}
if
(
Ol
+
o0
==
oo
&&
Ol
==
o0
)
{
return
Oo
(
Ol
,
'\131'
,
'\126'
)
;
}
if
(
O0
+
II
==
oo
&&
O0
==
II
)
{
return
Oo
(
O0
,
'\102'
,
'\117'
)
;
}
bool
i0
=
false
;
if
(
II
>
0
)
{
O0
-=
II
;
if
(
O0
<=
0
)
{
return
""
;
}
}
if
(
ol
>
0
)
{
iI
-=
ol
;
if
(
iI
<=
0
)
{
return
""
;
}
}
if
(
o0
>
0
)
{
Ol
-=
o0
;
if
(
Ol
<=
0
)
{
return
""
;
}
}
I0
<
l0
<
int
,
char
>
>
O1
;
O1
.
o1
(
i1
(
iI
,
'\122'
)
)
;
O1
.
o1
(
i1
(
Ol
,
'\131'
)
)
;
O1
.
o1
(
i1
(
O0
,
'\102'
)
)
;
I1
(
O1
.
l1
(
)
,
O1
.
OOo
(
)
)
;
if
(
O1
[
0
]
.
oOo
>
O1
[
01
]
.
oOo
+
O1
[
02
]
.
oOo
)
{
return
""
;
}
o
lo
(
iI
+
Ol
+
O0
,
'\077'
)
;
for
(
int
Oi
=
0
;
Oi
<
O1
[
0
]
.
oOo
;
Oi
++
)
{
lo
[
02
*
Oi
]
=
O1
[
0
]
.
iOo
;
}
for
(
int
Oi
=
02
*
O1
[
0
]
.
oOo
-
01
;
Oi
<
iI
+
Ol
+
O0
;
Oi
++
)
{
if
(
lo
[
Oi
-
01
]
==
O1
[
01
]
.
iOo
)
{
lo
[
Oi
]
=
O1
[
02
]
.
iOo
;
O1
[
02
]
.
oOo
--
;
}
else
{
lo
[
Oi
]
=
O1
[
01
]
.
iOo
;
O1
[
01
]
.
oOo
--
;
}
}
for
(
int
Oi
=
0
;
Oi
<
lo
.
Ii
(
)
;
Oi
++
)
{
if
(
lo
[
Oi
]
==
'\077'
)
{
if
(
O1
[
01
]
.
oOo
>
0
)
{
O1
[
01
]
.
oOo
--
;
lo
[
Oi
]
=
O1
[
01
]
.
iOo
;
}
else
{
O1
[
02
]
.
oOo
--
;
lo
[
Oi
]
=
O1
[
02
]
.
iOo
;
}
}
}
IOo
(
O1
[
01
]
.
oOo
==
0
)
;
IOo
(
O1
[
02
]
.
oOo
==
0
)
;
lo
=
oi
(
lo
,
II
,
'\102'
,
'\117'
)
;
lo
=
oi
(
lo
,
ol
,
'\122'
,
'\107'
)
;
lo
=
oi
(
lo
,
o0
,
'\131'
,
'\126'
)
;
return
lo
;
}
void
loo
(
const
o
&
lo
,
int
iI
,
int
II
,
int
Ol
,
int
ol
,
int
O0
,
int
o0
)
{
Oio
<
char
,
int
>
oio
;
Oio
<
char
,
int
>
iio
;
oio
[
'\122'
]
=
iI
;
oio
[
'\117'
]
=
II
;
oio
[
'\131'
]
=
Ol
;
oio
[
'\107'
]
=
ol
;
oio
[
'\102'
]
=
O0
;
oio
[
'\126'
]
=
o0
;
iio
[
'\122'
]
=
001
;
iio
[
'\117'
]
=
021
;
iio
[
'\131'
]
=
020
;
iio
[
'\107'
]
=
0420
;
iio
[
'\102'
]
=
0400
;
iio
[
'\126'
]
=
0401
;
for
(
int
Oi
=
0
;
Oi
<
lo
.
Ii
(
)
;
Oi
++
)
{
if
(
--
oio
[
lo
[
Oi
]
]
<
0
)
{
Iio
<<
"F\101\111\114\040CHECK"
<<
Ioo
;
lio
(
01
)
;
}
}
for
(
auto
Oi
:
oio
)
{
if
(
Oi
.
iOo
>
0
)
{
Iio
<<
"F\101\111L\040CHEC\113\0402"
<<
Ioo
;
lio
(
01
)
;
}
}
for
(
int
Oi
=
0
;
Oi
<
lo
.
Ii
(
)
;
Oi
++
)
{
char
OIo
=
lo
[
Oi
]
;
char
oIo
=
lo
[
(
Oi
+
01
)
%
lo
.
Ii
(
)
]
;
if
(
iio
[
OIo
]
&
iio
[
oIo
]
)
{
Iio
<<
"\106A\111\114 \103H\105\103\113 3"
<<
Ioo
;
lio
(
01
)
;
}
}
}
int
lOo
(
)
{
int
ii
;
Ooo
>>
ii
;
for
(
int
ooo
=
01
;
ooo
<=
ii
;
ooo
++
)
{
int
oo
,
iI
,
II
,
Ol
,
ol
,
O0
,
o0
;
Ooo
>>
oo
>>
iI
>>
II
>>
Ol
>>
ol
>>
O0
>>
o0
;
o
lo
=
oI
(
oo
,
iI
,
II
,
Ol
,
ol
,
O0
,
o0
)
;
if
(
lo
.
Ii
(
)
==
0
)
{
lo
=
"\111\115P\117S\123IB\114\105"
;
}
else
{
loo
(
lo
,
iI
,
II
,
Ol
,
ol
,
O0
,
o0
)
;
}
ioo
<<
"\103a\163\145\040#"
<<
ooo
<<
":\040"
<<
lo
<<
Ioo
;
}
return
0
;
}
