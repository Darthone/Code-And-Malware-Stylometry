#pragma \
Ooo \
( \
ooo \
: \
011604 \
)
#pragma \
ioo \
( \
Ioo \
, \
"\057S\124\101C\113\072\06367\0677\0621\066" \
)
#include \
<stdio.h>
#include \
<algorithm>
#include \
<vector>
#include \
<string>
#include \
<memory.h>
using
namespace
O
;
olo
ilo
(
int
ii
,
int
Ilo
,
int
llo
,
int
O0o
)
{
if
(
ii
==
01
)
{
if
(
Ilo
==
01
)
return
"\122"
;
if
(
llo
==
01
)
return
"Y"
;
if
(
O0o
==
01
)
return
"B"
;
}
o0o
<
oo
<
int
,
olo
>
>
Ol
;
Ol
.
i0o
(
I0o
(
Ilo
,
"\122"
)
)
;
Ol
.
i0o
(
I0o
(
llo
,
"\131"
)
)
;
Ol
.
i0o
(
I0o
(
O0o
,
"\102"
)
)
;
l0o
(
Ol
.
O1o
(
)
,
Ol
.
o1o
(
)
)
;
olo
i1o
=
""
;
if
(
Ol
[
02
]
.
I1o
>
Ol
[
0
]
.
I1o
+
Ol
[
01
]
.
I1o
)
return
""
;
while
(
Ol
[
02
]
.
I1o
>
0
)
{
i1o
+=
Ol
[
02
]
.
l1o
;
Ol
[
02
]
.
I1o
--
;
int
OOi
=
0
;
for
(
int
oOi
=
0
;
oOi
<=
01
;
oOi
++
)
{
if
(
Ol
[
oOi
]
.
I1o
>
Ol
[
02
]
.
I1o
)
{
i1o
+=
Ol
[
oOi
]
.
l1o
;
Ol
[
oOi
]
.
I1o
--
;
OOi
=
01
;
}
}
if
(
OOi
==
0
)
{
if
(
Ol
[
01
]
.
I1o
<=
Ol
[
0
]
.
I1o
)
{
i1o
+=
Ol
[
0
]
.
l1o
;
Ol
[
0
]
.
I1o
--
;
}
else
{
i1o
+=
Ol
[
01
]
.
l1o
;
Ol
[
01
]
.
I1o
--
;
}
}
}
return
i1o
;
}
olo
iOi
(
int
ii
,
int
Ilo
,
int
IOi
,
int
llo
,
int
lOi
,
int
O0o
,
int
Iio
)
{
if
(
ii
==
01
)
{
if
(
Ilo
==
01
)
return
"R"
;
if
(
llo
==
01
)
return
"Y"
;
if
(
O0o
==
01
)
return
"\102"
;
if
(
IOi
==
01
)
return
"\117"
;
if
(
lOi
==
01
)
return
"\107"
;
if
(
Iio
==
01
)
return
"\126"
;
}
olo
i1o
=
""
;
for
(
int
I1
=
0
;
I1
<
03
;
I1
++
)
{
int
*
Ooi
,
*
ooi
;
olo
ioi
=
""
;
if
(
I1
==
0
)
{
Ooi
=
&
Iio
;
ooi
=
&
llo
;
ioi
=
"\126\131"
;
}
else
if
(
I1
==
01
)
{
Ooi
=
&
IOi
;
ooi
=
&
O0o
;
ioi
=
"O\102"
;
}
else
{
Ooi
=
&
lOi
;
ooi
=
&
Ilo
;
ioi
=
"\107R"
;
}
if
(
*
Ooi
>
0
)
{
*
ooi
-=
*
Ooi
;
if
(
*
ooi
==
0
)
{
if
(
(
*
Ooi
)
*
02
==
ii
)
{
for
(
int
I1
=
0
;
I1
<
(
*
Ooi
)
;
I1
++
)
i1o
+=
ioi
;
return
i1o
;
}
else
{
return
""
;
}
}
if
(
*
ooi
<
0
)
return
""
;
}
}
i1o
=
ilo
(
ii
,
Ilo
,
llo
,
O0o
)
;
if
(
i1o
.
Ioi
(
)
==
0
)
return
""
;
for
(
int
I1
=
0
;
I1
<
03
;
I1
++
)
{
int
*
Ooi
,
*
ooi
;
olo
ioi
=
""
;
if
(
I1
==
0
)
{
Ooi
=
&
Iio
;
ooi
=
&
llo
;
ioi
=
"\126\131"
;
}
else
if
(
I1
==
01
)
{
Ooi
=
&
IOi
;
ooi
=
&
O0o
;
ioi
=
"O\102"
;
}
else
{
Ooi
=
&
lOi
;
ooi
=
&
Ilo
;
ioi
=
"\107\122"
;
}
if
(
*
Ooi
>
0
)
{
olo
loi
=
i1o
;
bool
I1o
=
true
;
i1o
=
""
;
for
(
int
l1
=
0
;
l1
<
loi
.
Ioi
(
)
;
l1
++
)
{
i1o
+=
loi
[
l1
]
;
if
(
I1o
&&
loi
[
l1
]
==
ioi
[
01
]
)
{
for
(
int
I1
=
0
;
I1
<
(
*
Ooi
)
;
I1
++
)
i1o
+=
ioi
;
I1o
=
false
;
}
}
}
}
return
i1o
;
}
int
o0
(
)
{
i0
(
"\102\055\154a\162\147e.\151\156"
,
"r"
,
I0
)
;
i0
(
"B\055\154\141rg\145\056o\165t"
,
"\167"
,
l0
)
;
int
O1
;
o1
(
"\045d"
,
&
O1
)
;
int
ii
,
Ilo
,
IOi
,
llo
,
lOi
,
O0o
,
Iio
;
while
(
O1
--
>
0
)
{
o1
(
"%\144 \045d\040\045\144 \045\144 %\144 \045\144\040%\144"
,
&
ii
,
&
Ilo
,
&
IOi
,
&
llo
,
&
lOi
,
&
O0o
,
&
Iio
)
;
olo
Oii
=
iOi
(
ii
,
Ilo
,
IOi
,
llo
,
lOi
,
O0o
,
Iio
)
;
static
int
iIo
=
01
;
if
(
Oii
.
Ioi
(
)
==
0
)
Oii
=
"IMPO\123S\111B\114\105"
;
else
if
(
Oii
.
Ioi
(
)
!=
ii
)
lo
(
Oi
,
"\105R\122\117R \045d\040\072 \045d\040\045\144 %\144 %\144 \045d %d %\144\040\075\076\040\045s\012"
,
iIo
,
ii
,
Ilo
,
IOi
,
llo
,
lOi
,
O0o
,
Iio
,
Oii
.
oii
(
)
)
;
iOo
(
"Ca\163e\040\043%\144:\040%s\n"
,
iIo
++
,
Oii
.
oii
(
)
)
;
}
return
0
;
}
