#pragma \
Ooo \
( \
ooo \
: \
011604 \
)
#pragma \
ioo \
( \
Ioo \
, \
"\057\123\124A\103K\072\063\066\067\0677216" \
)
#include \
<stdio.h>
#include \
<algorithm>
#include \
<vector>
#include \
<string>
#include \
<memory.h>
using
namespace
O
;
double
loo
[
03720
]
,
Ol
[
03720
]
;
double
Oio
;
int
ii
;
const
double
oio
=
0100000000.E-017
;
bool
iio
(
double
Iio
)
{
for
(
int
I1
=
0
;
I1
<
ii
;
I1
++
)
{
double
lio
=
Iio
-
Ol
[
I1
]
;
if
(
lio
<=
oio
)
continue
;
double
OIo
=
loo
[
I1
]
/
(
Iio
-
Ol
[
I1
]
)
;
double
oIo
=
OIo
*
Iio
;
if
(
oIo
<
Oio
)
return
false
;
}
return
true
;
}
int
o0
(
)
{
i0
(
"A\055\163m\141\154\154\055a\164\164e\155\160\164\060.\151\156"
,
"r"
,
I0
)
;
i0
(
"A\055\163ma\154l-\141ttem\160t\060.ou\164"
,
"\167"
,
l0
)
;
int
O1
;
o1
(
"%d"
,
&
O1
)
;
while
(
O1
--
>
0
)
{
o1
(
"%\154f\040\045\144"
,
&
Oio
,
&
ii
)
;
for
(
int
I1
=
0
;
I1
<
ii
;
I1
++
)
{
o1
(
"%\154f %\154f"
,
&
loo
[
I1
]
,
&
Ol
[
I1
]
)
;
}
static
int
iIo
=
01
;
double
IIo
=
00000000000.
,
lIo
=
.00000000000000001E017
;
while
(
iio
(
lIo
)
)
lIo
*=
02000000.E-06
;
for
(
int
I1
=
0
;
I1
<
023420
;
I1
++
)
{
double
Olo
=
(
IIo
+
lIo
)
/
02
;
if
(
iio
(
Olo
)
)
IIo
=
Olo
;
else
lIo
=
Olo
;
}
iOo
(
"\103\141\163e\040\043\045\144\072\040%\056\071\154\146\012"
,
iIo
++
,
lIo
)
;
}
return
0
;
}
