#include \
<cstdio>
#include \
<cstring>
#include \
<cmath>
#include \
<algorithm>
#include \
<vector>
#include \
<string>
#include \
<map>
#include \
<set>
#include \
<cassert>
using
namespace
O
;
#define \
o( \
Oo \
, \
oo \
, \
io \
) \
for \
( \
int \
Oo \
= \
oo \
; \
Oo \
< \
io \
; \
Oo \
++ \
)
#define \
Io( \
Oo \
, \
oo \
, \
io \
) \
for \
( \
int \
Oo \
= \
io \
- \
01 \
; \
Oo \
>= \
oo \
; \
Oo \
-- \
)
#define \
lo \
  \
Oi
#define \
oi \
  \
ii
#define \
Ii( \
OI \
) \
( \
OI \
) \
. \
oI \
( \
) \
, \
( \
OI \
) \
. \
iI \
( \
)
#define \
II \
  \
Ol
#define \
ol \
  \
O0
#define \
o0( \
OI \
) \
( \
( \
int \
) \
( \
OI \
) \
. \
i0 \
( \
) \
)
typedef
I0
<
int
>
l0
;
typedef
long
long
O1
;
typedef
o1
<
int
,
int
>
i1
;
const
O1
I1
=
07346545007
;
O1
l1
(
O1
oo
,
O1
OOo
)
{
O1
oOo
=
01
;
oo
%=
I1
;
iOo
(
OOo
>=
0
)
;
for
(
;
OOo
;
OOo
>>=
01
)
{
if
(
OOo
&
01
)
oOo
=
oOo
*
oo
%
I1
;
oo
=
oo
*
oo
%
I1
;
}
return
oOo
;
}
int
IOo
,
lOo
,
Ooo
,
OI
,
ooo
,
ioo
;
int
Ioo
(
)
{
for
(
loo
(
"%\144"
,
&
IOo
)
;
IOo
;
IOo
--
)
{
loo
(
"%d%d"
,
&
lOo
,
&
Ooo
)
;
double
Oio
=
0
;
o
(
Oo
,
0
,
Ooo
)
{
loo
(
"%\144\045d"
,
&
OI
,
&
ooo
)
;
Oio
=
oio
(
Oio
,
(
double
)
(
lOo
-
OI
)
/
ooo
)
;
}
iio
(
"\103\141\163e \043%\144:\040%.10\146\n"
,
++
ioo
,
lOo
/
Oio
)
;
}
}
