#include \
<vector>
#include \
<string>
#include \
<stdlib.h>
#include \
<math.h>
#include \
<iostream>
#include \
<fstream>
#include \
<algorithm>
#include \
<sstream>
#include \
<map>
#include \
<ctime>
#include \
<cassert>
using
namespace
O
;
O1o
o1o
(
"\056.\057../\056.\057\157u\164p\165t\056t\170\164"
)
;
i1o
I1o
(
"\056./.\056\057.\056/\151\156p\165t\056txt"
)
;
int
lOo
(
void
)
{
int
l1o
=
0
;
I1o
>>
l1o
;
int
OOi
=
0
;
o
oOi
;
ioo
.
iOi
(
011
)
;
o1o
.
iOi
(
011
)
;
ioo
<<
"H\105\114\114\117"
<<
" "
<<
l1o
<<
Ioo
;
while
(
l1o
>
0
)
{
OOi
++
;
l1o
--
;
o
IOi
;
int
Oi
,
llo
,
O0o
;
int
loi
,
Oii
,
oii
,
iii
,
ioi
,
Iii
;
int
lOi
;
I1o
>>
lOi
>>
loi
>>
Iii
>>
oii
>>
Oii
>>
ioi
>>
iii
;
I0
<
o
>
lii
;
I0
<
o
>
OIi
;
I0
<
o
>
oIi
;
bool
iIi
=
true
;
if
(
oii
+
iii
==
lOi
&&
oii
==
iii
)
{
for
(
Oi
=
0
;
Oi
<
oii
;
Oi
++
)
{
IOi
+=
"Y\126"
;
}
}
else
if
(
loi
+
Oii
==
lOi
&&
loi
==
Oii
)
{
for
(
Oi
=
0
;
Oi
<
loi
;
Oi
++
)
{
IOi
+=
"RG"
;
}
}
else
if
(
ioi
+
Iii
==
lOi
&&
ioi
==
Iii
)
{
for
(
Oi
=
0
;
Oi
<
ioi
;
Oi
++
)
{
IOi
+=
"BO"
;
}
}
else
{
if
(
Oii
>
0
)
{
o
oOi
=
"\122"
;
for
(
Oi
=
0
;
Oi
<
Oii
;
Oi
++
)
{
oOi
+=
"\107\122"
;
}
lii
.
o1
(
oOi
)
;
loi
-=
(
Oii
+
01
)
;
}
if
(
Iii
>
0
)
{
o
oOi
=
"B"
;
for
(
Oi
=
0
;
Oi
<
Iii
;
Oi
++
)
{
oOi
+=
"O\102"
;
}
oIi
.
o1
(
oOi
)
;
ioi
-=
(
Iii
+
01
)
;
}
if
(
iii
>
0
)
{
o
oOi
=
"Y"
;
for
(
Oi
=
0
;
Oi
<
iii
;
Oi
++
)
{
oOi
+=
"\126Y"
;
}
OIi
.
o1
(
oOi
)
;
oii
-=
(
iii
+
01
)
;
}
}
if
(
loi
<
0
||
ioi
<
0
||
oii
<
0
)
{
iIi
=
false
;
}
else
if
(
IOi
.
Ii
(
)
==
0
)
{
while
(
loi
>
0
)
{
lii
.
o1
(
"R"
)
;
loi
--
;
}
while
(
oii
>
0
)
{
OIi
.
o1
(
"Y"
)
;
oii
--
;
}
while
(
ioi
>
0
)
{
oIi
.
o1
(
"B"
)
;
ioi
--
;
}
I0
<
o
>
IIi
;
I0
<
o
>
lIi
;
I0
<
o
>
Oli
;
if
(
lii
.
Ii
(
)
>=
OIi
.
Ii
(
)
&&
lii
.
Ii
(
)
>=
oIi
.
Ii
(
)
)
{
IIi
=
lii
;
lIi
=
OIi
;
Oli
=
oIi
;
}
else
if
(
OIi
.
Ii
(
)
>=
lii
.
Ii
(
)
&&
OIi
.
Ii
(
)
>=
oIi
.
Ii
(
)
)
{
IIi
=
OIi
;
lIi
=
lii
;
Oli
=
oIi
;
}
else
{
IIi
=
oIi
;
lIi
=
lii
;
Oli
=
OIi
;
}
if
(
IIi
.
Ii
(
)
>
lIi
.
Ii
(
)
+
Oli
.
Ii
(
)
)
iIi
=
false
;
else
{
while
(
IIi
.
Ii
(
)
>
0
)
{
IOi
+=
IIi
[
IIi
.
Ii
(
)
-
01
]
;
IIi
.
oli
(
)
;
if
(
lIi
.
Ii
(
)
>
Oli
.
Ii
(
)
)
{
IOi
+=
lIi
[
lIi
.
Ii
(
)
-
01
]
;
lIi
.
oli
(
)
;
}
else
{
IOi
+=
Oli
[
Oli
.
Ii
(
)
-
01
]
;
Oli
.
oli
(
)
;
}
}
while
(
lIi
.
Ii
(
)
>
0
||
Oli
.
Ii
(
)
>
0
)
{
if
(
lIi
.
Ii
(
)
>
0
&&
IOi
[
IOi
.
Ii
(
)
-
01
]
!=
lIi
[
0
]
[
0
]
)
{
IOi
+=
lIi
[
lIi
.
Ii
(
)
-
01
]
;
lIi
.
oli
(
)
;
}
if
(
Oli
.
Ii
(
)
>
0
&&
IOi
[
IOi
.
Ii
(
)
-
01
]
!=
Oli
[
0
]
[
0
]
)
{
IOi
+=
Oli
[
Oli
.
Ii
(
)
-
01
]
;
Oli
.
oli
(
)
;
}
}
}
}
if
(
!
iIi
)
IOi
=
"\111MPO\123S\111\102\114E"
;
ioo
<<
"\103ase\040#"
<<
OOi
<<
": "
;
o1o
<<
"\103\141s\145\040#"
<<
OOi
<<
": "
;
ioo
<<
IOi
;
o1o
<<
IOi
;
o1o
<<
Ioo
;
ioo
<<
Ioo
;
}
return
0
;
}
