#include \
<iostream>
#include \
<iomanip>
#include \
<cstdio>
#include \
<algorithm>
#include \
<set>
#include \
<map>
#include \
<queue>
#include \
<cassert>
#define \
O \
  \
o
#define \
Oo \
  \
oo
#define \
io( \
Io \
) \
( \
lo \
( \
( \
Io \
) \
. \
Oi \
( \
) \
) \
)
#define \
oi( \
ii \
, \
Ii \
) \
for \
( \
lo \
ii \
= \
0 \
; \
ii \
< \
( \
Ii \
) \
; \
++ \
ii \
)
#define \
OI( \
ii \
, \
Io \
) \
oi \
( \
ii \
, \
io \
( \
Io \
) \
)
#define \
oI( \
ii \
, \
iI \
) \
for \
( \
auto \
ii \
= \
( \
iI \
) \
. \
II \
( \
) \
; \
ii \
!= \
( \
iI \
) \
. \
Ol \
( \
) \
; \
++ \
ii \
)
#define \
ol( \
Io \
) \
( \
Io \
) \
. \
II \
( \
) \
, \
( \
Io \
) \
. \
Ol \
( \
)
using
namespace
O0
;
typedef
long
long
lo
;
typedef
o0
<
lo
>
i0
;
typedef
o0
<
i0
>
I0
;
void
l0
(
)
{
double
O1
;
lo
Ii
;
o1
>>
O1
>>
Ii
;
double
i1
,
iI
;
double
I1
=
0
;
oi
(
l1
,
Ii
)
{
o1
>>
i1
>>
iI
;
I1
=
OOo
(
I1
,
(
O1
-
i1
)
/
iI
)
;
}
oOo
<<
O1
/
I1
<<
iOo
;
}
int
IOo
(
)
{
lOo
::
Ooo
(
0
)
;
o1
.
ooo
(
0
)
;
oOo
<<
ioo
(
017
)
;
lo
I1
;
o1
>>
I1
;
oi
(
Ioo
,
I1
)
{
oOo
<<
"\103\141se \043"
<<
(
Ioo
+
01
)
<<
"\072\040"
;
l0
(
)
;
}
return
0
;
}
