#include \
<iostream>
#include \
<cstdio>
#include \
<algorithm>
#include \
<set>
#include \
<map>
#include \
<queue>
#include \
<cassert>
#define \
O \
  \
o
#define \
Oo \
  \
oo
#define \
io( \
Io \
) \
( \
lo \
( \
( \
Io \
) \
. \
Oi \
( \
) \
) \
)
#define \
oi( \
ii \
, \
Ii \
) \
for \
( \
lo \
ii \
= \
0 \
; \
ii \
< \
( \
Ii \
) \
; \
++ \
ii \
)
#define \
OI( \
ii \
, \
Io \
) \
oi \
( \
ii \
, \
io \
( \
Io \
) \
)
#define \
oI( \
ii \
, \
iI \
) \
for \
( \
auto \
ii \
= \
( \
iI \
) \
. \
II \
( \
) \
; \
ii \
!= \
( \
iI \
) \
. \
Ol \
( \
) \
; \
++ \
ii \
)
#define \
ol( \
Io \
) \
( \
Io \
) \
. \
II \
( \
) \
, \
( \
Io \
) \
. \
Ol \
( \
)
using
namespace
O0
;
typedef
long
long
lo
;
typedef
o0
<
lo
>
i0
;
typedef
o0
<
i0
>
I0
;
o0
<
loo
>
Oio
,
oio
,
iio
;
lo
Ii
,
Iio
,
lio
,
OIo
,
oIo
,
iIo
,
Io
;
bool
IIo
(
lo
&
lIo
,
lo
&
iIo
,
o0
<
loo
>
&
Io
,
char
Olo
,
char
olo
)
{
if
(
lIo
+
iIo
==
0
)
return
01
;
if
(
lIo
==
iIo
&&
lIo
+
iIo
==
Ii
)
{
loo
iI
;
oi
(
ii
,
lIo
)
{
iI
+=
Olo
;
iI
+=
olo
;
}
oOo
<<
iI
<<
"\012"
;
return
0
;
}
if
(
lIo
<=
iIo
)
{
oOo
<<
"\111MPOSSI\102L\105\012"
;
return
0
;
}
loo
iI
(
01
,
Olo
)
;
oi
(
ii
,
iIo
)
{
iI
+=
olo
;
iI
+=
Olo
;
}
Io
.
O
(
iI
)
;
oi
(
ii
,
lIo
-
iIo
-
01
)
Io
.
O
(
loo
(
01
,
Olo
)
)
;
return
01
;
}
void
l0
(
)
{
o1
>>
Ii
>>
Iio
>>
lio
>>
OIo
>>
oIo
>>
iIo
>>
Io
;
Oio
.
ilo
(
)
;
oio
.
ilo
(
)
;
iio
.
ilo
(
)
;
if
(
!
IIo
(
Iio
,
oIo
,
oio
,
'\122'
,
'\107'
)
)
return
;
if
(
!
IIo
(
OIo
,
Io
,
iio
,
'\131'
,
'\126'
)
)
return
;
if
(
!
IIo
(
iIo
,
lio
,
Oio
,
'\102'
,
'\117'
)
)
return
;
if
(
io
(
iio
)
>
io
(
oio
)
)
Ilo
(
iio
,
oio
)
;
if
(
io
(
Oio
)
>
io
(
oio
)
)
Ilo
(
Oio
,
oio
)
;
Iio
=
io
(
oio
)
;
OIo
=
io
(
iio
)
;
iIo
=
io
(
Oio
)
;
if
(
Iio
>
iIo
+
OIo
||
iIo
>
Iio
+
OIo
||
OIo
>
iIo
+
Iio
)
{
oOo
<<
"\111M\120\117S\123\111\102\114\105\012"
;
return
;
}
oi
(
ii
,
Iio
)
{
oOo
<<
oio
.
llo
(
)
;
oio
.
O0o
(
)
;
if
(
ii
<
iIo
)
{
oOo
<<
Oio
.
llo
(
)
;
Oio
.
O0o
(
)
;
}
else
{
oOo
<<
iio
.
llo
(
)
;
iio
.
O0o
(
)
;
}
if
(
ii
<
(
iIo
+
OIo
-
Iio
)
)
{
oOo
<<
iio
.
llo
(
)
;
iio
.
O0o
(
)
;
}
}
oOo
<<
"\n"
;
}
int
IOo
(
)
{
lOo
::
Ooo
(
0
)
;
o1
.
ooo
(
0
)
;
lo
I1
;
o1
>>
I1
;
oi
(
Ioo
,
I1
)
{
oOo
<<
"\103ase \043"
<<
(
Ioo
+
01
)
<<
"\072 "
;
l0
(
)
;
}
return
0
;
}
