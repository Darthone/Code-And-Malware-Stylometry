#include \
<iostream>
#include \
<cmath>
#include \
<cstdio>
#include \
<algorithm>
#include \
<cstring>
using
namespace
O
;
int
o
[
07
]
,
Oo
,
oo
[
04
]
;
char
io
[
07
]
=
{
'\040'
,
'\122'
,
'\117'
,
'\131'
,
'\107'
,
'\102'
,
'\126'
}
;
int
Io
[
07
]
=
{
0
,
04
,
05
,
06
,
01
,
02
,
03
}
;
int
lo
[
02114
]
,
Oi
[
012
]
,
iOo
[
02114
]
,
IOo
;
void
oi
(
int
ii
)
{
Ii
(
io
[
ii
]
)
;
iOo
[
++
IOo
]
=
ii
;
if
(
Oi
[
ii
]
==
0
)
{
int
OI
=
Io
[
ii
]
;
for
(
int
oI
=
01
;
oI
<=
o
[
OI
]
;
oI
++
)
{
Ii
(
io
[
OI
]
)
;
Ii
(
io
[
ii
]
)
;
iOo
[
++
IOo
]
=
OI
;
iOo
[
++
IOo
]
=
ii
;
}
Oi
[
ii
]
=
01
;
return
;
}
}
int
lOo
(
)
{
iOo
[
IOo
+
01
]
=
iOo
[
01
]
;
for
(
int
oI
=
01
;
oI
<=
IOo
;
oI
++
)
{
int
Ooo
=
iOo
[
oI
]
,
ooo
=
iOo
[
oI
+
01
]
;
if
(
Ooo
==
ooo
)
return
0
;
if
(
Ooo
%
02
==
0
&&
ooo
!=
Io
[
Ooo
]
)
return
0
;
if
(
ooo
%
02
==
0
&&
Ooo
!=
Io
[
ooo
]
)
return
0
;
}
return
01
;
}
void
iI
(
)
{
II
(
"\045\144"
,
&
Oo
)
;
Ol
(
Oi
,
00
,
sizeof
Oi
)
;
IOo
=
0
;
Ol
(
iOo
,
00
,
sizeof
iOo
)
;
for
(
int
oI
=
01
;
oI
<=
06
;
oI
++
)
II
(
"%\144"
,
&
o
[
oI
]
)
;
Oo
=
0
;
for
(
int
oI
=
01
;
oI
<=
06
;
oI
++
)
Oo
+=
o
[
oI
]
;
for
(
int
oI
=
02
;
oI
<=
06
;
oI
+=
02
)
{
if
(
o
[
oI
]
==
0
)
continue
;
int
ol
=
Io
[
oI
]
;
if
(
o
[
ol
]
<
o
[
oI
]
)
{
O0
(
"IMPOSS\111B\114E\n"
)
;
return
;
}
if
(
o
[
ol
]
==
o
[
oI
]
)
{
if
(
o
[
ol
]
+
o
[
oI
]
==
Oo
)
{
for
(
int
ii
=
01
;
ii
<=
Oo
;
ii
++
)
if
(
ii
&
01
)
Ii
(
io
[
oI
]
)
;
else
Ii
(
io
[
ol
]
)
;
Ii
(
'\012'
)
;
return
;
}
else
{
O0
(
"IMP\117\123\123\111BLE\n"
)
;
return
;
}
}
o
[
ol
]
=
o
[
ol
]
-
o
[
oI
]
;
}
if
(
o0
(
o
[
01
]
,
o0
(
o
[
03
]
,
o
[
05
]
)
)
>
(
o
[
01
]
+
o
[
03
]
+
o
[
05
]
)
/
02
)
{
O0
(
"I\115\120OS\123I\102L\105\n"
)
;
return
;
}
int
i0
=
01
,
I0
=
03
,
l0
=
05
;
if
(
o
[
I0
]
>
o
[
i0
]
)
O1
(
i0
,
I0
)
;
if
(
o
[
l0
]
>
o
[
i0
]
)
O1
(
i0
,
l0
)
;
int
o1
=
0
;
for
(
int
oI
=
01
;
oI
<=
o
[
i0
]
;
oI
++
)
{
lo
[
++
o1
]
=
i0
;
if
(
oI
<=
o
[
I0
]
)
lo
[
++
o1
]
=
I0
;
if
(
oI
>=
o
[
i0
]
-
o
[
l0
]
+
01
)
lo
[
++
o1
]
=
l0
;
}
for
(
int
oI
=
01
;
oI
<=
o1
;
oI
++
)
oi
(
lo
[
oI
]
)
;
Ii
(
'\012'
)
;
if
(
lOo
(
)
==
0
)
{
ioo
<<
"fa "
<<
o
[
01
]
<<
" "
<<
o
[
03
]
<<
"\040"
<<
o
[
05
]
<<
Ioo
;
for
(
int
oI
=
01
;
oI
<=
IOo
;
oI
++
)
ioo
<<
iOo
[
oI
]
<<
"\040"
;
ioo
<<
Ioo
;
for
(
int
oI
=
01
;
oI
<=
o1
;
oI
++
)
ioo
<<
lo
[
oI
]
<<
"\040"
;
ioo
<<
Ioo
;
}
}
int
i1
(
)
{
I1
(
"\102\154.i\156"
,
"\162"
,
l1
)
;
I1
(
"\102\154.\157\165t"
,
"\167"
,
OOo
)
;
int
oOo
;
II
(
"\045\144"
,
&
oOo
)
;
for
(
int
oI
=
01
;
oI
<=
oOo
;
oI
++
)
{
O0
(
"Ca\163e \043\045d:\040"
,
oI
)
;
iI
(
)
;
}
return
0
;
}
