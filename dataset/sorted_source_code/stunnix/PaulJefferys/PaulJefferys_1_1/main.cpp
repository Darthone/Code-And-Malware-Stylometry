
#include <vector>
#include <string>
#include <stdlib.h>
#include <math.h>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <sstream>
#include <map>
#include <ctime>
#include <cassert>
using namespace std;ofstream fout(
"\x2e\x2e\x2f\x2e\x2e\x2f\x2e\x2e\x2f\x6f\x75\x74\x70\x75\x74\x2e\x74\x78\x74");
ifstream fin(
"\x2e\x2e\x2f\x2e\x2e\x2f\x2e\x2e\x2f\x69\x6e\x70\x75\x74\x2e\x74\x78\x74");int 
main(void){int ReplacementFor_ttt=(0x20f3+122-0x216d);fin>>ReplacementFor_ttt;
int ReplacementFor_ct=(0x2cf+5644-0x18db);string s;cout.precision(
(0xb1f+4627-0x1d29));fout.precision((0x13d1+3813-0x22ad));cout<<
"\x48\x45\x4c\x4c\x4f"<<"\x20"<<ReplacementFor_ttt<<endl;while(
ReplacementFor_ttt>(0xd48+2483-0x16fb)){ReplacementFor_ct++;ReplacementFor_ttt--
;string ReplacementFor_ans;int ReplacementFor_i,ReplacementFor_j,
ReplacementFor_k;int ReplacementFor_r,ReplacementFor_nr,ReplacementFor_y,
ReplacementFor_ny,ReplacementFor_b,ReplacementFor_nb;int ReplacementFor_n;fin>>
ReplacementFor_n>>ReplacementFor_r>>ReplacementFor_nb>>ReplacementFor_y>>
ReplacementFor_nr>>ReplacementFor_b>>ReplacementFor_ny;vector<string>
ReplacementFor_rval;vector<string>ReplacementFor_yval;vector<string>
ReplacementFor_bval;bool ReplacementFor_isok=true;if(ReplacementFor_y+
ReplacementFor_ny==ReplacementFor_n&&ReplacementFor_y==ReplacementFor_ny){for(
ReplacementFor_i=(0x1067+4194-0x20c9);ReplacementFor_i<ReplacementFor_y;
ReplacementFor_i++){ReplacementFor_ans+="\x59\x56";}}else if(ReplacementFor_r+
ReplacementFor_nr==ReplacementFor_n&&ReplacementFor_r==ReplacementFor_nr){for(
ReplacementFor_i=(0x12d6+789-0x15eb);ReplacementFor_i<ReplacementFor_r;
ReplacementFor_i++){ReplacementFor_ans+="\x52\x47";}}else if(ReplacementFor_b+
ReplacementFor_nb==ReplacementFor_n&&ReplacementFor_b==ReplacementFor_nb){for(
ReplacementFor_i=(0x26f6+2-0x26f8);ReplacementFor_i<ReplacementFor_b;
ReplacementFor_i++){ReplacementFor_ans+="\x42\x4f";}}else{if(ReplacementFor_nr>
(0x9e0+2521-0x13b9)){string s="\x52";for(ReplacementFor_i=(0x631+2676-0x10a5);
ReplacementFor_i<ReplacementFor_nr;ReplacementFor_i++){s+="\x47\x52";}
ReplacementFor_rval.push_back(s);ReplacementFor_r-=(ReplacementFor_nr+
(0x125+3678-0xf82));}if(ReplacementFor_nb>(0x1621+2416-0x1f91)){string s="\x42";
for(ReplacementFor_i=(0xca3+5475-0x2206);ReplacementFor_i<ReplacementFor_nb;
ReplacementFor_i++){s+="\x4f\x42";}ReplacementFor_bval.push_back(s);
ReplacementFor_b-=(ReplacementFor_nb+(0x9e8+6272-0x2267));}if(ReplacementFor_ny>
(0x111c+4885-0x2431)){string s="\x59";for(ReplacementFor_i=(0xf79+5716-0x25cd);
ReplacementFor_i<ReplacementFor_ny;ReplacementFor_i++){s+="\x56\x59";}
ReplacementFor_yval.push_back(s);ReplacementFor_y-=(ReplacementFor_ny+
(0x1439+3087-0x2047));}}if(ReplacementFor_r<(0x140a+3476-0x219e)||
ReplacementFor_b<(0x1ab8+1281-0x1fb9)||ReplacementFor_y<(0x1020+2926-0x1b8e)){
ReplacementFor_isok=false;}else if(ReplacementFor_ans.size()==
(0x11f8+2231-0x1aaf)){while(ReplacementFor_r>(0x10bf+5266-0x2551)){
ReplacementFor_rval.push_back("\x52");ReplacementFor_r--;}while(ReplacementFor_y
>(0x89+3745-0xf2a)){ReplacementFor_yval.push_back("\x59");ReplacementFor_y--;}
while(ReplacementFor_b>(0x114d+4710-0x23b3)){ReplacementFor_bval.push_back(
"\x42");ReplacementFor_b--;}vector<string>ReplacementFor_mx;vector<string>
ReplacementFor_s1;vector<string>ReplacementFor_s2;if(ReplacementFor_rval.size()
>=ReplacementFor_yval.size()&&ReplacementFor_rval.size()>=ReplacementFor_bval.
size()){ReplacementFor_mx=ReplacementFor_rval;ReplacementFor_s1=
ReplacementFor_yval;ReplacementFor_s2=ReplacementFor_bval;}else if(
ReplacementFor_yval.size()>=ReplacementFor_rval.size()&&ReplacementFor_yval.size
()>=ReplacementFor_bval.size()){ReplacementFor_mx=ReplacementFor_yval;
ReplacementFor_s1=ReplacementFor_rval;ReplacementFor_s2=ReplacementFor_bval;}
else{ReplacementFor_mx=ReplacementFor_bval;ReplacementFor_s1=ReplacementFor_rval
;ReplacementFor_s2=ReplacementFor_yval;}if(ReplacementFor_mx.size()>
ReplacementFor_s1.size()+ReplacementFor_s2.size())ReplacementFor_isok=false;else
{while(ReplacementFor_mx.size()>(0x1de8+80-0x1e38)){ReplacementFor_ans+=
ReplacementFor_mx[ReplacementFor_mx.size()-(0x3c6+4779-0x1670)];
ReplacementFor_mx.pop_back();if(ReplacementFor_s1.size()>ReplacementFor_s2.size(
)){ReplacementFor_ans+=ReplacementFor_s1[ReplacementFor_s1.size()-
(0x1a0f+2282-0x22f8)];ReplacementFor_s1.pop_back();}else{ReplacementFor_ans+=
ReplacementFor_s2[ReplacementFor_s2.size()-(0x101d+2819-0x1b1f)];
ReplacementFor_s2.pop_back();}}while(ReplacementFor_s1.size()>
(0x10b0+1756-0x178c)||ReplacementFor_s2.size()>(0x1d86+1454-0x2334)){if(
ReplacementFor_s1.size()>(0x1131+268-0x123d)&&ReplacementFor_ans[
ReplacementFor_ans.size()-(0xcb8+5213-0x2114)]!=ReplacementFor_s1[
(0xa31+5925-0x2156)][(0xf94+2739-0x1a47)]){ReplacementFor_ans+=ReplacementFor_s1
[ReplacementFor_s1.size()-(0x1c4b+378-0x1dc4)];ReplacementFor_s1.pop_back();}if(
ReplacementFor_s2.size()>(0x1f+6009-0x1798)&&ReplacementFor_ans[
ReplacementFor_ans.size()-(0x2c6+84-0x319)]!=ReplacementFor_s2[
(0x132a+4512-0x24ca)][(0x176d+1279-0x1c6c)]){ReplacementFor_ans+=
ReplacementFor_s2[ReplacementFor_s2.size()-(0x1842+1477-0x1e06)];
ReplacementFor_s2.pop_back();}}}}if(!ReplacementFor_isok)ReplacementFor_ans=
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45";cout<<"\x43\x61\x73\x65\x20\x23"<<
ReplacementFor_ct<<"\x3a\x20";fout<<"\x43\x61\x73\x65\x20\x23"<<
ReplacementFor_ct<<"\x3a\x20";cout<<ReplacementFor_ans;fout<<ReplacementFor_ans;
fout<<endl;cout<<endl;}return(0x69+4065-0x104a);}
