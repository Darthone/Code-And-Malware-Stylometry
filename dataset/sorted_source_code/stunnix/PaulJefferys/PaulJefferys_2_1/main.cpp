
#include <vector>
#include <string>
#include <stdlib.h>
#include <math.h>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <sstream>
#include <map>
#include <ctime>
#include <cassert>
using namespace std;ofstream fout(
"\x2e\x2e\x2f\x2e\x2e\x2f\x2e\x2e\x2f\x6f\x75\x74\x70\x75\x74\x2e\x74\x78\x74");
ifstream fin(
"\x2e\x2e\x2f\x2e\x2e\x2f\x2e\x2e\x2f\x69\x6e\x70\x75\x74\x2e\x74\x78\x74");long
 long ReplacementFor_eval[(0x1ef+2131-0x9de)];double ReplacementFor_sval[
(0x491+6750-0x1e8b)];long long ReplacementFor_d[(0x5cf+605-0x7c8)][
(0x16fc+969-0x1a61)];double ReplacementFor_t[(0x1be6+440-0x1d3a)][
(0xad0+1357-0xfb9)];int main(void){int ReplacementFor_ttt=(0x1c7+2664-0xc2f);fin
>>ReplacementFor_ttt;int ReplacementFor_ct=(0x1f9b+1704-0x2643);string s;cout.
precision((0xc7f+6358-0x254c));fout.precision((0x11b9+1207-0x1667));cout<<
"\x48\x45\x4c\x4c\x4f"<<"\x20"<<ReplacementFor_ttt<<endl;while(
ReplacementFor_ttt>(0x3bf+6747-0x1e1a)){ReplacementFor_ct++;ReplacementFor_ttt--
;double ReplacementFor_ans=0.0;int ReplacementFor_i,ReplacementFor_j,
ReplacementFor_k;int ReplacementFor_n,q;fin>>ReplacementFor_n>>q;for(
ReplacementFor_i=(0x162a+1638-0x1c90);ReplacementFor_i<ReplacementFor_n;
ReplacementFor_i++){fin>>ReplacementFor_eval[ReplacementFor_i]>>
ReplacementFor_sval[ReplacementFor_i];}for(ReplacementFor_i=(0x765+7900-0x2641);
ReplacementFor_i<ReplacementFor_n;ReplacementFor_i++){for(ReplacementFor_j=
(0x8d3+5085-0x1cb0);ReplacementFor_j<ReplacementFor_n;ReplacementFor_j++){fin>>
ReplacementFor_d[ReplacementFor_i][ReplacementFor_j];if(ReplacementFor_i==
ReplacementFor_j)ReplacementFor_d[ReplacementFor_i][ReplacementFor_j]=0.0;
ReplacementFor_t[ReplacementFor_i][ReplacementFor_j]=-1.0;}}for(ReplacementFor_k
=(0x8a7+7094-0x245d);ReplacementFor_k<ReplacementFor_n;ReplacementFor_k++){for(
ReplacementFor_i=(0x1692+1512-0x1c7a);ReplacementFor_i<ReplacementFor_n;
ReplacementFor_i++){for(ReplacementFor_j=(0x9a1+5179-0x1ddc);ReplacementFor_j<
ReplacementFor_n;ReplacementFor_j++){if(ReplacementFor_d[ReplacementFor_i][
ReplacementFor_k]>=(0x6d0+7569-0x2461)&&ReplacementFor_d[ReplacementFor_k][
ReplacementFor_j]>=(0x7b8+6220-0x2004)){long long ReplacementFor_e=
ReplacementFor_d[ReplacementFor_i][ReplacementFor_k]+ReplacementFor_d[
ReplacementFor_k][ReplacementFor_j];if(ReplacementFor_d[ReplacementFor_i][
ReplacementFor_j]<(0x100+9247-0x251f)||ReplacementFor_e<ReplacementFor_d[
ReplacementFor_i][ReplacementFor_j])ReplacementFor_d[ReplacementFor_i][
ReplacementFor_j]=ReplacementFor_e;}}}}for(ReplacementFor_i=(0x128b+2974-0x1e29)
;ReplacementFor_i<ReplacementFor_n;ReplacementFor_i++){for(ReplacementFor_j=
(0x1a9f+70-0x1ae5);ReplacementFor_j<ReplacementFor_n;ReplacementFor_j++){if(
ReplacementFor_d[ReplacementFor_i][ReplacementFor_j]<=ReplacementFor_eval[
ReplacementFor_i]){double ReplacementFor_tm=((double)ReplacementFor_d[
ReplacementFor_i][ReplacementFor_j])/ReplacementFor_sval[ReplacementFor_i];if(
ReplacementFor_t[ReplacementFor_i][ReplacementFor_j]<(0x126a+432-0x141a)||
ReplacementFor_tm<ReplacementFor_t[ReplacementFor_i][ReplacementFor_j]){
ReplacementFor_t[ReplacementFor_i][ReplacementFor_j]=ReplacementFor_tm;}}}}for(
ReplacementFor_k=(0xd0b+6649-0x2704);ReplacementFor_k<ReplacementFor_n;
ReplacementFor_k++){for(ReplacementFor_i=(0xada+2311-0x13e1);ReplacementFor_i<
ReplacementFor_n;ReplacementFor_i++){for(ReplacementFor_j=(0x1dbf+491-0x1faa);
ReplacementFor_j<ReplacementFor_n;ReplacementFor_j++){if(ReplacementFor_t[
ReplacementFor_i][ReplacementFor_k]>=(0xbf1+992-0xfd1)&&ReplacementFor_t[
ReplacementFor_k][ReplacementFor_j]>=(0x37a+8188-0x2376)){double 
ReplacementFor_e=ReplacementFor_t[ReplacementFor_i][ReplacementFor_k]+
ReplacementFor_t[ReplacementFor_k][ReplacementFor_j];if(ReplacementFor_t[
ReplacementFor_i][ReplacementFor_j]<(0x659+1750-0xd2f)||ReplacementFor_e<
ReplacementFor_t[ReplacementFor_i][ReplacementFor_j])ReplacementFor_t[
ReplacementFor_i][ReplacementFor_j]=ReplacementFor_e;}}}}cout<<
"\x43\x61\x73\x65\x20\x23"<<ReplacementFor_ct<<"\x3a";fout<<
"\x43\x61\x73\x65\x20\x23"<<ReplacementFor_ct<<"\x3a";for(ReplacementFor_k=
(0x1532+1405-0x1aaf);ReplacementFor_k<q;ReplacementFor_k++){fin>>
ReplacementFor_i>>ReplacementFor_j;cout<<"\x20"<<ReplacementFor_t[
ReplacementFor_i-(0x3a9+8408-0x2480)][ReplacementFor_j-(0x806+4719-0x1a74)];fout
<<"\x20"<<ReplacementFor_t[ReplacementFor_i-(0x43a+4898-0x175b)][
ReplacementFor_j-(0x56d+12-0x578)];}fout<<endl;cout<<endl;}return
(0x56b+4450-0x16cd);}
