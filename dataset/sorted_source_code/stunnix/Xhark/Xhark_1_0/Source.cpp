
#pragma warning(disable:4996)
#pragma comment(linker, "/STACK:36777216")
#include <stdio.h>
#include <algorithm>
#include <vector>
#include <string>
#include <memory.h>
using namespace std;string solve2(int ReplacementFor_N,int ReplacementFor_R,int 
ReplacementFor_Y,int ReplacementFor_B){if(ReplacementFor_N==(0x4b1+44-0x4dc)){if
(ReplacementFor_R==(0x6e4+844-0xa2f))return"\x52";if(ReplacementFor_Y==
(0x2d5+1033-0x6dd))return"\x59";if(ReplacementFor_B==(0x118f+671-0x142d))return
"\x42";}vector<pair<int,string> >S;S.push_back(make_pair(ReplacementFor_R,"\x52"
));S.push_back(make_pair(ReplacementFor_Y,"\x59"));S.push_back(make_pair(
ReplacementFor_B,"\x42"));sort(S.begin(),S.end());string ReplacementFor_res="";
if(S[(0x3d4+5587-0x19a5)].first>S[(0x156b+4099-0x256e)].first+S[
(0x2670+120-0x26e7)].first)return"";while(S[(0x1a29+2581-0x243c)].first>
(0xd41+4355-0x1e44)){ReplacementFor_res+=S[(0x741+5620-0x1d33)].second;S[
(0x1641+2248-0x1f07)].first--;int ReplacementFor_ot=(0x4dc+5871-0x1bcb);for(int 
a=(0xa8d+6128-0x227d);a<=(0xc92+5875-0x2384);a++){if(S[a].first>S[
(0xed4+774-0x11d8)].first){ReplacementFor_res+=S[a].second;S[a].first--;
ReplacementFor_ot=(0x29f+6694-0x1cc4);}}if(ReplacementFor_ot==(0x59+2221-0x906))
{if(S[(0x5c7+2039-0xdbd)].first<=S[(0xbd+912-0x44d)].first){ReplacementFor_res+=
S[(0xb2f+3182-0x179d)].second;S[(0x14d+7418-0x1e47)].first--;}else{
ReplacementFor_res+=S[(0x15ec+2589-0x2008)].second;S[(0x114a+4353-0x224a)].first
--;}}}return ReplacementFor_res;}string solve(int ReplacementFor_N,int 
ReplacementFor_R,int ReplacementFor_O,int ReplacementFor_Y,int ReplacementFor_G,
int ReplacementFor_B,int ReplacementFor_V){if(ReplacementFor_N==
(0xd63+4322-0x1e44)){if(ReplacementFor_R==(0x3af+6088-0x1b76))return"\x52";if(
ReplacementFor_Y==(0x1a4d+1877-0x21a1))return"\x59";if(ReplacementFor_B==
(0x524+3725-0x13b0))return"\x42";if(ReplacementFor_O==(0x13a6+620-0x1611))return
"\x4f";if(ReplacementFor_G==(0x2331+500-0x2524))return"\x47";if(ReplacementFor_V
==(0x594+8524-0x26df))return"\x56";}string ReplacementFor_res="";for(int 
ReplacementFor_i=(0x51c+5550-0x1aca);ReplacementFor_i<(0xaeb+4228-0x1b6c);
ReplacementFor_i++){int*ReplacementFor_P,*Q;string str="";if(ReplacementFor_i==
(0xc+3949-0xf79)){ReplacementFor_P=&ReplacementFor_V;Q=&ReplacementFor_Y;str=
"\x56\x59";}else if(ReplacementFor_i==(0x1470+1554-0x1a81)){ReplacementFor_P=&
ReplacementFor_O;Q=&ReplacementFor_B;str="\x4f\x42";}else{ReplacementFor_P=&
ReplacementFor_G;Q=&ReplacementFor_R;str="\x47\x52";}if(*ReplacementFor_P>
(0xa9+8601-0x2242)){*Q-=*ReplacementFor_P;if(*Q==(0x81+185-0x13a)){if((*
ReplacementFor_P)*(0x1ab+3868-0x10c5)==ReplacementFor_N){for(int 
ReplacementFor_i=(0xc98+1808-0x13a8);ReplacementFor_i<(*ReplacementFor_P);
ReplacementFor_i++)ReplacementFor_res+=str;return ReplacementFor_res;}else{
return"";}}if(*Q<(0x60d+1776-0xcfd))return"";}}ReplacementFor_res=solve2(
ReplacementFor_N,ReplacementFor_R,ReplacementFor_Y,ReplacementFor_B);if(
ReplacementFor_res.size()==(0x64b+3851-0x1556))return"";for(int ReplacementFor_i
=(0x7f4+6015-0x1f73);ReplacementFor_i<(0x7d6+1587-0xe06);ReplacementFor_i++){int
*ReplacementFor_P,*Q;string str="";if(ReplacementFor_i==(0x5e9+5372-0x1ae5)){
ReplacementFor_P=&ReplacementFor_V;Q=&ReplacementFor_Y;str="\x56\x59";}else if(
ReplacementFor_i==(0x1d98+2333-0x26b4)){ReplacementFor_P=&ReplacementFor_O;Q=&
ReplacementFor_B;str="\x4f\x42";}else{ReplacementFor_P=&ReplacementFor_G;Q=&
ReplacementFor_R;str="\x47\x52";}if(*ReplacementFor_P>(0x322+7752-0x216a)){
string ReplacementFor_tmp=ReplacementFor_res;bool first=true;ReplacementFor_res=
"";for(int ReplacementFor_j=(0x1061+5519-0x25f0);ReplacementFor_j<
ReplacementFor_tmp.size();ReplacementFor_j++){ReplacementFor_res+=
ReplacementFor_tmp[ReplacementFor_j];if(first&&ReplacementFor_tmp[
ReplacementFor_j]==str[(0xf57+43-0xf81)]){for(int ReplacementFor_i=
(0xa4a+410-0xbe4);ReplacementFor_i<(*ReplacementFor_P);ReplacementFor_i++)
ReplacementFor_res+=str;first=false;}}}}return ReplacementFor_res;}int main(){
freopen(
"\x42\x2d\x73\x6d\x61\x6c\x6c\x2d\x61\x74\x74\x65\x6d\x70\x74\x30\x2e\x69\x6e",
"\x72",stdin);freopen(
"\x42\x2d\x73\x6d\x61\x6c\x6c\x2d\x61\x74\x74\x65\x6d\x70\x74\x30\x2e\x6f\x75\x74"
,"\x77",stdout);int ReplacementFor_T;scanf("\x25\x64",&ReplacementFor_T);int 
ReplacementFor_N,ReplacementFor_R,ReplacementFor_O,ReplacementFor_Y,
ReplacementFor_G,ReplacementFor_B,ReplacementFor_V;while(ReplacementFor_T-- >
(0xf1a+1708-0x15c6)){scanf(
"\x25\x64\x20\x25\x64\x20\x25\x64\x20\x25\x64\x20\x25\x64\x20\x25\x64\x20\x25\x64"
,&ReplacementFor_N,&ReplacementFor_R,&ReplacementFor_O,&ReplacementFor_Y,&
ReplacementFor_G,&ReplacementFor_B,&ReplacementFor_V);string ReplacementFor_sol=
solve(ReplacementFor_N,ReplacementFor_R,ReplacementFor_O,ReplacementFor_Y,
ReplacementFor_G,ReplacementFor_B,ReplacementFor_V);static int ReplacementFor_cs
=(0xd92+4460-0x1efd);if(ReplacementFor_sol.size()==(0xcc7+1560-0x12df))
ReplacementFor_sol="\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45";else if(
ReplacementFor_sol.size()!=ReplacementFor_N)fprintf(stderr,
"\x45\x52\x52\x4f\x52\x20\x25\x64\x20\x3a\x20\x25\x64\x20\x25\x64\x20\x25\x64\x20\x25\x64\x20\x25\x64\x20\x25\x64\x20\x25\x64\x20\x3d\x3e\x20\x25\x73" "\n"
,ReplacementFor_cs,ReplacementFor_N,ReplacementFor_R,ReplacementFor_O,
ReplacementFor_Y,ReplacementFor_G,ReplacementFor_B,ReplacementFor_V,
ReplacementFor_sol.c_str());printf(
"\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20\x25\x73" "\n",ReplacementFor_cs++,
ReplacementFor_sol.c_str());}return(0x17b7+1582-0x1de5);}
