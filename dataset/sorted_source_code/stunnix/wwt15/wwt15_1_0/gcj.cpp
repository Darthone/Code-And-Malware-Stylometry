
#include <bits/stdc++.h>
using namespace std;typedef long long ReplacementFor_ll;typedef double 
ReplacementFor_db;typedef pair<int,int>ReplacementFor_pii;
#define ReplacementFor_eprintf(...) fprintf(stderr,ReplacementFor___VA_ARGS__)
const int ReplacementFor_N=(0x2528+166-0x21e1);int ReplacementFor_n,
ReplacementFor_R,ReplacementFor_O,ReplacementFor_Y,ReplacementFor_G,
ReplacementFor_B,ReplacementFor_V;int ReplacementFor_len;char ReplacementFor_ans
[(0x21cf+1918-0x2560)];void insert(int ReplacementFor_loc,char ReplacementFor_C)
{for(int ReplacementFor_i=ReplacementFor_len;ReplacementFor_i>ReplacementFor_loc
;ReplacementFor_i--)ReplacementFor_ans[ReplacementFor_i]=ReplacementFor_ans[
ReplacementFor_i-(0x828+2861-0x1354)];ReplacementFor_ans[ReplacementFor_loc]=
ReplacementFor_C;ReplacementFor_len++;}bool ReplacementFor_add(int 
ReplacementFor_y,char ReplacementFor_C){for(int ReplacementFor_i=
(0x2c+3396-0xd70);ReplacementFor_i<ReplacementFor_y;ReplacementFor_i++){bool 
ReplacementFor_found=false;for(int ReplacementFor_j=(0x1186+3562-0x1f70);
ReplacementFor_j<ReplacementFor_len;ReplacementFor_j++)if(ReplacementFor_ans[
ReplacementFor_j]==ReplacementFor_ans[(ReplacementFor_j-(0xdf9+423-0xf9f)+
ReplacementFor_len)%ReplacementFor_len]){ReplacementFor_found=true;insert(
ReplacementFor_j,ReplacementFor_C);break;}if(!ReplacementFor_found){for(int 
ReplacementFor_j=(0x9f2+2213-0x1297);ReplacementFor_j<ReplacementFor_len;
ReplacementFor_j++)if(ReplacementFor_ans[ReplacementFor_j]!=ReplacementFor_C&&
ReplacementFor_ans[(ReplacementFor_j-(0xde7+5745-0x2457)+ReplacementFor_len)%
ReplacementFor_len]!=ReplacementFor_C){ReplacementFor_found=true;insert(
ReplacementFor_j,ReplacementFor_C);break;}if(!ReplacementFor_found)return false;
}}return true;}void ReplacementFor_replace(int ReplacementFor_cnt,char 
ReplacementFor_C,char ReplacementFor_C2){for(int ReplacementFor_i=
(0xcb7+822-0xfed);ReplacementFor_i<ReplacementFor_len;ReplacementFor_i++)if(
ReplacementFor_ans[ReplacementFor_i]==ReplacementFor_C){while(ReplacementFor_cnt
--){insert(ReplacementFor_i,ReplacementFor_C2);insert(ReplacementFor_i,
ReplacementFor_C);}return;}}bool ReplacementFor_check(){for(int ReplacementFor_i
=(0x16d8+2693-0x215d);ReplacementFor_i<ReplacementFor_len;ReplacementFor_i++)if(
ReplacementFor_ans[ReplacementFor_i]==ReplacementFor_ans[(ReplacementFor_i-
(0x116+7758-0x1f63)+ReplacementFor_len)%ReplacementFor_len])return false;return 
true;}bool Main(){scanf(
"\x25\x64\x25\x64\x25\x64\x25\x64\x25\x64\x25\x64\x25\x64",&ReplacementFor_n,&
ReplacementFor_R,&ReplacementFor_O,&ReplacementFor_Y,&ReplacementFor_G,&
ReplacementFor_B,&ReplacementFor_V);ReplacementFor_len=(0x2135+504-0x232d);int 
ReplacementFor_r=ReplacementFor_R-ReplacementFor_G;if(ReplacementFor_r<
(0x10ed+671-0x138c))return false;if(ReplacementFor_r==(0x65d+5331-0x1b30)){if(
ReplacementFor_R==(0xdea+1927-0x1571));else if(ReplacementFor_R+ReplacementFor_G
<ReplacementFor_n)return false;else{for(int ReplacementFor_i=
(0x1a93+1772-0x217f);ReplacementFor_i<ReplacementFor_R;ReplacementFor_i++){
ReplacementFor_ans[ReplacementFor_len++]=((char)(0x1686+964-0x19f8));
ReplacementFor_ans[ReplacementFor_len++]=((char)(0x490+7848-0x22f1));}return 
true;}}int ReplacementFor_y=ReplacementFor_Y-ReplacementFor_V;if(
ReplacementFor_y<(0x1db3+670-0x2051))return false;if(ReplacementFor_y==
(0x1250+2052-0x1a54)){if(ReplacementFor_Y==(0x27a+7418-0x1f74));else if(
ReplacementFor_Y+ReplacementFor_V<ReplacementFor_n)return false;else{for(int 
ReplacementFor_i=(0xeb7+3469-0x1c44);ReplacementFor_i<ReplacementFor_Y;
ReplacementFor_i++){ReplacementFor_ans[ReplacementFor_len++]=
((char)(0x20e5+793-0x23a5));ReplacementFor_ans[ReplacementFor_len++]=
((char)(0xad1+4522-0x1c25));}return true;}}int ReplacementFor_b=ReplacementFor_B
-ReplacementFor_O;if(ReplacementFor_b<(0x10fc+1365-0x1651))return false;if(
ReplacementFor_b==(0x273+6762-0x1cdd)){if(ReplacementFor_B==(0xb6c+137-0xbf5));
else if(ReplacementFor_B+ReplacementFor_O<ReplacementFor_n)return false;else{for
(int ReplacementFor_i=(0xf3+2193-0x984);ReplacementFor_i<ReplacementFor_B;
ReplacementFor_i++){ReplacementFor_ans[ReplacementFor_len++]=
((char)(0x5e6+7000-0x20fc));ReplacementFor_ans[ReplacementFor_len++]=
((char)(0x1619+1712-0x1c7a));}return true;}}if(ReplacementFor_r>=
ReplacementFor_y&&ReplacementFor_r>=ReplacementFor_b){ReplacementFor_len=
(0xa6b+4661-0x1ca0);for(int ReplacementFor_i=(0x2c7+6498-0x1c29);
ReplacementFor_i<ReplacementFor_r;ReplacementFor_i++)ReplacementFor_ans[
ReplacementFor_len++]=((char)(0x1f8b+892-0x22b5));if(!ReplacementFor_add(
ReplacementFor_y,((char)(0x1627+2147-0x1e31))))return false;if(!
ReplacementFor_add(ReplacementFor_b,((char)(0x461+6516-0x1d93))))return false;}
else if(ReplacementFor_y>=ReplacementFor_r&&ReplacementFor_y>=ReplacementFor_b){
ReplacementFor_len=(0x6a5+3608-0x14bd);for(int ReplacementFor_i=
(0x8c4+891-0xc3f);ReplacementFor_i<ReplacementFor_y;ReplacementFor_i++)
ReplacementFor_ans[ReplacementFor_len++]=((char)(0x24f+4524-0x13a2));if(!
ReplacementFor_add(ReplacementFor_r,((char)(0x5e7+6260-0x1e09))))return false;if
(!ReplacementFor_add(ReplacementFor_b,((char)(0x121c+3684-0x203e))))return false
;}else if(ReplacementFor_b>=ReplacementFor_r&&ReplacementFor_b>=ReplacementFor_y
){ReplacementFor_len=(0x908+4699-0x1b63);for(int ReplacementFor_i=
(0x18b0+545-0x1ad1);ReplacementFor_i<ReplacementFor_b;ReplacementFor_i++)
ReplacementFor_ans[ReplacementFor_len++]=((char)(0xcbd+5995-0x23e6));if(!
ReplacementFor_add(ReplacementFor_r,((char)(0x1184+3148-0x1d7e))))return false;
if(!ReplacementFor_add(ReplacementFor_y,((char)(0x3a1+1603-0x98b))))return false
;}else assert(false);if(!ReplacementFor_check())return false;
ReplacementFor_replace(ReplacementFor_G,((char)(0xa6+7424-0x1d54)),
((char)(0x17c5+247-0x1875)));ReplacementFor_replace(ReplacementFor_V,
((char)(0x1a2+572-0x385)),((char)(0xf30+5561-0x2493)));ReplacementFor_replace(
ReplacementFor_O,((char)(0x11b+4521-0x1282)),((char)(0x1102+1397-0x1628)));
ReplacementFor_ans[ReplacementFor_len]=(0x1c09+1692-0x22a5);return true;}int 
main(){freopen(
"\x42\x2d\x73\x6d\x61\x6c\x6c\x2d\x61\x74\x74\x65\x6d\x70\x74\x30\x2e\x69\x6e",
"\x72",stdin);freopen("\x42\x2e\x6f\x75\x74","\x77",stdout);int ReplacementFor_T
;scanf("\x25\x64",&ReplacementFor_T);for(int Case=(0x589+5464-0x1ae0);Case<=
ReplacementFor_T;Case++){bool ReplacementFor_res=Main();ReplacementFor_ans[
ReplacementFor_len]=(0x12ed+2495-0x1cac);printf(
"\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20\x25\x73" "\n",Case,ReplacementFor_res?
ReplacementFor_ans:"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45");}}
