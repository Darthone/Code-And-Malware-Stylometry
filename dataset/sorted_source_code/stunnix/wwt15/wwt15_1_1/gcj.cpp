
#include <bits/stdc++.h>
using namespace std;typedef long long ReplacementFor_ll;typedef double 
ReplacementFor_db;typedef pair<int,int>ReplacementFor_pii;
#define ReplacementFor_eprintf(...) fprintf(stderr,ReplacementFor___VA_ARGS__)
const int ReplacementFor_N=(0x1ad8+2335-0x200a);int ReplacementFor_n,
ReplacementFor_R,ReplacementFor_O,ReplacementFor_Y,ReplacementFor_G,
ReplacementFor_B,ReplacementFor_V;int ReplacementFor_len;char ReplacementFor_ans
[(0x48a+3510-0xe53)];void insert(int ReplacementFor_loc,char ReplacementFor_C){
for(int ReplacementFor_i=ReplacementFor_len;ReplacementFor_i>ReplacementFor_loc;
ReplacementFor_i--)ReplacementFor_ans[ReplacementFor_i]=ReplacementFor_ans[
ReplacementFor_i-(0xca5+5450-0x21ee)];ReplacementFor_ans[ReplacementFor_loc]=
ReplacementFor_C;ReplacementFor_len++;}bool ReplacementFor_add(int 
ReplacementFor_y,char ReplacementFor_C){for(int ReplacementFor_i=
(0x63c+5258-0x1ac6);ReplacementFor_i<ReplacementFor_y;ReplacementFor_i++){bool 
ReplacementFor_found=false;for(int ReplacementFor_j=(0x169+8670-0x2347);
ReplacementFor_j<ReplacementFor_len;ReplacementFor_j++)if(ReplacementFor_ans[
ReplacementFor_j]==ReplacementFor_ans[(ReplacementFor_j-(0x1685+3987-0x2617)+
ReplacementFor_len)%ReplacementFor_len]){ReplacementFor_found=true;insert(
ReplacementFor_j,ReplacementFor_C);break;}if(!ReplacementFor_found){for(int 
ReplacementFor_j=(0x27+4356-0x112b);ReplacementFor_j<ReplacementFor_len;
ReplacementFor_j++)if(ReplacementFor_ans[ReplacementFor_j]!=ReplacementFor_C&&
ReplacementFor_ans[(ReplacementFor_j-(0x14c0+3471-0x224e)+ReplacementFor_len)%
ReplacementFor_len]!=ReplacementFor_C){ReplacementFor_found=true;insert(
ReplacementFor_j,ReplacementFor_C);break;}if(!ReplacementFor_found)return false;
}}return true;}void ReplacementFor_replace(int ReplacementFor_cnt,char 
ReplacementFor_C,char ReplacementFor_C2){for(int ReplacementFor_i=
(0x14c8+2387-0x1e1b);ReplacementFor_i<ReplacementFor_len;ReplacementFor_i++)if(
ReplacementFor_ans[ReplacementFor_i]==ReplacementFor_C){while(ReplacementFor_cnt
--){insert(ReplacementFor_i,ReplacementFor_C2);insert(ReplacementFor_i,
ReplacementFor_C);}return;}}bool ReplacementFor_check(){for(int ReplacementFor_i
=(0xc41+5587-0x2214);ReplacementFor_i<ReplacementFor_len;ReplacementFor_i++)if(
ReplacementFor_ans[ReplacementFor_i]==ReplacementFor_ans[(ReplacementFor_i-
(0xe6d+1177-0x1305)+ReplacementFor_len)%ReplacementFor_len])return false;return 
true;}bool Main(){scanf(
"\x25\x64\x25\x64\x25\x64\x25\x64\x25\x64\x25\x64\x25\x64",&ReplacementFor_n,&
ReplacementFor_R,&ReplacementFor_O,&ReplacementFor_Y,&ReplacementFor_G,&
ReplacementFor_B,&ReplacementFor_V);ReplacementFor_len=(0x1102+5279-0x25a1);int 
ReplacementFor_r=ReplacementFor_R-ReplacementFor_G;if(ReplacementFor_r<
(0x1009+3006-0x1bc7))return false;if(ReplacementFor_r==(0x24f+8502-0x2385)){if(
ReplacementFor_R==(0x124d+2862-0x1d7b));else if(ReplacementFor_R+
ReplacementFor_G<ReplacementFor_n)return false;else{for(int ReplacementFor_i=
(0x1b3+1780-0x8a7);ReplacementFor_i<ReplacementFor_R;ReplacementFor_i++){
ReplacementFor_ans[ReplacementFor_len++]=((char)(0x223+6335-0x1a90));
ReplacementFor_ans[ReplacementFor_len++]=((char)(0x334+8081-0x227e));}return 
true;}}int ReplacementFor_y=ReplacementFor_Y-ReplacementFor_V;if(
ReplacementFor_y<(0x118+7925-0x200d))return false;if(ReplacementFor_y==
(0x923+5694-0x1f61)){if(ReplacementFor_Y==(0x7af+3984-0x173f));else if(
ReplacementFor_Y+ReplacementFor_V<ReplacementFor_n)return false;else{for(int 
ReplacementFor_i=(0x716+5608-0x1cfe);ReplacementFor_i<ReplacementFor_Y;
ReplacementFor_i++){ReplacementFor_ans[ReplacementFor_len++]=
((char)(0xf36+3064-0x1ad5));ReplacementFor_ans[ReplacementFor_len++]=
((char)(0xf8d+3015-0x1afe));}return true;}}int ReplacementFor_b=ReplacementFor_B
-ReplacementFor_O;if(ReplacementFor_b<(0x1162+3749-0x2007))return false;if(
ReplacementFor_b==(0x11ab+4501-0x2340)){if(ReplacementFor_B==
(0x11ea+2041-0x19e3));else if(ReplacementFor_B+ReplacementFor_O<ReplacementFor_n
)return false;else{for(int ReplacementFor_i=(0x1263+139-0x12ee);ReplacementFor_i
<ReplacementFor_B;ReplacementFor_i++){ReplacementFor_ans[ReplacementFor_len++]=
((char)(0x197+9407-0x2614));ReplacementFor_ans[ReplacementFor_len++]=
((char)(0xebf+2679-0x18e7));}return true;}}if(ReplacementFor_r>=ReplacementFor_y
&&ReplacementFor_r>=ReplacementFor_b){ReplacementFor_len=(0x1173+4292-0x2237);
for(int ReplacementFor_i=(0xe70+462-0x103e);ReplacementFor_i<ReplacementFor_r;
ReplacementFor_i++)ReplacementFor_ans[ReplacementFor_len++]=
((char)(0x120a+4554-0x2382));if(!ReplacementFor_add(ReplacementFor_y,
((char)(0x1d55+2038-0x24f2))))return false;if(!ReplacementFor_add(
ReplacementFor_b,((char)(0x249+649-0x490))))return false;}else if(
ReplacementFor_y>=ReplacementFor_r&&ReplacementFor_y>=ReplacementFor_b){
ReplacementFor_len=(0x35b+92-0x3b7);for(int ReplacementFor_i=(0xed9+3140-0x1b1d)
;ReplacementFor_i<ReplacementFor_y;ReplacementFor_i++)ReplacementFor_ans[
ReplacementFor_len++]=((char)(0x14e6+1707-0x1b38));if(!ReplacementFor_add(
ReplacementFor_r,((char)(0x3ac+5589-0x192f))))return false;if(!
ReplacementFor_add(ReplacementFor_b,((char)(0x441+6230-0x1c55))))return false;}
else if(ReplacementFor_b>=ReplacementFor_r&&ReplacementFor_b>=ReplacementFor_y){
ReplacementFor_len=(0xf07+4479-0x2086);for(int ReplacementFor_i=
(0x388+5269-0x181d);ReplacementFor_i<ReplacementFor_b;ReplacementFor_i++)
ReplacementFor_ans[ReplacementFor_len++]=((char)(0xa4+6417-0x1973));if(!
ReplacementFor_add(ReplacementFor_r,((char)(0x1bc2+2254-0x243e))))return false;
if(!ReplacementFor_add(ReplacementFor_y,((char)(0x841+214-0x8be))))return false;
}else assert(false);if(!ReplacementFor_check())return false;
ReplacementFor_replace(ReplacementFor_G,((char)(0x5c9+2151-0xdde)),
((char)(0x15f2+436-0x175f)));ReplacementFor_replace(ReplacementFor_V,
((char)(0x1a0+2394-0xaa1)),((char)(0x558+7727-0x2331)));ReplacementFor_replace(
ReplacementFor_O,((char)(0x1e1+408-0x337)),((char)(0x1f18+293-0x1fee)));
ReplacementFor_ans[ReplacementFor_len]=(0x12b9+4921-0x25f2);return true;}int 
main(){freopen("\x42\x2d\x6c\x61\x72\x67\x65\x2e\x69\x6e","\x72",stdin);freopen(
"\x42\x2e\x6f\x75\x74","\x77",stdout);int ReplacementFor_T;scanf("\x25\x64",&
ReplacementFor_T);for(int Case=(0x1017+5293-0x24c3);Case<=ReplacementFor_T;Case
++){bool ReplacementFor_res=Main();ReplacementFor_ans[ReplacementFor_len]=
(0xc34+4714-0x1e9e);printf(
"\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20\x25\x73" "\n",Case,ReplacementFor_res?
ReplacementFor_ans:"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45");}}
