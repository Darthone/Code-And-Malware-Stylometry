
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cassert>
#include <iostream>
#include <sstream>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <utility>
#include <numeric>
#include <algorithm>
#include <bitset>
#include <complex>
#include <array>
#include <list>
#include <stack>
#include <valarray>
using namespace std;typedef unsigned ReplacementFor_uint;typedef long long Int;
typedef unsigned long long ReplacementFor_UInt;const int ReplacementFor_INF=
1001001001;const Int ReplacementFor_INFLL=1001001001001001001LL;template<
typename ReplacementFor_T>void ReplacementFor_pv(ReplacementFor_T a,
ReplacementFor_T ReplacementFor_b){for(ReplacementFor_T ReplacementFor_i=a;
ReplacementFor_i!=ReplacementFor_b;++ReplacementFor_i)cout<<*ReplacementFor_i<<
"\x20";cout<<endl;}template<typename ReplacementFor_T>void ReplacementFor_chmin(
ReplacementFor_T&a,ReplacementFor_T ReplacementFor_b){if(a>ReplacementFor_b)a=
ReplacementFor_b;}template<typename ReplacementFor_T>void ReplacementFor_chmax(
ReplacementFor_T&a,ReplacementFor_T ReplacementFor_b){if(a<ReplacementFor_b)a=
ReplacementFor_b;}int ReplacementFor_in(){int ReplacementFor_x;scanf("\x25\x64",
&ReplacementFor_x);return ReplacementFor_x;}double fin(){double ReplacementFor_x
;scanf("\x25\x6c\x66",&ReplacementFor_x);return ReplacementFor_x;}Int 
ReplacementFor_lin(){Int ReplacementFor_x;scanf("\x25\x6c\x6c\x64",&
ReplacementFor_x);return ReplacementFor_x;}Int ReplacementFor_D[
(0x392+8501-0x2447)][(0x1314+1056-0x16b4)];int ReplacementFor_E[
(0xa02+1300-0xe96)],S[(0x8fc+3103-0x149b)];double ReplacementFor_X[
(0x9e1+3235-0x1604)][(0x11f+2115-0x8e2)];void solve(){int ReplacementFor_N=
ReplacementFor_in();int Q=ReplacementFor_in();for(int ReplacementFor_i=
(0x11ad+4736-0x242d);ReplacementFor_i<ReplacementFor_N;++ReplacementFor_i){
ReplacementFor_E[ReplacementFor_i]=ReplacementFor_in();S[ReplacementFor_i]=
ReplacementFor_in();}for(int ReplacementFor_i=(0x17da+791-0x1af1);
ReplacementFor_i<ReplacementFor_N;++ReplacementFor_i){for(int ReplacementFor_j=
(0xf9f+731-0x127a);ReplacementFor_j<ReplacementFor_N;++ReplacementFor_j){
ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]=ReplacementFor_lin();if(
ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]==-(0x1013+2487-0x19c9)){
ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]=(ReplacementFor_i==
ReplacementFor_j?(0x758+787-0xa6b):ReplacementFor_INFLL);}}}for(int 
ReplacementFor_k=(0x225a+904-0x25e2);ReplacementFor_k<ReplacementFor_N;++
ReplacementFor_k){for(int ReplacementFor_i=(0x1f6+8301-0x2263);ReplacementFor_i<
ReplacementFor_N;++ReplacementFor_i){for(int ReplacementFor_j=
(0x1733+3445-0x24a8);ReplacementFor_j<ReplacementFor_N;++ReplacementFor_j){
ReplacementFor_chmin(ReplacementFor_D[ReplacementFor_i][ReplacementFor_j],
ReplacementFor_D[ReplacementFor_i][ReplacementFor_k]+ReplacementFor_D[
ReplacementFor_k][ReplacementFor_j]);}}}for(int ReplacementFor_i=
(0x4e5+8061-0x2462);ReplacementFor_i<ReplacementFor_N;++ReplacementFor_i){for(
int ReplacementFor_j=(0x743+6620-0x211f);ReplacementFor_j<ReplacementFor_N;++
ReplacementFor_j){if(ReplacementFor_i==ReplacementFor_j){ReplacementFor_X[
ReplacementFor_i][ReplacementFor_j]=(0x15f5+55-0x162c);}else{if(ReplacementFor_D
[ReplacementFor_i][ReplacementFor_j]>ReplacementFor_E[ReplacementFor_i]){
ReplacementFor_X[ReplacementFor_i][ReplacementFor_j]=ReplacementFor_INFLL;}else{
ReplacementFor_X[ReplacementFor_i][ReplacementFor_j]=ReplacementFor_D[
ReplacementFor_i][ReplacementFor_j]/double(S[ReplacementFor_i]);}}}}for(int 
ReplacementFor_k=(0x11dc+3267-0x1e9f);ReplacementFor_k<ReplacementFor_N;++
ReplacementFor_k){for(int ReplacementFor_i=(0xde4+5730-0x2446);ReplacementFor_i<
ReplacementFor_N;++ReplacementFor_i){for(int ReplacementFor_j=
(0x7d7+7009-0x2338);ReplacementFor_j<ReplacementFor_N;++ReplacementFor_j){
ReplacementFor_chmin(ReplacementFor_X[ReplacementFor_i][ReplacementFor_j],
ReplacementFor_X[ReplacementFor_i][ReplacementFor_k]+ReplacementFor_X[
ReplacementFor_k][ReplacementFor_j]);}}}for(int ReplacementFor_i=
(0x892+1317-0xdb7);ReplacementFor_i<Q;++ReplacementFor_i){int ReplacementFor_u=
ReplacementFor_in()-(0x28d+9217-0x268d);int ReplacementFor_v=ReplacementFor_in()
-(0x20c+204-0x2d7);printf("\x20\x25\x2e\x39\x66",ReplacementFor_X[
ReplacementFor_u][ReplacementFor_v]);}puts("");}int main(){int ReplacementFor_T=
ReplacementFor_in();for(int ReplacementFor_CN=(0x1918+2091-0x2142);
ReplacementFor_CN<=ReplacementFor_T;++ReplacementFor_CN){printf(
"\x43\x61\x73\x65\x20\x23\x25\x64\x3a",ReplacementFor_CN);solve();}return
(0x1441+1055-0x1860);}
