
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cassert>
#include <iostream>
#include <sstream>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <utility>
#include <numeric>
#include <algorithm>
#include <bitset>
#include <complex>
#include <array>
#include <list>
#include <stack>
#include <valarray>
using namespace std;typedef unsigned ReplacementFor_uint;typedef long long Int;
typedef unsigned long long ReplacementFor_UInt;const int ReplacementFor_INF=
1001001001;const Int ReplacementFor_INFLL=1001001001001001001LL;template<
typename ReplacementFor_T>void ReplacementFor_pv(ReplacementFor_T a,
ReplacementFor_T ReplacementFor_b){for(ReplacementFor_T ReplacementFor_i=a;
ReplacementFor_i!=ReplacementFor_b;++ReplacementFor_i)cout<<*ReplacementFor_i<<
"\x20";cout<<endl;}template<typename ReplacementFor_T>void ReplacementFor_chmin(
ReplacementFor_T&a,ReplacementFor_T ReplacementFor_b){if(a>ReplacementFor_b)a=
ReplacementFor_b;}template<typename ReplacementFor_T>void ReplacementFor_chmax(
ReplacementFor_T&a,ReplacementFor_T ReplacementFor_b){if(a<ReplacementFor_b)a=
ReplacementFor_b;}int ReplacementFor_in(){int ReplacementFor_x;scanf("\x25\x64",
&ReplacementFor_x);return ReplacementFor_x;}double fin(){double ReplacementFor_x
;scanf("\x25\x6c\x66",&ReplacementFor_x);return ReplacementFor_x;}Int 
ReplacementFor_lin(){Int ReplacementFor_x;scanf("\x25\x6c\x6c\x64",&
ReplacementFor_x);return ReplacementFor_x;}Int ReplacementFor_D[
(0xa91+5971-0x2164)][(0x3ad+7782-0x2193)];int ReplacementFor_E[
(0xd15+3049-0x187e)],S[(0xd40+973-0x108d)];double ReplacementFor_X[
(0x1927+974-0x1c75)][(0x1000+4316-0x205c)];void solve(){int ReplacementFor_N=
ReplacementFor_in();int Q=ReplacementFor_in();for(int ReplacementFor_i=
(0xe32+2131-0x1685);ReplacementFor_i<ReplacementFor_N;++ReplacementFor_i){
ReplacementFor_E[ReplacementFor_i]=ReplacementFor_in();S[ReplacementFor_i]=
ReplacementFor_in();}for(int ReplacementFor_i=(0x1b3c+887-0x1eb3);
ReplacementFor_i<ReplacementFor_N;++ReplacementFor_i){for(int ReplacementFor_j=
(0x1935+3327-0x2634);ReplacementFor_j<ReplacementFor_N;++ReplacementFor_j){
ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]=ReplacementFor_lin();if(
ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]==-(0x495+1076-0x8c8)){
ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]=(ReplacementFor_i==
ReplacementFor_j?(0x12bc+1559-0x18d3):ReplacementFor_INFLL);}}}for(int 
ReplacementFor_k=(0x2d+5484-0x1599);ReplacementFor_k<ReplacementFor_N;++
ReplacementFor_k){for(int ReplacementFor_i=(0x699+2703-0x1128);ReplacementFor_i<
ReplacementFor_N;++ReplacementFor_i){for(int ReplacementFor_j=
(0x1851+2556-0x224d);ReplacementFor_j<ReplacementFor_N;++ReplacementFor_j){
ReplacementFor_chmin(ReplacementFor_D[ReplacementFor_i][ReplacementFor_j],
ReplacementFor_D[ReplacementFor_i][ReplacementFor_k]+ReplacementFor_D[
ReplacementFor_k][ReplacementFor_j]);}}}for(int ReplacementFor_i=
(0x707+1606-0xd4d);ReplacementFor_i<ReplacementFor_N;++ReplacementFor_i){for(int
 ReplacementFor_j=(0x635+3607-0x144c);ReplacementFor_j<ReplacementFor_N;++
ReplacementFor_j){if(ReplacementFor_i==ReplacementFor_j){ReplacementFor_X[
ReplacementFor_i][ReplacementFor_j]=(0xd32+4498-0x1ec4);}else{if(
ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]>ReplacementFor_E[
ReplacementFor_i]){ReplacementFor_X[ReplacementFor_i][ReplacementFor_j]=
ReplacementFor_INFLL;}else{ReplacementFor_X[ReplacementFor_i][ReplacementFor_j]=
ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]/double(S[ReplacementFor_i])
;}}}}for(int ReplacementFor_k=(0x32f+7500-0x207b);ReplacementFor_k<
ReplacementFor_N;++ReplacementFor_k){for(int ReplacementFor_i=
(0x1417+3267-0x20da);ReplacementFor_i<ReplacementFor_N;++ReplacementFor_i){for(
int ReplacementFor_j=(0xdcf+2307-0x16d2);ReplacementFor_j<ReplacementFor_N;++
ReplacementFor_j){ReplacementFor_chmin(ReplacementFor_X[ReplacementFor_i][
ReplacementFor_j],ReplacementFor_X[ReplacementFor_i][ReplacementFor_k]+
ReplacementFor_X[ReplacementFor_k][ReplacementFor_j]);}}}for(int 
ReplacementFor_i=(0xcf+5630-0x16cd);ReplacementFor_i<Q;++ReplacementFor_i){int 
ReplacementFor_u=ReplacementFor_in()-(0x8a1+1397-0xe15);int ReplacementFor_v=
ReplacementFor_in()-(0x181f+2558-0x221c);printf("\x20\x25\x2e\x39\x66",
ReplacementFor_X[ReplacementFor_u][ReplacementFor_v]);}puts("");}int main(){int 
ReplacementFor_T=ReplacementFor_in();for(int ReplacementFor_CN=
(0x139a+734-0x1677);ReplacementFor_CN<=ReplacementFor_T;++ReplacementFor_CN){
printf("\x43\x61\x73\x65\x20\x23\x25\x64\x3a",ReplacementFor_CN);solve();}return
(0x10f5+2519-0x1acc);}
