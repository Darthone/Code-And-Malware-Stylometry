
#include <cstdio>
#include <algorithm>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <string>
#include <string.h>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <map>
#include <set>
#include <iostream>
#include <sstream>
#include <numeric>
#include <cctype>
#include <bitset>
#include <cassert>
#define ReplacementFor_fi first
#define ReplacementFor_se second
#define ReplacementFor_rep(ReplacementFor_i,ReplacementFor_n) for(int \
ReplacementFor_i = (0x8d9+2184-0x1161); ReplacementFor_i < (ReplacementFor_n); \
++ReplacementFor_i)
#define ReplacementFor_rrep(ReplacementFor_i,ReplacementFor_n) for(int \
ReplacementFor_i = (0x1d5c+24-0x1d73); ReplacementFor_i <= (ReplacementFor_n); \
++ReplacementFor_i)
#define ReplacementFor_drep(ReplacementFor_i,ReplacementFor_n) for(int \
ReplacementFor_i = (ReplacementFor_n)-(0x1766+3260-0x2421); ReplacementFor_i >= \
(0x72f+453-0x8f4); --ReplacementFor_i)
#define ReplacementFor_gep(ReplacementFor_i,ReplacementFor_g,ReplacementFor_j) \
for(int ReplacementFor_i = ReplacementFor_g.ReplacementFor_head[ReplacementFor_j\
]; ReplacementFor_i != -(0xabb+6757-0x251f); ReplacementFor_i = ReplacementFor_g\
.ReplacementFor_e[ReplacementFor_i].ReplacementFor_next)
#define each(ReplacementFor_it,ReplacementFor_c) for(ReplacementFor___typeof((\
ReplacementFor_c).begin()) ReplacementFor_it=(ReplacementFor_c).begin();\
ReplacementFor_it!=(ReplacementFor_c).end();ReplacementFor_it++)
#define ReplacementFor_rng(a) a.begin(),a.end()
#define ReplacementFor_maxs(ReplacementFor_x,ReplacementFor_y) ReplacementFor_x \
= max(ReplacementFor_x,ReplacementFor_y)
#define ReplacementFor_mins(ReplacementFor_x,ReplacementFor_y) ReplacementFor_x \
= min(ReplacementFor_x,ReplacementFor_y)
#define ReplacementFor_pb push_back
#define ReplacementFor_sz(ReplacementFor_x) (int)(ReplacementFor_x).size()
#define ReplacementFor_pcnt ReplacementFor___builtin_popcount
#define ReplacementFor_uni(ReplacementFor_x) ReplacementFor_x.\
ReplacementFor_erase(unique(ReplacementFor_rng(ReplacementFor_x)),\
ReplacementFor_x.end())
#define ReplacementFor_snuke ReplacementFor_srand((unsigned)clock()+(unsigned)\
ReplacementFor_time(NULL));
#define ReplacementFor_df(ReplacementFor_x) int ReplacementFor_x = \
ReplacementFor_in()
#define ReplacementFor_dame { puts("\x2d\x31"); return;}
#define ReplacementFor_show(ReplacementFor_x) cout<<#ReplacementFor_x<<\
"\x20\x3d\x20"<<ReplacementFor_x<<endl;
#define ReplacementFor_PQ(ReplacementFor_T) priority_queue<ReplacementFor_T,\
vector<ReplacementFor_T>,greater<ReplacementFor_T> >
#define ReplacementFor_bn(ReplacementFor_x) (((0xabd+2982-0x1662)<<\
ReplacementFor_x)-(0x555+6091-0x1d1f))
#define ReplacementFor_newline puts("")
#define ReplacementFor_v(ReplacementFor_T) vector<ReplacementFor_T>
#define ReplacementFor_vv(ReplacementFor_T) vector<vector<ReplacementFor_T>>
using namespace std;typedef long long ReplacementFor_ll;typedef unsigned 
ReplacementFor_uint;typedef unsigned long long ReplacementFor_ull;typedef pair<
int,int>ReplacementFor_P;typedef vector<int>ReplacementFor_vi;typedef vector<
ReplacementFor_vi>ReplacementFor_vvi;typedef vector<ReplacementFor_ll>
ReplacementFor_vl;typedef vector<ReplacementFor_P>ReplacementFor_vp;inline int 
ReplacementFor_in(){int ReplacementFor_x;scanf("\x25\x64",&ReplacementFor_x);
return ReplacementFor_x;}inline void ReplacementFor_priv(ReplacementFor_vi a){
ReplacementFor_rep(ReplacementFor_i,ReplacementFor_sz(a))printf(
"\x25\x64\x25\x63",a[ReplacementFor_i],ReplacementFor_i==ReplacementFor_sz(a)-
(0x1396+4699-0x25f0)?'\n':((char)(0x1e6a+1995-0x2615)));}template<typename 
ReplacementFor_T>istream&operator>>(istream&ReplacementFor_i,vector<
ReplacementFor_T>&ReplacementFor_v){ReplacementFor_rep(ReplacementFor_j,
ReplacementFor_sz(ReplacementFor_v))ReplacementFor_i>>ReplacementFor_v[
ReplacementFor_j];return ReplacementFor_i;}template<typename ReplacementFor_T>
string join(const vector<ReplacementFor_T>&ReplacementFor_v){stringstream s;
ReplacementFor_rep(ReplacementFor_i,ReplacementFor_sz(ReplacementFor_v))s<<
((char)(0xe59+793-0x1152))<<ReplacementFor_v[ReplacementFor_i];return s.str().
substr((0x514+603-0x76e));}template<typename ReplacementFor_T>ostream&operator<<
(ostream&ReplacementFor_o,const vector<ReplacementFor_T>&ReplacementFor_v){if(
ReplacementFor_sz(ReplacementFor_v))ReplacementFor_o<<join(ReplacementFor_v);
return ReplacementFor_o;}template<typename ReplacementFor_T1,typename 
ReplacementFor_T2>istream&operator>>(istream&ReplacementFor_i,pair<
ReplacementFor_T1,ReplacementFor_T2>&ReplacementFor_v){return ReplacementFor_i>>
ReplacementFor_v.ReplacementFor_fi>>ReplacementFor_v.ReplacementFor_se;}template
<typename ReplacementFor_T1,typename ReplacementFor_T2>ostream&operator<<(
ostream&ReplacementFor_o,const pair<ReplacementFor_T1,ReplacementFor_T2>&
ReplacementFor_v){return ReplacementFor_o<<ReplacementFor_v.ReplacementFor_fi<<
"\x2c"<<ReplacementFor_v.ReplacementFor_se;}const int ReplacementFor_MX=100005,
ReplacementFor_INF=1001001001;const ReplacementFor_ll ReplacementFor_LINF=1e18;
const double ReplacementFor_eps=1e-10;struct ReplacementFor_Solver{void solve(){
int ReplacementFor_d,ReplacementFor_n;scanf("\x25\x64\x25\x64",&ReplacementFor_d
,&ReplacementFor_n);double ReplacementFor_mx=(0x11a5+666-0x143f);
ReplacementFor_rep(ReplacementFor_i,ReplacementFor_n){int ReplacementFor_x,s;
scanf("\x25\x64\x25\x64",&ReplacementFor_x,&s);double ReplacementFor_now=double(
ReplacementFor_d-ReplacementFor_x)/s;ReplacementFor_maxs(ReplacementFor_mx,
ReplacementFor_now);}double ReplacementFor_ans=ReplacementFor_d/
ReplacementFor_mx;printf("\x25\x2e\x31\x30\x66" "\n",ReplacementFor_ans);}};int 
main(){int ReplacementFor_ts;scanf("\x25\x64",&ReplacementFor_ts);
ReplacementFor_rrep(ReplacementFor_ti,ReplacementFor_ts){ReplacementFor_Solver 
ReplacementFor_solver;printf("\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20",
ReplacementFor_ti);ReplacementFor_solver.solve();}return(0xdb9+6264-0x2631);}
