
#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <cstdio>
#include <cassert>
using namespace std;string ReplacementFor_alternate(int ReplacementFor_N,char 
ReplacementFor_ch1,char ReplacementFor_ch2){string S;for(int ReplacementFor_i=
(0xe91+1174-0x1327);ReplacementFor_i<ReplacementFor_N;ReplacementFor_i++){S+=
ReplacementFor_ch1;S+=ReplacementFor_ch2;}return S;}string ReplacementFor_expand
(const string&S,int ReplacementFor_N,char ReplacementFor_ch1,char 
ReplacementFor_ch2){if(ReplacementFor_N==(0x13dc+63-0x141b))return S;string 
ReplacementFor_T=ReplacementFor_alternate(ReplacementFor_N,ReplacementFor_ch1,
ReplacementFor_ch2);for(int ReplacementFor_i=(0x1b80+105-0x1be9);
ReplacementFor_i<S.size();ReplacementFor_i++){if(S[ReplacementFor_i]==
ReplacementFor_ch1){return S.substr((0xff+2533-0xae4),ReplacementFor_i)+
ReplacementFor_T+S.substr(ReplacementFor_i);}}return"";}string solve(int 
ReplacementFor_N,int ReplacementFor_R,int ReplacementFor_O,int ReplacementFor_Y,
int ReplacementFor_G,int ReplacementFor_B,int ReplacementFor_V){if(
ReplacementFor_R+ReplacementFor_G==ReplacementFor_N&&ReplacementFor_R==
ReplacementFor_G){return ReplacementFor_alternate(ReplacementFor_R,
((char)(0x1bd6+1530-0x217e)),((char)(0x1e33+2286-0x26da)));}if(ReplacementFor_Y+
ReplacementFor_V==ReplacementFor_N&&ReplacementFor_Y==ReplacementFor_V){return 
ReplacementFor_alternate(ReplacementFor_Y,((char)(0x10f+1386-0x620)),
((char)(0x933+2801-0x13ce)));}if(ReplacementFor_B+ReplacementFor_O==
ReplacementFor_N&&ReplacementFor_B==ReplacementFor_O){return 
ReplacementFor_alternate(ReplacementFor_B,((char)(0x598+2858-0x1080)),
((char)(0x501+3005-0x106f)));}bool ReplacementFor_fail=false;if(ReplacementFor_O
>(0x1505+1596-0x1b41)){ReplacementFor_B-=ReplacementFor_O;if(ReplacementFor_B<=
(0x150f+630-0x1785)){return"";}}if(ReplacementFor_G>(0xcc7+6554-0x2661)){
ReplacementFor_R-=ReplacementFor_G;if(ReplacementFor_R<=(0x4ea+4750-0x1778)){
return"";}}if(ReplacementFor_V>(0x434+86-0x48a)){ReplacementFor_Y-=
ReplacementFor_V;if(ReplacementFor_Y<=(0x160c+1781-0x1d01)){return"";}}vector<
pair<int,char> >A;A.push_back(make_pair(ReplacementFor_R,
((char)(0x83b+586-0xa33))));A.push_back(make_pair(ReplacementFor_Y,
((char)(0x103+9036-0x23f6))));A.push_back(make_pair(ReplacementFor_B,
((char)(0x2112+1412-0x2654))));sort(A.rbegin(),A.rend());if(A[
(0x717+7885-0x25e4)].first>A[(0x4fa+8502-0x262f)].first+A[(0x10c4+753-0x13b3)].
first){return"";}string S(ReplacementFor_R+ReplacementFor_Y+ReplacementFor_B,
((char)(0xf6+3211-0xd42)));for(int ReplacementFor_i=(0x1565+294-0x168b);
ReplacementFor_i<A[(0x1821+3420-0x257d)].first;ReplacementFor_i++){S[
(0x16a1+1505-0x1c80)*ReplacementFor_i]=A[(0x1847+820-0x1b7b)].second;}for(int 
ReplacementFor_i=(0x7f4+13-0x7ff)*A[(0x9d3+1462-0xf89)].first-
(0xf60+2296-0x1857);ReplacementFor_i<ReplacementFor_R+ReplacementFor_Y+
ReplacementFor_B;ReplacementFor_i++){if(S[ReplacementFor_i-(0x726+3300-0x1409)]
==A[(0x1018+4352-0x2117)].second){S[ReplacementFor_i]=A[(0x8cc+3725-0x1757)].
second;A[(0x18d1+1027-0x1cd2)].first--;}else{S[ReplacementFor_i]=A[
(0xbdf+5584-0x21ae)].second;A[(0xe36+445-0xff2)].first--;}}for(int 
ReplacementFor_i=(0x2020+674-0x22c2);ReplacementFor_i<S.size();ReplacementFor_i
++){if(S[ReplacementFor_i]==((char)(0x79a+5581-0x1d28))){if(A[(0xf68+587-0x11b2)
].first>(0x2ab+577-0x4ec)){A[(0x6b5+7480-0x23ec)].first--;S[ReplacementFor_i]=A[
(0x1422+3020-0x1fed)].second;}else{A[(0x17d9+1705-0x1e80)].first--;S[
ReplacementFor_i]=A[(0x75d+3967-0x16da)].second;}}}assert(A[(0x1013+5468-0x256e)
].first==(0xbf7+2344-0x151f));assert(A[(0x1ab7+1197-0x1f62)].first==
(0x126b+3722-0x20f5));S=ReplacementFor_expand(S,ReplacementFor_O,
((char)(0xe48+567-0x103d)),((char)(0x8d4+372-0x9f9)));S=ReplacementFor_expand(S,
ReplacementFor_G,((char)(0x1d92+2365-0x267d)),((char)(0x3c4+6169-0x1b96)));S=
ReplacementFor_expand(S,ReplacementFor_V,((char)(0x32f+6327-0x1b8d)),
((char)(0x2212+188-0x2278)));return S;}int main(){int ReplacementFor_T;cin>>
ReplacementFor_T;for(int ReplacementFor_t=(0x1a09+160-0x1aa8);ReplacementFor_t<=
ReplacementFor_T;ReplacementFor_t++){int ReplacementFor_N,ReplacementFor_R,
ReplacementFor_O,ReplacementFor_Y,ReplacementFor_G,ReplacementFor_B,
ReplacementFor_V;cin>>ReplacementFor_N>>ReplacementFor_R>>ReplacementFor_O>>
ReplacementFor_Y>>ReplacementFor_G>>ReplacementFor_B>>ReplacementFor_V;string S=
solve(ReplacementFor_N,ReplacementFor_R,ReplacementFor_O,ReplacementFor_Y,
ReplacementFor_G,ReplacementFor_B,ReplacementFor_V);if(S.size()==
(0xf9d+5114-0x2397)){S="\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45";}cout<<
"\x43\x61\x73\x65\x20\x23"<<ReplacementFor_t<<"\x3a\x20"<<S<<endl;}return
(0x5cf+8014-0x251d);}
