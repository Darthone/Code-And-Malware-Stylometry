
#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <ctype.h>
#include <deque>
#include <queue>
#include <cstring>
#include <set>
#include <list>
#include <map>
#include <random>
#include <unordered_map>
#include <stdio.h>
using namespace std;typedef long long ReplacementFor_ll;typedef long double 
ReplacementFor_ld;typedef std::vector<int>ReplacementFor_vi;typedef std::vector<
bool>ReplacementFor_vb;typedef std::vector<string>ReplacementFor_vs;typedef std
::vector<double>ReplacementFor_vd;typedef std::vector<long long>
ReplacementFor_vll;typedef std::vector<std::vector<int> >ReplacementFor_vvi;
typedef vector<ReplacementFor_vvi>ReplacementFor_vvvi;typedef vector<
ReplacementFor_vll>ReplacementFor_vvll;typedef std::vector<std::pair<int,int> >
ReplacementFor_vpi;typedef vector<ReplacementFor_vpi>ReplacementFor_vvpi;typedef
 std::pair<int,int>ReplacementFor_pi;typedef std::pair<ReplacementFor_ll,
ReplacementFor_ll>ReplacementFor_pll;typedef std::vector<ReplacementFor_pll>
ReplacementFor_vpll;const long long ReplacementFor_mod=1000000007;
#define ReplacementFor_all(ReplacementFor_c) (ReplacementFor_c).begin(),(\
ReplacementFor_c).end()
#define ReplacementFor_sz(ReplacementFor_c) (int)(ReplacementFor_c).size()
#define ReplacementFor_forn(ReplacementFor_i, a, ReplacementFor_b) for(int \
ReplacementFor_i = a; ReplacementFor_i < ReplacementFor_b; ReplacementFor_i++)
#define ReplacementFor_pb push_back
#define ReplacementFor_mp make_pair
int main(){
#ifndef ReplacementFor_ONLINE_JUDGE
freopen("\x69\x6e\x70\x75\x74\x2e\x74\x78\x74","\x72\x74",stdin);freopen(
"\x6f\x75\x74\x70\x75\x74\x2e\x74\x78\x74","\x77\x74",stdout);
#endif
int ReplacementFor_t;scanf("\x25\x64",&ReplacementFor_t);ReplacementFor_forn(
ReplacementFor_iad,(0x16f+1705-0x818),ReplacementFor_t){printf(
"\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20",ReplacementFor_iad+
(0xd6d+4740-0x1ff0));int ReplacementFor_n;int ReplacementFor_r,ReplacementFor_o,
ReplacementFor_y,ReplacementFor_g,ReplacementFor_b,ReplacementFor_v;string 
ReplacementFor_ans;cin>>ReplacementFor_n>>ReplacementFor_r>>ReplacementFor_o>>
ReplacementFor_y>>ReplacementFor_g>>ReplacementFor_b>>ReplacementFor_v;if(
ReplacementFor_r+ReplacementFor_y==(0x164b+1623-0x1ca2)){if(ReplacementFor_g>
(0xcb6+1674-0x1340)||ReplacementFor_v>(0xf8d+3848-0x1e95)||ReplacementFor_b!=
ReplacementFor_o){cout<<"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue
;}else{ReplacementFor_forn(ReplacementFor_i,(0x1137+2709-0x1bcc),
ReplacementFor_b)ReplacementFor_ans+="\x42\x4f";cout<<ReplacementFor_ans<<endl;
continue;}}if(ReplacementFor_r+ReplacementFor_b==(0xa30+4088-0x1a28)){if(
ReplacementFor_g>(0xe6+8602-0x2280)||ReplacementFor_o>(0x5f2+6128-0x1de2)||
ReplacementFor_y!=ReplacementFor_v){cout<<
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue;}else{
ReplacementFor_forn(ReplacementFor_i,(0x944+7540-0x26b8),ReplacementFor_y)
ReplacementFor_ans+="\x59\x56";cout<<ReplacementFor_ans<<endl;continue;}}if(
ReplacementFor_b+ReplacementFor_y==(0xd2b+1550-0x1339)){if(ReplacementFor_o>
(0xba9+6338-0x246b)||ReplacementFor_v>(0xbad+4418-0x1cef)||ReplacementFor_r!=
ReplacementFor_g){cout<<"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue
;}else{ReplacementFor_forn(ReplacementFor_i,(0x4c9+3118-0x10f7),ReplacementFor_g
)ReplacementFor_ans+="\x52\x47";cout<<ReplacementFor_ans<<endl;continue;}}
ReplacementFor_r-=ReplacementFor_g;ReplacementFor_y-=ReplacementFor_v;
ReplacementFor_b-=ReplacementFor_o;if(ReplacementFor_r<(0x5bb+286-0x6d9)||
ReplacementFor_y<(0xced+959-0x10ac)||ReplacementFor_b<(0x80d+2930-0x137f)){cout
<<"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue;}if(ReplacementFor_r
==(0x2ff+6635-0x1cea)&&ReplacementFor_g>(0x1799+38-0x17bf)){cout<<
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue;}if(ReplacementFor_y==
(0x1637+3749-0x24dc)&&ReplacementFor_v>(0x1323+2702-0x1db1)){cout<<
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue;}if(ReplacementFor_b==
(0xef5+3108-0x1b19)&&ReplacementFor_o>(0xb8+3789-0xf85)){cout<<
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue;}if(ReplacementFor_r+
ReplacementFor_y<ReplacementFor_b||ReplacementFor_r+ReplacementFor_b<
ReplacementFor_y||ReplacementFor_b+ReplacementFor_y<ReplacementFor_r){cout<<
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue;}int ReplacementFor_cnt
=ReplacementFor_r+ReplacementFor_y+ReplacementFor_b;ReplacementFor_ans=string(
ReplacementFor_cnt,((char)(0x52a+7540-0x2270)));int ReplacementFor_cur=
(0x1e78+963-0x223b);if((0x14a3+3474-0x2233)*ReplacementFor_r==ReplacementFor_cnt
){ReplacementFor_forn(ReplacementFor_i,(0xf1+3310-0xddf),ReplacementFor_r){
ReplacementFor_ans[(0x10d6+440-0x128c)*ReplacementFor_i]=
((char)(0x1420+2990-0x1f7c));}ReplacementFor_forn(ReplacementFor_i,
(0x1480+340-0x15d4),ReplacementFor_r){if(ReplacementFor_y>(0x16f3+2968-0x228b)){
ReplacementFor_ans[(0x1713+3237-0x23b6)*ReplacementFor_i+(0x7b6+7330-0x2457)]=
((char)(0x525+2267-0xda7));ReplacementFor_y--;}else ReplacementFor_ans[
(0x175+3327-0xe72)*ReplacementFor_i+(0x1e17+299-0x1f41)]=
((char)(0x54f+1287-0xa14));}}else if((0xfad+3349-0x1cc0)*ReplacementFor_b==
ReplacementFor_cnt){ReplacementFor_forn(ReplacementFor_i,(0x63a+4137-0x1663),
ReplacementFor_b){ReplacementFor_ans[(0xa45+1394-0xfb5)*ReplacementFor_i]=
((char)(0x992+7047-0x24d7));}ReplacementFor_forn(ReplacementFor_i,
(0x17b5+2721-0x2256),ReplacementFor_b){if(ReplacementFor_y>(0x22a+8175-0x2219)){
ReplacementFor_ans[(0xfc7+5795-0x2668)*ReplacementFor_i+(0xab9+4442-0x1c12)]=
((char)(0x81a+3490-0x1563));ReplacementFor_y--;}else ReplacementFor_ans[
(0x13f0+913-0x177f)*ReplacementFor_i+(0x566+7806-0x23e3)]=
((char)(0x134a+766-0x15f6));}}else if((0x300+688-0x5ae)*ReplacementFor_y==
ReplacementFor_cnt){ReplacementFor_forn(ReplacementFor_i,(0x1517+1774-0x1c05),
ReplacementFor_y){ReplacementFor_ans[(0x1b85+1686-0x2219)*ReplacementFor_i]=
((char)(0xde9+1109-0x11e5));}ReplacementFor_forn(ReplacementFor_i,
(0x125a+4670-0x2498),ReplacementFor_y){if(ReplacementFor_r>(0x160+6367-0x1a3f)){
ReplacementFor_ans[(0xc37+650-0xebf)*ReplacementFor_i+(0x3e9+2428-0xd64)]=
((char)(0x1498+3153-0x2097));ReplacementFor_r--;}else ReplacementFor_ans[
(0xe45+5942-0x2579)*ReplacementFor_i+(0x1f6+4216-0x126d)]=
((char)(0x1234+4293-0x22b7));}}else{ReplacementFor_forn(ReplacementFor_i,
(0x895+2998-0x144b),ReplacementFor_cnt){if(ReplacementFor_r>(0x1544+928-0x18e4))
{ReplacementFor_ans[ReplacementFor_cur]=((char)(0x108+4541-0x1273));
ReplacementFor_r--;}else if(ReplacementFor_y>(0xd2d+5842-0x23ff)){
ReplacementFor_ans[ReplacementFor_cur]=((char)(0x1317+3529-0x2087));
ReplacementFor_y--;}else if(ReplacementFor_b>(0x1340+2367-0x1c7f)){
ReplacementFor_ans[ReplacementFor_cur]=((char)(0x917+6159-0x20e4));
ReplacementFor_b--;}ReplacementFor_cur+=(0x187b+1309-0x1d96);if(
ReplacementFor_cur>=ReplacementFor_cnt)ReplacementFor_cur=(0x209c+989-0x2478);}}
if(ReplacementFor_g>(0x216+9141-0x25cb)){int ReplacementFor_k=
(0xcc9+4095-0x1cc8);while(ReplacementFor_ans[ReplacementFor_k]!=
((char)(0x1551+314-0x1639)))ReplacementFor_k++;string ReplacementFor_bef=
ReplacementFor_ans.substr((0x1259+4354-0x235b),ReplacementFor_k);string 
ReplacementFor_aft=ReplacementFor_ans.substr(ReplacementFor_k);
ReplacementFor_forn(ReplacementFor_i,(0x1941+2659-0x23a4),ReplacementFor_g)
ReplacementFor_bef+="\x52\x47";ReplacementFor_ans=ReplacementFor_bef+
ReplacementFor_aft;}if(ReplacementFor_v>(0x1849+43-0x1874)){int ReplacementFor_k
=(0x42c+8449-0x252d);while(ReplacementFor_ans[ReplacementFor_k]!=
((char)(0x721+4462-0x1836)))ReplacementFor_k++;string ReplacementFor_bef=
ReplacementFor_ans.substr((0x1f6a+916-0x22fe),ReplacementFor_k);string 
ReplacementFor_aft=ReplacementFor_ans.substr(ReplacementFor_k);
ReplacementFor_forn(ReplacementFor_i,(0x20e6+773-0x23eb),ReplacementFor_v)
ReplacementFor_bef+="\x59\x56";ReplacementFor_ans=ReplacementFor_bef+
ReplacementFor_aft;}if(ReplacementFor_o>(0x11c2+4482-0x2344)){int 
ReplacementFor_k=(0x850+5995-0x1fbb);while(ReplacementFor_ans[ReplacementFor_k]
!=((char)(0xcd5+2202-0x152d)))ReplacementFor_k++;string ReplacementFor_bef=
ReplacementFor_ans.substr((0x320+5611-0x190b),ReplacementFor_k);string 
ReplacementFor_aft=ReplacementFor_ans.substr(ReplacementFor_k);
ReplacementFor_forn(ReplacementFor_i,(0x1d9+5775-0x1868),ReplacementFor_o)
ReplacementFor_bef+="\x42\x4f";ReplacementFor_ans=ReplacementFor_bef+
ReplacementFor_aft;}cout<<ReplacementFor_ans<<endl;}}
