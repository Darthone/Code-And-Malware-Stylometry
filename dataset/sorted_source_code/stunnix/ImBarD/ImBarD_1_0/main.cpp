
#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <ctype.h>
#include <deque>
#include <queue>
#include <cstring>
#include <set>
#include <list>
#include <map>
#include <random>
#include <unordered_map>
#include <stdio.h>
using namespace std;typedef long long ReplacementFor_ll;typedef long double 
ReplacementFor_ld;typedef std::vector<int>ReplacementFor_vi;typedef std::vector<
bool>ReplacementFor_vb;typedef std::vector<string>ReplacementFor_vs;typedef std
::vector<double>ReplacementFor_vd;typedef std::vector<long long>
ReplacementFor_vll;typedef std::vector<std::vector<int> >ReplacementFor_vvi;
typedef vector<ReplacementFor_vvi>ReplacementFor_vvvi;typedef vector<
ReplacementFor_vll>ReplacementFor_vvll;typedef std::vector<std::pair<int,int> >
ReplacementFor_vpi;typedef vector<ReplacementFor_vpi>ReplacementFor_vvpi;typedef
 std::pair<int,int>ReplacementFor_pi;typedef std::pair<ReplacementFor_ll,
ReplacementFor_ll>ReplacementFor_pll;typedef std::vector<ReplacementFor_pll>
ReplacementFor_vpll;const long long ReplacementFor_mod=1000000007;
#define ReplacementFor_all(ReplacementFor_c) (ReplacementFor_c).begin(),(\
ReplacementFor_c).end()
#define ReplacementFor_sz(ReplacementFor_c) (int)(ReplacementFor_c).size()
#define ReplacementFor_forn(ReplacementFor_i, a, ReplacementFor_b) for(int \
ReplacementFor_i = a; ReplacementFor_i < ReplacementFor_b; ReplacementFor_i++)
#define ReplacementFor_pb push_back
#define ReplacementFor_mp make_pair
int main(){
#ifndef ReplacementFor_ONLINE_JUDGE
freopen("\x69\x6e\x70\x75\x74\x2e\x74\x78\x74","\x72\x74",stdin);freopen(
"\x6f\x75\x74\x70\x75\x74\x2e\x74\x78\x74","\x77\x74",stdout);
#endif
int ReplacementFor_t;scanf("\x25\x64",&ReplacementFor_t);ReplacementFor_forn(
ReplacementFor_iad,(0x18+7971-0x1f3b),ReplacementFor_t){printf(
"\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20",ReplacementFor_iad+
(0x19f2+595-0x1c44));int ReplacementFor_n;int ReplacementFor_r,ReplacementFor_o,
ReplacementFor_y,ReplacementFor_g,ReplacementFor_b,ReplacementFor_v;string 
ReplacementFor_ans;cin>>ReplacementFor_n>>ReplacementFor_r>>ReplacementFor_o>>
ReplacementFor_y>>ReplacementFor_g>>ReplacementFor_b>>ReplacementFor_v;if(
ReplacementFor_r+ReplacementFor_y==(0x288+2402-0xbea)){if(ReplacementFor_g>
(0x447+7168-0x2047)||ReplacementFor_v>(0x31d+8595-0x24b0)||ReplacementFor_b!=
ReplacementFor_o){cout<<"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue
;}else{ReplacementFor_forn(ReplacementFor_i,(0x7c8+6513-0x2139),ReplacementFor_b
)ReplacementFor_ans+="\x42\x4f";cout<<ReplacementFor_ans<<endl;continue;}}if(
ReplacementFor_r+ReplacementFor_b==(0x1b06+1514-0x20f0)){if(ReplacementFor_g>
(0x577+288-0x697)||ReplacementFor_o>(0x99c+6743-0x23f3)||ReplacementFor_y!=
ReplacementFor_v){cout<<"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue
;}else{ReplacementFor_forn(ReplacementFor_i,(0x5cd+6925-0x20da),ReplacementFor_y
)ReplacementFor_ans+="\x59\x56";cout<<ReplacementFor_ans<<endl;continue;}}if(
ReplacementFor_b+ReplacementFor_y==(0xee4+1929-0x166d)){if(ReplacementFor_o>
(0xe4+8058-0x205e)||ReplacementFor_v>(0xda7+6273-0x2628)||ReplacementFor_r!=
ReplacementFor_g){cout<<"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue
;}else{ReplacementFor_forn(ReplacementFor_i,(0xb9+5065-0x1482),ReplacementFor_g)
ReplacementFor_ans+="\x52\x47";cout<<ReplacementFor_ans<<endl;continue;}}
ReplacementFor_r-=ReplacementFor_g;ReplacementFor_y-=ReplacementFor_v;
ReplacementFor_b-=ReplacementFor_o;if(ReplacementFor_r<(0x14aa+1777-0x1b9b)||
ReplacementFor_y<(0x1ff+8839-0x2486)||ReplacementFor_b<(0xa58+3316-0x174c)){cout
<<"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue;}if(ReplacementFor_r
==(0xc15+4442-0x1d6f)&&ReplacementFor_g>(0xd10+2721-0x17b1)){cout<<
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue;}if(ReplacementFor_y==
(0x30b+6096-0x1adb)&&ReplacementFor_v>(0x72a+784-0xa3a)){cout<<
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue;}if(ReplacementFor_b==
(0xc90+470-0xe66)&&ReplacementFor_o>(0x182d+97-0x188e)){cout<<
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue;}if(ReplacementFor_r+
ReplacementFor_y<ReplacementFor_b||ReplacementFor_r+ReplacementFor_b<
ReplacementFor_y||ReplacementFor_b+ReplacementFor_y<ReplacementFor_r){cout<<
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";continue;}int ReplacementFor_cnt
=ReplacementFor_r+ReplacementFor_y+ReplacementFor_b;ReplacementFor_ans=string(
ReplacementFor_cnt,((char)(0xbed+6090-0x2389)));int ReplacementFor_cur=
(0xe4c+2238-0x170a);if((0x190c+2649-0x2363)*ReplacementFor_r==ReplacementFor_cnt
){ReplacementFor_forn(ReplacementFor_i,(0x13b6+4134-0x23dc),ReplacementFor_r){
ReplacementFor_ans[(0x682+8225-0x26a1)*ReplacementFor_i]=
((char)(0x110+7153-0x1caf));}ReplacementFor_forn(ReplacementFor_i,
(0x81+4279-0x1138),ReplacementFor_r){if(ReplacementFor_y>(0x10b5+2399-0x1a14)){
ReplacementFor_ans[(0x1674+1521-0x1c63)*ReplacementFor_i+(0x1b39+2764-0x2604)]=
((char)(0xd67+2296-0x1606));ReplacementFor_y--;}else ReplacementFor_ans[
(0x135+5309-0x15f0)*ReplacementFor_i+(0x9a2+400-0xb31)]=
((char)(0x37d+8570-0x24b5));}}else if((0xa7c+3967-0x19f9)*ReplacementFor_b==
ReplacementFor_cnt){ReplacementFor_forn(ReplacementFor_i,(0x803+3116-0x142f),
ReplacementFor_b){ReplacementFor_ans[(0x1002+5008-0x2390)*ReplacementFor_i]=
((char)(0x84c+3833-0x1703));}ReplacementFor_forn(ReplacementFor_i,
(0x19f4+2362-0x232e),ReplacementFor_b){if(ReplacementFor_y>(0x13e1+4512-0x2581))
{ReplacementFor_ans[(0x808+3800-0x16de)*ReplacementFor_i+(0x397+78-0x3e4)]=
((char)(0x129a+971-0x160c));ReplacementFor_y--;}else ReplacementFor_ans[
(0xb4f+1126-0xfb3)*ReplacementFor_i+(0x366+9098-0x26ef)]=
((char)(0x18dc+23-0x18a1));}}else if((0xbd9+3435-0x1942)*ReplacementFor_y==
ReplacementFor_cnt){ReplacementFor_forn(ReplacementFor_i,(0x1605+4237-0x2692),
ReplacementFor_y){ReplacementFor_ans[(0x4dc+1863-0xc21)*ReplacementFor_i]=
((char)(0x591+4412-0x1674));}ReplacementFor_forn(ReplacementFor_i,
(0x3b0+1510-0x996),ReplacementFor_y){if(ReplacementFor_r>(0x152d+1425-0x1abe)){
ReplacementFor_ans[(0x1aa+738-0x48a)*ReplacementFor_i+(0x823+1042-0xc34)]=
((char)(0x10d+2890-0xc05));ReplacementFor_r--;}else ReplacementFor_ans[
(0x7f8+930-0xb98)*ReplacementFor_i+(0xc69+673-0xf09)]=
((char)(0x177d+2688-0x21bb));}}else{ReplacementFor_forn(ReplacementFor_i,
(0xff6+1913-0x176f),ReplacementFor_cnt){if(ReplacementFor_r>(0x250+668-0x4ec)){
ReplacementFor_ans[ReplacementFor_cur]=((char)(0x1880+1226-0x1cf8));
ReplacementFor_r--;}else if(ReplacementFor_y>(0x9a2+1985-0x1163)){
ReplacementFor_ans[ReplacementFor_cur]=((char)(0xda0+4789-0x1ffc));
ReplacementFor_y--;}else if(ReplacementFor_b>(0xc55+21-0xc6a)){
ReplacementFor_ans[ReplacementFor_cur]=((char)(0x1953+1284-0x1e15));
ReplacementFor_b--;}ReplacementFor_cur+=(0xb55+2647-0x15aa);if(
ReplacementFor_cur>=ReplacementFor_cnt)ReplacementFor_cur=(0x9c3+1377-0xf23);}}
if(ReplacementFor_g>(0x970+7143-0x2557)){int ReplacementFor_k=(0x22e4+45-0x2311)
;while(ReplacementFor_ans[ReplacementFor_k]!=((char)(0xd4b+1726-0x13b7)))
ReplacementFor_k++;string ReplacementFor_bef=ReplacementFor_ans.substr(
(0x1070+1074-0x14a2),ReplacementFor_k);string ReplacementFor_aft=
ReplacementFor_ans.substr(ReplacementFor_k);ReplacementFor_forn(ReplacementFor_i
,(0x1281+2768-0x1d51),ReplacementFor_g)ReplacementFor_bef+="\x52\x47";
ReplacementFor_ans=ReplacementFor_bef+ReplacementFor_aft;}if(ReplacementFor_v>
(0x1bd1+1916-0x234d)){int ReplacementFor_k=(0x13f3+3999-0x2392);while(
ReplacementFor_ans[ReplacementFor_k]!=((char)(0x10cc+5432-0x25ab)))
ReplacementFor_k++;string ReplacementFor_bef=ReplacementFor_ans.substr(
(0x62+600-0x2ba),ReplacementFor_k);string ReplacementFor_aft=ReplacementFor_ans.
substr(ReplacementFor_k);ReplacementFor_forn(ReplacementFor_i,
(0x276+8753-0x24a7),ReplacementFor_v)ReplacementFor_bef+="\x59\x56";
ReplacementFor_ans=ReplacementFor_bef+ReplacementFor_aft;}if(ReplacementFor_o>
(0x643+4634-0x185d)){int ReplacementFor_k=(0x6a+5436-0x15a6);while(
ReplacementFor_ans[ReplacementFor_k]!=((char)(0x92f+2231-0x11a4)))
ReplacementFor_k++;string ReplacementFor_bef=ReplacementFor_ans.substr(
(0x1a55+2540-0x2441),ReplacementFor_k);string ReplacementFor_aft=
ReplacementFor_ans.substr(ReplacementFor_k);ReplacementFor_forn(ReplacementFor_i
,(0x217b+817-0x24ac),ReplacementFor_o)ReplacementFor_bef+="\x42\x4f";
ReplacementFor_ans=ReplacementFor_bef+ReplacementFor_aft;}cout<<
ReplacementFor_ans<<endl;}}
