
#include<iostream>
#include<cmath>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<queue>
using namespace std;int ReplacementFor_b[(0x201+3494-0xf39)][(0xd3a+884-0x1040)]
;long long ReplacementFor_d[(0x4fc+3041-0x106f)][(0x16a7+1017-0x1a32)];int 
ReplacementFor_n,ReplacementFor_ss[(0xf14+5439-0x23e5)],ReplacementFor_e[
(0x454+2152-0xc4e)],q,ReplacementFor_pd[(0x8bb+4583-0x1a34)];double 
ReplacementFor_dis[(0xa61+2614-0x1429)];queue<int>Q;double ReplacementFor_eps=
1e-9;double ReplacementFor_getans(int s,int ReplacementFor_t){for(int 
ReplacementFor_i=(0x3f2+5701-0x1a36);ReplacementFor_i<=ReplacementFor_n;
ReplacementFor_i++)ReplacementFor_dis[ReplacementFor_i]=1e100;memset(
ReplacementFor_pd,(0x1352+1057-0x1773),sizeof ReplacementFor_pd);
ReplacementFor_dis[s]=(0x227+1376-0x787);Q.push(s);ReplacementFor_pd[s]=
(0x64a+7302-0x22cf);while(!Q.empty()){int ReplacementFor_k=Q.front();Q.pop();for
(int ReplacementFor_i=(0xe3f+3630-0x1c6c);ReplacementFor_i<=ReplacementFor_n;
ReplacementFor_i++)if(ReplacementFor_d[ReplacementFor_k][ReplacementFor_i]<=
ReplacementFor_e[ReplacementFor_k]+ReplacementFor_eps&&ReplacementFor_dis[
ReplacementFor_i]>ReplacementFor_eps+ReplacementFor_dis[ReplacementFor_k]+1.0*
ReplacementFor_d[ReplacementFor_k][ReplacementFor_i]/ReplacementFor_ss[
ReplacementFor_k]){ReplacementFor_dis[ReplacementFor_i]=ReplacementFor_dis[
ReplacementFor_k]+1.0*ReplacementFor_d[ReplacementFor_k][ReplacementFor_i]/
ReplacementFor_ss[ReplacementFor_k];if(ReplacementFor_pd[ReplacementFor_i]==
(0xa94+6866-0x2566)){Q.push(ReplacementFor_i);ReplacementFor_pd[ReplacementFor_i
]=(0xb73+5605-0x2157);}}ReplacementFor_pd[ReplacementFor_k]=(0x126a+1707-0x1915)
;}return ReplacementFor_dis[ReplacementFor_t];}void solve(){scanf("\x25\x64",&
ReplacementFor_n);scanf("\x25\x64",&q);memset(ReplacementFor_d,
(0x1a05+2514-0x2398),sizeof ReplacementFor_d);for(int ReplacementFor_i=
(0x1947+552-0x1b6e);ReplacementFor_i<=ReplacementFor_n;ReplacementFor_i++)scanf(
"\x25\x64\x25\x64",&ReplacementFor_e[ReplacementFor_i],&ReplacementFor_ss[
ReplacementFor_i]);for(int ReplacementFor_i=(0x1883+2765-0x234f);
ReplacementFor_i<=ReplacementFor_n;ReplacementFor_i++){ReplacementFor_d[
ReplacementFor_i][ReplacementFor_i]=(0x5c5+134-0x64b);for(int ReplacementFor_j=
(0x1a7+8857-0x243f);ReplacementFor_j<=ReplacementFor_n;ReplacementFor_j++){scanf
("\x25\x64",&ReplacementFor_b[ReplacementFor_i][ReplacementFor_j]);if(
ReplacementFor_b[ReplacementFor_i][ReplacementFor_j]!=-(0x15c4+896-0x1943))
ReplacementFor_d[ReplacementFor_i][ReplacementFor_j]=ReplacementFor_b[
ReplacementFor_i][ReplacementFor_j];}}for(int ReplacementFor_i=
(0x4d2+8610-0x2673);ReplacementFor_i<=ReplacementFor_n;ReplacementFor_i++)for(
int ReplacementFor_j=(0x4b3+2488-0xe6a);ReplacementFor_j<=ReplacementFor_n;
ReplacementFor_j++)for(int ReplacementFor_k=(0xbb0+3329-0x18b0);ReplacementFor_k
<=ReplacementFor_n;ReplacementFor_k++)ReplacementFor_d[ReplacementFor_j][
ReplacementFor_k]=min(ReplacementFor_d[ReplacementFor_j][ReplacementFor_i]+
ReplacementFor_d[ReplacementFor_i][ReplacementFor_k],ReplacementFor_d[
ReplacementFor_j][ReplacementFor_k]);for(;q;q--){int ReplacementFor_k1,
ReplacementFor_k2;scanf("\x25\x64\x25\x64",&ReplacementFor_k1,&ReplacementFor_k2
);printf("\x20\x25\x2e\x31\x31\x6c\x66",ReplacementFor_getans(ReplacementFor_k1,
ReplacementFor_k2));}putchar('\n');}int main(){freopen("\x43\x73\x2e\x69\x6e",
"\x72",stdin);freopen("\x43\x73\x2e\x6f\x75\x74","\x77",stdout);int 
ReplacementFor_t;scanf("\x25\x64",&ReplacementFor_t);for(int ReplacementFor_i=
(0x149a+4431-0x25e8);ReplacementFor_i<=ReplacementFor_t;ReplacementFor_i++){
printf("\x43\x61\x73\x65\x20\x23\x25\x64\x3a",ReplacementFor_i);solve();}return
(0x10b6+1913-0x182f);}
