
#include<iostream>
#include<cmath>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<queue>
using namespace std;int ReplacementFor_b[(0x9f1+6322-0x2235)][
(0x176b+3344-0x240d)];long long ReplacementFor_d[(0xc17+2723-0x164c)][
(0xf16+2570-0x18b2)];int ReplacementFor_n,ReplacementFor_ss[(0x2634+146-0x2658)]
,ReplacementFor_e[(0x3e4+3548-0x1152)],q,ReplacementFor_pd[(0x120+3405-0xdff)];
double ReplacementFor_dis[(0x1870+3379-0x2535)];queue<int>Q;double 
ReplacementFor_eps=1e-9;double ReplacementFor_getans(int s,int ReplacementFor_t)
{for(int ReplacementFor_i=(0x19ca+1569-0x1fea);ReplacementFor_i<=
ReplacementFor_n;ReplacementFor_i++)ReplacementFor_dis[ReplacementFor_i]=1e100;
memset(ReplacementFor_pd,(0xe84+5022-0x2222),sizeof ReplacementFor_pd);
ReplacementFor_dis[s]=(0x852+4945-0x1ba3);Q.push(s);ReplacementFor_pd[s]=
(0x2082+241-0x2172);while(!Q.empty()){int ReplacementFor_k=Q.front();Q.pop();for
(int ReplacementFor_i=(0x2fa+1520-0x8e9);ReplacementFor_i<=ReplacementFor_n;
ReplacementFor_i++)if(ReplacementFor_d[ReplacementFor_k][ReplacementFor_i]<=
ReplacementFor_e[ReplacementFor_k]+ReplacementFor_eps&&ReplacementFor_dis[
ReplacementFor_i]>ReplacementFor_eps+ReplacementFor_dis[ReplacementFor_k]+1.0*
ReplacementFor_d[ReplacementFor_k][ReplacementFor_i]/ReplacementFor_ss[
ReplacementFor_k]){ReplacementFor_dis[ReplacementFor_i]=ReplacementFor_dis[
ReplacementFor_k]+1.0*ReplacementFor_d[ReplacementFor_k][ReplacementFor_i]/
ReplacementFor_ss[ReplacementFor_k];if(ReplacementFor_pd[ReplacementFor_i]==
(0xbf2+5488-0x2162)){Q.push(ReplacementFor_i);ReplacementFor_pd[ReplacementFor_i
]=(0x1542+1011-0x1934);}}ReplacementFor_pd[ReplacementFor_k]=(0x34f+7031-0x1ec6)
;}return ReplacementFor_dis[ReplacementFor_t];}void solve(){scanf("\x25\x64",&
ReplacementFor_n);scanf("\x25\x64",&q);memset(ReplacementFor_d,
(0x897+4410-0x1992),sizeof ReplacementFor_d);for(int ReplacementFor_i=
(0x382+980-0x755);ReplacementFor_i<=ReplacementFor_n;ReplacementFor_i++)scanf(
"\x25\x64\x25\x64",&ReplacementFor_e[ReplacementFor_i],&ReplacementFor_ss[
ReplacementFor_i]);for(int ReplacementFor_i=(0xc64+4727-0x1eda);ReplacementFor_i
<=ReplacementFor_n;ReplacementFor_i++){ReplacementFor_d[ReplacementFor_i][
ReplacementFor_i]=(0xdbd+3436-0x1b29);for(int ReplacementFor_j=
(0x1950+2302-0x224d);ReplacementFor_j<=ReplacementFor_n;ReplacementFor_j++){
scanf("\x25\x64",&ReplacementFor_b[ReplacementFor_i][ReplacementFor_j]);if(
ReplacementFor_b[ReplacementFor_i][ReplacementFor_j]!=-(0x605+5583-0x1bd3))
ReplacementFor_d[ReplacementFor_i][ReplacementFor_j]=ReplacementFor_b[
ReplacementFor_i][ReplacementFor_j];}}for(int ReplacementFor_i=
(0x96d+3322-0x1666);ReplacementFor_i<=ReplacementFor_n;ReplacementFor_i++)for(
int ReplacementFor_j=(0x96a+1049-0xd82);ReplacementFor_j<=ReplacementFor_n;
ReplacementFor_j++)for(int ReplacementFor_k=(0x5df+8146-0x25b0);ReplacementFor_k
<=ReplacementFor_n;ReplacementFor_k++)ReplacementFor_d[ReplacementFor_j][
ReplacementFor_k]=min(ReplacementFor_d[ReplacementFor_j][ReplacementFor_i]+
ReplacementFor_d[ReplacementFor_i][ReplacementFor_k],ReplacementFor_d[
ReplacementFor_j][ReplacementFor_k]);for(;q;q--){int ReplacementFor_k1,
ReplacementFor_k2;scanf("\x25\x64\x25\x64",&ReplacementFor_k1,&ReplacementFor_k2
);printf("\x20\x25\x2e\x31\x31\x6c\x66",ReplacementFor_getans(ReplacementFor_k1,
ReplacementFor_k2));}putchar('\n');}int main(){freopen("\x43\x6c\x2e\x69\x6e",
"\x72",stdin);freopen("\x43\x6c\x2e\x6f\x75\x74","\x77",stdout);int 
ReplacementFor_t;scanf("\x25\x64",&ReplacementFor_t);for(int ReplacementFor_i=
(0x407+4480-0x1586);ReplacementFor_i<=ReplacementFor_t;ReplacementFor_i++){
printf("\x43\x61\x73\x65\x20\x23\x25\x64\x3a",ReplacementFor_i);solve();}return
(0x33f+3288-0x1017);}
