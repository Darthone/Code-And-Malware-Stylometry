
#ifdef DEBUG
#define ReplacementFor__GLIBCXX_DEBUG
#endif
#include <bits/stdc++.h>
using namespace std;mt19937 mrand(random_device{}());int rnd(int 
ReplacementFor_x){return mrand()%ReplacementFor_x;}typedef long double 
ReplacementFor_ld;typedef long long ReplacementFor_ll;
#ifdef DEBUG
#define ReplacementFor_eprintf(...) fprintf(stderr, ReplacementFor___VA_ARGS__),\
 fflush(stderr)
#else
#define ReplacementFor_eprintf(...) ;
#endif
#define ReplacementFor_pb push_back
#define ReplacementFor_mp make_pair
#define ReplacementFor_sz(ReplacementFor_x) ((int) (ReplacementFor_x).size())
#define ReplacementFor_TASK "\x74\x65\x78\x74"
const int ReplacementFor_inf=(int)1.01e9;const ReplacementFor_ld 
ReplacementFor_eps=1e-9;const ReplacementFor_ld ReplacementFor_pi=acos((
ReplacementFor_ld)-1.0);const int ReplacementFor_mod=(int)1e9+
(0x1267+1492-0x1834);void ReplacementFor_add(int&ReplacementFor_x,int 
ReplacementFor_y){if((ReplacementFor_x+=ReplacementFor_y)>=ReplacementFor_mod){
ReplacementFor_x-=ReplacementFor_mod;}}int ReplacementFor_mult(int 
ReplacementFor_x,int ReplacementFor_y){return(long long)ReplacementFor_x*
ReplacementFor_y%ReplacementFor_mod;}int ReplacementFor_power(int 
ReplacementFor_x,int ReplacementFor_pw){int ReplacementFor_res=
(0x289+4111-0x1297);for(;ReplacementFor_pw;ReplacementFor_pw>>=
(0x140c+3803-0x22e6)){if(ReplacementFor_pw&(0x481+5930-0x1baa)){
ReplacementFor_res=ReplacementFor_mult(ReplacementFor_res,ReplacementFor_x);}
ReplacementFor_x=ReplacementFor_mult(ReplacementFor_x,ReplacementFor_x);}return 
ReplacementFor_res;}void ReplacementFor_precalc(){}const int ReplacementFor_maxn
=(0x10b7+3955-0x1fbc);int ReplacementFor_dist[ReplacementFor_maxn][
ReplacementFor_maxn];int ReplacementFor_n,q;int ReplacementFor_go[
ReplacementFor_maxn][(0x516+1275-0xa0f)];int read(){if(scanf("\x25\x64\x25\x64",
&ReplacementFor_n,&q)<(0x1054+3389-0x1d8f)){return(0x1caa+523-0x1eb5);}for(int 
ReplacementFor_i=(0x4e6+523-0x6f1);ReplacementFor_i<ReplacementFor_n;++
ReplacementFor_i){scanf("\x25\x64\x25\x64",&ReplacementFor_go[ReplacementFor_i][
(0x1e0+6520-0x1b58)],&ReplacementFor_go[ReplacementFor_i][(0x821+2011-0xffb)]);}
for(int ReplacementFor_i=(0x50+9675-0x261b);ReplacementFor_i<ReplacementFor_n;++
ReplacementFor_i){for(int ReplacementFor_j=(0xe2b+5367-0x2322);ReplacementFor_j<
ReplacementFor_n;++ReplacementFor_j){scanf("\x25\x64",ReplacementFor_dist[
ReplacementFor_i]+ReplacementFor_j);if(ReplacementFor_dist[ReplacementFor_i][
ReplacementFor_j]==-(0x2ad+1237-0x781)){ReplacementFor_dist[ReplacementFor_i][
ReplacementFor_j]=ReplacementFor_inf;}}}return(0x701+5823-0x1dbf);}int 
ReplacementFor_used[ReplacementFor_maxn];ReplacementFor_ld ReplacementFor_ans[
ReplacementFor_maxn];void solve(){for(int ReplacementFor_k=(0x20cd+1286-0x25d3);
ReplacementFor_k<ReplacementFor_n;++ReplacementFor_k){for(int ReplacementFor_i=
(0xc71+4174-0x1cbf);ReplacementFor_i<ReplacementFor_n;++ReplacementFor_i){for(
int ReplacementFor_j=(0x1493+2190-0x1d21);ReplacementFor_j<ReplacementFor_n;++
ReplacementFor_j){ReplacementFor_dist[ReplacementFor_i][ReplacementFor_j]=min(
ReplacementFor_dist[ReplacementFor_i][ReplacementFor_j],ReplacementFor_dist[
ReplacementFor_i][ReplacementFor_k]+ReplacementFor_dist[ReplacementFor_k][
ReplacementFor_j]);}}}for(int ReplacementFor_iter=(0x132d+4061-0x230a);
ReplacementFor_iter<q;++ReplacementFor_iter){int S,ReplacementFor_T;scanf(
"\x25\x64\x25\x64",&S,&ReplacementFor_T);--S,--ReplacementFor_T;for(int 
ReplacementFor_i=(0x1226+3232-0x1ec6);ReplacementFor_i<ReplacementFor_n;++
ReplacementFor_i){ReplacementFor_ans[ReplacementFor_i]=1e18;ReplacementFor_used[
ReplacementFor_i]=(0x1a7f+14-0x1a8d);}ReplacementFor_ans[S]=(0x13f8+3893-0x232d)
;for(int ReplacementFor_iter=(0x1ff+1409-0x780);ReplacementFor_iter<
ReplacementFor_n;++ReplacementFor_iter){int ReplacementFor_v=-
(0xc82+4465-0x1df2);for(int ReplacementFor_i=(0x5b4+1914-0xd2e);ReplacementFor_i
<ReplacementFor_n;++ReplacementFor_i){if(ReplacementFor_used[ReplacementFor_i]){
continue;}if(ReplacementFor_v==-(0x2e4+4467-0x1456)||ReplacementFor_ans[
ReplacementFor_v]>ReplacementFor_ans[ReplacementFor_i]){ReplacementFor_v=
ReplacementFor_i;}}ReplacementFor_used[ReplacementFor_v]=(0x10c3+4843-0x23ad);
for(int ReplacementFor_u=(0x102b+4847-0x231a);ReplacementFor_u<ReplacementFor_n;
++ReplacementFor_u){if(ReplacementFor_used[ReplacementFor_u]||
ReplacementFor_dist[ReplacementFor_v][ReplacementFor_u]>ReplacementFor_go[
ReplacementFor_v][(0x275+7870-0x2133)]){continue;}auto ReplacementFor_nval=
ReplacementFor_ans[ReplacementFor_v]+((ReplacementFor_ld)ReplacementFor_dist[
ReplacementFor_v][ReplacementFor_u]/ReplacementFor_go[ReplacementFor_v][
(0xbad+6558-0x254a)]);if(ReplacementFor_ans[ReplacementFor_u]>
ReplacementFor_nval){ReplacementFor_ans[ReplacementFor_u]=ReplacementFor_nval;}}
}printf("\x25\x2e\x31\x38\x66\x25\x63",(double)ReplacementFor_ans[
ReplacementFor_T],"\x20" "\n"[ReplacementFor_iter==q-(0x1862+430-0x1a0f)]);}}int
 main(){ReplacementFor_precalc();
#ifdef ReplacementFor_LOCAL
freopen(ReplacementFor_TASK"\x2e\x6f\x75\x74","\x77",stdout);assert(freopen(
ReplacementFor_TASK"\x2e\x69\x6e","\x72",stdin));
#endif
int ReplacementFor_t;scanf("\x25\x64",&ReplacementFor_t);ReplacementFor_t=
(0x1893+839-0x1bda);while((0x1953+2783-0x2431)){if(!read()){break;}printf(
"\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20",++ReplacementFor_t);solve();
#ifdef DEBUG
ReplacementFor_eprintf("\x54\x69\x6d\x65\x20\x25\x2e\x32\x66" "\n",(double)clock
()/CLOCKS_PER_SEC);
#endif
}return(0x2412+387-0x2595);}
