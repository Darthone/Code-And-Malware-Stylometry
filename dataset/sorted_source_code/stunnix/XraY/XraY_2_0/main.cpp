
#ifdef DEBUG
#define ReplacementFor__GLIBCXX_DEBUG
#endif
#include <bits/stdc++.h>
using namespace std;mt19937 mrand(random_device{}());int rnd(int 
ReplacementFor_x){return mrand()%ReplacementFor_x;}typedef long double 
ReplacementFor_ld;typedef long long ReplacementFor_ll;
#ifdef DEBUG
#define ReplacementFor_eprintf(...) fprintf(stderr, ReplacementFor___VA_ARGS__),\
 fflush(stderr)
#else
#define ReplacementFor_eprintf(...) ;
#endif
#define ReplacementFor_pb push_back
#define ReplacementFor_mp make_pair
#define ReplacementFor_sz(ReplacementFor_x) ((int) (ReplacementFor_x).size())
#define ReplacementFor_TASK "\x74\x65\x78\x74"
const int ReplacementFor_inf=(int)1.01e9;const ReplacementFor_ld 
ReplacementFor_eps=1e-9;const ReplacementFor_ld ReplacementFor_pi=acos((
ReplacementFor_ld)-1.0);const int ReplacementFor_mod=(int)1e9+
(0x1b5+4632-0x13c6);void ReplacementFor_add(int&ReplacementFor_x,int 
ReplacementFor_y){if((ReplacementFor_x+=ReplacementFor_y)>=ReplacementFor_mod){
ReplacementFor_x-=ReplacementFor_mod;}}int ReplacementFor_mult(int 
ReplacementFor_x,int ReplacementFor_y){return(long long)ReplacementFor_x*
ReplacementFor_y%ReplacementFor_mod;}int ReplacementFor_power(int 
ReplacementFor_x,int ReplacementFor_pw){int ReplacementFor_res=
(0x12cc+1905-0x1a3c);for(;ReplacementFor_pw;ReplacementFor_pw>>=
(0x2f9+454-0x4be)){if(ReplacementFor_pw&(0x10+1897-0x778)){ReplacementFor_res=
ReplacementFor_mult(ReplacementFor_res,ReplacementFor_x);}ReplacementFor_x=
ReplacementFor_mult(ReplacementFor_x,ReplacementFor_x);}return 
ReplacementFor_res;}void ReplacementFor_precalc(){}const int ReplacementFor_maxn
=(0x1c2f+2664-0x2629);int ReplacementFor_dist[ReplacementFor_maxn][
ReplacementFor_maxn];int ReplacementFor_n,q;int ReplacementFor_go[
ReplacementFor_maxn][(0x134+8292-0x2196)];int read(){if(scanf("\x25\x64\x25\x64"
,&ReplacementFor_n,&q)<(0x4ab+876-0x815)){return(0x66+2266-0x940);}for(int 
ReplacementFor_i=(0x1688+3100-0x22a4);ReplacementFor_i<ReplacementFor_n;++
ReplacementFor_i){scanf("\x25\x64\x25\x64",&ReplacementFor_go[ReplacementFor_i][
(0xea9+3057-0x1a9a)],&ReplacementFor_go[ReplacementFor_i][(0x176c+2772-0x223f)])
;}for(int ReplacementFor_i=(0x2fa+3108-0xf1e);ReplacementFor_i<ReplacementFor_n;
++ReplacementFor_i){for(int ReplacementFor_j=(0x105+6633-0x1aee);
ReplacementFor_j<ReplacementFor_n;++ReplacementFor_j){scanf("\x25\x64",
ReplacementFor_dist[ReplacementFor_i]+ReplacementFor_j);if(ReplacementFor_dist[
ReplacementFor_i][ReplacementFor_j]==-(0x57f+5106-0x1970)){ReplacementFor_dist[
ReplacementFor_i][ReplacementFor_j]=ReplacementFor_inf;}}}return
(0xacf+4639-0x1ced);}int ReplacementFor_used[ReplacementFor_maxn];
ReplacementFor_ld ReplacementFor_ans[ReplacementFor_maxn];void solve(){for(int 
ReplacementFor_k=(0x15f+85-0x1b4);ReplacementFor_k<ReplacementFor_n;++
ReplacementFor_k){for(int ReplacementFor_i=(0x46f+2903-0xfc6);ReplacementFor_i<
ReplacementFor_n;++ReplacementFor_i){for(int ReplacementFor_j=
(0x964+2074-0x117e);ReplacementFor_j<ReplacementFor_n;++ReplacementFor_j){
ReplacementFor_dist[ReplacementFor_i][ReplacementFor_j]=min(ReplacementFor_dist[
ReplacementFor_i][ReplacementFor_j],ReplacementFor_dist[ReplacementFor_i][
ReplacementFor_k]+ReplacementFor_dist[ReplacementFor_k][ReplacementFor_j]);}}}
for(int ReplacementFor_iter=(0x1238+4432-0x2388);ReplacementFor_iter<q;++
ReplacementFor_iter){int S,ReplacementFor_T;scanf("\x25\x64\x25\x64",&S,&
ReplacementFor_T);--S,--ReplacementFor_T;for(int ReplacementFor_i=
(0x359+7930-0x2253);ReplacementFor_i<ReplacementFor_n;++ReplacementFor_i){
ReplacementFor_ans[ReplacementFor_i]=1e18;ReplacementFor_used[ReplacementFor_i]=
(0xd2+2347-0x9fd);}ReplacementFor_ans[S]=(0x4e1+4186-0x153b);for(int 
ReplacementFor_iter=(0xe0+2347-0xa0b);ReplacementFor_iter<ReplacementFor_n;++
ReplacementFor_iter){int ReplacementFor_v=-(0xf5f+3975-0x1ee5);for(int 
ReplacementFor_i=(0x7c3+4414-0x1901);ReplacementFor_i<ReplacementFor_n;++
ReplacementFor_i){if(ReplacementFor_used[ReplacementFor_i]){continue;}if(
ReplacementFor_v==-(0x697+3710-0x1514)||ReplacementFor_ans[ReplacementFor_v]>
ReplacementFor_ans[ReplacementFor_i]){ReplacementFor_v=ReplacementFor_i;}}
ReplacementFor_used[ReplacementFor_v]=(0x88+4556-0x1253);for(int 
ReplacementFor_u=(0x2e3+3499-0x108e);ReplacementFor_u<ReplacementFor_n;++
ReplacementFor_u){if(ReplacementFor_used[ReplacementFor_u]||ReplacementFor_dist[
ReplacementFor_v][ReplacementFor_u]>ReplacementFor_go[ReplacementFor_v][
(0x101d+429-0x11ca)]){continue;}auto ReplacementFor_nval=ReplacementFor_ans[
ReplacementFor_v]+((ReplacementFor_ld)ReplacementFor_dist[ReplacementFor_v][
ReplacementFor_u]/ReplacementFor_go[ReplacementFor_v][(0x99f+2935-0x1515)]);if(
ReplacementFor_ans[ReplacementFor_u]>ReplacementFor_nval){ReplacementFor_ans[
ReplacementFor_u]=ReplacementFor_nval;}}}printf("\x25\x2e\x31\x38\x66\x25\x63",(
double)ReplacementFor_ans[ReplacementFor_T],"\x20" "\n"[ReplacementFor_iter==q-
(0x2228+1130-0x2691)]);}}int main(){ReplacementFor_precalc();
#ifdef ReplacementFor_LOCAL
freopen(ReplacementFor_TASK"\x2e\x6f\x75\x74","\x77",stdout);assert(freopen(
ReplacementFor_TASK"\x2e\x69\x6e","\x72",stdin));
#endif
int ReplacementFor_t;scanf("\x25\x64",&ReplacementFor_t);ReplacementFor_t=
(0xd54+4044-0x1d20);while((0x13a0+2433-0x1d20)){if(!read()){break;}printf(
"\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20",++ReplacementFor_t);solve();
#ifdef DEBUG
ReplacementFor_eprintf("\x54\x69\x6d\x65\x20\x25\x2e\x32\x66" "\n",(double)clock
()/CLOCKS_PER_SEC);
#endif
}return(0x13f4+4290-0x24b6);}
