
#ifdef DEBUG
#define ReplacementFor__GLIBCXX_DEBUG
#endif
#include <bits/stdc++.h>
using namespace std;mt19937 mrand(random_device{}());int rnd(int 
ReplacementFor_x){return mrand()%ReplacementFor_x;}typedef long double 
ReplacementFor_ld;typedef long long ReplacementFor_ll;
#ifdef DEBUG
#define ReplacementFor_eprintf(...) fprintf(stderr, ReplacementFor___VA_ARGS__),\
 fflush(stderr)
#else
#define ReplacementFor_eprintf(...) ;
#endif
#define ReplacementFor_pb push_back
#define ReplacementFor_mp make_pair
#define ReplacementFor_sz(ReplacementFor_x) ((int) (ReplacementFor_x).size())
#define ReplacementFor_TASK "\x74\x65\x78\x74"
const int ReplacementFor_inf=(int)1.01e9;const ReplacementFor_ld 
ReplacementFor_eps=1e-9;const ReplacementFor_ld ReplacementFor_pi=acos((
ReplacementFor_ld)-1.0);const int ReplacementFor_mod=(int)1e9+
(0x7da+3361-0x14f4);void ReplacementFor_add(int&ReplacementFor_x,int 
ReplacementFor_y){if((ReplacementFor_x+=ReplacementFor_y)>=ReplacementFor_mod){
ReplacementFor_x-=ReplacementFor_mod;}}int ReplacementFor_mult(int 
ReplacementFor_x,int ReplacementFor_y){return(long long)ReplacementFor_x*
ReplacementFor_y%ReplacementFor_mod;}int ReplacementFor_power(int 
ReplacementFor_x,int ReplacementFor_pw){int ReplacementFor_res=
(0xc84+4401-0x1db4);for(;ReplacementFor_pw;ReplacementFor_pw>>=
(0x1112+4488-0x2299)){if(ReplacementFor_pw&(0x6f8+2956-0x1283)){
ReplacementFor_res=ReplacementFor_mult(ReplacementFor_res,ReplacementFor_x);}
ReplacementFor_x=ReplacementFor_mult(ReplacementFor_x,ReplacementFor_x);}return 
ReplacementFor_res;}void ReplacementFor_precalc(){}const int ReplacementFor_maxn
=(int)1e3+(0x347+8493-0x246a);int ReplacementFor_len,ReplacementFor_n;int 
ReplacementFor_xs[ReplacementFor_maxn],ReplacementFor_ss[ReplacementFor_maxn];
int read(){if(scanf("\x25\x64\x25\x64",&ReplacementFor_len,&ReplacementFor_n)<
(0x273+6824-0x1d19)){return(0x63f+1990-0xe05);}for(int ReplacementFor_i=
(0xdf4+4809-0x20bd);ReplacementFor_i<ReplacementFor_n;++ReplacementFor_i){scanf(
"\x25\x64\x25\x64",ReplacementFor_xs+ReplacementFor_i,ReplacementFor_ss+
ReplacementFor_i);}return(0x161f+1451-0x1bc9);}void solve(){ReplacementFor_ld 
ReplacementFor_res=1e30;for(int ReplacementFor_i=(0x6a0+1907-0xe13);
ReplacementFor_i<ReplacementFor_n;++ReplacementFor_i){ReplacementFor_res=min(
ReplacementFor_res,(ReplacementFor_ld)ReplacementFor_len/(ReplacementFor_len-
ReplacementFor_xs[ReplacementFor_i])*ReplacementFor_ss[ReplacementFor_i]);}
printf("\x25\x2e\x31\x38\x66" "\n",(double)ReplacementFor_res);}int main(){
ReplacementFor_precalc();
#ifdef ReplacementFor_LOCAL
freopen(ReplacementFor_TASK"\x2e\x6f\x75\x74","\x77",stdout);assert(freopen(
ReplacementFor_TASK"\x2e\x69\x6e","\x72",stdin));
#endif
int ReplacementFor_t;scanf("\x25\x64",&ReplacementFor_t);ReplacementFor_t=
(0x7a7+3560-0x158f);while((0x108b+97-0x10eb)){if(!read()){break;}printf(
"\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20",++ReplacementFor_t);solve();
#ifdef DEBUG
ReplacementFor_eprintf("\x54\x69\x6d\x65\x20\x25\x2e\x32\x66" "\n",(double)clock
()/CLOCKS_PER_SEC);
#endif
}return(0x16ef+301-0x181c);}
