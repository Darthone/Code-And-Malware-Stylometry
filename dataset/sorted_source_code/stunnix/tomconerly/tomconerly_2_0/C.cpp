
#include <algorithm>
#include <cstdio>
#include <vector>
using namespace std;typedef int64_t ReplacementFor_i64;int main(){
ReplacementFor_i64 ReplacementFor_T;scanf("\x25\x6c\x6c\x64",&ReplacementFor_T);
for(ReplacementFor_i64 ReplacementFor_zz=(0x1d96+1303-0x22ac);ReplacementFor_zz
<=ReplacementFor_T;ReplacementFor_zz++){ReplacementFor_i64 ReplacementFor_N,Q;
scanf("\x25\x6c\x6c\x64\x20\x25\x6c\x6c\x64",&ReplacementFor_N,&Q);vector<
ReplacementFor_i64>ReplacementFor_E(ReplacementFor_N),S(ReplacementFor_N);for(
ReplacementFor_i64 ReplacementFor_i=(0x1053+5007-0x23e2);ReplacementFor_i<
ReplacementFor_N;ReplacementFor_i++){scanf(
"\x25\x6c\x6c\x64\x20\x25\x6c\x6c\x64",&ReplacementFor_E[ReplacementFor_i],&S[
ReplacementFor_i]);}vector<vector<ReplacementFor_i64>>ReplacementFor_D(
ReplacementFor_N,vector<ReplacementFor_i64>(ReplacementFor_N));for(
ReplacementFor_i64 ReplacementFor_i=(0x1e07+764-0x2103);ReplacementFor_i<
ReplacementFor_N;ReplacementFor_i++){for(ReplacementFor_i64 ReplacementFor_j=
(0xa76+869-0xddb);ReplacementFor_j<ReplacementFor_N;ReplacementFor_j++){scanf(
"\x25\x6c\x6c\x64",&ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]);if(
ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]==-(0xcf9+956-0x10b4)){if(
ReplacementFor_i!=ReplacementFor_j){ReplacementFor_D[ReplacementFor_i][
ReplacementFor_j]=1e16;}else{ReplacementFor_D[ReplacementFor_i][ReplacementFor_j
]=(0x701+2516-0x10d5);}}}}for(ReplacementFor_i64 ReplacementFor_k=
(0x1323+350-0x1481);ReplacementFor_k<ReplacementFor_N;ReplacementFor_k++)for(
ReplacementFor_i64 ReplacementFor_i=(0x2562+18-0x2574);ReplacementFor_i<
ReplacementFor_N;ReplacementFor_i++)for(ReplacementFor_i64 ReplacementFor_j=
(0x9cd+4298-0x1a97);ReplacementFor_j<ReplacementFor_N;ReplacementFor_j++)
ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]=min(ReplacementFor_D[
ReplacementFor_i][ReplacementFor_j],ReplacementFor_D[ReplacementFor_i][
ReplacementFor_k]+ReplacementFor_D[ReplacementFor_k][ReplacementFor_j]);vector<
vector<double>>ReplacementFor_T(ReplacementFor_N,vector<double>(ReplacementFor_N
));for(ReplacementFor_i64 ReplacementFor_i=(0x4b3+2539-0xe9e);ReplacementFor_i<
ReplacementFor_N;ReplacementFor_i++){for(ReplacementFor_i64 ReplacementFor_j=
(0x1c39+840-0x1f81);ReplacementFor_j<ReplacementFor_N;ReplacementFor_j++){
ReplacementFor_T[ReplacementFor_i][ReplacementFor_j]=ReplacementFor_E[
ReplacementFor_i]>=ReplacementFor_D[ReplacementFor_i][ReplacementFor_j]?
static_cast<double>(ReplacementFor_D[ReplacementFor_i][ReplacementFor_j])/S[
ReplacementFor_i]:1e16;}}for(ReplacementFor_i64 ReplacementFor_k=
(0x7ff+5663-0x1e1e);ReplacementFor_k<ReplacementFor_N;ReplacementFor_k++)for(
ReplacementFor_i64 ReplacementFor_i=(0x518+5808-0x1bc8);ReplacementFor_i<
ReplacementFor_N;ReplacementFor_i++)for(ReplacementFor_i64 ReplacementFor_j=
(0xfc7+1690-0x1661);ReplacementFor_j<ReplacementFor_N;ReplacementFor_j++)
ReplacementFor_T[ReplacementFor_i][ReplacementFor_j]=min(ReplacementFor_T[
ReplacementFor_i][ReplacementFor_j],ReplacementFor_T[ReplacementFor_i][
ReplacementFor_k]+ReplacementFor_T[ReplacementFor_k][ReplacementFor_j]);printf(
"\x43\x61\x73\x65\x20\x23\x25\x6c\x6c\x64\x3a",ReplacementFor_zz);for(
ReplacementFor_i64 ReplacementFor_i=(0x9f7+3079-0x15fe);ReplacementFor_i<Q;
ReplacementFor_i++){ReplacementFor_i64 ReplacementFor_u,ReplacementFor_v;scanf(
"\x25\x6c\x6c\x64\x20\x25\x6c\x6c\x64",&ReplacementFor_u,&ReplacementFor_v);
ReplacementFor_u--;ReplacementFor_v--;printf("\x20\x25\x2e\x30\x39\x66",
ReplacementFor_T[ReplacementFor_u][ReplacementFor_v]);}printf("\n");}}
