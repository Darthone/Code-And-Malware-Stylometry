
#include<stdio.h>
#include<assert.h>
#include<math.h>
#include<algorithm>
#include<iostream>
#include<vector>
#include<string>
#include<cmath>
using namespace std;typedef long long ReplacementFor_ll;typedef pair<int,int>
ReplacementFor_pii;typedef pair<double,double>ReplacementFor_pdd;typedef pair<
double,int>ReplacementFor_pdi;const double ReplacementFor_EPS=1e-8;const double 
ReplacementFor_PI=acos(-(0x162c+2169-0x1ea4));int a,ReplacementFor_b,
ReplacementFor_c,ReplacementFor_d;char*ReplacementFor_DB=
"\x3d\x52\x4f\x59\x47\x42\x56";int solve(){int ReplacementFor_N;int 
ReplacementFor_D[(0x4bf+489-0x69e)];scanf("\x25\x64",&ReplacementFor_N);for(int 
ReplacementFor_i=(0xf02+5758-0x257f);ReplacementFor_i<=(0x5c+2818-0xb58);
ReplacementFor_i++)scanf("\x25\x64",ReplacementFor_D+ReplacementFor_i);int 
ReplacementFor_X[(0x1a4a+1972-0x21fb)][(0x21eb+172-0x2295)]={(0x398+2781-0xe73),
(0x52f+1897-0xc93),(0x171a+3456-0x2496),(0x53a+6940-0x2055),(0x954+4851-0x1c41),
(0xb61+3542-0x1934)};for(int ReplacementFor_i=(0x1c0a+508-0x1e06);
ReplacementFor_i<(0xe84+6279-0x2708);ReplacementFor_i++){int a=ReplacementFor_X[
ReplacementFor_i][(0x7c4+7095-0x237b)],ReplacementFor_b=ReplacementFor_X[
ReplacementFor_i][(0x2121+1082-0x255a)];if(ReplacementFor_D[a]+ReplacementFor_D[
ReplacementFor_b]==ReplacementFor_N&&ReplacementFor_D[a]==ReplacementFor_D[
ReplacementFor_b]){for(int ReplacementFor_i=(0x12e1+757-0x15d6);ReplacementFor_i
<ReplacementFor_D[a];ReplacementFor_i++){printf("\x25\x63",ReplacementFor_DB[a])
;printf("\x25\x63",ReplacementFor_DB[ReplacementFor_b]);}return!printf("\n");}}
if(ReplacementFor_D[(0x13ad+402-0x153d)]&&ReplacementFor_D[(0xcbf+6720-0x26fd)]
>=ReplacementFor_D[(0x302+8430-0x23eb)])return!printf(
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n");if(ReplacementFor_D[
(0xdd9+6354-0x26a7)]&&ReplacementFor_D[(0x1586+4122-0x259c)]>=ReplacementFor_D[
(0xa40+3469-0x17cc)])return!printf(
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n");if(ReplacementFor_D[
(0x88f+3325-0x1586)]&&ReplacementFor_D[(0x587+7881-0x244a)]>=ReplacementFor_D[
(0xad8+2203-0x1370)])return!printf(
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n");ReplacementFor_D[
(0x251b+464-0x26ea)]-=ReplacementFor_D[(0xa71+2125-0x12ba)],ReplacementFor_D[
(0x1bca+853-0x1f1c)]-=ReplacementFor_D[(0x13f6+1856-0x1b30)],ReplacementFor_D[
(0x2c9+4541-0x1481)]-=ReplacementFor_D[(0x685+7442-0x2395)];int 
ReplacementFor_mx=(0x18b4+2289-0x21a4);if(ReplacementFor_D[ReplacementFor_mx]<
ReplacementFor_D[(0x3a8+8938-0x268f)])ReplacementFor_mx=(0x11fa+1835-0x1922);if(
ReplacementFor_D[ReplacementFor_mx]<ReplacementFor_D[(0xff4+274-0x1101)])
ReplacementFor_mx=(0x200a+1426-0x2597);if(ReplacementFor_D[ReplacementFor_mx]>(
ReplacementFor_D[(0x22d1+95-0x232f)]+ReplacementFor_D[(0x1f6f+1404-0x24e8)]+
ReplacementFor_D[(0x10f1+4672-0x232c)]-ReplacementFor_D[ReplacementFor_mx]))
return!printf("\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n");int a,
ReplacementFor_b;if(ReplacementFor_mx==(0xfd7+2283-0x18c1))a=(0x62c+4897-0x194a)
,ReplacementFor_b=(0x16f1+2274-0x1fce);if(ReplacementFor_mx==(0xf0a+1582-0x1535)
)a=(0x311+7709-0x212d),ReplacementFor_b=(0x115+9656-0x26c8);if(ReplacementFor_mx
==(0x3c6+236-0x4ad))a=(0x3e1+6143-0x1bdf),ReplacementFor_b=(0x1c44+465-0x1e12);
string ReplacementFor_E="",F="";if(ReplacementFor_D[a]<ReplacementFor_D[
ReplacementFor_b])for(int ReplacementFor_i=(0xf85+3416-0x1cdc);ReplacementFor_i
<=ReplacementFor_D[ReplacementFor_b]-ReplacementFor_D[a];ReplacementFor_i++)
ReplacementFor_E+=ReplacementFor_DB[ReplacementFor_b];if(ReplacementFor_D[
ReplacementFor_b]<ReplacementFor_D[a])for(int ReplacementFor_i=
(0x14a0+211-0x1572);ReplacementFor_i<=ReplacementFor_D[a]-ReplacementFor_D[
ReplacementFor_b];ReplacementFor_i++)ReplacementFor_E+=ReplacementFor_DB[a];for(
int ReplacementFor_i=(0x2465+561-0x2695);ReplacementFor_i<=min(ReplacementFor_D[
a],ReplacementFor_D[ReplacementFor_b]);ReplacementFor_i++){ReplacementFor_E+=
ReplacementFor_DB[a];ReplacementFor_E+=ReplacementFor_DB[ReplacementFor_b];}
reverse(ReplacementFor_E.begin(),ReplacementFor_E.end());for(int 
ReplacementFor_i=(0x391+3449-0x1109);ReplacementFor_i<=ReplacementFor_D[
ReplacementFor_mx];ReplacementFor_i++){F+=ReplacementFor_DB[ReplacementFor_mx];F
+=ReplacementFor_E.back();ReplacementFor_E.pop_back();}while(ReplacementFor_E.
size())F+=ReplacementFor_E.back(),ReplacementFor_E.pop_back();string 
ReplacementFor_ans="";for(int ReplacementFor_i=(0x1e82+1722-0x253c);
ReplacementFor_i<F.size();ReplacementFor_i++){ReplacementFor_ans+=F[
ReplacementFor_i];if(F[ReplacementFor_i]==((char)(0x280+5415-0x1755))){for(int 
ReplacementFor_i=(0x1622+1711-0x1cd1);ReplacementFor_i<ReplacementFor_D[
(0x1603+4353-0x2700)];ReplacementFor_i++)ReplacementFor_ans+="\x47\x52";
ReplacementFor_D[(0x811+287-0x92c)]=(0x1583+2227-0x1e36);}if(F[ReplacementFor_i]
==((char)(0x1968+1800-0x202e))){for(int ReplacementFor_i=(0xa9f+3538-0x1871);
ReplacementFor_i<ReplacementFor_D[(0x1089+2101-0x18bc)];ReplacementFor_i++)
ReplacementFor_ans+="\x4f\x42";ReplacementFor_D[(0x52c+2439-0xeb1)]=
(0x15d5+2936-0x214d);}if(F[ReplacementFor_i]==((char)(0x697+5153-0x1a5f))){for(
int ReplacementFor_i=(0x564+4873-0x186d);ReplacementFor_i<ReplacementFor_D[
(0x753+1942-0xee3)];ReplacementFor_i++)ReplacementFor_ans+="\x56\x59";
ReplacementFor_D[(0xff3+3580-0x1de9)]=(0x470+2139-0xccb);}}cout<<
ReplacementFor_ans<<"\n";ReplacementFor_ans+=ReplacementFor_ans[
(0xb2c+6595-0x24ef)];for(int ReplacementFor_i=(0xcdf+3868-0x1bfb);
ReplacementFor_i<ReplacementFor_N;ReplacementFor_i++){if(ReplacementFor_ans[
ReplacementFor_i+(0x35+5458-0x1586)]==ReplacementFor_ans[ReplacementFor_i]||
ReplacementFor_ans[ReplacementFor_i]==((char)(0x201+678-0x458))&&
ReplacementFor_ans[ReplacementFor_i+(0xef0+4899-0x2212)]!=
((char)(0x129d+466-0x142d))||ReplacementFor_ans[ReplacementFor_i]==
((char)(0x991+6054-0x20f0))&&ReplacementFor_ans[ReplacementFor_i+
(0x62b+7460-0x234e)]!=((char)(0x114c+4135-0x2121))||ReplacementFor_ans[
ReplacementFor_i]==((char)(0xcb6+1357-0x11ad))&&ReplacementFor_ans[
ReplacementFor_i+(0x1b12+2784-0x25f1)]!=((char)(0x66b+1123-0xa75)))return!printf
("\x57\x41\x57\x41\x57\x41\x57\x41\x57\x41\x57\x41" "\n");}}int main(){int 
ReplacementFor_T;scanf("\x25\x64",&ReplacementFor_T);for(int ReplacementFor_t=
(0x990+2549-0x1384);ReplacementFor_t<=ReplacementFor_T;ReplacementFor_t++){
printf("\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20",ReplacementFor_t);solve();}}
