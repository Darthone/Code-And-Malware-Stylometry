
#include<stdio.h>
#include<assert.h>
#include<math.h>
#include<algorithm>
#include<iostream>
#include<vector>
#include<string>
#include<cmath>
using namespace std;typedef long long ReplacementFor_ll;typedef pair<int,int>
ReplacementFor_pii;typedef pair<double,double>ReplacementFor_pdd;typedef pair<
double,int>ReplacementFor_pdi;const double ReplacementFor_EPS=1e-8;const double 
ReplacementFor_PI=acos(-(0xb67+274-0xc78));const int ReplacementFor_MX=
(0x1b15+604-0x1d08);int a,ReplacementFor_b,ReplacementFor_c,ReplacementFor_d;int
 ReplacementFor_E[ReplacementFor_MX],S[ReplacementFor_MX];ReplacementFor_ll 
ReplacementFor_G[ReplacementFor_MX][ReplacementFor_MX];int ReplacementFor_N,Q;
int solve(){scanf("\x25\x64\x25\x64",&ReplacementFor_N,&Q);for(int 
ReplacementFor_i=(0x14b9+3972-0x243c);ReplacementFor_i<=ReplacementFor_N;
ReplacementFor_i++)scanf("\x25\x64\x25\x64",ReplacementFor_E+ReplacementFor_i,S+
ReplacementFor_i);for(int ReplacementFor_i=(0x1214+5141-0x2628);ReplacementFor_i
<=ReplacementFor_N;ReplacementFor_i++){for(int ReplacementFor_j=
(0x7ec+1506-0xdcd);ReplacementFor_j<=ReplacementFor_N;ReplacementFor_j++){scanf(
"\x25\x6c\x6c\x64",ReplacementFor_G[ReplacementFor_i]+ReplacementFor_j);}}for(
int ReplacementFor_i=(0x1d68+1473-0x2328);ReplacementFor_i<=ReplacementFor_N;
ReplacementFor_i++)ReplacementFor_G[ReplacementFor_i][ReplacementFor_i]=
(0x1f1+1127-0x658);for(int ReplacementFor_k=(0x194+7869-0x2050);ReplacementFor_k
<=ReplacementFor_N;ReplacementFor_k++){for(int ReplacementFor_i=
(0x6cf+5054-0x1a8c);ReplacementFor_i<=ReplacementFor_N;ReplacementFor_i++){for(
int ReplacementFor_j=(0x7d0+2767-0x129e);ReplacementFor_j<=ReplacementFor_N;
ReplacementFor_j++){if(ReplacementFor_G[ReplacementFor_i][ReplacementFor_k]==-
(0x1b86+2159-0x23f4)||ReplacementFor_G[ReplacementFor_k][ReplacementFor_j]==-
(0xc0c+1483-0x11d6))continue;if(ReplacementFor_G[ReplacementFor_i][
ReplacementFor_j]!=-(0x242+7814-0x20c7))ReplacementFor_G[ReplacementFor_i][
ReplacementFor_j]=min(ReplacementFor_G[ReplacementFor_i][ReplacementFor_k]+
ReplacementFor_G[ReplacementFor_k][ReplacementFor_j],ReplacementFor_G[
ReplacementFor_i][ReplacementFor_j]);else ReplacementFor_G[ReplacementFor_i][
ReplacementFor_j]=ReplacementFor_G[ReplacementFor_i][ReplacementFor_k]+
ReplacementFor_G[ReplacementFor_k][ReplacementFor_j];}}}int s,ReplacementFor_e;
for(int ReplacementFor_i=(0x1106+830-0x1443);ReplacementFor_i<=Q;
ReplacementFor_i++){scanf("\x25\x64\x25\x64",&s,&ReplacementFor_e);double 
ReplacementFor_dist[ReplacementFor_MX];int ReplacementFor_chk[ReplacementFor_MX]
={};for(int ReplacementFor_i=(0x1faf+1853-0x26eb);ReplacementFor_i<=
ReplacementFor_N;ReplacementFor_i++)ReplacementFor_dist[ReplacementFor_i]=1e18;
ReplacementFor_dist[s]=(0xb58+6577-0x2509);for(int ReplacementFor_i=
(0x64+8522-0x21ad);ReplacementFor_i<=ReplacementFor_N;ReplacementFor_i++){int 
ReplacementFor_mn=-(0xde8+1390-0x1355);for(int ReplacementFor_i=
(0xe01+5420-0x232c);ReplacementFor_i<=ReplacementFor_N;ReplacementFor_i++)if(!
ReplacementFor_chk[ReplacementFor_i]&&(ReplacementFor_mn==-(0x1908+727-0x1bde)||
ReplacementFor_dist[ReplacementFor_mn]>ReplacementFor_dist[ReplacementFor_i]))
ReplacementFor_mn=ReplacementFor_i;ReplacementFor_chk[ReplacementFor_mn]=
(0xe87+4219-0x1f01);for(int ReplacementFor_i=(0x328+5354-0x1811);
ReplacementFor_i<=ReplacementFor_N;ReplacementFor_i++){if(ReplacementFor_chk[
ReplacementFor_i])continue;if(ReplacementFor_G[ReplacementFor_mn][
ReplacementFor_i]==-(0x671+1302-0xb86)||ReplacementFor_G[ReplacementFor_mn][
ReplacementFor_i]>ReplacementFor_E[ReplacementFor_mn])continue;
ReplacementFor_dist[ReplacementFor_i]=min(ReplacementFor_dist[ReplacementFor_i],
ReplacementFor_dist[ReplacementFor_mn]+ReplacementFor_G[ReplacementFor_mn][
ReplacementFor_i]/(double)S[ReplacementFor_mn]);}}printf(
"\x25\x2e\x31\x30\x6c\x66\x20",ReplacementFor_dist[ReplacementFor_e]);}printf(
"\n");}int main(){int ReplacementFor_T;scanf("\x25\x64",&ReplacementFor_T);for(
int ReplacementFor_t=(0x11f6+716-0x14c1);ReplacementFor_t<=ReplacementFor_T;
ReplacementFor_t++){printf("\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20",
ReplacementFor_t);solve();}}
