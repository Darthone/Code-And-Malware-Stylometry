
#include<stdio.h>
#include<assert.h>
#include<math.h>
#include<algorithm>
#include<iostream>
#include<vector>
#include<string>
#include<cmath>
using namespace std;typedef long long ReplacementFor_ll;typedef pair<int,int>
ReplacementFor_pii;typedef pair<double,double>ReplacementFor_pdd;typedef pair<
double,int>ReplacementFor_pdi;const double ReplacementFor_EPS=1e-8;const double 
ReplacementFor_PI=acos(-(0xaba+4626-0x1ccb));int a,ReplacementFor_b,
ReplacementFor_c,ReplacementFor_d;char*ReplacementFor_DB=
"\x3d\x52\x4f\x59\x47\x42\x56";int solve(){int ReplacementFor_N;int 
ReplacementFor_D[(0xb50+1258-0x1030)];scanf("\x25\x64",&ReplacementFor_N);for(
int ReplacementFor_i=(0x46+5961-0x178e);ReplacementFor_i<=(0x1234+595-0x1481);
ReplacementFor_i++)scanf("\x25\x64",ReplacementFor_D+ReplacementFor_i);int 
ReplacementFor_X[(0x12b+8246-0x215e)][(0xfc4+1715-0x1675)]={(0x2274+446-0x2430),
(0x824+7258-0x2479),(0x2175+854-0x24c7),(0x576+3816-0x145d),(0xd09+3681-0x1b64),
(0x1721+396-0x18aa)};for(int ReplacementFor_i=(0x1232+5233-0x26a3);
ReplacementFor_i<(0x1e83+1616-0x24d0);ReplacementFor_i++){int a=ReplacementFor_X
[ReplacementFor_i][(0x1462+1881-0x1bbb)],ReplacementFor_b=ReplacementFor_X[
ReplacementFor_i][(0x13d3+195-0x1495)];if(ReplacementFor_D[a]+ReplacementFor_D[
ReplacementFor_b]==ReplacementFor_N&&ReplacementFor_D[a]==ReplacementFor_D[
ReplacementFor_b]){for(int ReplacementFor_i=(0xb84+6762-0x25ee);ReplacementFor_i
<ReplacementFor_D[a];ReplacementFor_i++){printf("\x25\x63",ReplacementFor_DB[a])
;printf("\x25\x63",ReplacementFor_DB[ReplacementFor_b]);}return!printf("\n");}}
if(ReplacementFor_D[(0x2e7+1505-0x8c6)]&&ReplacementFor_D[(0x4aa+7521-0x2209)]>=
ReplacementFor_D[(0x10b6+615-0x1318)])return!printf(
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n");if(ReplacementFor_D[
(0xbe3+1610-0x1229)]&&ReplacementFor_D[(0x671+7550-0x23eb)]>=ReplacementFor_D[
(0x4c7+7363-0x2189)])return!printf(
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n");if(ReplacementFor_D[
(0x1e9+6967-0x1d1a)]&&ReplacementFor_D[(0xab8+3245-0x175f)]>=ReplacementFor_D[
(0x83d+497-0xa2b)])return!printf("\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n"
);ReplacementFor_D[(0xa21+1270-0xf16)]-=ReplacementFor_D[(0x4a0+6060-0x1c48)],
ReplacementFor_D[(0x23f6+622-0x2661)]-=ReplacementFor_D[(0xea8+5688-0x24da)],
ReplacementFor_D[(0x1726+3944-0x2689)]-=ReplacementFor_D[(0x138+3313-0xe27)];int
 ReplacementFor_mx=(0x1307+1729-0x19c7);if(ReplacementFor_D[ReplacementFor_mx]<
ReplacementFor_D[(0x79f+2051-0xf9f)])ReplacementFor_mx=(0x385+7901-0x225f);if(
ReplacementFor_D[ReplacementFor_mx]<ReplacementFor_D[(0x1428+3480-0x21bb)])
ReplacementFor_mx=(0x23f+7963-0x2155);if(ReplacementFor_D[ReplacementFor_mx]>(
ReplacementFor_D[(0x1711+1687-0x1da7)]+ReplacementFor_D[(0x18ed+2242-0x21ac)]+
ReplacementFor_D[(0x179b+172-0x1842)]-ReplacementFor_D[ReplacementFor_mx]))
return!printf("\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n");int a,
ReplacementFor_b;if(ReplacementFor_mx==(0x2256+1136-0x26c5))a=
(0x12f1+2509-0x1cbb),ReplacementFor_b=(0xe6d+4520-0x2010);if(ReplacementFor_mx==
(0x750+3456-0x14cd))a=(0x11b9+2920-0x1d20),ReplacementFor_b=(0x7f0+6339-0x20ae);
if(ReplacementFor_mx==(0x321+924-0x6b8))a=(0xc04+2960-0x1793),ReplacementFor_b=
(0x879+2911-0x13d5);string ReplacementFor_E="",F="";if(ReplacementFor_D[a]<
ReplacementFor_D[ReplacementFor_b])for(int ReplacementFor_i=(0xa5d+513-0xc5d);
ReplacementFor_i<=ReplacementFor_D[ReplacementFor_b]-ReplacementFor_D[a];
ReplacementFor_i++)ReplacementFor_E+=ReplacementFor_DB[ReplacementFor_b];if(
ReplacementFor_D[ReplacementFor_b]<ReplacementFor_D[a])for(int ReplacementFor_i=
(0x51d+4178-0x156e);ReplacementFor_i<=ReplacementFor_D[a]-ReplacementFor_D[
ReplacementFor_b];ReplacementFor_i++)ReplacementFor_E+=ReplacementFor_DB[a];for(
int ReplacementFor_i=(0x1f03+1785-0x25fb);ReplacementFor_i<=min(ReplacementFor_D
[a],ReplacementFor_D[ReplacementFor_b]);ReplacementFor_i++){ReplacementFor_E+=
ReplacementFor_DB[a];ReplacementFor_E+=ReplacementFor_DB[ReplacementFor_b];}
reverse(ReplacementFor_E.begin(),ReplacementFor_E.end());for(int 
ReplacementFor_i=(0x1632+553-0x185a);ReplacementFor_i<=ReplacementFor_D[
ReplacementFor_mx];ReplacementFor_i++){F+=ReplacementFor_DB[ReplacementFor_mx];F
+=ReplacementFor_E.back();ReplacementFor_E.pop_back();}while(ReplacementFor_E.
size())F+=ReplacementFor_E.back(),ReplacementFor_E.pop_back();string 
ReplacementFor_ans="";for(int ReplacementFor_i=(0xecb+1265-0x13bc);
ReplacementFor_i<F.size();ReplacementFor_i++){ReplacementFor_ans+=F[
ReplacementFor_i];if(F[ReplacementFor_i]==((char)(0x1b93+2302-0x243f))){for(int 
ReplacementFor_i=(0xadc+530-0xcee);ReplacementFor_i<ReplacementFor_D[
(0x17d1+2238-0x208b)];ReplacementFor_i++)ReplacementFor_ans+="\x47\x52";
ReplacementFor_D[(0xbcc+595-0xe1b)]=(0x1737+652-0x19c3);}if(F[ReplacementFor_i]
==((char)(0x160+9063-0x2485))){for(int ReplacementFor_i=(0x1ff1+1077-0x2426);
ReplacementFor_i<ReplacementFor_D[(0x4ec+7064-0x2082)];ReplacementFor_i++)
ReplacementFor_ans+="\x4f\x42";ReplacementFor_D[(0x3df+4045-0x13aa)]=
(0xc5f+1684-0x12f3);}if(F[ReplacementFor_i]==((char)(0xacb+5600-0x2052))){for(
int ReplacementFor_i=(0x1882+3608-0x269a);ReplacementFor_i<ReplacementFor_D[
(0x31f+5625-0x1912)];ReplacementFor_i++)ReplacementFor_ans+="\x56\x59";
ReplacementFor_D[(0xd28+4060-0x1cfe)]=(0xf6d+4264-0x2015);}}cout<<
ReplacementFor_ans<<"\n";ReplacementFor_ans+=ReplacementFor_ans[
(0x66+1096-0x4ae)];for(int ReplacementFor_i=(0x5d5+1197-0xa82);ReplacementFor_i<
ReplacementFor_N;ReplacementFor_i++){if(ReplacementFor_ans[ReplacementFor_i+
(0x22d+7760-0x207c)]==ReplacementFor_ans[ReplacementFor_i]||ReplacementFor_ans[
ReplacementFor_i]==((char)(0x9a2+373-0xac8))&&ReplacementFor_ans[
ReplacementFor_i+(0xeb3+2769-0x1983)]!=((char)(0x19c+5063-0x1521))||
ReplacementFor_ans[ReplacementFor_i]==((char)(0xe6f+3711-0x1ca7))&&
ReplacementFor_ans[ReplacementFor_i+(0x978+4964-0x1cdb)]!=
((char)(0x2558+39-0x252d))||ReplacementFor_ans[ReplacementFor_i]==
((char)(0x16e4+2526-0x206c))&&ReplacementFor_ans[ReplacementFor_i+
(0x6c9+1874-0xe1a)]!=((char)(0x885+1932-0xfb8)))return!printf(
"\x57\x41\x57\x41\x57\x41\x57\x41\x57\x41\x57\x41" "\n");}}int main(){int 
ReplacementFor_T;scanf("\x25\x64",&ReplacementFor_T);for(int ReplacementFor_t=
(0x917+5512-0x1e9e);ReplacementFor_t<=ReplacementFor_T;ReplacementFor_t++){
printf("\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20",ReplacementFor_t);solve();}}
