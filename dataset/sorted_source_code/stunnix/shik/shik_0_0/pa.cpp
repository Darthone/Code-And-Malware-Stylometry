
#include <bits/stdc++.h>
#include <unistd.h>
#define ReplacementFor_SZ(ReplacementFor_x) ((int)(ReplacementFor_x).size())
#define ReplacementFor_ALL(ReplacementFor_x) begin(ReplacementFor_x),end(\
ReplacementFor_x)
#define ReplacementFor_REP(ReplacementFor_i,ReplacementFor_n) for ( int \
ReplacementFor_i=(0x1499+4474-0x2613); ReplacementFor_i<int(ReplacementFor_n); \
ReplacementFor_i++ )
#define ReplacementFor_REP1(ReplacementFor_i,a,ReplacementFor_b) for ( int \
ReplacementFor_i=(a); ReplacementFor_i<=int(ReplacementFor_b); ReplacementFor_i\
++ )
#define FOR(ReplacementFor_it,ReplacementFor_c) for ( auto ReplacementFor_it=(\
ReplacementFor_c).begin(); ReplacementFor_it!=(ReplacementFor_c).end(); \
ReplacementFor_it++ )
#define ReplacementFor_MP make_pair
#define ReplacementFor_PB push_back
using namespace std;typedef long long ReplacementFor_LL;typedef pair<int,int>
ReplacementFor_PII;typedef vector<int>ReplacementFor_VI;
#ifdef ReplacementFor_SHIK
template<typename ReplacementFor_T>void ReplacementFor__dump(const char*s,
ReplacementFor_T&&ReplacementFor_head){cerr<<s<<"\x3d"<<ReplacementFor_head<<
endl;}template<typename ReplacementFor_T,typename...ReplacementFor_Args>void 
ReplacementFor__dump(const char*s,ReplacementFor_T&&ReplacementFor_head,
ReplacementFor_Args&&...ReplacementFor_tail){int ReplacementFor_c=
(0xa79+115-0xaec);while(*s!=((char)(0x2395+120-0x23e1))||ReplacementFor_c!=
(0x76f+960-0xb2f)){if(*s==((char)(0x15c2+608-0x17fa))||*s==
((char)(0x476+2633-0xe64))||*s==((char)(0xe87+1375-0x136b)))ReplacementFor_c++;
if(*s==((char)(0x1fd4+738-0x228d))||*s==((char)(0xea2+1281-0x1346))||*s==
((char)(0x1596+27-0x1534)))ReplacementFor_c--;cerr<<*s++;}cerr<<"\x3d"<<
ReplacementFor_head<<"\x2c\x20";ReplacementFor__dump(s+(0xc0+7021-0x1c2c),
ReplacementFor_tail...);}
#define ReplacementFor_dump(...) do { \
    fprintf(stderr, "\x25\x73\x3a\x25\x64\x20\x2d\x20", \
ReplacementFor___PRETTY_FUNCTION__, __LINE__); \
    ReplacementFor__dump(#ReplacementFor___VA_ARGS__, ReplacementFor___VA_ARGS__\
); \
} while ((0x43d+6928-0x1f4d))
template<typename ReplacementFor_Iter>ostream&ReplacementFor__out(ostream&s,
ReplacementFor_Iter ReplacementFor_b,ReplacementFor_Iter ReplacementFor_e){s<<
"\x5b";for(auto ReplacementFor_it=ReplacementFor_b;ReplacementFor_it!=
ReplacementFor_e;ReplacementFor_it++)s<<(ReplacementFor_it==ReplacementFor_b?"":
"\x20")<<*ReplacementFor_it;s<<"\x5d";return s;}template<typename A,typename 
ReplacementFor_B>ostream&operator<<(ostream&s,const pair<A,ReplacementFor_B>&
ReplacementFor_p){return s<<"\x28"<<ReplacementFor_p.first<<"\x2c"<<
ReplacementFor_p.second<<"\x29";}template<typename ReplacementFor_T>ostream&
operator<<(ostream&s,const vector<ReplacementFor_T>&ReplacementFor_c){return 
ReplacementFor__out(s,ReplacementFor_ALL(ReplacementFor_c));}template<typename 
ReplacementFor_T,size_t ReplacementFor_N>ostream&operator<<(ostream&s,const 
array<ReplacementFor_T,ReplacementFor_N>&ReplacementFor_c){return 
ReplacementFor__out(s,ReplacementFor_ALL(ReplacementFor_c));}template<typename 
ReplacementFor_T>ostream&operator<<(ostream&s,const ReplacementFor_set<
ReplacementFor_T>&ReplacementFor_c){return ReplacementFor__out(s,
ReplacementFor_ALL(ReplacementFor_c));}template<typename A,typename 
ReplacementFor_B>ostream&operator<<(ostream&s,const map<A,ReplacementFor_B>&
ReplacementFor_c){return ReplacementFor__out(s,ReplacementFor_ALL(
ReplacementFor_c));}
#else
#define ReplacementFor_dump(...)
#endif
template<typename ReplacementFor_T>void ReplacementFor__R(ReplacementFor_T&
ReplacementFor_x){cin>>ReplacementFor_x;}void ReplacementFor__R(int&
ReplacementFor_x){scanf("\x25\x64",&ReplacementFor_x);}void ReplacementFor__R(
long long&ReplacementFor_x){scanf("\x25" PRId64,&ReplacementFor_x);}void 
ReplacementFor__R(double&ReplacementFor_x){scanf("\x25\x6c\x66",&
ReplacementFor_x);}void ReplacementFor__R(char&ReplacementFor_x){scanf(
"\x20\x25\x63",&ReplacementFor_x);}void ReplacementFor__R(char*ReplacementFor_x)
{scanf("\x25\x73",ReplacementFor_x);}void ReplacementFor_R(){}template<typename 
ReplacementFor_T,typename...ReplacementFor_U>void ReplacementFor_R(
ReplacementFor_T&ReplacementFor_head,ReplacementFor_U&...ReplacementFor_tail){
ReplacementFor__R(ReplacementFor_head);ReplacementFor_R(ReplacementFor_tail...);
}template<typename ReplacementFor_T>void ReplacementFor__W(const 
ReplacementFor_T&ReplacementFor_x){cout<<ReplacementFor_x;}void 
ReplacementFor__W(const int&ReplacementFor_x){printf("\x25\x64",ReplacementFor_x
);}void ReplacementFor__W(const long long&ReplacementFor_x){printf("\x25" PRId64
,ReplacementFor_x);}template<typename ReplacementFor_T>void ReplacementFor__W(
const vector<ReplacementFor_T>&ReplacementFor_x){for(auto ReplacementFor_i=
ReplacementFor_x.ReplacementFor_cbegin();ReplacementFor_i!=ReplacementFor_x.
ReplacementFor_cend();ReplacementFor_i++){if(ReplacementFor_i!=ReplacementFor_x.
ReplacementFor_cbegin())putchar(((char)(0xc8b+2200-0x1503)));ReplacementFor__W(*
ReplacementFor_i);}}void ReplacementFor_W(){}template<typename ReplacementFor_T,
typename...ReplacementFor_U>void ReplacementFor_W(const ReplacementFor_T&
ReplacementFor_head,const ReplacementFor_U&...ReplacementFor_tail){
ReplacementFor__W(ReplacementFor_head);putchar(sizeof...(ReplacementFor_tail)?
((char)(0xad2+5532-0x204e)):'\n');ReplacementFor_W(ReplacementFor_tail...);}
#ifdef ReplacementFor_SHIK
#define ReplacementFor_FILEIO(...)
#else
#define ReplacementFor_FILEIO(ReplacementFor_name) do {\
    freopen(ReplacementFor_name "\x2e\x69\x6e","\x72",stdin); \
    freopen(ReplacementFor_name "\x2e\x6f\x75\x74","\x77",stdout); \
} while ((0xfc1+2559-0x19c0))
#endif
const int ReplacementFor_N=(0x770+7974-0x22a4);int ReplacementFor_n;double 
ReplacementFor_d,ReplacementFor_x[ReplacementFor_N],s[ReplacementFor_N];void 
input(){ReplacementFor_R(ReplacementFor_d,ReplacementFor_n);ReplacementFor_REP(
ReplacementFor_i,ReplacementFor_n)ReplacementFor_R(ReplacementFor_x[
ReplacementFor_i],s[ReplacementFor_i]);}int ReplacementFor_ord[ReplacementFor_N]
;bool ReplacementFor_cmp(int a,int ReplacementFor_b){return ReplacementFor_x[a]>
ReplacementFor_x[ReplacementFor_b];}void solve(){ReplacementFor_REP(
ReplacementFor_i,ReplacementFor_n)ReplacementFor_ord[ReplacementFor_i]=
ReplacementFor_i;sort(ReplacementFor_ord,ReplacementFor_ord+ReplacementFor_n,
ReplacementFor_cmp);double ReplacementFor_mx=(0x22ca+325-0x240f);
ReplacementFor_REP(ReplacementFor_ii,ReplacementFor_n){int ReplacementFor_i=
ReplacementFor_ord[ReplacementFor_ii];double ReplacementFor_t=(ReplacementFor_d-
ReplacementFor_x[ReplacementFor_i])/s[ReplacementFor_i];ReplacementFor_mx=max(
ReplacementFor_mx,ReplacementFor_t);}double ReplacementFor_ans=ReplacementFor_d/
ReplacementFor_mx;printf("\x25\x2e\x31\x34\x66" "\n",ReplacementFor_ans);}int 
main(int ReplacementFor_argc,char*ReplacementFor_argv[]){int 
ReplacementFor_n_case;ReplacementFor_R(ReplacementFor_n_case);
ReplacementFor_REP1(ReplacementFor_i,(0x57f+2745-0x1037),ReplacementFor_n_case){
input();if(ReplacementFor_argc==(0x1416+4267-0x24bf)&&atoi(ReplacementFor_argv[
(0xa1+2910-0xbfe)])!=ReplacementFor_i)continue;printf(
"\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20",ReplacementFor_i);solve();}return
(0x8a6+1714-0xf58);}
