
#include <bits/stdc++.h>
#include <unistd.h>
#define ReplacementFor_SZ(ReplacementFor_x) ((int)(ReplacementFor_x).size())
#define ReplacementFor_ALL(ReplacementFor_x) begin(ReplacementFor_x),end(\
ReplacementFor_x)
#define ReplacementFor_REP(ReplacementFor_i,ReplacementFor_n) for ( int \
ReplacementFor_i=(0x1ea5+1680-0x2535); ReplacementFor_i<int(ReplacementFor_n); \
ReplacementFor_i++ )
#define ReplacementFor_REP1(ReplacementFor_i,a,ReplacementFor_b) for ( int \
ReplacementFor_i=(a); ReplacementFor_i<=int(ReplacementFor_b); ReplacementFor_i\
++ )
#define FOR(ReplacementFor_it,ReplacementFor_c) for ( auto ReplacementFor_it=(\
ReplacementFor_c).begin(); ReplacementFor_it!=(ReplacementFor_c).end(); \
ReplacementFor_it++ )
#define ReplacementFor_MP make_pair
#define ReplacementFor_PB push_back
using namespace std;typedef long long ReplacementFor_LL;typedef pair<int,int>
ReplacementFor_PII;typedef vector<int>ReplacementFor_VI;
#ifdef ReplacementFor_SHIK
template<typename ReplacementFor_T>void ReplacementFor__dump(const char*s,
ReplacementFor_T&&ReplacementFor_head){cerr<<s<<"\x3d"<<ReplacementFor_head<<
endl;}template<typename ReplacementFor_T,typename...ReplacementFor_Args>void 
ReplacementFor__dump(const char*s,ReplacementFor_T&&ReplacementFor_head,
ReplacementFor_Args&&...ReplacementFor_tail){int ReplacementFor_c=
(0x319+3924-0x126d);while(*s!=((char)(0x1ac9+364-0x1c09))||ReplacementFor_c!=
(0x354+8860-0x25f0)){if(*s==((char)(0x1831+2958-0x2397))||*s==
((char)(0x5f0+4785-0x1846))||*s==((char)(0x1109+1192-0x1536)))ReplacementFor_c++
;if(*s==((char)(0xa61+2569-0x1441))||*s==((char)(0xae4+5834-0x2151))||*s==
((char)(0xfb+9320-0x24e6)))ReplacementFor_c--;cerr<<*s++;}cerr<<"\x3d"<<
ReplacementFor_head<<"\x2c\x20";ReplacementFor__dump(s+(0x271+3003-0xe2b),
ReplacementFor_tail...);}
#define ReplacementFor_dump(...) do { \
    fprintf(stderr, "\x25\x73\x3a\x25\x64\x20\x2d\x20", \
ReplacementFor___PRETTY_FUNCTION__, __LINE__); \
    ReplacementFor__dump(#ReplacementFor___VA_ARGS__, ReplacementFor___VA_ARGS__\
); \
} while ((0x8cc+7729-0x26fd))
template<typename ReplacementFor_Iter>ostream&ReplacementFor__out(ostream&s,
ReplacementFor_Iter ReplacementFor_b,ReplacementFor_Iter ReplacementFor_e){s<<
"\x5b";for(auto ReplacementFor_it=ReplacementFor_b;ReplacementFor_it!=
ReplacementFor_e;ReplacementFor_it++)s<<(ReplacementFor_it==ReplacementFor_b?"":
"\x20")<<*ReplacementFor_it;s<<"\x5d";return s;}template<typename A,typename 
ReplacementFor_B>ostream&operator<<(ostream&s,const pair<A,ReplacementFor_B>&
ReplacementFor_p){return s<<"\x28"<<ReplacementFor_p.first<<"\x2c"<<
ReplacementFor_p.second<<"\x29";}template<typename ReplacementFor_T>ostream&
operator<<(ostream&s,const vector<ReplacementFor_T>&ReplacementFor_c){return 
ReplacementFor__out(s,ReplacementFor_ALL(ReplacementFor_c));}template<typename 
ReplacementFor_T,size_t ReplacementFor_N>ostream&operator<<(ostream&s,const 
array<ReplacementFor_T,ReplacementFor_N>&ReplacementFor_c){return 
ReplacementFor__out(s,ReplacementFor_ALL(ReplacementFor_c));}template<typename 
ReplacementFor_T>ostream&operator<<(ostream&s,const ReplacementFor_set<
ReplacementFor_T>&ReplacementFor_c){return ReplacementFor__out(s,
ReplacementFor_ALL(ReplacementFor_c));}template<typename A,typename 
ReplacementFor_B>ostream&operator<<(ostream&s,const map<A,ReplacementFor_B>&
ReplacementFor_c){return ReplacementFor__out(s,ReplacementFor_ALL(
ReplacementFor_c));}
#else
#define ReplacementFor_dump(...)
#endif
template<typename ReplacementFor_T>void ReplacementFor__R(ReplacementFor_T&
ReplacementFor_x){cin>>ReplacementFor_x;}void ReplacementFor__R(int&
ReplacementFor_x){scanf("\x25\x64",&ReplacementFor_x);}void ReplacementFor__R(
long long&ReplacementFor_x){scanf("\x25" PRId64,&ReplacementFor_x);}void 
ReplacementFor__R(double&ReplacementFor_x){scanf("\x25\x6c\x66",&
ReplacementFor_x);}void ReplacementFor__R(char&ReplacementFor_x){scanf(
"\x20\x25\x63",&ReplacementFor_x);}void ReplacementFor__R(char*ReplacementFor_x)
{scanf("\x25\x73",ReplacementFor_x);}void ReplacementFor_R(){}template<typename 
ReplacementFor_T,typename...ReplacementFor_U>void ReplacementFor_R(
ReplacementFor_T&ReplacementFor_head,ReplacementFor_U&...ReplacementFor_tail){
ReplacementFor__R(ReplacementFor_head);ReplacementFor_R(ReplacementFor_tail...);
}template<typename ReplacementFor_T>void ReplacementFor__W(const 
ReplacementFor_T&ReplacementFor_x){cout<<ReplacementFor_x;}void 
ReplacementFor__W(const int&ReplacementFor_x){printf("\x25\x64",ReplacementFor_x
);}void ReplacementFor__W(const long long&ReplacementFor_x){printf("\x25" PRId64
,ReplacementFor_x);}template<typename ReplacementFor_T>void ReplacementFor__W(
const vector<ReplacementFor_T>&ReplacementFor_x){for(auto ReplacementFor_i=
ReplacementFor_x.ReplacementFor_cbegin();ReplacementFor_i!=ReplacementFor_x.
ReplacementFor_cend();ReplacementFor_i++){if(ReplacementFor_i!=ReplacementFor_x.
ReplacementFor_cbegin())putchar(((char)(0x280+4918-0x1596)));ReplacementFor__W(*
ReplacementFor_i);}}void ReplacementFor_W(){}template<typename ReplacementFor_T,
typename...ReplacementFor_U>void ReplacementFor_W(const ReplacementFor_T&
ReplacementFor_head,const ReplacementFor_U&...ReplacementFor_tail){
ReplacementFor__W(ReplacementFor_head);putchar(sizeof...(ReplacementFor_tail)?
((char)(0x1bfb+641-0x1e5c)):'\n');ReplacementFor_W(ReplacementFor_tail...);}
#ifdef ReplacementFor_SHIK
#define ReplacementFor_FILEIO(...)
#else
#define ReplacementFor_FILEIO(ReplacementFor_name) do {\
    freopen(ReplacementFor_name "\x2e\x69\x6e","\x72",stdin); \
    freopen(ReplacementFor_name "\x2e\x6f\x75\x74","\x77",stdout); \
} while ((0x629+7014-0x218f))
#endif
char ReplacementFor_tbl[]="\x52\x4f\x59\x47\x42\x56";string 
ReplacementFor_greedy(array<int,(0x16b7+3339-0x23bf)>a){int ReplacementFor_n=a[
(0xdf1+533-0x1006)]+a[(0xd+1219-0x4cf)]+a[(0xb1b+1040-0xf29)];assert(
ReplacementFor_n>(0xdb3+6087-0x257a));string s;int last=-(0x598+6961-0x20c8);
ReplacementFor_REP(ReplacementFor_i,ReplacementFor_n){int ReplacementFor_w=-
(0x12ad+337-0x13fd);ReplacementFor_REP(ReplacementFor_j,(0xe30+1204-0x12e1))if(
ReplacementFor_j!=last&&a[ReplacementFor_j]&&(ReplacementFor_w==-
(0x1f5f+603-0x21b9)||(ReplacementFor_i>(0x39+6072-0x17f1)&&a[ReplacementFor_j]>a
[ReplacementFor_w])))ReplacementFor_w=ReplacementFor_j;if(ReplacementFor_w==-
(0x1e94+2068-0x26a7))return"";s+=ReplacementFor_tbl[ReplacementFor_w*
(0x80d+6461-0x2148)];a[ReplacementFor_w]--;last=ReplacementFor_w;}assert(
ReplacementFor_SZ(s)==ReplacementFor_n);if(s[(0x1c3f+2312-0x2547)]==s[
ReplacementFor_n-(0x41b+7973-0x233f)])return"";return s;}int ReplacementFor_n,
ReplacementFor_c[(0x542+7795-0x23af)];void input(){ReplacementFor_R(
ReplacementFor_n);ReplacementFor_REP(ReplacementFor_i,(0x1ddb+1233-0x22a6))
ReplacementFor_R(ReplacementFor_c[ReplacementFor_i]);}string ReplacementFor_rep(
string s,int ReplacementFor_k){string ReplacementFor_t;ReplacementFor_REP(
ReplacementFor_i,ReplacementFor_k)ReplacementFor_t+=s;return ReplacementFor_t;}
string ReplacementFor_check(){if(ReplacementFor_c[(0x121a+1511-0x1800)]+
ReplacementFor_c[(0xb36+1262-0x1020)]==ReplacementFor_n&&ReplacementFor_c[
(0x13d6+1717-0x1a8a)]==ReplacementFor_c[(0x103a+434-0x11e8)])return 
ReplacementFor_rep("\x4f\x42",ReplacementFor_n/(0x1091+2183-0x1916));if(
ReplacementFor_c[(0x1062+4692-0x22b3)]+ReplacementFor_c[(0xfb3+1455-0x1562)]==
ReplacementFor_n&&ReplacementFor_c[(0x328+5027-0x16c8)]==ReplacementFor_c[
(0x67a+5305-0x1b33)])return ReplacementFor_rep("\x47\x52",ReplacementFor_n/
(0x366+8497-0x2495));if(ReplacementFor_c[(0xbd5+3464-0x1958)]+ReplacementFor_c[
(0x30f+1829-0xa32)]==ReplacementFor_n&&ReplacementFor_c[(0xeb8+5347-0x2396)]==
ReplacementFor_c[(0x1156+4146-0x2186)])return ReplacementFor_rep("\x56\x59",
ReplacementFor_n/(0x16e8+3191-0x235d));if(ReplacementFor_c[(0xc2+8585-0x224a)]&&
ReplacementFor_c[(0xdff+768-0x10fe)]>=ReplacementFor_c[(0x16cf+1382-0x1c31)])
return"";if(ReplacementFor_c[(0x1a04+3216-0x2691)]&&ReplacementFor_c[
(0x2c2+6873-0x1d98)]>=ReplacementFor_c[(0x239+5535-0x17d8)])return"";if(
ReplacementFor_c[(0x182+4106-0x1187)]&&ReplacementFor_c[(0x2ea+1076-0x719)]>=
ReplacementFor_c[(0x99f+7267-0x2600)])return"";ReplacementFor_c[
(0x1fcb+54-0x1ffd)]-=ReplacementFor_c[(0x1098+3192-0x1d0f)];ReplacementFor_c[
(0x10b1+2193-0x1942)]-=ReplacementFor_c[(0x61f+1891-0xd7f)];ReplacementFor_c[
(0x6+7366-0x1cca)]-=ReplacementFor_c[(0xc98+4852-0x1f87)];string s=
ReplacementFor_greedy({{ReplacementFor_c[(0x6ad+4013-0x165a)],ReplacementFor_c[
(0x339+2813-0xe34)],ReplacementFor_c[(0x1535+2119-0x1d78)]}});if(s.empty())
return s;string ReplacementFor_ans;for(char ReplacementFor_i:s){
ReplacementFor_ans.push_back(ReplacementFor_i);if(ReplacementFor_i==
((char)(0xcb7+4283-0x1d30))&&ReplacementFor_c[(0x114b+1123-0x15ad)]){
ReplacementFor_ans+=ReplacementFor_rep("\x4f\x42",ReplacementFor_c[
(0xcd9+2890-0x1822)]);ReplacementFor_c[(0x988+2100-0x11bb)]=(0x598+537-0x7b1);}
if(ReplacementFor_i==((char)(0x1824+531-0x19e5))&&ReplacementFor_c[
(0x218d+732-0x2466)]){ReplacementFor_ans+=ReplacementFor_rep("\x47\x52",
ReplacementFor_c[(0xd06+4562-0x1ed5)]);ReplacementFor_c[(0x271+4975-0x15dd)]=
(0xff9+4759-0x2290);}if(ReplacementFor_i==((char)(0x7dd+5057-0x1b45))&&
ReplacementFor_c[(0x1e19+1332-0x2348)]){ReplacementFor_ans+=ReplacementFor_rep(
"\x56\x59",ReplacementFor_c[(0x2b3+8519-0x23f5)]);ReplacementFor_c[
(0x1104+1674-0x1789)]=(0x34a+3309-0x1037);}}return ReplacementFor_ans;}void 
solve(){int ReplacementFor_oc[(0xc72+3581-0x1a69)];memcpy(ReplacementFor_oc,
ReplacementFor_c,sizeof(ReplacementFor_c));ReplacementFor_n=(0xe2+5612-0x16ce);
ReplacementFor_REP(ReplacementFor_i,(0x16e9+2510-0x20b1))ReplacementFor_n+=
ReplacementFor_c[ReplacementFor_i];auto ReplacementFor_ans=ReplacementFor_check(
);if(ReplacementFor_ans.empty())ReplacementFor_ans=
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45";else{assert(ReplacementFor_SZ(
ReplacementFor_ans)==ReplacementFor_n);ReplacementFor_REP(ReplacementFor_i,
ReplacementFor_n)assert(ReplacementFor_ans[ReplacementFor_i]!=ReplacementFor_ans
[(ReplacementFor_i+(0x654+2704-0x10e3))%ReplacementFor_n]);ReplacementFor_REP(
ReplacementFor_i,ReplacementFor_n){auto ReplacementFor_ptr=strchr(
ReplacementFor_tbl,ReplacementFor_ans[ReplacementFor_i]);assert(
ReplacementFor_ptr);int ReplacementFor_idx=ReplacementFor_ptr-ReplacementFor_tbl
;ReplacementFor_oc[ReplacementFor_idx]--;}ReplacementFor_REP(ReplacementFor_i,
(0x12cd+3263-0x1f86))assert(ReplacementFor_oc[ReplacementFor_i]==
(0x12d2+4550-0x2498));}ReplacementFor_W(ReplacementFor_ans);}int main(int 
ReplacementFor_argc,char*ReplacementFor_argv[]){int ReplacementFor_n_case;
ReplacementFor_R(ReplacementFor_n_case);ReplacementFor_REP1(ReplacementFor_i,
(0x114f+1286-0x1654),ReplacementFor_n_case){input();if(ReplacementFor_argc==
(0xc07+49-0xc36)&&atoi(ReplacementFor_argv[(0x3af+685-0x65b)])!=ReplacementFor_i
)continue;printf("\x43\x61\x73\x65\x20\x23\x25\x64\x3a\x20",ReplacementFor_i);
solve();}return(0x7ef+6034-0x1f81);}
