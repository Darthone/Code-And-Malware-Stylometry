
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<cassert>
#define ReplacementFor_PB push_back
#define ReplacementFor_MP make_pair
#define ReplacementFor_sz(ReplacementFor_v) (ReplacementFor_in((ReplacementFor_v\
).size()))
#define ReplacementFor_forn(ReplacementFor_i,ReplacementFor_n) for(\
ReplacementFor_in ReplacementFor_i=(0x18c6+2725-0x236b);ReplacementFor_i<(\
ReplacementFor_n);++ReplacementFor_i)
#define ReplacementFor_forv(ReplacementFor_i,ReplacementFor_v) \
ReplacementFor_forn(ReplacementFor_i,ReplacementFor_sz(ReplacementFor_v))
#define ReplacementFor_fors(ReplacementFor_i,s) for(auto ReplacementFor_i=(s).\
begin();ReplacementFor_i!=(s).end();++ReplacementFor_i)
#define ReplacementFor_all(ReplacementFor_v) (ReplacementFor_v).begin(),(\
ReplacementFor_v).end()
using namespace std;typedef long long ReplacementFor_in;typedef vector<
ReplacementFor_in>ReplacementFor_VI;typedef vector<ReplacementFor_VI>
ReplacementFor_VVI;vector<string>ReplacementFor_bs,ReplacementFor_rs,
ReplacementFor_ys;ReplacementFor_in ReplacementFor_n,ReplacementFor_r,
ReplacementFor_o,ReplacementFor_y,ReplacementFor_g,ReplacementFor_b,
ReplacementFor_v;bool ReplacementFor_mrg(ReplacementFor_in&a,ReplacementFor_in&
ReplacementFor_b,vector<string>&ReplacementFor_v,char ReplacementFor_ca,char 
ReplacementFor_cb){if(a+ReplacementFor_b==(0x8f0+2253-0x11bd))return
(0x2104+1419-0x268e);if(a==ReplacementFor_b&&a+ReplacementFor_b==
ReplacementFor_n){string s;ReplacementFor_forn(ReplacementFor_i,a){s+=
ReplacementFor_ca;s+=ReplacementFor_cb;}cout<<s<<"\n";return(0x76f+1729-0xe30);}
if(a<=ReplacementFor_b){cout<<"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";
return(0x12d1+3-0x12d4);}string s((0xe39+701-0x10f5),ReplacementFor_ca);
ReplacementFor_forn(ReplacementFor_i,ReplacementFor_b){s+=ReplacementFor_cb;s+=
ReplacementFor_ca;}ReplacementFor_v.ReplacementFor_PB(s);ReplacementFor_forn(
ReplacementFor_i,a-ReplacementFor_b-(0x58f+8446-0x268c))ReplacementFor_v.
ReplacementFor_PB(string((0x3bb+5320-0x1882),ReplacementFor_ca));return
(0x2a0+7062-0x1e35);}void ReplacementFor_dot(){cin>>ReplacementFor_n>>
ReplacementFor_r>>ReplacementFor_o>>ReplacementFor_y>>ReplacementFor_g>>
ReplacementFor_b>>ReplacementFor_v;ReplacementFor_bs.clear();ReplacementFor_rs.
clear();ReplacementFor_ys.clear();if(!ReplacementFor_mrg(ReplacementFor_r,
ReplacementFor_g,ReplacementFor_rs,((char)(0x951+6101-0x20d4)),
((char)(0x93b+2671-0x1363))))return;if(!ReplacementFor_mrg(ReplacementFor_y,
ReplacementFor_v,ReplacementFor_ys,((char)(0x33d+4747-0x156f)),
((char)(0x488+7898-0x230c))))return;if(!ReplacementFor_mrg(ReplacementFor_b,
ReplacementFor_o,ReplacementFor_bs,((char)(0x14b1+2176-0x1cef)),
((char)(0x23ef+746-0x268a))))return;if(ReplacementFor_sz(ReplacementFor_ys)>
ReplacementFor_sz(ReplacementFor_rs))swap(ReplacementFor_ys,ReplacementFor_rs);
if(ReplacementFor_sz(ReplacementFor_bs)>ReplacementFor_sz(ReplacementFor_rs))
swap(ReplacementFor_bs,ReplacementFor_rs);ReplacementFor_r=ReplacementFor_sz(
ReplacementFor_rs);ReplacementFor_y=ReplacementFor_sz(ReplacementFor_ys);
ReplacementFor_b=ReplacementFor_sz(ReplacementFor_bs);if(ReplacementFor_r>
ReplacementFor_b+ReplacementFor_y||ReplacementFor_b>ReplacementFor_r+
ReplacementFor_y||ReplacementFor_y>ReplacementFor_b+ReplacementFor_r){cout<<
"\x49\x4d\x50\x4f\x53\x53\x49\x42\x4c\x45" "\n";return;}ReplacementFor_forn(
ReplacementFor_i,ReplacementFor_r){cout<<ReplacementFor_rs.back();
ReplacementFor_rs.pop_back();if(ReplacementFor_i<ReplacementFor_b){cout<<
ReplacementFor_bs.back();ReplacementFor_bs.pop_back();}else{cout<<
ReplacementFor_ys.back();ReplacementFor_ys.pop_back();}if(ReplacementFor_i<(
ReplacementFor_b+ReplacementFor_y-ReplacementFor_r)){cout<<ReplacementFor_ys.
back();ReplacementFor_ys.pop_back();}}cout<<"\n";}int main(){ios::
sync_with_stdio((0x924+911-0xcb3));cin.tie((0x5ff+6977-0x2140));
ReplacementFor_in ReplacementFor_t;cin>>ReplacementFor_t;ReplacementFor_forn(
ReplacementFor_z,ReplacementFor_t){cout<<"\x43\x61\x73\x65\x20\x23"<<(
ReplacementFor_z+(0x111a+5559-0x26d0))<<"\x3a\x20";ReplacementFor_dot();}return
(0x849+2076-0x1065);}
