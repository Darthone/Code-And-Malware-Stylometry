xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6020af
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400c40
mov eax, 0
test rax, rax
je 0x400c40
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400c88
mov eax, 0
test rax, rax
je 0x400c88
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x201539], 0
jne 0x400caa
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x201526], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400cc0
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400cbb
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
push r15
push r14
mov edi, 0x401944
push r13
push r12
push rbp
push rbx
sub rsp, 0xc8
mov rax, qword fs:[0x28]
mov qword [rsp + 0xb8], rax
xor eax, eax
lea rsi, [rsp + 0x2c]
lea rbx, [rsp + 0x94]
call sym.imp.scanf
lea rax, [rsp + 0x90]
lea rbp, [rax + 0x1c]
nop word [rax + rax]
mov rsi, rbx
xor eax, eax
mov edi, 0x401944
add rbx, 4
call sym.imp.scanf
cmp rbx, rbp
jne 0x400d30
mov esi, dword [rsp + 0x98]
mov eax, dword [rsp + 0xa4]
mov r9d, dword [rsp + 0x2c]
lea edx, [rsi + rax]
cmp edx, r9d
jne 0x400d6b
cmp esi, eax
je 0x401800
mov edi, dword [rsp + 0xa0]
mov ecx, dword [rsp + 0x94]
lea edx, [rcx + rdi]
cmp edx, r9d
jne 0x400d89
cmp ecx, edi
je 0x40179c
mov r8d, dword [rsp + 0xa8]
mov edx, dword [rsp + 0x9c]
lea r10d, [r8 + rdx]
cmp r10d, r9d
jne 0x400db5
cmp r8d, edx
mov ebx, 6
mov r12d, 3
je 0x4017aa
test esi, esi
je 0x400dc1
cmp esi, eax
jge 0x400f66
test edi, edi
je 0x400dcd
cmp ecx, edi
jle 0x400f66
test r8d, r8d
je 0x400ddb
cmp r8d, edx
jge 0x400f66
sub ecx, edi
sub edx, r8d
sub eax, esi
cmp ecx, edx
mov dword [rsp + 0x94], ecx
mov dword [rsp + 0x9c], edx
mov dword [rsp + 0xa4], eax
jl 0x400f27
mov esi, ecx
mov dword [rsp + 0x14], 1
cmp eax, esi
jg 0x400f39
lea edi, [rcx + rdx]
add edi, eax
sub edi, esi
cmp edi, esi
jl 0x400f66
mov esi, dword [rsp + 0x14]
mov qword [rsp + 8], 5
mov dword [rsp + 0x1c], 5
cmp esi, 3
setne sil
cmovne ecx, edx
mov edx, eax
movzx esi, sil
lea esi, [rsi + rsi + 1]
mov dword [rsp + 0x18], esi
lea rax, [rsp + 0x40]
lea rsi, [rsp + 0x60]
cmp ecx, edx
mov qword [rsp + 0x38], 0
mov byte [rsp + 0x40], 0
mov qword [rsp + 0x30], rax
mov qword [rsp + 0x50], rsi
mov qword [rsp + 0x58], 0
mov byte [rsp + 0x60], 0
jge 0x400fb3
xor ebp, ebp
mov r12d, 1
mov qword [rsp], rax
movsxd r15, dword [rsp + 0x1c]
movsxd r14, dword [rsp + 0x18]
jmp 0x400edd
nop dword [rax]
mov byte [rax + rbp], r13b
mov rax, qword [rsp + 0x30]
add r12d, 1
mov qword [rsp + 0x38], rbx
mov byte [rax + rbx], 0
mov edx, dword [rsp + r15*4 + 0x90]
mov ecx, dword [rsp + r14*4 + 0x90]
mov eax, edx
sub eax, ecx
cmp eax, r12d
jl 0x40178d
mov rbp, qword [rsp + 0x38]
mov rax, qword [rsp + 0x30]
cmp rax, qword [rsp]
mov rdx, qword [rip + 0x2011b8]
lea rbx, [rbp + 1]
mov rcx, qword [rsp + 8]
movzx r13d, byte [rdx + rcx]
je 0x400fa9
mov rdx, qword [rsp + 0x40]
cmp rbx, rdx
jbe 0x400ea0
lea rdi, [rsp + 0x30]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbp
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x400ea0
mov esi, edx
mov dword [rsp + 0x14], 3
cmp eax, esi
jle 0x400e11
lea esi, [rcx + rdx]
cmp eax, esi
jg 0x400f66
mov qword [rsp + 8], 3
mov dword [rsp + 0x14], 5
mov dword [rsp + 0x1c], 3
mov dword [rsp + 0x18], 1
jmp 0x400e4d
mov esi, str.IMPOSSIBLE_n
xor eax, eax
mov edi, 1
xor ebx, ebx
call sym.imp.__printf_chk
test eax, eax
sete bl
mov eax, ebx
mov rcx, qword [rsp + 0xb8]
xor rcx, qword fs:[0x28]
jne 0x4018b7
add rsp, 0xc8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov edx, 0xf
jmp 0x400f01
xor ebx, ebx
cmp ecx, edx
jle 0x401068
lea rcx, [rsp + 0x40]
movsxd r13, dword [rsp + 0x18]
mov r12d, 1
movsxd r14, dword [rsp + 0x1c]
mov qword [rsp], rcx
jmp 0x401019
nop dword [rax + rax]
mov byte [rax + rbx], r15b
mov rax, qword [rsp + 0x30]
add r12d, 1
mov qword [rsp + 0x38], rbp
mov byte [rax + rbp], 0
mov ecx, dword [rsp + r13*4 + 0x90]
mov edx, dword [rsp + r14*4 + 0x90]
mov eax, ecx
sub eax, edx
cmp eax, r12d
jl 0x40105e
mov rbx, qword [rsp + 0x38]
mov rax, qword [rsp + 0x30]
cmp rax, qword [rsp]
mov rdx, qword [rip + 0x20107c]
lea rbp, [rbx + 1]
movzx r15d, byte [rdx + r13]
je 0x401057
mov rdx, qword [rsp + 0x40]
cmp rbp, rdx
jbe 0x400fe0
lea rdi, [rsp + 0x30]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x400fe0
mov edx, 0xf
jmp 0x401034
mov rax, qword [rsp + 0x30]
mov rbx, qword [rsp + 0x38]
cmp edx, ecx
movsxd r13, dword [rsp + 0x18]
mov r12d, 1
cmovg edx, ecx
lea rcx, [rsp + 0x40]
movsxd r14, dword [rsp + 0x1c]
test edx, edx
mov qword [rsp], rcx
jg 0x401124
jmp 0x4011af
nop dword [rax + rax]
mov byte [rax + rbx], r15b
mov rax, qword [rsp + 0x30]
mov qword [rsp + 0x38], rbp
mov rcx, qword [rsp + 8]
mov byte [rax + rbp], 0
mov rax, qword [rip + 0x200fea]
mov rbx, qword [rsp + 0x38]
movzx r15d, byte [rax + rcx]
mov rax, qword [rsp + 0x30]
cmp rax, qword [rsp]
lea rbp, [rbx + 1]
je 0x401198
mov rdx, qword [rsp + 0x40]
cmp rbp, rdx
ja 0x401170
mov byte [rax + rbx], r15b
mov rax, qword [rsp + 0x30]
add r12d, 1
mov qword [rsp + 0x38], rbp
mov byte [rax + rbx + 1], 0
mov eax, dword [rsp + r13*4 + 0x90]
cmp dword [rsp + r14*4 + 0x90], eax
mov rbx, qword [rsp + 0x38]
cmovle eax, dword [rsp + r14*4 + 0x90]
cmp r12d, eax
mov rax, qword [rsp + 0x30]
jg 0x4011af
cmp rax, qword [rsp]
mov rdx, qword [rip + 0x200f71]
lea rbp, [rbx + 1]
movzx r15d, byte [rdx + r13]
je 0x4011a8
mov rdx, qword [rsp + 0x40]
cmp rbp, rdx
jbe 0x401098
lea rdi, [rsp + 0x30]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x401098
nop dword [rax]
lea rdi, [rsp + 0x30]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x4010e1
nop dword [rax]
mov edx, 0xf
jmp 0x4010d8
nop word [rax + rax]
mov edx, 0xf
jmp 0x40113f
lea rdx, [rax + rbx]
cmp rdx, rax
je 0x4011e2
sub rdx, 1
cmp rdx, rax
jbe 0x4011e2
nop dword [rax]
movzx ecx, byte [rax]
movzx esi, byte [rdx]
add rax, 1
sub rdx, 1
mov byte [rax - 1], sil
mov byte [rdx + 1], cl
cmp rdx, rax
ja 0x4011c8
movsxd r12, dword [rsp + 0x14]
mov ebp, 1
lea r13, [rsp + 0x60]
mov esi, dword [rsp + r12*4 + 0x90]
test esi, esi
jg 0x401294
jmp 0x401327
nop word cs:[rax + rax]
mov byte [rax + rbx], r15b
mov rax, qword [rsp + 0x50]
mov qword [rsp + 0x58], r14
mov byte [rax + rbx + 1], 0
mov rax, qword [rsp + 0x38]
mov rdx, qword [rsp + 0x30]
mov rbx, qword [rsp + 0x58]
movzx r15d, byte [rdx + rax - 1]
mov rax, qword [rsp + 0x50]
lea r14, [rbx + 1]
cmp rax, r13
je 0x401310
mov rdx, qword [rsp + 0x60]
cmp r14, rdx
ja 0x4012e8
mov byte [rax + rbx], r15b
mov rax, qword [rsp + 0x50]
lea rdi, [rsp + 0x30]
mov qword [rsp + 0x58], r14
mov edx, 1
add ebp, 1
mov byte [rax + rbx + 1], 0
mov rax, qword [rsp + 0x38]
lea rsi, [rax - 1]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_erase
cmp dword [rsp + r12*4 + 0x90], ebp
jl 0x401327
mov rax, qword [rip + 0x200e05]
mov rbx, qword [rsp + 0x58]
movzx r15d, byte [rax + r12]
mov rax, qword [rsp + 0x50]
lea r14, [rbx + 1]
cmp rax, r13
je 0x401320
mov rdx, qword [rsp + 0x60]
cmp r14, rdx
jbe 0x401210
lea rdi, [rsp + 0x50]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x50]
jmp 0x401210
nop word [rax + rax]
lea rdi, [rsp + 0x50]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x50]
jmp 0x401258
nop dword [rax]
mov edx, 0xf
jmp 0x40124f
nop word [rax + rax]
mov edx, 0xf
jmp 0x4012b8
mov rax, qword [rsp + 0x38]
lea r12, [rsp + 0x60]
test rax, rax
jne 0x401375
jmp 0x4013c7
nop dword [rax + rax]
mov byte [rax + rbx], r13b
mov rax, qword [rsp + 0x50]
lea rdi, [rsp + 0x30]
mov qword [rsp + 0x58], rbp
mov edx, 1
mov byte [rax + rbx + 1], 0
mov rax, qword [rsp + 0x38]
lea rsi, [rax - 1]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_erase
mov rax, qword [rsp + 0x38]
test rax, rax
je 0x4013c7
mov rdx, qword [rsp + 0x30]
mov rbx, qword [rsp + 0x58]
movzx r13d, byte [rdx + rax - 1]
mov rax, qword [rsp + 0x50]
lea rbp, [rbx + 1]
cmp rax, r12
je 0x4013c0
mov rdx, qword [rsp + 0x60]
cmp rbp, rdx
jbe 0x401340
lea rdi, [rsp + 0x50]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x50]
jmp 0x401340
nop dword [rax + rax]
mov edx, 0xf
jmp 0x401398
cmp qword [rsp + 0x58], 0
lea rax, [rsp + 0x80]
mov qword [rsp + 0x78], 0
mov byte [rsp + 0x80], 0
mov qword [rsp + 0x70], rax
je 0x4018a8
xor r14d, r14d
xor r12d, r12d
mov r13, rax
movabs rbp, 0x7fffffffffffffff
jmp 0x40145d
nop word cs:[rax + rax]
mov byte [rax + r14], r15b
mov rax, qword [rsp + 0x70]
mov qword [rsp + 0x78], rbx
mov byte [rax + rbx], 0
mov rax, r12
add rax, qword [rsp + 0x50]
movzx edx, byte [rax]
cmp dl, 0x52
je 0x4014a8
cmp dl, 0x42
je 0x401521
cmp dl, 0x59
je 0x401599
add r12, 1
cmp r12, qword [rsp + 0x58]
jae 0x40160c
mov r14, qword [rsp + 0x78]
mov rax, qword [rsp + 0x70]
mov rdx, qword [rsp + 0x50]
cmp rax, r13
lea rbx, [r14 + 1]
movzx r15d, byte [rdx + r12]
je 0x401720
mov rdx, qword [rsp + 0x80]
cmp rbx, rdx
jbe 0x401410
lea rdi, [rsp + 0x70]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r14
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x70]
jmp 0x401410
nop word [rax + rax]
mov ecx, dword [rsp + 0xa0]
test ecx, ecx
jle 0x40150a
mov rax, rbp
sub rax, qword [rsp + 0x78]
cmp rax, 1
jbe 0x40183b
xor ebx, ebx
jmp 0x4014e2
nop dword [rax]
mov rax, rbp
sub rax, qword [rsp + 0x78]
cmp rax, 1
jbe 0x40183b
lea rdi, [rsp + 0x70]
mov edx, 2
mov esi, 0x40196b
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebx, 1
cmp dword [rsp + 0xa0], ebx
jg 0x4014d0
mov rax, r12
add rax, qword [rsp + 0x50]
mov dword [rsp + 0xa0], 0
movzx edx, byte [rax]
cmp dl, 0x42
jne 0x40143b
mov edx, dword [rsp + 0x98]
test edx, edx
jle 0x401582
mov rax, rbp
sub rax, qword [rsp + 0x78]
cmp rax, 1
jbe 0x40184f
xor ebx, ebx
jmp 0x40155a
nop word [rax + rax]
mov rax, rbp
sub rax, qword [rsp + 0x78]
cmp rax, 1
jbe 0x40184f
lea rdi, [rsp + 0x70]
mov edx, 2
mov esi, 0x40196e
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebx, 1
cmp dword [rsp + 0x98], ebx
jg 0x401548
mov rax, r12
add rax, qword [rsp + 0x50]
mov dword [rsp + 0x98], 0
movzx edx, byte [rax]
cmp dl, 0x59
jne 0x401444
mov eax, dword [rsp + 0xa8]
test eax, eax
jle 0x4015f2
mov rax, rbp
sub rax, qword [rsp + 0x78]
cmp rax, 1
jbe 0x401845
xor ebx, ebx
jmp 0x4015d2
nop word [rax + rax]
mov rax, rbp
sub rax, qword [rsp + 0x78]
cmp rax, 1
jbe 0x401845
lea rdi, [rsp + 0x70]
mov edx, 2
mov esi, 0x401971
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebx, 1
cmp dword [rsp + 0xa8], ebx
jg 0x4015c0
add r12, 1
cmp r12, qword [rsp + 0x58]
mov dword [rsp + 0xa8], 0
jb 0x401453
mov rdx, qword [rsp + 0x78]
mov rsi, qword [rsp + 0x70]
mov edi, obj.std::cout
call sym.std::__ostream_insert_char_std::char_traits_char__
mov edx, 1
mov esi, 0x401980
mov rdi, rax
call sym.std::__ostream_insert_char_std::char_traits_char__
mov rax, qword [rsp + 0x70]
mov rbx, qword [rsp + 0x78]
lea rdx, [rsp + 0x80]
cmp rax, rdx
movzx r12d, byte [rax]
lea rbp, [rbx + 1]
je 0x401831
mov rdx, qword [rsp + 0x80]
cmp rbp, rdx
ja 0x401810
mov byte [rax + rbx], r12b
mov rax, qword [rsp + 0x70]
mov qword [rsp + 0x78], rbp
mov byte [rax + rbx + 1], 0
mov esi, dword [rsp + 0x2c]
xor eax, eax
mov rdi, qword [rsp + 0x70]
cmp esi, eax
jle 0x40173b
nop dword [rax]
movzx ecx, byte [rdi + rax + 1]
movzx edx, byte [rdi + rax]
cmp cl, dl
je 0x4016b9
cmp dl, 0x4f
je 0x40172a
cmp dl, 0x47
je 0x40177e
cmp cl, 0x59
je 0x40172f
cmp dl, 0x56
jne 0x40172f
mov esi, str.WAWAWAWAWAWA_n
mov edi, 1
xor eax, eax
call sym.imp.__printf_chk
mov rdi, qword [rsp + 0x70]
xor ebx, ebx
test eax, eax
lea rax, [rsp + 0x80]
sete bl
cmp rdi, rax
je 0x4016e8
call sym.operatordelete
mov rdi, qword [rsp + 0x50]
lea rax, [rsp + 0x60]
cmp rdi, rax
je 0x4016fc
call sym.operatordelete
mov rdi, qword [rsp + 0x30]
lea rax, [rsp + 0x40]
cmp rdi, rax
je 0x400f7e
call sym.operatordelete
jmp 0x400f7e
nop dword [rax]
mov edx, 0xf
jmp 0x40147c
cmp cl, 0x42
jne 0x4016b9
add rax, 1
cmp esi, eax
jg 0x401690
lea rax, [rsp + 0x80]
cmp rdi, rax
je 0x40174d
call sym.operatordelete
mov rdi, qword [rsp + 0x50]
lea rax, [rsp + 0x60]
cmp rdi, rax
je 0x401761
call sym.operatordelete
mov rdi, qword [rsp + 0x30]
lea rax, [rsp + 0x40]
cmp rdi, rax
je 0x400f80
call sym.operatordelete
jmp 0x400f80
cmp cl, 0x52
jne 0x4016b9
add rax, 1
jmp 0x401733
mov rax, qword [rsp + 0x30]
mov rbx, qword [rsp + 0x38]
jmp 0x400fb5
mov r8d, edi
mov ebx, 4
mov r12d, 1
xor ebp, ebp
test r8d, r8d
jle 0x4017f6
mov rax, qword [rip + 0x2008e8]
mov esi, 0x401947
mov edi, 1
add ebp, 1
movsx edx, byte [rax + rbx]
xor eax, eax
call sym.imp.__printf_chk
mov rax, qword [rip + 0x2008c9]
mov esi, 0x401947
mov edi, 1
movsx edx, byte [rax + r12]
xor eax, eax
call sym.imp.__printf_chk
cmp dword [rsp + rbx*4 + 0x90], ebp
jg 0x4017b1
mov esi, 0x401980
jmp 0x400f6b
mov r8d, esi
mov ebx, 2
mov r12d, 5
jmp 0x4017aa
lea rdi, [rsp + 0x70]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x70]
jmp 0x401666
mov edx, 0xf
jmp 0x40165d
mov edi, str.basic_string::append
call sym.std::__throw_length_error
mov edi, str.basic_string::append
call sym.std::__throw_length_error
mov edi, str.basic_string::append
call sym.std::__throw_length_error
mov rdi, qword [rsp + 0x70]
lea rdx, [rsp + 0x80]
mov rbx, rax
cmp rdi, rdx
je 0x401873
call sym.operatordelete
mov rdi, qword [rsp + 0x50]
lea rax, [rsp + 0x60]
cmp rdi, rax
je 0x401887
call sym.operatordelete
mov rdi, qword [rsp + 0x30]
lea rax, [rsp + 0x40]
cmp rdi, rax
je 0x40189b
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
nop dword [rax + rax]
mov rsi, rax
xor edx, edx
jmp 0x401616
mov rbx, rax
jmp 0x401873
call sym.imp.__stack_chk_fail
nop dword [rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200516]
push rbp
lea rbp, [rip + 0x20051e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401916
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401900
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
and eax, 0x63250064
add byte [rcx + 0x4d], cl
push r8
push r11
push rbx
or r8b, byte [r8]
jae 0x4019c3
movsxd rbx, dword [rdi + 0x73]
je 0x4019d1
imul ebp, dword [rsi + 0x67], 0x70613a3a
jo 0x4019cd
outsb dx, byte [rsi]
add byte fs:[rdi + 0x52], al
add byte [rdi + 0x42], cl
add byte [rsi + 0x59], dl
add byte [rdi + 0x41], dl
push rdi
push r15
push r15
push r15
push r15
push r15
or al, byte [r8]
jae 0x4019eb
and byte [rbx], ah
and eax, 0x203a64
cmp eax, 0x47594f52
push rsi
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add dword [rbx], ebx
add edi, dword [rbx]
add byte [rax], r8b
add byte [rdi], al
add byte [rax], al
add byte [rax - 0x6f000010], cl
add byte [rax], al
add byte [rax + 0x30fffff1], bl
add dword [rax], eax
add byte [rax], bl
lcall [rax + 1]
add byte [rax], al
jmp qword [rax]
add byte [rax], al
fadd dword [rax]
add byte [rax], al
sub bh, bh
push qword [rax + 1]
add byte [rax], al
cwde
mov eax, 1
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4019ff
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
loopne 0x4019f3
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401a2f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
out dx, eax
inc dword [rax]
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x401a71
add esi, eax
or al, byte [rax]
add ebx, dword [rbx]
or al, 7
or byte [rax + 0x54000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
push -0x2300000e
or eax, dword [rax]
add byte [rsp + rbp*2], al
sbb eax, dword [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx - 0x7ff1b8f9], al
add al, byte [rbx]
test al, 2
or cl, byte [rsi]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
mov esp, 0x60000000
push qword [rsi]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rbx + 0x200e4e02], al
add ah, byte [rax + 0xa]
adc byte [rcx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
in al, 0
add byte [rax], al
mov eax, 0x26fffff0
add byte [rax], al
add byte [rax], al
adc byte [rbp + 0xe], bl
or byte [rax], al
add byte [rax], r8b
add ah, bh
add byte [rax], al
add byte [rax + 0x65fffffd], dh
add byte [rax], al
add byte [rax], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x401b4a
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
add dword [rax], r8d
add al, bl
std
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
cmp dword [rsi], esi
sub eax, 0x4b80000
add eax, 0x940017d2
add eax, 0xeb000005
mov esp, 0x17d202
or ebp, dword [rdx + rdx*8]
add bh, cl
or eax, 0x17d205
mov bl, 0xf
mov bh, 4
stc
add bl, ch
adc eax, 0xc2000022
stc
add byte [rsi + 0x517], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x400c], dh
add byte [rax], al
add byte [rax + 0x400b], dh
add byte [rax], al
add byte [rax + 0x400c], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, bh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or eax, 0
add byte [rax], al
add byte [rcx + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sbb eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add al, al
add al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol dword [rdx], 0
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
push 1
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4008], dl
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], ah
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4007], dh
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rdx + 0x4007], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or r8b, byte [rax]
add byte [rax], al
add byte [rax], al
push rsi
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
jbe 0x402044
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400a], al
add byte [rax], al
add byte [rsi + 0x400a], dl
add byte [rax], al
add byte [rsi + 0x400a], ah
add byte [rax], al
add byte [rsi + 0x400a], dh
add byte [rax], al
add dh, al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
out 0xa, al
add byte [rax], al
add byte [rax], al
add dh, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea ebx, [rcx]
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402120
je 0x402129
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x402137
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x402134
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add al, al
add al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rdx + 0x4007], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax + 0x4007], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax + 8], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add byte [rax + 0x4008], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add al, bh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, 0
and byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400b2000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax], dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax + 0x19], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rax + 0x4019], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add al, ah
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
insb byte [rdi], dx
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
call 0x4082ea
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
nop
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb eax, dword [rax]
shl byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0xc], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400c], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rbx], bl
add al, dl
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0x400c], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
call 0x408482
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x2000000], ch
add byte [rsi], cl
add byte [rax + 0x400b], dh
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], bh
sbb eax, dword [rax]
in al, 0x21
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, cl
add byte [rax], al
add byte [rcx], al
add byte [rdx], dl
add byte [rax + 0x1b], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, bl
add byte [rax], al
add byte [rcx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, ah
add byte [rax], al
add byte [rax], al
add byte [rcx], dl
add byte [rax + 0x4019], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rcx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax + rax], dl
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax + rax], dl
call 0x40858a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], dh
add dword [rax], eax
add byte [rcx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x20000002], dh
add byte [rdx], bl
add byte [rax + 0x6020], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bh
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 1], ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], dh
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ch, 2
add byte [rax], al
adc al, byte [rax]
add al, ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
jbe 0x4025f3
add byte [rax], al
adc dword [rax], eax
sbb al, byte [rax]
movabs al, byte [0x800000000006020]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 1], bh
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rcx], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pushfq
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x12000001], dh
add byte [rsi], cl
add al, ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add ah, bl
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000001], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], dh
add byte [rax], al
adc al, byte [rax]
add byte [rcx + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, bh
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x11000002], al
add byte [rbx], bl
add ah, dl
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rdx], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, byte [rdx]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
nop
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdi
add al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 2], dh
add byte [rax], al
adc dword [rax], eax
adc byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x20000002], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x10000002], ch
add byte [rdx], bl
add byte [rax + 0x6020], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x11000000], bh
add byte [rbx], bl
add al, ah
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov esp, 0x11000002
add bl, byte [rdx]
add byte [rax + 0x6020], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add al, byte [rax]
add byte [rcx], dl
add byte [rbx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
adc byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild word [rdx]
add byte [rax], al
adc dword [rdx], eax
sbb al, byte [rax]
cwde
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, dx
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add al, al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte gs:[rax], al
add byte [rax], al
add byte [rax], al
add ah, bh
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 3], bl
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
test al, 0x20
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 3], ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rbx], 0x110000
sbb eax, dword [rax]
fsub qword [rcx]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rbx], 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add dword [rax], eax
add byte [rax], dl
add byte [rbx], bl
add al, ch
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd dword [rbx]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], dl
add byte [rdx], bl
add byte [rax + 0x6020], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
add al, 0
add byte [rdx], dl
add byte [rax], al
add al, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdi
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 4], ch
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol dword [rax + rax], 0
adc al, byte [rax]
add byte [rax], dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
jbe 0x40291a
add byte [rax], al
add byte [rax], al
add byte [rax], al
test byte [rdx], 0
add byte [rdx], dl
add byte [rbx], cl
add al, bh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
fsub dword [rcx]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x72], ah
je 0x4029c8
je 0x4029cc
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x40297e
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4029fc
jb 0x402a02
pop rdi
jne 0x402a0b
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402a05
je 0x402a01
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402a21
jb 0x402a27
pop rdi
jne 0x402a30
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402a33
jns 0x402a23
outsb dx, byte gs:[rsi]
je 0x402a3a
jns 0x4029ca
jb 0x402a2e
insd dword [rdi], dx
pop rdi
jne 0x402a40
insd dword [rdi], dx
jns 0x4029d6
pop rdi
pop rdi
jb 0x402a3c
insd dword [rdi], dx
pop rdi
jne 0x402a4e
insd dword [rdi], dx
jns 0x402a43
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402a4e
jns 0x402a4e
outsb dx, byte gs:[rsi]
je 0x402a65
jns 0x4029f5
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x402a7b
pop rdi
pop r15
add byte [rdi + 0x5a], bl
push rbx
je 0x402a5d
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdi
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402aca
jns 0x402aca
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402adb
jns 0x402adb
jae 0x402af2
jb 0x402af5
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
push rbx
je 0x402ac2
xor byte [rdi + 0x5f], bl
je 0x402afd
jb 0x402b06
ja 0x402af8
insb byte [rdi], dx
outsb dx, byte gs:[rsi]
je 0x402b07
pop rdi
jb 0x402b15
outsd dx, dword [rsi]
jb 0x402af6
movsxd rax, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x4400
add byte [rdi + 0x5f], bl
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x402b46
jb 0x402b49
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x402b3b
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x402b5c
jae 0x402aec
pop rdi
pop rdx
insb byte [rdi], dx
push rax
jbe 0x402b33
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
xor eax, 0x766c6f73
jbe 0x402b0a
pop rdi
pop rdi
jo 0x402b80
imul ebp, dword [rsi + 0x74], 0x68635f66
imul eax, dword [rax + 0x40], 0x47
pop r15
xor ch, byte [rsi]
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402b62
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x402bc9
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x402bce
pop rdi
je 0x402bd6
js 0x402bdc
je 0x402bb5
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x402bc0
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x402c15
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x402c3d
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x402c51
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x402c66
pop rdi
jae 0x402c7c
jb 0x402c7f
add byte [rdi + 0x5f], bl
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x402c51
movsxd rbp, dword [rdi + 0x75]
je 0x402c62
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
jae 0x402ca3
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x402c82
pop rdi
pop rdi
outsd dx, dword [rsi]
jae 0x402ccb
jb 0x402cbe
insd dword [rdi], dx
pop rdi
imul ebp, dword [rsi + 0x73], 0x49747265
movsxd rdx, dword [rbx + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x402ccc
je 0x402ce1
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x402cac
xor esp, dword [rdx + 0x61]
jae 0x402ce9
movsxd rbx, dword [rdi + 0x6f]
jae 0x402cf9
jb 0x402cec
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
push rax
push r11
xor ebx, dword [rdi + 0x6c]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
pop rdi
pop rdi
jae 0x402d21
pop rdi
jae 0x402d25
jb 0x402d28
add byte [rdi + 0x5f], bl
jae 0x402d2d
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
add byte [rdi + 0x5a], bl
push rbx
je 0x402d10
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x402d4f
movsxd rbx, dword [rdi + 0x73]
je 0x402d5d
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x402d58
je 0x402d6d
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
jo 0x402d7f
outsb dx, byte gs:[rsi]
push r8
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x402d65
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x402da4
movsxd rbx, dword [rdi + 0x73]
je 0x402db2
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x402dad
je 0x402dc2
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
insd dword [rdi], dx
jne 0x402dd8
je 0x402dcc
insd dword [rdi], dx
insd dword [rdi], dx
push rax
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x402de6
add byte [rdi + 0x5f], bl
js 0x402e03
pop rdi
jo 0x402df3
jb 0x402e03
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x402e15
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x402e28
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
pop rdi
pop rdx
push rbx
je 0x402dfc
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x402e3b
movsxd rbx, dword [rdi + 0x73]
je 0x402e49
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x402e44
je 0x402e59
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp byte [rdi + 0x4d], bl
pop rdi
jb 0x402e5c
jae 0x402e62
insd dword [rdi], dx
insd dword [rdi], dx
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rbp + 0x61], ch
imul ebp, dword [rsi], 0x79732e00
insd dword [rdi], dx
je 0x402e7e
add byte [rsi], ch
jae 0x402e96
jb 0x402e98
add byte [rsi], ch
jae 0x402e92
jae 0x402ea0
jb 0x402ea2
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402ea3
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402eb1
outsb dx, byte cs:[esi]
jne 0x402e7f
jne 0x402ebd
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x402e8d
push 0x687361
jns 0x402ed6
jae 0x402ee3
insd dword [rdi], dx
add byte [rsi], ch
jns 0x402ede
jae 0x402ee6
jb 0x402e74
outsb dx, byte cs:[esi]
jne 0x402ea7
jbe 0x402ee0
jb 0x402ef0
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x402eb4
jbe 0x402eed
jb 0x402efd
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x402ef8
insb byte [rdi], dx
jns 0x402f07
add byte [rsi], ch
jb 0x402f02
insb byte [rdi], dx
jo 0x402f0e
je 0x402ea4
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x402edd
outsd dx, dword [esi]
je 0x402eb3
je 0x402f1b
js 0x402f2c
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x402f31
je 0x402f27
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x402f4a
jo 0x402f5e
pop rdi
je 0x402f4e
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402f5c
jns 0x402efd
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x402f78
jns 0x402f09
push 0x63
jb 0x402f0e
jns 0x402f80
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x402f8a
je 0x402f20
je 0x402f86
add byte [rsi], ch
jae 0x402f9d
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x402f34
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 0x4002, 0
add byte [rax], al
add byte [rax], al
enter 2, 0
add byte [rax], al
add byte [rax], al
clc
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rax + rax*2], 0
add byte [rax], al
add byte [rax], al
rol byte [rax + rax], 0
add byte [rax], al
add byte [rax], al
rol dword [rdx], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x4007], al
add byte [rax], al
add byte [rdx + 7], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4007], dh
add byte [rax], al
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4008], dl
add byte [rax], al
add byte [rax + 8], dl
add byte [rax], al
add byte [rax + 1], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x19000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
clc
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
and byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
and byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
xor byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, byte [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x600000001000000], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rcx + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x19], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x19], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cwde
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
cwde
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
loopne 0x4033eb
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov word [rcx], es
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rbx + 0x40], ch
add byte [rax], al
add byte [rax], al
add byte [rbx + rbx], ch
add byte [rax], al
add byte [rax], al
add byte [rip], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
call 0x403472
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], dl
add byte [rax], al
add byte [rax + 0x20], dl
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
test al, 0x20
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x1000001
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], ch
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x29], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rax + rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
