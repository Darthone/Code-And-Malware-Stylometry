call 0x4011c0
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x400fd8
add ebx, ebx
je 0x400f8e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x400fc6
cmp rbp, -4
ja 0x400fc6
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x400fae
add ecx, 4
mov dl, byte [rax]
je 0x400fd6
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x400fc6
ret
cld
pop r11
cmp r8b, 2
je 0x400fee
jmp 0x40106b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x400ffe
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x400fe6
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401016
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401003
sub eax, 3
jb 0x401034
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40106b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x40105b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401059
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401048
cmp rbp, -0xd00
adc ecx, eax
call 0x400f9a
jmp 0x400fee
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401144
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x4010e2
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40112e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401101
push 0x3a707474
jne 0x40115a
js 0x40111a
jae 0x401154
outsb dx, byte cs:[rsi]
je 0x401113
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x401181
jb 0x401173
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x40119e
jb 0x4011b1
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x211e69
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x211e69
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x40107c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4011a7
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401155
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f124f
jb 0x401267
movsxd rbp, dword [rdi]
jae 0x401261
insb byte [rdi], dx
js 0x401267
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401247
cmp rsi, rcx
jae 0x40124f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x40122e
cmp al, 0x8f
ja 0x40122e
cmp byte [rsi - 2], 0xf
je 0x401234
sub al, 0xe8
jg 0x401231
push rdi
cmp al, 1
ja 0x40121c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40121f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x40124c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4012a3
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1721
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x4012e7
mov al, 0xa
jmp 0x4012e7
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4012c3
inc ebx
mov al, 0
jmp 0x4012eb
mov al, 2
jmp 0x4012eb
mov al, 3
jmp 0x4012eb
mov al, 0x3c
jmp 0x4012eb
push rcx
rcr ah, 1
fstp st(7)
jle 0x40132c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40133e
jg 0x401330
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6ab3
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x40138a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6507
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x401392
cmp esi, 0x21585055
jne 0x401396
jge 0x401388
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x40138b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x40138f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40143b
pop rcx
or al, 0x3b
jb 0x401441
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4013b3
jmp 0x4013b5
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x36612f6
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5353e
in eax, dx
jg 0x4013ed
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401433
mov bh, 0x2a
add edi, 0x10
jmp 0x401430
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40146d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4014a9
jne 0x4014c0
fstpnce st(6), st(0)
jle 0x401489
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4014bf
jrcxz 0x4014f3
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b457
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401572
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401532
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295b07
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4015a5
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40153f
and ecx, 7
or al, 0xeb
jae 0x4015aa
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x4015df
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40161d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x4015d6
push rax
call 0xffffffff868d12c3
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x4015e0
std
cmp edi, esi
xchg eax, edi
jle 0x401635
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95bc1
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401633
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401621
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40164a
js 0x40168a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40171c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2957
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40173d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401742
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc211f4
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4016d0
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
add al, byte [rax]
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
mov ecx, dword [rdx]
nop
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1690ff04], al
add byte [rax], al
cmp al, 7
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4017f6
je 0x4017ff
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x4017c8
mov dh, 0x7d
jbe 0x4017c7
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401800
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c800
and byte [rdi + 0x4c00006], bl
add byte [rdx - 0x6fd837f9], al
invd
add byte [rax + 0x8600009], dh
in al, 0x13
enter 0xa07, 0
nop
or eax, dword [rax]
clc
or ebx, ecx
add edx, esi
add ecx, dword [rax + rax]
and byte [rdx], cl
or eax, 0x1f204f0b
and byte [rsi], cl
add byte [rax], dh
add byte [rdi], dh
nop
seto byte [rcx]
adc byte [rax], al
adc dword [rax], eax
nop
nop
cwde
adc al, byte [rax]
loopne 0x401825
add byte [rax], al
fsubr dword [rbx + rbx - 0x11]
adc al, 0
call 0xffffffff9f60783e
ror dl, 0x15
add byte [rax], al
mov dl, 0x4d
and byte [rdi], bl
add byte [rax], cl
sbb byte [rdi + 0x1f], al
retf
add dword [rcx], ebx
and byte [rdi], dl
sbb al, byte [rax]
nop
and byte [r15 + 0x20], r9b
sbb eax, dword [rax]
rcr byte [rsi + rcx*4], 0xe4
fst qword [rbx + rdx + 0x41701]
int1
dec dword [rcx*2 + 0x1bc595c3]
mov edi, 0x10029719
and al, 0x83
fmul dword [rax + rax*2]
sbb edx, dword [rax - 0x28]
nop
or al, 0x32
nop
pop rdi
cmp edi, ecx
sbb eax, dword [rax]
shl byte [rcx], 1
add dword [rdi], edx
push rbx
nop
or al, 0x76
and eax, 0xb0477a4f
ret 0x84ae
enter -0x687a, -0x5b
xlatb
sbb ebp, dword [rbx + 0x268f0b47]
cmp byte [rdi - 0x70], spl
mov esp, 0x642e1fe4
sbb ebx, ecx
push -0x3de426e5
xchg byte [rax], dl
add byte [rdi - 0x1b], al
add eax, 0x1195d884
lahf
clc
neg dword [r11 + 0xeaec612]
cwde
adc al, 0x1f
sbb edi, ebp
xchg eax, esp
xor byte [rdi], al
xor al, byte [rcx]
outsd dx, dword [rsi]
and cl, 0x5e
mov cl, 2
pop rdx
cmp ebp, dword [rdi]
sahf
ficom word [rbp + 0x6600d535]
sbb esp, esp
leave
ror dword [rsi + 2], 0x17
mov ch, 2
loopne 0x4018ed
nop
scasb al, byte [rdi]
sbb esp, ebp
sub ch, byte [rdi]
jbe 0x4018fb
pop rdi
movabs al, byte [0x192079086419a401]
ret 0xb086
mov byte [rdi], dl
pushfq
mov al, 0x90
mov bl, 0x27
loopne 0x40190e
fmul qword [rbx]
mov edx, 0x86456576
jo 0x401943
je 0x401953
fcom dword [rax]
stc
sub bh, 0x11
in al, 0x60
xor dword [rdi - 0x2c], 4
sbb byte [rdx], al
and dword [rbx - 0x50], ebp
or esi, dword [rdx]
nop
imul ebx
pop rsp
pop rcx
test byte [rdi + 0x7f], dl
pop rdi
jae 0x4018f9
or eax, 0x5f2d9321
xchg eax, ebp
add dl, dl
xor byte [rdi + rax*2 - 0x4ef2051], al
xchg ah, ah
in al, dx
mov edx, 0xbce0bf00
ja 0x40194e
xchg eax, ebx
xchg dword [rax + rbp*4 - 0x38], esp
add al, al
and byte [rbx + 0x32], al
enter 0x10c9, 1
fistp word [rax + 0x3b3906ec]
sbb byte [rdi], cl
rcr byte [rax], 0xbf
cld
push rbx
neg byte [rip - 0x58fca6be]
sbb esi, dword [rdi + 0x65]
and al, 0x67
mov al, 3
add dword [rbx], 0xecf2dcbf
adc byte [rsi], dh
sub dword [rdi], 0x1a
add dword [rdi - 0x18], ebx
and ecx, edi
and dword [rdi], edx
fsubr dword [rdi]
add al, 0x8f
sbb al, byte [rdi + 0x72]
ret 0x3629
add al, 0xc7
add al, 0x32
test byte [rbp + 0x60], bl
outsd dx, dword [rsi]
rcr dword [rcx], -0x7c
retf
and bh, dl
jbe 0x4019c8
test byte [rbx + 0x37112570], 0xa
scasd eax, dword [rdi]
fdivr st(7)
ljmp [rbp + 0x21]
or dword [rbx + 0x72], esp
je 0x401a2e
je 0x401a32
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
mov edi, 0x5ff97fb5
push r11
push rsp
add byte [rbp + 0x72], ah
imul ebx, dword gs:[edx], 0x6d745f06
pop rdi
movsxd rdi, dword [rdi + 0x6cfbbdbd]
outsd dx, dword [rsi]
outsb dx, byte [rsi]
jae 0x401a09
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x401a55
jg 0x4019f4
in eax, dx
jne 0x401a75
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x401a6e
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x17243538
cli
fistp dword [rdi + 0x5f]
imul bp, word [rsi + 0x69], 0x7208
jb 0x401a79
jns 0x401a79
add eax, 0xbee67972
fstp qword [rdx + 9]
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x401a5e
or eax, 0x37584db
pop rdi
sub dword [rdx + rbp + 0x41], esi
pushfq
jo 0x4019f4
sal dh, 1
mov bh, 0x70
and al, 0x47
sub r14, qword [rbx + 0x48]
pop rdi
and byte [r15 - 0x11], sil
neg byte [rbx + 0x10]
pop rdx
push rbx
je 0x401a9f
cmp byte [rdi], cl
imul ebp, dword [rdi + 0x31], 0x41524644
jl 0x401a36
int3
std
pop r15
mov edi, 0x4e470bcc
push rbp
std
movzx ecx, byte fs:[rax + 0x20]
push rdx
push rbx
mov r8b, 9
jnp 0x401a3e
out dx, eax
push rsp
sub byte [r11 + 0x64], r15b
adc byte [rsi], ch
ja 0x401a39
mov al, 0xc
pop cx
imul byte [rdi]
jle 0x401acd
xor byte [rax + rbp*2 + 0x72], dh
outsd dx, dword [rsi]
ja 0x401b01
insb byte [rdi], dx
or esi, edi
in eax, dx
mov bh, 0xd6
xor al, 0x29
int1
push rax
movsxd rax, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rax - 0x7b]
ja 0x401a43
in al, 0x46
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7615b945
sbb eax, dword [rdi + rax - 0x4b]
adc spl, byte [rdi + 0x6d]
push rbx
cld
and ah, bh
wait
push rbx
movabs byte [0x616c4370525f764a], al
jae 0x401b54
sti
psubusw mm7, qword [rdi]
insd dword [rdi], dx
pop rdx
insb byte [rdi], dx
push rax
jbe 0x401b35
pop rdx
xor eax, 0x766c6f73
jbe 0x401b35
cmp al, 0xd8
in eax, dx
mov dh, 0x70
jb 0x401b47
je 0x401b64
push rbp
push 0x325f236b
movabs eax, dword cs:[0x82781538994e9db0]
and eax, 0x47b777b0
xor al, 0x49
rol dword [rbx + 0x31], 0x45
jbe 0x401aae
pop r11
sahf
jg 0x401b8f
add r12d, eax
mov dh, 0xf6
movsxd rdi, dword [rax + 0x61]
test dword [rbp - 0x39e6c388], 0x5dcae4af
push r12
pop r15
push rdi
clc
movsxd rbx, dword [rbx + 0xc]
push rsp
sbb edi, dword es:[rdi + 0x4f5d6ed0]
jbe 0x401bb5
jno 0x401bb2
jne 0x401b94
jae 0x401bbb
outsb dx, byte [rsi]
pop bx
cmp eax, 0x7704543b
or byte [rbx - 0x6d], bl
mov dword [rdi + 0x1b], ebx
loop 0x401b91
mov ebx, 0x348c30d1
mov byte [rbp + 0x74], dh
in eax, 0x4b
js 0x401b55
test dword [rsi + rbp + 0x5f], esp
push -0x7ac39b9f
movabs rcx, 0xcd6eca157a333019
xor eax, 0x7e6c74da
adc al, 0x8f
push rsi
movsxd rsi, dword [r14 + 0x15eda382]
xor dword [rbx + 0x33], esp
clc
cmc
jae 0x401bc1
mov dh, 0xeb
ficom word [rax]
push r10
adc esi, dword [rbx]
out dx, eax
imul esp, dword [rbx + 0x2d], 0xb685da49
jne 0x401bec
xor byte [rbx + rdx*2 + 0x3f], bh
in eax, dx
push rbx
xor ebx, dword [rcx - 0x4e]
ja 0x401b86
ja 0x401bf4
cmp dword [rdx - 0x3c], ebp
test al, 0xd8
or al, byte [rdi + 0x6b63075d]
test eax, 0xed6c52ff
loope 0x401bbd
push r8
xor al, 0
jo 0x401c59
ja 0x401be4
mov dh, 0xb9
fnstenv [rcx]
xor ah, byte [rbp + 0x64]
mov fs, word [rdi - 0x75]
mov ss, edx
ret 0x53ef
nop
cmp dword [rdi + 0x21], ebx
adc al, 0xa3
xchg eax, ecx
mov ebp, 0x6d458eb0
insd dword [rdi], dx
jge 0x401c35
xor dword [rsi + rdx*2 + 0x6a], edx
sub byte [rbp + rbp*2 + 0x42], bl
cmc
xchg dword [r14 + 0x6d], r10d
pop rbx
add eax, 0x57bc7f65
pop rdi
push -0x5b
test eax, 0xe599db7d
xchg eax, esi
scasb al, byte [rdi]
pop rbp
sbb esi, dword [rsi + 0x30]
sub esp, dword [rdi]
cwde
xor ecx, eax
mov cl, 0xbd
xor eax, 0x6e552084
ja 0x401ca1
shr byte fs:[rax + rdx*4 + 0x75], cl
mov ebx, 0x4346d752
xor byte [rsi + 0x5ccd6bd9], dl
cmp byte [rdx + 0x2a], ch
xchg eax, ebp
xchg eax, ecx
insd dword [rdi], dx
ja 0x401c45
movabs rdx, 0xd3362976d79731e
cmp ebx, ecx
je 0x401cd2
push -0x49c3dcf7
jne 0x401c32
insd dword [rdi], dx
jo 0x401c71
outsb dx, byte [rsi]
outsd dx, dword [rsi]
lahf
sub eax, 0xd60d6715
js 0x401c56
packuswb mm5, qword [rsi + 0x75]
jne 0x401c0c
sub eax, 0x990d8769
jnp 0x401cf0
sub eax, 0x6409387d
jns 0x401cfa
mov al, 0xd6
popfq
mov ch, 0x45
sbb dword [rsi - 0x14], esi
imul ebp, ebp, 0x86a57b0c
wait
pop rdi
sbb ecx, dword [rbx]
lodsd eax, dword [rsi]
sub byte [rcx], cl
out 0x78, eax
or eax, dword [rax + rcx]
je 0x401d1c
pop rbp
or cl, byte [rsi - 0x32]
in al, 0xb6
sub al, 0x6f
or byte [rbp + rax - 8], al
lodsb al, byte [rsi]
call 0x2e808be2
push 0x726468f2
jp 0x401cf1
je 0x401c93
or eax, 0x2e0f635d
movsxd rsp, dword [rbp + 0x70]
fnstenv [rdx - 0x426ba8a4]
insb byte [rdi], dx
adc dword [rax - 0x1fa9d2bd], eax
mov al, 0xb
push -0x47
movabs eax, dword [0x6800420b7b366336]
jnp 0x401d4a
jnp 0x401d5a
imul eax, dword [rsi], -0x66
add al, 0x97
push rdx
std
add byte [rax], al
or dword [rip + 0x1970035], edi
scasd eax, dword [rdi]
cmp dword [rbx + 0x33], edi
xchg dword [rdi], eax
sbb al, 0xa4
sbb dword [rdx + 0x7230121], edx
nop
push rsp
push rsp
and byte [rsi + 0x4864864], al
xor dword [rcx + 0x64], esi
nop
je 0x401d45
or al, 0x72
enter 0x44bb, 0x7f
idiv bh
ljmp [rdi - 0x68]
cwde
xor cl, al
and byte [rbx - 0x27f7fad0], al
xor byte [rbx + rax*2], 0x4e
or ecx, eax
xor cl, al
clc
add ebx, edi
and eax, 0x3f9320cd
sbb byte [rsi + 3], dl
cmp al, 0xe1
rol dword [rdx], 0x60
ja 0x401ceb
pop rsi
mov edi, 0x7b3921ff
xchg eax, ebx
ja 0x401d6a
mov edi, 0x1ba4062a
mov dl, 2
imul edi, dword [rdi], -2
mov al, 0x19
in al, 0xcc
cmpsd dword [rsi], dword ptr [rdi]
mov al, 6
xchg eax, esi
je 0x401dcd
jp 0x401dcd
add al, 0x8b
test byte [rdi], dh
or edi, eax
or al, 0x32
fsub dword [rcx - 1]
test byte [rdi], bh
nop
mov ecx, 0x908320e4
push 0x6411901
add byte [rsi + 0x9c90613], cl
outsd dx, dword [rsi]
fild word [rdi]
lcall [rdx]
mov bl, 0x20
mov dword fs:[r15], edi
and dword [rbx + 0x70077040], edi
adc byte [rdi], al
xor byte [rsi], al
cmp dword [rdx + 0xb0b3f94], esi
or al, 0xd9
xchg eax, ecx
sub eax, 0x303f9d0f
or esp, esp
cdq
wait
jg 0x401dcf
mov bl, 0xa
leave
movabs dword [0x9ff077b3928697f], eax
test eax, 0xb06419bf
and dword [rax + 0x3f], eax
push rbp
xchg byte [r8 + rbp - 0x4f], spl
cwde
xchg eax, edx
movabs eax, dword [0x3704f2bf44989064]
sbb eax, esp
mov word [rcx], es
test byte [rax], cl
fld dword [rbp - 0x37]
push rdi
xchg byte [rdx + 0x7f07dcb3], dl
cmp eax, 0xa4c066db
jmp 0xffffffffdf432c21
xchg eax, esp
pushfq
mov edi, 0x823fe710
wait
or al, 0x48
psubb mm0, qword [rdi]
inc ecx
mov dl, 0x73
add ebx, esi
rol byte [rip + 0x1ed724d8], cl
clc
wait
pop rcx
outsb dx, byte [rsi]
pop rbx
jg 0x401e7d
insb byte [rdi], dx
leave
jg 0x401e52
xor cl, al
mov dh, 0x90
cwde
mov edi, 0x39211f1f
enter 0x845, 1
add dword [rsp + rbx*4 + 0x20d7561d], edx
nop
out 0x26, al
xor cl, byte [r10]
nop
jmp qword [rax]
fst qword [rax + 0x72]
sbb byte [rax], dl
or byte [rax - 0x3fcdf37d], dl
test al, 0x28
add dword [rax + rsi*4 + 0x21], ebp
mov ecx, 0x307f1520
sbb byte [rdi + 0x3f343f85], al
cmp byte [rbp - 0x4d], ah
ret
adc dword [rbx], edi
int 0x58
and al, 0xcf
jg 0x401eaf
add dword [rbx - 0x6a14c364], edi
add al, ah
and bh, bh
jo 0x401ea5
fadd dword [r8]
sal byte [rdx], cl
or dword [rdi + 0x50], edi
add byte [rsi], dl
leave
xchg eax, ebx
sub esi, eax
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or edi, edi
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x22f7fdea], ecx
jae 0x401e83
mov cl, 0xc7
mov es, word [rbp - 0x70]
add byte [rax], al
cmp al, 7
add byte [rax], al
cmp byte [rdi], dh
add byte [rax], al
add byte [r8], al
add eax, 0xf4
