call 0x400e90
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x400ca8
add ebx, ebx
je 0x400c5e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x400c96
cmp rbp, -4
ja 0x400c96
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x400c7e
add ecx, 4
mov dl, byte [rax]
je 0x400ca6
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x400c96
ret
cld
pop r11
cmp r8b, 2
je 0x400cbe
jmp 0x400d3b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x400cce
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x400cb6
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x400ce6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x400cd3
sub eax, 3
jb 0x400d04
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x400d3b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x400d2b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x400d29
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x400d18
cmp rbp, -0xd00
adc ecx, eax
call 0x400c6a
jmp 0x400cbe
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x400e14
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x400db2
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x400dfe
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x400dd1
push 0x3a707474
jne 0x400e2a
js 0x400dea
jae 0x400e24
outsb dx, byte cs:[rsi]
je 0x400de3
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x400e51
jb 0x400e43
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x400e6e
jb 0x400e81
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x2118e4
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x2118e4
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x400d4c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x400e77
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x400e25
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f0f1f
jb 0x400f37
movsxd rbp, dword [rdi]
jae 0x400f31
insb byte [rdi], dx
js 0x400f37
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x400f17
cmp rsi, rcx
jae 0x400f1f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x400efe
cmp al, 0x8f
ja 0x400efe
cmp byte [rsi - 2], 0xf
je 0x400f04
sub al, 0xe8
jg 0x400f01
push rdi
cmp al, 1
ja 0x400eec
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x400eef
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x400f1c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x400f73
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c13f1
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x400fb7
mov al, 0xa
jmp 0x400fb7
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x400f93
inc ebx
mov al, 0
jmp 0x400fbb
mov al, 2
jmp 0x400fbb
mov al, 3
jmp 0x400fbb
mov al, 0x3c
jmp 0x400fbb
push rcx
rcr ah, 1
fstp st(7)
jle 0x400ffc
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40100e
jg 0x401000
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6783
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x40105a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb61d7
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x401062
cmp esi, 0x21585055
jne 0x401066
jge 0x401058
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x40105b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x40105f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40110b
pop rcx
or al, 0x3b
jb 0x401111
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401083
jmp 0x401085
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3660fc6
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5320e
in eax, dx
jg 0x4010bd
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401103
mov bh, 0x2a
add edi, 0x10
jmp 0x401100
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40113d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401179
jne 0x401190
fstpnce st(6), st(0)
jle 0x401159
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x40118f
jrcxz 0x4011c3
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b127
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401242
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401202
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x582957d7
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x401275
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40120f
and ecx, 7
or al, 0xeb
jae 0x40127a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x4012af
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x4012ed
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x4012a6
push rax
call 0xffffffff868d0f93
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x4012b0
std
cmp edi, esi
xchg eax, edi
jle 0x401305
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95891
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401303
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x4012f1
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40131a
js 0x40135a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x4013ec
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2627
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40140d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401412
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc20ec4
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4013a0
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
mov word [rdi], es
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + 0x20], al
movabs al, byte [0x92]
and byte [rcx], al
call qword [rax]
sbb byte [rax], al
add byte [rbx], ch
or byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4014c6
je 0x4014cf
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401498
mov dh, 0x7d
jbe 0x401497
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x4014d0
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x4100006], bl
add byte [rax], ah
add eax, 0xf902790
or byte [rax], al
or dword [rax], eax
nop
enter -0x6fd9, 0x27
or al, byte [rax]
test al, 0xb
add byte [rax - 0x37ec1bfa], al
or al, 0
movabs al, byte [0x3e409f20740000d]
add byte [rax + 0xf], dl
add byte [rdx + rdx], al
add al, 0xf2
add dword [rax], edx
add byte [rax], dl
adc dword [rax], eax
pop rax
inc byte [rax]
stc
add al, 0x12
add byte [rax], ah
adc edx, dword [rbx]
add al, bh
sbb eax, 0x1f201f60
adc al, 0
or byte [rsi], bl
adc eax, 0x204d1000
and byte [r14], r10b
add byte [rax], bl
fild dword [rcx]
mov dl, 0x5f
sbb byte [rax], al
and byte [rdi + 0x20], cl
sbb dword [rax], eax
sbb al, byte [rax]
and ah, 0xdd
xchg eax, esp
sbb r10, qword [r11]
add dword [rdi], edx
add al, 0
int1
inc ebx
xchg eax, ebp
mov cs, word [rbx + rbx]
mov edi, 0x2f7c7f19
and al, 0x4d
add al, byte [rax + 0xbc01759]
cmp eax, ecx
nop
add byte cs:[rax], cl
xor bl, al
mov cl, 0x44
pop rdi
cmpsd dword [rsi], dword ptr [rdi]
add dword [rdi], edx
push rbx
mov al, 0x2b
and dword [rdi + 0x7a], ecx
and byte [r14 + 0x25], r14b
xchg byte [rsi + 0x4dd7a597], r8b
cmp cl, dh
adc byte [rbx - 0x1bd1e7f1], ch
xchg eax, ebx
ja 0x401520
mov ah, 0x54
sbb edx, dword [rdx - 0x15e6d03f]
sbb al, byte [rsi]
sbb dword [rax + rcx*2 - 9], esp
sbb al, 4
sbb esp, dword [rax + rdx*4 + 0x41]
jmp qword [rax]
or bh, dl
nop
mov bl, 0x27
or dword [rcx], eax
dec byte [rsi]
and eax, 0x39641c9c
cmp al, 0xf
adc eax, 0x71bd84af
add qword [r15 + 0x17401668], r14
add byte [rbp - 0x78a231d0], 0x47
mov cl, 0x2b
sub dword [rsi + 0x69], esi
enter 0x7c17, 0x47
and eax, 0x87195d8c
xchg eax, edx
adc ebp, dword [rdi + 0x366129b1]
movabs dword [0x195ee18047b69717], eax
jmp qword [rsi - 0x2130a5fd]
xchg eax, ebp
xor eax, 0xd52fbf37
add bl, dl
ror dword [rsi + 0x3e], 0x57
adc al, byte [rdx]
stosb byte [rdi], al
add esp, dword [rcx + rbx + 0x2a1fb2ec]
jrcxz 0x4015fc
xchg dword [rax + 0x617f201], esi
add dh, byte [rdi + 0x72]
mov dl, 0x59
pop rsi
sbb byte [rdx], al
and bl, byte [rax + 0xf]
adc dword [rbx + 0x3c0e4f27], esi
add bl, byte [rbx]
or dword [rsi + 0x1b062f05], ebx
nop
sti
movabs r15, 0x7760af45657610dd
je 0x401640
fdiv dword [r13 + 0x17]
adc dword [rdi - 0x131bde60], esi
and byte [rdi], dh
adc al, 0x34
pushfq
sbb esp, dword [rax + rsi*4 - 0x45]
mov dl, 0x49
loop 0x401614
xchg eax, ebx
push 0x3b
add eax, 0xd9394703
mov ebp, 0x2f171f0b
or byte [rdi - 0x7a], al
lodsb al, byte [rsi]
adc byte [rdi], al
cmpsb byte [rsi], byte ptr [rdi]
add cl, ch
and byte [r8 + 0x11], r13b
insb byte [rdi], dx
or byte [rbx], bl
xchg eax, edx
adc byte [rdi + 0x77], dh
mov al, byte [rdi + 7]
nop
mov fs, word [rcx]
movsb byte [rdi], byte ptr [rsi]
adc byte [rcx + 0x20d83203], dh
xlatb
jl 0x40169a
ror eax, cl
or dword [rcx + rdx*2], 6
xlatb
sti
or dword [rip - 0x58b773ce], 3
add al, 2
mov al, 0x21
fstp dword [rdi + 0x70]
movhps qword [rax + 0x72], xmm5
jbe 0x4016b4
xchg byte [rax - 0x61], cl
or byte [rdi + 0x46], r14b
and byte [rdi + 0x4f], ah
sbb al, 4
push rdi
adc dword [rdi], edx
or dword [rdx + rsi], 0xffffffc8
and di, word [rcx - 0x7d]
or eax, 0x901234d2
xlatb
mov ebx, ecx
pop rbp
enter 0x493, -0x43
adc cl, ch
xchg eax, ebp
adc byte [rsi - 0x67], cl
cmpsd dword [rsi], dword ptr [rdi]
cmc
add al, 0x4f
adc dword [rip + 0x6720c839], eax
sahf
add esp, esp
in al, dx
test dword [rax + rdi*4], edi
push rsp
pop rax
add eax, 0x3c944877
sbb dword [rbx + 0x77], ebx
add eax, 0xf2720e19
in al, dx
jle 0x4016e0
xlatb
movabs dword [0x4f2760ce05bc1a10], eax
mov ecx, 0x83a7450e
hlt
add ebp, dword [rdi]
movsxd rsi, dword [rdx + 0x74]
jae 0x401760
in ax, dx
mov bh, 0xf6
jmp qword [rbx]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
or dword [rax + 0x67657265], esi
imul ebx, dword [rdx], 0x6ffeef6f
pop rdi
je 0x401784
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401740
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
fistp qword [rsi - 5]
outsd dx, dword [rsi]
or dword [rdi + rbp*2 + 0x72], esi
jae 0x401790
jne 0x4017ac
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x4017a5
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0xd817f6fe
cmp byte [rip + 0x69665f24], dh
outsb dx, byte [rsi]
imul ecx, dword [rax], 0x79617272
pop rdi
outsd dx, dword gs:[rsi]
mov bh, 0xc2
test ebp, ebx
jb 0x4017d2
xchg eax, ecx
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
fld qword [rax + 0xd3279b9]
pop rdi
sub dword [rdx + rbp - 0xa], esi
in eax, dx
pushfq
jo 0x4017e4
and al, 0x5a
push rbx
je 0x4017c5
xor dword [rcx], edi
jo 0x4017e6
movsxd rsp, dword gs:[rbp + 0x77]
cdq
cmp edi, ebx
mov dh, 0xb5
sub eax, 0x729f6e77
jne 0x4017f0
je 0x4017a9
cmp byte [rbp + 0x6e], al
insd dword [rdi], dx
mov al, 0x77
imul ebp, dword [rdi + 0x3b], 0x847f3329
movsxd rsp, dword [rcx + 0x6e]
sti
pop rcx
out 0x81, eax
adc al, 0x36
imul esp, dword [rdi + 0x6e], 0xb50c650f
fucom st(6)
sti
xor r9, qword [rcx + 0x4e]
xor eax, 0x34094c4c
xor dword [rax - 0x47], eax
fcmovnu st(0), st(0)
lodsd eax, dword [rsi]
imul esp, dword [rbx - 0x7f], 0x7a693e69
or eax, 0xaddb66fe
outsb dx, byte ds:[rsi]
imul ecx, dword gs:[rdi], 0x30
imul ebp, dword [rcx - 0x25], 0x2fdfdc8d
xor r13b, byte [rsi + 0x5a06495f]
sti
out dx, eax
mov dh, 0x32
xor al, 0x76
enter 0x5246, 0x41
pop r15
or r10b, byte [rax + 7]
pop rbx
sahf
insb byte [rdi], dx
or eax, dword [rdi + 0x4e]
push rbp
and byte [rax + 0x44], cl
out dx, eax
jle 0x4017c1
push rdx
push rbx
jae 0x40186c
sub r11b, r13b
jmp qword [rax + rdx - 0x60]
jb 0x401807
sti
mov dh, 0x71
mov ebx, 0x454e5944
jb 0x40184f
je 0x40189c
jbe 0x4018a4
jg 0x401887
pop r15
xor ch, byte [rsi]
add dword [rdi - 0x48], edi
ret
movsxd rbx, dword [rax - 0x6797ba25]
je 0x40185f
insd dword [edi], dx
mov ah, 0x39
ret
cmpps xmm7, xmmword [rdi + 0x5f764a88], 0x52
fiadd dword [rbx + 0x6c]
jae 0x4018d6
xlatb
or cl, byte [rdi]
pop rcx
movsxd rsi, dword [rax + 0x75]
add al, 0x44
pop rdx
scasb al, byte [rdi]
and ecx, dword [rcx]
movsd dword [rdi], dword ptr [rsi]
jo 0x40187f
insb byte [rdi], dx
xor edi, dword [rbx + 0x7f]
mov bh, 0xfb
imul rax, qword [r13 + 0x35], 0x456e3d62
in al, dx
pop rdx
xor eax, 0x766c6f73
or dword gs:[rbx], ebp
imul eax, dword [rbp + 0x6c346d0b], 0x6f
push r8
sbb bl, byte [rcx]
retf
mov dl, 0xf6
sti
jbe 0x4018f3
xor dword [rbx + 0x4b], esp
push rsp
xor byte [rdi + 0x59], bl
movsxd rbp, dword [rax + 0x78]
pop rsp
sbb cl, byte [rbp + 0x382f96c2]
sbb qword [r11], rsp
pop rax
fcmovnu st(0), st(5)
jle 0x4018ee
movsxd rax, dword [r11 + 0x31]
and al, 0x58
pop rax
pop rdi
xor ebx, ecx
mov al, 6
movsd dword [rdi], dword ptr [rsi]
imul ecx, eax, 0x646db6b8
in eax, dx
insd dword [rdi], dx
jae 0x401919
xor r10d, dword [rsi]
js 0x4018b4
xor bh, ah
xchg eax, edx
jo 0x40188a
push rbx
add byte [rbp - 0x37], 0x2e
cmp al, 0xf7
and byte [rbx + rsi*2], dh
or eax, 0x61782cc8
lodsb al, byte [rsi]
sub eax, 0x78106014
and ah, byte [rbx + 0x33]
insb byte [rdi], dx
sub dword [rcx - 0x4e28f74e], edi
imul r11d, dword [rbx - 0x2e], 0x4d54061b
pop rdi
or al, 0x43
xor eax, 0xfa575d6e
push rsp
sbb al, 0x1b
enter 0x4b64, 0x5f
jne 0x4018ad
mov al, 0xb1
sar byte [rdi], 1
sal dword [rbx - 0x69], cl
outsb dx, byte [rsi]
mov dh, 0x6c
insd dword [rdi], dx
cmp dword [rbp - 0x64abc4c3], 0xc838eb61
xor ebp, dword [rip - 0x248454bb]
insd dword [rdi], dx
sbb byte [rcx], bh
rep outsb dx, byte [rsi]
jne 0x401916
js 0x401978
or dword [rdi + 0x70], ebp
jae 0x401976
push rsi
push -0x35bbb8d9
out dx, eax
or dword [rsi + 0x272c719b], eax
xor esp, dword [rsi - 0x4d]
insd dword [rdi], dx
movsd dword [rdi], dword ptr [rsi]
out dx, eax
cmp dword [rsi], ebp
rcr byte fs:[rdi + 0x68], cl
ja 0x40195a
cld
xchg bh, dh
fidiv dword [rcx]
xor byte [rax + 0x4cddf739], bl
xor byte [rbp + 0x45], al
sub al, 0x66
sbb byte [rbx], ch
outsb dx, byte [rsi]
cmovne esp, dword [rax - 0x70]
outsd dx, dword [rsi]
sbb eax, 0x6a5b613
outsb dx, byte [rsi]
movsxd rbx, dword [rcx]
cmp al, 0xc7
in eax, dx
imul edx, dword [rbx + 0x34], 0xe9624566
movsd dword [rdi], dword ptr ss:[rsi]
ret 0x94c3
movsb byte [rdi], byte ptr [rsi]
mov bl, 0xc1
mov dword [rbx], r14d
or eax, 0xc5468c58
xor dword [rdx - 0x48118c24], ebx
or al, 0x2c
pop r8
jae 0x401a25
xchg eax, edi
adc dh, dh
jbe 0x4019a6
xchg byte [rcx + 0x5f], ah
ret
jb 0x401a08
push rcx
xchg eax, ebp
pop rdi
jbe 0x401a0b
mov ebx, 0x750cd86b
rol byte [rbp - 0x12], 1
je 0x401a47
jo 0x4019d9
mov byte [rax], dl
pop rsp
out 0x4c, eax
cmp byte [rdi + 0x6f], dh
mov eax, dword [rbx - 0x27]
fdiv dword [rsi + 0x6b63075f]
pop rcx
push 0x6c576603
cmp edx, ecx
imul byte [rsi]
xor al, 0x87
pop rbx
xor ebx, dword [rax - 0x6b]
jge 0x4019a2
lodsd eax, dword [rsi]
jb 0x401a66
insd dword [rdi], dx
cmp dword [rdx - 0x3a091db2], 0x6d4537de
xor eax, 0x3146de02
ret 0x42fb
and dword [rdx], esi
add dl, dl
sub eax, 0x25cdb0c1
pop rdi
add byte [rdx - 0x26], ah
mov dh, 0x6c
lodsb al, byte [rsi]
clc
fisttp qword [rsi + 0x13]
xchg eax, r10d
popfq
fsubp st(4)
cmc
int3
fld dword [rdx + rdx + 0x4e]
jbe 0x401a0c
pop rbp
or dword [rbx + 0x79], esi
insd dword [rdi], dx
je 0x401aad
push -0x3c945235
or dword [rsi], ebx
xor esi, dword [rax + 7]
outsb dx, byte [rsi]
outsd dx, dword [rsi]
ja 0x401a0b
mov dh, 0x5b
pop rbp
sub rax, -0x34f298eb
jne 0x401a82
sbb ch, byte [rdi - 6]
sub eax, 0xf40d8d69
cmp byte [rbp + rcx*8 + 0x64095bdc], ch
jns 0x401ad8
sbb dword [r15], r14d
scasb al, byte [rdi]
in eax, dx
jbe 0x401ab8
jae 0x401a6c
or al, 0x5f
sbb ecx, dword [rax]
test byte [rdx], 0xd
lodsb al, byte [rsi]
jp 0x401aa8
or dword [rbp - 0x31], ebp
add esi, dword ss:[rdx + rsi*2 - 0x35]
or ch, byte [rdi + rbp*2]
mov ebp, 0x5208c99c
add eax, 0xf36f2486
xchg eax, esi
cmp eax, 0x652e3c08
push 0x726468ed
or eax, 0xcd66cd87
cmp ah, ch
xor dword [rbx], ecx
push 0x16
push -0x705df94f
and al, 0x99
add byte [rbx + rax*8], dh
insb byte [rdi], dx
not byte [rsi + 0x69]
add al, 1
rcr byte [rsi], 0x1c
and byte [rdx], 0
or edx, dword [rsi + 0xb1babd1]
test dword [rdi + 0x19], 0x737b392
sbb al, 1
and dword [rbx], esp
push rsp
sbb dword [rax + 4], edx
sbb dword [rax + rcx*2 - 0x7a], esp
xor dword [rsp + rsi*2 - 0x44], esi
sbb dword [rdx + 6], ecx
and al, 0x44
idiv bh
ljmp [rdi + 0xd]
leave
and byte [rdi + 0x48059898], al
xor esp, dword [rbx + rax*4]
jg 0x401b0a
or r13, rsp
and byte [rbx - 0x3fc03ff3], al
push rax
add ebx, edi
or al, 0x32
ftst
sbb byte [rsi - 0x22], dl
test byte [rax - 0x2e], bl
add ecx, dword [rdi]
je 0x401b36
leave
adc edi, dword [rdi]
lidt [rsi - 0x41]
push qword [rbx + 0x37962137]
mov edi, 0x921b21ba
sbb al, 2
imul edi, dword [rdi], -2
fistp word [rcx]
mov edi, 0xd8030800
and eax, 0x537aff02
xor byte [rdi], dh
cmp dword [rdi + rdi], ebp
nop
out 0xb0, eax
sub ebx, dword [rbx - 0x7b00c050]
sbb dword [rdx + rax*2 - 0x58], esp
test al, 0x61
add byte [rcx], bl
nop
fcomp dword [rax]
mov ss, word [rbx]
outsd dx, dword [rsi]
scasd eax, dword [rdi]
leave
or edi, edi
sbb cl, byte [rcx + 0x6e67243f]
xor ah, byte [rax + 0x22a02f07]
adc byte ss:[rdi], al
xchg eax, esp
mov dh, 0xc0
jo 0x401bbd
movd mm6, dword [rdx]
popfq
push rax
xchg dword [rip - 0x4d809870], ebp
or bh, byte [rdi]
movabs dword [0x21ff07c724201373], eax
imul ebp, dword [rax], 0xbfa90939
and eax, 0xff566f67
mov edi, 0x90d83248
or eax, 0x7f583fb1
pop rax
xor dl, byte [rsp + r9 + 0x49bfc4]
and ebp, edi
scasd eax, dword [rdi]
sub al, 0x58
sbb eax, 0xbbc97f64
cmp dword es:[rax + 0x7e73049], edi
xchg eax, esi
xor al, 0x17
fnstcw word [rdi]
lar eax, word [rdi + rsi - 0x40f8c0f5]
or al, 0x32
ftst
loope 0x401c2d
adc byte [rax], dl
add edx, edx
or eax, 0x67fe681
sbb byte [rcx], bh
cmp eax, ecx
and byte [rax], bl
loopne 0x401c00
test byte [rax + rdx*4 + 0x21], ah
adc byte [rax + 0x526e645b], bl
mov bh, 7
jg 0x401c15
and dword [rax + rcx*8 + 0xe], eax
out dx, eax
push rdi
and al, 0x43
leave
fldenv [rax]
clc
add eax, 0x60326e08
jg 0x401c3e
mov dl, 0xd9
adc edi, dword [rdi]
xor byte [rax - 0x38], 0x60
and dword [rdi], eax
cmp byte [rdi + rcx], dh
mov dl, 0x1d
loop 0x401c3c
xor byte [rcx + 0x2f], ah
ret
sub eax, dword ds:[rdi]
loopne 0x401c08
pop rax
adc dword ss:[rbx - 0x29], edi
wait
adc dword [rdx + 0x4e], ecx
jg 0x401c5e
mov ebx, 0x5b279300
sub dword [rdi + 0x8094820], edi
sbb eax, dword [rax - 0x66]
or dword [rdi - 0x40], edi
and bh, byte [rcx + 0x72]
sub ecx, eax
add eax, 0
add byte [rax], al
and byte [rcx], al
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x7f7fdea], ecx
jno 0x401cc8
movabs eax, dword [0x2b00001810862eca]
or byte [rax], al
add byte [rax + 0x49000038], al
add byte [rax], al
hlt
add byte [rax], al
add bh, bh
