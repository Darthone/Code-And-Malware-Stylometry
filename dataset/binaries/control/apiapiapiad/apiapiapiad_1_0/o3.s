xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x60209f
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400a80
mov eax, 0
test rax, rax
je 0x400a80
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400ac8
mov eax, 0
test rax, rax
je 0x400ac8
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x2015c9], 0
jne 0x400aea
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x2015b6], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400b00
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400afb
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
mov rax, rdi
movabs r9, 0x89705f3112a28fe5
imul r9
mov rax, rdi
sar rax, 0x3f
lea rcx, [rdx + rdi]
sar rcx, 0x1d
sub rcx, rax
imul rcx, rcx, 0x3b9aca07
sub rdi, rcx
test rsi, rsi
js 0x400bcd
je 0x400bc5
mov rcx, rdi
mov r8d, 1
nop dword [rax]
mov rdi, rcx
imul rdi, r8
mov rax, rdi
imul r9
mov rax, rdi
sar rax, 0x3f
add rdx, rdi
sar rdx, 0x1d
sub rdx, rax
imul rdx, rdx, 0x3b9aca07
sub rdi, rdx
test sil, 1
cmovne r8, rdi
mov rdi, rcx
imul rdi, rcx
mov rax, rdi
imul r9
mov rax, rdi
sar rax, 0x3f
lea rcx, [rdx + rdi]
sar rcx, 0x1d
sub rcx, rax
imul rcx, rcx, 0x3b9aca07
sub rdi, rcx
sar rsi, 1
mov rcx, rdi
jne 0x400b60
mov rax, r8
ret
mov r8d, 1
jmp 0x400bc1
sub rsp, 8
mov ecx, str.ll_powmod_ll__ll_
mov edx, 0x17
mov esi, str.sorted_code_control_apiapiapiad_apiapiapiad_1_0_B.cpp
mov edi, str.b__0
call sym.imp.__assert_fail
nop word [rax + rax]
push r15
push r14
mov r14d, edx
push r13
push r12
movsxd r13, esi
push rbp
push rbx
mov rbp, r13
mov rbx, rdi
mov r12d, ecx
sub rsp, 0x28
mov qword [rdi], 0
mov qword [rdi + 8], 0
mov rax, qword fs:[0x28]
mov qword [rsp + 0x18], rax
xor eax, eax
test r13, r13
mov qword [rdi + 0x10], 0
je 0x400f20
movabs rax, 0x3fffffffffffffff
cmp r13, rax
ja 0x400f32
shl r13, 2
mov rdi, r13
call sym.operatornew
lea rcx, [rax + r13]
mov qword [rbx], rax
mov rdx, r13
xor esi, esi
mov rdi, rax
mov r15, rax
mov qword [rbx + 0x10], rcx
mov qword [rsp + 8], rcx
call sym.imp.memset
mov rcx, qword [rsp + 8]
test r14d, r14d
mov qword [rbx + 8], rcx
jle 0x400d93
xor r13d, r13d
mov rdi, rcx
nop dword [rax]
mov r9, rdi
sub r9, r15
sar r9, 2
test ebp, ebp
mov r10d, r9d
je 0x400d28
test r9d, r9d
mov rsi, r15
mov ecx, 1
jg 0x400ccc
jmp 0x400d0d
nop dword [rax + rax]
add rsi, 4
add ecx, 1
cmp r8d, r10d
jge 0x400d0d
mov eax, dword [rsi]
mov r8d, ecx
test eax, eax
jne 0x400cc0
xor edx, edx
mov eax, ecx
div r9
mov r11d, dword [r15 + rdx*4]
test r11d, r11d
jne 0x400cc0
add rsi, 4
cmp qword [rbx + 0x10], rdi
mov dword [rsp + 0x14], 1
je 0x400d00
cmp rsi, rdi
je 0x400e69
lea rdx, [rsp + 0x14]
mov rdi, rbx
call sym.std::vector_int_std::allocator_int__::_M_insert_aux_int_
sub ebp, 1
add r13d, 1
cmp r14d, r13d
je 0x400d93
mov r15, qword [rbx]
mov rdi, qword [rbx + 8]
jmp 0x400c98
nop dword [rax]
test r9d, r9d
jle 0x400d10
mov rsi, r15
mov ecx, 1
jmp 0x400d4c
nop word [rax + rax]
add rsi, 4
add ecx, 1
cmp r10d, r8d
jle 0x400d10
cmp dword [rsi], 1
mov r8d, ecx
je 0x400d40
xor edx, edx
mov eax, ecx
div r9
cmp dword [r15 + rdx*4], 1
je 0x400d40
add rsi, 4
cmp qword [rbx + 0x10], rdi
mov dword [rsp + 0x14], 1
je 0x400d7d
cmp rsi, rdi
je 0x400e51
lea rdx, [rsp + 0x14]
mov rdi, rbx
call sym.std::vector_int_std::allocator_int__::_M_insert_aux_int_
add r13d, 1
cmp r14d, r13d
jne 0x400d19
xor r13d, r13d
test r12d, r12d
jle 0x400e2b
nop
mov r10, qword [rbx + 8]
mov r11, qword [rbx]
mov r8, r10
sub r8, r11
sar r8, 2
test ebp, ebp
mov r9d, r8d
je 0x400e88
test r8d, r8d
mov rsi, r11
mov ecx, 1
jg 0x400ddc
jmp 0x400e1b
nop dword [rax + rax]
add rsi, 4
add ecx, 1
cmp r9d, edi
jle 0x400e1b
mov edx, dword [rsi]
mov edi, ecx
test edx, edx
jne 0x400dd0
xor edx, edx
mov eax, ecx
div r8
mov eax, dword [r11 + rdx*4]
test eax, eax
jne 0x400dd0
add rsi, 4
cmp qword [rbx + 0x10], r10
mov dword [rsp + 0x14], 2
je 0x400e0e
cmp rsi, r10
je 0x400eee
lea rdx, [rsp + 0x14]
mov rdi, rbx
call sym.std::vector_int_std::allocator_int__::_M_insert_aux_int_
sub ebp, 1
add r13d, 1
cmp r12d, r13d
jne 0x400da0
mov rax, rbx
mov rbx, qword [rsp + 0x18]
xor rbx, qword fs:[0x28]
jne 0x400f37
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
test rdi, rdi
je 0x400e5c
mov dword [rdi], 1
add rdi, 4
mov qword [rbx + 8], rdi
jmp 0x400d10
test rdi, rdi
je 0x400e74
mov dword [rdi], 1
add rdi, 4
mov qword [rbx + 8], rdi
jmp 0x400d0d
nop dword [rax]
test r8d, r8d
jle 0x400e1e
mov rsi, r11
mov ecx, 1
jmp 0x400eb0
nop word [rax + rax]
add rsi, 4
add ecx, 1
cmp r9d, edi
jle 0x400e1e
cmp dword [rsi], 2
mov edi, ecx
je 0x400ea0
xor edx, edx
mov eax, ecx
div r8
cmp dword [r11 + rdx*4], 2
je 0x400ea0
add rsi, 4
cmp qword [rbx + 0x10], r10
mov dword [rsp + 0x14], 2
je 0x400edc
cmp rsi, r10
je 0x400f07
lea rdx, [rsp + 0x14]
mov rdi, rbx
call sym.std::vector_int_std::allocator_int__::_M_insert_aux_int_
jmp 0x400e1e
test r10, r10
je 0x400efa
mov dword [r10], 2
add r10, 4
mov qword [rbx + 8], r10
jmp 0x400e1b
test r10, r10
je 0x400f13
mov dword [r10], 2
add r10, 4
mov qword [rbx + 8], r10
jmp 0x400e1e
mov qword [rdi + 0x10], 0
xor r15d, r15d
xor ecx, ecx
jmp 0x400c81
call sym.std::__throw_bad_alloc
call sym.imp.__stack_chk_fail
mov rdi, qword [rbx]
mov rbp, rax
test rdi, rdi
je 0x400f4c
call sym.operatordelete
mov rdi, rbp
call sym.imp._Unwind_Resume
nop
nop word cs:[rax + rax]
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x28
mov edx, dword [rip + 0x201190]
mov rax, qword fs:[0x28]
mov qword [rsp + 0x18], rax
xor eax, eax
mov eax, dword [rip + 0x201172]
cmp edx, eax
jg 0x400ff0
mov esi, dword [rip + 0x201174]
mov ecx, dword [rip + 0x201166]
cmp esi, ecx
jg 0x400ff0
mov r8d, dword [rip + 0x201167]
mov edi, dword [rip + 0x20114d]
cmp r8d, edi
jg 0x400ff0
test eax, eax
jle 0x401015
cmp edx, eax
jne 0x401015
or ecx, esi
or ecx, r8d
or ecx, edi
jne 0x400ff0
xor ebx, ebx
xor eax, eax
mov esi, 0x4015b5
mov edi, 1
call sym.imp.__printf_chk
add ebx, 1
cmp dword [rip + 0x20111f], ebx
jg 0x400fc3
mov eax, 1
jmp 0x400ff2
nop word cs:[rax + rax]
xor eax, eax
mov rcx, qword [rsp + 0x18]
xor rcx, qword fs:[0x28]
jne 0x401339
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
test ecx, ecx
jle 0x40104a
cmp esi, ecx
jne 0x40104a
or eax, edx
or eax, r8d
or eax, edi
jne 0x400ff0
test esi, esi
jle 0x400fdf
xor ebx, ebx
xor eax, eax
mov esi, 0x4015b8
mov edi, 1
call sym.imp.__printf_chk
add ebx, 1
cmp dword [rip + 0x2010c2], ebx
jg 0x40102c
jmp 0x400fdf
cmp r8d, edi
jne 0x401090
test edi, edi
jle 0x401090
or eax, edx
or eax, esi
or eax, ecx
jne 0x400ff0
test r8d, r8d
jle 0x400fdf
xor ebx, ebx
xor eax, eax
mov esi, 0x4015bb
mov edi, 1
call sym.imp.__printf_chk
add ebx, 1
cmp dword [rip + 0x20108c], ebx
jg 0x401066
jmp 0x400fdf
nop word [rax + rax]
sub ecx, esi
sub eax, edx
sub edi, r8d
lea edx, [rcx + rax]
lea esi, [rcx + rcx]
mov dword [rip + 0x201055], edi
mov dword [rip + 0x201057], ecx
mov dword [rip + 0x20104d], eax
add edx, edi
cmp edx, esi
jl 0x400ff0
lea esi, [rax + rax]
cmp edx, esi
jl 0x400ff0
lea esi, [rdi + rdi]
cmp edx, esi
jl 0x400ff0
cmp ecx, eax
mov dword [rip + 0x200fe9], ecx
mov dword [rip + 0x200fe7], eax
mov dword [rip + 0x200fe5], edi
mov byte [rip + 0x200ffe], 0x52
mov byte [rip + 0x200ff8], 0x59
mov byte [rip + 0x200ff2], 0x42
jge 0x401114
mov dword [rip + 0x200fc0], eax
mov dword [rip + 0x200fbe], ecx
mov byte [rip + 0x200fdb], 0x59
mov byte [rip + 0x200fd5], 0x52
mov eax, dword [rip + 0x200fa6]
cmp edi, eax
jle 0x401144
movzx edx, byte [rip + 0x200fc5]
mov dword [rip + 0x200f9d], eax
movzx eax, byte [rip + 0x200fb6]
mov dword [rip + 0x200f88], edi
mov byte [rip + 0x200faa], dl
mov byte [rip + 0x200fa6], al
mov edx, dword [rip + 0x200f7a]
mov ecx, dword [rip + 0x200f78]
cmp ecx, edx
jle 0x401181
mov eax, edx
movzx esi, byte [rip + 0x200f8d]
mov dword [rip + 0x200f65], edx
movzx edx, byte [rip + 0x200f7f]
mov dword [rip + 0x200f54], ecx
mov byte [rip + 0x200f72], sil
mov byte [rip + 0x200f6d], dl
mov edx, ecx
mov ecx, eax
mov esi, dword [rip + 0x200f39]
mov rdi, rsp
call sym.construct
mov eax, dword [rip + 0x200f73]
mov edx, dword [rip + 0x200f69]
mov ecx, dword [rip + 0x200f6b]
mov rdi, qword [rsp]
test eax, eax
mov rax, qword [rsp + 8]
sete r14b
test edx, edx
sete r15b
test ecx, ecx
sete r13b
sub rax, rdi
sar rax, 2
test eax, eax
jle 0x401301
xor ebp, ebp
nop dword [rax]
movsxd rax, dword [rdi + rbp*4]
lea r12, [rbp*4]
cmp byte [rax + obj.s], 0x52
jne 0x401226
test r14b, r14b
jne 0x401226
mov r8d, dword [rip + 0x200f17]
test r8d, r8d
jle 0x40132e
xor ebx, ebx
nop dword [rax]
mov esi, 0x4015b8
mov edi, 1
xor eax, eax
call sym.imp.__printf_chk
add ebx, 1
cmp dword [rip + 0x200eee], ebx
jg 0x401200
mov rdi, qword [rsp]
mov r14d, 1
movsxd rax, dword [rdi + r12]
movsx edx, byte [rax + obj.s]
cmp dl, 0x59
jne 0x401281
test r15b, r15b
jne 0x401281
mov edi, dword [rip + 0x200ec3]
test edi, edi
jle 0x401321
xor ebx, ebx
nop dword [rax + rax]
mov esi, 0x4015b5
mov edi, 1
xor eax, eax
call sym.imp.__printf_chk
add ebx, 1
cmp dword [rip + 0x200e9a], ebx
jg 0x401250
mov rax, qword [rsp]
mov r15d, 1
movsxd rax, dword [rax + r12]
movsx edx, byte [rax + obj.s]
cmp dl, 0x42
jne 0x4012d1
test r13b, r13b
jne 0x4012d1
mov esi, dword [rip + 0x200e7b]
test esi, esi
jle 0x401314
xor ebx, ebx
nop word [rax + rax]
mov esi, 0x4015bb
mov edi, 1
xor eax, eax
call sym.imp.__printf_chk
add ebx, 1
cmp dword [rip + 0x200e52], ebx
jg 0x4012a0
mov rax, qword [rsp]
mov r13d, 1
movsxd rax, dword [rax + r12]
movsx edx, byte [rax + obj.s]
mov esi, 0x4015be
mov edi, 1
xor eax, eax
call sym.imp.__printf_chk
mov rdi, qword [rsp]
mov rax, qword [rsp + 8]
lea edx, [rbp + 1]
add rbp, 1
sub rax, rdi
sar rax, 2
cmp edx, eax
jl 0x4011d0
test rdi, rdi
je 0x400fdf
call sym.operatordelete
jmp 0x400fdf
mov edx, 0x42
mov r13d, 1
jmp 0x4012d1
mov r15d, 1
mov edx, 0x59
jmp 0x4012d1
mov r14d, 1
jmp 0x401226
call sym.imp.__stack_chk_fail
mov rdi, qword [rsp]
mov rbx, rax
test rdi, rdi
je 0x40134f
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
nop word [rax + rax]
push r15
push r14
mov r14, rdi
push r13
push r12
mov r12, rdx
push rbp
push rbx
mov rbp, rsi
sub rsp, 0x18
mov rdi, qword [rdi + 8]
cmp rdi, qword [r14 + 0x10]
je 0x4013c0
mov eax, dword [rdi - 4]
lea rdx, [rdi - 4]
sub rdx, rsi
mov dword [rdi], eax
lea rax, [rdi + 4]
mov qword [r14 + 8], rax
mov rax, rdx
sar rax, 2
test rax, rax
je 0x4013a9
sub rdi, rdx
call sym.imp.memmove
mov eax, dword [r12]
mov dword [rbp], eax
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
mov r15, qword [r14]
mov rax, rdi
mov rbx, rdi
sub rax, r15
sar rax, 2
test rax, rax
je 0x401470
lea r13, [rax + rax]
cmp rax, r13
jbe 0x4014c8
mov rdx, rbp
mov r13, -4
sub rdx, r15
mov rdi, r13
mov qword [rsp + 8], rdx
call sym.operatornew
mov r15, qword [r14]
mov rbx, qword [r14 + 8]
mov r8, rbp
mov rdx, qword [rsp + 8]
mov rcx, rax
add r13, rax
sub r8, r15
add rdx, rcx
mov eax, dword [r12]
je 0x401423
mov dword [rdx], eax
mov rax, r8
sar rax, 2
test rax, rax
jne 0x4014a8
sub rbx, rbp
lea r8, [rcx + r8 + 4]
mov rax, rbx
sar rax, 2
test rax, rax
jne 0x401488
add rbx, r8
test r15, r15
je 0x40145d
mov rdi, r15
mov qword [rsp + 8], rcx
call sym.operatordelete
mov rcx, qword [rsp + 8]
mov qword [r14], rcx
mov qword [r14 + 8], rbx
mov qword [r14 + 0x10], r13
jmp 0x4013b0
nop dword [rax]
mov rdx, rsi
mov r13d, 1
sub rdx, r15
shl r13, 2
jmp 0x4013f3
nop dword [rax]
mov rdi, r8
mov rdx, rbx
mov rsi, rbp
mov qword [rsp + 8], rcx
call sym.imp.memcpy
mov rcx, qword [rsp + 8]
mov r8, rax
jmp 0x401443
nop dword [rax]
mov rdx, r8
mov rdi, rcx
mov rsi, r15
mov qword [rsp + 8], r8
call sym.imp.memmove
mov r8, qword [rsp + 8]
mov rcx, rax
jmp 0x40142f
movabs rax, 0x3fffffffffffffff
cmp r13, rax
ja 0x4013e6
mov rdx, rsi
sub rdx, r15
test r13, r13
jne 0x40147c
mov r8, rdx
xor ecx, ecx
jmp 0x401418
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x2008ee]
push rbp
lea rbp, [rip + 0x2008ee]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401546
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401530
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
jae 0x4015e9
jb str.ll_powmod_ll__ll_
pop rdi
movsxd rbp, dword [rdi + 0x64]
movsxd rbp, dword [rdi + 0x6e]
je 0x4015fb
outsd dx, dword [rsi]
insb byte [rdi], dx
jo 0x4015f8
jo 0x4015fb
jo 0x4015fe
jo loc.__GNU_EH_FRAME_HDR
jo 0x401607
jo 0x40160a
pop rdi
xor dword [rdi + 0x30], ebx
movsxd rsi, dword cs:[rax + 0x70]
add byte [rax], al
add byte [rdx + 0x3e], ah
cmp eax, 0x56590030
add byte [rdx + 0x47], dl
add byte [rdx + 0x4f], al
add byte [rip + 0x64250063], ah
and eax, 0x25642564
and eax, 0x25642564
add byte fs:[rbx + 0x61], al
jae 0x401637
and byte [rbx], ah
and eax, 0x203a64
push r8
push r11
push rbx
add byte [r8], r8b
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsp + rbp*2 + 0x20], ch
insb byte [rdi], dx
insb byte [rdi], dx
and byte [rax + 0x6f], dh
ja 0x401664
outsd dx, dword [rsi]
sub byte fs:[rsp + rbp*2 + 0x2c], ch
and byte [rsp + rbp*2 + 0x29], ch
add byte [rax], al
add byte [rax], al
add dword [rbx], ebx
add edi, dword [rbx]
push rax
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rdx + rsi*8 - 1], cl
lcall [rax + rax - 0xcb40000]
in al, dx
add dword [rax], eax
add byte [rsp + rsi*8], bl
ljmp [rax + rax]
add byte [rsi*8 + 0xc4ffff], bl
add byte [rax], al
in al, dx
cmc
dec dword [rcx + rax]
add byte [rcx + rdi*8 - 1], bl
lcall [rcx + rax - 0x2a40000]
fadd qword [rax]
add byte [rax], al
in al, dx
call qword [rdx + rax]
add byte [rax], al
pop rsp
lcall [rdx + rax]
add byte [rax + rax], dl
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401677
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
test al, 0xf3
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4016a7
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
test al, 0xf1
push rax
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rax - 0xc], dl
dec edx
add byte [rax], al
add byte [rax], al
add dh, byte [rcx + 0x100e]
add byte [rax + rax], cl
add byte [rax + rax], bl
add byte [rax - 4], bh
call qword [rax + 1]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx + 0x500e4707], al
jge 0x40171e
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rdx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x401751
add eax, dword [rax]
or dword [rax], eax
add ebx, dword [rbx]
or al, 7
or byte [rax + 0x4c000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
cwde
hlt
jmp qword [rbx + rax]
add byte [rsp + rdi*2], al
sbb byte [rax], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx + 0x600e4d07], al
add edi, dword [rcx]
add cl, byte [rdx]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], r8b
add byte [rax + rax], dh
add byte [rax - 0x8000009], bh
add eax, dword [rax]
add byte [rax + rdx*4], al
sbb byte [rax], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx + 0x600e4407], al
add bl, byte [rdx + rcx + 0xe41380e]
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax + rax], ah
add byte [rax], al
insb byte [rdi], dx
add dword [rax], eax
add byte [rax - 0xf], bl
inc ecx
add byte [rax], al
add byte [rax], al
adc byte [rdx], al
sbb byte [rcx + 0xe], dl
and byte [rdi + 0xe], ch
sbb byte [rcx + 0xe], al
adc byte [rdi + 0xe], ch
or byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx + rax - 0x3300000], dl
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x40185a
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
fadd qword [rcx]
add byte [rax], al
clc
cld
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
adc byte [rdi + 5], ah
add byte [rax], al
cwde
add ah, cl
add ecx, esp
add dl, al
and al, byte [rax]
add bh, bh
inc dword [rcx]
adc dword [rdi - 0x40], ebp
add eax, dword [rax]
add byte [rbp + rax + 0x7de01d6], ch
add dl, dh
add eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
ror byte [rdx], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol dword [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rbp + rdx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
sbb eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sbb eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 0x4004], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
jbe 0x401ed3
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rax
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add dh, bh
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 8], ah
add byte [rax], al
add byte [rax], al
add byte [rsi + 8], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x4008], al
add byte [rax], al
add byte [rsi + 0x4008], dl
add byte [rax], al
add byte [rsi + 0x4008], ah
add byte [rax], al
add byte [rsi + 0x4008], dh
add byte [rax], al
add dh, al
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
out 8, al
add byte [rax], al
add byte [rax], al
add dh, dh
or byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or dword es:[rax], eax
add byte [rax], al
add byte [rax], al
or dword ss:[rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402110
je 0x402119
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x402127
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x402124
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 0x4004], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add dh, bh
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or byte [rax], al
sub byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add al, cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add byte [rax], dh
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, 0
push rax
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or eax, 0x40094000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 9], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rbp + rdx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax + 0x15], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rsi + rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add byte [rax + 0x16], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], dl
add byte [rax + rbx + 0x40], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], dl
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, 0x601df800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
mov byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0xa], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400a], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, dl
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rbx], bl
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add dword [rax], eax
adc eax, 0x601df800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add al, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg byte [rax], al
add byte [rax], al
add dword [rax], eax
adc al, 0
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsd dword [rdi], dword ptr [rsi]
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ch
add byte [rax], dl
add al, dh
adc eax, 0x40
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, cl
add byte [rax], al
add byte [rcx], al
add byte [rdx], dl
add byte [rax + 0x18], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bl
add byte [rax], al
add byte [rcx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
add byte [rax], al
add byte [rax], al
add byte [rcx], dl
add byte [rsi + rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bh
add byte [rax], al
add byte [rcx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rcx], eax
add byte [rax], al
add byte [rax], al
adc al, 0
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, byte [rcx]
add byte [rax], al
add byte [rax], al
adc al, 0
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor eax, 0x1000001
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x20000002], bh
add byte [rdx], bl
add byte [rax + 0x6020], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ch
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
call 0x4085ad
add byte [rax], al
add byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bh
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 1], dl
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x15], ah
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x12000002], bh
add byte [rsi], cl
add byte [rax], ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 1], dh
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rcx], eax
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edi
add dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add byte [rax + 0x13], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 1], dl
add byte [rax], al
add ch, ch
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], bl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsp
add dword [rax], eax
add byte [rdx], dl
add byte [rdi], cl
add byte [rbp + rdx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 2], dl
add byte [rax], al
adc al, byte [rax]
add byte [rax], ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
retf 0
add byte [rax], al
add byte [rax], al
add byte [rcx + 2], ah
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jge 0x4026ec
add byte [rax], al
adc dword [rax], eax
adc byte [rax], al
jo 0x402707
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov word [rdx], es
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
iretd
add al, byte [rax]
add byte [rcx], dl
add byte [rbx], bl
add ah, dh
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
lahf
add al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x10000002], bh
add byte [rdx], bl
add byte [rax + 0x6020], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, al
add al, byte [rax]
add byte [rcx], dl
add bl, byte [rdx]
add byte [rax + 0x6020], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x110000], al
sbb eax, dword [rax]
cld
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0xf], ah
add byte [rax], al
add byte [rax], al
add bh, dh
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add dl, bl
add al, byte [rax]
add byte [rcx], dl
add bl, byte [rdx]
add byte [rax + 0x6020], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add al, dh
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rdx], 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 3
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
cwde
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rbx], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, 3
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
clc
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rcx], dl
add byte [rbx], bl
add byte [rax], dl
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword ss:[rax]
add byte [rcx], dl
add byte [rbx], bl
add byte [rax], al
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd dword [rdx]
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
add al, 0x21
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, 0x10000001
add byte [rbx], bl
add byte [rax], bl
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rbx], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
add eax, dword [rax]
add byte [rax], dl
add byte [rdx], bl
add byte [rax + 0x6020], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 3], ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x12000003], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x22000003], bl
add byte [rsi], cl
add byte [rax + 0x13], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 1], dl
add byte [rax], al
add bh, ch
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add dword [rax], eax
add byte [rcx], dl
add byte [rbx], bl
add byte [rcx], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax + rax]
add byte [rcx], dl
add byte [rbx], bl
add byte [rax], cl
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 4
add byte [rax], al
adc al, byte [rax]
add al, dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add eax, dword fs:[rax]
add byte [rax], al
add byte [rax], al
add byte [rsp + rax], ch
add byte [rax], al
adc al, byte [rax]
add byte [rax + 9], dl
add byte [rax], al
add byte [rax], al
add cl, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dh
add al, byte [rax]
add byte [rdx], dl
add byte [rbx], cl
add byte [rax], dh
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax + rax], eax
add byte [rcx], dl
add byte [rbx], bl
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor eax, dword [rax + rax]
add byte [rcx], dl
add byte [rbx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
sub byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x72], ah
je 0x402a60
je 0x402a64
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402a16
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402a94
jb 0x402a9a
pop rdi
jne 0x402aa3
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402a9d
je 0x402a99
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402ab9
jb 0x402abf
pop rdi
jne 0x402ac8
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402acb
jns 0x402abb
outsb dx, byte gs:[rsi]
je 0x402ad2
jns 0x402a62
jb 0x402ac6
insd dword [rdi], dx
pop rdi
jne 0x402ad8
insd dword [rdi], dx
jns 0x402a6e
pop rdi
pop rdi
jb 0x402ad4
insd dword [rdi], dx
pop rdi
jne 0x402ae6
insd dword [rdi], dx
jns 0x402adb
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402ae6
jns 0x402ae6
outsb dx, byte gs:[rsi]
je 0x402afd
jns 0x402a8d
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x5a], bl
pop rdx
jo 0x402b08
ja 0x402b08
outsd dx, dword [rsi]
js 0x402b17
xor dword [r9], r15d
pop rdi
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402b65
jns 0x402b65
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402b76
jns 0x402b76
jae 0x402b8d
jb 0x402b90
add byte [rdi + 0x44], bl
pop rcx
add byte [r13 + 0x65], bpl
insd dword [rdi], dx
jae 0x402b90
je 0x402b6d
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x6c5f5f00
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x402bc7
jb 0x402bca
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x402bbc
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x402bdd
jae 0x402b6d
jo 0x402be4
je 0x402be4
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x402bbb
jbe 0x402bec
movsxd rsi, dword [rdi + rbp*2 + 0x72]
imul rdx, qword [r11 + 0x61], 0x45456949
xor dword [rbx], esi
pop rdi
pop r15
imul ebp, dword [rsi + 0x73], 0x5f747265
jne 0x402c1a
imul rax, qword [r13 + 0x45], 0x394e7645
pop rdi
pop rdi
outsb dx, byte [esi]
jne 0x402c10
movsxd rdi, dword [rax + 0x78]
xor dword [rdi], esi
pop rdi
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
jb 0x402c29
insb byte [rdi], dx
pop rdi
imul esi, dword [rbp + 0x72], 0x726f7461
push r8
imul edx, dword [rbx + 0x31], 0x4445455f
jo 0x402c21
push rsp
pop rdi
add byte [rdi + 0x5a], bl
insb byte [rdi], dx
push rax
jbe 0x402c1c
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
jae 0x402c61
jb 0x402c65
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x705f5f00
jb 0x402c72
outsb dx, byte [rsi]
je 0x402c72
pop rdi
movsxd rbp, dword [rax + 0x6b]
pop r15
xor ch, byte [rsi]
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x402c9e
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x365a5f00
jo 0x402cb1
ja 0x402cb1
outsd dx, dword [rsi]
js 0x402cc0
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x402cb7
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x402cdf
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x402cf3
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x402d08
pop rdi
jae 0x402d1e
jb 0x402d21
add byte [rdi + 0x5f], bl
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
xor esp, dword [rdi + 0x61]
outsd dx, dword [rsi]
jbe 0x402cc2
pop rdi
pop rdi
jae 0x402d36
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x656d0074
insd dword [rdi], dx
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x402d4b
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x625f5f00
jae 0x402d6c
pop rdi
jae 0x402d70
jb 0x402d73
add byte [rdi + 0x5f], bl
jae 0x402d78
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
add byte [rdx], dh
pop rdi
pop rdx
push rbx
je 0x402d56
pop rdi
pop rdi
je 0x402d92
jb 0x402d9b
ja 0x402d8d
pop rdi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsi, dword [rsi + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
je 0x402dad
add byte [rdi + 0x5f], bl
js 0x402dca
pop rdi
jo 0x402dba
jb 0x402dca
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
outsb dx, byte [rsi]
ja 0x402de0
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402dbd
jbe 0x402dee
movsxd rsi, dword [rdi + rbp*2 + 0x72]
imul rdx, qword [r11 + 0x61], 0x45456949
xor dword [rbx], esi
pop rdi
pop r15
imul ebp, dword [rsi + 0x73], 0x5f747265
jne 0x402e1c
imul rax, qword [rbp + 0x45], 0x394e7645
pop rdi
pop rdi
outsb dx, byte [esi]
jne 0x402e12
movsxd rdi, dword [rax + 0x78]
xor dword [rdi], esi
pop rdi
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
jb 0x402e2b
insb byte [rdi], dx
pop rdi
imul esi, dword [rbp + 0x72], 0x726f7461
push r8
imul edx, dword [rbx + 0x31], 0x4445455f
jo 0x402e23
push rsp
pop rdi
add byte [rdi + 0x55], bl
outsb dx, byte [rsi]
ja 0x402e45
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x402e58
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
insd dword [rdi], dx
insd dword [rdi], dx
movsxd rsi, dword [rax + 0x79]
pop r15
xor ch, byte [rsi]
xor dword [rax + rax], esi
add byte [edi + 0x5a], bl
cmp dword [rbx + 0x6f], esp
outsb dx, byte [rsi]
jae 0x402e80
jb 0x402e83
movsxd rsi, dword [rcx + rbp*2 + 0x69]
imul eax, dword [rax], 0x6e69616d
add byte [rdi], ch
movsxd rbp, dword [rsi + 0x74]
add byte [rax], al
jae 0x402e9c
insd dword [rdi], dx
je 0x402e87
add byte [rsi], ch
jae 0x402e9f
jb 0x402ea1
add byte [rsi], ch
jae 0x402e9b
jae 0x402ea9
jb 0x402eab
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402eac
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402eba
outsb dx, byte cs:[esi]
jne 0x402e88
jne 0x402ec6
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x402e96
push 0x687361
jns 0x402edf
jae 0x402eec
insd dword [rdi], dx
add byte [rsi], ch
jns 0x402ee7
jae 0x402eef
jb 0x402e7d
outsb dx, byte cs:[esi]
jne 0x402eb0
jbe 0x402ee9
jb 0x402ef9
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x402ebd
jbe 0x402ef6
jb 0x402f06
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x402f01
insb byte [rdi], dx
jns 0x402f10
add byte [rsi], ch
jb 0x402f0b
insb byte [rdi], dx
jo 0x402f17
je 0x402ead
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x402ee6
outsd dx, dword [esi]
je 0x402ebc
je 0x402f24
js 0x402f35
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x402f3a
je 0x402f30
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x402f53
jo 0x402f67
pop rdi
je 0x402f57
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402f65
jns 0x402f06
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x402f81
jns 0x402f12
push 0x63
jb 0x402f17
jns 0x402f89
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x402f93
je 0x402f29
je 0x402f8f
add byte [rsi], ch
jae 0x402fa6
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x402f3d
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, cl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rax + rax*2], al
add byte [rax], al
add byte [rax], al
add byte [rax + 4], cl
add byte [rax], al
add byte [rsi + 1], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
add byte [rax], al
add bh, bh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
add eax, 0x40
add byte [rax], al
inc byte [rip]
add byte [rax], al
add byte es:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0x600000000000000]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 0x4006, 0
add byte [rax], al
add byte [rax], al
enter 6, 0
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rax
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rip + 0x19000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], dl
add byte [rax], al
add byte [rax], al
add byte [rax + 8], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 9], al
add byte [rax], al
add byte [rax], al
add byte [rax + 9], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 9], dl
add byte [rax], al
add byte [rax], al
add byte [rax + 9], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc cl, byte [rax + rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + rdx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rbp + rdx], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x15], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0x15], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edx
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + rdx], al
add byte [rax], al
add byte [rax], al
add byte [rsi + rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rsp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x16], bl
add byte [rax], al
add byte [rax], al
add byte [rax + 0x16], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, 2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rbx + 0x40], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rbx], bh
add byte [rax], al
add byte [rax], al
add byte [rcx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
sbb eax, 0x60
add byte [rax], al
sbb eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 0, eax
add byte [rax], al
sldt word [rax]
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], cl
add byte [rax], al
add byte [rax + 0x20], cl
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rax + 0x20], bl
add byte [rax], al
add byte [rax], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x1000001
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], bl
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rcx], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdi], dh
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
