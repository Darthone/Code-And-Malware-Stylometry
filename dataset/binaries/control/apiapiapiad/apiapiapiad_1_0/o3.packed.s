call 0x401120
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x400f38
add ebx, ebx
je 0x400eee
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x400f26
cmp rbp, -4
ja 0x400f26
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x400f0e
add ecx, 4
mov dl, byte [rax]
je 0x400f36
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x400f26
ret
cld
pop r11
cmp r8b, 2
je 0x400f4e
jmp 0x400fcb
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x400f5e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x400f46
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x400f76
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x400f63
sub eax, 3
jb 0x400f94
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x400fcb
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x400fbb
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x400fb9
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x400fa8
cmp rbp, -0xd00
adc ecx, eax
call 0x400efa
jmp 0x400f4e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4010a4
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401042
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40108e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401061
push 0x3a707474
jne 0x4010ba
js 0x40107a
jae 0x4010b4
outsb dx, byte cs:[rsi]
je 0x401073
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4010e1
jb 0x4010d3
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4010fe
jb 0x401111
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x211b4d
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x211b4d
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x400fdc
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x401107
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4010b5
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f11af
jb 0x4011c7
movsxd rbp, dword [rdi]
jae 0x4011c1
insb byte [rdi], dx
js 0x4011c7
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x4011a7
cmp rsi, rcx
jae 0x4011af
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x40118e
cmp al, 0x8f
ja 0x40118e
cmp byte [rsi - 2], 0xf
je 0x401194
sub al, 0xe8
jg 0x401191
push rdi
cmp al, 1
ja 0x40117c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40117f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x4011ac
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401203
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1681
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401247
mov al, 0xa
jmp 0x401247
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401223
inc ebx
mov al, 0
jmp 0x40124b
mov al, 2
jmp 0x40124b
mov al, 3
jmp 0x40124b
mov al, 0x3c
jmp 0x40124b
push rcx
rcr ah, 1
fstp st(7)
jle 0x40128c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40129e
jg 0x401290
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6a13
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4012ea
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6467
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4012f2
cmp esi, 0x21585055
jne 0x4012f6
jge 0x4012e8
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4012eb
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4012ef
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40139b
pop rcx
or al, 0x3b
jb 0x4013a1
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401313
jmp 0x401315
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661256
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5349e
in eax, dx
jg 0x40134d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401393
mov bh, 0x2a
add edi, 0x10
jmp 0x401390
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4013cd
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401409
jne 0x401420
fstpnce st(6), st(0)
jle 0x4013e9
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x40141f
jrcxz 0x401453
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b3b7
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4014d2
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401492
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295a67
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x401505
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40149f
and ecx, 7
or al, 0xeb
jae 0x40150a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x40153f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40157d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401536
push rax
call 0xffffffff868d1223
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401540
std
cmp edi, esi
xchg eax, edi
jle 0x401595
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95b21
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401593
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401581
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x4015aa
js 0x4015ea
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40167c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad28b7
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40169d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x4016a2
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21154
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401630
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
add rax, 0xe0000
add byte [rax], al
add al, byte [rax]
add byte [rax], al
ror byte [rdx], 0x88
nop
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add edi, edi
test al, 0x16
add byte [rax], al
push rbp
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401756
je 0x40175f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401728
mov dh, 0x7d
jbe 0x401727
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401760
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x4880006], bl
add dh, bh
add eax, 0xfc807c8
or byte [rax], al
sub byte [rsi], al
or dword [rax], eax
enter 0x13e4, -0x38
adc ecx, dword [rdx]
add al, ah
or eax, dword [rax]
xor byte [rax], cl
test byte [rcx], 0xe4
add ecx, dword [rax + rax]
push rax
or eax, 0x2f094000
lahf
ror dl, 1
verr word [rbp + rdx + 0x4f]
and byte [rdi], bl
and byte [rax], dl
add byte [rax + 0x11], dh
add byte [rdi], al
nop
seto byte [rsi]
adc al, byte [rax]
pop rax
adc eax, dword [rax]
add dl, dh
enter 0x187c, 0x14
add al, dh
sbb eax, 0x4f90060
adc eax, 0x16f800
add byte [rsi], bl
cmp byte [rdx + rax - 7], 0x17
add byte [rax], cl
sbb byte [rax], al
clc
jle 0x4017b4
add byte [rax], al
and byte [rdx], bl
add byte [rax - 0x61bf64d7], cl
sbb eax, dword [rax]
movabs al, byte [0x1701bbc91d8b131c]
add al, 0
int1
dec dword [rbx + rbx]
mov edi, 0x2b869f61
sbb dword [rdi + 0x17400a02], edx
enter 0xc90, 0x32
sbb edx, dword [rax + 0x4362cb2e]
xor dl, al
pop rdi
cmpsd dword [rsi], dword ptr [rdi]
push rdi
mov al, 1
push rbx
jp 0x401762
or al, 0xc9
lock xchg byte [rcx - 0x5a68b514], bl
xlatb
stosd dword [rdi], eax
or dword [r11 + 0x12f02774], eax
test byte [rcx], ah
movabs dword [0x86c41fdc0f78253b], eax
mov al, 0x21
add byte [rdi - 0x18], al
add eax, 0x6576212b
xchg ebx, edi
fbld tbyte [r14 + 0x43]
sar byte [rbp - 0x7286fef], cl
and dl, byte [rdi]
scasd eax, dword [rdi]
ja 0x4017e2
out dx, eax
xor eax, 0xbb574701
add bl, byte [rbx]
sbb eax, eax
jo 0x40187e
sub al, 0x8d
sbb edx, dword [rdi + 0x58320e1d]
or bh, byte [rsi]
add dword [rbx], edx
sbb ebx, esi
xchg eax, ebp
add byte [rdx + 0x17], dl
jg 0x40189b
adc eax, 0xe4f27602
mov edi, 0x2a0a2002
fadd dword [r8]
ror byte [rdx], cl
and byte [rcx + 0x17], dh
ror dword [rcx], cl
test dword [r15 - 0x69], esi
and ah, byte [rcx]
in al, 0xec
leave
adc edx, dword [rax + 0xeed2f01]
and dword [rdi], edx
fadd dword [rcx]
add dl, byte [rdi]
sbb al, 0x5c
add dword [rbx - 0x28], eax
xchg eax, ebp
jne 0x4018bf
push rbp
xor ecx, eax
fldenv [rcx - 0x11]
or ebp, dword [rdi]
retf 0x6061
xor eax, 0x7d204803
adc dword [rdi + 0x360c8438], edx
add al, 0x5f
mov edi, cs
add ah, byte [rcx - 0x6d]
xchg rax, rdi
hlt
lahf
pop rdi
xor byte [rsp + rcx], 0xb9
fist word [rax]
mov byte [rdi + 0x39], 0x3b
and al, 0xdb
add dl, byte [rdi]
cwde
test byte [rax], al
pop rdi
cld
jnp 0x40191e
mov al, 0x21
rcl bh, cl
test dword [rbx], 0x6486c47
cmp edx, ebx
nop
out 0x2f, eax
and dword [rbx + 0x14f01d9c], eax
xlatb
neg eax
sub ebx, edi
or al, 3
cmpsd dword [rsi], dword ptr [rdi]
sbb ecx, dword [rdi + 0x1d2f0318]
xchg eax, edx
mov bl, 0x17
xor al, 3
cmpsd dword [rsi], dword ptr [rdi]
clc
add al, 0x72
sahf
adc byte [rcx], ah
add eax, dword ss:[rax]
sbb eax, 0xd8439392
add al, byte [rbx + 0x42e42101]
sahf
sbb byte [rcx], ah
cmp byte [rsi], cl
cdq
xchg eax, edx
mov cl, 0x5e
mov edi, 0xe309651a
adc byte [rsi], dl
mov dl, 0x97
cdq
add ecx, edi
fsub dword [rcx]
in al, dx
add ch, bh
add al, 0x17
sbb byte [rdx + 0x10f17b3], dl
xlatb
adc al, 0x1a
ret
sbb edx, dword [rdx + 0x1c081f41]
scasd eax, dword [rdi]
in al, 0xec
leave
or esp, dword [rbx + rax + 0x17]
sub al, 0x22
xor cl, byte [rax]
xchg eax, ebx
rol edi, -0xf
and dword [rcx], ebx
in al, dx
xor dword [rdi + 0xc], ebx
jbe 0x4019b2
mov al, 0x33
shl byte [rax], 0x28
xor byte [rbx + 0x72], ah
je 0x401900
jg 0x4018ef
jae 0x40198c
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
or edi, esi
jg 0x4019ce
mov edi, 0x65726580
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401998
fstp xword [rdi + 0x7b]
jnp 0x4019e0
outsd dx, dword [rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x4019e8
jne 0x401a04
outsd dx, dword [rsi]
mov edi, 0x6df6fec0
jo 0x401a01
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bp, word [rsi - 0x49], 0xf42f
mov bh, 0x69
or byte [rdx + 0x72], dh
jns 0x401a0c
lodsd eax, dword gs:[rsi]
jb 0x401a2a
add byte [rsi + 0xa], ah
insd dword [rdi], dx
fld qword gs:[rax + 0x75206fb9]
insd dword [rdi], dx
insd dword [rdi], dx
jns 0x4019f2
or eax, 0xff74295f
in eax, dx
sub al, byte [rdx - 0x64]
jo 0x401a3d
and al, 0x5a
pop rdx
jo 0x401a42
ja 0x401a42
outsd dx, dword [rsi]
fdiv st(7), st(0)
mov edi, 0x787864fd
xor dword [r9], r15d
xor edx, dword [rax + 0x52]
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
mov spl, 0xc9
fdivp st(3)
fild word [rdx]
push rdx
pop r15
or eax, 0x7b7f0bcf
mov al, 0xe5
push rbp
and byte [rax + 0x44], cl
push rdx
adc al, byte [rdi + 0x4c]
or qword [rbx + 0x7f], r15
sti
pop rdi
push rbx
pop rdi
push rsp
sub byte [r14 - 0x49], r15b
lodsd eax, dword [rsi]
mov al, 0xb0
adc byte fs:[rdi], cl
je 0x401a43
pop rcx
fild qword [rsi - 0x49]
mov bh, 0x4e
add byte [r10 + 0x40f8736d], sil
pop r15
mov cl, 0xb
fidiv dword [rdx]
add esi, edi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0xf3757331
outsd dx, dword [rsi]
mov dh, 0x75
packuswb mm6, qword [rdx + 0x4a88396e]
jbe 0x401ac3
push rdx
push rsi
fdiv st(0)
sbb dword [rcx + 0x43], 0x6c
jae 0x401ae2
push rsi
jo 0x401ae7
add dword [rbx + rbx*8 + 0x1b], -2
pop r10
push rbx
je 0x401ab3
jbe 0x401ae4
movsxd rdi, dword [rdi]
imul rdx, qword [r11 + 0x61], 0x5c1a4503
jae 0x401afa
xor ebx, dword [rdi + 0x4d]
mov esi, dword [rax]
push r9
sub rax, 0x13ff75bf
jbe 0x401aea
cmp dword [rax + 0x6e], esp
imul esp, dword [rbx + 0x78], 0x78
xor dword [rdi], esi
outsb dx, byte [rsi]
insd dword [rdi], dx
pop rdi
xlatb
mov al, 0x2f
insd dword [rdi], dx
ja 0x401b17
pop rbp
cmp edx, dword [rax + 0x3c]
xor dword [rdi], eax
jnp 0x401a8e
mov esi, 0x704445f6
loope 0x401b14
insb byte [rdi], dx
push rax
jbe 0x401b2d
pop rax
pop rax
mov ebp, 0x5fd4ae7b
xor esp, dword [rdi]
sahf
adc dword [rdx + 0x66], 0x61
imul ebp, dword [rdx + rsi*4 - 0x25], 0x70c991ed
jb 0x401b4b
je 0x401b44
pop rbx
push 0x66d6196b
mov cl, 0xd9
xor al, 0xe3
shr dword [rdi + 0x24], cl
fst qword [rdx - 0x57424dd0]
or ecx, dword [rcx + 0x54]
cld
mov cl, 0x2d
movabs dword [0x6261544a430c4cb5], eax
outsd dx, dword [rsi]
mov bh, 0xae
imul esi, dword [rcx], 0x1b
pop rdi
jne 0x401a8f
add byte fs:[rbx + 5], dh
test byte [rdx - 0xe], 0x63
outsb dx, byte [rsi]
cmp ax, 0x703b
xchg dword [rax + 0x61e054b5], esi
nop
pop rdi
sbb esi, dword [rsi - 0x16bc020f]
pop rdx
xor esp, dword [rdi + 0x61]
outsd dx, dword [rsi]
jbe 0x401b50
jae 0x401ab9
push 0x12c38752
fisub word [rbp + rbp - 0x6c]
int 0xb8
or al, byte [rdi + 0x56]
push 0x62ef5e9e
or dl, byte [rax + 0x51c976f0]
movsxd rbp, dword [rbx - 6]
sbb dword [rsi + 0x28], edi
mov eax, 0x62fdb7
jb 0x401bbe
lahf
outsd dx, dword [rsi]
je 0x401bc5
jb 0x401ae3
insd dword [rdi], dx
loope 0x401b38
jmp 0x46a47c9e
insb byte [rdi], dx
pushfq
movsxd rbx, dword [rdx + rax*2 - 0x1f]
int1
mov fs, word [rbp - 0x5c]
add cl, byte [rcx]
outsb dx, byte [rsi]
mov ah, 0xb6
mov ch, 0xc1
nop
outsb dx, byte [rsi]
jle 0x401bc5
jbe 0x401bb0
pop rbp
loope 0x401b90
xlatb
sub byte [rdx + rsi*2], ah
pop r15
xor dword [rcx + 0x4d], edx
outsb dx, byte [rsi]
add byte [rsi - 0x38], al
or ch, byte [rsi]
cmp al, byte [rcx]
mov dh, 0x76
adc eax, 0x68554a32
movabs eax, dword fs:[0x43fe6d0981382dfb]
insd dword [rdi], dx
xor byte [rdi], cl
fnsave dword [rsi - 0x27]
shl byte [rdx + 0x79], cl
in al, 0x31
and byte [rdi - 0x7e], 0x39
mov dh, 0xd4
fisubr dword [rbp - 0x7f]
jne 0x401b43
imul eax, dword [rax], 0xa51a8e00
psubsb mm0, qword [rax]
outsd dx, dword [rsi]
out dx, al
adc dh, byte [rdi]
mov ebx, 0x6d7973ed
fldenv [rdx + 7]
je 0x401c4a
push -0x291a45f7
mov ch, 0x24
jp 0x401c51
outsb dx, byte [rsi]
outsd dx, dword [rsi]
loope 0x401c14
fadd qword [rip + 0xd6715db]
cmpsb byte [rsi], byte ptr [rdi]
jne 0x401c40
sub eax, 0xc42b5b69
or ch, dh
or eax, 0x6409389f
xchg byte [rbx + 0x6e79dcf7], dh
outsb dx, byte [rsi]
sbb dword [rsi + 0x2e], esi
xor eax, 0x69b584dc
jle 0x401c1f
pop rdi
sbb ecx, dword [rip + 0x2bd82b6f]
xor eax, 0x74790928
jb 0x401bfc
fdivr st(6), st(0)
or al, 0xd3
or ch, byte [rdi + rbp*2]
or byte [rcx + 0x78], ch
add eax, 0x93ba11eb
jge 0x401c56
outsd dx, dword [rsi]
push -0x4d22e59d
push 0x5d0d7264
movsxd rdx, dword [rsi]
and al, 0xd7
adc eax, 0x65632ede
jo 0x401c9e
mov ebp, 0x15ee116c
cmp byte [rsi + rsi*4 + 0x43], ch
or ebp, dword [rdx + 0x2a]
mov bl, 0x57
mov esp, dword [rcx + 0x682b6936]
jnp 0x401cc9
movabs al, byte [0xa7520804395e6639]
push rsi
xchg dword gs:[rip + 0x66faf00], ebx
sub al, 0xa1
add edi, eax
lahf
xor spl, byte [r15 + r12*2]
sbb al, 1
and esi, dword [rdx]
enter 0x3480, 7
push rsp
push rsp
or al, 0xc9
nop
or al, 0x20
add al, 0x31
or al, 0x32
enter 0x7490, 0x74
and al, 0xe
jns 0x401ccd
xchg eax, esp
idiv dil
ljmp [rdi - 0x68]
sbb edx, dword [rdx + 0x7f059841]
or byte [rbx], bl
nop
or r8, rax
leave
fld dword [rcx + 6]
ror al, 1
sti
movsb byte [rdi], byte ptr [rsi]
sbb dword [rdx + rsi*4 + 0x3f], esp
sbb byte [rsi + 3], dl
mov esp, 0x767b049
jbe 0x401cf7
jmp 0x5e41aefe
mov edi, 0x6f6724ff
adc cl, byte [rdi + 0x2c26bf07]
jnp 0x401d20
add al, byte ss:[rdi]
imul ebp, dword [rbx], 0x3f
and byte [rdi + 0x6f], ah
adc dh, byte [rdi + 0x41a0a707]
cwde
mov dl, 0xc9
jp 0x401d46
test dword [rcx - 0x37c09e37], edi
out 0x83, eax
pop rbp
fld dword [rdi + rdi + 0x423f84ff]
xor cl, al
and al, ah
loopne 0x401d5b
add dword [rax], edx
nop
sbb qword [r14 + 0x1166f013], rcx
xchg eax, esp
pushfq
lcall [rdx]
mov dword [rdi], edi
push rax
xor cl, r8b
and byte [rax - 0x10], dl
adc byte [rbx], cl
xchg eax, esp
jg 0x401d97
or ecx, dword [rdi + rsi]
bswap ecx
and byte [rdi + 0x76], al
popfq
jg 0x401d49
or ecx, ecx
or esp, esp
adc cl, byte [rdi + rdi]
movabs dword [0x9ff077f0ab37b39], eax
push rsi
and dword [rcx + 0x28], ebp
test eax, 0x210b5fbf
outsd dx, dword [esi]
call qword [rdx + 0x4840663f]
mov cl, 0x97
fst dword [rax + 0x72]
out 7, al
jg 0x401dc1
mov edi, 0x9b82793f
or al, 0x58
and al, 2
test spl, bpl
and cl, cl
outsd dx, dword [rsi]
leave
pop rcx
outsb dx, byte [rsi]
jg 0x401daf
fist dword [rbx + 0xe74d260]
add ecx, dword [rdi]
jmp 0x7b85dc2
mov edi, 0x80f3fe7
nop
add eax, edi
clc
leave
outsd dx, dword gs:[rsi]
xchg eax, ebx
mov dh, 0xa4
or esi, dword [rax - 0x6407c0e2]
xchg eax, edx
mov bl, 0xdc
insb byte [rdi], dx
jg 0x401da7
and dword [rbx + 0x107fd84c], eax
cwde
mov esp, dword [rax + rdx*4 + 0x6d]
mov edi, 0x42ac1f1f
jb 0x401d59
or byte [rcx], al
add edi, edx
sub byte fs:[rcx], bh
cmp esp, dword [rax]
mov byte [rdx], cl
in al, 0xcc
xchg byte [r8 + 0x6410ff07], r9b
mov edx, 0x83f10a1
movabs al, byte [0x3642789819064841]
fcom dword [rcx + 0x307f154f]
and dword [rbx + rax*8 + 0x73f343f], ecx
or dword [rdx + rsi*4 + 0x7b11d9], ebx
mov edi, 0xc9423365
mov ebx, 0xcf273400
jp 0x401de2
and bh, bh
sbb byte [rcx], cl
xor esp, esp
adc byte [rsi], dh
or byte [rcx], 0x7f
call 0x45c01e4c
add al, 2
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x51f7fdea], ecx
movabs byte [0x16a82a9394832c73], al
add byte [rax], al
push rbp
add byte [rax], al
add byte [rax], al
add byte [r8], al
jrcxz 0x401e51
add byte [rax], al
add bh, bh
