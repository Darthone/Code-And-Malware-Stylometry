call 0x401a30
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401848
add ebx, ebx
je 0x4017fe
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x401836
cmp rbp, -4
ja 0x401836
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x40181e
add ecx, 4
mov dl, byte [rax]
je 0x401846
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x401836
ret
cld
pop r11
cmp r8b, 2
je 0x40185e
jmp 0x4018db
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40186e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401856
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401886
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401873
sub eax, 3
jb 0x4018a4
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x4018db
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x4018cb
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x4018c9
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4018b8
cmp rbp, -0xd00
adc ecx, eax
call 0x40180a
jmp 0x40185e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4019b4
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401952
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40199e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401971
push 0x3a707474
jne 0x4019ca
js 0x40198a
jae 0x4019c4
outsb dx, byte cs:[rsi]
je 0x401983
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4019f1
jb 0x4019e3
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x401a0e
jb 0x401a21
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21406c
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21406c
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x4018ec
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x401a17
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4019c5
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f1abf
jb 0x401ad7
movsxd rbp, dword [rdi]
jae 0x401ad1
insb byte [rdi], dx
js 0x401ad7
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401ab7
cmp rsi, rcx
jae 0x401abf
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x401a9e
cmp al, 0x8f
ja 0x401a9e
cmp byte [rsi - 2], 0xf
je 0x401aa4
sub al, 0xe8
jg 0x401aa1
push rdi
cmp al, 1
ja 0x401a8c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x401a8f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x401abc
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401b13
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1f91
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401b57
mov al, 0xa
jmp 0x401b57
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401b33
inc ebx
mov al, 0
jmp 0x401b5b
mov al, 2
jmp 0x401b5b
mov al, 3
jmp 0x401b5b
mov al, 0x3c
jmp 0x401b5b
push rcx
rcr ah, 1
fstp st(7)
jle 0x401b9c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x401bae
jg 0x401ba0
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a7323
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x401bfa
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6d77
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x401c02
cmp esi, 0x21585055
jne 0x401c06
jge 0x401bf8
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x401bfb
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x401bff
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x401cab
pop rcx
or al, 0x3b
jb 0x401cb1
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401c23
jmp 0x401c25
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661b66
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf53dae
in eax, dx
jg 0x401c5d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401ca3
mov bh, 0x2a
add edi, 0x10
jmp 0x401ca0
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x401cdd
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401d19
jne 0x401d30
fstpnce st(6), st(0)
jle 0x401cf9
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x401d2f
jrcxz 0x401d63
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1bcc7
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401de2
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401da2
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58296377
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x401e15
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x401daf
and ecx, 7
or al, 0xeb
jae 0x401e1a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x401e4f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x401e8d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401e46
push rax
call 0xffffffff868d1b33
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401e50
std
cmp edi, esi
xchg eax, edi
jle 0x401ea5
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96431
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401ea3
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401e91
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x401eba
js 0x401efa
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x401f8c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad31c7
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x401fad
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401fb2
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21a64
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401f40
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
add byte [rax], r8b
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x100], dl
add byte [rax], al
add byte [rax], al
and bh, bh
test al, 0x35
add byte [rax], al
sldt word [rax]
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402066
je 0x40206f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402038
mov dh, 0x7d
jbe 0x402037
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x402070
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x4d00006], bl
add byte [rdx + 6], dh
enter -0x6fd9, 0xf
or byte [rax], al
movabs al, byte [0x7c813e407200009]
or al, byte [rax]
cmp byte [rbx], cl
add al, dl
or dh, dh
or esp, esp
add ecx, dword [rax + rax]
or eax, 0x770a1000
lahf
ror dl, 1
lldt word [rbp + 0x601cac09]
adc byte [rdi], dl
sal byte [rsi + 0x11e409], 0xe4
adc ah, byte [rdi + 0x1cbbbf30]
and byte [rdi], bh
adc eax, dword [rax]
xor al, 0x3d
adc al, 0x3d
jl 0x402093
jns 0x402093
adc eax, 0x16f800
add byte [rsi], bh
cmp dword ds:[rax + rax*4 + 0x17], 0x180800
clc
and byte [rdi], bh
sbb dword [rax], eax
add byte [rax + 0x1a], al
add byte [rax + 0x204f204d], ah
sbb eax, dword [rax]
rcr byte [rsi + rcx*4], 0xe4
fst qword [rbx + rdx + 0x41701]
int1
dec dword [rcx*2 + 0x1bc595c3]
mov edi, 0x50029719
nop
or al, 0x36
and al, 0x1b
nop
xor cl, r8b
rol byte cs:[rdi + rbx*2 + 0x42], 1
mov al, 0xcb
cmpsd dword [rsi], dword ptr [rdi]
add dword [rdi], edx
push rbx
or al, 0xc9
push rdi
jp 0x402133
lock xchg byte [rcx], ah
in al, dx
mov byte [rdi - 0x64d9285b], dl
je 0x402095
stosd dword [rdi], eax
xor byte [rdi - 0x3a], dh
sbb dword [rdx - 0x24cee83f], edx
xor al, byte [rsi]
sbb dword [rax + rcx*2 - 0x18], esp
cmp byte [rax], cl
sbb byte [rax + rdx*4 + 0x41], ah
rcl byte [rdx], 1
sbb eax, 0x113674a
adc ch, byte [rdi + 0x2c]
test cl, dh
xchg byte [rcx], ah
pop r13
sbb dword [rcx - 0x1867d2fd], esi
in al, dx
retf 0x4788
push rsi
adc al, 0x67
or qword [r11 + 0x4f176729], r14
jp 0x4020cd
out dx, al
retf 0x4788
mov bh, 0xc4
clc
and byte [rdi + 0x1b1b6ce], al
sub al, 0x8d
sbb ebp, dword [rdi]
or r12b, byte [r15]
sbb ebx, dword [rdx - 0x38dd7cbf]
mov fs, word [rdi]
sbb cl, byte [rdx + rsi]
enter 0x1760, -0x3f
and edi, dword ds:[rbx + 0x65]
xchg dword [rbx + 0x4301f1], eax
sbb al, 2
cmp edi, dword [rcx - 0xa]
add dh, byte [rax]
add al, byte [rdi - 0x77]
push rsp
fmul st(1)
je 0x4021b2
sbb dh, byte [rdx + 0x47]
and byte [rdi], ah
mov ebx, 0x10178833
sub eax, 0x59760c02
out 0xc8, eax
or byte [rdi + 0x2a], bh
cwde
nop
mov bl, 0x83
add al, 0x27
xadd byte [rax], ah
sbb dword [rsp + rbx - 0x1fafe4cc], -0x62
sbb al, 0xe4
in al, 0x9a
and al, 0x43
sbb eax, dword [rbx]
push rdx
sbb al, al
cmp byte es:[rax], ah
xlatb
xor dword [rax + 8], 0x5b17471b
add eax, dword [rdi]
sbb dword [rsp + rdi + 0x77036d7b], 0x7a
sbb dword [rax], edi
mov bl, 0x3c
sbb esp, esp
and byte [rsi + 0x9470320], bl
add al, 0x9c
cmp al, 0x7b
sbb dword [rip + 0x1aaebf04], 0x93c85d0b
add dword [rcx + 4], -0x3c
and edx, dword [rcx + 0x27]
cmp byte [r15 + r8*2 + 0x467f046c], r8b
sub r8, qword [rcx - 0x306ddf38]
or al, 0x72
jb 0x4021b3
xchg dword [rdi + 0x6c], ebx
sbb edx, dword [rax + rbx*8 - 0x517bc9f0]
ret
leave
sar dword [rax], 0x39
and bl, byte [rsi + rcx]
xchg dword [rcx], eax
add eax, 0xe42f605d
fsubr dword [rbx]
cmp al, byte [rip - 0x7be3a6b9]
xchg eax, ebx
sub dword [rdi], 0x4d
sub byte [rax + 0x1f], cl
lahf
add eax, 0x81793c61
ret
add eax, 0x413f1bda
jbe 0x402222
rcr byte [rip - 0x1cc6f8b7], cl
leave
sbb al, byte [rdi - 0x37f9c4a2]
leave
mov bl, 0x27
or ebp, dword [rdi]
or al, byte [rcx]
sbb dword [r12 + r15 + 0x172b803b], 0x58
add byte [rbx + 0x59], dh
leave
shr dword [rsi], -0x54
jg 0x4022e5
add byte [rax], ch
xor cl, al
and bl, byte [rsi + rcx + 0x72724418]
nop
mov r13b, 0xab
xor esp, esp
test byte [rbx + 0x2008f00c], al
scasd eax, dword [rdi]
push rbx
int1
sahf
sbb al, 0xf
mov edx, 0x4e073d1a
jbe 0x402216
mov bh, 0x59
jbe 0x4022b8
xor eax, 0xc19a2406
mov byte [rcx], dl
mov dword [rbx + rcx], 0xc7107279
xchg eax, edi
int3
sbb ebx, dword [rsp]
in al, 0xc9
retf -0x21f9
and al, 0x1d
or dword [rax], ecx
jp 0x40223d
in eax, dx
or dl, byte [rdi - 0x731b7900]
xchg eax, ebx
pop rdi
sbb al, 8
pcmpgtd mm5, qword [rbp + 8]
mov al, 0x17
movabs rdi, 0x69006c1c2d708a8
movups xmm1, xmm7
sahf
cmp al, 0x79
ret 0x1f92
cmp al, 0
sub byte [rcx], cl
test al, 0x27
sahf
cmc
pop rbp
or dword [rdi + 0x7c], esp
and al, 0x1d
jbe 0x402276
int1
mov word [rcx], cs
mov esi, 0x2f12917
jmp 0x402285
mov edi, 0xfd9709dd
or edx, esi
in al, dx
nop
pushfq
mov bh, 0xa2
and dword [rdx], ecx
loopne 0x402329
xchg eax, ebx
or dword [rdx + rsi*2], 0x62
pop rsp
sbb dword [rdx + 0x298419ed], edx
in al, 2
out dx, eax
mov al, 0xf5
add ch, byte [rbx]
adc dword [rdi - 0x61f4f071], esp
sahf
fcomp qword [rsi]
test byte [rax], al
xchg eax, edi
clc
iretd
sahf
int1
or edi, edi
cmp dl, byte [rcx]
ja 0x40238b
add eax, 0x2793921c
or ebp, dword [rax - 0x6f8df4c4]
xchg eax, ebx
sub eax, 0xc6790b85
or edi, dword [rcx + 4]
sbb al, 0xc3
or esp, edi
xchg eax, ebp
sub byte [rbx], cl
jns 0x402336
or ecx, dword [rsi]
or al, 0xef
cwde
sbb cl, al
or edi, dword [rcx - 0x3a]
sub ecx, dword [rdi + rax*4]
push rax
sub dword [rcx + 0xc], edx
cmp eax, 0x7917817b
or al, 0xbf
movabs al, byte [0x8920e4e48765df2c]
or al, 0x88
xchg eax, esi
or al, 2
adc dword [rdi], 0xcd5cf18
lar esp, ecx
add eax, 0xd70ce2f6
and byte [rip + 0x790bd2af], cl
imul byte [rax + 0x1b84d70d]
or eax, 0xeb3c852f
add eax, 0x13c70deb
sbb al, 0xec
add ch, bl
sbb dword [rsi], ecx
xor dl, byte [rdi]
and dword [rbx - 0x518fc664], eax
sahf
pop rsi
enter 0x4f13, -0x74
and al, 0xed
sbb r12d, r12d
sbb dword [rdx + rsi - 0x70f106a9], ebx
sbb al, 0x1e
jnp 0x40235c
sbb al, 0xe4
pop rcx
sub cl, byte [rdi]
cmp cl, byte [rdi]
pop rdi
or ebp, esp
test dword [rcx], edi
sbb ch, byte [rdi + rcx - 0x11]
or al, 0x72
jb 0x4023a0
mov byte [rdi + 0x5a], al
and eax, 0xbc49b1ec
nop
sub dword [rbx + 0x19], -0x1d
packuswb mm2, qword [rax + 0x18e42f67]
sub dword [rdx], eax
adc byte [rdi - 0x6c6fd923], cl
mov esp, 0x78ff1035
sbb byte [rax], ah
mov bl, 0x43
jb 0x40248a
adc spl, r15b
jbe 0x402435
xchg eax, ebx
sbb al, 0x92
in al, 0x50
adc bh, cl
and ch, byte [rax]
or edi, dword [rcx + 0x72]
nop
sub esp, dword [rsi + 0x10]
in al, dx
sub dword [rbx - 0x5b2636f4], eax
adc byte [rdi - 0xc], al
cmpsb byte [rsi], byte ptr [rdi]
movsb byte [rdi], byte ptr [rsi]
sbb al, 0x64
nop
xchg eax, ebx
push -0x39
and rax, 0xffffffff9c839392
adc eax, esp
or al, 0xf0
in al, 9
sbb al, 2
adc dword [rdi], esp
xor ch, byte [rdx]
add ecx, ecx
or ebp, ebx
or edi, eax
push 0xe102e11
leave
test eax, 0xb2971196
rcr byte [rsi - 0x38], 0xc1
pop rdi
pop rbx
and byte [rax], dl
adc ch, byte [rdi]
and byte [rdi - 0x44], ah
adc dl, byte ss:[rdi + 0x1d]
sbb eax, 0xf839392
imul edx, dword [rdx], 0x5129d30
sahf
pop rdi
add bl, byte [rdi]
adc eax, 0xe9238b13
in al, 0x33
adc esi, dword [rip + 0x39e713d7]
jmp 0x402422
cmp al, 0x1a
sub edi, dword [rax - 0x1e3bc8ed]
add eax, 0x13ec21c2
jg 0x4024b9
adc al, 0xdf
xchg eax, ebx
sbb dword [rsp + rdi + 0x72782a75], 0x14
or esp, dword [rsi + rbx*2]
enter 0x244b, -0x60
adc al, 0x7f
ror dword [rbx], cl
jns 0x402486
adc al, 0xc7
and al, 0x2c
out dx, eax
adc al, 0x5f
nop
iretd
leave
sbb dh, dh
adc al, 0xef
loopne 0x4024df
nop
xchg eax, ebx
popfq
adc eax, 0x3323eaf7
or edi, dword [rcx + 0x72]
adc eax, 0x157228c6
fistp word [rsp + rdi + 0x157f05e3]
mov bh, 0x1e
sub dl, byte [rsp + rbx]
xchg eax, edx
xchg eax, ebx
sub dword [rbx + 0x15df7815], -0x1c
leave
xchg eax, ebx
xchg eax, edi
sbb al, 0x94
add dword [rdx], edi
jp 0x40248d
ror dword [rbx], 1
fbld tbyte [rbx + 0x2f679016]
adc byte [rdi - 0x38], bl
ja 0x40250e
sub edi, dword [rcx + 0x76]
or byte [rbx + 0x170b5ff3], bh
cmpsd dword [rsi], dword ptr [rdi]
mov dl, 0x19
pop rsi
and byte [rdi], al
cmp dword [rdi + 0x1f], ebp
jp 0x402548
cmp eax, ecx
leave
xchg eax, ebx
sub byte [rdx + 0xd], al
or edi, dword [rcx - 0x3a]
and dword [rcx], edi
loopne 0x4024e9
sti
and al, 0x48
mov dword [rbx], ecx
fstp dword [rdi]
in al, dx
mov ebp, 0xce706790
out dx, eax
in eax, dx
sub ah, byte [rip + 0x24374d18]
pop rdi
pop rsi
movsxd rdx, dword [rdi]
adc ah, byte [rax]
sbb al, 0xe4
nop
or al, 5
jae 0x4024ec
mov byte [rbx], dh
enter -0x40e7, -0x2a
add dword [rdx], -0x75
iretq
mov edi, 0x9e42eb3f
hlt
pushfq
sbb byte [rdi + 0x46], al
stc
sbb al, 0x6c
call 0x41603d87
inc dword [rdi + 0x6360289d]
jb 0x402609
jae 0x40260b
jne 0x4025ff
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
jg 0x402610
push rsi
push r11
push rsp
or dword [rax], eax
jb 0x402616
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rdi*2 + 0x7b]
jnp 0x4025b6
outsd dx, dword [rsi]
outsb dx, byte [rsi]
jae 0x4025e5
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x402631
sar dh, 0xf6
jne 0x402651
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x40264a
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x2243538
push qword [rdi + 0x69665fbf]
outsb dx, byte [rsi]
imul ecx, dword [rax], 0x79617272
pop rdi
outsb dx, byte gs:[rsi]
je 0x40266c
jns 0x40263d
cmp byte [rcx + 0x6d0ab76f], 0x65
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x40263b
or eax, 0xdd6136ed
pop rdi
sub dword [rdx + rbp + 0x42], esi
pushfq
jo 0x402686
and al, 0xb6
mov ch, 0xf6
lcall [rdx + 0x53]
je 0x40266b
xor dword [rcx], edi
jo 0x40268c
movsxd rsp, dword gs:[rbp + 0x77]
cdq
sub eax, 0xee9f6e77
sti
jb 0x4026a7
movsxd rsi, dword [rdx + rbx + 0x33]
jo 0x4026ad
movsxd rsp, dword [rcx + 0x72]
out dx, eax
mov dh, 0x9f
jne 0x40267d
adc al, 0x36
imul esp, dword [rdi + 0x6e], 0x4c0c650f
xor ebp, dword [rbp + 0x6f]
outsd dx, dword [rsi]
in eax, dx
out dx, al
mov ebx, 0x365a0764
jo 0x4026c6
ja 0x402663
js 0x4026d3
js 0x4026af
push rdx
idiv edi
push rsp
push rsp
pop rcx
pop rdi
push rbp
push r12
stc
add al, byte [rsi + 0x52]
pop r15
pop rbx
sahf
in al, dx
or eax, 0x4e470b14
push rbp
and byte [rdi + 0x4807b7ff], sil
push rdx
adc al, byte [rdi + 0x4c]
pop rdi
push rbx
pop rdi
push rsp
or ebx, dword [rbx + 0x4241f7b0]
sub r11b, r8b
adc byte fs:[rcx - 0x4b94a225], dh
mov bl, 0x44
pop rcx
cmpsd dword [rsi], dword ptr [rdi]
fimul word [rdx]
xchg ebx, ebx
xor dword [rdx], esi
and dword [rbp + 0x69], ebp
insb byte [rdi], dx
xor eax, 0x695049d9
pop rbx
pop rbx
jbe 0x4026a2
jo 0x4026e1
xor dword [rdi + 0x4d], ebx
adc ebx, dword [rdi + rbp*4 + 0x33]
jmp 0x4026b0
jnp 0x4026e7
loopne 0x40274f
jns 0x40274d
push r11
xor eax, 0x85c54e3d
or bl, byte [rbx - 0x2ef18a1c]
and byte [rbp - 0x3db247aa], ah
ja 0x402753
xor dword [rax], r14d
enter -0x68f1, 0x63
pop rbx
or ebp, dword [rdi]
push rsi
insd dword [rdi], dx
insd dword [rdi], dx
xor dh, byte [rax]
je 0x40276f
imul ebp, dword [rbp + 0x6f72db6d], 0x2a
insb byte [rdi], dx
pushfq
or dword [edx - 0x749d269], esp
fistp qword [rsi + 0x50]
movsxd rax, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x4b
jb 0x40278e
fild dword [rbx + 0x6674b4dd]
adc ebx, dword [rdi + 0x32]
add dword cs:[rip - 0x47a9ccc2], esi
jge 0x4026d4
xor al, 0x75
outsb dx, byte [rsi]
shr byte [rcx + 0x5a], 1
imul edi, dword [rdx - 9], 0xe170b7ba
imul byte [rdi + 0x76]
loope 0x4027b6
pop rdi
push 0x65
js 0x4026f1
jo 0x40273f
pop rdx
rcr ebp, 0x3a
ret 0x6553
push rbx
or byte [rdi - 0x54], bh
in eax, dx
fidivr word [rbx + rdx*2 + 0x52ae5f33]
push rsp
rol dword [rbx + 0x34], cl
jae 0x4027ea
jo 0x4027bf
mov eax, 0x63f73dbd
jbe 0x4027d0
sbb dl, byte [rbx]
mov ch, byte [rcx + 0x62]
movsxd rax, ebx
jae 0x4027fc
jnp 0x402808
xchg eax, esp
sub esi, edx
xor dword [r13 + 0x52], eax
or dword [rsi + 0x563d8231], ebp
adc al, 0x19
sub dword [0x7669d9ed], ebx
xor r11b, byte [rbp + 0x47]
cmp ebx, ecx
out 0xb6, al
or al, 0x4a
xor ecx, dword [rdi - 0x9d3bbb0]
neg ah
jo 0x402808
mov dl, 0x3a
je 0x4027f4
jbe 0x402819
push rsp
insb byte [rdi], dx
in eax, dx
mov ecx, 0x57f0b736
push rbx
hlt
outsb dx, byte [rsi]
push 0x3f
retf 0x4a19
jbe 0x4027af
or dword [rbp + 0x6c43db4d], esp
test byte [rbx + 0x2c], dh
jo 0x402855
pop rcx
cmp al, 0xd6
ficom dword [rbp + rbx - 0x12c9afb2]
sub al, 0x43
test eax, 0x45d81da3
cmpsb byte [rsi], byte ptr [rdi]
or dh, byte [rbp + rbp*2 + 0x185dcd3f]
out dx, eax
imul rbp, r14, 0x12d1b62e
fmul dword [rdi + 0x69]
fldcw word [r10]
pop rdi
movabs qword [0x53cb49496d69f62c], rax
ret 0xf7f8
push dx
out dx, al
in eax, dx
insb byte [rdi], dx
push rax
jbe 0x402821
xchg eax, ebx
test dword [rbp - 0x3e], eax
cmp al, 0x60
xor edi, esi
adc esp, dword [rdx - 0x7e]
xchg eax, ecx
enter -0x7903, -0x68
jmp 0x61a6a361
imul ebp, dword [rsi + rdi*8 + 0x33], 0xda51451d
sbb byte [r11 - 0x4ba09e92], r14b
loope 0x4027df
pop rsp
mov esp, dword [rdx + 0x49558d42]
pop rdi
xor dword [rsi], ebp
xor edx, dword [rdx - 0x36]
cmpsb byte [rsi], byte ptr [rdi]
lodsb al, byte [rsi]
movsxd rbp, dword [rax + 0x71]
push rsi
call 0xffffffff96863cdd
ja 0x40282c
sub bh, byte [rcx + 0x25]
imul eax, ecx, 0x49ee4031
push -0x2e64d04a
xor edx, eax
fild word [rbp - 0x6f]
mov ebx, ss
fistp dword [rdx + 0x53]
and bh, byte [rax - 0x4f]
add dword [rdx + rax*2 + 0x7c6e019b], esp
sub dl, al
push rsi
ror byte [rdi - 0x2b], cl
imul esp, dword [rbp + 0x1f], -0x66
sbb bl, byte fs:[rcx + 0x6e]
cmp byte [rsi + rax*2], dh
ja 0x402846
adc al, byte [rcx - 0x4bc796ce]
and ebp, dword [rbp + 0x6e]
outsd dx, dword [rsi]
jns 0x4028ff
jbe 0x402905
push rdx
fldenv [rax]
test eax, 0x4545e973
and edx, dword [rip + 0x70324e48]
imul eax, ebx, 0x60493055
pop rax
xchg eax, edi
and ebp, dword [rbp + 0x24]
xchg eax, edi
int3
pop rax
xor dword [rsi + 0x70], ecx
jns 0x4028c3
sub eax, 0x32c3ac5b
xor rax, qword [r14]
int3
xor dword [rax], esi
test eax, 0xff3a4ed1
mov dl, 0x6e
xor eax, 0x41a95f6a
loope 0x4028f2
cmp byte [rdi], ch
sub esp, dword [rbx + 0x35]
movsxd rsp, dword [rbp + 0xc]
jae 0x402923
mov ah, 0x52
test byte [rdx], dh
sbb dword [rdi + 0x30], esi
mov word [rbp + 0x61], ss
jp 0x402976
add al, 3
jne 0x40296d
adc byte gs:[rsi + 0x320b54ac], dh
je 0x402956
js 0x402965
pop rdi
movsxd rsp, dword ss:[rdx - 0x45]
outsb dx, byte [rsi]
pop rcx
sub ah, byte [rdx + 0x798c26d4]
push rbx
jne 0x4028e8
insb byte [rdi], dx
sub byte [r11 + r8*2], cl
push rsp
add al, 0x4e
mov dword [rsi + rdx*2 - 0x296953b7], ebp
cmp bl, byte [rdx]
jnp 0x40298a
test ah, dl
test eax, 0x28b6c899
cmp eax, 0x351c6739
imul ebx, dword [rcx], 0x5b
jo 0x40295f
jmp 0xffffffff95acb691
stc
jo 0x40295d
sub dword [rbp + 0x69], 0x477332cd
outsb dx, byte [rsi]
jmp 0x402917
cwde
sbb ecx, dword [rax]
adc al, 0x16
stosd dword [rdi], eax
scasd eax, dword [rdi]
jo 0x40298d
leave
push 0x49
pop rbx
sub dword [rax + 0x4a], 0x87613f
jmp 0x65a1da45
jno 0x40297d
cld
or al, 0x10
mov dh, 0xf6
hlt
mov ah, 0x5f
and eax, 0x4c077b53
ret
adc al, 0x1f
sbb eax, 0x18e40d3f
out dx, al
push rbx
cmp dword [rsi], ecx
loopne 0x4029d9
xor esp, dword [rcx]
xchg eax, ecx
mov cl, 0xbd
call 0x73b79514
jmp 0xffffffff8244807c
xor al, 0x9b
cdq
cdq
movsb byte [rdi], byte ptr [rsi]
movabs dword cs:[0xa42064245b45af64], eax
cmpsd dword [rsi], dword ptr [rdi]
xor al, byte [rdx + 0x49]
outsb dx, byte [rsi]
and eax, 0xc0c62091
push rsp
adc dl, byte [rbx - 0x6e899bb9]
jno 0x4029e6
xchg eax, ecx
pop rbp
movabs dword [0xc14bc23346916c45], eax
xor byte [rax], 0x5f
pop rsp
xchg ah, cl
pop rdi
in eax, dx
insd dword [rdi], dx
xchg byte [rdx], ah
pop r8
jae 0x402a6c
mov cl, 0x4d
jae 0x402a74
test dword [rip - 0x5db6c9e3], ecx
push rbx
cmp byte [rbx + 0x61], bh
jbe 0x402a3b
jrcxz 0x4029e3
mov cl, 0x5e
jne 0x402a7c
xor eax, 0x775f360c
and dword [rax + rcx*8 - 0xf], ecx
mov ebx, 0x31c2305f
loopne 0x402a7f
xor dword [rbx - 0x66], ecx
movabs dword [0x336167333133f68f], eax
insb byte [rdi], dx
jae 0x402a0e
sal byte [rip + 0x2a686969], cl
loop 0x4029c2
xor bl, byte [rbx]
test byte [rbp + rax + 0x1d3531e8], 0x16
bnd jl 0x402a56
pushfq
xor r10d, dword [r8]
pop rdx
test dword [rax + 0x28], esi
add ch, byte [rcx - 0x74]
add dword [rsi], edx
test dword [rax + 0x420db061], ebp
fld qword [rdx]
xor eax, 0x94349569
loopne 0x4029f0
sbb eax, 0x248d6831
xchg eax, esi
sal byte [rip + 0x3a4291b], 0x59
movabs byte [0x19a10be33030164a], al
test eax, 0x50ebf0ba
mov dl, 0x78
mov dh, 1
mov ch, 0xcb
xor dword [rcx], edi
and dh, byte [rcx]
xchg eax, ebx
wait
or al, 0x91
jo 0x402b0a
pop rsp
xor cl, byte [rcx + 0x22918152]
ret
cwde
add eax, dword [rsp + rsi*8 - 0x1729a9c8]
adc bh, al
pushfq
and cl, byte [rdi + 0x70]
add byte [rcx + 0x7ef46dc3], ah
xor dword [rsi], esi
adc dh, byte [rdi + 0x74240936]
sal dword [rsi], 0x73
js 0x402a70
outsb dx, byte [rsi]
xor cl, byte [rax]
mov ss, word [rdx - 0x4d]
insd dword [rdi], dx
jo 0x402b1d
sub byte [rbx], bh
and al, 0x9b
insb byte [rdi], dx
or dword [rbp + rdx*4 + 0x3dc74e50], edi
test byte [rbx], cl
in al, 0xa
mov cs, word [r13 - 0x147faf7a]
wait
and al, byte [rcx + 0x29629419]
insb byte [rdi], dx
cmp dword [rbx - 0x5f], eax
push rdi
movsxd rbx, dword [rax - 0x69ced3f4]
mov eax, 0x5667611c
push rsp
sbb bl, byte [rbx + 0x7d]
or byte [rsi - 0x3b], dl
push r10
mov edx, esp
xor ch, byte [rdx + 6]
xor dx, ax
in al, dx
adc ebp, dword [rsi + 0x63]
xor al, 0xc1
lodsd eax, dword [rsi]
ror dword [rbx + 0x5a347a96], 0x68
imul ebp, dword [rsi - 0x7f], -0x3b
nop
sbb eax, 0xd09e9734
or al, 0xb0
jne 0x402abb
push -0x7c5794ed
or ah, ah
ror byte [rdx], 0xa1
jbe 0x402ba8
push 0x36315d59
jge 0x402b60
xchg ecx, eax
push rax
xchg eax, ecx
cmpsd dword [rsi], dword ptr [rdi]
imul esi, dword [rax + 2], 0x1b8c0963
imul edi, dword [rax - 0x12], 0x23d46686
test bl, 0x49
insd dword [rdi], dx
pop r14
lodsb al, byte [rsi]
mov al, 0x13
or byte [rdx + 0x4ac0a0ad], al
lodsd eax, dword [rsi]
sahf
popfq
xchg byte [rsi + rsi*8], al
add byte [rdx + 0x70], dh
xchg ebx, ebp
pop rbp
nop
shl dword [rax + rcx], -0x5b
test cl, dl
movsb byte [rdi], byte ptr [rsi]
sbb dword [rbp - 0x77], esp
push rsi
rol byte [rax - 0x80], cl
mov ecx, 0xf8eb4681
adc ch, byte [rcx + 0x49]
movsxd rsp, dword [rcx + 0x4b]
cmp ah, cl
and eax, 0x54b7d25d
mov dh, 0x53
retf
push 0x34533c94
cmc
sbb bl, ah
add dword [rsi - 0x32], esp
add dword [rbp + 0x61], esi
lodsb al, byte [rsi]
add dword [rax], 0x9103f1ae
loop 0x402bbe
movabs dword [0xc2b683ad45f1a925], eax
fstp qword [rsi - 0x6b]
leave
clc
jp 0x402bfc
sbb byte [rdx + rbp*4], ch
jbe 0x402c51
xor ecx, r13d
test eax, 0x81151e37
pop rcx
retf 0x5880
mov dl, 0x18
int 0x18
add ecx, dword [rbx]
add dh, byte [rbx + 0x33]
sbb eax, 0x7782cf6a
sub dh, byte [rdx]
sub eax, 0x24c03630
jb 0x402c4b
mov esp, 0xc30595a1
mov ebp, 0xfd4acdea
jbe 0x402c0e
push rsp
sbb al, 0x63
insb byte [rdi], dx
je 0x402c74
adc eax, edx
xchg eax, ebx
or al, 0x30
or eax, 0x1c9cc145
sub ah, 0x38
jle 0x402c2c
test byte [rax], bl
add al, 0xf7
or byte [rax + 0x24], 0xa3
sbb dword [rcx], eax
or ebp, ebx
mov al, 0x8b
mov dl, 0xbd
add edx, eax
xor bl, byte [rdi + rbp*2]
insd dword [rdi], dx
pop rdx
push rdx
scasb al, byte [rdi]
mov dh, 0x36
movsxd rcx, ebx
insb byte [rdi], dx
add al, 0xa6
lodsb al, byte [rsi]
rol byte [rbp - 0x1a], 1
xor esi, dword [rsi - 0x7970b6b8]
push -0x18c9ea31
xlatb
stosd dword [rdi], eax
or ah, byte [rbx + rdx - 0x6a37de10]
adc al, 0x20
xor dword [r14], r14d
cmp bl, byte [rdx - 0x1b]
xor dl, ah
sub al, 0x61
insd dword [rdi], dx
add al, 0xba
cmp eax, 0x6a12b5e8
and dword [rbx + 0x32], esp
add dword [rax], edx
nop
popfq
nop
nop
sbb byte [rsi - 0x54], al
sbb dl, ah
add dword fs:[rbp + 0x2c], esp
mov ebp, 0x6ed42dc3
push rax
pop rdi
jo 0x402cae
int3
outsb dx, byte [rsi]
insd dword [rdi], dx
adc byte [rsi - 0x3e], dl
push rdx
mov esp, 0x165de330
xchg eax, ebx
xchg byte [rcx], dh
fisubr word [rbp - 0x10]
add cl, byte [rcx]
adc dword [rcx + 0x40], 0xd92c833c
sbb ecx, dword [rax - 0x50]
cmp eax, 0x484aba4
xor al, byte [rsp + rax*2 - 0xd7ef4aa]
xchg eax, ecx
or rax, 0x2e653787
imul edi, dword [rdx + rsi], 0x2311804c
movabs rcx, 0x86c6307e7119609d
xor ah, byte [rdx + 0x65]
cdq
adc al, 0x16
lodsb al, byte [rsi]
mov word [rax + 0x18], cs
leave
xor ah, byte [rbx]
jnp 0x402cfd
pop rbx
mov ebx, 0xb8551342
nop
je 0x402d12
fisubr dword [rax + 0x236d7baf]
mov r13d, 0x5ce12a30
push rsi
xchg eax, esi
imul edi, dword [rdi], 0x64a84644
sub al, 0xa1
div byte [rsi - 0x21]
mov ebp, 0x92a42d82
fist dword [rip - 0x65b4ee00]
fcmovb st(0), st(0)
push 0x49
or al, 0x39
stosd dword [rdi], eax
xor edi, dword [rdi + 0x74]
adc dword [rdi], eax
xor edi, dword [rdi - 0x4e]
sub edi, dword [rcx]
or al, 0x72
xchg dword [rcx - 0x52f68992], esp
xchg eax, edx
imul eax, dword [rax], 0xc532b001
add byte [rbx], ch
add byte es:[rsi], al
sub eax, dword [rcx - 0x1517018a]
lea edi, [rdx + 0x5f42385c]
push rax
movsxd rbp, dword [rsi + 0x74]
mov ebx, 0x73afb7ad
jns 0x402dcb
adc byte [rdx + 7], ah
je 0x402dd5
push 0x61b5d6e5
or dword [rbp + 0x6e07704c], esp
outsd dx, dword [rsi]
mov ebx, 0x2eaeae60
sbb byte [rip + 0x2e930ddf], ch
lodsd eax, dword [rsi]
sbb eax, 0xb475adfb
sub eax, 0xd006469
push -0x28f6c79f
fnstcw word [rbx - 0x12]
jns 0x402e00
out dx, eax
sbb dword [rsi + 0x65], esi
push 0x695ac26e
dec dword [rdi + rbx*2]
sbb edx, dword [rsi + rsi*4 + 0x44d7b046]
sub byte [rcx], cl
push rdx
lea ebp, [rsi]
wait
fcmovnu st(0), st(6)
add dword [rcx], ecx
or ch, byte [rdi + rbp*2]
or byte [rcx + 0x78], ch
movsxd rbp, dword [rbp + 0x27]
jb 0x402dc1
and al, 0x6f
mov ecx, 0x27d96e2e
push 0x7264682b
or eax, 0xc566eb5d
add cl, byte [rdi + rbx*2 + 0x116cbd5c]
mov bl, 0x64
xchg eax, ecx
jno 0x402e20
or ebp, dword [rbx + 0x62]
lodsb al, byte [rsi]
shr dword [rdx - 0x26], 1
movabs eax, dword [0xd9b3533568003461]
jnp 0x402e4d
and byte [rdx + rbp], al
cmp esi, dword [rdx + rax*2 + 0x1d52d0]
and eax, 0x8fb55d11
add edi, ebp
cmp dword [rbx + 0x13], esi
movabs al, byte [0x219219a41c3f079f]
add dword [rbx], esp
nop
push rsp
push rsp
and byte [rsi + 0x4864864], al
xor dword [rcx + 0x64], esi
nop
je 0x402e47
or al, 0x72
enter 0x449b, -0xa
ljmp [rdi - 0x68]
cwde
xor cl, r8b
nop
add eax, 0xe414e08
wait
push rsp
mov bl, 0x3f
shr byte [rdx + rsi*2 + 0x76], 0x90
rcl byte [rax], 2
sti
sub eax, 0x18990669
push rsi
add edi, dword [rcx - 0x3e]
wait
add dword [rdi + 7], esp
movabs eax, dword [0xffbf5e22ee92d001]
nop
pushfq
mov ebp, 0xbf078f19
sub al, 3
ror byte [rip + 0x6b0702d9], cl
movabs al, byte [0x680a70726e6720c]
movabs r10, 0xf616044f7aff9b29
fild word [rdi]
out 0xc, eax
jbe 0x402eee
adc edi, dword [rdi]
inc dword [rdi + rdi + 0x20c83942]
cmp dword [rax], 0x38
cwde
add dword [rcx + 0x18], eax
sbb dword cs:[rsi + 0x26f013], ecx
xchg eax, ebx
pop rdi
xchg eax, esp
pushfq
lcall [rdx]
mov dword [rdi], edi
or edi, dword [rcx]
enter -0xfe0, 0x20
add dword [rcx + 0x21], eax
sbb esi, dword [rdx + 0x3f940710]
insb byte [rdi], dx
and ecx, 0x2f077f26
paddusb mm4, qword [rax + rcx*8 - 0x72]
popfq
and byte [rdi], al
pop rbx
and bh, cl
jg 0x402ec5
and bh, byte [rdi]
movabs dword [0x348507ff484509b9], eax
xchg eax, esp
pushfq
dec dword [rcx]
test eax, 0x4193c9bf
mov dh, 0x7f
sub eax, 0xc00c22d
mov cl, 0x3f
in al, 0x7f
in al, 0x48
xchg eax, edx
sub esp, 2
mov edi, 0x5059b827
push rax
enter -0x6dd2, 0xc
leave
xchg eax, esp
pushfq
mov ecx, 0xff076f59
js 0x402e95
fisttp dword [rsi]
add edi, dword [rbx - 0x50b21f00]
mov edi, 0x41903fe7
movsb byte [rdi], byte ptr [rsi]
psubb mm7, mm0
adc byte [rsi - 0x400cde43], 0x3f
movsb byte [rdi], byte ptr [rsi]
or esi, dword [rax + 0x3f3ea7c9]
clc
wait
iretd
fsubr qword [rsi + rsi*4 + 0x1f]
jg 0x402f35
add dword [rdx + rsi], ecx
and al, 0x27
adc byte [rax - 0x7a49be6e], bl
mov edi, 0xc9083f3f
or byte cs:[rcx], al
add dword [rdx - 0x32], ecx
sub dword [rdi], eax
movabs al, byte [0xff07a00a19219373]
nop
outsb dx, byte [rsi]
sub byte [rcx], bh
adc byte [rax], dl
or byte [rdx - 0x3fe6f9bf], dl
mov al, 0x88
or eax, 0x4f106476
adc eax, 0xe0c2307f
mov al, 0x90
xor al, 0xbf
sub dword [rbx + 0x1107161d], ebx
jnp 0x402f92
and edx, dword [rsp + rbx*4 - 0x4092c840]
mov ebx, 0x3657acf2
add al, ch
call qword [rax + 0x13]
add ecx, dword [rax + 0x73]
xor eax, 0x24587f09
cmp byte [rdi + rdi*8 + 0x18], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, 0
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip + 0x2c080216], ecx
sub cl, bh
add bh, dh
xor bl, byte [rax + 0x35a8]
sldt word [rax]
pop rax
jbe 0x402fe7
add byte [rcx], cl
add byte [rsi - 0xc], dh
add byte [rax], al
add bh, bh
