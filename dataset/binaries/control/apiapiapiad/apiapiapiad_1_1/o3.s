xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6030cf
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x401120
mov eax, 0
test rax, rax
je 0x401120
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x401168
mov eax, 0
test rax, rax
je 0x401168
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x201f69], 0
jne 0x40118a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x201f56], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x4011a0
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x40119b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
mov rax, rdi
movabs r9, 0x89705f3112a28fe5
imul r9
mov rax, rdi
sar rax, 0x3f
lea rcx, [rdx + rdi]
sar rcx, 0x1d
sub rcx, rax
imul rcx, rcx, 0x3b9aca07
sub rdi, rcx
test rsi, rsi
js 0x40126d
je 0x401265
mov rcx, rdi
mov r8d, 1
nop dword [rax]
mov rdi, rcx
imul rdi, r8
mov rax, rdi
imul r9
mov rax, rdi
sar rax, 0x3f
add rdx, rdi
sar rdx, 0x1d
sub rdx, rax
imul rdx, rdx, 0x3b9aca07
sub rdi, rdx
test sil, 1
cmovne r8, rdi
mov rdi, rcx
imul rdi, rcx
mov rax, rdi
imul r9
mov rax, rdi
sar rax, 0x3f
lea rcx, [rdx + rdi]
sar rcx, 0x1d
sub rcx, rax
imul rcx, rcx, 0x3b9aca07
sub rdi, rcx
sar rsi, 1
mov rcx, rdi
jne 0x401200
mov rax, r8
ret
mov r8d, 1
jmp 0x401261
sub rsp, 8
mov ecx, str.ll_powmod_ll__ll_
mov edx, 0x17
mov esi, str.sorted_code_control_apiapiapiad_apiapiapiad_1_1_B.cpp
mov edi, str.b__0
call sym.imp.__assert_fail
nop word [rax + rax]
cmp edi, 0x52
je 0x4012b3
cmp edi, 0x4f
je 0x4012c0
cmp edi, 0x59
jne 0x4012d0
add dword [rip + 0x201e7e], 1
ret
cmp edi, 0x56
jne 0x4012ba
add dword [rip + 0x201e75], 1
add dword [rip + 0x201e66], 1
ret
nop dword [rax + rax]
add dword [rip + 0x201e59], 1
add dword [rip + 0x201e56], 1
ret
nop
cmp edi, 0x47
jne 0x4012e4
add dword [rip + 0x201e48], 1
add dword [rip + 0x201e45], 1
ret
cmp edi, 0x42
jne 0x4012a7
add dword [rip + 0x201e38], 1
ret
nop dword [rax + rax]
nop word cs:[rax + rax]
push r15
push r14
mov r14d, edx
push r13
push r12
movsxd r13, esi
push rbp
push rbx
mov rbp, r13
mov rbx, rdi
mov r12d, ecx
sub rsp, 0x28
mov qword [rdi], 0
mov qword [rdi + 8], 0
mov rax, qword fs:[0x28]
mov qword [rsp + 0x18], rax
xor eax, eax
test r13, r13
mov qword [rdi + 0x10], 0
je 0x401630
movabs rax, 0x3fffffffffffffff
cmp r13, rax
ja 0x401642
shl r13, 2
mov rdi, r13
call sym.operatornew
lea rcx, [rax + r13]
mov qword [rbx], rax
mov rdx, r13
xor esi, esi
mov rdi, rax
mov r15, rax
mov qword [rbx + 0x10], rcx
mov qword [rsp + 8], rcx
call sym.imp.memset
mov rcx, qword [rsp + 8]
test r14d, r14d
mov qword [rbx + 8], rcx
jle 0x4014a3
xor r13d, r13d
mov rdi, rcx
nop dword [rax]
mov r9, rdi
sub r9, r15
sar r9, 2
test ebp, ebp
mov r10d, r9d
je 0x401438
test r9d, r9d
mov rsi, r15
mov ecx, 1
jg 0x4013dc
jmp 0x40141d
nop dword [rax + rax]
add rsi, 4
add ecx, 1
cmp r8d, r10d
jge 0x40141d
mov eax, dword [rsi]
mov r8d, ecx
test eax, eax
jne 0x4013d0
xor edx, edx
mov eax, ecx
div r9
mov r11d, dword [r15 + rdx*4]
test r11d, r11d
jne 0x4013d0
add rsi, 4
cmp qword [rbx + 0x10], rdi
mov dword [rsp + 0x14], 1
je 0x401410
cmp rsi, rdi
je 0x401579
lea rdx, [rsp + 0x14]
mov rdi, rbx
call sym.std::vector_int_std::allocator_int__::_M_insert_aux_int_
sub ebp, 1
add r13d, 1
cmp r14d, r13d
je 0x4014a3
mov r15, qword [rbx]
mov rdi, qword [rbx + 8]
jmp 0x4013a8
nop dword [rax]
test r9d, r9d
jle 0x401420
mov rsi, r15
mov ecx, 1
jmp 0x40145c
nop word [rax + rax]
add rsi, 4
add ecx, 1
cmp r10d, r8d
jle 0x401420
cmp dword [rsi], 1
mov r8d, ecx
je 0x401450
xor edx, edx
mov eax, ecx
div r9
cmp dword [r15 + rdx*4], 1
je 0x401450
add rsi, 4
cmp qword [rbx + 0x10], rdi
mov dword [rsp + 0x14], 1
je 0x40148d
cmp rsi, rdi
je 0x401561
lea rdx, [rsp + 0x14]
mov rdi, rbx
call sym.std::vector_int_std::allocator_int__::_M_insert_aux_int_
add r13d, 1
cmp r14d, r13d
jne 0x401429
xor r13d, r13d
test r12d, r12d
jle 0x40153b
nop
mov r10, qword [rbx + 8]
mov r11, qword [rbx]
mov r8, r10
sub r8, r11
sar r8, 2
test ebp, ebp
mov r9d, r8d
je 0x401598
test r8d, r8d
mov rsi, r11
mov ecx, 1
jg 0x4014ec
jmp 0x40152b
nop dword [rax + rax]
add rsi, 4
add ecx, 1
cmp r9d, edi
jle 0x40152b
mov edx, dword [rsi]
mov edi, ecx
test edx, edx
jne 0x4014e0
xor edx, edx
mov eax, ecx
div r8
mov eax, dword [r11 + rdx*4]
test eax, eax
jne 0x4014e0
add rsi, 4
cmp qword [rbx + 0x10], r10
mov dword [rsp + 0x14], 2
je 0x40151e
cmp rsi, r10
je 0x4015fe
lea rdx, [rsp + 0x14]
mov rdi, rbx
call sym.std::vector_int_std::allocator_int__::_M_insert_aux_int_
sub ebp, 1
add r13d, 1
cmp r12d, r13d
jne 0x4014b0
mov rax, rbx
mov rbx, qword [rsp + 0x18]
xor rbx, qword fs:[0x28]
jne 0x401647
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
test rdi, rdi
je 0x40156c
mov dword [rdi], 1
add rdi, 4
mov qword [rbx + 8], rdi
jmp 0x401420
test rdi, rdi
je 0x401584
mov dword [rdi], 1
add rdi, 4
mov qword [rbx + 8], rdi
jmp 0x40141d
nop dword [rax]
test r8d, r8d
jle 0x40152e
mov rsi, r11
mov ecx, 1
jmp 0x4015c0
nop word [rax + rax]
add rsi, 4
add ecx, 1
cmp r9d, edi
jle 0x40152e
cmp dword [rsi], 2
mov edi, ecx
je 0x4015b0
xor edx, edx
mov eax, ecx
div r8
cmp dword [r11 + rdx*4], 2
je 0x4015b0
add rsi, 4
cmp qword [rbx + 0x10], r10
mov dword [rsp + 0x14], 2
je 0x4015ec
cmp rsi, r10
je 0x401617
lea rdx, [rsp + 0x14]
mov rdi, rbx
call sym.std::vector_int_std::allocator_int__::_M_insert_aux_int_
jmp 0x40152e
test r10, r10
je 0x40160a
mov dword [r10], 2
add r10, 4
mov qword [rbx + 8], r10
jmp 0x40152b
test r10, r10
je 0x401623
mov dword [r10], 2
add r10, 4
mov qword [rbx + 8], r10
jmp 0x40152e
mov qword [rdi + 0x10], 0
xor r15d, r15d
xor ecx, ecx
jmp 0x401391
call sym.std::__throw_bad_alloc
call sym.imp.__stack_chk_fail
mov rdi, qword [rbx]
mov rbp, rax
test rdi, rdi
je 0x40165c
call sym.operatordelete
mov rdi, rbp
call sym.imp._Unwind_Resume
nop
nop word cs:[rax + rax]
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x38
mov rax, qword fs:[0x28]
mov qword [rsp + 0x28], rax
xor eax, eax
mov eax, dword [rip + 0x201ac8]
cmp dword [rip + 0x201aca], eax
jg 0x4016b8
mov eax, dword [rip + 0x201abe]
cmp dword [rip + 0x201ac0], eax
jg 0x4016b8
mov eax, dword [rip + 0x201aa8]
cmp dword [rip + 0x201ab6], eax
jle 0x4016e0
xor eax, eax
mov rcx, qword [rsp + 0x28]
xor rcx, qword fs:[0x28]
jne 0x401cc3
add rsp, 0x38
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
mov rdx, qword [rip + 0x201a21]
xor esi, esi
xor r8d, r8d
mov ecx, 0x401fb9
mov edi, obj.ret_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_replace
mov eax, dword [rip + 0x201a5b]
mov esi, dword [rip + 0x201a5d]
test eax, eax
jle 0x4017b0
cmp esi, eax
jne 0x4017b0
mov ebp, dword [rip + 0x201a4f]
test ebp, ebp
jne 0x4016b8
mov ebx, dword [rip + 0x201a41]
test ebx, ebx
jne 0x4016b8
mov r11d, dword [rip + 0x201a2e]
test r11d, r11d
jne 0x4016b8
mov r10d, dword [rip + 0x201a1a]
test r10d, r10d
jne 0x4016b8
movabs rax, 0x7fffffffffffffff
sub rax, qword [rip + 0x2019b0]
cmp rax, 1
jbe 0x40179d
xor ebx, ebx
movabs rbp, 0x7fffffffffffffff
mov edx, 2
mov esi, 0x401f8a
mov edi, obj.ret_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebx, 1
cmp dword [rip + 0x2019d5], ebx
jle 0x401c28
mov rax, rbp
sub rax, qword [rip + 0x201971]
cmp rax, 1
ja 0x40176a
mov edi, str.basic_string::append
call sym.std::__throw_length_error
nop word [rax + rax]
mov edx, dword [rip + 0x2019aa]
mov edi, dword [rip + 0x2019ac]
test edx, edx
jle 0x401850
cmp edi, edx
jne 0x401850
or eax, esi
or eax, dword [rip + 0x201998]
jne 0x4016b8
mov r9d, dword [rip + 0x201977]
test r9d, r9d
jne 0x4016b8
test edi, edi
jle 0x401c28
movabs rbp, 0x7fffffffffffffff
mov rax, rbp
sub rax, qword [rip + 0x201902]
cmp rax, 1
jbe 0x40179d
xor ebx, ebx
mov edx, 2
mov esi, 0x401f8d
mov edi, obj.ret_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebx, 1
cmp dword [rip + 0x20193d], ebx
jle 0x401c28
mov rax, rbp
sub rax, qword [rip + 0x2018cd]
cmp rax, 1
ja 0x40180e
jmp 0x40179d
nop word cs:[rax + rax]
mov ecx, dword [rip + 0x201902]
mov r8d, dword [rip + 0x20190f]
test ecx, ecx
jle 0x4018d8
cmp r8d, ecx
jne 0x4018d8
or eax, esi
or eax, edi
or eax, edx
jne 0x4016b8
test r8d, r8d
jle 0x401c28
movabs rbp, 0x7fffffffffffffff
mov rax, rbp
sub rax, qword [rip + 0x201879]
cmp rax, 1
jbe 0x40179d
xor ebx, ebx
mov edx, 2
mov esi, 0x401f90
mov edi, obj.ret_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebx, 1
cmp dword [rip + 0x2018b4], ebx
jle 0x401c28
mov rax, rbp
sub rax, qword [rip + 0x201840]
cmp rax, 1
ja 0x40189b
jmp 0x40179d
nop dword [rax + rax]
sub edx, edi
sub eax, esi
sub ecx, r8d
lea esi, [rdx + rax]
lea edi, [rdx + rdx]
mov dword [rip + 0x20186d], ecx
mov dword [rip + 0x20186f], edx
mov dword [rip + 0x201865], eax
add esi, ecx
cmp esi, edi
jl 0x4016b8
lea edi, [rax + rax]
cmp esi, edi
jl 0x4016b8
lea edi, [rcx + rcx]
cmp esi, edi
jl 0x4016b8
cmp edx, eax
mov dword [rip + 0x201801], edx
mov dword [rip + 0x2017ff], eax
mov dword [rip + 0x2017fd], ecx
mov byte [rip + 0x201816], 0x52
mov byte [rip + 0x201810], 0x59
mov byte [rip + 0x20180a], 0x42
jge 0x40195c
mov dword [rip + 0x2017d8], eax
mov dword [rip + 0x2017d6], edx
mov byte [rip + 0x2017f3], 0x59
mov byte [rip + 0x2017ed], 0x52
mov eax, dword [rip + 0x2017be]
cmp ecx, eax
jle 0x40198c
movzx edx, byte [rip + 0x2017dd]
mov dword [rip + 0x2017b5], eax
movzx eax, byte [rip + 0x2017ce]
mov dword [rip + 0x2017a0], ecx
mov byte [rip + 0x2017c2], dl
mov byte [rip + 0x2017be], al
mov edx, dword [rip + 0x201792]
mov ecx, dword [rip + 0x201790]
cmp ecx, edx
jle 0x4019c9
mov eax, edx
movzx esi, byte [rip + 0x2017a5]
mov dword [rip + 0x20177d], edx
movzx edx, byte [rip + 0x201797]
mov dword [rip + 0x20176c], ecx
mov byte [rip + 0x20178a], sil
mov byte [rip + 0x201785], dl
mov edx, ecx
mov ecx, eax
mov esi, dword [rip + 0x201751]
lea rdi, [rsp + 0x10]
call sym.construct
mov eax, dword [rip + 0x201789]
mov edx, dword [rip + 0x20177f]
mov ecx, dword [rip + 0x201781]
mov rdi, qword [rsp + 0x10]
test eax, eax
mov rax, qword [rsp + 0x18]
sete byte [rsp + 0xe]
test edx, edx
sete byte [rsp + 0xf]
test ecx, ecx
sete r15b
sub rax, rdi
sar rax, 2
test eax, eax
jle 0x401c1e
xor r12d, r12d
movabs rbx, 0x7fffffffffffffff
nop dword [rax]
movsxd rax, dword [rdi + r12*4]
lea r13, [r12*4]
cmp byte [rax + obj.s], 0x52
jne 0x401aad
cmp byte [rsp + 0xe], 0
jne 0x401aad
mov r8d, dword [rip + 0x20171d]
test r8d, r8d
jle 0x401c58
mov rax, rbx
sub rax, qword [rip + 0x2016aa]
cmp rax, 1
jbe 0x401cb9
xor ebp, ebp
jmp 0x401a84
nop dword [rax]
mov rax, rbx
sub rax, qword [rip + 0x20168e]
cmp rax, 1
jbe 0x401cb9
mov edx, 2
mov esi, 0x401f8d
mov edi, obj.ret_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebp, 1
cmp dword [rip + 0x2016c7], ebp
jg 0x401a70
mov rdi, qword [rsp + 0x10]
mov byte [rsp + 0xe], 1
movsxd rax, dword [rdi + r13]
movzx ebp, byte [rax + obj.s]
cmp bpl, 0x59
jne 0x401b38
cmp byte [rsp + 0xf], 0
jne 0x401b38
mov edi, dword [rip + 0x201699]
test edi, edi
jle 0x401ca0
mov rax, rbx
sub rax, qword [rip + 0x20162b]
cmp rax, 1
jbe 0x401caf
xor ebp, ebp
jmp 0x401b04
nop dword [rax + rax]
mov rax, rbx
sub rax, qword [rip + 0x20160e]
cmp rax, 1
jbe 0x401caf
mov edx, 2
mov esi, 0x401f8a
mov edi, obj.ret_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebp, 1
cmp dword [rip + 0x201643], ebp
jg 0x401af0
mov rax, qword [rsp + 0x10]
mov byte [rsp + 0xf], 1
movsxd rax, dword [rax + r13]
movzx ebp, byte [rax + obj.s]
cmp bpl, 0x42
jne 0x401bb9
test r15b, r15b
jne 0x401bb9
mov esi, dword [rip + 0x201623]
test esi, esi
jle 0x401c90
mov rax, rbx
sub rax, qword [rip + 0x2015ad]
cmp rax, 1
jbe 0x401c62
xor ebp, ebp
jmp 0x401b84
nop dword [rax]
mov rax, rbx
sub rax, qword [rip + 0x20158e]
cmp rax, 1
jbe 0x401c62
mov edx, 2
mov esi, 0x401f90
mov edi, obj.ret_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebp, 1
cmp dword [rip + 0x2015cb], ebp
jg 0x401b70
mov rax, qword [rsp + 0x10]
mov r15d, 1
movsxd rax, dword [rax + r13]
movzx ebp, byte [rax + obj.s]
mov rdx, qword [rip + 0x201540]
mov r13, qword [rip + 0x201541]
mov eax, 0xf
cmp rdx, 0x603110
cmovne rax, qword [rip + 0x201535]
lea r14, [r13 + 1]
cmp r14, rax
ja 0x401c38
mov byte [rdx + r13], bpl
mov rax, qword [rip + 0x201511]
lea edx, [r12 + 1]
mov qword [rip + 0x20150d], r14
add r12, 1
mov byte [rax + r13 + 1], 0
mov rdi, qword [rsp + 0x10]
mov rax, qword [rsp + 0x18]
sub rax, rdi
sar rax, 2
cmp edx, eax
jl 0x401a28
test rdi, rdi
je 0x401c28
call sym.operatordelete
mov eax, 1
jmp 0x4016ba
nop word [rax + rax]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r13
mov edi, obj.ret_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rdx, qword [rip + 0x2014aa]
jmp 0x401be4
mov byte [rsp + 0xe], 1
jmp 0x401aad
mov edi, str.basic_string::append
call sym.std::__throw_length_error
mov rdi, qword [rsp + 0x10]
mov rbx, rax
test rdi, rdi
je 0x401c7e
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
nop word cs:[rax + rax]
mov ebp, 0x42
mov r15d, 1
jmp 0x401bb9
mov byte [rsp + 0xf], 1
mov ebp, 0x59
jmp 0x401bb9
mov edi, str.basic_string::append
call sym.std::__throw_length_error
mov edi, str.basic_string::append
call sym.std::__throw_length_error
call sym.imp.__stack_chk_fail
nop dword [rax + rax]
push r15
push r14
mov r14, rdi
push r13
push r12
mov r12, rdx
push rbp
push rbx
mov rbp, rsi
sub rsp, 0x18
mov rdi, qword [rdi + 8]
cmp rdi, qword [r14 + 0x10]
je 0x401d30
mov eax, dword [rdi - 4]
lea rdx, [rdi - 4]
sub rdx, rsi
mov dword [rdi], eax
lea rax, [rdi + 4]
mov qword [r14 + 8], rax
mov rax, rdx
sar rax, 2
test rax, rax
je 0x401d19
sub rdi, rdx
call sym.imp.memmove
mov eax, dword [r12]
mov dword [rbp], eax
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
mov r15, qword [r14]
mov rax, rdi
mov rbx, rdi
sub rax, r15
sar rax, 2
test rax, rax
je 0x401de0
lea r13, [rax + rax]
cmp rax, r13
jbe 0x401e38
mov rdx, rbp
mov r13, -4
sub rdx, r15
mov rdi, r13
mov qword [rsp + 8], rdx
call sym.operatornew
mov r15, qword [r14]
mov rbx, qword [r14 + 8]
mov r8, rbp
mov rdx, qword [rsp + 8]
mov rcx, rax
add r13, rax
sub r8, r15
add rdx, rcx
mov eax, dword [r12]
je 0x401d93
mov dword [rdx], eax
mov rax, r8
sar rax, 2
test rax, rax
jne 0x401e18
sub rbx, rbp
lea r8, [rcx + r8 + 4]
mov rax, rbx
sar rax, 2
test rax, rax
jne 0x401df8
add rbx, r8
test r15, r15
je 0x401dcd
mov rdi, r15
mov qword [rsp + 8], rcx
call sym.operatordelete
mov rcx, qword [rsp + 8]
mov qword [r14], rcx
mov qword [r14 + 8], rbx
mov qword [r14 + 0x10], r13
jmp 0x401d20
nop dword [rax]
mov rdx, rsi
mov r13d, 1
sub rdx, r15
shl r13, 2
jmp 0x401d63
nop dword [rax]
mov rdi, r8
mov rdx, rbx
mov rsi, rbp
mov qword [rsp + 8], rcx
call sym.imp.memcpy
mov rcx, qword [rsp + 8]
mov r8, rax
jmp 0x401db3
nop dword [rax]
mov rdx, r8
mov rdi, rcx
mov rsi, r15
mov qword [rsp + 8], r8
call sym.imp.memmove
mov r8, qword [rsp + 8]
mov rcx, rax
jmp 0x401d9f
movabs rax, 0x3fffffffffffffff
cmp r13, rax
ja 0x401d56
mov rdx, rsi
sub rdx, r15
test r13, r13
jne 0x401dec
mov r8, rdx
xor ecx, ecx
jmp 0x401d88
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200f76]
push rbp
lea rbp, [rip + 0x200f7e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401eb6
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401ea0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
jae 0x401f59
jb 0x401f60
pop rdi
movsxd rbp, dword [rdi + 0x64]
movsxd rbp, dword [rdi + 0x6e]
je 0x401f6b
outsd dx, dword [rsi]
insb byte [rdi], dx
jo 0x401f68
jo 0x401f6b
jo 0x401f6e
jo 0x401f74
jo 0x401f77
jo 0x401f7a
pop rdi
xor dword [rdi + 0x31], ebx
movsxd rsi, dword cs:[rax + 0x70]
add byte [rax], al
add byte [rdx + 0x72], dh
jb 0x401f94
cmp eax, 0x2626303d
outsd dx, dword [rsi]
outsd dx, dword [rsi]
cmp eax, 0x2626303d
jns 0x401fa9
cmp eax, 0x2626303d
cmp eax, 0x2626303d
cmp eax, 0x2626303d
jbe 0x401fbb
cmp eax, 0x303d
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rbp, dword [rsi + 0x74]
pop rbx
xor byte [rbp + 0x3c], bl
cmp eax, 0x63262631
outsb dx, byte [rsi]
je str.SZ_ret___n
xor dword [rbp + 0x3c], ebx
cmp eax, 0x63262631
outsb dx, byte [rsi]
je 0x401fc5
xor bl, byte [rbp + 0x3c]
cmp eax, 0x3e620031
cmp eax, 0x61620030
jae 0x401fe2
movsxd rbx, dword [rdi + 0x73]
je 0x401ff0
imul ebp, dword [rsi + 0x67], 0x70613a3a
jo 0x401fec
outsb dx, byte [rsi]
add byte fs:[rcx + 0x56], bl
add byte [rdx + 0x47], dl
add byte [rdx + 0x4f], al
add byte [rip + 0x25642564], ah
and eax, 0x25642564
and eax, 0x25642564
add byte fs:[rbx + 0x61], al
jae 0x402009
and byte [rbx], ah
and eax, 0x203a64
push r8
push r11
push rbx
add byte [rip + 0x53000a73], r12b
push rbx
pop rdx
sub byte [rdx + 0x65], dh
je 0x401fea
cmp eax, 0x6e3d
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
imul ebp, dword [rsi + 0x74], 0x69616d20
outsb dx, byte [rsi]
sub byte [rcx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
insb byte [rdi], dx
insb byte [rdi], dx
and byte [rax + 0x6f], dh
ja 0x402054
outsd dx, dword [rsi]
sub byte fs:[rsp + rbp*2 + 0x2c], ch
and byte [rsp + rbp*2 + 0x29], ch
add byte [rax], al
add byte [rax], al
add dword [rbx], ebx
add edi, dword [rbx]
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add ah, ch
ljmp [rax + rax - 0x13b40000]
call qword [rdx + rax]
add byte [rax], al
push qword [rdx + rax]
add ah, cl
jl 0x40201e
add byte [rax], al
int3
int1
call rsp
add byte [rax], al
add byte [rdx + rsi*8 + 0xecffff], bl
add byte [rax], al
or al, 0xf3
push qword [rcx + rax]
add byte [rsi + rsi*8 - 1], bh
inc esp
add dword [rax], eax
add ah, bl
cld
inc dword [rcx + rax]
add byte [rax], al
insb byte [rdi], dx
dec dword [rdx + rax - 0x1240000]
call rsp
add al, byte [rax]
add byte [rax + rax], dl
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x402077
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4020a7
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
cmp dl, ch
call qword [rax + 1]
add byte [rax], al
add byte [rsi], cl
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], r8b
add al, dh
dec edx
add byte [rax], al
add byte [rax], al
add dh, byte [rcx + 0x100e]
add byte [rax + rax], dl
add byte [rax], al
pop rsp
add byte [rax], al
add byte [rax + 0x61fffff1], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax + rax], dh
add al, dl
sti
call qword [rax + 1]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx + 0x500e4707], al
jge 0x402136
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rdx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x402169
add esi, eax
or eax, dword [rax]
add ebx, dword [rbx]
or al, 7
or byte [rax + 0x4c000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
nop
int1
jmp qword [rbx + rax]
add byte [rsp], al
and al, byte [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx + 0x600e4d07], al
add edi, dword [rcx]
add cl, byte [rdx]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], r8b
add byte [rax + rax], dh
add byte [rax + 0x58fffff4], dh
add byte [rax], al
add al, 0xf8
and al, byte [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx + 0x700e4407], al
add dl, byte [rdx + rcx + 0xe]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rbx + rcx], al
pop rsp
add byte [rax], al
add byte [rcx + rax - 0x15d00000], al
cmp byte [rax + rax], al
add byte [rax], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bd], es
cmp byte [rbx + 0x400e4907], al
add al, byte [rdx + 0xe]
push rcx
push rax
add dl, byte [rdi + 0xe]
add esi, dword [rbp + 2]
or cl, byte [rsi]
cmp byte [rbx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
in al, 1
add byte [rax], al
adc dh, ch
push qword [rcx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add ah, bh
add dword [rax], eax
add al, bl
sti
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x4022c2
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
add r8b, byte [rax]
add byte [rax], al
cld
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
adc byte [rdi + 5], ah
add byte [rax], al
cwde
add ah, cl
add ecx, esp
add dl, al
and al, byte [rax]
add bh, bh
inc dword [rcx]
sbb byte [rsi + 0x5e301], al
add byte [rbx - 0x3fc26f8], ah
or eax, dword [rax]
xchg eax, ecx
or al, 5
add byte [rax], al
or al, 0xf
cld
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
adc byte [rax], 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + 0x11], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, ch
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, 0x400a
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add ah, dl
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sub eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], bl
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 2
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x402f13
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rax], dl
or byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add al, bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword es:[rax]
add byte [rax], al
add byte [rax], al
or eax, dword ss:[rax]
add byte [rax], al
add byte [rax], al
or r8d, dword [rax]
add byte [rax], al
add byte [rax], al
push rsi
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or ax, word [rax]
add byte [rax], al
add byte [rax], al
jbe 0x403065
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400b], al
add byte [rax], al
add byte [rsi + 0x400b], dl
add byte [rax], al
add byte [rsi + 0x400b], ah
add byte [rax], al
add byte [rsi + 0x400b], dh
add byte [rax], al
add dh, al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
out 0xb, al
add byte [rax], al
add byte [rax], al
add dh, dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x403140
je 0x403149
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x403157
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x403154
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax], bl
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax], dl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or dword [rax], eax
ror byte [rax], 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add al, bl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or eax, dword [rax]
mov eax, 0x400a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
loopne 0x403234
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400c3000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add ah, dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add ah, dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add byte [rax + 0x20], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], dl
add ah, ah
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
call 0x40931a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
mov eax, 0x6030
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, dh
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], dh
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x11], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rbx], bl
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0x4011], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
call 0x4094b2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ch
add byte [rax], dl
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add al, dl
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x4010], al
add byte [rax], al
add byte [rcx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add dword [rax], eax
add byte [rcx], al
add byte [rdx], dl
add al, ah
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rcx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ah
add dword [rax], eax
add byte [rax], al
add byte [rcx], dl
add ah, dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dh
add byte [rcx], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add qword [r8], rax
add byte [rax], al
add byte [rax + rax], dl
clc
sub eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsp
add dword [rax], eax
add byte [rax], al
add byte [rax + rax], dl
call 0x4095d2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 1], ch
add byte [rax], al
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x20000003], al
add byte [rdx], bl
add byte [rax + 0x6030], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ch
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
xor qword [rax], rsp
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x4035fb
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x12000001], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x12000001], dh
add byte [rsi], cl
add al, dl
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x12000003], cl
add byte [rsi], cl
add al, al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rcx], 0x200000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, ch
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bh
add dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add al, dl
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + 1], dl
add byte [rax], al
add byte [rdx + 2], dl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x12000002], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, al
add dword [rax], eax
add byte [rdx], dl
add byte [rdi], cl
add ah, dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x12000002], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bh
add byte [rax], al
add byte [rdx], dl
add byte [rsi], cl
add al, al
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
retf 0
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000002], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x20000003], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 3], cl
add byte [rax], al
adc dword [rax], eax
adc byte [rax], al
loopne 0x4037b8
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rax
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, ah
add eax, dword [rax]
add byte [rcx], dl
add byte [rbx], bl
add byte [rcx + rsi + 0x60], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
imul eax, dword [rbx], 0
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x10000003], al
add byte [rdx], bl
add byte [rax + 0x6030], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000003], dl
add byte [rax], al
add byte [rax + 0x400b], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bl
add eax, dword [rax]
add byte [rcx], dl
add bl, byte [rdx]
add al, cl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test byte [rax], al
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
pop rsp
xor dword [rax], esp
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x12403858
add byte [rsi], cl
add byte [rax + 0x16], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 6], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], dl
add bl, byte [rdx]
add al, al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
std
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x1e], ah
add byte [rax], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, 0x12000004
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ah
add al, 0
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x4012], dl
add byte [rax], al
add byte [rcx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax + rax]
add byte [rax], dl
add byte [rbx], bl
add al, cl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 4], dl
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
pop rax
xor dword [rax], esp
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
jo 0x40394b
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rsp
add al, 0
add byte [rcx], dl
add byte [rbx], bl
add byte [rax + 0x31], ah
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, al
add eax, dword [rax]
add byte [rcx], dl
add byte [rbx], bl
add byte [rcx + rsi + 0x60], ah
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rsi
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 1], dl
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
js 0x4039ab
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x12000004], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dl
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
add eax, 0x110000
sbb eax, dword [rax]
add byte [rcx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
add eax, 0x100000
sbb al, byte [rax]
enter 0x6030, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp eax, 0x12000005
add byte [rax], al
add al, dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jno 0x403a1f
add byte [rax], al
and al, byte [rax]
add al, dl
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + 1], dl
add byte [rax], al
add bh, al
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild word [rip + 0x120000]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add qword [r8], rax
add byte [rcx], dl
add byte [rbx], bl
add byte [rcx + rsi + 0x60], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x110000
sbb eax, dword [rax]
push 0x6031
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
hlt
add eax, 0x120000
add byte [rax], al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add eax, dword fs:[rax]
add byte [rax], al
add byte [rax], al
add byte [rsi + rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add al, 0
add byte [rdx], dl
add byte [rbx], cl
add byte [rax + 0x400a], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
insb byte [rdi], dx
xor dword [rax], esp
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rsi]
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
and byte [rcx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x403b82
jne 0x403b76
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x403b36
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403bb4
jb 0x403bba
pop rdi
jne 0x403bc3
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x403bbd
je 0x403bb9
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403bd9
jb 0x403bdf
pop rdi
jne 0x403be8
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x403beb
jns 0x403bdb
outsb dx, byte gs:[rsi]
je 0x403bf2
jns 0x403b82
jb 0x403be6
insd dword [rdi], dx
pop rdi
jne 0x403bf8
insd dword [rdi], dx
jns 0x403b8e
pop rdi
pop rdi
jb 0x403bf4
insd dword [rdi], dx
pop rdi
jne 0x403c06
insd dword [rdi], dx
jns 0x403bfb
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403c06
jns 0x403c06
outsb dx, byte gs:[rsi]
je 0x403c1d
jns 0x403bad
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x5a], bl
pop rdx
jo 0x403c28
ja 0x403c28
outsd dx, dword [rsi]
js 0x403c37
xor dword [r9], r15d
pop rdi
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
pop rdx
xor al, 0x6d
imul ebp, dword [rsi + 0x45], 0x5f5f3931
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x403c75
pop rdi
pop r15
pop rdi
pop rdx
jo 0x403c78
ja 0x403c78
outsd dx, dword [rsi]
js 0x403c87
add byte [rdi + 0x5f], bl
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403cbf
jns 0x403cbf
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403cd0
jns 0x403cd0
jae 0x403ce7
jb 0x403cea
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
push rbx
je 0x403cb7
xor byte [rdi + 0x5f], bl
je 0x403cf2
jb 0x403cfb
ja 0x403ced
insb byte [rdi], dx
outsb dx, byte gs:[rsi]
je 0x403cfc
pop rdi
jb 0x403d0a
outsd dx, dword [rsi]
jb 0x403ceb
movsxd rax, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
insd dword [rdi], dx
insd dword [rdi], dx
jae 0x403d15
je 0x403cf2
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x6c5f5f00
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x403d4c
jb 0x403d4f
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x403d41
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x403d62
jae 0x403cf2
jo 0x403d69
je 0x403d69
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x403d40
jbe 0x403d71
movsxd rsi, dword [rdi + rbp*2 + 0x72]
imul rdx, qword [r11 + 0x61], 0x45456949
xor dword [rbx], esi
pop rdi
pop r15
imul ebp, dword [rsi + 0x73], 0x5f747265
jne 0x403d9f
imul rax, qword [r13 + 0x45], 0x394e7645
pop rdi
pop rdi
outsb dx, byte [esi]
jne 0x403d95
movsxd rdi, dword [rax + 0x78]
xor dword [rdi], esi
pop rdi
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
jb 0x403dae
insb byte [rdi], dx
pop rdi
imul esi, dword [rbp + 0x72], 0x726f7461
push r8
imul edx, dword [rbx + 0x31], 0x4445455f
jo 0x403da6
push rsp
pop rdi
add byte [rdi + 0x5a], bl
insb byte [rdi], dx
push rax
jbe 0x403da1
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
jae 0x403de6
jb 0x403dea
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x705f5f00
jb 0x403df7
outsb dx, byte [rsi]
je 0x403df7
pop rdi
movsxd rbp, dword [rax + 0x6b]
pop r15
xor ch, byte [rsi]
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x403e23
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x403e28
pop rdi
je 0x403e30
js 0x403e36
je 0x403e0f
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x403e19
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403e58
movsxd rbx, dword [rdi + 0x73]
je 0x403e66
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403e61
je 0x403e76
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rax], esi
pop rdi
pop r15
jb 0x403e7d
jo 0x403e86
movsxd rsp, dword [rbp + 0x45]
insd dword [rdi], dx
insd dword [rdi], dx
push rax
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x403ea3
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x403ecb
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x403edf
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403ef4
pop rdi
jae 0x403f0a
jb 0x403f0d
add byte [rdi + 0x5a], bl
push rbx
je 0x403ed7
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403f16
movsxd rbx, dword [rdi + 0x73]
je 0x403f24
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403f1f
je 0x403f34
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rbp + 0x76], r8d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5f], bl
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
xor esp, dword [rdi + 0x61]
outsd dx, dword [rsi]
jbe 0x403ef8
pop rdi
pop rdi
jae 0x403f6c
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x656d0074
insd dword [rdi], dx
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x403f81
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x335a5f00
imul eax, dword fs:[rax], 0x73625f5f
jae 0x403f97
jae 0x403fae
jb 0x403fb1
add byte [rdi + 0x5f], bl
jae 0x403fb6
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
add byte [rdx], dh
pop rdi
pop rdx
push rbx
je 0x403f9b
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403fda
movsxd rbx, dword [rdi + 0x73]
je 0x403fe8
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403fe3
je 0x403ff8
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
jo 0x40400a
outsb dx, byte gs:[rsi]
push r8
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x403fe9
pop rdi
pop rdi
je 0x404025
jb 0x40402e
ja 0x404020
pop rdi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsi, dword [rsi + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404016
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404055
movsxd rbx, dword [rdi + 0x73]
je 0x404063
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40405e
je 0x404073
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
insd dword [rdi], dx
jne 0x404089
je 0x40407d
insd dword [rdi], dx
insd dword [rdi], dx
push rax
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
xor esi, dword [rdx + 0x65]
je 0x404079
xor eax, 0x31787863
xor dword [rax], eax
pop rdi
je 0x4040a5
add byte [rdi + 0x5f], bl
js 0x4040c2
pop rdi
jo 0x4040b2
jb 0x4040c2
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
outsb dx, byte [rsi]
ja 0x4040d8
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x4040b5
jbe 0x4040e6
movsxd rsi, dword [rdi + rbp*2 + 0x72]
imul rdx, qword [r11 + 0x61], 0x45456949
xor dword [rbx], esi
pop rdi
pop r15
imul ebp, dword [rsi + 0x73], 0x5f747265
jne 0x404114
imul rax, qword [rbp + 0x45], 0x394e7645
pop rdi
pop rdi
outsb dx, byte [esi]
jne 0x40410a
movsxd rdi, dword [rax + 0x78]
xor dword [rdi], esi
pop rdi
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
jb 0x404123
insb byte [rdi], dx
pop rdi
imul esi, dword [rbp + 0x72], 0x726f7461
push r8
imul edx, dword [rbx + 0x31], 0x4445455f
jo 0x40411b
push rsp
pop rdi
add byte [rdi + 0x55], bl
outsb dx, byte [rsi]
ja 0x40413d
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x404150
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
insd dword [rdi], dx
insd dword [rdi], dx
movsxd rsi, dword [rax + 0x79]
pop r15
xor ch, byte [rsi]
xor dword [rax + rax], esi
add byte [edi + 0x5a], bl
cmp dword [rbx + 0x6f], esp
outsb dx, byte [rsi]
jae 0x404178
jb 0x40417b
movsxd rsi, dword [rcx + rbp*2 + 0x69]
imul eax, dword [rax], 0x6e69616d
add byte [rdi], ch
movsxd rbp, dword [rsi + 0x74]
add byte [rax], al
jae 0x404194
insd dword [rdi], dx
je 0x40417f
add byte [rsi], ch
jae 0x404197
jb 0x404199
add byte [rsi], ch
jae 0x404193
jae 0x4041a1
jb 0x4041a3
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x4041a4
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x4041b2
outsb dx, byte cs:[esi]
jne 0x404180
jne 0x4041be
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x40418e
push 0x687361
jns 0x4041d7
jae 0x4041e4
insd dword [rdi], dx
add byte [rsi], ch
jns 0x4041df
jae 0x4041e7
jb 0x404175
outsb dx, byte cs:[esi]
jne 0x4041a8
jbe 0x4041e1
jb 0x4041f1
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x4041b5
jbe 0x4041ee
jb 0x4041fe
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x4041f9
insb byte [rdi], dx
jns 0x404208
add byte [rsi], ch
jb 0x404203
insb byte [rdi], dx
jo 0x40420f
je 0x4041a5
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x4041de
outsd dx, dword [esi]
je 0x4041b4
je 0x40421c
js 0x40422d
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x404232
je 0x404228
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x40424b
jo 0x40425f
pop rdi
je 0x40424f
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x40425d
jns 0x4041fe
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x404279
jns 0x40420a
push 0x63
jb 0x40420f
jns 0x404281
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x40428b
je 0x404221
je 0x404287
add byte [rsi], ch
jae 0x40429e
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x404235
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rip + 0x40], al
add byte [rax], al
sbb byte [rip], al
add byte [rax], al
mov edi, 2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
add byte [rax], al
add byte [rax], al
add al, bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
or byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
ror byte [rax], 0x40
add byte [rax], al
add byte [rax], al
add al, al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
or byte [rax], al
add byte [rax], al
add byte [rax], al
fmul dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x4044db
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x19000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x400a], bh
add byte [rax], al
add byte [rax + 0xa], bh
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
loopne 0x40455c
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rax
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1000000], bl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edx
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
add byte [rax], al
add byte [rax], al
add ah, dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rcx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
hlt
add byte [rax], al
add byte [rax], al
add ah, dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte fs:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], bl
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov word [rdx], es
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ah
and al, byte [rax]
add byte [rax], al
add byte [rax], al
in al, 0x22
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
call 0x404782
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sub eax, 0x60
add byte [rax], al
clc
sub eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6030], bh
add byte [rax], al
add byte [rax + 0x30], bh
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
enter 0x30, 0
add byte [rax], al
add byte [rax], al
cwde
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [r8], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], cl
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rbx], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
cmp eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
