call 0x401d18
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401b30
add ebx, ebx
je 0x401ae6
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x401b1e
cmp rbp, -4
ja 0x401b1e
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x401b06
add ecx, 4
mov dl, byte [rax]
je 0x401b2e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x401b1e
ret
cld
pop r11
cmp r8b, 2
je 0x401b46
jmp 0x401bc3
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x401b56
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401b3e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401b6e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401b5b
sub eax, 3
jb 0x401b8c
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x401bc3
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x401bb3
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401bb1
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401ba0
cmp rbp, -0xd00
adc ecx, eax
call 0x401af2
jmp 0x401b46
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401c9c
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401c3a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x401c86
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401c59
push 0x3a707474
jne 0x401cb2
js 0x401c72
jae 0x401cac
outsb dx, byte cs:[rsi]
je 0x401c6b
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x401cd9
jb 0x401ccb
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x401cf6
jb 0x401d09
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21493c
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21493c
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x401bd4
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x401cff
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401cad
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add al, byte [rax]
jmp rbp
call 0x706f1da7
jb 0x401dbf
movsxd rbp, dword [rdi]
jae 0x401db9
insb byte [rdi], dx
js 0x401dbf
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401d9f
cmp rsi, rcx
jae 0x401da7
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x401d86
cmp al, 0x8f
ja 0x401d86
cmp byte [rsi - 2], 0xf
je 0x401d8c
sub al, 0xe8
jg 0x401d89
push rdi
cmp al, 1
ja 0x401d74
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x401d77
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x401da4
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401dfb
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c2279
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401e3f
mov al, 0xa
jmp 0x401e3f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401e1b
inc ebx
mov al, 0
jmp 0x401e43
mov al, 2
jmp 0x401e43
mov al, 3
jmp 0x401e43
mov al, 0x3c
jmp 0x401e43
push rcx
rcr ah, 1
fstp st(7)
jle 0x401e84
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x401e96
jg 0x401e88
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a760b
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x401ee2
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb705f
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x401eea
cmp esi, 0x21585055
jne 0x401eee
jge 0x401ee0
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x401ee3
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x401ee7
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x401f93
pop rcx
or al, 0x3b
jb 0x401f99
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401f0b
jmp 0x401f0d
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661e4e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf54096
in eax, dx
jg 0x401f45
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401f8b
mov bh, 0x2a
add edi, 0x10
jmp 0x401f88
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x401fc5
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x402001
jne 0x402018
fstpnce st(6), st(0)
jle 0x401fe1
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x402017
jrcxz 0x40204b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1bfaf
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4020ca
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x40208a
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x5829665f
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4020fd
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x402097
and ecx, 7
or al, 0xeb
jae 0x402102
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x402137
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x402175
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x40212e
push rax
call 0xffffffff868d1e1b
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x402138
std
cmp edi, esi
xchg eax, edi
jle 0x40218d
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96719
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x40218b
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x402179
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x4021a2
js 0x4021e2
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x402274
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad34af
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x402295
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x40229a
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21d4c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x402228
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
mov ah, 7
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax - 0x80], al
movabs byte [0x92], al
and byte [rcx], al
mov eax, 0xc5000039
adc byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x40234e
je 0x402357
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402320
mov dh, 0x7d
jbe 0x40231f
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x402358
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x5900006], bl
add byte [rdx], ah
or dword [rax + 0x80f9027], edx
add byte [rax + 9], ah
add al, dh
in eax, 0
or dh, byte es:[rcx]
or al, byte [rdi + 0xb]
nop
cmpxchg byte [rdi + rdx], cl
or al, 0
or byte [rip + 0x7c81300], 0xc8
and byte [rsi], cl
add byte [rax], dh
wbinvd
in al, 3
in al, 0
xor al, 0x10
add al, dl
add cl, bh
add esi, esi
adc dword [rax], eax
hlt
xor eax, 0xf8001247
cmp byte [rax], ah
jg 0x4022ef
cld
adc eax, dword [rax]
mov esp, 0xe8001445
or dword [rsp + rcx + 0x161715], ebp
add byte [rsi - 7], cl
add al, 0xf2
add dword [rdi], edx
add byte [rax], cl
sbb byte [rax], al
clc
jl 0x402310
cld
add byte [rcx], bl
add byte [rax], al
push rax
sbb al, byte [rax]
loopne 0x4023d5
sbb dword ds:[rbx], 0x1c510000
adc ebx, dword [rip + 0x129bbc9]
add al, 0
int1
dec dword [rdx + rbx*4]
xchg byte [rbx], ch
mov ebx, dword [rbx]
mov edi, 0x60029719
and dword [rcx], ebx
insb byte [rdi], dx
sbb rdx, qword [rdi]
movabs al, byte [0x5f44e02e906486c5]
test al, cl
xchg eax, edi
cmpsd dword [rsi], dword ptr [rdi]
add dword [rdi], edx
push rbx
pop r12
enter -0x513f, 0x7a
add byte [r15], r9b
xchg byte [rcx], ah
in al, dx
mov byte [rdi - 0x64d9285b], dl
je 0x402380
stosd dword [rdi], eax
loopne 0x40245f
mov byte [rsi], 0x1b
xchg eax, edx
rcl dword [rdi], -0x1f
fld xword [rdi]
loop 0x4023f9
sbb dword [rax + rcx*2 - 0x18], esp
call 0xffffffff90b29604
sal byte [rip + 0x4193b012], 1
adc eax, dword [rcx]
xor eax, 0x3906d70b
jnp 0x402480
xor al, byte [rcx]
scasd eax, dword [rdi]
sub byte [rcx - 0x70], ah
in eax, dx
adc eax, 0x746437af
outsd dx, dword [rsi]
jge 0x402481
insd dword [rdi], dx
mov eax, 0x1d178bb7
and dword [rdi + rax*4 - 0x13b968b9], ecx
mov spl, al
stosb byte [rdi], al
xchg dword [r13 + 9], r9d
movsxd rdx, dword [rdi - 0x40]
adc al, 0xaf
rol dword [rsi + 0x6c], 1
cdqe
xchg eax, edi
in al, 0x47
inc dword [rsi]
nop
lea edx, [rdi - 0x43]
or edi, ecx
and byte [rax], ch
or al, 0xd2
int1
lea esp, [rdi]
or bl, byte [rdi]
ror dword [rsi + 0x36], -0x33
in eax, dx
and dh, byte [rsi]
sbb dl, byte [rdi]
sbb al, 0xe4
in al, 0xc9
sub eax, dword [rdx]
out 0x2e, al
and ebx, dword [rbx + 2]
test byte [rip + 0x3f8b258c], ah
or dword [rsi + rsi], 0xffffff9a
xor dword [r15 + r10 + 6], r10d
cmp edi, dword [rcx]
enter -0x2822, 0x21
jb 0x4024d0
sbb al, 0xe4
ja 0x4024a6
sal byte [rdx + rax], 0xc1
or ecx, ecx
shr dword [rsi], -0x15
sub al, byte [rdi + 2]
add eax, dword [rdi]
sbb esp, esp
in al, dx
lodsb al, byte [rsi]
cvtpi2ps xmm3, mm4
and bh, byte [rcx]
enter 0x2720, 0x50
sub al, 0xc9
cmp dword [rbx - 0x7b], eax
cli
add ebx, dword [rax + 0x33]
enter -0x5dda, 0x20
xlatb
mov cl, 0x2e
adc byte [rsi], cl
add eax, dword [rdi]
xlatb
cmp eax, ecx
leave
sal dword [rdi + 0x22], 0x21
cmp byte [rip - 0x7c986ffc], bl
cmp al, 0x46
sub byte [rbx], al
jae 0x4024e2
mov word [rdi], fs
xchg dword [rsi + rdx*2], eax
and bh, bh
stosd dword [rdi], eax
add al, 8
mov ebx, 0x6cbf6790
sub edi, dword [rbx - 0x61b1beb9]
jo 0x4024cd
add al, 0x7f
out dx, al
push rdi
xchg eax, ecx
cld
int1
pop rdi
or byte [rcx], bl
in al, 0xe4
adc al, 0x1f
sbb edi, esi
sar dword [rax], 0x79
jbe 0x402529
add eax, 0xe23ca2f
outsd dx, dword [rsi]
in al, 0xc9
push rsi
add eax, 0x58f3380
test byte [r11 + 0x2fae5d83], r10b
cmc
cmp al, 0x79
sbb dword [rsp + rsi*8], 0x82061805
and ecx, dword [rsi + 0xe]
jbe 0x40259b
cmp dword [rdi], edx
jp 0x402564
pushfq
jno 0x4024d3
imul edi, dword [r14 + 0x22], 0x6f
pop rsi
jns 0x40250d
xchg eax, ebx
xor dword [rcx + 1], 0x26
packuswb mm1, qword [rdx]
add dword [rcx + 0x4e], eax
sahf
cmp al, 0x90
sub byte [rbx], dh
pop rax
lodsb al, byte [rsi]
enter 0x6bc, 6
add bl, byte [rdi]
pushfq
sbb eax, 0x2fde2ec2
sub al, byte [rdi]
out dx, eax
test al, 0x39
enter -0x7ca0, 0x22
mov r14b, 0x1f
leave
cmp dword [rsp + 0x53], eax
adc ecx, dword es:[rsi]
xor cl, al
xor dword [rdi + 0xbc727b0], ebx
jns 0x402600
nop
push rbx
mov esi, 0xf2226207
in al, dx
add eax, 0xcf07ecc6
or byte [rax], cl
mov edi, 0x40bb261e
jb 0x4025da
or byte [rcx - 0x3f9cf8e9], al
movabs byte [0x360e08900f043f11], al
and al, 0x27
je 0x40257c
pop rdi
xchg byte [rdi + rdx], ch
enter 0x4e41, 0x1d
add cl, byte [rcx]
xor byte [rax], bh
ftst
lodsb al, byte [rsi]
or al, 0xc7
pop rdi
adc eax, 0x48748109
push rdi
or di, bp
imul esp, eax, 0x9a17b02
out dx, eax
mov ebx, 0x1e42103f
insb byte [rdi], dx
add al, cl
pop qword [rax + 0xd]
sahf
jno 0x402601
or dl, byte [rdi + 0x3a]
cmp al, 0xac
mov word [rdx], cs
push rax
movabs al, byte [0x2c24f2178c0baf0a]
iretd
or bl, byte [rdi - 0x261bd0a8]
add dword [rbx], ecx
xlatb
jp 0x402642
and byte [rbx], cl
fild word [rsi + 0x4017a4e4]
or edx, dword [rdi]
xor cl, al
leave
rcl dword [rdi], -0x78
and byte [rdx - 0x61], ah
xor ecx, dword [rax]
or dword [rdx + rbp*8], 0x29
ror byte [rsi], 0xc9
ret 0x702
xor ecx, dword [rdi + rcx*4]
mov esp, 0x52bd6790
or al, 0x7f
test byte [rsi], ah
test byte [rax], al
pop rdi
and al, 0x27
scasd eax, dword [rdi]
cmp byte [rdx + 0x2f], ch
adc ah, byte [rdi - 0x6c6f9beb]
ja 0x4026b1
add eax, 0xe4e4e872
sbb dword [rdi + 0x93f0c7f], eax
sub eax, 0x1c9e42f4
enter -0x53f4, 0x23
or eax, 0x9e42f59e
cmp eax, 0x4f0d5130
and byte [rdx - 0x62], al
int1
outsb dx, byte [rsi]
or eax, 0xce30f89f
pop rsi
xchg eax, esp
or eax, 0xbf0dbc5f
push rax
sbb dword [rdi], eax
int3
or eax, 0x38c0bc30
and al, 0xd9
or eax, 0x2f0e18e7
mov al, 0x17
or byte [rdi + 0x25], dl
xlatb
movsxd rcx, dword [rsi]
enter 0x17b3, 8
scasd eax, dword [rdi]
jmp 0x4026bc
xlatb
sub al, 0x23
add ch, byte [rdi]
nop
pop rsi
sbb dword [rdi], ecx
add eax, 0xbb790bd6
pop rsp
packuswb mm1, qword [rdx + rsi*2]
in al, dx
jne 0x4026d9
pop rdi
jbe 0x4026f4
cmp dword [rbx - 0x113637ce], esi
cmpsd dword [rsi], dword ptr [rdi]
sbb dh, byte [rbp - 0x1ec37a45]
adc cl, bh
packuswb mm6, qword [rsp + rbp]
fldcw word [rcx]
jrcxz 0x4026ce
cmp byte [rax], dl
ja 0x402704
outsd dx, dword [rsi]
adc byte [rdi - 0x1b1bc7d0], r9b
and eax, 0xbcef1059
nop
test dword [rax], edx
pop rdi
leave
and dword [rdi + 0x5d839310], esi
and byte [rdi], al
rol dword [rdi + 2], cl
sub eax, 0x90641921
in al, dx
cld
adc esi, esi
sahf
adc edi, eax
sal byte [rax], 0x4d
adc dword [rdi + 0x790bd279], ecx
test dword [rsi], ebp
adc byte [rcx], 0x17
and byte [rax], ah
and al, 0x27
cmp dword [rax], esp
cdq
adc dword [rbx + rdi], edi
and al, 0xdf
and eax, dword [rax]
and al, 0x9b
adc dword [rdi + 0x2f19e4e], edi
jmp 0x300b2654
sub ebp, dword [rdi]
in al, 0xc9
call qword [r9]
xchg eax, esp
xor dword [rip + 0x24384e12], edi
pop rdi
xor al, 0x3f
adc dh, bh
sbb al, 0x64
mov al, 0x41
push 0x17
sub al, 0x92
xchg eax, ebx
sbb dword [rbp + 0xe23a711], 0x30
pop rsi
enter 0x3813, 0x12
outsd dx, dword [rsi]
fidiv dword [rcx]
int3
add dword [rbx - 0x20ec29e9], edx
rcl byte [rcx + 0x4f], 1
adc edi, dword [rbx - 0x7f]
sbb eax, 0x132f5192
out dx, eax
adc rbx, qword [r15 + 0x43]
fadd dword [rbp - 0x56d7fcc4]
iretd
loopne 0x4027b6
sub ecx, dword [rdi - 0x36f130d2]
leave
add dl, byte [rax + rbx*8]
adc al, 0x5f
stosb byte [rdi], al
in al, dx
add bh, byte [rcx + 0x21]
scasb al, byte [rdi]
adc al, 0xfd
or ebp, ebx
fldenv [rcx]
sbb edx, dword [rip + 0x1f33dd47]
test byte [rdx - 0x62], 0xd0
jno 0x4027d3
ja 0x402782
xor ah, byte [rax - 0x3dfa70eb]
or edi, dword [rcx + 0x6c]
xor esp, edx
adc eax, 0x3c9c8397
loope 0x4027c7
adc eax, 0x78321df7
pop rdx
and al, 0x5e
enter 0x1693, -0xd
sub ecx, dword [rax + 0x7263f716]
ret 0xb60b
movabs al, byte [0xf716c42709e42f9f]
int3
xor esp, ebp
xchg eax, ebx
jb 0x40280c
in al, dx
in al, 9
sbb al, 0x92
ror byte [rip + 0x2b925717], 0x42
sahf
sbb al, 0xe4
xor edi, dword [rax]
outsb dx, byte [rsi]
xor byte [rbx], dh
pop rsi
and al, dh
push 0x17753f17
out 0x39, eax
cmp eax, ecx
leave
xor dword [rcx], edx
and byte [rax + 0x72], bh
mov al, 0x21
out 0x23, al
xchg eax, esp
add dword [rsi + rbx*2 + 0x30af4f20], esp
sbb byte [rbx + 0x18], al
xchg dword [rbx - 0x7f], edi
ror dword [rbx], 1
cdq
sbb byte [rdi], bl
mov esi, 0xd8437718
test dword [rdx + rbx*4], edi
xor ebp, ecx
pop rdi
add dword [rcx], edi
enter -0x4c37, 0x19
pop rdx
and dword [rdi + 0x15], ebp
sbb eax, ebx
add eax, 0x195f02f6
mov edi, 0x64247ba
cmp dword [rcx], edi
jle 0x402896
call 0x1a508cf3
push rax
and byte [rdx], dh
sbb ah, byte [rsi + rbp]
in al, 0x19
xchg dword [rbx - 0x615026d4], esp
and dword [rcx], ebx
sub al, 0x58
sbb bh, byte [rdi - 0x6b]
xor dl, byte [rax - 0x50bd0b64]
sbb bh, byte [rdi + 0x36419306]
fucomp st(5)
adc dh, byte [rax]
adc byte [rip - 0x6f8ed86d], al
std
pop rsp
sbb ecx, dword [rdi + 0x53]
add ecx, dword [rbx - 0x3963b9a9]
out dx, eax
add bl, byte [rbx]
iretd
jmp 0x26431eb3
sbb ebp, edi
jb 0x4028cd
mov edi, 0x3c85c083
out dx, al
sub eax, 0x832857cf
or al, 0x36
and al, 0xd1
sub byte [rdi - 7], bh
jg 0x4028d0
mov esp, dword [rbx + 0x72]
je 0x402940
je 0x402944
movsxd rbx, dword cs:[rdi + 0x4a]
push r10
pop rdi
lodsq rax, qword [rsi]
std
in eax, dx
push r11
push rsp
or dword [rax + 0x65], ecx
jb 0x40294a
imul ebx, dword [edx], 0xddeded06
lcall [rdi + 0x74]
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402919
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or ebx, edi
fld xword [rdi - 1]
je 0x402976
jb 0x40297c
pop rdi
jne 0x402985
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x40297e
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0xfd243538
inc byte [rdx]
pop rdi
imul bp, word [rsi + 0x69], 0x7208
jb 0x402989
jns 0x402989
outsb dx, byte gs:[rsi]
je 0x4029a0
jns 0x402916
mov esi, 0xab11add
insd dword [rdi], dx
and byte gs:[rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x40296f
or eax, 0x37584db
pop rdi
sub dword [rdx + rbp + 0x42], esi
pushfq
jo 0x402920
push qword [rdi + 0x535a2470]
je 0x40299f
xor dword [rcx], edi
jo 0x4029c0
movsxd rsp, dword gs:[rbp + 0x77]
cdq
sub eax, 0xec1b5b77
fld xword [rsi - 0x61]
jb 0x4029db
movsxd rsi, dword [rdx + rbx + 0x33]
jo 0x4029e1
movsxd rbx, ebx
jle 0x402946
mov ecx, 0x673d7261
adc al, 0x36
imul esp, dword [rdi + 0x6e], 0xb50c650f
mov ebx, 0x334cbeef
insd dword [rdi], dx
outsd dx, dword [rsi]
pop rdx
jo 0x4029fa
ja 0x402997
js 0x402a07
out dx, al
fdiv st(7), st(0)
mov edi, 0x45525078
push rsp
push rsp
pop rcx
pop rdi
push rbp
push r12
stc
and dh, byte [rbp*2 + 0x14ed6b61]
test byte [rsi], bl
xor al, 0x31
js 0x402a1c
imul ebp, esi, 0x36
jbe 0x402a23
movsxd rbp, dword [rdx + 0x7a697669]
or eax, 0xbfb7768d
fnstenv [rsi + 0x6e]
ret
xchg eax, esp
wrmsr
imul ebp, dword [rcx + 0x2f], 0x596e4c47
jnp 0x4029ce
xor r14b, byte [rbp + 0x62]
pop rdi
jg 0x4029d9
cmp edi, dword [rdi + rdi*8 + 0x4d415246]
pop r15
pop rax
jle 0x4029fe
lahf
in al, dx
rcl dword [rsi + 0x48204855], 0x44
push rdx
push rbx
or r15b, r13b
outsd dx, dword [rsi]
xchg eax, ebx
pop rdi
push rsp
sub byte [rip - 0x45e4489c], r13b
test dword [rax], edx
movsd dword [rdi], dword ptr [rsi]
jb 0x402a37
pop rcx
test r11d, eax
in eax, dx
or byte [rcx], dl
xor dword [rdx], esi
and dword [rbp + 0x69], ebp
lahf
out 0xda, al
or eax, dword [rbx + 0x49]
push rax
imul esi, dword [rax + 0x14], 0x1f134dd1
loope 0x402aa9
insd dword [rdi], dx
pop rsp
cli
xor ecx, dword [rsi]
je 0x402abd
jo 0x402aab
adc eax, 0x45efca16
push rbx
xor bh, al
cmp qword [rsi + 0x75], r9
js 0x4029ef
test byte [rbx], bl
lodsd eax, dword [rsi]
mov ebx, 0x5f770f20
jo 0x402aa7
fistp dword [rdx - 0x50]
jbe 0x402a95
xor cl, bh
comiss xmm2, xmmword [rsi + 0x6d]
insd dword [rdi], dx
insd dword [rdi], dx
mov ebx, 0x30321dbc
je 0x402adc
jb 0x402ad5
insb byte [rdi], dx
pushfq
or edi, edi
neg byte [rbx + 0x6b]
movabs byte [0xce4040634b502d97], al
pop r8
pop rax
pop rdi
xor ebp, dword [rbp + 0xf]
jbe 0x402a8d
xor al, 0
jo 0x402b09
mov ah, 0x74
adc bx, word [rdi + 0x32]
add dword cs:[rip - 0x71a3db73], esi
xor esi, dword ds:[rsi*2 + 0x1b61646e]
outsb dx, byte [rsi]
outsd dx, dword [rsi]
mov edx, 0xe165766f
pop di
js 0x402ac0
jo 0x402ad1
fsubr qword [rbp + 0x53c2e873]
push rbx
out dx, al
lodsd eax, dword [rsi]
or byte [rbx + rdx*2 + 0x52ae5f33], bh
push rsp
rol dword [rbx + 0x34], cl
jae 0x402ab2
jae 0x402ada
ja 0x402b3e
jo 0x402b28
movsxd rax, dword [rbp + 0x76]
push rdx
sbb dl, byte [rbx]
mov ch, byte [rcx + 0x62]
movsxd rax, ebx
retf 0x1462
mov ss, word [rbx + 0x453143d6]
push rdx
xlatb
sbb cl, al
mov ebp, 0x3d27374b
push rsi
jle 0x402b19
mov dl, 0xf6
in al, dx
add al, 0x29
imul esi, dword [rsi + 0x44], 0x73475d32
pop rbx
xor cl, byte [rsi + 0x4a0cad39]
xor ecx, dword [rdi + 0x65ee7b7b]
push rax
jo 0x402b6c
mov dl, 0x3a
je 0x402b58
jbe 0x402b7d
neg byte [rbx + rbx + 0x16]
push rsp
mov bh, 0xf0
push rdi
push rbx
mov ch, 0x1f
adc esi, dword [rsi + 0x19ca6ef4]
jbe 0x402b13
shl byte [rsi + 0x439920ed], cl
insb byte [rdi], dx
test byte [rbx - 0x6a], dh
jo 0x402bb9
ret
insd dword [rdi], dx
retf -0x7b72
cmp al, 0x4e
push rax
in eax, dx
insb byte [rdi], dx
imul ebp, dword [rbx + rax*2], 0x45
cmpsb byte [rsi], byte ptr [rdi]
or ch, byte [rsi]
or al, 0xc1
insd dword [rdi], dx
test eax, 0x694b4eef
push -0x111913f7
imul r8, qword cs:[r13 - 0x27], -0x24cb04ea
sub bl, byte [rdi + 0x49]
xlatb
retfq
push rbx
cld
jnp 0x402b2f
push rcx
push rdx
out dx, al
in eax, dx
insb byte [rdi], dx
push rax
jbe 0x402b47
and ah, byte [rcx + 0x61]
add byte [rax], bh
xchg dword [rcx], ecx
mov cl, 0xc9
xor dword [rdx + 0x6cabc891], eax
test eax, 0x6686fd7b
lodsb al, byte [rsi]
insb byte [rdi], dx
cmpsb byte [rsi], byte ptr [rdi]
xor ebx, dword [rip + 0x726eb345]
sub eax, 0x5f616b46
movabs byte [0xa25554bc22ca8d42], al
xor dword [rsi], ebp
xor edx, dword [rdx + 0x46147bd3]
xchg eax, esi
mov bl, 0x15
and eax, 0x2b31c169
push r11
mov dh, 0x2f
wait
ror dword [rsi], 1
xor edi, dword [rbx + 0x624c453f]
retf -0x6fbb
mov ebx, ss
fistp dword [rdx + 0x53]
and ah, byte [rbx - 0x64]
sub dword [rax - 0x7b13650c], eax
adc eax, eax
fmul dword [r10 - 6]
imul esp, dword [rbp + 0xa], -0x66
outsb dx, byte [rsi]
nop
and r12, qword [rbx]
insb byte [rdi], dx
call 0x697280ce
cmp byte [rdi - 0x464b724], bl
retf
outsd dx, dword [rsi]
jns 0x402c5a
jbe 0x402c4b
push rdx
jmp 0xffffffffea88626f
adc eax, 0x93922569
sbb al, 0x18
xor byte [rbx - 0x1a], cl
imul edx, esi, 0xf5246d23
xor dword [rip - 0x1e2dd290], ebp
mov bl, 0x79
loope 0x402c92
xor cl, byte [rcx + 0x27]
in eax, 0xc0
add eax, 0x319535e1
in al, dx
xor cl, byte [rdx - 0x5edc7e43]
jne 0x402cb2
js 0x402c2b
outsb dx, byte [rsi]
xor eax, dword [rcx]
push rax
xchg dword [rbx - 0x2acdff19], edi
cmp dh, byte [rdx + rsi*2 + 0x69]
pop rsp
insd dword [rdi], dx
adc edi, edx
push rsi
jo 0x402c5e
mul byte [rbx + 0x68]
loope 0x402c88
jae 0x402c8c
adc eax, 0x638c3a58
jo 0x402cc9
movabs al, byte [0x38a431546da40b85]
mov dword [rbp - 0x25f95bcf], edx
test al, 0x74
leave
xlatb
mov eax, 0x563032c9
movabs eax, dword [0x16106dbfbb737cd0]
faddp st(1)
pop rsi
pop rbp
fild dword [rsi]
push rsp
pop rbp
pop rdi
xor dh, byte gs:[rsi + rsi + 0x63]
add byte [rsi + 0x26], ch
mov word [rax + 0x78], es
pop rcx
test bl, dl
insb byte [rdi], dx
movabs byte [0xac89430cd7ba53d4], al
ror byte [rdi - 0x2b], 0x54
wait
and al, 0xa4
add al, 0x4e
int1
fistp dword [rax - 0x4f]
adc bl, byte [rdx]
add ah, ch
jbe 0x402d26
fisttp dword [rdx]
movsd dword [rdi], dword ptr [rsi]
sub edx, dword [rbp + 0x38]
jb 0x402d3e
xchg dword [rbx], ecx
movsd dword [rdi], dword ptr [rsi]
and bh, byte [rcx]
stosd dword [edi], eax
and eax, 0x604d6570
sbb dword [rdi + 0x530ed178], ebp
pop rdx
stosb byte [rdi], al
push qword [rcx + 4]
xor al, bl
xchg eax, esi
xor dh, byte [rbx + 0x47]
outsb dx, byte [rsi]
jp 0x402d0e
mov esp, dword [rcx + rcx*2 - 0x7bc540d9]
add ecx, edi
sbb ecx, dword [rax]
xchg dword [rcx - 0x4d4bb6e4], edx
cwde
mov ch, 0x15
xchg eax, esp
sub edx, dword [rsi - 0x6fb7d1c0]
stosd dword [rdi], eax
pop rax
xchg dword [rdi], eax
jno 0x402d62
sbb byte [r8], r12b
insb byte [rdi], dx
test dword [rdx + 0x3e], esp
jb 0x402d8e
outsd dx, dword [rsi]
scasd eax, dword [rdi]
test byte [rsi], 0xb8
pushfq
in eax, dx
sbb eax, 0x91c81b2d
fcom qword [rbx + 0x39]
fidiv dword [rdx]
xor esp, dword [rbp + 0x7b6920c6]
movsxd rbp, dword [rbx + 0x77]
xchg eax, esi
jrcxz 0x402d5e
sbb dword [rax], 0x72896b0c
mov ecx, dword ss:[rsi + rdx*2 + 0x17]
movabs dword [0x561032125b459d64], eax
xchg eax, ebp
xor ah, byte [rcx - 0x24ed48d4]
and byte [rax - 0x24b674d6], dh
cmp eax, 0x85b8c876
enter -0x5cb5, 0x45
insb byte [rdi], dx
movabs dword [0xa65f3080c1a5e119], eax
cmova esp, dword [rsi + 0x5f]
xor dh, byte [rsi]
xor dword [r8 + 0x49], r15d
pop rax
jae 0x402e07
lahf
jae 0x402d54
ret 0xa686
jns 0x402de8
movabs byte [0xeb719876617b3853], al
fcomp dword [rsi + 0x75]
mov ch, 0x35
or al, 0x36
pop rdi
rcl dword [rax], 0x66
in al, 0x78
mov ebx, 0x319b7a5f
and dword [rbp + 0x70], esp
scasb al, byte [rdi]
xor dword [rcx], edi
sti
sbb dword [rcx], esi
xor esp, dword [rdi + 0x61]
xor esi, dword [rsi + 0x32cc0d73]
mov ch, 0x1f
push 0x321b762a
pop r8
and al, ch
xor dword [rip - 0x3f0c36e3], esi
mov al, 0x16
xor byte [rbp + 0x33], al
push 0x2821c215
xor dword [rsi], eax
pop rax
fild dword [rbp + 0xb7518a8]
movsb byte [rdi], byte ptr [rsi]
cli
xor eax, 0x19366e69
xor dword [rdi], 0x31b18834
push 0x530258b2
xor eax, 0x640e17af
mov esi, dword [rsi]
add al, 0x30
xor byte [rsi - 0x45d24d5c], cl
leave
leave
loop 0x402e4c
mov dh, 0xda
xor al, 0x39
and al, byte [rcx - 0x6ef3ceeb]
jo 0x402e4c
insb byte [rdi], dx
jbe 0x402e8b
xor al, byte [rcx - 0x7664dd6f]
ret
cwde
add ecx, dword [rdx + rdx*2 - 0x3a17c733]
adc ah, byte [rdx + 0x56]
clc
mov al, byte [rax]
movabs dword [0x3157f46d4ffbd6c3], eax
add al, 0x92
jo 0x402e82
lea edx, ss:[rax - 0x15]
mov dword es:[rax + 0xc], esp
and dl, byte [rdx - 0x4d]
insd dword [rdi], dx
jo 0x402de4
mov dl, 0x43
add bl, byte [rbx + 0x5bd58146]
pop rcx
sub dword [rsi + 0x2d], ecx
sbb dword [rax], ecx
sub esi, ecx
xor esp, dword [rcx + 0x64]
xor byte [rbp + 0x49], al
rcl dword [rsi + rdx*2 + 2], 1
xchg eax, esp
pop r9
sub dl, byte [rax + 0x1a627ce1]
adc bl, byte es:[rax + 0x5f37747b]
movsxd rax, dword [rsi - 0x5febcc65]
adc al, 0x2c
sbb al, 0x61
pop rsi
or dword [rax], edx
movsxd rbx, dword [rcx]
pop rsp
and ah, byte [rsi - 0x783e49d3]
insd dword [rdi], dx
push r10
xchg eax, ebp
xor al, ah
mov dh, 0x48
jb 0x402eb4
scasw ax, word [rdi]
outsb dx, byte [rsi]
movsxd rdi, dword [rax + rbx + 0x34598c23]
leave
sahf
jp 0x402eca
fstp qword [r10]
cmp al, 0x5a
push 0x5b34fe6b
out 0x16, eax
or byte [rbx], dh
sahf
mov byte [rax + 0x13], ch
imul esi, dword [rax], 0x43
int 1
mov dword [rbx + 0x175676e1], eax
add bh, byte [rcx]
imul esi, dword [rcx], 0x10948536
adc bl, byte [rdx - 0x4b]
xchg eax, ecx
pop rax
ret 0x3061
scasd eax, dword [rdi]
imul ecx, dword [rax + rbx*4 + 0x23c09c35], 0x62237869
cwde
add dword [rcx + 0x3b36d390], ebp
jp 0x402eb6
xchg eax, edx
cmp ch, byte [rbp - 0x3cb592b7]
movabs rax, 0xb5852b03d05eac45
mov dl, 0xf6
hlt
and bl, byte [rbp - 0x27]
add eax, dword [rax]
jb 0x402edc
imul edi, eax, 0x9c498320
pop r14
sti
test eax, 0x64ba9349
fild qword [r8]
lodsb al, byte [rsi]
add dword [rcx], 0x850fbd09
int1
lodsd eax, dword [rsi]
adc ch, byte [rcx - 0x69]
movsxd rsp, dword [rcx + 0x1a]
retf
mov edx, 0xd9003ac
push rsp
or al, 0xd4
sub byte [rcx - 0x3e], bh
push rbx
mov bl, 0x53
xor al, 0x88
push rdi
rcl dword [rsi - 0x378d3121], -0x80
imul esp, dword [rdi + 0x5f], 0x2c
jle 0x402f92
insd dword [rdi], dx
pop rcx
wait
test eax, 0xb41d453f
adc eax, 0xeb5e3342
xlatb
jnp 0x402f34
push 0x76aa7ac9
imul eax, dword [rdx + 0xc], 0x37a943c2
movsxd r13, dword [r9 - 0x3c]
xor dword [rdx - 0x7e733218], 0x81a2a110
mov ch, 0x27
cmpsb byte [rsi], byte ptr [rdi]
sub cl, byte [rax - 0x1fb4b7ea]
and al, 0xa1
push rdx
or dl, cl
retf -0x1b7e
or ebp, edx
movsd dword [rdi], dword ptr [rsi]
jle 0x402fe6
test byte [rbx], ah
push rsp
sbb al, 0x63
insb byte [rdi], dx
je 0x40301b
mov cl, 0x68
mov al, 0xb3
pop rcx
cmp byte [rax + rsi], cl
or eax, 0xe4e6445
rol byte [rdx + 0x38], 0x41
mov cl, byte [rip + 0x22351291]
adc ecx, dword [rax]
xchg eax, ecx
mov byte [rax], dh
int 0x9c
iretd
and ah, byte [rax - 0xc]
push rcx
mov al, 0x17
loope 0x402fa4
nop
add ebx, dword [rdi]
xor al, cl
retf 0x6140
outsd dx, dword [rsi]
insd dword [rdi], dx
test dword [rbx + 0x1a], esp
or dword [rsi - 0xcb4a5cb], eax
loop 0x40302a
xor ebx, dword [rip + 0x51d3051]
in eax, 0x1e
xchg eax, ebx
adc eax, 0x364eb348
je 0x403068
imul edx, dword [rip + 0x10f1bc02], 0x90b53494
sub esi, dword [rcx]
mov dh, byte [rax]
fimul dword [rax]
insb byte [rdi], dx
and dl, 0xba
pop rax
ret 0xe83d
movsxd rsi, dword [rax]
and eax, 0x8b383ad7
add byte [rax], bl
leave
nop
xor ecx, dword [rcx]
mov byte [rbp + 0x63542b4], 0x23
or cl, 0x60
and eax, 0xa865ac4c
fisttp qword [rcx + 0x29]
pop rdi
jo 0x403067
test byte [rbp + 0x6e7fdb86], ch
nop
retf 0x3019
int1
leave
or al, 0x21
lodsb al, byte [rsi]
imul esi, dword [rcx], 0x3b
add ah, byte [rbx - 0x5c92d97c]
jmp 0x4030cc
or dword [rcx], ebx
adc bl, byte [rax]
wait
sub al, 0x58
fxch st(2)
adc byte [rip + 0x2c81255], bh
and al, 0x35
xor al, byte [rbx - 0x3a]
and byte [rcx], al
xor al, 0
mov cl, byte [rax - 0x5a]
xchg byte [rbp + 0x3c], ah
cdq
cmp byte [rcx], bl
scasd eax, dword [rdi]
mov dl, 0xe
mov cl, 0xa4
mov esp, 0x43217359
pop rcx
mov cl, 0x25
or ah, byte fs:[rbx]
push rsi
sub eax, 0x40421532
xor edx, dword [rbx]
push rdx
add eax, 0xb855dada
nop
cmp ebp, dword fs:[rsi]
xor ch, byte [rax - 0x29922f05]
mov r13d, 0x49002230
nop
in al, 0x69
adc r10b, byte [rsi - 0x2a]
mov dword [rbp - 0x7b9b769f], esi
add rdx, -0x73b5cd3b
jmp 0x403054
adc al, 0x29
xchg eax, edx
or dword [rdi], eax
adc edx, dword [rsi]
and dword [rbx + 0x34], esi
outsd dx, dword [rsi]
loop 0x403077
xor byte [rsi - 0x49], bl
and byte [rdi], ah
ror dl, 0x5b
xor esi, dword [rbx + 0x708b20e2]
xor esi, dword [rdi + rax*4 + 0x545ea645]
shr dword [rsi - 0x57], 0x55
jb 0x403126
adc rax, 0x2ea15030
imul ebx, dword [rdx - 0x54ea6fa0], 0x21476d04
adc dword [rdx + 0x5e], eax
push rbx
cmp edx, dword [rdi + 0x2562c00b]
cmp byte [rdx + 0x5f], al
add dword [rdi], ebp
add byte [rsi + 0x63], ch
outsb dx, byte [rsi]
je 0x403125
jae 0x4031a3
insd dword [rdi], dx
ret
jbe 0x40318a
je 0x4031a6
push -0x5234a2f7
imul esi, dword [rdx + 0x6e07704c], 0x6f
clc
sub eax, 0x3305dc0
int 0xd
xchg eax, ebx
jne 0x403105
mov edi, 0x692d64a2
add byte fs:[rip + 0x640938d5], cl
jns 0x40311e
pop rcx
wait
mov ecx, 0x45074f6e
sbb dword [rsi - 0x24], esi
test byte [rip + 0xce145ca], dh
pop rdi
sbb ecx, dword [rbp - 0x6b2e50a0]
fisubr dword [rax]
or eax, ebp
mov bh, 0xbd
insb byte [rdi], dx
lea ebp, [rsi]
pushfq
or ch, byte [rdi + rbp*2]
or byte [rsi + 0x28], dh
push rdi
and byte [rdi - 0x60db84fb], ch
push rbp
pop rax
outsd dx, dword [rsi]
cdq
push 0x72646801
adc eax, 0x5d0d65ba
movsxd rsp, dword [rdi - 0x23]
mov ecx, 0x116cbd6e
fld qword [rbx - 0x3a]
pop rdx
sbb eax, 0x656a0b36
movabs eax, dword [0x6800712ebd9b3561]
jnp 0x40321b
imul edx, dword [r13 + 0x73], -0x55
add al, 0xa6
push rdx
sbb eax, 0xb000c04d
add byte [rdi + 0x25a21301], ch
adc eax, 0x2192afb7
cmp dword [rbx + 7], esi
sbb al, 1
movsb byte [rdi], byte ptr [rsi]
sbb dword [rbx], esp
push rsp
xchg byte [rax + rdx*4 + 0x54], spl
and byte [rax + rdx*4], al
xchg byte [r9 + rsi + 0x74], spl
je 0x4031b9
wait
movabs eax, dword [0x206ffffff6442464]
or dword [rdx + rsi*2], 0xffffff98
cwde
sub byte [rax], al
xor cl, r8b
add eax, 0x90644e08
ret
movabs word [0xd01d9c9b26c0c03f], ax
add bh, bl
sbb byte [rbx + rcx*2 - 0x66], al
push r14
add ecx, dword [rax - 0x62]
ja 0x40322d
xchg eax, edx
add eax, dword [rsi - 0x4c]
movsb byte [rdi], byte ptr [rsi]
mov ebx, 0x9fffbf5e
and al, 0x67
outsd dx, dword [rsi]
mov edi, 0xc907023c
xor byte [rbx + rax*2 + 0x6b], 0x3f
sbb dword es:[rcx + rdi*4 + 0x690a707], -0x79
add eax, 0x7affca61
push rbx
adc edx, dword [rsi]
out 0x26, al
out 0x3f, eax
mov dl, 0x80
ja 0x4032c3
inc dword [rdi + rdi + 0x49b99ed7]
rcl dword [rdi], 1
pop rax
add ch, cl
nop
sbb qword [r14 + 0x2f78019f], rcx
mov bh, 0x4f
and dword [rbx], ebx
lcall [rdx]
mov dword [rdi], edi
test dword [rsp], ebx
nop
add byte [rax - 0x6f5dfe60], 0xd
fst dword [rax]
xchg eax, esp
mov dh, 0xc0
jo 0x403229
pop qword [rdi]
movd mm6, dword [rdx]
popfq
xor byte [rdi], al
xchg dword [rip - 0x6d809870], ebp
movabs dword [0x1a4807c7242804dc], eax
dec dword [rcx]
test eax, 0x49b99cbf
mov dword [r15], 0x392123ff
sub al, 0x84
mov cl, 0x79
out 0x66, al
inc dword [r15]
jg 0x4032d3
add edx, dword [rip - 0x40dd1b7b]
and bh, byte [rcx - 0x7e]
wait
push rdi
or al, 0x9b
adc eax, 0x3fc9ec85
jg 0x4032ed
adc byte [rbx - 0x37], al
cdq
js 0x4032c8
ret
jnp 0x403299
ja 0x40332c
xchg eax, esp
pushfq
loopne 0x403300
mov edi, 0x823fe710
wait
or al, 0x48
psubb mm0, qword [rdi]
call rcx
mov dl, 0x73
add ebx, esi
je 0x40330e
sbb dword ss:[rdi + 0x4e], ebp
clc
cdq
wait
int 0x96
wait
jg 0x40335e
xchg ah, ah
in al, 0xf0
add dword [rsi], eax
adc byte [rdx], dh
enter -0x6f4a, -0x68
mov edi, 0x39214f4f
enter 0x845, 1
add ecx, ecx
fldenv [rax + 0x10]
push rax
loopne 0x4033aa
xor ah, byte [rbx + rax*2]
or ah, al
and ch, bl
add eax, 0x7f107f08
or byte [rax + 0x5176720c], dl
shr byte [rax + rsi*4 + 0x23], 0x83
adc rax, 0x1017307f
xchg dword [rbp + 0x4ebf343f], eax
fldlg2
mov al, 7
adc dword [rbx], edi
test dword [rcx + 0x4f2458c], eax
mov edi, 0xc9bb011e
mov bl, 0x5e
fld dword [rax]
sub byte [rcx - 1], dl
mov byte [rsp + rax*4], dl
or eax, 0x381fcd20
or dword [rdi + 0x60], edi
xchg eax, ecx
cmp al, 0x39
mov al, 0x65
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 0xff00], dl
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip + 0x38080216], ecx
stosb byte [rdi], al
cmp dl, byte [rbp - 0x479bcb57]
cmp dword [rax], eax
add ch, al
adc byte [rax], al
add byte [rax + 0x4900008a], ch
add al, byte [rax]
hlt
add byte [rax], al
add bh, bh
