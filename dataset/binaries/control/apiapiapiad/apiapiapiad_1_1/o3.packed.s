call 0x401608
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401420
add ebx, ebx
je 0x4013d6
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x40140e
cmp rbp, -4
ja 0x40140e
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4013f6
add ecx, 4
mov dl, byte [rax]
je 0x40141e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x40140e
ret
cld
pop r11
cmp r8b, 2
je 0x401436
jmp 0x4014b3
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x401446
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x40142e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x40145e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x40144b
sub eax, 3
jb 0x40147c
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x4014b3
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x4014a3
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x4014a1
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401490
cmp rbp, -0xd00
adc ecx, eax
call 0x4013e2
jmp 0x401436
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x40158c
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40152a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x401576
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401549
push 0x3a707474
jne 0x4015a2
js 0x401562
jae 0x40159c
outsb dx, byte cs:[rsi]
je 0x40155b
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4015c9
jb 0x4015bb
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4015e6
jb 0x4015f9
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x2125f4
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x2125f4
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x4014c4
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4015ef
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x40159d
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f1697
jb 0x4016af
movsxd rbp, dword [rdi]
jae 0x4016a9
insb byte [rdi], dx
js 0x4016af
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x40168f
cmp rsi, rcx
jae 0x401697
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x401676
cmp al, 0x8f
ja 0x401676
cmp byte [rsi - 2], 0xf
je 0x40167c
sub al, 0xe8
jg 0x401679
push rdi
cmp al, 1
ja 0x401664
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x401667
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x401694
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4016eb
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1b69
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40172f
mov al, 0xa
jmp 0x40172f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x40170b
inc ebx
mov al, 0
jmp 0x401733
mov al, 2
jmp 0x401733
mov al, 3
jmp 0x401733
mov al, 0x3c
jmp 0x401733
push rcx
rcr ah, 1
fstp st(7)
jle 0x401774
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x401786
jg 0x401778
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6efb
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4017d2
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb694f
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4017da
cmp esi, 0x21585055
jne 0x4017de
jge 0x4017d0
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4017d3
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4017d7
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x401883
pop rcx
or al, 0x3b
jb 0x401889
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4017fb
jmp 0x4017fd
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x366173e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf53986
in eax, dx
jg 0x401835
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x40187b
mov bh, 0x2a
add edi, 0x10
jmp 0x401878
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4018b5
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4018f1
jne 0x401908
fstpnce st(6), st(0)
jle 0x4018d1
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x401907
jrcxz 0x40193b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b89f
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4019ba
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x40197a
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295f4f
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4019ed
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x401987
and ecx, 7
or al, 0xeb
jae 0x4019f2
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x401a27
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x401a65
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401a1e
push rax
call 0xffffffff868d170b
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401a28
std
cmp edi, esi
xchg eax, edi
jle 0x401a7d
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96009
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401a7b
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401a69
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x401a92
js 0x401ad2
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x401b64
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2d9f
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x401b85
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401b8a
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc2163c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401b18
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
or al, byte [rax]
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], dl
and byte [rdx + 0x90], cl
add byte [rax], al
add byte [rax], al
add dil, dil
jo 0x401bd1
add byte [rax], al
xor dword [rax], ecx
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401c3e
je 0x401c47
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401c10
mov dh, 0x7d
jbe 0x401c0f
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401bc8
sahf
sahf
add al, 0
cwde
add eax, 0x905fc000
and byte [rdi + 0x5180006], bl
add al, bl
sub eax, dword [rdi]
enter 0x80f, 0
adc byte [rax], cl
or dword [rdi], edx
jl 0x401c2c
jns 0x401c2e
or al, byte [rax]
fmul dword [rbx]
add byte [rax + 0x7c813e0a], bh
or byte [rax + rax], 0xe0
or eax, 0x9f0c3000
add byte [rax + 0xf], al
add ah, dl
or dword [rsp + rbx + 0x17105f60], ebp
add cl, bh
add edx, esi
adc dword [rax], eax
hlt
adc al, byte [rax]
pop rax
and byte [rax], ah
jg 0x401bdf
cld
adc eax, dword [rax]
in al, 0x22
adc al, 0
call 0x4fd07c98
and byte [rdi], cl
adc eax, 0x16f800
add byte [rsi], ch
fldenv [rsi]
nop
movhps qword [rax], xmm0
or byte [rax], bl
cmpxchg ch, ah
add byte [rcx], bl
xor byte [rdi], dl
sbb al, byte [rax]
nop
nop
mov eax, 0x1ce0001b
repne outsb dx, byte [rsi]
retf 0x113
add al, 0
int1
dec dword [rsi]
loope 0x401c69
sbb edi, dword [rdi - 0x37fd68e7]
in al, dx
lock adc byte [rax + 0x17], al
sbb esi, dword [rax]
adc dword [rsi], esi
and al, 0x83
pop rsp
jo 0x401cfb
pop rdi
mov ebx, 0x1701a72c
push rbx
nop
or al, 0x76
and eax, 0x90477a4f
ret 0x84ae
enter -0x687a, -0x5b
xlatb
fmul st(1)
sbb dword [rbx + 0x17121f27], ebp
or dword [rdx + rsi], 0xffffffce
ror byte [rbx], 1
out dx, eax
and eax, 0xedc8320c
xor byte [rcx], 0x37
stc
or byte [rcx], al
pop rdi
adc bh, byte [rdi]
add dword [rsi], edx
ret 0x1778
cmova eax, esp
xor dh, bl
and ah, byte [rax - 0x49]
xor eax, 0x76309447
cmovnp ebp, dword gs:[rdi]
adc al, 0x37
cmpsb byte [rsi], byte ptr [rdi]
test cl, bl
pop rsp
outsd dx, dword [rsi]
add r9b, r11b
js 0x401d7e
xchg dword [rdi - 0x6fdfa8fd], eax
mov bl, 0xd
outsd dx, dword [rsi]
sub al, 0x8d
scasd eax, dword [rdi]
xor qword [rdi], rdx
or al, dl
scasb al, byte [rdi]
in al, dx
jo 0x401da6
add dword [rbx], eax
movabs dword [0xd04fb719c364ec17], eax
add dl, byte [rdi]
ror dword [rsi - 0x62], 0x1c
mov eax, dword [rbx]
rcl byte [rax], 0x2a
or byte [r11], r11b
and dh, dl
jns 0x401ceb
and dword [rdx + rbp*8 + 0x77], ebp
cld
and bl, byte [rbx + rdi*4]
sahf
cmp eax, 0x522f0190
add ah, byte [rsi + 0x17]
and dword [rax + rcx - 0x7f], esp
rol dword [rcx], 0x76
or byte [rbx + 0x2f9b97b2], bh
cld
add bh, ch
and dword [rbx + 0x2f110d9c], eax
retf -0x7446
xor byte [rbp + rcx - 0x50d2e82c], al
add al, 0x9a
sub ecx, dword [rcx + 0x11]
add al, 0x84
enter 0x47c1, 0x58
add esp, ebp
add ebx, edi
adc byte [rsi], dh
ftst
push rsp
imul ebx, dword [rdi + 0x60], 3
mov qword [rbp + 0x5f921027], -0xdecc24e
nop
or eax, dword [rax - 0x24]
add ch, byte [rdi]
enter -0x6de8, -0x4d
test byte [r8], al
ja 0x401e17
call 0xffffffffc21a02a4
pshufw mm2, qword [rsi], 0x47
pop rax
insb byte [rdi], dx
mov al, 0x21
sbb eax, eax
std
out dx, eax
pop rbp
and byte [rdi], al
sbb dword [rbp + 0xd], esp
add al, 0x22
sbb al, 0xec
in al, 0xeb
adc r12b, byte [r9 - 0x29]
sub al, byte [rsi + rcx]
push rbx
neg byte [rbx]
cmpsd dword [rsi], dword ptr [rdi]
push r10
add al, 0x72
jbe 0x401e38
mov edi, 0x17060758
jo 0x401e14
xchg eax, edx
xchg eax, ebx
push r12
add al, 0x60
out dx, al
add eax, dword [rbx - 0x28]
nop
pushfq
push rsi
ja 0x401e5f
test byte [rax + rcx*8 - 0x4d], bl
add dword [rdi - 0x2954ce88], esp
in al, dx
adc byte [rsi], dh
rcl dword [rdi], 1
sub byte [rip - 0x1ec62789], al
nop
mov bl, 0xef
and byte [rip - 0x36f13721], al
leave
and dword [rip + 0x55ef005], edi
pop rbp
and byte [rdi], ch
nop
ja 0x401ea4
add eax, 0x3610e1c7
test byte [rdi], ch
fist word [rdi]
add qword [r15], rbx
leave
fldenv [rcx]
cmp dword [rdx + rsi*8 + 5], esi
push 0xdeec9ec
hlt
ja 0x401e50
adc esp, dword [rbx + rax + 0x17]
or dword [rdi], ebp
mov esi, ebx
add al, 6
push rdi
cmp byte [rdi + rbx], al
test byte [rbx], ch
mov ecx, eax
mov bh, 9
mov al, 0x21
sbb dword [rbx + rcx + 0x17], ebp
and byte [rdi + 0x281b0fd1], bh
xor byte [rbx + 0x72], ah
je 0x401eeb
sub al, 0x66
movsxd rax, dword cs:[rax]
mov ch, 0xdf
lcall [rdi + 0x5f]
push r10
pop rdi
push r11
push rsp
or dword [rax + 0x67657265], eax
imul ebx, dword [rdx], 0xbffbbdbd
pop rdi
je 0x401f09
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401ec5
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
jg 0x401ea9
in eax, dx
mov edi, 0x726f7409
jae 0x401f15
jne 0x401f31
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x401f2a
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0xdbfa3538
pop rdi
and al, 0x5f
imul bp, word [rsi + 0x69], 0x7208
jb 0x401f35
jns 0x401f35
mov esi, 0x9d375add
jb 0x401f57
mov cl, 0xa
insd dword [rdi], dx
and byte gs:[rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x401e6c
jne 0x401eed
out 0x32, al
or eax, 0x2a74295f
idiv bh
mov bh, 0xdb
pushfq
jo 0x401f69
and al, 0x5a
pop rdx
jo 0x401f6e
ja 0x401f6e
outsd dx, dword [rsi]
js 0x401f7d
xor dword [r9], r15d
xor edi, dword [rbx + 0x50ffff73]
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
mov spl, 0x22
xor al, 0x6d
push -5
pop r8
or qword [rbx + 0x7f], r14
mov bh, 0xac
pop rbp
and bl, byte [rdi + 0x49]
add qword [r14 + 0x52], 0x5f454d41
retf
xchg eax, ebx
sbb eax, 0x28444ede
or dword [rbx], ecx
push rbp
mov dil, 0x4f
mul byte [rax + 0x20]
push rdx
push rbx
movsxd rbx, dword [rdi + 0x54]
or ebx, dword [rbx + 0x4241f7b0]
sub byte [r8 + 0x7b771064], r15b
fisttp dword [rdx]
je 0x401f83
pop rcx
test eax, 0x6a56f2ed
push rbx
je 0x401f0f
je 0x401fea
jb 0x401fe3
insb byte [rdi], dx
test byte cs:[rbx], 0xad
mov ch, 0x67
or dword [rcx + rbp], esi
push rax
movsxd rax, dword [r8 + 0x40]
loope 0x401f59
push rdx
dec dword [rcx + 0x42]
pop r8
pop rax
pop rdi
xor edi, dword [rcx + 0x736d1700]
pop rbp
cld
movabs eax, dword [0x63012e325f13583d]
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x2b422eb6
xchg eax, esi
enter 0xf58, 0x67
outsb dx, byte [rsi]
jle 0x401fd1
dec ch
mov bl, 0x4a
jbe 0x402027
push rdx
mov esi, 0x73616c43
jae 0x402046
enter 0x1b0a, -0x45
jo 0x40204b
call 0xffffffff848e7a1f
insb byte [rdi], dx
outsd dx, dword [rsi]
clc
jbe 0x402047
movsxd rsp, dword [rcx + rcx*2 + 0x3615369]
cmp byte [r11], r14b
pop rdi
lcall [r10]
pop rsp
jae 0x401fa9
xor byte [rdi - 0x4a], al
adc rax, qword [r13 + 0x76]
cmp qword [rbp - 0x45], r13
mov al, 0x75
outsb dx, byte [rsi]
imul esp, dword [rbx + 0x29], 0x31
or ch, byte [rsi + 0x2f]
xchg eax, edi
mov edx, 0x69dc6d86
pop rbp
cmp edx, dword [rax + 0x69]
push rbx
xor dword [rdi + 0x44], ebx
jo 0x402087
or edi, ebx
ret
push r12
and dword [rsp + rbp*2 + 0x50], 0x76
ret 0x8332
jnp 0x40208f
or ebx, ebp
push rdx
pushf
insb byte [rdi], dx
leave
jo 0x4020a6
outsd dx, dword [rsi]
insb byte [rdi], dx
mov dh, 0xec
jbe 0x4020ae
pop bx
push -0x1ccbe695
insd dword [rdi], dx
xchg dword fs:[rcx - 0x2d], ebx
cmp byte [rbp - 0x4a494ffb], cl
push rdi
cmp dword [rax - 0x79], -0x29
fstp st(3)
outsb dx, byte [rsi]
iretd
cmpsb byte [rsi], byte ptr [rdi]
lodsd eax, dword [rsi]
add byte [rdx], dh
jnp 0x4020c7
xor ax, 0xd6c7
fimul dword [rcx + 0x63]
sbb dword [rdx], edx
push 0x61
mov ebx, 0xb6dd34c3
cmp byte [rbx + 0x10], dh
clc
movsxd rsi, dword [rax]
sar al, 1
enter 0x6361, 0x65
test dword [r13 + 0x76a4c36d], r8d
fist dword [rdx]
pop rcx
xor dword [rax + 0x49], ebx
push rsp
and ebx, dword [rax]
scasb al, byte [rdi]
sal dword [rsi + 0x5416430c], cl
mov edi, 0x5dbfc91b
mov edx, 0x5f64634f
jne 0x402090
add byte fs:[rbx + 0x63], dh
outsb dx, byte [rsi]
fmul dword [rbx]
cmp eax, 0xc2c7543b
or esi, dword [rdx - 0x42169e27]
xor dword [rdi + rbx - 0x514d447a], r12d
pop rdi
pop rdx
xor esp, dword [rdi - 0x29]
push 0x6f61efa5
jbe 0x40213d
jae 0x402072
sahf
ja 0x40209f
jrcxz 0x40208c
mov word [rbp - 0x57], es
imul eax, dword [rbp + 0x68], 0xf8d091f
xor r12, qword [r9 + 0x64]
xlatb
ret
outsd dx, dword [rsi]
pop rax
imul eax, ebx, 0x6307a362
imul esi, dword [rbx - 0x7b7bd09c], -0x2e
mov dh, 0x62
add byte [rdx - 0x3d], dh
or rax, 0x61803917
out 0x39, eax
sub eax, 0x31327d10
mov dh, 0xb0
insd dword [rdi], dx
push rbx
sub eax, 0xf763436c
jo 0x4020b2
scasb al, byte [rdi]
enter 0x6d7a, 0x1f
jnp 0x4020c7
nop
cli
add eax, 0x354274ba
push rsi
insd dword [rdi], dx
cmpsd dword [rsi], dword ptr [rdi]
mov bl, 0x10
mov al, 0x65
jne 0x402145
pop rdi
test eax, 0xb1ab42b5
loop 0x402109
mov edx, dword [rax - 0x1b]
fsubr dword [rdx - 0x47]
jbe 0x4021bd
xor byte [rcx], bh
xor eax, 0x20315d10
sub eax, 0x35c4d76c
outsb dx, byte [rsi]
ja 0x4021a1
je 0x4021c3
push rdi
and dword [rbx], edx
push rbp
push -0x7d3c11c0
imul esp, dword [rsp + rsi*8 - 0x35], 0x4343c06d
insd dword [rdi], dx
pop rbp
ret 0x8702
xor cl, dl
cmp bh, byte [rcx - 0x62]
xor dword [rbp + 0xd], ebp
insd dword [rdi], dx
mov bh, 0x80
cmp dword [rbx - 0x50], esp
adc esi, dword [rbp - 0x7c]
imul ebp, dword [rdx], 0xb4ea50
add byte [rbx + 0x60], bl
fldcw word [rbp + 0x37]
push rbp
test esi, ebp
jae 0x40220d
insd dword [rdi], dx
fldenv [rdx + 7]
je 0x40220c
mov bh, 0xae
or eax, 0x2409683b
jp 0x402213
outsb dx, byte [rsi]
outsd dx, dword [rsi]
fcom st(6)
sub eax, 0x152de12e
or eax, 0x78d621a6
jrcxz 0x4021e4
jne 0x4021c0
sub eax, 0x640dfa69
mov ebp, 0x385adee7
or dword [rcx + rdi*2 + 0x6e], esp
outsb dx, byte [rsi]
lodsb al, byte es:[rsi]
xor eax, 0x2e76199c
imul edi, dword [rsi + 0xc], 0xa95ec15f
loopne 0x4021f6
pop rsi
jp 0x402206
or dword [rsi - 0x77b48719], esi
je 0x402258
xchg eax, ebp
or ch, byte [rdi + rbp*2]
call 0x924f04d
jmp 0x4021f6
and al, 0x6f
mov dl, 7
add dword [rdi - 0x7e], 0x2e
push 0x7264683b
or eax, 0xdd0ad4b0
pop rbp
movsxd rsi, esi
retf
jo 0x402278
or dword [rax + 0x6cbd52ae], edi
adc dword [rbx + rax*2 - 0x278ed4ea], ecx
or ebp, dword [rdx + 2]
movabs eax, dword [0x6800298dbd9b3136]
jnp 0x402285
cmp esi, dword [rdi + rax]
int 0xf3
add al, 0xe0
push rdx
sbb eax, 0xb01d5600
sub dh, byte [rdi + 1]
fiadd word [rax + rbx*2 + 0x1c3f0767]
imul eax, dword [rsi + 0x23014864], 0x90641907
add dword [rsp + rdx*2 + 0x20], edx
and dword [rcx], ebx
xchg eax, edx
and dword [rcx + rsi], eax
sub byte [rcx], bl
nop
je 0x4022ce
and al, 0x83
sbb al, 0xf2
idiv dil
ljmp [rdi - 0x68]
cwde
or al, 0x32
enter 0x2820, 5
or bl, al
rcl byte [rax - 0x63c054b2], 0x1d
nop
rol al, 0x58
add bh, bl
wait
sbb byte [rsi + 3], dl
ret 0x119b
xchg eax, edx
out dx, al
and bh, byte [rcx - 0x41]
add bl, byte [rsi - 0x41]
push qword [rdx - 0xa]
push rdi
mov edi, 0x64374932
add al, byte [r15]
imul edi, dword [rdi], -2
cmp dword [rbx + 0x33], edi
jg 0x4022b4
cmpsd dword [rsi], dword ptr [rdi]
mov al, 0xcd
xchg eax, esp
jp 0x4022bb
test dword [rip + 0x8082072], ecx
out 0x83, eax
pop rbp
fld dword [rdi + rdi + 0x423f84ff]
sbb al, 0x64
mov al, 0x61
mov edi, 0x1e0d83f
and byte [rax], cl
xchg eax, edi
sbb dword [rsi + 0x28cde113], ecx
enter 0x3f06, 7
inc dword [rsi + 0x1a39286c]
mov dword [rdi], edi
loopne 0x4022ff
jb 0x40227a
loopne 0x40233d
add dword [rax], edx
sub dword [rdx + 0x36], eax
xchg eax, esp
or ecx, dword fs:[rdi + rsi]
out 0x26, al
jbe 0x4022a0
jg 0x40237a
fadd dword [rdx]
jns 0x40229e
adc bh, byte [rdi]
movabs dword [0xb6ff07ff42033733], eax
nop
xchg byte [rdx - 0x4056f7], dl
adc byte [rdx + 0x32], dh
enter 0x1e1e, 0x12
test spl, spl
mov al, 0x3f
mov cl, 0x2f
or al, 0x25
outsb dx, byte [esi]
jg 0x402397
mov edi, 0x908acdc1
sysret
jbe 0x4022cf
cmp al, 0x8c
add cl, cl
in al, 0x2c
sub esi, dword [rdi]
jg 0x40237b
xor dword [rcx - 0x46], ebp
movabs eax, dword [0x9bc2725030e0edb]
cmpsd dword [rsi], dword ptr [rdi]
mov edi, 0xd2032610
or eax, 0xf80f3fe7
in al, dx
pop rsp
and al, 7
push rbx
add dword [rsi], esi
sbb dword [rcx - 0x64c0d161], esi
int 0x96
je 0x40236f
wait
xchg ah, ah
in al, 0x99
jg 0x402371
add dword [rsi], eax
adc al, cl
mov dh, 0x90
cwde
mov edi, 0x45c8392f
xor ch, byte [rdi]
or byte [rcx], al
add dword [rsi], ebp
loope 0x402397
and dword [rdi + 0x2193b878], ebp
sbb edx, ecx
or bh, byte [rax + 0x70402ee9]
jg 0x4023b8
or byte [rcx], bl
nop
add eax, esp
enter 0x7898, 0x47
and dword [rdi + 0x15], ecx
jg 0x40233d
xor ecx, ebx
retf 0x3f27
xor al, 0x3f
push rbx
cmp ebp, dword ss:[rdi + rax]
adc dword [rbx], edi
mov word [rbp - 0xe], es
mov word [rcx + 0x7f], es
add dword [rbx - 0x4f9a940e], edi
fdivr st(7)
or byte [rdx], cl
add ecx, dword [rax + 0x73]
xor ecx, dword [rcx]
jg 0x40243b
and al, 0x4f
or byte [rbx], bh
clts
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, 0
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x33f7fdea], ecx
xchg eax, ecx
adc cl, byte [rbx + 0x693ef08a]
jo 0x40242b
add byte [rax], al
xor dword [rax], ecx
add byte [rax], al
cmp byte [rdx], cl
add byte [rcx], cl
add dh, ch
hlt
add byte [rax], al
add bh, bh
