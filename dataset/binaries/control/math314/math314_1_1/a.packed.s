call 0x4015f8
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401410
add ebx, ebx
je 0x4013c6
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4013fe
cmp rbp, -4
ja 0x4013fe
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4013e6
add ecx, 4
mov dl, byte [rax]
je 0x40140e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4013fe
ret
cld
pop r11
cmp r8b, 2
je 0x401426
jmp 0x4014a3
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x401436
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x40141e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x40144e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x40143b
sub eax, 3
jb 0x40146c
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x4014a3
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x401493
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401491
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401480
cmp rbp, -0xd00
adc ecx, eax
call 0x4013d2
jmp 0x401426
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x40157c
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40151a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x401566
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401539
push 0x3a707474
jne 0x401592
js 0x401552
jae 0x40158c
outsb dx, byte cs:[rsi]
je 0x40154b
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4015b9
jb 0x4015ab
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4015d6
jb 0x4015e9
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x2136fe
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x2136fe
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x4014b4
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4015df
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x40158d
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add dword [rax], eax
jmp rbp
call 0x706f1687
jb 0x40169f
movsxd rbp, dword [rdi]
jae 0x401699
insb byte [rdi], dx
js 0x40169f
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x40167f
cmp rsi, rcx
jae 0x401687
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x401666
cmp al, 0x8f
ja 0x401666
cmp byte [rsi - 2], 0xf
je 0x40166c
sub al, 0xe8
jg 0x401669
push rdi
cmp al, 1
ja 0x401654
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x401657
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x401684
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4016db
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1b59
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40171f
mov al, 0xa
jmp 0x40171f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4016fb
inc ebx
mov al, 0
jmp 0x401723
mov al, 2
jmp 0x401723
mov al, 3
jmp 0x401723
mov al, 0x3c
jmp 0x401723
push rcx
rcr ah, 1
fstp st(7)
jle 0x401764
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x401776
jg 0x401768
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6eeb
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4017c2
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb693f
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4017ca
cmp esi, 0x21585055
jne 0x4017ce
jge 0x4017c0
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4017c3
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4017c7
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x401873
pop rcx
or al, 0x3b
jb 0x401879
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4017eb
jmp 0x4017ed
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x366172e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf53976
in eax, dx
jg 0x401825
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x40186b
mov bh, 0x2a
add edi, 0x10
jmp 0x401868
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4018a5
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4018e1
jne 0x4018f8
fstpnce st(6), st(0)
jle 0x4018c1
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4018f7
jrcxz 0x40192b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b88f
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4019aa
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x40196a
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295f3f
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4019dd
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x401977
and ecx, 7
or al, 0xeb
jae 0x4019e2
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x401a17
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x401a55
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401a0e
push rax
call 0xffffffff868d16fb
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401a18
std
cmp edi, esi
xchg eax, edi
jle 0x401a6d
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95ff9
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401a6b
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401a59
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x401a82
js 0x401ac2
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x401b54
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2d8f
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x401b75
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401b7a
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc2162c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401b08
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
adc cl, byte [rdx]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + 0x90800a], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dil, dil
sub dword [rax], eax
add byte [rsi + 0xb], ah
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401c2e
je 0x401c37
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401c00
mov dh, 0x7d
jbe 0x401bff
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401c38
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c800
and byte [rdi + 0x6100006], bl
add al, dl
or ecx, eax
enter 0x80f, 0
sbb byte [rcx + rcx], cl
add byte [rax + 0x13c813e4], ch
or al, byte [rax]
ror byte [rbx], 0
js 0x401c32
or esp, esp
add ecx, dword [rax + rax]
movabs al, byte [0x1f204fb1180000d]
add byte [rax + 0x2d94000f], dl
pop rdi
in eax, 0
adc byte [rdi], dl
adc dword [rax], eax
jo 0x401c4b
enter -0x6ff1, 0x2e
adc al, byte [rax]
adc eax, dword [rax]
stc
add esp, esp
add ah, dl
xor dl, byte [rax + rax]
call 0x7cc07c98
add bh, byte [rcx + 0x15]
add al, bh
add byte [rax], al
enter -0x7eca, 0x7c
add byte [rax], cl
sbb byte [rdi + 0x3f], al
jb 0x401bf0
sub eax, 0x17401907
sbb dl, byte [rbx]
enter -0x37f9, 0x41
sbb eax, dword [rax]
adc byte [rbx], bl
jns 0x401cb9
adc eax, dword gs:[rcx]
add al, 0
int1
call rbx
jo 0x401cf2
mov cl, 0xc
sbb edi, dword [rdi - 0x6ffd68e7]
or dword [rip + 0x171bc049], 0
adc ch, byte [rax + rcx*2 + 6]
mov ecx, 0x5f44402e
mov byte [rsi + rsi*2], cl
pop rcx
cmpsd dword [rsi], dword ptr [rdi]
add dword [rdi], edx
push rbx
and dword [rcx], ebx
in al, dx
jp 0x401cfb
test byte [rbp + 9], bl
xchg eax, ecx
xchg byte [rdi - 0x6c9b285b], dl
xor ebp, dword [rsi + 0x2077a827]
xor bl, r8b
leave
test eax, 0xd8324de
leave
stosb byte [rdi], al
jmp 0x401c93
adc dword [rax], esp
or dword [rsi + rsi], 0xfffffffa
lodsb al, byte [rsi]
add al, 0xc1
xchg ah, ah
in al, 0x21
add dword [rax + 0x6481733], esi
sbb dword [rdx + 0x60b246b1], edx
jb 0x401d67
pop rax
add dword [rdi - 0x4c], ebx
ja 0x401d0e
and al, 0x83
or al, 0xc9
mov eax, 0x90c8bc97
or al, 0x32
mov ecx, 0x20c9dac0
xor al, r12b
dec eax
add cl, ah
nop
and dword [rcx], ebx
rcr byte [rbp - 0x2c], 1
sbb dword [rdx - 0x278479bf], edx
sbb dword [rax + rcx*2 + 6], esp
fadd st(2), st(0)
loopne 0x401cb1
nop
and edx, ebp
in al, 0x12
add ecx, dword [rdx + rsi]
and al, 0x27
call 0x32840974
enter 0x6290, -0x10
test dword [rbx - 0xbdf36f4], eax
scasb al, byte [rdi]
clc
nop
or al, 0x32
and al, 0xd9
cld
and byte [rdi], dl
in al, 4
add al, 0
sub eax, 0xc90c8324
add al, 0x52
or al, cl
nop
or al, 0x32
jnp 0x401d6e
cmpsd dword [rsi], dword ptr [rdi]
leave
and byte [rbx + 0x32], al
adc bh, cl
adc al, 0x39
and al, 0x83
or al, 0xf5
sbb byte [rax + 0x39219064], bl
sbb al, 0x44
and byte [rcx], bl
xchg eax, edx
xchg byte [r10 + 0x24], bpl
nop
sbb dword [rax + rcx*2 + 6], esp
sub byte [rsi - 0x6f9b78d4], dh
and edi, ebx
xor byte [rip + 0x24320c06], al
xor al, 0x2b
cmp byte [rbx + 0x32], al
enter 0x5590, 0x3c
add byte [rbx + 0x4020c90c], 0xa6
and byte [rax], cl
jg 0x401d77
jg 0x401dd9
xor cl, al
and byte [rdi + 0x17], ah
cld
mov ebp, 0xc0943a7
adc eax, 0x17071757
loopne 0x401dce
sbb dword [rdx + rdx - 0x10e8daa1], edx
add dword [rsi], edx
ret 0x472f
xor dword [rdi], eax
add eax, 0x657620c
xlatb
cmpsb byte [rsi], byte ptr [rdi]
add al, 0xc6
scasb al, byte [rdi]
pop rdx
adc al, 0x57
imul edx, dword [rax], 0x1b
xchg eax, edx
rcl dword [rdi], -0x18
jle 0x401e30
js 0x401e52
cmpsd dword [rsi], dword ptr [rdi]
lahf
or esi, dword [rdi + 0x20]
sbb esp, dword [rcx + 0x222f871b]
ror byte [rsi], cl
mov ebp, 0xec0666b2
in eax, dx
add byte [rdx], cl
or dl, dh
in al, 0xc9
in eax, dx
sbb eax, 0x81b0d5f
cmp al, 0x39
enter 0x2f05, -0x70
sub eax, 0x39060002
test byte [rdi + rdi - 0x79eef45d], bl
nop
sub r10b, byte [rax + 0x6421dd]
jmp 0xa2c3e49
xor byte [rbx + 0x12], al
adc r9b, byte [r9]
adc dword [rcx], ebx
in al, 0xec
sbb ebp, dword [rdi + rsi*2]
test dword [rcx], edi
in al, dx
adc byte [rsi + 0x65], dh
mov bh, 0x5f
test byte [r9], r9b
mov edi, 0xf6793908
or dl, byte [rip - 0x6ffef9d1]
jns 0x401e1b
and dword [rdi + rbp*4 + 0x17], ebp
leave
or dword [rdi], eax
adc byte [rsi], dl
leave
add dword [rdi], edx
ja 0x401e7f
test dword [rip + 0x4793d839], edi
adc al, 0xa
xor byte [rax], dl
cmpsd dword [rsi], dword ptr [rdi]
xor dword [rax - 0xe], 0xffffffec
cmp dword [rdx], ecx
sbb byte [r11 + 0x1f], r13b
pop r13
and byte [rdi], ch
nop
or ah, byte [rbx + 0xa]
lodsd eax, dword [rsi]
rol byte [rcx + 0x33], cl
test byte [rdi], dl
retf
adc dword [rdi - 0x3de7be60], ecx
fisttp word [rdi + 0xe]
ret 0xf3c9
pop rdx
jg 0x401ed8
or esp, dword [rax + 0x20e40b2c]
cmpsd dword [esi], dword ptr [edi]
or dword [r11], 0x60
nop
mov ds, word [rbp + 0xbaa10cf]
ja 0x401e91
and byte [rbx + 0x4a3af45c], al
mov edi, 0x39b42536
add dword [rdx + rax], ecx
sbb dh, byte [rdi + 0xd]
in al, dx
nop
or al, 8
sbb cl, byte [rdi + rax*2]
and byte [rip + 0x760c8727], ch
sub dl, byte [rbx]
scasb al, byte [rdi]
cmp edi, dword [rcx]
enter 0x3620, -0x7c
outsd dx, dword [rsi]
mov edi, 0x73a12bd
ja 0x401ef9
out dx, eax
or dword [rax + rcx*8], 0x10
jbe 0x401e75
mov edi, 0x6cf2179f
nop
mov bl, 0x43
or al, 0xd
test eax, 0x8176102f
sbb al, 0x18
or eax, 0x9c83176b
cmp eax, 0x970db9e1
loopne 0x401f3e
mov edi, 0x1d9e663b
xchg eax, edx
xchg eax, ebx
sbb byte [rbx], cl
ja 0x401ea6
adc al, byte [rdi - 0x65b13e70]
pop rdi
cmp eax, dword [rsp + rbx*2 - 0x4092e8a0]
pop qword [rdx]
jns 0x401f97
cmp eax, 0xc1f2ce7
ja 0x5c2c40d1
test eax, 0x39020ffa
and eax, 0x11a970f
adc byte [rbx], bl
xchg eax, edx
sbb ch, ah
sbb edx, dword [rdi]
push rdi
cmp al, 0x2f
shl byte [rcx], cl
insb byte [rdi], dx
or byte [rdi + rdx - 0x62], dl
adc byte [rdi + 0x720ece41], ah
mov eax, 0xb117048a
loopne 0x401f77
ret 0xa1c9
sub bl, dh
mul dword [rsi + rdx*8]
add bh, byte [rbx + 0x5fb6af12]
mov ebx, 0xffe5ffb7
movsxd rsi, dword [rdx + 0x74]
jae 0x401ff7
jne 0x401feb
movsxd rbx, dword cs:[rdi + 0x4a]
push r10
pop rdi
push r11
push rsp
or dword [rax], eax
mov ebx, 0x65fb5bff
jb 0x402000
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401fcb
outsd dx, dword fs:[rsi]
fcmovnu st(0), st(3)
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x40201b
jne 0x402037
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x402030
std
add eax, 0x2965b7f6
xor eax, 0x5f243538
imul bp, word [rsi + 0x69], 0xd6ed
clc
mov edi, 0x61727208
jns 0x40203f
outsb dx, byte gs:[rsi]
je 0x402056
jns 0x40200f
or ch, byte [rbp + 0x65]
and byte [rbx + rbx + 0x6d75f730], ch
insd dword [rdi], dx
jns 0x402025
or eax, 0x2a74295f
push qword [rsi + 0x6b]
insd dword [rdi], dx
adc bl, byte [rdi + 0x5a277070]
push rbx
je 0x402053
xor dword [rcx], edi
jo 0x402088
fistp dword [rdx - 5]
imul esp, dword [rbp + 0x63], 0x309c7765
jp 0x402085
movabs byte [0x836b773a74637572], al
sbb dh, byte [rbx]
jae 0x40209c
movsxd rsp, dword [rcx + 0x75]
outsb dx, byte [esi]
fcmovne st(0), st(7)
adc al, 0x36
imul esp, dword [rdi + 0x6e], 0x380c650f
push 0x69
outsd dx, dword [rsi]
mov edi, 0x60f76d6d
cmp qword [rdx + r11], r9
jne 0x402089
js 0x4020bf
xor r14b, byte [rcx]
lcall [rbp - 0x25]
jbe 0x402005
test ax, 0x7a6c
imul ebx, dword [r15 + 0x70], 0x6f
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0xdc19ec45
push rdi
xor byte [rbx], bl
or dword [rcx], ebx
adc dword [rbx + 0x60], edi
lodsd eax, dword [rsi]
sbb esi, dword [rcx]
cwde
pop rdi
adc dh, byte [eax]
clc
fcomp st(0), st(6)
insb byte [rdi], dx
jo 0x4020b8
pop rbp
adc dh, byte [rcx]
xor eax, 0x6c786543
fcmovnu st(0), st(6)
movsd dword [rdi], dword ptr [rsi]
retf 0x4c73
xor eax, 0x45b66153
push rbx
fdiv dword [rdi + 0x73a83623]
jne 0x4020fb
jae 0x4020ba
cmp al, dl
scasb al, byte [rdi]
mov al, 0x77
pop rdi
imul ebp, dword [rbp + 0x69], 0xa37417a
jle 0x402105
lodsd eax, dword [rsi]
add edi, edi
and byte [rbp + 0x414d4345], ah
push rbx
in eax, dx
adc al, 0xd6
imul byte [rcx + 0x4a]
and al, 0x35
movsd dword [rdi], dword ptr [rsi]
fcomp st(2)
or ch, byte [rbx - 0x57]
xchg byte [rip + 0x42ec6e61], cl
or bl, byte [rbx + 0x12]
and dword fs:[rdi + 0x5d1c6b77], eax
fld xword [rcx]
xor al, 0x67
adc dword [rax + 0x7b], esi
ret 0x216d
xchg eax, ecx
loop 0x402152
fisub word [rbx + 0x68]
lodsb al, byte [rsi]
test dword [rdx + 0x2a], eax
sbb esp, dword [rdi]
push rcx
xchg eax, ecx
and byte [rbx], dl
test dword [rdx + 0x13], esp
add bl, cl
ja 0x402126
ret 0xd9b6
adc eax, 0x790b2639
mov ecx, 0x9beb6e34
jnp 0x40217d
mov eax, 0x1e1136c9
sub dword [rdi + 0x75], ebp
jae 0x402146
xchg eax, ebp
mov dh, 0x6d
sub dh, byte [rax + 0x18]
jbe 0x4021a0
jbe 0x40217e
add al, 0x57
cmp dl, byte [rax + 0x36663455]
sub eax, 0xb046d96a
stosd dword [rdi], eax
xor byte [rax], ch
fldenv [rbp + rcx*2 + 3]
pop rcx
xlatb
push rsi
int 0x15
jo 0x402136
pop rbx
imul edi, dword [rcx + 0x3a312866], 5
insb byte [rdi], dx
xor byte [rip + 0x332b640d], ch
xchg eax, esp
jb 0x402140
mov dl, 7
wait
retf 0x31f4
je 0x4021d7
jo 0x402185
push rdi
push 0x4d
xor ch, al
movsb byte [rdi], byte ptr [rsi]
push rsi
sub al, byte [rbp - 0x18dc8b4e]
sbb edx, dword [rbp + 0x66d953b9]
je 0x4021d9
jb 0x4021a1
and eax, 0x3b640259
jo 0x4021e1
outsb dx, byte [rsi]
cdq
mov dl, 0xd9
and dword [rbx], eax
xor al, 0x64
sub byte [rsi - 0x59], cl
mov dl, 0xb6
lea esp, [rsi + rbp*2]
sbb byte [rbx + rsi*2 + 0x70], dh
xchg eax, edx
and al, 0x35
mov bh, 0x65
jb 0x402124
adc eax, 0xb8362986
retf -0x30f6
js 0x402213
jp 0x402221
and ebx, 0x383b4b81
movabs eax, dword [0x5f01d8386816b174]
push rbx
and eax, 0xc064a2bd
sbb byte [rbp + 0xdf922f0], ch
jns 0x4021fe
outsb dx, byte [rsi]
or al, 0x5a
iretd
btc dword [rcx + rbp*2 + 0x20], eax
scasb al, byte [rdi]
test eax, 0x560d7ab9
cmp eax, 0xedfdc02b
outsd dx, dword [rsi]
wrmsr
imul ebp, dword [rcx + 0x2f], 0x424f4c47
xor r11b, bl
pop rdx
pop rbx
pop rsi
jae 0x402254
pop r15
xchg ah, al
js 0x40224e
sbb dh, byte [rsi]
mov esi, esi
mov edi, 0x4152465f
pop r15
or r11b, byte [rax]
or ebx, ecx
sub dword [rip + 0x554e474f], 0x48
and byte [rax + 0x44], cl
push rdx
loopne 0x40221a
adc bh, byte [rdi]
push rbx
cmp r10d, dword [r9 + rax*2 + 0x42]
sub r8b, r10b
sub eax, 0x64c7c26c
adc byte [rbp + 0x6e0c5272], ah
ja 0x4021bc
pop rcx
in eax, dx
sub byte [rax + rbx*8], bh
std
outsd dx, dword [rsi]
jbe 0x4022ad
push r10
jmp 0x3d38186
js 0x40223c
and dl, al
nop
xchg dword [rdx + rsi*2], ebp
cmp ah, byte [rdi + 0x49]
movsxd rbp, dword [rbp + 0x296a5899]
xor dword [rbx + 0x49429161], edi
out dx, al
sar byte [rcx + 0x451073b7], 1
push rbx
add al, 0
mov r14d, 0x78507b6d
stosd dword [rdi], eax
jno 0x4022e0
in al, dx
in eax, dx
xor dword [rsi - 0x74], ebp
xor al, 0xf2
push r11
cmp byte [rcx + 0x3d747570], dl
mov edi, 0x75707a5d
outsb dx, byte [rsi]
movabs byte [0x5f434249b84040ab], al
xor dh, byte [rsi + 0x2b]
in eax, dx
mov dh, 0x2e
add dword [rip + 0x46733582], esi
xor eax, 0xbb64307b
jbe 0x4022e1
je 0x402329
and al, 0x5f
adc byte [rcx + 0x6251b6c2], cl
nop
movsxd rsi, dword [rcx]
ror dh, 1
jo 0x4022da
neg byte [rax + 0x7036af4b]
and ecx, dword [rcx + 0x4589583e]
in al, dx
pop rbp
pop rax
pop rax
pop rdi
xor eax, dword [rbx + 0x44af6157]
test byte [rax + 0x4f], dl
push rax
mov ebx, 0x5f34e053
fdivr dword [rdx - 0x68]
mov al, 0x10
outsb dx, byte [rsi]
imul edi, dword [rdx - 0x78ad0db6], -0x53
jbe 0x4022a9
insb byte [rdi], dx
pop rcx
scasb al, byte [rdi]
jae 0x402313
pop rax
movabs dword [0xd66c9e660773848d], eax
mov al, 0xc2
push rsi
lahf
cli
xor byte [rdx], al
mov word [rbx], ds
outsb dx, byte [rsi]
lea eax, [rdx + 0x6f4b5223]
push rbx
pop r15
mov eax, 0x11b4cdc7
jo 0x402397
outsb dx, byte [rsi]
xor al, 0x49
add bh, dl
jbe 0x402335
jnp 0x402371
xor dword [rbp + 0x76], eax
test eax, 0x40773624
xchg eax, esp
mov bl, 0x21
xor al, 0x4a
mov dl, 0xf7
rol dword [rsi + 0x17], cl
mov dl, 0x9c
js 0x4023a7
je 0x402386
ret
or al, 0x36
mov dl, 0xb6
js 0x40231a
rol byte [rsi], 0x64
and al, 0x4c
mov ah, 0x68
add byte [rcx], bh
pop rbx
mov word fs:[rsi + 0x6d], gs
imul esp, dword [rsi], 0x77
pop rsp
js 0x402375
cld
pop r15
xor ch, byte [rax]
std
sal dword [rsi + 0x5430430c], 1
out 0x21, eax
and eax, 0x25d2482c
iretd
fisttp qword [rcx - 0x3fdc2974]
push r14
mov cl, ah
sub ebx, dword [r15]
mov byte [rsi + 0x3f], dh
test byte [rip + 0x505d4946], al
movsxd rsp, dword [r11 - 0x3a]
sub dword [rcx], eax
sbb byte [rdx], ah
xchg eax, ecx
sub eax, dword es:[rcx + 0x393b2130]
or esi, dword [rdx + 0xc61a519]
iretd
cmp dword [rdi - 0x3348f138], edx
movsxd rsi, dword [rdx + 0x67]
loopne 0x40238f
add bl, byte fs:[rdi + 0x68]
sub edi, dword [rcx + rax - 0x1d]
mov ch, 0xa4
mov bh, 0x54
add esi, dword [rdx]
fidiv dword [rdx + 0x61c14178]
or dword [rbx + rbx*8], ecx
jp 0x40244a
add byte [rbx - 0x28], dh
in eax, 9
retf 0x54ad
push 0x2cd5de6b
jno 0x402426
jbe 0x40241b
hlt
mov ebp, 0x9c204d70
or al, 0x70
test edx, ecx
jmp 0x40245a
sub esp, ecx
sbb ah, cl
push rax
movsxd rbx, eax
xor al, 0x15
and bh, byte [rbp + 0x6d]
enter 0x445, -0x27
retf 0x590c
js 0x40245e
sub al, 0x81
jo 0x4023fa
xor al, 0x73
out dx, al
lodsb al, byte [rsi]
cmp dh, byte [rsi]
mov dh, 0xf6
imul rax, qword [r8], 0x5259521f
pop rdx
push rdx
add cl, byte [rdi]
xchg eax, ecx
cmp dword [rbx + 0x68], ebx
imul edi, dword [rax + 0x45], 0x584d808e
add dword [rdx + 0x4d], edi
sbb byte [rcx + 0x703913a5], ah
push -0x1bd4ba94
ror dword [rdx + 0x53], cl
mov dword [rbp + 0x71], esp
insb byte [rdi], dx
push rdi
movabs al, byte [0x2447621235ae508c]
xor eax, 0x4840a122
xchg eax, ecx
mov ch, 0x80
cmp ecx, dword [rax - 0x19]
jo 0x4023e1
mov qword [r8 + 0x33], r10
xchg eax, edx
pop rsi
add esp, dword [rbp + 0x5c]
xor dword [rdx - 0x1f98945b], 0xa185bd61
lodsd eax, dword [rsi]
adc ebp, dword [rsi + 0x48]
pop r15
jbe 0x4024af
jnp 0x402422
scasb al, byte [rdi]
and dword [rip + 0x2e312cdf], ebx
xor esp, dword [rax]
mov ebx, 0x557b6265
outsb dx, byte [rsi]
ja 0x402511
push rbx
and ebp, dword [rbp + 0x65]
cmp al, 0xa
xor byte [rsi - 0x49], bl
cmp byte [r8], sil
stosb byte [rdi], al
jle 0x4024a9
mov es, word [rbp + rax*2 - 0x6b7f166d]
and ah, bl
or edx, dword [rsi + 0xb764e96]
jg 0x4024b5
jae 0x402531
insd dword [rdi], dx
or byte [rdx + 7], ah
je 0x402530
push -0x3c95148e
or dword [rdi - 0x1d], ecx
jo 0x4024cf
outsb dx, byte [rsi]
outsd dx, dword [rsi]
or eax, dword [rdx - 0x9d12293]
sub eax, 0x380d6715
sbb ebx, ebp
jp 0x402508
jne 0x40248a
sub eax, 0x9b0d007a
mov ecx, 0x3872d6b7
or dword [rcx + rdi*2 + 0x6e], esp
cwde
and eax, ebx
pop rcx
sbb dword [rsi + 0x43], esi
je 0x402504
scasd eax, dword [rdi]
leave
pop r15
sbb eax, eax
test dword [rax], ebp
add ebp, dword [rdi - 0x7d]
or dword [rdx + 0x74], edx
jb 0x402575
pushfq
or dword [rdi + 0x6f2c0a3d], esi
or cl, ch
add eax, 0x877423c4
imul esp, dword [rdi + rbp*2], -0x4f
push 0x2752b2dd
push 0x635d0d71
sub eax, 0x40ad428
test byte cs:[rbx + 0x75c8cb66], 0xbd
insb byte [rdi], dx
adc dword [rax + 0x43], esi
pop rdx
in al, dx
ret
or ebp, dword [rdx + 0x63]
jb 0x4024e4
jb 0x4025ac
jnp 0x4025b2
jnp 0x4025aa
cdq
add al, 0xa8
insb byte [rdi], dx
imul ebp, dword [rsi + 0xfd52c8], 0
cwde
adc r13d, edx
sbb edi, dword [rbx]
fist word [rdx + 0x372137b3]
sbb al, 0x40
and dword [rcx], ebx
add dword [rbx], esp
sbb dword [rsp + rdx*2 + 0x54], esp
and byte [rax + rcx*2 - 0x7a], ah
add al, 0x31
je 0x402597
sbb dword [rsp + 0x44], esi
jg 0x40254c
and byte [rdi - 0x944], al
outsd dx, dword [rsi]
cwde
cwde
and al, 0x83
or al, 0x32
xor byte [rip + 0x480d8308], al
xor ecx, dword [rsi + 0xb]
enter -0x37c1, -0x27
in al, 0xec
and byte [rax + 3], cl
sti
pop rax
ror byte [rdx + rsi], cl
sbb byte [rsi + 3], dl
test byte [rdi], dh
and edi, edi
rol byte [rip + 0x45dd2582], 0x5e
mov edi, 0x7b3921ff
xor esp, dword [rdi]
mov edi, 0x1ba4b046
mov dl, 2
imul edi, dword [rdi], -2
and byte [rdi + 0x6f], ah
cmpsd dword [rsi], dword ptr [rdi]
nop
cwde
mov dl, 0xc9
jp 0x402631
test dword [rcx - 0x57c09e37], edi
out 0x83, eax
pop rbp
fld dword [rdi + rdi + 0x423f84ff]
xor cl, al
and al, al
sar byte [rax - 0x6ff9effe], 0x4b
sbb dword [rsi - 0x2fd90fed], ecx
xchg eax, esp
pushfq
lcall [rdx]
mov dword [rdi], edi
movabs al, byte [0x501e0a020c8390b]
and dword [rbx], ebx
mov dl, 0x10
xchg eax, esp
insb byte [rdi], dx
and ecx, 0x2f071726
paddusb mm4, qword [rax + rcx*8 - 0x72]
popfq
nop
pop rbx
and bh, cl
jg 0x402635
sbb al, 0x3f
movabs dword [0x42ff07af485466e6], eax
rcl byte [rax + 0x72], cl
or dword [rcx + 0x373392bf], ebp
movabs eax, dword [0x86c85566cdbf07cf]
mov cl, 0x3f
fxch st(0), st(1)
push rax
jb 0x40263d
jg 0x402626
mov edi, 0x8293733
fild word [rdi]
jg 0x402683
and al, 0x17
leave
xchg eax, esp
add ecx, ecx
leave
xchg eax, ebx
fsubr qword [rdi + rax + 0x1023f07]
or al, 0x9b
push rbp
sti
leave
cdq
wait
add byte [rdi + 7], dl
call qword [rax]
leave
xor byte [rbx + rax*2 - 0x19], 0x3f
psubb mm7, qword [rbx]
and byte [rax + 0x3ff3ff07], bh
xchg eax, ebx
add dword [rdi + rcx*2], ebp
leave
xor byte [rdi + rdx], 0xf8
or byte [rax + 0x4e], cl
sahf
mov ecx, 0x1f07f07
insb byte [rdi], dx
or ebx, dword [rcx]
adc byte fs:[rax + 0x5c833fbf], bl
and al, 0x83
or byte [rcx], al
or al, 6
adc byte [rdx + 0x2440c701], dl
fnstcw word [rcx]
jo 0x402703
or al, byte [rax]
adc byte [rdx + 0x7f], ch
jg 0x40271a
movsb byte [rdi], byte ptr [rsi]
mov ebx, 0x10083f10
sbb ecx, dword [rdx - 0x32]
rol byte [rdi], 0x7f
or byte [rip - 0x3727cd81], dl
xor byte [rdi + 0x3f], dl
xor al, 0x8c
sal dword [rax - 0x5d59f8f0], cl
xchg eax, edx
xchg eax, ebx
movsxd rax, dword [rdi + rdi*2 - 0xae19ece]
retf -0x7b9a
mov ebx, 0x414800
imul ecx, dword [rsi - 0x62], 0x1f0ee8ff
pop rdi
or al, 0xc6
and dword [rcx + rcx + 0x7f], ebp
xor byte [rax - 1], dl
adc dword [rax], eax
add byte [rax - 0x6f], ah
nop
add byte [rax], al
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x52f7fdea], ecx
cmp ebx, eax
and al, 0xcd
sbb ebx, dword [rbx]
or eax, 0x2940
or ax, word [rax]
add byte [rax + 0x6a], dl
add byte [rax], al
add qword [r8], rax
sbb ah, dh
add byte [rax], al
add bh, bh
