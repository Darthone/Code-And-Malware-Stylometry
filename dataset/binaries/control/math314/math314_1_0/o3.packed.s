call 0x402268
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x402080
add ebx, ebx
je 0x402036
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x40206e
cmp rbp, -4
ja 0x40206e
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x402056
add ecx, 4
mov dl, byte [rax]
je 0x40207e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x40206e
ret
cld
pop r11
cmp r8b, 2
je 0x402096
jmp 0x402113
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x4020a6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x40208e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x4020be
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x4020ab
sub eax, 3
jb 0x4020dc
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x402113
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x402103
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x402101
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4020f0
cmp rbp, -0xd00
adc ecx, eax
call 0x402042
jmp 0x402096
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4021ec
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40218a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x4021d6
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x4021a9
push 0x3a707474
jne 0x402202
js 0x4021c2
jae 0x4021fc
outsb dx, byte cs:[rsi]
je 0x4021bb
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x402229
jb 0x40221b
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x402246
jb 0x402259
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x214ae9
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x214ae9
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x402124
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x40224f
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4021fd
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add dword [rax], eax
jmp rbp
call 0x706f22f7
jb 0x40230f
movsxd rbp, dword [rdi]
jae 0x402309
insb byte [rdi], dx
js 0x40230f
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x4022ef
cmp rsi, rcx
jae 0x4022f7
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x4022d6
cmp al, 0x8f
ja 0x4022d6
cmp byte [rsi - 2], 0xf
je 0x4022dc
sub al, 0xe8
jg 0x4022d9
push rdi
cmp al, 1
ja 0x4022c4
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x4022c7
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x4022f4
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x40234b
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c27c9
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40238f
mov al, 0xa
jmp 0x40238f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x40236b
inc ebx
mov al, 0
jmp 0x402393
mov al, 2
jmp 0x402393
mov al, 3
jmp 0x402393
mov al, 0x3c
jmp 0x402393
push rcx
rcr ah, 1
fstp st(7)
jle 0x4023d4
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x4023e6
jg 0x4023d8
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a7b5b
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x402432
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb75af
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x40243a
cmp esi, 0x21585055
jne 0x40243e
jge 0x402430
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x402433
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x402437
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x4024e3
pop rcx
or al, 0x3b
jb 0x4024e9
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x40245b
jmp 0x40245d
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x366239e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf545e6
in eax, dx
jg 0x402495
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x4024db
mov bh, 0x2a
add edi, 0x10
jmp 0x4024d8
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x402515
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x402551
jne 0x402568
fstpnce st(6), st(0)
jle 0x402531
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x402567
jrcxz 0x40259b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1c4ff
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x40261a
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x4025da
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58296baf
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x40264d
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x4025e7
and ecx, 7
or al, 0xeb
jae 0x402652
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x402687
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x4026c5
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x40267e
push rax
call 0xffffffff868d236b
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x402688
std
cmp edi, esi
xchg eax, edi
jle 0x4026dd
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96c69
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x4026db
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x4026c9
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x4026f2
js 0x402732
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x4027c4
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad39ff
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x4027e5
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x4027ea
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc2229c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x402778
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
out 5, eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add al, al
add ch, byte [rdx + 0x90]
add byte [rax], al
add byte [rax], al
and byte [rcx], al
call qword [rax + 0x4200001a]
or byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x40289e
je 0x4028a7
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402870
mov dh, 0x7d
jbe 0x40286f
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x4028a8
sahf
sahf
add al, 0
cwde
add eax, 0x1f90d000
and byte [rdi + 0x5880006], bl
add byte [rdx - 0x6fd837f7], ah
invd
add al, ah
or dword [rax], eax
movabs al, byte [0xe8000a07c813e40a]
or eax, dword [rax]
loopne 0x40289f
stc
add edx, esi
add ecx, dword [rax + rax]
add byte [rip + 0xe60000d], cl
jge 0x4028a3
stc
add byte [rsi], cl
add byte [rax + 0xf], dh
add byte [rcx + rax*2 + 0x27], ah
mov al, 0x72
sub byte [rdi], 0x10
adc dword [rax], eax
adc ecx, eax
enter 0x4210, 0x12
add byte [rax + 0x601cbb13], bh
or ebp, dword [rcx + 0x47]
out dx, eax
adc al, 0x4d
jl 0x4028cc
jns 0x4028cc
adc eax, 0x16f800
add byte [rsi + 0x3e], cl
cmp dword [rax + rax*4 + 0x17], 0x180800
clc
and byte [rdi], bh
sbb dword [rax], eax
add byte [rax + 0x1a], dl
add al, al
and byte [r15 + 0x20], r9b
sbb eax, dword [rax]
rcr byte [rsi + rcx*4], 1
in al, 0xdd
xchg eax, esp
adc eax, dword [rcx]
add al, 0
int1
dec dword [rcx*2 + 0x1bc595c3]
mov edi, 0xc0029719
nop
or dword [rax + rbx*8 + 0xf], 0x40
sbb eax, dword [rax]
adc byte [rdi + 0x48], ch
mov ecx, 0x5f44402e
enter -0x7ca0, 0x74
cmpsd dword [rsi], dword ptr [rdi]
loopne 0x402921
push rbx
xchg eax, edx
shr dword [rsi + 0x477a4f84], 0x60
fcom dword [rbp - 0x6879e6f0]
movsd dword [rdi], dword ptr [rsi]
xlatb
enter 0x61d9, 0x43
scasb al, byte [rdi]
jg 0xd273264
xor cl, cl
loope 0x402961
test esp, ebp
cmp byte [rbx - 0x28], al
add byte [rdi + 0x43], al
fcom dword [rax]
ret 0x37e6
add byte [rdi - 0xe], al
loope 0x402912
xor ah, byte [rdx + 5]
lahf
add eax, 0xa6f74701
test byte [rcx + 0x14981b2b], dh
sub al, 0x23
and eax, 0x3f0717cc
outsd dx, dword [rsi]
add ecx, eax
sub edi, dword [rcx]
add al, 0x3f
and byte [rax - 0x32], cl
sahf
cmp al, 0x74
adc bl, byte [rdi]
and eax, 0x59171a5e
in al, 0xc9
xchg eax, ebx
add al, byte [r8]
cmp eax, 0x720e7604
nop
cvtpi2ps xmm5, qword [rcx + 1]
add byte [rdx], dh
xor byte [rdi + rdx*2 - 0x64], 0x17
and byte [rbx + 0x10d84361], ch
mov edi, 0x4717d347
test byte [rbp*8 - 0x48dd4fbf], cl
push rsi
in al, 0xec
leave
and eax, dword [rcx]
movsxd rcx, dword [rdi - 9]
mov al, 0x57
mov es, word [rdx]
mov r11b, 0x17
out dx, eax
and esp, esp
in al, 0xd9
adc al, 0x2f
clts
mov edi, 0xb086c21c
ficom word [rdi]
pop rdi
or eax, 0x4f679003
sahf
movabs al, byte [0xc9c803192f01651a]
jb 0x4029f8
adc edi, dword [rbp + 0xd]
or dword [rdx + rsi], ecx
mov cl, 0xa0
outsd dx, dword [rsi]
cmp dword [rax], ecx
xchg dword [rdi + 0x1d], ebx
jg 0x4029df
add eax, dword [rsi + rcx*8]
add r11b, byte [rbp + 0x27205704]
mov ebx, 0x40f4704
add bl, ah
add bh, byte [rcx]
enter 0x1d92, 4
outsd dx, dword [rsi]
fadd dword [rcx]
movsb byte [rdi], byte ptr [rsi]
adc byte [rsp + rax - 0x29], al
sbb esp, ebp
nop
add al, 0x1c
push rbx
cmpsd dword [rsi], dword ptr [rdi]
iretd
xchg eax, edi
adc eax, 0xba1708df
add dl, byte [rdx + 0x1aaca6c1]
test esi, 0x9058c817
sbb al, 0xd3
add al, 0x67
in al, dx
adc byte [rdx], dh
jrcxz 0x402a7c
add eax, 0x9311502f
or dword [rsi + rsi*2], 0xffffffda
jo 0x402a72
sub eax, dword [rcx - 0x10794f8d]
add byte [rip + 0x1760e487], 0xd8
mov word [rip + 0x3047a85f], es
adc ch, byte [rax + rcx + 0x19]
in al, dx
mov ah, 0xcc
and byte [rdi + 0x49f62190], al
jno 0x402ac4
pop rsi
add dword [rdi - 0x37ff4218], esp
and edi, 0x10
mov dh, 0x47
sahf
insb byte [rdi], dx
movabs rsi, 0x812ffc1aef06f543
sbb eax, 0xc7301892
sbb eax, 0xe33c4707
adc byte [rsi + 0x35], dh
sbb eax, 0x9e4f2724
movsxd rax, dword [rdi]
pop rbx
fadd dword [rcx + rcx*8 + 0x2f6f3662]
out dx, eax
fistp qword [rsi - 0x80]
vpaddusw xmm11, xmm12, xmmword [rdi + 0x73747263]
inc dword [rbp + 0x2e6666e4]
movsxd rax, dword [rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
or edi, esi
jg 0x402b4a
mov edi, 0x65726518
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402b14
fstp xword [rdi + 0x7b]
jnp 0x402b5c
outsd dx, dword [rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x402b64
jne 0x402b80
outsd dx, dword [rsi]
mov edi, 0x6df6fec0
jo 0x402b7d
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bp, word [rsi - 0x49], 0xf46f
mov bh, 0x69
or byte [rdx + 0x72], dh
jns 0x402b88
push rbp
jb 0x402ba6
add byte [rsi + 0xa], ah
insd dword [rdi], dx
fld qword gs:[rax + 0x75206fb9]
insd dword [rdi], dx
insd dword [rdi], dx
jns 0x402b6e
or eax, 0xb774295f
pop rbx
cmp esp, dword [rcx + 0x2a]
insd dword [rdi], dx
adc bl, byte [rdi + 0x47277070]
jbe 0x402b0b
sal esi, 1
jae 0x402af4
pop rdi
pop rdx
movsb byte [rdi], byte ptr ss:[rsi]
fsubp st(5)
mov bh, 0xdd
test eax, 0x5a1a6952
push rbx
je 0x402bb8
cmp byte [rdx], dl
imul ebp, dword [rdi + 0x3e], 0xeffb99b0
push rcx
push rdx
pop r15
int3
or ecx, ecx
insb byte [rdi], dx
stc
push rbp
and byte [rax + 0x44], cl
push rdx
push rsi
adc esi, esi
jle 0x402b8e
push rbx
cld
push rsp
sub byte [r8 + 0x615aee64], r9b
adc byte [rcx], bl
pop cx
movabs rbx, 0x73357e43495ddfff
outsd dx, dword [rsi]
insb byte [rdi], dx
jbe 0x402c1e
xor eax, 0x31787863
xor dword [rsi + 0x2c], esi
insb byte [rdi], dx
imul esi, edx, 0x62c2b5ec
movsxd rdi, dword [rax]
test eax, 0x34329ffa
outsd dx, dword [rsi]
mov bh, 0xb7
push qword [rax + rbp*2 + 0x72]
outsd dx, dword [rsi]
ja 0x402c39
outsd dx, dword [rsi]
jne 0x402c24
outsd dx, dword [rsi]
pop di
outsb dx, byte [rsi]
cmc
insw word [rdi], dx
je 0x402b8e
lodsd eax, dword [rsi]
hlt
push rax
movsxd rdi, dword [r10 - 0x6f]
xchg byte [rcx + 0x42], cl
pop r8
pop rax
pop rdi
xor esp, dword [rdi - 0x33]
or bh, byte [rbx + 0x67426552]
insd dword [rdi], dx
jbe 0x402c6c
jle 0x402c16
mov eax, 0x525f764a
xchg eax, ebx
insb byte [rdi], dx
jae 0x402c85
nop
pop rdx
insd dword [rdi], dx
and eax, 0x76506cec
cmp dword [rsi], esi
jo 0x402c92
jno 0x402c96
pop rbp
insd dword [rdi], dx
in al, dx
movsxd rbp, dword [rax + 0x6b]
sbb dword [rdi + 0x32], ebx
pop rdx
test byte [rdi], r14b
cmp esi, dword [rdi + 0x7b]
lodsb al, byte [rsi]
movabs byte [0x2d5e636943623231], al
imul rax, qword [r14d + 0x1963b5ad], 0x12
xor dword [rcx - 0x12], esp
xchg eax, ebp
in eax, 0x86
imul dh
insd dword [rdi], dx
jae 0x402c64
push r11
add al, 0x45
cmp dword [rdi + 0x4d], ebx
xor byte [rsi - 0x28], ah
nop
adc eax, 0x5245756e
popfq
movsb byte [rdi], byte ptr [rsi]
xor edi, edx
or bl, byte [rbx + 0x61]
test ebp, edi
jno 0x402c4d
or bl, byte [rbx - 0x3d]
push -0x75cefdd0
push rdi
push r11
xor eax, 0xb92f670a
push rbx
pop r15
movabs al, byte [0x29dc37646132c238]
xor al, 0x49
outsb dx, byte [rsi]
xor dword [r13 - 0x21], eax
cmc
xchg al, dl
or al, 0x6d
ja 0x402cdc
add al, 0x4a
push 0x22131ecb
lock add dword es:[rbp - 0x750e5c94], ecx
mov byte [rdi + 0x14], dh
sub al, 0x64
lodsd eax, dword [rsi]
mov ebx, 0xcf5f618d
js 0x402cfe
sbb dword [rcx - 0x7a], ebx
and al, 0x3c
js 0x402d25
sub esi, dword [rcx]
xor byte [rsp + rdx], ch
or dl, byte [rdi]
or ch, byte [rbx]
punpcklwd mm4, qword [rbx + 0x2d]
sub al, 0x5b
xor bpl, dl
xor byte [rax + 0x20184039], dh
and r8b, byte [r10 + rbx*2 + 0x63]
movsxd rax, dword [rax]
cmp dword [rdi + rax - 6], esp
and eax, 0x5cdb42b5
js 0x402cfc
push -0x6b
iretd
jne 0x402c99
lahf
mov dh, 0xc
int 0x54
mov ah, 0x1b
and rax, 0x74d2856c
sub dword fs:[rbp + 0x64], ecx
add dword [rbp - 0x7f], ebp
int 0xba
mov edx, 0x4f363863
mov cl, byte [rcx + rcx + 0x7761400b]
push rsi
jmp 0x6a03f490
outsb dx, byte [esi]
sbb byte [rdi], ah
or dword [rdi - 0x4e], ebp
add dword [rdx + 0x2ddba200], ecx
xchg rax, r10
xchg rax, r9
shl dword [rbp + rdi*2 + 0x5f], cl
rcl dword [rdx - 0x5b9a56a2], cl
wait
jns 0x402cee
pop rsi
sti
or esi, dword [rdx + 0x7773349e]
jo 0x402ce3
cwde
push -0x3fef5135
js 0x402cf6
ret
sub byte [rsp + rcx + 0x48], bh
int 0xc0
add al, 0x6b
popfq
jle 0x402da2
movsxd rbp, dword [rbx - 0x49]
adc ebp, dword [rax]
std
mov ebx, 0x34ef6c6c
je 0x402dbf
xor ebp, dword [rdi + 0x76]
nop
pop rdi
sub esp, dword [rbx + 0x3162d808]
cmp dword [rdx + rbx*2], ebx
jae 0x402d5a
or eax, dword [rcx - 0x48]
or bh, byte [rbx + 0x64]
scasb al, byte [rdi]
sbb byte [rcx - 0x5d], bl
sbb eax, 0x4fd916e8
adc al, 0x58
xchg eax, ecx
jno 0x402db0
add al, 0xd7
scasb al, byte [rdi]
add bl, bh
or al, 0x5c
push rbx
insd dword [rdi], dx
push rsp
insd dword [rdi], dx
mov ss, word [rax - 0x4fa0faa2]
movabs eax, dword gs:[0x2224575fbd3c0ed4]
add ch, byte [rbp + 0x6e3b46c1]
stosd dword [rdi], eax
sbb edx, dword [rax + rsi*2]
in eax, dx
jbe 0x402df6
sub esp, dword [rdi]
lcall [rbx + 0x31]
mov dh, 0xb7
add dh, byte [rcx]
and byte [rbp + 0x6e], dl
ja 0x402e3f
jne 0x402db8
jbe 0x402de7
sbb cl, byte [rbx - 0x63]
fsub dword [r8 + 0x2b]
cwde
or ebp, dword [rbp - 0x73]
jns 0x402e67
cmp al, 0xda
xchg eax, ecx
sal byte [rcx], 0x34
ljmp [rcx]
mov bl, 0xe0
mov ch, 0x10
or al, 0xe6
movabs byte [0x79731c37b6ec9da2], al
insd dword [rdi], dx
jg 0x402e68
je 0x402e7b
push -0x792e291b
or dword [rsi], ebx
jo 0x402e1a
outsb dx, byte [rsi]
outsd dx, dword [rsi]
add eax, 0x872ebadb
sub eax, 0x290d6715
jne 0x402e50
mov ch, 0x58
jmp 0x6456a3b7
sub eax, 0xfc0da869
out dx, al
lodsd eax, dword [rsi]
cmp byte [rcx], cl
jns 0x402ea6
sbb dword [r13 + rsi*4 + 0x2a1f6382], r8d
or al, 0xd8
imul edx, dword [rip - 0x43e4a024], -0x66
sub byte [rcx], cl
test byte [rdi + rbp*2 + 0x2b], 0xa8
je 0x402ec7
and al, 0xa
sub al, 0x3d
jo 0x402e61
fsubr qword [rdi + 8]
add eax, 0x8f120fb3
shl byte [rdi + rbp*2], 1
sub byte [rsi], ch
push 0x726468a0
or bh, byte [rax]
mov edx, 0x635d0d65
sub al, 0x12
movsxd rdx, dword [rip - 0x7b8b0f4a]
and dword cs:[rdx], ebx
sbb al, 0x36
pop rbx
or ebp, dword [r10 + 0x42]
mov bl, 0x67
movabs al, byte [0xa39a7b68b536a1c5]
cdq
pop si
add al, byte [rsp + rbx*2]
push rdx
adc ebp, dword [rax + rax]
std
add byte [rax], al
xchg eax, edi
int 0x88
and eax, 0x87af0140
xchg spl, spl
int3
sbb al, 1
sbb dword [rax + 0x54072366], edx
push rsp
and dword [rcx], ebx
xchg eax, edx
and byte [r9 + rax*2], al
sbb dword [rdx + 0x21747431], edx
out dx, eax
xchg byte [rdx - 0x980bbdc], dl
ljmp [rdi - 0x7d]
or al, 0x32
enter -0x6768, 0x38
add eax, 0x20c90cd2
or byte [rsi + 0xb], cl
cmp ecx, eax
add edx, eax
sar byte [rax + 0x4c83fb02], 1
cmp dword ss:[rsi], eax
sbb byte [rsi + 0x37], dl
sub dword [rsi + 0x74f0334], edx
fld qword [rbp - 0xe]
test byte [rdi], bh
sbb dword [rsi + rbx*2], eax
mov edi, 0x8a4decff
and eax, 0x6ebf0777
enter -0x1b7a, 0x3a
add al, byte [rdi]
imul edi, dword [rdi], 0x33
sbb dword [rax - 0x58f81f02], edx
fldenv [r8 + rdx*4 - 0x40]
jp 0x402f04
movsb byte [rdi], byte ptr [rsi]
pop rax
ror byte [rdi + 4], cl
mov dword [rdi], 0x13908587
inc qword [rsp + rcx + 0x3f60c832]
call 0xffffffff93243128
cmp eax, 1
sbb dword [rcx - 0x717befb7], ebp
adc esp, dword [rsi]
ja 0x402f75
cmp dword [rcx + 0x1aff0725], esp
sbb al, 0x56
test byte [rcx + rcx*4 + 0x3f], ch
or eax, 0x27243643
jo 0x402fc1
adc byte [rdi], al
xchg eax, esp
jo 0x402f19
and ah, byte [rdi + rdi + 0x67]
mov r14b, 0xc0
setge byte [rdi]
nop
outsb dx, byte [esi]
xor dh, byte [rax + 7]
jg 0x402f6d
xor ah, byte [rax]
and al, 0x87
sub eax, 0x3928a33f
jae 0x402f39
dec dword [rcx]
wait
add al, 0x21
imul ebp, dword [rcx + 0x640787bf], 0xbf99c943
movabs al, byte [0x767223373393fb1]
jg 0x402f46
xchg byte [r8 + rbp - 0x41], r13b
mov eax, 0xccf245c9
jg 0x402ffc
add al, 0xc9
mov bl, 0xdc
add al, 0xa
push rdi
jg 0x402f5e
jmp 0xffffffffdc3dc245
add esi, dword [rdx - 0xa]
fild word [rdi]
call qword [rax]
xor ah, byte [rax]
fst qword [rax - 0x19]
psubb mm1, mm6
add eax, 0xff076e08
xchg eax, ebx
adc al, 0xcb
xlatb
fldcw word [rcx + rcx*2 + 0x17]
clc
wait
sahf
mov ecx, 0x1f07f07
insb byte [rdi], dx
or ebx, dword [rcx]
adc byte fs:[rax + 0x5c834fbf], bl
and al, 0x83
or byte [r9], r8b
adc byte ss:[rdx + 0x3f509f01], dl
or al, 0xc9
push rax
jb 0x402fce
or al, al
ja 0x403013
wait
jg 0x403027
xchg eax, esi
wait
or al, 0x48
or al, dl
popfq
cmp al, 0x48
pop rdx
adc eax, 0xe3083001
mov al, 0x90
xor al, 0x3f
cmpsd dword [rsi], dword ptr [rdi]
insb byte [rdi], dx
jbe 0x40308c
adc dword [rbx], edi
cmp al, 0x62
sbb dword [rbx + 0x1e7f19e4], ecx
add dword [rbx + 0x6c86b3c9], edi
out 0x51, eax
inc eax
or dword [rbp + rcx + 0x321fcd20], eax
or dword [rdi + 0x60], edi
xchg eax, ecx
cmp al, 0x39
enter 0x745a, 7
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x3f7fdea], ecx
push -0x63246050
jbe 0x403004
nop
sbb al, byte [rax]
add byte [rdx + 8], al
add byte [rax], al
imul eax, dword [rax], 0
add qword [r8], rax
jge 0x403085
add byte [rax], al
add bh, bh
