xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x603077
push rbp
sub rax, obj.stdin
cmp rax, 0xe
mov rbp, rsp
jbe 0x400cd0
mov eax, 0
test rax, rax
je 0x400cd0
pop rbp
mov edi, obj.stdin
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.stdin
push rbp
sub rsi, obj.stdin
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400d18
mov eax, 0
test rax, rax
je 0x400d18
pop rbp
mov edi, obj.stdin
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x202359], 0
jne 0x400d3a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x202346], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400d50
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400d4b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
push rbp
push rbx
mov rbx, rdi
sub rsp, 8
mov dword [rdi], 0
mov rdi, qword [rip + 0x2022ea]
jmp 0x400da8
nop dword [rax + rax]
lea rdx, [rax + 1]
mov qword [rdi + 8], rdx
movzx eax, byte [rax]
cmp eax, 0x2d
je 0x400dc8
sub eax, 0x30
cmp eax, 9
jbe 0x400e20
mov rax, qword [rdi + 8]
cmp rax, qword [rdi + 0x10]
jb 0x400d90
call sym.imp.__uflow
cmp eax, 0x2d
mov rdi, qword [rip + 0x2022af]
jne 0x400da0
nop dword [rax + rax]
mov ebp, 1
jmp 0x400df5
nop
lea rdx, [rax + 1]
mov qword [rdi + 8], rdx
movzx eax, byte [rax]
lea edx, [rax - 0x30]
cmp edx, 9
ja 0x400e10
mov edx, dword [rbx]
mov rdi, qword [rip + 0x202284]
lea edx, [rdx + rdx*4]
lea eax, [rax + rdx*2 - 0x30]
mov dword [rbx], eax
mov rax, qword [rdi + 8]
cmp rax, qword [rdi + 0x10]
jb 0x400dd0
call sym.imp.__uflow
lea edx, [rax - 0x30]
cmp edx, 9
jbe 0x400de3
nop dword [rax]
test ebp, ebp
je 0x400e16
neg dword [rbx]
add rsp, 8
pop rbx
pop rbp
ret
nop dword [rax]
mov dword [rbx], eax
xor ebp, ebp
jmp 0x400df5
nop word cs:[rax + rax]
push rbp
push rbx
mov rbp, rdi
sub rsp, 8
mov qword [rdi], 0
mov rdi, qword [rip + 0x202229]
jmp 0x400e6c
nop dword [rax]
lea rdx, [rax + 1]
mov qword [rdi + 8], rdx
movzx eax, byte [rax]
cmp eax, 0x2d
je 0x400e90
sub eax, 0x30
cmp eax, 9
jbe 0x400f00
mov rax, qword [rdi + 8]
cmp rax, qword [rdi + 0x10]
jb 0x400e50
call sym.imp.__uflow
cmp eax, 0x2d
mov rdi, qword [rip + 0x2021eb]
jne 0x400e60
nop word [rax + rax]
mov ebx, 1
jmp 0x400ecd
nop word [rax + rax]
lea rdx, [rax + 1]
mov qword [rdi + 8], rdx
movzx eax, byte [rax]
lea edx, [rax - 0x30]
cmp edx, 9
ja 0x400ee8
mov rdx, qword [rbp]
cdqe
mov rdi, qword [rip + 0x2021b0]
lea rdx, [rdx + rdx*4]
lea rax, [rax + rdx*2 - 0x30]
mov qword [rbp], rax
mov rax, qword [rdi + 8]
cmp rax, qword [rdi + 0x10]
jb 0x400ea0
call sym.imp.__uflow
lea edx, [rax - 0x30]
cmp edx, 9
jbe 0x400eb3
nop dword [rax]
test ebx, ebx
je 0x400ef0
neg qword [rbp]
add rsp, 8
pop rbx
pop rbp
ret
nop word [rax + rax]
cdqe
xor ebx, ebx
mov qword [rbp], rax
jmp 0x400ecd
nop word [rax + rax]
push r13
push r12
push rbp
push rbx
movabs rbp, 0x200004c01
mov rbx, rdi
sub rsp, 8
nop word [rax + rax]
mov rdi, qword [rip + 0x202139]
mov rax, qword [rdi + 8]
cmp rax, qword [rdi + 0x10]
jae 0x400fc0
lea rdx, [rax + 1]
mov qword [rdi + 8], rdx
movzx eax, byte [rax]
lea edx, [rax + 1]
cmp edx, 0x21
jbe 0x400fb0
mov byte [rbx], al
lea rbp, [rbx + 1]
mov r12d, 1
movabs r13, 0x200004c01
jmp 0x400f94
nop dword [rax]
lea rdx, [rax + 1]
mov qword [rdi + 8], rdx
movzx eax, byte [rax]
lea edx, [rax + 1]
cmp edx, 0x21
ja 0x400f89
bt r13, rdx
jb 0x400fd0
mov byte [rbp], al
add r12d, 1
add rbp, 1
mov rdi, qword [rip + 0x2020d5]
mov rax, qword [rdi + 8]
cmp rax, qword [rdi + 0x10]
jb 0x400f70
call sym.imp.__uflow
jmp 0x400f7b
nop dword [rax]
bt rbp, rdx
jb 0x400f30
jmp 0x400f54
nop dword [rax]
call sym.imp.__uflow
jmp 0x400f4c
nop word [rax + rax]
movsxd rax, r12d
mov byte [rbx + rax], 0
add rsp, 8
mov eax, r12d
pop rbx
pop rbp
pop r12
pop r13
ret
nop
nop word cs:[rax + rax]
push r15
push r14
push r13
push r12
push rbp
push rbx
mov rbp, rdi
movabs rbx, 0x200004c01
sub rsp, 8
nop dword [rax + rax]
mov rdi, qword [rip + 0x202059]
mov rax, qword [rdi + 8]
cmp rax, qword [rdi + 0x10]
jae 0x401130
lea rdx, [rax + 1]
mov qword [rdi + 8], rdx
movzx eax, byte [rax]
lea edx, [rax + 1]
cmp edx, 0x21
jbe 0x401120
mov ebx, eax
mov rax, qword [rbp]
mov r12, qword [rbp + 8]
lea r13, [rbp + 0x10]
cmp rax, r13
lea r14, [r12 + 1]
je 0x401163
mov rdx, qword [rbp + 0x10]
cmp r14, rdx
jbe 0x40107a
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r12
mov rdi, rbp
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rbp]
mov byte [rax + r12], bl
mov rax, qword [rbp]
mov qword [rbp + 8], r14
movabs r14, 0x200004c01
mov byte [rax + r12 + 1], 0
jmp 0x4010d4
nop dword [rax + rax]
mov rdx, qword [rbp + 0x10]
cmp r15, rdx
jbe 0x4010c2
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r12
mov rdi, rbp
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rbp]
mov byte [rax + r12], bl
mov rax, qword [rbp]
mov qword [rbp + 8], r15
mov byte [rax + r12 + 1], 0
mov rdi, qword [rip + 0x201f95]
mov rax, qword [rdi + 8]
cmp rax, qword [rdi + 0x10]
jae 0x401140
lea rdx, [rax + 1]
mov qword [rdi + 8], rdx
movzx eax, byte [rax]
lea edx, [rax + 1]
cmp edx, 0x21
ja 0x4010fe
bt r14, rdx
jb 0x401150
mov ebx, eax
mov rax, qword [rbp]
mov r12, qword [rbp + 8]
cmp r13, rax
lea r15, [r12 + 1]
jne 0x4010a0
mov edx, 0xf
jmp 0x4010a4
nop dword [rax]
bt rbx, rdx
jb 0x401010
jmp 0x40103c
nop
call sym.imp.__uflow
jmp 0x401030
nop word [rax + rax]
call sym.imp.__uflow
jmp 0x4010f0
nop word [rax + rax]
mov rax, qword [rbp + 8]
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov edx, 0xf
jmp 0x40105c
nop dword [rax]
push r13
push r12
push rbp
push rbx
mov ebp, esi
sub rsp, 0x28
mov rax, qword fs:[0x28]
mov qword [rsp + 0x18], rax
xor eax, eax
test edi, edi
js 0x401600
mov r9d, 0
je 0x4015f0
mov eax, edi
mov esi, 0x66666667
mov ecx, edi
imul esi
sar ecx, 0x1f
mov ebx, edi
sar edx, 2
sub edx, ecx
lea eax, [rdx + rdx*4]
mov r8d, edx
add eax, eax
sub ebx, eax
test edx, edx
mov byte [rsp], bl
je 0x4016f0
mov eax, edx
imul esi
mov eax, r8d
sar eax, 0x1f
sar edx, 2
sub edx, eax
lea eax, [rdx + rdx*4]
add eax, eax
sub r8d, eax
mov eax, edi
mov byte [rsp + 1], r8b
mov r8d, 0x51eb851f
imul r8d
sar edx, 5
mov r8d, edx
sub r8d, ecx
je 0x401700
mov eax, r8d
imul esi
mov eax, r8d
sar eax, 0x1f
sar edx, 2
sub edx, eax
lea eax, [rdx + rdx*4]
add eax, eax
sub r8d, eax
mov eax, edi
mov byte [rsp + 2], r8b
mov r8d, 0x10624dd3
imul r8d
sar edx, 6
mov r8d, edx
sub r8d, ecx
je 0x401710
mov eax, r8d
imul esi
mov eax, r8d
sar eax, 0x1f
sar edx, 2
sub edx, eax
lea eax, [rdx + rdx*4]
add eax, eax
sub r8d, eax
mov eax, edi
mov byte [rsp + 3], r8b
mov r8d, 0x68db8bad
imul r8d
sar edx, 0xc
mov r8d, edx
sub r8d, ecx
je 0x401740
mov eax, r8d
imul esi
mov eax, r8d
sar eax, 0x1f
sar edx, 2
sub edx, eax
lea eax, [rdx + rdx*4]
add eax, eax
sub r8d, eax
mov eax, edi
mov byte [rsp + 4], r8b
mov r8d, 0x14f8b589
imul r8d
sar edx, 0xd
mov r8d, edx
sub r8d, ecx
je 0x401750
mov eax, r8d
imul esi
mov eax, r8d
sar eax, 0x1f
sar edx, 2
sub edx, eax
lea eax, [rdx + rdx*4]
add eax, eax
sub r8d, eax
mov eax, edi
mov byte [rsp + 5], r8b
mov r8d, 0x431bde83
imul r8d
sar edx, 0x12
mov r8d, edx
sub r8d, ecx
je 0x401760
mov eax, r8d
imul esi
mov eax, r8d
sar eax, 0x1f
sar edx, 2
sub edx, eax
lea eax, [rdx + rdx*4]
add eax, eax
sub r8d, eax
mov eax, edi
mov byte [rsp + 6], r8b
mov r8d, 0x6b5fca6b
imul r8d
sar edx, 0x16
mov r8d, edx
sub r8d, ecx
je 0x401770
mov eax, r8d
imul esi
mov eax, r8d
sar eax, 0x1f
sar edx, 2
sub edx, eax
lea eax, [rdx + rdx*4]
add eax, eax
sub r8d, eax
mov eax, edi
mov byte [rsp + 7], r8b
mov r8d, 0x55e63b89
imul r8d
sar edx, 0x19
mov r8d, edx
sub r8d, ecx
je 0x401720
mov eax, r8d
imul esi
mov eax, r8d
sar eax, 0x1f
mov esi, edx
mov edx, 0x44b82fa1
sar esi, 2
sub esi, eax
lea eax, [rsi + rsi*4]
add eax, eax
sub r8d, eax
mov eax, edi
imul edx
mov byte [rsp + 8], r8b
sar edx, 0x1c
sub edx, ecx
je 0x401730
mov byte [rsp + 9], dl
mov ebx, 0xa
test r9d, r9d
je 0x4013ab
mov rdi, qword [rip + 0x201ce6]
mov rax, qword [rdi + 0x28]
cmp rax, qword [rdi + 0x30]
jae 0x401610
lea rdx, [rax + 1]
mov qword [rdi + 0x28], rdx
mov byte [rax], 0x2d
sub ebx, 1
movsxd rax, ebx
mov rdi, qword [rip + 0x201cc0]
movsx eax, byte [rsp + rax]
mov rdx, qword [rdi + 0x28]
add eax, 0x30
cmp qword [rdi + 0x30], rdx
jbe 0x4016c0
lea rcx, [rdx + 1]
mov qword [rdi + 0x28], rcx
mov byte [rdx], al
test ebx, ebx
lea r12d, [rbx - 1]
je 0x4015ab
movsxd rax, r12d
mov rdi, qword [rip + 0x201c8b]
movsx eax, byte [rsp + rax]
mov rdx, qword [rdi + 0x28]
add eax, 0x30
cmp rdx, qword [rdi + 0x30]
jae 0x4016d0
lea rcx, [rdx + 1]
mov qword [rdi + 0x28], rcx
mov byte [rdx], al
test r12d, r12d
lea r13d, [rbx - 2]
je 0x4015ab
movsxd rax, r13d
mov rdi, qword [rip + 0x201c55]
movsx eax, byte [rsp + rax]
mov rdx, qword [rdi + 0x28]
add eax, 0x30
cmp rdx, qword [rdi + 0x30]
jae 0x4016e0
lea rcx, [rdx + 1]
mov qword [rdi + 0x28], rcx
mov byte [rdx], al
test r13d, r13d
lea r12d, [rbx - 3]
je 0x4015ab
movsxd rax, r12d
mov rdi, qword [rip + 0x201c1f]
movsx eax, byte [rsp + rax]
mov rdx, qword [rdi + 0x28]
add eax, 0x30
cmp rdx, qword [rdi + 0x30]
jae 0x401680
lea rcx, [rdx + 1]
mov qword [rdi + 0x28], rcx
mov byte [rdx], al
test r12d, r12d
lea r13d, [rbx - 4]
je 0x4015ab
movsxd rax, r13d
mov rdi, qword [rip + 0x201be9]
movsx eax, byte [rsp + rax]
mov rdx, qword [rdi + 0x28]
add eax, 0x30
cmp rdx, qword [rdi + 0x30]
jae 0x401690
lea rcx, [rdx + 1]
mov qword [rdi + 0x28], rcx
mov byte [rdx], al
test r13d, r13d
lea r12d, [rbx - 5]
je 0x4015ab
movsxd rax, r12d
mov rdi, qword [rip + 0x201bb3]
movsx eax, byte [rsp + rax]
mov rdx, qword [rdi + 0x28]
add eax, 0x30
cmp rdx, qword [rdi + 0x30]
jae 0x4016a0
lea rcx, [rdx + 1]
mov qword [rdi + 0x28], rcx
mov byte [rdx], al
test r12d, r12d
lea r13d, [rbx - 6]
je 0x4015ab
movsxd rax, r13d
mov rdi, qword [rip + 0x201b7d]
movsx eax, byte [rsp + rax]
mov rdx, qword [rdi + 0x28]
add eax, 0x30
cmp rdx, qword [rdi + 0x30]
jae 0x4016b0
lea rcx, [rdx + 1]
mov qword [rdi + 0x28], rcx
mov byte [rdx], al
test r13d, r13d
lea r12d, [rbx - 7]
je 0x4015ab
movsxd rax, r12d
mov rdi, qword [rip + 0x201b47]
movsx eax, byte [rsp + rax]
mov rdx, qword [rdi + 0x28]
add eax, 0x30
cmp rdx, qword [rdi + 0x30]
jae 0x401660
lea rcx, [rdx + 1]
mov qword [rdi + 0x28], rcx
mov byte [rdx], al
sub ebx, 8
test r12d, r12d
je 0x4015ab
movsxd rax, ebx
mov rdi, qword [rip + 0x201b16]
movsx eax, byte [rsp + rax]
mov rdx, qword [rdi + 0x28]
add eax, 0x30
cmp rdx, qword [rdi + 0x30]
jae 0x401670
lea rcx, [rdx + 1]
mov qword [rdi + 0x28], rcx
mov byte [rdx], al
test ebx, ebx
je 0x4015ab
movsx eax, byte [rsp]
mov rdi, qword [rip + 0x201ae8]
mov rdx, qword [rdi + 0x28]
add eax, 0x30
cmp rdx, qword [rdi + 0x30]
jae 0x401650
lea rcx, [rdx + 1]
mov qword [rdi + 0x28], rcx
mov byte [rdx], al
mov rdi, qword [rip + 0x201ac6]
mov rax, qword [rdi + 0x28]
cmp rax, qword [rdi + 0x30]
jae 0x401620
lea rdx, [rax + 1]
mov qword [rdi + 0x28], rdx
mov byte [rax], bpl
mov rax, qword [rsp + 0x18]
xor rax, qword fs:[0x28]
jne 0x40177a
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
ret
nop word cs:[rax + rax]
mov byte [rsp], 0
xor ebx, ebx
jmp 0x4013ae
nop dword [rax + rax]
neg edi
mov r9d, 1
jmp 0x4011a0
nop dword [rax]
mov esi, 0x2d
call sym.imp.__overflow
jmp 0x4013ab
nop
mov rax, qword [rsp + 0x18]
xor rax, qword fs:[0x28]
jne 0x40177a
add rsp, 0x28
movzx esi, bpl
pop rbx
pop rbp
pop r12
pop r13
jmp sym.imp.__overflow
nop word [rax + rax]
movzx esi, al
call sym.imp.__overflow
jmp 0x4015ab
nop dword [rax]
movzx esi, al
call sym.imp.__overflow
jmp 0x401550
nop dword [rax]
movzx esi, al
call sym.imp.__overflow
jmp 0x401581
nop dword [rax]
movzx esi, al
call sym.imp.__overflow
jmp 0x401478
nop dword [rax]
movzx esi, al
call sym.imp.__overflow
jmp 0x4014ae
nop dword [rax]
movzx esi, al
call sym.imp.__overflow
jmp 0x4014e4
nop dword [rax]
movzx esi, al
call sym.imp.__overflow
jmp 0x40151a
nop dword [rax]
movzx esi, al
call sym.imp.__overflow
jmp 0x4013d7
nop dword [rax]
movzx esi, al
call sym.imp.__overflow
jmp 0x40140c
nop dword [rax]
movzx esi, al
call sym.imp.__overflow
jmp 0x401442
nop dword [rax]
mov ebx, 1
jmp 0x401386
nop word [rax + rax]
mov ebx, 2
jmp 0x401386
nop word [rax + rax]
mov ebx, 3
jmp 0x401386
nop word [rax + rax]
mov ebx, 8
jmp 0x401386
nop word [rax + rax]
mov ebx, 9
jmp 0x401386
nop word [rax + rax]
mov ebx, 4
jmp 0x401386
nop word [rax + rax]
mov ebx, 5
jmp 0x401386
nop word [rax + rax]
mov ebx, 6
jmp 0x401386
nop word [rax + rax]
mov ebx, 7
jmp 0x401386
call sym.imp.__stack_chk_fail
nop
push rbp
push rbx
mov ebx, esi
sub rsp, 0x28
mov rax, qword fs:[0x28]
mov qword [rsp + 0x18], rax
xor eax, eax
test rdi, rdi
js 0x4018a8
mov r8d, 0
je 0x401899
mov rcx, rsp
xor ebp, ebp
movabs rsi, 0x6666666666666667
nop dword [rax]
mov rax, rdi
add ebp, 1
add rcx, 1
imul rsi
mov rax, rdi
sar rax, 0x3f
sar rdx, 2
sub rdx, rax
lea rax, [rdx + rdx*4]
add rax, rax
sub rdi, rax
mov byte [rcx - 1], dil
test rdx, rdx
mov rdi, rdx
jne 0x4017c0
test r8d, r8d
je 0x40186b
mov rdi, qword [rip + 0x20187b]
mov rax, qword [rdi + 0x28]
cmp rax, qword [rdi + 0x30]
jae 0x4018b6
lea rdx, [rax + 1]
sub ebp, 1
cmp ebp, -1
mov qword [rdi + 0x28], rdx
mov byte [rax], 0x2d
jne 0x401873
nop
mov rdi, qword [rip + 0x201851]
mov rax, qword [rdi + 0x28]
cmp rax, qword [rdi + 0x30]
jae 0x4018c2
lea rdx, [rax + 1]
mov qword [rdi + 0x28], rdx
mov byte [rax], bl
mov rax, qword [rsp + 0x18]
xor rax, qword fs:[0x28]
jne 0x4018e0
add rsp, 0x28
pop rbx
pop rbp
ret
nop word [rax + rax]
lea rdx, [rax + 1]
mov qword [rdi + 0x28], rdx
mov byte [rax], sil
sub ebp, 1
cmp ebp, -1
je 0x401820
movsxd rax, ebp
mov rdi, qword [rip + 0x2017fb]
movsx esi, byte [rsp + rax]
mov rax, qword [rdi + 0x28]
add esi, 0x30
cmp rax, qword [rdi + 0x30]
jb 0x401860
movzx esi, sil
call sym.imp.__overflow
jmp 0x40186b
mov byte [rsp], 0
mov ebp, 1
jmp 0x40186b
nop dword [rax]
neg rdi
mov r8d, 1
jmp 0x4017ad
mov esi, 0x2d
call sym.imp.__overflow
jmp 0x40186b
mov rax, qword [rsp + 0x18]
xor rax, qword fs:[0x28]
jne 0x4018e0
add rsp, 0x28
movzx esi, bl
pop rbx
pop rbp
jmp sym.imp.__overflow
call sym.imp.__stack_chk_fail
nop
nop word cs:[rax + rax]
movzx esi, byte [rdi]
test sil, sil
je 0x401941
push rbx
lea rbx, [rdi + 1]
jmp 0x401918
nop
lea rdx, [rax + 1]
add rbx, 1
mov qword [rdi + 0x28], rdx
mov byte [rax], sil
movzx esi, byte [rbx - 1]
test sil, sil
je 0x401940
mov rdi, qword [rip + 0x201759]
mov rax, qword [rdi + 0x28]
cmp rax, qword [rdi + 0x30]
jb 0x401900
add rbx, 1
call sym.imp.__overflow
movzx esi, byte [rbx - 1]
test sil, sil
jne 0x401918
nop dword [rax + rax]
pop rbx
ret
nop dword [rax]
nop word cs:[rax + rax]
push r12
push rbp
mov ebp, esi
push rbx
mov rax, qword [rdi]
mov r12, rdi
mov ebx, 1
movzx esi, byte [rax]
test sil, sil
jne 0x40198c
jmp 0x4019a8
nop dword [rax + rax]
lea rdx, [rax + 1]
mov qword [rdi + 0x28], rdx
mov byte [rax], sil
mov rax, qword [r12]
movzx esi, byte [rax + rbx]
add rbx, 1
test sil, sil
je 0x4019a8
mov rdi, qword [rip + 0x2016e5]
mov rax, qword [rdi + 0x28]
cmp rax, qword [rdi + 0x30]
jb 0x401970
call sym.imp.__overflow
jmp 0x40197b
nop dword [rax]
mov rdi, qword [rip + 0x2016c9]
mov rax, qword [rdi + 0x28]
cmp rax, qword [rdi + 0x30]
jae 0x4019c9
lea rdx, [rax + 1]
mov qword [rdi + 0x28], rdx
mov byte [rax], bpl
pop rbx
pop rbp
pop r12
ret
pop rbx
movzx esi, bpl
pop rbp
pop r12
jmp sym.imp.__overflow
nop word cs:[rax + rax]
push rbp
push rbx
mov ebp, esi
lea rbx, [rdi + 1]
sub rsp, 8
movzx esi, byte [rdi]
test sil, sil
jne 0x401a18
jmp 0x401a40
nop word cs:[rax + rax]
lea rdx, [rax + 1]
add rbx, 1
mov qword [rdi + 0x28], rdx
mov byte [rax], sil
movzx esi, byte [rbx - 1]
test sil, sil
je 0x401a40
mov rdi, qword [rip + 0x201659]
mov rax, qword [rdi + 0x28]
cmp rax, qword [rdi + 0x30]
jb 0x401a00
add rbx, 1
call sym.imp.__overflow
movzx esi, byte [rbx - 1]
test sil, sil
jne 0x401a18
nop dword [rax + rax]
mov rdi, qword [rip + 0x201631]
mov rax, qword [rdi + 0x28]
cmp rax, qword [rdi + 0x30]
jae 0x401a63
lea rdx, [rax + 1]
mov qword [rdi + 0x28], rdx
mov byte [rax], bpl
add rsp, 8
pop rbx
pop rbp
ret
add rsp, 8
movzx esi, bpl
pop rbx
pop rbp
jmp sym.imp.__overflow
nop dword [rax]
nop word cs:[rax + rax]
mov rax, rdi
mov r8, rdx
mov r9d, 1
cqo
idiv r8
test rsi, rsi
mov rcx, rdx
je 0x401ac9
nop dword [rax]
test sil, 1
je 0x401ab5
mov rax, r9
imul rax, rcx
cqo
idiv r8
mov r9, rdx
mov rax, rcx
imul rax, rcx
cqo
idiv r8
sar rsi, 1
mov rcx, rdx
jne 0x401aa0
mov rax, r9
ret
nop dword [rax]
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x18
mov rdi, qword [rip + 0x20158b]
mov rdx, qword [rdi + 8]
mov rcx, qword [rdi + 0x10]
jmp 0x401b0f
nop
lea rsi, [rdx + 1]
mov qword [rdi + 8], rsi
movzx eax, byte [rdx]
mov rdx, rsi
cmp eax, 0x2d
je 0x401b2d
sub eax, 0x30
cmp eax, 9
jbe 0x401c48
cmp rdx, rcx
jb 0x401af0
call sym.imp.__uflow
mov rdi, qword [rip + 0x201550]
cmp eax, 0x2d
mov rdx, qword [rdi + 8]
mov rcx, qword [rdi + 0x10]
jne 0x401b03
xor ebp, ebp
mov ebx, 1
jmp 0x401b5e
nop word cs:[rax + rax]
lea rsi, [rdx + 1]
mov qword [rdi + 8], rsi
movzx eax, byte [rdx]
mov rdx, rsi
lea esi, [rax - 0x30]
cmp esi, 9
ja 0x401b7f
lea esi, [rbp + rbp*4]
lea ebp, [rax + rsi*2 - 0x30]
cmp rcx, rdx
ja 0x401b40
call sym.imp.__uflow
mov rdi, qword [rip + 0x201501]
lea esi, [rax - 0x30]
cmp esi, 9
mov rdx, qword [rdi + 8]
mov rcx, qword [rdi + 0x10]
jbe 0x401b56
mov eax, ebp
neg eax
test ebx, ebx
cmovne ebp, eax
jmp 0x401baf
nop word [rax + rax]
lea rsi, [rdx + 1]
mov qword [rdi + 8], rsi
movzx eax, byte [rdx]
mov rdx, rsi
cmp eax, 0x2d
je 0x401bcd
sub eax, 0x30
cmp eax, 9
jbe 0x401c51
cmp rdx, rcx
jb 0x401b90
call sym.imp.__uflow
mov rdi, qword [rip + 0x2014b0]
cmp eax, 0x2d
mov rdx, qword [rdi + 8]
mov rcx, qword [rdi + 0x10]
jne 0x401ba3
xor r12d, r12d
mov ebx, 1
jmp 0x401c0b
nop word [rax + rax]
lea rax, [rdx + 1]
mov qword [rdi + 8], rax
movzx eax, byte [rdx]
lea edx, [rax - 0x30]
cmp edx, 9
ja 0x401c1d
mov rdi, qword [rip + 0x201476]
lea edx, [r12 + r12*4]
lea r12d, [rax + rdx*2 - 0x30]
mov rcx, qword [rdi + 0x10]
mov rdx, qword [rdi + 8]
cmp rdx, rcx
jb 0x401be0
call sym.imp.__uflow
lea edx, [rax - 0x30]
cmp edx, 9
jbe 0x401bf3
pxor xmm3, xmm3
test ebx, ebx
movsd qword [rsp + 8], xmm3
je 0x401c58
pxor xmm0, xmm0
cvtsi2sd xmm0, ebp
divsd xmm0, qword [rsp + 8]
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov ebp, eax
xor ebx, ebx
jmp 0x401b5e
mov r12d, eax
xor ebx, ebx
jmp 0x401c0b
test r12d, r12d
jle 0x401c2b
xor r13d, r13d
mov rdi, qword [rip + 0x201409]
mov rdx, qword [rdi + 8]
mov rcx, qword [rdi + 0x10]
jmp 0x401c97
nop dword [rax]
lea rsi, [rdx + 1]
mov qword [rdi + 8], rsi
movzx eax, byte [rdx]
mov rdx, rsi
cmp eax, 0x2d
je 0x401cb8
sub eax, 0x30
cmp eax, 9
jbe 0x401df8
cmp rdx, rcx
jb 0x401c78
call sym.imp.__uflow
mov rdi, qword [rip + 0x2013c8]
cmp eax, 0x2d
mov rdx, qword [rdi + 8]
mov rcx, qword [rdi + 0x10]
jne 0x401c8b
nop dword [rax]
xor r15d, r15d
mov ebx, 1
jmp 0x401ce7
nop word [rax + rax]
lea rsi, [rdx + 1]
mov qword [rdi + 8], rsi
movzx eax, byte [rdx]
mov rdx, rsi
lea esi, [rax - 0x30]
cmp esi, 9
ja 0x401d10
lea esi, [r15 + r15*4]
lea r15d, [rax + rsi*2 - 0x30]
cmp rdx, rcx
jb 0x401cc8
call sym.imp.__uflow
mov rdi, qword [rip + 0x201378]
lea esi, [rax - 0x30]
cmp esi, 9
mov rdx, qword [rdi + 8]
mov rcx, qword [rdi + 0x10]
jbe 0x401cde
nop dword [rax + rax]
mov eax, r15d
neg eax
test ebx, ebx
cmovne r15d, eax
jmp 0x401d3f
nop dword [rax]
lea rsi, [rdx + 1]
mov qword [rdi + 8], rsi
movzx eax, byte [rdx]
mov rdx, rsi
cmp eax, 0x2d
je 0x401d60
sub eax, 0x30
cmp eax, 9
jbe 0x401e08
cmp rdx, rcx
jb 0x401d20
call sym.imp.__uflow
mov rdi, qword [rip + 0x201320]
cmp eax, 0x2d
mov rdx, qword [rdi + 8]
mov rcx, qword [rdi + 0x10]
jne 0x401d33
nop dword [rax]
xor ebx, ebx
mov r14d, 1
jmp 0x401d99
nop word [rax + rax]
lea rax, [rdx + 1]
mov qword [rdi + 8], rax
movzx eax, byte [rdx]
lea edx, [rax - 0x30]
cmp edx, 9
ja 0x401db0
mov rdi, qword [rip + 0x2012e6]
lea edx, [rbx + rbx*4]
lea ebx, [rax + rdx*2 - 0x30]
mov rcx, qword [rdi + 0x10]
mov rdx, qword [rdi + 8]
cmp rdx, rcx
jb 0x401d70
call sym.imp.__uflow
lea edx, [rax - 0x30]
cmp edx, 9
jbe 0x401d83
nop dword [rax + rax]
mov eax, ebx
pxor xmm1, xmm1
neg eax
pxor xmm0, xmm0
test r14d, r14d
movsd xmm2, qword [rsp + 8]
cmovne ebx, eax
mov eax, ebp
add r13d, 1
sub eax, r15d
cvtsi2sd xmm0, ebx
cvtsi2sd xmm1, eax
cmp r13d, r12d
divsd xmm1, xmm0
maxsd xmm2, xmm1
movsd qword [rsp + 8], xmm2
jne 0x401c60
jmp 0x401c2b
nop dword [rax]
mov r15d, eax
xor ebx, ebx
jmp 0x401ce7
nop word [rax + rax]
mov ebx, eax
xor r14d, r14d
jmp 0x401d99
nop
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200fd6]
push rbp
lea rbp, [rip + 0x200fde]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401e66
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401e50
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
jae 0x401efd
and byte [rbx], ah
and eax, 0x203a64
and eax, 0x6c30312e
or al, byte [rax]
add byte [rcx], al
add dword [rbx], ebx
add edi, dword [rbx]
xchg eax, esp
add byte [rax], al
add byte [rcx], dl
add byte [rax], al
add al, bh
call 0x1211eb9
add byte [rax], al
test al, 0xe9
push qword [rax + 3]
add byte [rax], al
cwde
in eax, dx
inc eax
add eax, dword [rax]
add al, cl
in eax, dx
push qword [rax - 0x38000000]
out dx, al
dec dword [rax]
add dword [rax], eax
add byte [rax + 0x38ffffef], cl
add dword [rax], eax
add byte [rax - 0x10], ch
ljmp [rax + 1]
add byte [rax], al
int1
jmp qword [rax - 0x37ffffff]
push rax
add dword [rax], eax
add al, bl
clc
inc dword [rax + 2]
add byte [rax], al
cli
js 0x401f0c
add byte [rax], al
test al, 0xfa
lcall [rax + 0x38000002]
sti
call rax
add al, byte [rax]
add al, bl
sti
dec dword [rax]
add eax, dword [rax]
add byte [rax], ch
cld
jmp qword [rax]
add eax, dword [rax]
add byte [rax - 1], ch
fadd dword [rbx]
add byte [rax], al
fdivr st(7)
jmp qword [rax]
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401f5f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
adc ch, ch
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401f8f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
adc al, ch
jmp qword [rax]
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sub al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rax - 0x49000013], bh
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x180e4102], al
add dword [rbx], 0x47
and byte [rdx], al
movabs eax, dword [0xe41100e41180e0a]
or byte [rbx + rcx], al
add byte [rax], al
add byte [rax], al
sub al, 0
add byte [rax], al
je 0x401fe6
add byte [rax], al
out dx, al
fiadd dword [rax]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x180e4102], al
add dword [rbx], 0x47
and byte [rdx], al
mov ebx, 0x41180e0a
adc byte [rcx + 0xe], al
or byte [rdx + 0xb], cl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add byte [rax], al
add al, bh
out dx, al
call rbp
add byte [rax], al
add byte [rax], al
adc byte [rbp + 0x180e4202], cl
mov word [rbx], es
and byte [rsi + 0x280e4104], al
add dword [rip + 0x2300e51], -0x4c
sub byte [rsi + rcx + 0x20], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax + rax], cl
add ah, bl
add byte [rax], al
add byte [rax + 0x7dffffef], ah
add dword [rax], eax
add byte [rax], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx + 0x400e5107], al
add ecx, dword [rbp + 1]
or cl, byte [rsi]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx + rax], ch
add byte [rax], al
sal al, 1
dec dword [rdi]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rbp + 0x180e4202], cl
mov word [rbx], es
and byte [rsi + 0x280e4104], al
add dword [rip + 0x3500e46], 0x63
add al, 0xa
sub byte [rcx + 0xe], al
and byte [rcx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rbx + 0xb], cl
add cl, byte [rax + 0xa]
sub byte [rbp + 0xe], al
and byte [rcx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rsi + 0xb], cl
add byte [rax + rax], dh
add byte [rax], al
jl 0x4020ef
add byte [rax], al
nop
idiv bh
jmp qword [rbp + 1]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x180e4102], al
add dword [rbx], 0x46
add cl, dil
or cl, byte [rsi]
sbb byte [rcx + 0xe], al
adc byte [rcx + 0xe], al
or byte [rdi + 0xb], al
add dh, byte [rsi + 0xa]
sbb byte [rsi + rcx + 0x10], al
or byte [rbp + 0xb], al
sbb al, 0
add byte [rax], al
mov ah, 1
add byte [rax], al
enter -9, -1
push rbx
add byte [rax], al
add byte [rax], al
adc byte [rbx - 0x3cb7fdfe], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], cl
clc
inc dword [rsi]
adc byte [rdx + rax - 0x79e7f1bf], cl
add eax, dword [rbx + 0xe]
and byte [rbx + 0xa6f0204], al
sbb byte [rcx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
sbb byte [rbp + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
or al, 2
add byte [rax], al
clc
call qword [rdx]
adc byte [rsi + 0x180e4102], al
add dword [rbx], 0x4a
and byte [rdx], al
je 0x4021a3
sbb byte [rcx + 0xe], al
adc byte [rcx + 0xe], al
or byte [rcx + 0xb], al
sbb byte [rbp + 0xe], al
adc byte [rcx + 0xe], al
or byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add r8b, byte [rax]
add al, cl
clc
dec dword [rbp]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rdx + rax], bl
add byte [rax], al
stc
add eax, dword [rax]
add byte [rax], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx + 0x500e4407], al
add ebx, dword [rdi + 1]
or cl, byte [rsi]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rdx + rax - 0x19d00000], ch
add eax, dword [rax]
add byte [rax], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx + 0x600e4407], al
add ebp, edx
add dword [rdx], ecx
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
cld
add al, byte [rax]
add al, dl
jmp 0x672275
add byte [rax], al
add byte [rsi + rcx + 0x10], al
pop rbp
or byte [rax], al
add byte [rax], r8b
add byte [rbx + rax], dl
add byte [rax], al
mov bl, bh
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x4022c2
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
pop rsp
add eax, dword [rax]
add byte [rax + 0x2fffffb], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, 0x40
add byte [rax], al
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x402e32
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], 0x40
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rsi + rbx + 0x40], al
add byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sub eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rsi], ch
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 4], cl
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
test byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4006], ch
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 6], ah
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add al, dh
add eax, 0x40
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add ah, cl
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rsi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x4007], dh
add byte [rax], al
add dh, al
add byte [rax], al
add byte [rax], al
add dh, dl
add byte [rax], al
add byte [rax], al
add dh, ah
add byte [rax], al
add byte [rax], al
add dh, dh
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte es:[rax], al
add byte [rax], al
add byte [rax], al
or byte ss:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4030e8
je 0x4030f1
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x4030ff
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x4030fc
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 4], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add ah, cl
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or byte [rax], al
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add byte [rax + 0x4006], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add byte [rax + 0x4007], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
movabs al, byte [0x4007]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x40084000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 8], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rsi + rbx + 0x40], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc byte [rax], al
nop
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rax + 0x401e], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add byte [rax + 0x1f], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], dl
add al, bh
sub eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
or byte [rsi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x602e1000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb dword [rax], eax
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
jo 0x403352
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
adc eax, 0x602e1000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400c], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], ah
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rdx], bl
add byte [rax + 0x6030], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add dword [rax], eax
adc al, 0
or byte [rsi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xd], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rbx], dl
add al, bh
sub eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsd dword [rdi], dword ptr [rsi]
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x2000000], ch
add byte [rsi], cl
add byte [rax + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rcx], al
add byte [rdx], bl
add byte [rcx + 0x6030], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
add byte [rax], al
add byte [rcx], al
add byte [rdx], dl
add al, ah
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 0, al
add byte [rax], al
add dword [rax], eax
adc eax, 0x602e1000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, dh
add byte [rax], al
add byte [rax], al
add byte [rcx], dl
add byte [rax + 0x401e], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], al
add byte [rax], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rcx]
add byte [rax], al
add byte [rax], al
adc eax, dword [rax]
or byte [rsi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], ch
add byte [rax], al
add byte [rax], al
adc eax, dword [rax]
clc
sub eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rcx], al
add byte [rsi], dl
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dh
add al, byte [rax]
add byte [rax], ah
add byte [rcx], bl
add byte [rax + 0x30], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x401e], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, dh
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], bl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [eax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 1], bh
add byte [rax], al
adc al, byte [rax]
add al, dl
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x12000001], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 1], dl
add byte [rax], al
adc al, byte [rax]
sldt word [rsi + rbx + 0x40]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lahf
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, al
add dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x11], dh
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rcx], 1
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, eax
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x4017], al
add byte [rax], al
add byte [rbp + 1], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rdx]
add byte [rax], al
adc al, byte [rax]
add al, dh
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
jge 0x4036a3
add byte [rax], al
add byte [rax], al
add byte [rax], al
imul eax, dword [rdx], 0x120000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x12000002], cl
add byte [rsi], cl
add byte [rax + 0x401a], al
add byte [rax], al
add byte [rbp], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
pushfq
add al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x11000002], bh
add byte [rax], dl
add byte [rax + 0x401e], dl
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rdx], 0x120000
add al, ah
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
xchg eax, edx
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, dl
add al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ch
add al, byte [rax]
add byte [rax], dl
add byte [rcx], bl
add byte [rax + 0x30], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bh
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add al, dh
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add eax, dword [rax]
add byte [rcx], dl
add byte [rdx], bl
add byte [rax + 0x30], dh
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rax], bl
add byte [rax], al
adc dword [rdx], eax
sbb dword [rax], eax
jo 0x4037ba
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
add eax, dword [rax]
add byte [rcx], dl
add bl, byte [rcx]
add byte [rax + 0x30], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x12000003], dh
add byte [rsi], cl
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add r8d, dword [r8]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add dl, bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 3], dl
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x19], dl
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rdx + 0x10000003], dl
add byte [rdx], bl
add byte [rax + 0x30], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x12000003], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000003], bh
add byte [rsi], cl
add byte [rax], dl
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, al
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], ah
add dword [rax], eax
add byte [rax], dl
add byte [rdx], bl
add byte [rax + 0x6030], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x12000000], bh
add byte [rsi], cl
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
add byte [rax], al
add dh, bl
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x10000004], dh
add byte [rcx], bl
add byte [rax + 0x30], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsp + rax], bh
add byte [rax], al
adc dword [rax], eax
sbb al, byte [rax]
js 0x4038f2
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 4], dl
add byte [rax], al
adc al, byte [rax]
add byte [rax + 8], dl
add byte [rax], al
add byte [rax], al
add dl, ch
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdi], bh
add eax, dword [rax]
add byte [rdx], dl
add byte [rbx], cl
add byte [rax + 0x4007], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x40397a
jne 0x40396e
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x40392e
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4039ac
jb 0x4039b2
pop rdi
jne 0x4039bb
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x4039b5
je 0x4039b1
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4039d1
jb 0x4039d7
pop rdi
jne 0x4039e0
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x4039e3
jns 0x4039d3
outsb dx, byte gs:[rsi]
je 0x4039ea
jns 0x40397a
jb 0x4039de
insd dword [rdi], dx
pop rdi
jne 0x4039f0
insd dword [rdi], dx
jns 0x403986
pop rdi
pop rdi
jb 0x4039ec
insd dword [rdi], dx
pop rdi
jne 0x4039fe
insd dword [rdi], dx
jns 0x4039f3
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4039fe
jns 0x4039fe
outsb dx, byte gs:[rsi]
je 0x403a15
jns 0x4039a5
insd dword [rdi], dx
imul ebp, dword [rsi + 0x2e], 0x707063
pop rdi
pop rdi
pop rdi
jae 0x403a2e
pop rdi
pop r15
pop rdi
pop rdx
jb 0x403a27
jb 0x403a19
imul eax, dword [rax], 0x74535a5f
cmp byte [rdi + 0x5f], r11b
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdi
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403a87
jns 0x403a87
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403a98
jns 0x403a98
jae 0x403aaf
jb 0x403ab2
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x403ad5
jb 0x403ad8
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x403aca
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x403aeb
jae 0x403a7b
pop rdi
pop rdx
xor eax, 0x766c6f73
jbe 0x403a85
pop rdi
pop rdi
jo 0x403afb
imul ebp, dword [rsi + 0x74], 0x68635f66
imul eax, dword [rax + 0x40], 0x47
pop r15
xor ch, byte [rsi]
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403add
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
ja 0x403b3b
imul esi, dword [rbp + 0x72], 0x5f006369
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x403b50
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x755f5f00
insb byte [rdi], dx
outsd dx, dword [rsi]
ja 0x403b37
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x403b6a
pop rdi
je 0x403b72
js 0x403b78
je 0x403b51
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x365a5f00
ja 0x403b95
imul esi, dword [rbp + 0x72], 0x5f006378
pop rdx
jb 0x403b94
jb 0x403b86
push rbx
je 0x403b6f
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403bae
movsxd rbx, dword [rdi + 0x73]
je 0x403bbc
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403bb7
je 0x403bcc
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
add byte [r15 + 0x5a], r11b
push rbx
je 0x403ba7
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
insd dword [rdi], dx
outsd dx, dword [rsi]
pop rdi
jo 0x403c06
ja 0x403c11
js 0x403c13
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x403c0a
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x403c32
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x5a], bl
ja 0x403c3e
imul esi, dword [rbp + 0x72], 0x63634b50
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x403c41
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403c56
pop rdi
jae 0x403c6c
jb 0x403c6f
add byte [rdi + 0x5a], bl
ja 0x403c73
imul esi, dword [rbp + 0x72], 0x634b50
jae 0x403c7f
imul ebp, dword fs:[rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x545f5f00
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
jae 0x403c9c
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
jb 0x403caf
jb 0x403ca1
js 0x403c51
pop rdi
pop rdx
ja 0x403cc8
imul esi, dword [rbp + 0x72], 0x534e4b52
je 0x403c97
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403cd6
movsxd rbx, dword [rdi + 0x73]
je 0x403ce4
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403cdf
je 0x403cf4
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
movsxd r8, dword [r8]
pop rdi
pop rdi
jae 0x403d0a
pop rdi
jae 0x403d0e
jb 0x403d11
add byte [rdi + 0x5f], bl
jae 0x403d16
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
jb 0x403d24
jb 0x403d14
movsxd rax, dword [rax]
pop rdi
pop rdi
outsd dx, dword [rsi]
jbe 0x403d30
jb 0x403d33
insb byte [rdi], dx
outsd dx, dword [rsi]
ja 0x403d11
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x403d1b
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403d5a
movsxd rbx, dword [rdi + 0x73]
je 0x403d68
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403d63
je 0x403d78
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
insd dword [rdi], dx
jne 0x403d8e
je 0x403d82
insd dword [rdi], dx
insd dword [rdi], dx
push rax
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x403d9c
add byte [rbx + 0x74], dh
outsd dx, dword fs:[rsi]
jne 0x403db6
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x69616d00
outsb dx, byte [rsi]
add byte [rax], al
jae 0x403dd2
insd dword [rdi], dx
je 0x403dbd
add byte [rsi], ch
jae 0x403dd5
jb 0x403dd7
add byte [rsi], ch
jae 0x403dd1
jae 0x403ddf
jb 0x403de1
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x403de2
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x403df0
outsb dx, byte cs:[esi]
jne 0x403dbe
jne 0x403dfc
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x403dcc
push 0x687361
jns 0x403e15
jae 0x403e22
insd dword [rdi], dx
add byte [rsi], ch
jns 0x403e1d
jae 0x403e25
jb 0x403db3
outsb dx, byte cs:[esi]
jne 0x403de6
jbe 0x403e1f
jb 0x403e2f
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x403df3
jbe 0x403e2c
jb 0x403e3c
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x403e37
insb byte [rdi], dx
jns 0x403e46
add byte [rsi], ch
jb 0x403e41
insb byte [rdi], dx
jo 0x403e4d
je 0x403de3
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x403e1c
outsd dx, dword [esi]
je 0x403df2
je 0x403e5a
js 0x403e6b
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x403e70
je 0x403e66
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403e89
jns 0x403e2a
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x403ea5
jns 0x403e36
push 0x63
jb 0x403e3b
jns 0x403ead
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x403eb7
je 0x403e4d
je 0x403eb3
add byte [rsi], ch
jae 0x403eca
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x403e61
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 0x4002, 0
add byte [rax], al
add byte [rax], al
enter 2, 0
add byte [rax], al
add byte [rax], al
add byte [rcx], 0
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + 4], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
test byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
add byte [rax], al
add bh, bh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, cl
add eax, 0x40
add byte [rax], al
int3
add eax, 0
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
add eax, 0x40
add byte [rax], al
add eax, 0
add byte [rax], al
jo 0x40408a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 6], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4006], ch
add byte [rax], al
add byte [rax + 6], ch
add byte [rax], al
add al, bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x18000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4007], al
add byte [rax], al
add byte [rax + 7], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4007], ah
add byte [rax], al
add byte [rax + 7], ah
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], dl
add byte [rax], al
add byte [rax], al
add byte [rax + 8], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dl, byte [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x600000001000000], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + rbx + 0x40], al
add byte [rax], al
test byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x401e], dl
add byte [rax], al
add byte [rax + 0x1e], dl
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
test al, 0x1e
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1e], ch
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1f], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1f], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sub eax, 0x60
add byte [rax], al
clc
sub eax, 0
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loope 0x4043aa
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rsi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 0, al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
loopne 0x40440b
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, eax
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x30], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 0x30], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc byte [rax]
add byte [rax], al
or byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
jo 0x40452a
add byte [rax], al
add byte [rax], al
add byte [rax + 0x30], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rcx]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jo 0x404572
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
cmp eax, 0
add byte [rax], al
or al, 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test al, 0x30
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rax
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
add byte [rcx], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbp + 4], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
