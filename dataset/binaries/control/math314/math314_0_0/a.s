xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x602087
push rbp
sub rax, obj.completed.7585
cmp rax, 0xe
mov rbp, rsp
jbe 0x400920
mov eax, 0
test rax, rax
je 0x400920
pop rbp
mov edi, obj.completed.7585
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.completed.7585
push rbp
sub rsi, obj.completed.7585
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400968
mov eax, 0
test rax, rax
je 0x400968
pop rbp
mov edi, obj.completed.7585
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x201709], 0
jne 0x40098a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x2016f6], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x4009a0
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x40099b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov dword [rbp - 8], 0
mov rax, qword [rbp - 0x18]
mov dword [rax], 0
call sym.imp.getchar_unlocked
mov dword [rbp - 4], eax
cmp dword [rbp - 4], 0x2d
jne 0x4009ea
mov dword [rbp - 8], 1
jmp 0x400a02
cmp dword [rbp - 4], 0x2f
jle 0x4009d3
cmp dword [rbp - 4], 0x39
jg 0x4009d3
mov eax, dword [rbp - 4]
lea edx, [rax - 0x30]
mov rax, qword [rbp - 0x18]
mov dword [rax], edx
call sym.imp.getchar_unlocked
mov dword [rbp - 4], eax
cmp dword [rbp - 4], 0x2f
jle 0x400a37
cmp dword [rbp - 4], 0x39
jg 0x400a37
mov rax, qword [rbp - 0x18]
mov edx, dword [rax]
mov eax, edx
shl eax, 2
add eax, edx
add eax, eax
mov edx, eax
mov eax, dword [rbp - 4]
add eax, edx
lea edx, [rax - 0x30]
mov rax, qword [rbp - 0x18]
mov dword [rax], edx
jmp 0x400a02
cmp dword [rbp - 8], 0
je 0x400a4d
mov rax, qword [rbp - 0x18]
mov eax, dword [rax]
neg eax
mov edx, eax
mov rax, qword [rbp - 0x18]
mov dword [rax], edx
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov dword [rbp - 8], 0
mov rax, qword [rbp - 0x18]
mov qword [rax], 0
call sym.imp.getchar_unlocked
mov dword [rbp - 4], eax
cmp dword [rbp - 4], 0x2d
jne 0x400a85
mov dword [rbp - 8], 1
jmp 0x400aa1
cmp dword [rbp - 4], 0x2f
jle 0x400a6e
cmp dword [rbp - 4], 0x39
jg 0x400a6e
mov eax, dword [rbp - 4]
sub eax, 0x30
movsxd rdx, eax
mov rax, qword [rbp - 0x18]
mov qword [rax], rdx
call sym.imp.getchar_unlocked
mov dword [rbp - 4], eax
cmp dword [rbp - 4], 0x2f
jle 0x400ae1
cmp dword [rbp - 4], 0x39
jg 0x400ae1
mov rax, qword [rbp - 0x18]
mov rdx, qword [rax]
mov rax, rdx
shl rax, 2
add rax, rdx
add rax, rax
mov rdx, rax
mov eax, dword [rbp - 4]
cdqe
add rax, rdx
lea rdx, [rax - 0x30]
mov rax, qword [rbp - 0x18]
mov qword [rax], rdx
jmp 0x400aa1
cmp dword [rbp - 8], 0
je 0x400afb
mov rax, qword [rbp - 0x18]
mov rax, qword [rax]
neg rax
mov rdx, rax
mov rax, qword [rbp - 0x18]
mov qword [rax], rdx
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov dword [rbp - 8], 0
call sym.imp.getchar_unlocked
mov dword [rbp - 4], eax
cmp dword [rbp - 4], 0x20
je 0x400b11
cmp dword [rbp - 4], 0xa
je 0x400b11
cmp dword [rbp - 4], 0xd
je 0x400b11
cmp dword [rbp - 4], 9
je 0x400b11
cmp dword [rbp - 4], -1
jne 0x400b39
jmp 0x400b11
nop
mov eax, dword [rbp - 8]
lea edx, [rax + 1]
mov dword [rbp - 8], edx
movsxd rdx, eax
mov rax, qword [rbp - 0x18]
add rax, rdx
mov edx, dword [rbp - 4]
mov byte [rax], dl
call sym.imp.getchar_unlocked
mov dword [rbp - 4], eax
cmp dword [rbp - 4], 0x20
je 0x400b92
cmp dword [rbp - 4], 0xa
je 0x400b92
cmp dword [rbp - 4], 0xd
je 0x400b92
cmp dword [rbp - 4], 9
je 0x400b92
cmp dword [rbp - 4], -1
je 0x400b92
mov eax, dword [rbp - 8]
lea edx, [rax + 1]
mov dword [rbp - 8], edx
movsxd rdx, eax
mov rax, qword [rbp - 0x18]
add rax, rdx
mov edx, dword [rbp - 4]
mov byte [rax], dl
jmp 0x400b52
mov eax, dword [rbp - 8]
movsxd rdx, eax
mov rax, qword [rbp - 0x18]
add rax, rdx
mov byte [rax], 0
mov eax, dword [rbp - 8]
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
call sym.imp.getchar_unlocked
mov dword [rbp - 4], eax
cmp dword [rbp - 4], 0x20
je 0x400bb3
cmp dword [rbp - 4], 0xa
je 0x400bb3
cmp dword [rbp - 4], 0xd
je 0x400bb3
cmp dword [rbp - 4], 9
je 0x400bb3
cmp dword [rbp - 4], -1
jne 0x400bdb
jmp 0x400bb3
nop
mov eax, dword [rbp - 4]
movsx edx, al
mov rax, qword [rbp - 0x18]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::push_back
call sym.imp.getchar_unlocked
mov dword [rbp - 4], eax
cmp dword [rbp - 4], 0x20
je 0x400c2c
cmp dword [rbp - 4], 0xa
je 0x400c2c
cmp dword [rbp - 4], 0xd
je 0x400c2c
cmp dword [rbp - 4], 9
je 0x400c2c
cmp dword [rbp - 4], -1
je 0x400c2c
mov eax, dword [rbp - 4]
movsx edx, al
mov rax, qword [rbp - 0x18]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::push_back
jmp 0x400bf0
mov rax, qword [rbp - 0x18]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::size
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x40
mov dword [rbp - 0x34], edi
mov eax, esi
mov byte [rbp - 0x38], al
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
mov dword [rbp - 0x28], 0
mov dword [rbp - 0x24], 0
cmp dword [rbp - 0x34], 0
jns 0x400c77
mov dword [rbp - 0x24], 1
neg dword [rbp - 0x34]
cmp dword [rbp - 0x34], 0
je 0x400ccd
mov esi, dword [rbp - 0x28]
lea eax, [rsi + 1]
mov dword [rbp - 0x28], eax
mov ecx, dword [rbp - 0x34]
mov edx, 0x66666667
mov eax, ecx
imul edx
sar edx, 2
mov eax, ecx
sar eax, 0x1f
sub edx, eax
mov eax, edx
shl eax, 2
add eax, edx
add eax, eax
sub ecx, eax
mov edx, ecx
movsxd rax, esi
mov byte [rbp + rax - 0x20], dl
mov ecx, dword [rbp - 0x34]
mov edx, 0x66666667
mov eax, ecx
imul edx
sar edx, 2
mov eax, ecx
sar eax, 0x1f
sub edx, eax
mov eax, edx
mov dword [rbp - 0x34], eax
jmp 0x400c77
cmp dword [rbp - 0x28], 0
jne 0x400ce3
mov eax, dword [rbp - 0x28]
lea edx, [rax + 1]
mov dword [rbp - 0x28], edx
cdqe
mov byte [rbp + rax - 0x20], 0
cmp dword [rbp - 0x24], 0
je 0x400cf3
mov edi, 0x2d
call sym.imp.putchar_unlocked
mov eax, dword [rbp - 0x28]
lea edx, [rax - 1]
mov dword [rbp - 0x28], edx
test eax, eax
setne al
test al, al
je 0x400d1e
mov eax, dword [rbp - 0x28]
cdqe
movzx eax, byte [rbp + rax - 0x20]
movsx eax, al
add eax, 0x30
mov edi, eax
call sym.imp.putchar_unlocked
jmp 0x400cf3
movsx eax, byte [rbp - 0x38]
mov edi, eax
call sym.imp.putchar_unlocked
nop
mov rax, qword [rbp - 8]
xor rax, qword fs:[0x28]
je 0x400d3e
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x40
mov qword [rbp - 0x38], rdi
mov eax, esi
mov byte [rbp - 0x3c], al
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
mov dword [rbp - 0x28], 0
mov dword [rbp - 0x24], 0
cmp qword [rbp - 0x38], 0
jns 0x400d80
mov dword [rbp - 0x24], 1
neg qword [rbp - 0x38]
cmp qword [rbp - 0x38], 0
je 0x400df7
mov esi, dword [rbp - 0x28]
lea eax, [rsi + 1]
mov dword [rbp - 0x28], eax
mov rcx, qword [rbp - 0x38]
movabs rdx, 0x6666666666666667
mov rax, rcx
imul rdx
sar rdx, 2
mov rax, rcx
sar rax, 0x3f
sub rdx, rax
mov rax, rdx
shl rax, 2
add rax, rdx
add rax, rax
sub rcx, rax
mov rdx, rcx
movsxd rax, esi
mov byte [rbp + rax - 0x20], dl
mov rcx, qword [rbp - 0x38]
movabs rdx, 0x6666666666666667
mov rax, rcx
imul rdx
sar rdx, 2
mov rax, rcx
sar rax, 0x3f
sub rdx, rax
mov rax, rdx
mov qword [rbp - 0x38], rax
jmp 0x400d80
cmp dword [rbp - 0x28], 0
jne 0x400e0d
mov eax, dword [rbp - 0x28]
lea edx, [rax + 1]
mov dword [rbp - 0x28], edx
cdqe
mov byte [rbp + rax - 0x20], 0
cmp dword [rbp - 0x24], 0
je 0x400e1d
mov edi, 0x2d
call sym.imp.putchar_unlocked
mov eax, dword [rbp - 0x28]
lea edx, [rax - 1]
mov dword [rbp - 0x28], edx
test eax, eax
setne al
test al, al
je 0x400e48
mov eax, dword [rbp - 0x28]
cdqe
movzx eax, byte [rbp + rax - 0x20]
movsx eax, al
add eax, 0x30
mov edi, eax
call sym.imp.putchar_unlocked
jmp 0x400e1d
movsx eax, byte [rbp - 0x3c]
mov edi, eax
call sym.imp.putchar_unlocked
nop
mov rax, qword [rbp - 8]
xor rax, qword fs:[0x28]
je 0x400e68
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov dword [rbp - 4], 0
mov eax, dword [rbp - 4]
movsxd rdx, eax
mov rax, qword [rbp - 0x18]
add rax, rdx
movzx eax, byte [rax]
test al, al
je 0x400eb1
mov eax, dword [rbp - 4]
movsxd rdx, eax
mov rax, qword [rbp - 0x18]
add rax, rdx
movzx eax, byte [rax]
movsx eax, al
mov edi, eax
call sym.imp.putchar_unlocked
add dword [rbp - 4], 1
jmp 0x400e7d
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov eax, esi
mov byte [rbp - 0x1c], al
mov dword [rbp - 4], 0
mov eax, dword [rbp - 4]
movsxd rdx, eax
mov rax, qword [rbp - 0x18]
mov rsi, rdx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
movzx eax, byte [rax]
test al, al
setne al
test al, al
je 0x400f15
mov eax, dword [rbp - 4]
movsxd rdx, eax
mov rax, qword [rbp - 0x18]
mov rsi, rdx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
movzx eax, byte [rax]
movsx eax, al
mov edi, eax
call sym.imp.putchar_unlocked
add dword [rbp - 4], 1
jmp 0x400ecc
movsx eax, byte [rbp - 0x1c]
mov edi, eax
call sym.imp.putchar_unlocked
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov eax, esi
mov byte [rbp - 0x1c], al
mov dword [rbp - 4], 0
mov eax, dword [rbp - 4]
movsxd rdx, eax
mov rax, qword [rbp - 0x18]
add rax, rdx
movzx eax, byte [rax]
test al, al
je 0x400f6f
mov eax, dword [rbp - 4]
movsxd rdx, eax
mov rax, qword [rbp - 0x18]
add rax, rdx
movzx eax, byte [rax]
movsx eax, al
mov edi, eax
call sym.imp.putchar_unlocked
add dword [rbp - 4], 1
jmp 0x400f3b
movsx eax, byte [rbp - 0x1c]
mov edi, eax
call sym.imp.putchar_unlocked
nop
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov qword [rbp - 0x28], rdx
mov qword [rbp - 0x10], 1
mov rax, qword [rbp - 0x18]
cqo
idiv qword [rbp - 0x28]
mov qword [rbp - 8], rdx
cmp qword [rbp - 0x20], 0
je 0x400fe2
mov rax, qword [rbp - 0x20]
and eax, 1
test rax, rax
je 0x400fc9
mov rax, qword [rbp - 0x10]
imul rax, qword [rbp - 8]
cqo
idiv qword [rbp - 0x28]
mov qword [rbp - 0x10], rdx
mov rax, qword [rbp - 8]
imul rax, qword [rbp - 8]
cqo
idiv qword [rbp - 0x28]
mov qword [rbp - 8], rdx
sar qword [rbp - 0x20], 1
jmp 0x400fa3
mov rax, qword [rbp - 0x10]
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x30
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
lea rdx, [rbp - 0x28]
lea rax, [rbp - 0x2c]
mov rsi, rdx
mov rdi, rax
call sym.reader_int_int_
pxor xmm0, xmm0
movsd qword [rbp - 0x18], xmm0
mov dword [rbp - 0x1c], 0
mov eax, dword [rbp - 0x28]
cmp dword [rbp - 0x1c], eax
jge 0x401085
lea rdx, [rbp - 0x20]
lea rax, [rbp - 0x24]
mov rsi, rdx
mov rdi, rax
call sym.reader_int_int_
mov edx, dword [rbp - 0x2c]
mov eax, dword [rbp - 0x24]
sub edx, eax
mov eax, edx
pxor xmm0, xmm0
cvtsi2sd xmm0, eax
mov eax, dword [rbp - 0x20]
pxor xmm1, xmm1
cvtsi2sd xmm1, eax
divsd xmm0, xmm1
movsd qword [rbp - 0x10], xmm0
lea rdx, [rbp - 0x18]
lea rax, [rbp - 0x10]
mov rsi, rdx
mov rdi, rax
call sym.std::max_double_
movsd xmm0, qword [rax]
movsd qword [rbp - 0x18], xmm0
add dword [rbp - 0x1c], 1
jmp 0x401022
mov eax, dword [rbp - 0x2c]
pxor xmm0, xmm0
cvtsi2sd xmm0, eax
movsd xmm1, qword [rbp - 0x18]
divsd xmm0, xmm1
mov rax, qword [rbp - 8]
xor rax, qword fs:[0x28]
je 0x4010ad
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x30
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
lea rax, [rbp - 0x18]
mov rdi, rax
call sym.reader
mov dword [rbp - 0x14], 0
mov eax, dword [rbp - 0x18]
cmp dword [rbp - 0x14], eax
jge 0x401128
call sym.solve
movq rax, xmm0
mov qword [rbp - 0x10], rax
mov eax, dword [rbp - 0x14]
add eax, 1
mov esi, eax
mov edi, str.Case___d:
mov eax, 0
call sym.imp.printf
mov rax, qword [rbp - 0x10]
mov qword [rbp - 0x28], rax
movsd xmm0, qword [rbp - 0x28]
mov edi, str._.10lf_n
mov eax, 1
call sym.imp.printf
add dword [rbp - 0x14], 1
jmp 0x4010d9
mov eax, 0
mov rdx, qword [rbp - 8]
xor rdx, qword fs:[0x28]
je 0x401141
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
cmp dword [rbp - 4], 1
jne 0x40117e
cmp dword [rbp - 8], 0xffff
jne 0x40117e
mov edi, obj.std::__ioinit
call sym.std::ios_base::Init::Init
mov edx, obj.__dso_handle
mov esi, obj.std::__ioinit
mov edi, sym.std::ios_base::Init::_Init
call sym.imp.__cxa_atexit
nop
leave
ret
push rbp
mov rbp, rsp
mov esi, 0xffff
mov edi, 1
call sym.__static_initialization_and_destruction_0
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.reader
mov rax, qword [rbp - 0x10]
mov rdi, rax
call sym.reader
nop
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rax, qword [rbp - 8]
movsd xmm1, qword [rax]
mov rax, qword [rbp - 0x10]
movsd xmm0, qword [rax]
ucomisd xmm0, xmm1
jbe 0x4011e9
mov rax, qword [rbp - 0x10]
jmp 0x4011ed
mov rax, qword [rbp - 8]
pop rbp
ret
nop
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200bf6]
push rbp
lea rbp, [rip + 0x200bfe]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401246
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401230
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, 0
add byte [rax], al
add eax, 0x6000000
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], cl
or byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
or al, byte [rax]
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rbx + 0x61]
jae 0x401389
and byte [rbx], ah
and eax, 0x203a64
and eax, 0x6c30312e
or al, byte [rax]
add byte [rcx], al
add dword [rbx], ebx
add edi, dword [rbx]
test al, 0
add byte [rax], al
adc al, 0
add byte [rax], al
mov esp, 0xf4fffff4
add byte [rax], al
add byte [rbp + rsi*8 + 0xc4ffff], cl
add byte [rax], al
idiv bh
lcall [rcx + rax]
add byte [rax], al
sbb al, 0xf7
cmp al, 1
add byte [rax], al
retf -9
lcall [rcx + rax]
add byte [rbx - 8], dh
jl 0x40136f
add byte [rax], al
stc
lcall [rcx + rax - 0x5f40000]
mov esp, 0x36000001
sti
fadd qword [rcx]
add byte [rax], al
cmp bl, 0xff
cld
add dword [rax], eax
add bh, ch
sti
lcall [rdx + rax]
add byte [rax], al
cld
cmp al, 2
add byte [rax], al
mov ah, 0xfc
lcall [rdx + rax]
add byte [rbx - 3], bh
jl 0x4013b0
add byte [rax], al
paddd mm7, mm7
fadd qword [rdx]
add byte [rax], al
cld
add al, byte [rax]
add byte [rdx - 2], ah
lcall [rdx + rax - 0x1730000]
mov esp, 0xbc000002
lcall [rbx + rax]
add byte [rax], al
sub al, 0xff
jmp qword [rbx + rax]
add byte [rax + rax], dl
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4013ff
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sal ah, 0xff
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40142f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sal bl, 0xff
inc eax
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rsi - 0xb], bl
lcall [rdx]
adc byte [rsi + 0x60d4302], al
add dl, byte [rbp + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
add byte fs:[rax], al
add al, bl
cmc
ljmp [rsi]
adc byte [rsi + 0x60d4302], al
add ch, byte [rcx + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
test byte [rax], al
add byte [rax], al
idiv bh
ljmp [rcx]
adc byte [rsi + 0x60d4302], al
add ah, byte [rsp + rcx + 0x807]
sbb al, 0
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add byte [rax], al
add bh, ch
idiv bh
call qword [rbx]
adc byte [rsi + 0x60d4302], al
add cl, byte [rsi + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rdx - 9], ah
inc dword [rsi]
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add eax, dword [rcx]
add dword [rdi + rax], ecx
or byte [rax], al
sbb al, 0
add byte [rax], al
in al, 0
add byte [rax], al
clc
ljmp [rdx]
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add esp, dword [rip + 0x8070c01]
add byte [rax + rax], bl
add byte [rax], al
add al, 1
add byte [rax], al
push rdx
stc
dec dword [rdx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add al, byte [rbp + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
and al, 1
add byte [rax], al
jl 0x401533
ljmp [rdi]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add ch, byte [rdx + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add dword [rax], r8d
add bl, cl
stc
lcall [rdx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add dl, byte [rbp + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add dword fs:[rax], eax
add byte [rip + 0x6bfffffa], al
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add ah, byte [rsi + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
test byte [rcx], al
add byte [rax], al
push rax
cli
inc edi
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add al, dl
or al, 7
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add dword [rax], eax
add bh, dh
cli
call qword [rax + rax + 0x41000000]
adc byte [rsi + 0x60d4302], al
add cl, byte [rdi + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
add dword [rax], eax
add byte [rsi + 0x2bfffffb], bh
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
in al, 1
add byte [rax], al
leave
sti
ljmp [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
imul ecx, dword [rdi + rax], 8
sbb al, 0
add byte [rax], al
add al, 2
add byte [rax], al
sub edi, ebx
add byte ds:[rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
jns 0x401637
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
and al, 2
add byte [rax], al
sti
call qword [rip]
adc byte [rsi + 0x60d4302], al
push rax
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rdx + rax], al
add byte [rax + 0x65fffffb], bl
add byte [rax], al
add byte [rax], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x401692
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
mov word [rdx], es
add byte [rax], al
sar bl, 0xff
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
or dword [rax], eax
add byte [rax], al
add byte [rax], al
adc dword [rcx], 0x40
add byte [rax], al
jo 0x401e13
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 0x4007, 0
add byte [rax], al
add byte [rax], al
or eax, 0
add byte [rax], al
add byte [rdx + rdx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 4], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x401ed6
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4006], ch
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add byte [rax + 6], cl
add byte [rax], al
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte es:[rax], al
add byte [rax], al
add byte [rax], al
or byte ss:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], r8b
add byte [rax], al
add byte [rax], al
push rsi
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
jbe 0x40205a
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x4008], al
add byte [rax], al
add byte [rsi + 0x4008], dl
add byte [rax], al
add byte [rsi + 0x4008], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4020f8
je 0x402101
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x40210f
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x40210c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 4], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax + 6], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax + 0x4006], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add al, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add al, cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x4008b000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add al, al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
verr word [rdx + rdx + 0x40]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax + 0x12], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rbx + rdx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add al, ah
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601e1000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb dword [rax], eax
jo 0x40233a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], bl
add byte [rax + 0x6020], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
adc eax, 0x601e1000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, dh
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 9], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rdx], bl
add byte [rax + 0x6020], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add dword [rax], eax
adc al, 0
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0x4009], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rbx], dl
add al, bh
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsd dword [rdi], dword ptr [rsi]
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], ch
add byte [rax], dl
add byte [rax + 0x12], bh
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x12], bh
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x12], bh
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, ch
add byte [rax], al
add byte [rcx], al
add byte [rdx], bl
add byte [rcx + 0x6020], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, bh
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rdx + rdx + 0x40], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and dword [rcx], eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dh
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x4012], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 1], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rax
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rdx + rdx + 0x40], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
ja 0x402523
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edi
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rdx + rdx + 0x40], cl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ecx, 0x1000001
add byte [rax], dl
add byte [rax + 0x4012], dl
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fiadd dword [rcx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
xchg eax, esp
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
cwde
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rdx + rdx + 0x40], bl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4012], ah
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rbp
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rdx + rdx + 0x40], ah
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jnp 0x4025e4
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
test al, 0x12
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rdx + rdx + 0x40], ch
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
ret 2
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4012], dh
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rdx + rdx + 0x40], dh
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov eax, 0x4012
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp al, byte [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov esp, 0x4012
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add al, al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rbx], eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add al, cl
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
fld dword [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
int3
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 4
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
rcl byte [rdx], 1
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub eax, 0x1000004
add byte [rax], dl
add ah, dl
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
add al, 0
add byte [rcx], al
add byte [rax], dl
add al, bl
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jnp 0x40271e
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
fcom qword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsd dword [rsi], dword ptr [rdi]
add al, 0
add byte [rcx], al
add byte [rax], dl
add al, ah
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
iretd
add al, 0
add byte [rcx], al
add byte [rax], dl
add ah, ah
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
add al, 0
add byte [rcx], al
add byte [rax], dl
add al, ch
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
in al, dx
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
push 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
hlt
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
add eax, 0x10000
adc byte [rax], al
clc
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dh, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
cld
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild word [rip + 0x10000]
adc byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x1000006
add byte [rax], dl
add byte [rbx + rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub eax, dword [rsi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
or byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
or al, 0x13
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], 0
add byte [rcx], al
add byte [rax], dl
add byte [rax], dl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsb byte [rsi], byte ptr [rdi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, cl
add byte [rax], al
add al, byte [rax]
add byte [rbx + 0x11], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bh
add byte [rax], al
add al, byte [rax]
add byte [rcx + 0x4011], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add dword [rax], eax
adc al, byte [rax]
mov al, 0x16
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000007], ah
add byte [rip + 0x601e1000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], dh
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
xor al, 0x13
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rax], al
add byte [rcx], al
add byte [rax], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdx
add byte [rax], al
add byte [rax], al
adc eax, dword [rax]
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 7], ch
add byte [rax], al
add byte [rax], al
adc eax, dword [rax]
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jle 0x402979
add byte [rax], al
add dword [rax], eax
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 9], ah
add byte [rax], al
and byte [rax], al
sbb dword [rax], eax
jo 0x4029b2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x12000007], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x12000007], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x12000007], bh
add byte [rsi], cl
add byte [rax + 0x12], ah
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 9], ch
add byte [rax], al
adc al, byte [rax]
add al, al
or byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd dword [rdi]
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, dx
add byte [rax], al
adc al, byte [rax]
add al, ch
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
mov dword [rax], 0
add byte [rax], al
ret
add byte [rax], al
adc al, byte [rax]
verr word [rdx + rdx + 0x40]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, dh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb ecx, dword [rax]
add byte [rax], al
adc al, byte [rax]
add byte [rdx], bh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdi], ah
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 8], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xd], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rcx], ch
add byte [rdx], dl
add byte [rsi], cl
add byte [rdi + 0x400b], ah
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rbx + 0x12000008], ch
add byte [rax], al
add byte [rax + 8], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
or byte [rax], al
add byte [rdx], dl
add byte [rsi], cl
add byte [rbp + 0xf], bh
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
fimul word [rax]
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cli
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
or dword [rax], eax
add byte [rcx], dl
add byte [rax], dl
add byte [rax + 0x12], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add cl, al
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x12000009], bh
add byte [rsi], cl
add byte [rbx], ah
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
pop rdx
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 9], cl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword gs:[rax], eax
add byte [rax], dl
add byte [rcx], bl
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 9], dh
add byte [rax], al
adc al, byte [rax]
add byte [rdx + 0xe], ch
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
jg 0x402beb
add byte [rax], al
adc dword [rdx], eax
sbb dword [rax], eax
and byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x11000009], cl
add bl, byte [rcx]
add byte [rax + 0x20], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x12000009], bl
add byte [rsi], cl
add al, dh
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte gs:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x12000009], ch
add byte [rsi], cl
add byte [rax + 0xa], dl
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rcx + rcx + 0x120000], dh
add byte [rsi + rcx + 0x40], dh
add byte [rax], al
outsd dx, dword [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, dh
or dword [rax], eax
add byte [rax], dl
add byte [rdx], bl
add byte [rax + 0x6020], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1200000a], bl
add byte [rsi], cl
add dh, bh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
test eax, 0
add byte [rax], al
add byte [rcx], ch
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], ah
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
mov byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
adc al, byte [rax]
add byte [rsi + 0x4009], dh
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rdi + 0xa], dh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ret 0xa
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rcx], dl
add byte [rax], al
and al, byte [rax]
add byte [rsi + 0x4011], dl
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
or eax, dword [rax]
add byte [rax], dl
add byte [rcx], bl
add byte [rax + 0x6020], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], dh
or eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rdi + 0x4010], ch
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
movabs byte [0xc8000b0012000009], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x402df2
jne 0x402de6
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402da6
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402e24
jb 0x402e2a
pop rdi
jne 0x402e33
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402e2d
je 0x402e29
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402e49
jb 0x402e4f
pop rdi
jne 0x402e58
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402e5b
jns 0x402e4b
outsb dx, byte gs:[rsi]
je 0x402e62
jns 0x402df2
jb 0x402e56
insd dword [rdi], dx
pop rdi
jne 0x402e68
insd dword [rdi], dx
jns 0x402dfe
pop rdi
pop rdi
jb 0x402e64
insd dword [rdi], dx
pop rdi
jne 0x402e76
insd dword [rdi], dx
jns 0x402e6b
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402e76
jns 0x402e76
outsb dx, byte gs:[rsi]
je 0x402e8d
jns 0x402e1d
insd dword [rdi], dx
imul ebp, dword [rsi + 0x2e], 0x707063
pop rdi
pop rdx
push rbx
je 0x402e77
xor dword [rcx], edi
jo 0x402e98
movsxd rsp, dword gs:[rbp + 0x77]
imul esi, dword [rbx + 0x65], 0x6e6f635f
jae 0x402eb0
jb 0x402eb3
movsxd rsi, dword [rax + rax + 0x5f]
pop rdx
push rbx
je 0x402e92
xor dword [rbx], esi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x402eb1
jb 0x402ebc
add byte [rdi + 0x5a], bl
push rbx
je 0x402ea7
imul esp, dword ss:[rdi + 0x6e], 0x65726f
pop rdi
pop rdx
push rbx
je 0x402eb4
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x402edb
movsxd rdi, dword [rax + 0x78]
xor r14b, byte [rcx]
pop rdi
pop rdi
jne 0x402ef6
je 0x402eeb
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x5f]
jo 0x402f02
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x5a5f0045
push rbx
je 0x402eea
xor dword [rax], esi
jb 0x402f05
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402efc
xor dword [rcx], esi
je 0x402f26
jns 0x402f15
je 0x402f27
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402f0f
xor dword [rax], esi
outsd dx, dword fs:[rsi]
jo 0x402f3e
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402f07
xor eax, 0x65676572
js 0x402f3c
movsxd rbp, dword [rdi + 0x6e]
jae 0x402f56
outsb dx, byte [rsi]
je 0x402f59
xor rax, 0x73616369
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x402f26
xor eax, 0x65676572
js 0x402f5b
movsxd rbp, dword [rdi + 0x6e]
jae 0x402f75
outsb dx, byte [rsi]
je 0x402f78
outsb dx, byte ss:[rsi]
outsd dx, dword [rsi]
jae 0x402f80
jae 0x402f53
add byte [rdi + 0x5a], bl
push rbx
je 0x402f46
xor eax, 0x65676572
js 0x402f7b
movsxd rbp, dword [rdi + 0x6e]
jae 0x402f95
outsb dx, byte [rsi]
je 0x402f98
cmp byte [rdi + 0x70], r13b
je 0x402f94
insd dword [rdi], dx
imul edi, dword [rdx + 0x65], 0x5a5f0045
push rbx
je 0x402f68
xor eax, 0x65676572
js 0x402f9d
movsxd rbp, dword [rdi + 0x6e]
jae 0x402fb7
outsb dx, byte [rsi]
je 0x402fba
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x402fb5
add byte [r15 + 0x5a], r11b
push rbx
je 0x402f89
xor eax, 0x65676572
js 0x402fbe
movsxd rbp, dword [rdi + 0x6e]
jae 0x402fd8
outsb dx, byte [rsi]
je 0x402fdb
xor qword [rax], r14
push r11
movsxd rsi, dword [rdx + 0x69]
jo 0x402fe9
add byte [r15 + 0x5a], r11b
push rbx
je 0x402fae
xor eax, 0x65676572
js 0x402fe3
movsxd rbp, dword [rdi + 0x6e]
jae 0x402ffd
outsb dx, byte [rsi]
je 0x403000
xor rax, 0x69736162
movsxd rax, dword [rbp]
pop rdi
pop rdx
push rbx
je 0x402fcd
xor eax, 0x65676572
js 0x403002
movsxd rbp, dword [rdi + 0x6e]
jae 0x40301c
outsb dx, byte [rsi]
je 0x40301f
cmp byte [rbp + 0x78], r12b
je 0x403017
outsb dx, byte [rsi]
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x402fef
xor eax, 0x65676572
js 0x403024
movsxd rbp, dword [rdi + 0x6e]
jae 0x40303e
outsb dx, byte [rsi]
je 0x403041
xor r12, qword [rcx + 0x77]
imul eax, dword [rbp], 0x5f
pop rdx
push rbx
je 0x40300c
xor eax, 0x65676572
js 0x403041
movsxd rbp, dword [rdi + 0x6e]
jae 0x40305b
outsb dx, byte [rsi]
je 0x40305e
xor al, 0x67
jb 0x403055
jo 0x403037
add byte [rdi + 0x5a], bl
push rbx
je 0x40302a
xor eax, 0x65676572
js 0x40305f
movsxd rbp, dword [rdi + 0x6e]
jae 0x403079
outsb dx, byte [rsi]
je 0x40307c
xor rax, 0x65726765
jo 0x403056
add byte [rdi + 0x5a], bl
push rbx
je 0x403049
xor eax, 0x65676572
js 0x40307e
movsxd rbp, dword [rdi + 0x6e]
jae 0x403098
outsb dx, byte [rsi]
je 0x40309b
xor qword [rbx], r14
insd dword [rdi], dx
je 0x403092
push 0x6665645f
jne 0x4030a3
je 0x40307e
add byte [rdi + 0x5a], bl
push rbx
je 0x403071
xor eax, 0x65676572
js 0x4030a6
movsxd rbp, dword [rdi + 0x6e]
jae 0x4030c0
outsb dx, byte [rsi]
je 0x4030c3
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4030ba
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x403099
xor eax, 0x65676572
js 0x4030ce
movsxd rbp, dword [rdi + 0x6e]
jae 0x4030e8
outsb dx, byte [rsi]
je 0x4030eb
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4030e2
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x4030c1
xor eax, 0x65676572
js 0x4030f6
movsxd rbp, dword [rdi + 0x6e]
jae 0x403110
outsb dx, byte [rsi]
je 0x403113
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40310a
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
ja 0x4030f6
add byte [rdi + 0x5a], bl
push rbx
je 0x4030e9
xor eax, 0x65676572
js 0x40311e
movsxd rbp, dword [rdi + 0x6e]
jae 0x403138
outsb dx, byte [rsi]
je 0x40313b
xor qword [rbx], r14
insd dword [rdi], dx
je 0x403132
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
ja 0x40311e
add byte [rdi + 0x5a], bl
push rbx
je 0x403111
xor eax, 0x65676572
js 0x403146
movsxd rbp, dword [rdi + 0x6e]
jae 0x403160
outsb dx, byte [rsi]
je 0x403163
cmp qword [rbp + 0x61], r13
je 0x403159
push 0x796e615f
add byte [r15 + 0x5a], r11b
push rbx
je 0x403134
xor eax, 0x65676572
js 0x403169
movsxd rbp, dword [rdi + 0x6e]
jae 0x403183
outsb dx, byte [rsi]
je 0x403186
xor qword [rbp*2 + 0x68637461], r14
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
je 0x40317f
outsb dx, byte [rsi]
jne 0x40318f
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x40315d
xor eax, 0x65676572
js 0x403192
movsxd rbp, dword [rdi + 0x6e]
jae 0x4031ac
outsb dx, byte [rsi]
je 0x4031af
xor qword [rsi], r14
insd dword [rdi], dx
je 0x4031a6
push 0x6e6f635f
je 0x4031b3
outsb dx, byte [rsi]
jne 0x4031bc
jne 0x4031c2
add byte [r15 + 0x5a], r11b
push rbx
je 0x403188
xor eax, 0x65676572
js 0x4031bd
movsxd rbp, dword [rdi + 0x6e]
jae 0x4031d7
outsb dx, byte [rsi]
je 0x4031da
xor qword [rsi], r14
insd dword [rdi], dx
je 0x4031d1
push 0x6572705f
jbe 0x4031d4
jbe 0x4031d9
imul ebp, dword [rbp + rax*2], 0x534e5a5f
je 0x4031b3
xor eax, 0x65676572
js 0x4031e8
movsxd rbp, dword [rdi + 0x6e]
jae 0x403202
outsb dx, byte [rsi]
je 0x403205
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x403206
je 0x4031fb
jne 0x40320e
je 0x4031e9
add byte [rdi + 0x5a], bl
push rbx
je 0x4031dc
xor eax, 0x65676572
js 0x403211
movsxd rbp, dword [rdi + 0x6e]
jae 0x40322b
outsb dx, byte [rsi]
je 0x40322e
xor qword [rax], r14
outsw dx, word [rsi]
jb 0x40322f
je 0x403224
jae 0x40322c
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x403201
xor eax, 0x65676572
js 0x403236
movsxd rbp, dword [rdi + 0x6e]
jae 0x403250
outsb dx, byte [rsi]
je 0x403253
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x403254
je 0x403249
outsb dx, byte [rsi]
outsd dx, dword [rsi]
pop rdi
movsxd rbp, dword [rdi + 0x70]
jns 0x403237
add byte [rdi + 0x5a], bl
push rbx
je 0x40322a
xor eax, 0x65676572
js 0x40325f
movsxd rbp, dword [rdi + 0x6e]
jae 0x403279
outsb dx, byte [rsi]
je 0x40327c
xor qword [rdi], r14
outsw dx, word [rsi]
jb 0x40327d
je 0x403272
imul si, word [rdx + 0x73], 0x5f74
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
jns 0x403263
add byte [rdi + 0x5a], bl
push rbx
je 0x403256
xor eax, 0x65676572
js 0x40328b
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032a5
outsb dx, byte [rsi]
je 0x4032a8
xor qword [rbx], r14
jb 0x4032ad
outsd dx, dword [rsi]
jb 0x40329d
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x4032aa
add byte [r15 + 0x5a], r11b
push rbx
je 0x40327e
xor eax, 0x65676572
js 0x4032b3
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032cd
outsb dx, byte [rsi]
je 0x4032d0
xor qword [rcx], r14
jb 0x4032d5
outsd dx, dword [rsi]
jb 0x4032c5
movsxd rsi, dword [rcx + rdi*2 + 0x70]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x4032a4
xor eax, 0x65676572
js 0x4032d9
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032f3
outsb dx, byte [rsi]
je 0x4032f6
xor qword [rdx], r14
jb 0x4032fb
outsd dx, dword [rsi]
jb 0x4032eb
jae 0x4032f2
jo 0x4032f7
add byte [r15 + 0x5a], r11b
push rbx
je 0x4032cb
xor eax, 0x65676572
js 0x403300
movsxd rbp, dword [rdi + 0x6e]
jae 0x40331a
outsb dx, byte [rsi]
je 0x40331d
xor qword [rbx], r14
jb 0x403322
outsd dx, dword [rsi]
jb 0x403312
movsxd rbp, dword [rbx + 0x72]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x4032f3
xor eax, 0x65676572
js 0x403328
movsxd rbp, dword [rdi + 0x6e]
jae 0x403342
outsb dx, byte [rsi]
je 0x403345
xor qword [rcx], r14
jb 0x40334a
outsd dx, dword [rsi]
jb 0x40333a
jb 0x40333f
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x403319
xor eax, 0x65676572
js 0x40334e
movsxd rbp, dword [rdi + 0x6e]
jae 0x403368
outsb dx, byte [rsi]
je 0x40336b
xor qword [rcx], r14
jb 0x403370
outsd dx, dword [rsi]
jb 0x403360
jo 0x403364
jb 0x40336a
outsb dx, byte [rsi]
add byte [r15 + 0x5a], r11b
push rbx
je 0x40333f
xor eax, 0x65676572
js 0x403374
movsxd rbp, dword [rdi + 0x6e]
jae 0x40338e
outsb dx, byte [rsi]
je 0x403391
xor qword [rcx], r14
jb 0x403396
outsd dx, dword [rsi]
jb 0x403386
jb 0x40338b
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x403365
xor eax, 0x65676572
js 0x40339a
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033b4
outsb dx, byte [rsi]
je 0x4033b7
xor qword [0x726f7272], r14
pop rdi
jb 0x4033b4
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40338e
xor eax, 0x65676572
js 0x4033c3
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033dd
outsb dx, byte [rsi]
je 0x4033e0
xor qword [rcx], r14
jb 0x4033e5
outsd dx, dword [rsi]
jb 0x4033d5
jb 0x4033d9
outsb dx, byte [rsi]
add byte gs:[r15d + 0x5a], r11b
push rbx
je 0x4033b4
xor eax, 0x65676572
js 0x4033e9
movsxd rbp, dword [rdi + 0x6e]
jae 0x403403
outsb dx, byte [rsi]
je 0x403406
xor qword [rcx], r14
jb 0x40340b
outsd dx, dword [rsi]
jb 0x4033fb
jae 0x40340e
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4033da
xor eax, 0x65676572
js 0x40340f
movsxd rbp, dword [rdi + 0x6e]
jae 0x403429
outsb dx, byte [rsi]
je 0x40342c
xor qword [rip + 0x6f727265], r14
jb 0x403421
jb 0x40342c
jo 0x40342e
je 0x403411
add byte [rdi + 0x5a], bl
push rbx
je 0x403404
xor eax, 0x65676572
js 0x403439
movsxd rbp, dword [rdi + 0x6e]
jae 0x403453
outsb dx, byte [rsi]
je 0x403456
xor qword [rsi], r14
jb 0x40345b
outsd dx, dword [rsi]
jb 0x40344b
movsxd rbp, dword [rdi + 0x6d]
jo 0x40345d
js 0x40345d
je 0x40346f
add byte [r15 + 0x5a], r11b
push rbx
je 0x40342f
xor eax, 0x65676572
js 0x403464
movsxd rbp, dword [rdi + 0x6e]
jae 0x40347e
outsb dx, byte [rsi]
je 0x403481
xor qword [rcx], r14
jb 0x403486
outsd dx, dword [rsi]
jb 0x403476
jae 0x40348d
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40345c
pop rdi
pop rdi
je 0x40348b
imul ebp, dword [rsp + rcx*2 + 0x31], 0x5f535f39
imul ebp, dword [rsi + 0x76], 0x64696c61
pop rdi
jae 0x4034b0
je 0x4034a4
pop rdi
imul esp, dword [rbp + rax*2], 0x31345a5f
pop rdi
pop rdi
jae 0x4034c0
je 0x4034b8
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x4034c6
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x4034dc
jb 0x4034df
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x4034f4
pop rdi
pop r15
pop rdi
pop rdx
jb 0x4034ed
jb 0x4034df
imul eax, dword [rax], 0x52465f5f
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x40353e
jns 0x40353e
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x40354f
jns 0x40354f
jae 0x403566
jb 0x403569
add byte [rdi + 0x44], bl
pop rcx
add byte [r8 + 0x75], sil
je 0x403566
push 0x755f7261
outsb dx, byte [rsi]
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x65]
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x69727000
outsb dx, byte [rsi]
je 0x403589
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x6c5f5f00
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x4035be
jb 0x4035c1
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x4035b3
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x4035d4
jae 0x403564
pop rdi
pop rdx
xor eax, 0x766c6f73
jbe 0x40356e
pop rdi
pop rdx
push rbx
je 0x4035ac
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
ja 0x40360a
imul esi, dword [rbp + 0x72], 0x5f006369
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x40361f
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x403624
pop rdi
je 0x40362c
js 0x403632
je 0x40360b
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x365a5f00
ja 0x40364f
imul esi, dword [rbp + 0x72], 0x5f006378
pop rdx
jb 0x40364e
jb 0x403640
push rbx
je 0x403629
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403668
movsxd rbx, dword [rdi + 0x73]
je 0x403676
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403671
je 0x403686
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
add byte [r15 + 0x5a], r11b
push rbx
je 0x403661
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
insd dword [rdi], dx
outsd dx, dword [rsi]
pop rdi
jo 0x4036c0
ja 0x4036cb
js 0x4036cd
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x4036c4
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x65], ah
je 0x4036d9
push 0x755f7261
outsb dx, byte [rsi]
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x65]
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4f495f00
pop rdi
jae 0x40370a
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x5a], bl
push rbx
je 0x4036d7
insd dword [rdi], dx
js 0x4036f1
push r10
push r12
pop rdi
push rbx
xor bl, byte [rdi + 0x53]
xor bl, byte [rdi]
pop rdi
pop rdx
ja 0x40372c
imul esi, dword [rbp + 0x72], 0x63634b50
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x40372f
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403744
pop rdi
jae 0x40375a
jb 0x40375d
add byte [rdi + 0x5a], bl
ja 0x403761
imul esi, dword [rbp + 0x72], 0x634b50
pop rdi
pop rdi
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
jae 0x403777
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
jb 0x40378a
jb 0x40377c
js 0x40372c
pop rdi
pop rdx
ja 0x4037a3
imul esi, dword [rbp + 0x72], 0x534e4b52
je 0x403772
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x4037b1
movsxd rbx, dword [rdi + 0x73]
je 0x4037bf
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4037ba
je 0x4037cf
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
movsxd r8, dword [r8]
pop rdi
pop rdi
jae 0x4037e5
pop rdi
jae 0x4037e9
jb 0x4037ec
add byte [rdi + 0x5f], bl
jae 0x4037f1
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
jb 0x4037ff
jb 0x4037ef
movsxd rax, dword [rax]
pop rdi
pop rdx
push r11
je 0x4037df
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x40381e
movsxd rbx, dword [rdi + 0x73]
je 0x40382c
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403827
je 0x40383c
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor al, 0x73
imul edi, dword [rdx + 0x65], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push r11
je 0x40382d
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x40386c
movsxd rbx, dword [rdi + 0x73]
je 0x40387a
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403875
je 0x40388a
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
imul edi, dword [rax + 0x45], 0x4740406d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x403877
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x4038b6
movsxd rbx, dword [rdi + 0x73]
je 0x4038c4
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4038bf
je 0x4038d4
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rax + 0x75], esi
jae 0x4038dc
pop rdi
movsxd rbp, dword [rbx + 0x45]
movsxd rax, dword [rax + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
jb 0x4038f6
jb 0x4038df
imul ebp, dword [rcx + 0x45], 0x5f545276
push rdx
push rsp
xor byte [rdi], bl
pop rdi
je 0x403909
add byte [rbp + 0x61], ch
imul ebp, dword [rsi], 0x79732e00
insd dword [rdi], dx
je 0x403916
add byte [rsi], ch
jae 0x40392e
jb 0x403930
add byte [rsi], ch
jae 0x40392a
jae 0x403938
jb 0x40393a
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x40393b
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x403949
outsb dx, byte cs:[esi]
jne 0x403917
jne 0x403955
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x403925
push 0x687361
jns 0x40396e
jae 0x40397b
insd dword [rdi], dx
add byte [rsi], ch
jns 0x403976
jae 0x40397e
jb 0x40390c
outsb dx, byte cs:[esi]
jne 0x40393f
jbe 0x403978
jb 0x403988
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x40394c
jbe 0x403985
jb 0x403995
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x403990
insb byte [rdi], dx
jns 0x40399f
add byte [rsi], ch
jb 0x40399a
insb byte [rdi], dx
jo 0x4039a6
je 0x40393c
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x403975
outsd dx, dword [esi]
je 0x40394b
je 0x4039b3
js 0x4039c4
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x4039c9
je 0x4039bf
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4039e2
jns 0x403983
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x4039fe
jns 0x40398f
push 0x63
jb 0x403994
jns 0x403a06
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x403a10
je 0x4039a6
je 0x403a0c
add byte [rsi], ch
jae 0x403a23
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x4039ba
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 1], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + 4], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x403b66
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 6], cl
add byte [rax], al
add byte [rax], al
add byte [rax + 6], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
test al, 6
add byte [rax], al
add byte [rax], al
add byte [rax + 6], ch
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x18000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add byte [rax], al
add byte [rax], al
add al, cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
add byte [rax], al
add byte [rax], al
add al, dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4008], dh
add byte [rax], al
add byte [rax + 8], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1000000], bl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
or byte [rax], al
add byte [rax], al
add byte [rax], al
ror byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rdx + 9], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rdx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rdx + rdx], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x12], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0x12], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
ret
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rdx], dh
add byte [rax], al
add byte [rax], al
add byte [rbx + rdx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
lodsb al, byte [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
loopne 0x403e6d
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loope 0x403f02
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 0, al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x403f63
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, eax
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
jo 0x403fe2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc byte [rax]
add byte [rax], al
or byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
cmp byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, 0x20
add byte [rax], al
add al, al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x404187
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword ss:[rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
