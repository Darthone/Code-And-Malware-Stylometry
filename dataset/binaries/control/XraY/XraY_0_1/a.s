xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6020af
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400b50
mov eax, 0
test rax, rax
je 0x400b50
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400b98
mov eax, 0
test rax, rax
je 0x400b98
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x201519], 0
jne 0x400bba
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x201506], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400bd0
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400bcb
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
sub rsp, 0x10
mov dword [rbp - 4], edi
mov edi, obj.mrand
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::operator__
mov rdx, rax
mov eax, dword [rbp - 4]
movsxd rcx, eax
mov rax, rdx
mov edx, 0
div rcx
mov rax, rdx
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov dword [rbp - 0xc], esi
mov rax, qword [rbp - 8]
mov edx, dword [rax]
mov eax, dword [rbp - 0xc]
add edx, eax
mov rax, qword [rbp - 8]
mov dword [rax], edx
mov rax, qword [rbp - 8]
mov eax, dword [rax]
cmp eax, 0x3b9aca06
setg al
test al, al
je 0x400c57
mov rax, qword [rbp - 8]
mov eax, dword [rax]
mov edx, 0x3b9aca07
sub eax, edx
mov edx, eax
mov rax, qword [rbp - 8]
mov dword [rax], edx
nop
pop rbp
ret
push rbp
mov rbp, rsp
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
mov eax, dword [rbp - 4]
movsxd rdx, eax
mov eax, dword [rbp - 8]
cdqe
mov rcx, rdx
imul rcx, rax
movabs rdx, 0x89705f3112a28fe5
mov rax, rcx
imul rdx
lea rax, [rdx + rcx]
sar rax, 0x1d
mov rdx, rax
mov rax, rcx
sar rax, 0x3f
sub rdx, rax
mov rax, rdx
imul rax, rax, 0x3b9aca07
sub rcx, rax
mov rax, rcx
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x18
mov dword [rbp - 0x14], edi
mov dword [rbp - 0x18], esi
mov dword [rbp - 4], 1
cmp dword [rbp - 0x18], 0
je 0x400cfb
mov eax, dword [rbp - 0x18]
and eax, 1
test eax, eax
je 0x400ce4
mov edx, dword [rbp - 0x14]
mov eax, dword [rbp - 4]
mov esi, edx
mov edi, eax
call sym.mult
mov dword [rbp - 4], eax
mov edx, dword [rbp - 0x14]
mov eax, dword [rbp - 0x14]
mov esi, edx
mov edi, eax
call sym.mult
mov dword [rbp - 0x14], eax
sar dword [rbp - 0x18], 1
jmp 0x400cc2
mov eax, dword [rbp - 4]
leave
ret
push rbp
mov rbp, rsp
nop
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov edx, obj.n
mov esi, obj.len
mov edi, str._d_d
mov eax, 0
call sym.imp.scanf
cmp eax, 1
setle al
test al, al
je 0x400d39
mov eax, 0
jmp 0x400d87
mov dword [rbp - 4], 0
mov eax, dword [rip + 0x202726]
cmp dword [rbp - 4], eax
jge 0x400d82
mov eax, dword [rbp - 4]
cdqe
shl rax, 2
lea rdx, [rax + obj.ss]
mov eax, dword [rbp - 4]
cdqe
shl rax, 2
add rax, obj.xs
mov rsi, rax
mov edi, str._d_d
mov eax, 0
call sym.imp.scanf
add dword [rbp - 4], 1
jmp 0x400d40
mov eax, 1
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x50
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
fld xword [rip + 0x86a]
fstp xword [rbp - 0x30]
mov dword [rbp - 0x34], 0
mov eax, dword [rip + 0x2026b6]
cmp dword [rbp - 0x34], eax
jge 0x400e1a
mov eax, dword [rip + 0x2026a7]
mov dword [rbp - 0x4c], eax
fild dword [rbp - 0x4c]
mov edx, dword [rip + 0x20269b]
mov eax, dword [rbp - 0x34]
cdqe
mov eax, dword [rax*4 + obj.xs]
sub edx, eax
mov eax, edx
mov dword [rbp - 0x4c], eax
fild dword [rbp - 0x4c]
fdivp st(1)
mov eax, dword [rbp - 0x34]
cdqe
mov eax, dword [rax*4 + obj.ss]
mov dword [rbp - 0x4c], eax
fild dword [rbp - 0x4c]
fmulp st(1)
fstp xword [rbp - 0x20]
lea rdx, [rbp - 0x20]
lea rax, [rbp - 0x30]
mov rsi, rdx
mov rdi, rax
call sym.std::min_longdouble_
fld xword [rax]
fstp xword [rbp - 0x30]
add dword [rbp - 0x34], 1
jmp 0x400db0
fld xword [rbp - 0x30]
fstp qword [rbp - 0x48]
movsd xmm0, qword [rbp - 0x48]
mov edi, str._.18f_n
mov eax, 1
call sym.imp.printf
nop
mov rax, qword [rbp - 8]
xor rax, qword fs:[0x28]
je 0x400e49
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
call sym.precalc
lea rax, [rbp - 0xc]
mov rsi, rax
mov edi, 0x4015f4
mov eax, 0
call sym.imp.scanf
mov dword [rbp - 0xc], 0
call sym.read
test eax, eax
sete al
test al, al
jne 0x400eb6
mov eax, dword [rbp - 0xc]
add eax, 1
mov dword [rbp - 0xc], eax
mov eax, dword [rbp - 0xc]
mov esi, eax
mov edi, str.Case___d:
mov eax, 0
call sym.imp.printf
call sym.solve
jmp 0x400e84
nop
mov eax, 0
mov rdx, qword [rbp - 8]
xor rdx, qword fs:[0x28]
je 0x400ed0
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x13d8
mov dword [rbp - 0x13d4], edi
mov dword [rbp - 0x13d8], esi
mov rax, qword fs:[0x28]
mov qword [rbp - 0x18], rax
xor eax, eax
cmp dword [rbp - 0x13d4], 1
jne 0x401009
cmp dword [rbp - 0x13d8], 0xffff
jne 0x401009
mov edi, obj.std::__ioinit
call sym.std::ios_base::Init::Init
mov edx, obj.__dso_handle
mov esi, obj.std::__ioinit
mov edi, sym.std::ios_base::Init::_Init
call sym.imp.__cxa_atexit
lea rax, [rbp - 0x13c1]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rdx, [rbp - 0x13c1]
lea rax, [rbp - 0x13c0]
mov esi, str.default
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rdx, [rbp - 0x13c0]
lea rax, [rbp - 0x13a0]
mov rsi, rdx
mov rdi, rax
call sym.std::random_device::random_device
lea rax, [rbp - 0x13a0]
mov rdi, rax
call sym.std::random_device::operator__
mov eax, eax
mov rsi, rax
mov edi, obj.mrand
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::mersenne_twister_engine
lea rax, [rbp - 0x13a0]
mov rdi, rax
call sym.std::random_device::_random_device
lea rax, [rbp - 0x13c0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
lea rax, [rbp - 0x13c1]
mov rdi, rax
call sym.std::allocator_char_::_allocator
jmp 0x401009
mov rbx, rax
lea rax, [rbp - 0x13a0]
mov rdi, rax
call sym.std::random_device::_random_device
jmp 0x400fdb
mov rbx, rax
lea rax, [rbp - 0x13c0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
jmp 0x400fef
mov rbx, rax
lea rax, [rbp - 0x13c1]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
mov rax, qword [rbp - 0x18]
xor rax, qword fs:[0x28]
je 0x40101d
call sym.imp.__stack_chk_fail
add rsp, 0x13d8
pop rbx
pop rbp
ret
push rbp
mov rbp, rsp
mov esi, 0xffff
mov edi, 1
call sym.__static_initialization_and_destruction_0
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call sym.std::random_device::_M_init
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::random_device::_M_fini
nop
leave
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::random_device::_M_getval
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::seed
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov rax, qword [rbp - 0x18]
mov rax, qword [rax + 0x1380]
cmp rax, 0x26f
jbe 0x4010e9
mov rax, qword [rbp - 0x18]
mov rdi, rax
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::_M_gen_rand
mov rax, qword [rbp - 0x18]
mov rax, qword [rax + 0x1380]
lea rcx, [rax + 1]
mov rdx, qword [rbp - 0x18]
mov qword [rdx + 0x1380], rcx
mov rdx, qword [rbp - 0x18]
mov rax, qword [rdx + rax*8]
mov qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shr rax, 0xb
mov eax, eax
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shl rax, 7
and eax, 0x9d2c5680
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shl rax, 0xf
and eax, 0xefc60000
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shr rax, 0x12
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rax, qword [rbp - 0x10]
fld xword [rax]
mov rax, qword [rbp - 8]
fld xword [rax]
fucomip st(1)
fstp st(0)
jbe 0x401175
mov rax, qword [rbp - 0x10]
jmp 0x401179
mov rax, qword [rbp - 8]
pop rbp
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov rax, qword [rbp - 0x20]
mov rdi, rax
call sym.std::__detail::__mod_unsignedlong_4294967296ul_1ul_0ul_
mov rdx, rax
mov rax, qword [rbp - 0x18]
mov qword [rax], rdx
mov qword [rbp - 0x10], 1
cmp qword [rbp - 0x10], 0x26f
ja 0x401215
mov rax, qword [rbp - 0x10]
lea rdx, [rax - 1]
mov rax, qword [rbp - 0x18]
mov rax, qword [rax + rdx*8]
mov qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shr rax, 0x1e
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
imul rax, rax, 0x6c078965
mov qword [rbp - 8], rax
mov rax, qword [rbp - 0x10]
mov rdi, rax
call sym.std::__detail::__mod_unsignedlong_624ul_1ul_0ul_
add qword [rbp - 8], rax
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::__detail::__mod_unsignedlong_4294967296ul_1ul_0ul_
mov rcx, rax
mov rax, qword [rbp - 0x18]
mov rdx, qword [rbp - 0x10]
mov qword [rax + rdx*8], rcx
add qword [rbp - 0x10], 1
jmp 0x4011aa
mov rax, qword [rbp - 0x18]
mov qword [rax + 0x1380], 0x270
nop
leave
ret
nop
push rbp
mov rbp, rsp
mov qword [rbp - 0x48], rdi
mov qword [rbp - 0x28], -0x80000000
mov qword [rbp - 0x20], 0x7fffffff
mov qword [rbp - 0x38], 0
cmp qword [rbp - 0x38], 0xe2
ja 0x4012d8
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x38]
mov rax, qword [rax + rdx*8]
and rax, 0xffffffff80000000
mov rcx, rax
mov rax, qword [rbp - 0x38]
lea rdx, [rax + 1]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
and eax, 0x7fffffff
or rax, rcx
mov qword [rbp - 0x18], rax
mov rax, qword [rbp - 0x38]
lea rdx, [rax + 0x18d]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
mov rdx, qword [rbp - 0x18]
shr rdx, 1
xor rdx, rax
mov rax, qword [rbp - 0x18]
and eax, 1
test rax, rax
je 0x4012b7
mov eax, 0x9908b0df
jmp 0x4012bc
mov eax, 0
mov rcx, rdx
xor rcx, rax
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x38]
mov qword [rax + rdx*8], rcx
add qword [rbp - 0x38], 1
jmp 0x401248
mov qword [rbp - 0x30], 0xe3
cmp qword [rbp - 0x30], 0x26e
ja 0x401370
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x30]
mov rax, qword [rax + rdx*8]
and rax, 0xffffffff80000000
mov rcx, rax
mov rax, qword [rbp - 0x30]
lea rdx, [rax + 1]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
and eax, 0x7fffffff
or rax, rcx
mov qword [rbp - 0x10], rax
mov rax, qword [rbp - 0x30]
lea rdx, [rax - 0xe3]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
mov rdx, qword [rbp - 0x10]
shr rdx, 1
xor rdx, rax
mov rax, qword [rbp - 0x10]
and eax, 1
test rax, rax
je 0x40134f
mov eax, 0x9908b0df
jmp 0x401354
mov eax, 0
mov rcx, rdx
xor rcx, rax
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x30]
mov qword [rax + rdx*8], rcx
add qword [rbp - 0x30], 1
jmp 0x4012e0
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + 0x1378]
and rax, 0xffffffff80000000
mov rdx, rax
mov rax, qword [rbp - 0x48]
mov rax, qword [rax]
and eax, 0x7fffffff
or rax, rdx
mov qword [rbp - 8], rax
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + 0xc60]
mov rdx, qword [rbp - 8]
shr rdx, 1
xor rdx, rax
mov rax, qword [rbp - 8]
and eax, 1
test rax, rax
je 0x4013bf
mov eax, 0x9908b0df
jmp 0x4013c4
mov eax, 0
xor rdx, rax
mov rax, qword [rbp - 0x48]
mov qword [rax + 0x1378], rdx
mov rax, qword [rbp - 0x48]
mov qword [rax + 0x1380], 0
nop
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::__detail::_Mod_unsignedlong_4294967296ul_1ul_0ul_true_true_::__calc
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::__detail::_Mod_unsignedlong_624ul_1ul_0ul_true_true_::__calc
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 0x18], rdi
mov rax, qword [rbp - 0x18]
mov qword [rbp - 8], rax
mov eax, 0xffffffff
and qword [rbp - 8], rax
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 0x18], rdi
mov rax, qword [rbp - 0x18]
mov qword [rbp - 8], rax
mov rcx, qword [rbp - 8]
mov rax, rcx
shr rax, 4
movabs rdx, 0xd20d20d20d20d21
mul rdx
mov rax, rdx
shr rax, 1
imul rax, rax, 0x270
sub rcx, rax
mov rax, rcx
mov qword [rbp - 8], rax
mov rax, qword [rbp - 8]
pop rbp
ret
nop dword [rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200956]
push rbp
lea rbp, [rip + 0x20095e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x4014d6
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x4014c0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, 0
add byte [rax], al
add eax, 0x6000000
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], cl
or byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
or al, byte [rax]
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rax + 0x3c3360]
and byte [rax + 0x33], 0x3c
add byte [rax], al
add byte [rax], al
add byte [rax + 0x5f4136b4], ch
pop r15
jo 0x401551
loope 0x401609
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor eax, 0xa22168c2
fimul dword [rdi]
leave
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], al
retf 0x3b9a
add eax, dword [rax]
add byte [rip + 0x642564], ah
and eax, 0x642564
and eax, 0x6638312e
or al, byte [rax]
and eax, 0x61430064
jae 0x401660
and byte [rbx], ah
and eax, 0x203a64
jne 0x401674
je 0x40160a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x67], dl
add al, 0xcd
leave
leave
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rbx], ebx
add edi, dword [rbx]
fadd qword [rax]
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
mov al, 0xf3
ljmp [rax]
add dword [rax], eax
add al, dl
hlt
clc
add byte [rax], al
add dh, al
cmc
fadd dword [rcx]
add byte [rax], al
hlt
cmc
clc
add dword [rax], eax
add byte [rdx], bh
idiv bh
lcall [rax]
add al, byte [rax]
add byte [rbp + 0x38fffff6], cl
add al, byte [rax]
add al, ah
idiv bh
lcall [rax + 2]
add byte [rax], al
out 0xf6, eax
js 0x40166c
add byte [rax], al
imul esi, edi, 0x298ffff
add byte [rax], al
sub edi, eax
mov eax, 0xb2000002
clc
clc
add eax, dword [rax]
add byte [rdi], al
cli
jmp qword [rax]
add al, 0
add byte [rdx + rdi*8], bl
call qword [rax + 1]
add byte [rax], al
cli
call qword [rax + 0x5e000001]
cli
mov eax, 0x78000001
cli
fadd dword [rdx]
add byte [rax], al
sahf
cli
clc
add al, byte [rax]
add byte [rcx], dh
sti
lcall [rax]
add eax, dword [rax]
add byte [rbx + rdi*8 - 1], bl
cmp byte [rbx], al
add byte [rax], al
or ah, bh
lcall [rax + 3]
add byte [rax], al
std
js 0x4016d5
add byte [rax], al
fdivp st(5)
lcall [rax - 0x7fffffd]
std
mov eax, 0x17000003
fadd dword [rbx]
add byte [rax], al
inc dword [rax + 4]
add byte [rax], al
sar dh, 1
dec dword [rax + 4]
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40171f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sal bl, 1
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40174f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
xor dl, 0xff
call qword [rax]
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], r8b
add ah, al
clc
jmp qword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x4017b1
add eax, eax
or al, byte [rax]
add ebx, dword [rbx]
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
stosb byte [rdi], al
clc
lcall [rbx]
add byte [rax], al
add byte [rsp + rax*8], al
sbb al, byte [rax]
adc byte [rsi + 0x60d4302], al
push rsi
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
lodsb al, byte [rsi]
add byte [rax], al
add byte [rsi + 0x1afffff8], bl
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rbp
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
int3
add byte [rax], al
add dh, ah
ljmp [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
imul ecx, dword [rdi + rax], 8
sbb al, 0
add byte [rax], al
in al, dx
add byte [rax], al
add ah, dh
inc dword [rsi]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add al, byte [rcx + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
or al, 1
add byte [rax], al
sbb dh, ah
call qword [rbx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add cl, byte [rsi + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sub al, 1
add byte [rax], al
hlt
call qword [rbx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add cl, byte [rsi + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add qword [rax], r8
add byte [rax + 0x7fffff4], al
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
insb byte [rdi], dx
add dword [rax], eax
add byte [rdi - 0xc], ah
inc dword [rdx]
adc byte [rsi + 0x60d4302], al
add bh, byte [rbp + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
mov word [rcx], es
add byte [rax], al
leave
hlt
inc edx
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add bh, byte [rbp + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
lodsb al, byte [rsi]
add dword [rax], eax
add byte [rbx - 0xb], ch
inc dword [rdi]
adc byte [rsi + 0x60d4302], al
add al, byte [rdx + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
int3
add dword [rax], eax
add byte [rax + 0x26fffff7], bl
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
in al, dx
add dword [rax], eax
add byte [rsi - 0x6c000009], bl
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add cl, byte [rsi + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
or al, 2
add byte [rax], al
adc eax, edi
ljmp [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
sub al, 2
add byte [rax], al
sbb al, 0xf8
ljmp [rbx]
adc byte [rsi + 0x60d4302], al
add ah, byte [rsi + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
add r8b, byte [rax]
add byte [rax - 0x43000008], ch
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add esi, dword [rdi + 0x8070c01]
add byte [rax + rax], bl
add byte [rax], al
insb byte [rdi], dx
add al, byte [rax]
add byte [rdx + rdi*8 - 1], al
lcall [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rbp
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
mov word [rdx], es
add byte [rax], al
cli
lcall [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rbp
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
lodsb al, byte [rsi]
add al, byte [rax]
add byte [rax], bh
cli
lcall [rdi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
pop rdx
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
int3
add al, byte [rax]
add byte [rdi], dh
cli
inc dword [rbp]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add al, byte [rax + 0xc]
or byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
mov word [rdx], es
add byte [rax], al
mov dl, 0xf4
call qword [rbp + 1]
add byte [rax], al
add al, 0xc8
sbb al, byte [rax]
adc byte [rsi + 0x60d4302], al
add qword [rbx], 3
add qword [rdi + rax], rcx
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
adc al, 3
add byte [rax], al
fcomip st(5)
call qword [rip]
adc byte [rsi + 0x60d4302], al
push rax
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rbx + rax], dh
add byte [rax], al
sbb dl, bh
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x401aa2
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
jl 0x401ab1
add byte [rax], al
cli
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
add bh, bh
inc dword [rcx]
sbb ecx, dword [rcx + 5]
add byte [rax], al
xchg dword [rcx], eax
add eax, 0xa000029a
add dword [rip - 0x50fffd7a], eax
add dword [rdx + rsi*8], edx
add dword [rax], eax
mov dl, 2
add eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0x400b]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, dl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
test al, 9
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add ah, dh
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sbb eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 0x4004], bh
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov es, word [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], 0
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rsi + 7], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, ah
or dword [rax], eax
add byte [rax], al
add byte [rax], al
test byte [rcx], 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte es:[rax]
add byte [rax], al
add byte [rax], al
or al, byte ss:[rax]
add byte [rax], al
add byte [rax], al
or r8b, byte [rax]
add byte [rax], al
add byte [rax], al
push rsi
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
jbe 0x40206c
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400a], al
add byte [rax], al
add byte [rsi + 0x400a], dl
add byte [rax], al
add byte [rsi + 0x400a], ah
add byte [rax], al
add byte [rsi + 0x400a], dh
add byte [rax], al
add dh, al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402120
je 0x402129
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x402137
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x402134
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 0x4004], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rsi + 7], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax], dl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, byte [rax]
sub byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add byte [rax + 0x4009], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
ror byte [rcx], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400ae000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add al, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add ah, dh
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax], al
adc eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc dword [rax], eax
and byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], dl
add ah, al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
call 0x4082ea
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
cwde
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb eax, dword [rax]
shl byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xb], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400b], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rbx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add al, al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg byte [rax], al
add byte [rax], al
add dword [rax], eax
adc al, 0
call 0x408482
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], ch
add byte [rax], dl
add byte [rax], dl
adc eax, 0x40
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rcx], dl
adc eax, 0x40
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
fiadd word [rax]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc dl, byte [rip + 0x40]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
jmp 0x4024d2
add byte [rax], al
add dword [rax], eax
sbb eax, dword [rax]
sub byte [rax], dl
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
cli
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x40], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
and dword [rcx], eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb byte [rip + 0x40], dl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor eax, dword [rcx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb dword [rip + 0x40], edx
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], r8d
add byte [rcx], al
add byte [rax], dl
add byte [rdx], bl
adc eax, 0x40
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rax
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x40], bl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
ja 0x402563
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
and byte [rip + 0x40], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edi
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x40], ah
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ecx, 0x1000001
add byte [rax], dl
add byte [rax], ch
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
fiadd dword [rcx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sub al, 0x15
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
xor byte [rip + 0x40], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x40], dh
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax], bh
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rbp
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x40], bh
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jnp 0x402624
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rbp + rdx + 0x40], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ret 2
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x15], cl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rbp + rdx + 0x40], cl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
push rax
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp al, byte [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
push rsp
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x15], bl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rbx], eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
pop rsp
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x15], ah
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fld dword [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 4
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
push 0x4015
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub eax, 0x1000004
add byte [rax], dl
add byte [rbp + rdx + 0x40], ch
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x15], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jnp 0x40275e
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
je 0x402777
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsd dword [rsi], dword ptr [rdi]
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x15], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
iretd
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rbp + rdx + 0x40], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4015], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
test byte [rip + 0x40], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
mov byte [rip + 0x40], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
push 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov word [rip + 0x40], ss
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
add eax, 0x10000
adc byte [rax], al
nop
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dh, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
xchg eax, esp
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild word [rip + 0x10000]
adc byte [rax], al
cwde
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x1000006
add byte [rax], dl
add byte [rbp + rdx + 0x40], bl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub eax, dword [rsi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
movabs al, byte [0x400000000004015]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 6], dl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
movsb byte [rdi], byte ptr [rsi]
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], 0
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4015], ch
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsb byte [rsi], byte ptr [rdi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov al, 0x15
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, cl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov eax, 0x4015
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
rcl byte [rip + 0x40], 0
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
rcl byte [rip + 0x40], 1
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jrcxz 0x402910
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
loopne 0x402927
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jmp 0x402928
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
in al, 0x15
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
hlt
add byte [rax], al
add al, byte [rax]
add dl, dl
add byte [rax], al
add byte [rax], al
add byte [rbp + 1], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, 7
add byte [rax], al
add al, byte [rax]
add byte [rdi], ah
adc byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bh
add byte [rax], al
add dword [rax], eax
adc al, byte [rax]
rcr byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 7], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 7], dl
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
and byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], ah
add byte [rax], al
add dword [rax], eax
sbb dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rax], bh
add byte [rax], al
add byte [rax + rax], dl
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea eax, [rdi]
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x408a3a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000007], ah
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x2000000a], dl
add byte [rdx], bl
add byte [rax + 0x6020], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x12000007], ch
add byte [rsi], cl
add byte [rbp + 0x400c], ch
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ah, 7
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 7, 0
adc al, byte [rax]
add byte [rax], al
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
push 0x6034
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd dword [rdi]
add byte [rax], al
adc al, byte [rax]
add al, dh
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1200000a], dl
add byte [rsi], cl
add al, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x22402af4
add byte [rsi], cl
add byte [rax + rdx], bh
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or byte [rax], al
add byte [rdx], ah
add byte [rsi], cl
add byte [rcx + rdx + 0x40], bh
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
add cl, cl
or byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
or byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ch
or byte [rax], al
add byte [rdx], dl
add byte [rsi], cl
add byte [rcx + 0x400d], cl
add byte [rax], al
add dl, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, dh
or byte [rax], al
add byte [rdx], dl
add byte [rsi], cl
add dh, ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
add dl, ah
add byte [rax], al
adc al, byte [rax]
add ah, dh
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 9], ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg dword [rcx], ecx
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsb byte [rsi], byte ptr [rdi]
or dword [rax], eax
add byte [rcx], dl
add byte [rbx], bl
add byte [rax + 0x44], ah
add byte [rax], al
add byte [rax], al
add al, cl
sldt word [rax]
add byte [rax], al
add byte [rax], al
test eax, 0x12000009
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, al
or dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add byte [rdx + 0x10], ah
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bl
or dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add byte [rdi], dh
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rbp], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc cl, byte [rdx]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
xor byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dh
or al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dh
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
loopne 0x402c92
add byte [rax], al
add byte [rax], al
add byte [rax + 0x13], cl
add byte [rax], al
add byte [rbx + 0xa], dl
add byte [rax], al
adc dword [rax], eax
adc byte [rax], al
add byte [rip + 0x40], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0xa], dh
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], dl
add byte [rdx], bl
add byte [rax + 0x6020], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rcx + 0x120000], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 0xa, al
add byte [rax], al
adc al, byte [rax]
add byte [rdi], al
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ch
or al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rsp + rcx], dl
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
stc
or al, byte [rax]
add byte [rcx], dl
add bl, byte [rdx]
add byte [rax + 0x6020], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1100000b], al
add bl, byte [rdx]
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], dl
or eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x4014], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and cl, byte [rbx]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
or eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add ah, ah
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg byte [rbx], cl
add byte [rax], al
adc al, byte [rax]
add byte [rdx + 0xc], bl
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
or eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rdx + 0x10], ah
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x2200000b], ch
add byte [rsi], cl
add byte [rsi + 0x4010], bh
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rcx], bh
or al, 0
add byte [rdx], ah
add byte [rsi], cl
add byte [rax], bl
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dh
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
test al, 0x20
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x1200000c], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1200000c], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x2200000c], bh
add byte [rsi], cl
add byte [rsi + 0x10], bh
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dl
or al, 0
add byte [rcx], dl
add byte [rbx], bl
add byte [rax + 0x6034], al
add byte [rax], al
add al, cl
sldt word [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
insb byte [rdi], dx
xor al, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0
add byte [rdx], ah
add byte [rsi], cl
add byte [rcx + 0x11], dl
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, ch
or al, 0
add byte [rdx], ah
add byte [rsi], cl
add dh, bh
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rdi], al
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
xor byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, 0x220000
add byte [rax + 0x4010], bl
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, dl
or eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
test al, 0x20
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x2200000e], ch
add byte [rsi], cl
add byte [rax + 0x4010], bl
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1200000e], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, dl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
ror byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rdi], cl
add byte [rax], al
and al, byte [rax]
add byte [rax], ch
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
mov esp, 1
add byte [rax], al
add byte [rbx + 0x2200000f], ch
add byte [rsi], cl
add byte [rax + rdx], bh
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, bh
sldt word [rax]
adc al, byte [rax]
add byte [rbx + 0xe], cl
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rbx + rcx], bl
add byte [rax], al
adc al, byte [rax]
or eax, dword [rax]
test al, 9
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x403072
jne 0x403066
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x403026
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4030a4
jb 0x4030aa
pop rdi
jne 0x4030b3
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x4030ad
je 0x4030a9
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4030c9
jb 0x4030cf
pop rdi
jne 0x4030d8
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x4030db
jns 0x4030cb
outsb dx, byte gs:[rsi]
je 0x4030e2
jns 0x403072
jb 0x4030d6
insd dword [rdi], dx
pop rdi
jne 0x4030e8
insd dword [rdi], dx
jns 0x40307e
pop rdi
pop rdi
jb 0x4030e4
insd dword [rdi], dx
pop rdi
jne 0x4030f6
insd dword [rdi], dx
jns 0x4030eb
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4030f6
jns 0x4030f6
outsb dx, byte gs:[rsi]
je 0x40310d
jns 0x40309d
insd dword [rdi], dx
imul ebp, dword [rsi + 0x2e], 0x707063
pop rdi
pop rdx
push rbx
je 0x4030f7
xor dword [rcx], edi
jo 0x403118
movsxd rsp, dword gs:[rbp + 0x77]
imul esi, dword [rbx + 0x65], 0x6e6f635f
jae 0x403130
jb 0x403133
movsxd rsi, dword [rax + rax + 0x5f]
pop rdx
push rbx
je 0x403112
xor dword [rbx], esi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x403131
jb 0x40313c
add byte [rdi + 0x5a], bl
push rbx
je 0x403127
imul esp, dword ss:[rdi + 0x6e], 0x65726f
pop rdi
pop rdx
push rbx
je 0x403134
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x40315b
movsxd rdi, dword [rax + 0x78]
xor r14b, byte [rcx]
pop rdi
pop rdi
jne 0x403176
je 0x40316b
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x5f]
jo 0x403182
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x5a5f0045
push rbx
je 0x40316a
xor dword [rax], esi
jb 0x403185
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x40317c
xor dword [rcx], esi
je 0x4031a6
jns 0x403195
je 0x4031a7
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x40318f
xor dword [rax], esi
outsd dx, dword fs:[rsi]
jo 0x4031be
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x403187
xor eax, 0x65676572
js 0x4031bc
movsxd rbp, dword [rdi + 0x6e]
jae 0x4031d6
outsb dx, byte [rsi]
je 0x4031d9
xor rax, 0x73616369
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x4031a6
xor eax, 0x65676572
js 0x4031db
movsxd rbp, dword [rdi + 0x6e]
jae 0x4031f5
outsb dx, byte [rsi]
je 0x4031f8
outsb dx, byte ss:[rsi]
outsd dx, dword [rsi]
jae 0x403200
jae 0x4031d3
add byte [rdi + 0x5a], bl
push rbx
je 0x4031c6
xor eax, 0x65676572
js 0x4031fb
movsxd rbp, dword [rdi + 0x6e]
jae 0x403215
outsb dx, byte [rsi]
je 0x403218
cmp byte [rdi + 0x70], r13b
je 0x403214
insd dword [rdi], dx
imul edi, dword [rdx + 0x65], 0x5a5f0045
push rbx
je 0x4031e8
xor eax, 0x65676572
js 0x40321d
movsxd rbp, dword [rdi + 0x6e]
jae 0x403237
outsb dx, byte [rsi]
je 0x40323a
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x403235
add byte [r15 + 0x5a], r11b
push rbx
je 0x403209
xor eax, 0x65676572
js 0x40323e
movsxd rbp, dword [rdi + 0x6e]
jae 0x403258
outsb dx, byte [rsi]
je 0x40325b
xor qword [rax], r14
push r11
movsxd rsi, dword [rdx + 0x69]
jo 0x403269
add byte [r15 + 0x5a], r11b
push rbx
je 0x40322e
xor eax, 0x65676572
js 0x403263
movsxd rbp, dword [rdi + 0x6e]
jae 0x40327d
outsb dx, byte [rsi]
je 0x403280
xor rax, 0x69736162
movsxd rax, dword [rbp]
pop rdi
pop rdx
push rbx
je 0x40324d
xor eax, 0x65676572
js 0x403282
movsxd rbp, dword [rdi + 0x6e]
jae 0x40329c
outsb dx, byte [rsi]
je 0x40329f
cmp byte [rbp + 0x78], r12b
je 0x403297
outsb dx, byte [rsi]
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x40326f
xor eax, 0x65676572
js 0x4032a4
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032be
outsb dx, byte [rsi]
je 0x4032c1
xor r12, qword [rcx + 0x77]
imul eax, dword [rbp], 0x5f
pop rdx
push rbx
je 0x40328c
xor eax, 0x65676572
js 0x4032c1
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032db
outsb dx, byte [rsi]
je 0x4032de
xor al, 0x67
jb 0x4032d5
jo 0x4032b7
add byte [rdi + 0x5a], bl
push rbx
je 0x4032aa
xor eax, 0x65676572
js 0x4032df
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032f9
outsb dx, byte [rsi]
je 0x4032fc
xor rax, 0x65726765
jo 0x4032d6
add byte [rdi + 0x5a], bl
push rbx
je 0x4032c9
xor eax, 0x65676572
js 0x4032fe
movsxd rbp, dword [rdi + 0x6e]
jae 0x403318
outsb dx, byte [rsi]
je 0x40331b
xor qword [rbx], r14
insd dword [rdi], dx
je 0x403312
push 0x6665645f
jne 0x403323
je 0x4032fe
add byte [rdi + 0x5a], bl
push rbx
je 0x4032f1
xor eax, 0x65676572
js 0x403326
movsxd rbp, dword [rdi + 0x6e]
jae 0x403340
outsb dx, byte [rsi]
je 0x403343
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40333a
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x403319
xor eax, 0x65676572
js 0x40334e
movsxd rbp, dword [rdi + 0x6e]
jae 0x403368
outsb dx, byte [rsi]
je 0x40336b
xor qword [rbx], r14
insd dword [rdi], dx
je 0x403362
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x403341
xor eax, 0x65676572
js 0x403376
movsxd rbp, dword [rdi + 0x6e]
jae 0x403390
outsb dx, byte [rsi]
je 0x403393
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40338a
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
ja 0x403376
add byte [rdi + 0x5a], bl
push rbx
je 0x403369
xor eax, 0x65676572
js 0x40339e
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033b8
outsb dx, byte [rsi]
je 0x4033bb
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4033b2
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
ja 0x40339e
add byte [rdi + 0x5a], bl
push rbx
je 0x403391
xor eax, 0x65676572
js 0x4033c6
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033e0
outsb dx, byte [rsi]
je 0x4033e3
cmp qword [rbp + 0x61], r13
je 0x4033d9
push 0x796e615f
add byte [r15 + 0x5a], r11b
push rbx
je 0x4033b4
xor eax, 0x65676572
js 0x4033e9
movsxd rbp, dword [rdi + 0x6e]
jae 0x403403
outsb dx, byte [rsi]
je 0x403406
xor qword [rbp*2 + 0x68637461], r14
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
je 0x4033ff
outsb dx, byte [rsi]
jne 0x40340f
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x4033dd
xor eax, 0x65676572
js 0x403412
movsxd rbp, dword [rdi + 0x6e]
jae 0x40342c
outsb dx, byte [rsi]
je 0x40342f
xor qword [rsi], r14
insd dword [rdi], dx
je 0x403426
push 0x6e6f635f
je 0x403433
outsb dx, byte [rsi]
jne 0x40343c
jne 0x403442
add byte [r15 + 0x5a], r11b
push rbx
je 0x403408
xor eax, 0x65676572
js 0x40343d
movsxd rbp, dword [rdi + 0x6e]
jae 0x403457
outsb dx, byte [rsi]
je 0x40345a
xor qword [rsi], r14
insd dword [rdi], dx
je 0x403451
push 0x6572705f
jbe 0x403454
jbe 0x403459
imul ebp, dword [rbp + rax*2], 0x534e5a5f
je 0x403433
xor eax, 0x65676572
js 0x403468
movsxd rbp, dword [rdi + 0x6e]
jae 0x403482
outsb dx, byte [rsi]
je 0x403485
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x403486
je 0x40347b
jne 0x40348e
je 0x403469
add byte [rdi + 0x5a], bl
push rbx
je 0x40345c
xor eax, 0x65676572
js 0x403491
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034ab
outsb dx, byte [rsi]
je 0x4034ae
xor qword [rax], r14
outsw dx, word [rsi]
jb 0x4034af
je 0x4034a4
jae 0x4034ac
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x403481
xor eax, 0x65676572
js 0x4034b6
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034d0
outsb dx, byte [rsi]
je 0x4034d3
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x4034d4
je 0x4034c9
outsb dx, byte [rsi]
outsd dx, dword [rsi]
pop rdi
movsxd rbp, dword [rdi + 0x70]
jns 0x4034b7
add byte [rdi + 0x5a], bl
push rbx
je 0x4034aa
xor eax, 0x65676572
js 0x4034df
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034f9
outsb dx, byte [rsi]
je 0x4034fc
xor qword [rdi], r14
outsw dx, word [rsi]
jb 0x4034fd
je 0x4034f2
imul si, word [rdx + 0x73], 0x5f74
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
jns 0x4034e3
add byte [rdi + 0x5a], bl
push rbx
je 0x4034d6
xor eax, 0x65676572
js 0x40350b
movsxd rbp, dword [rdi + 0x6e]
jae 0x403525
outsb dx, byte [rsi]
je 0x403528
xor qword [rbx], r14
jb 0x40352d
outsd dx, dword [rsi]
jb 0x40351d
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x40352a
add byte [r15 + 0x5a], r11b
push rbx
je 0x4034fe
xor eax, 0x65676572
js 0x403533
movsxd rbp, dword [rdi + 0x6e]
jae 0x40354d
outsb dx, byte [rsi]
je 0x403550
xor qword [rcx], r14
jb 0x403555
outsd dx, dword [rsi]
jb 0x403545
movsxd rsi, dword [rcx + rdi*2 + 0x70]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x403524
xor eax, 0x65676572
js 0x403559
movsxd rbp, dword [rdi + 0x6e]
jae 0x403573
outsb dx, byte [rsi]
je 0x403576
xor qword [rdx], r14
jb 0x40357b
outsd dx, dword [rsi]
jb 0x40356b
jae 0x403572
jo 0x403577
add byte [r15 + 0x5a], r11b
push rbx
je 0x40354b
xor eax, 0x65676572
js 0x403580
movsxd rbp, dword [rdi + 0x6e]
jae 0x40359a
outsb dx, byte [rsi]
je 0x40359d
xor qword [rbx], r14
jb 0x4035a2
outsd dx, dword [rsi]
jb 0x403592
movsxd rbp, dword [rbx + 0x72]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x403573
xor eax, 0x65676572
js 0x4035a8
movsxd rbp, dword [rdi + 0x6e]
jae 0x4035c2
outsb dx, byte [rsi]
je 0x4035c5
xor qword [rcx], r14
jb 0x4035ca
outsd dx, dword [rsi]
jb 0x4035ba
jb 0x4035bf
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x403599
xor eax, 0x65676572
js 0x4035ce
movsxd rbp, dword [rdi + 0x6e]
jae 0x4035e8
outsb dx, byte [rsi]
je 0x4035eb
xor qword [rcx], r14
jb 0x4035f0
outsd dx, dword [rsi]
jb 0x4035e0
jo 0x4035e4
jb 0x4035ea
outsb dx, byte [rsi]
add byte [r15 + 0x5a], r11b
push rbx
je 0x4035bf
xor eax, 0x65676572
js 0x4035f4
movsxd rbp, dword [rdi + 0x6e]
jae 0x40360e
outsb dx, byte [rsi]
je 0x403611
xor qword [rcx], r14
jb 0x403616
outsd dx, dword [rsi]
jb 0x403606
jb 0x40360b
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4035e5
xor eax, 0x65676572
js 0x40361a
movsxd rbp, dword [rdi + 0x6e]
jae 0x403634
outsb dx, byte [rsi]
je 0x403637
xor qword [0x726f7272], r14
pop rdi
jb 0x403634
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40360e
xor eax, 0x65676572
js 0x403643
movsxd rbp, dword [rdi + 0x6e]
jae 0x40365d
outsb dx, byte [rsi]
je 0x403660
xor qword [rcx], r14
jb 0x403665
outsd dx, dword [rsi]
jb 0x403655
jb 0x403659
outsb dx, byte [rsi]
add byte gs:[r15d + 0x5a], r11b
push rbx
je 0x403634
xor eax, 0x65676572
js 0x403669
movsxd rbp, dword [rdi + 0x6e]
jae 0x403683
outsb dx, byte [rsi]
je 0x403686
xor qword [rcx], r14
jb 0x40368b
outsd dx, dword [rsi]
jb 0x40367b
jae 0x40368e
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40365a
xor eax, 0x65676572
js 0x40368f
movsxd rbp, dword [rdi + 0x6e]
jae 0x4036a9
outsb dx, byte [rsi]
je 0x4036ac
xor qword [rip + 0x6f727265], r14
jb 0x4036a1
jb 0x4036ac
jo 0x4036ae
je 0x403691
add byte [rdi + 0x5a], bl
push rbx
je 0x403684
xor eax, 0x65676572
js 0x4036b9
movsxd rbp, dword [rdi + 0x6e]
jae 0x4036d3
outsb dx, byte [rsi]
je 0x4036d6
xor qword [rsi], r14
jb 0x4036db
outsd dx, dword [rsi]
jb 0x4036cb
movsxd rbp, dword [rdi + 0x6d]
jo 0x4036dd
js 0x4036dd
je 0x4036ef
add byte [r15 + 0x5a], r11b
push rbx
je 0x4036af
xor eax, 0x65676572
js 0x4036e4
movsxd rbp, dword [rdi + 0x6e]
jae 0x4036fe
outsb dx, byte [rsi]
je 0x403701
xor qword [rcx], r14
jb 0x403706
outsd dx, dword [rsi]
jb 0x4036f6
jae 0x40370d
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4036dc
pop rdi
pop rdi
je 0x40370b
imul ebp, dword [rsp + rcx*2 + 0x31], 0x5f535f39
imul ebp, dword [rsi + 0x76], 0x64696c61
pop rdi
jae 0x403730
je 0x403724
pop rdi
imul esp, dword [rbp + rax*2], 0x334c5a5f
imul ebp, dword [rsi + 0x66], 0x4c5a5f00
xor esp, dword [rbp + 0x70]
jae 0x4036d4
pop rdi
pop rdx
xor r14b, byte [rax + 0x69]
add byte [rdi + 0x5a], bl
xor r13, qword [rbp + 0x6f]
add byte fs:[rdi + 0x5a], bl
xor al, 0x6d
js 0x403759
add byte [rdi + 0x5a], bl
xor al, 0x31
pop rdi
pop rdi
jae 0x403768
je 0x403760
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x40376e
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x403784
jb 0x403787
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x40379c
pop rdi
pop r15
insd dword [rdi], dx
jb 0x40378f
outsb dx, byte [rsi]
add byte fs:[rdi + 0x5f], bl
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4037e0
jns 0x4037e0
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4037f1
jns 0x4037f1
jae 0x403808
jb 0x40380b
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
xor eax, 0x65776f70
jb 0x403813
imul eax, dword [rax], 0x6e697270
je 0x403818
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x375a5f00
jo 0x403837
movsxd rsp, dword gs:[rcx + 0x6c]
movsxd rsi, dword [rsi]
insb byte [rdi], dx
outsb dx, byte gs:[rsi]
add byte [rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdx
push rbx
je 0x403817
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x40385b
movsxd rsp, dword [rbp + 0x43]
xor dword [rbp + 0x52], eax
push rbx
je 0x403834
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403873
movsxd rbx, dword [rdi + 0x73]
je 0x403881
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40387c
je 0x403891
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
add byte [r15 + 0x5a], r11b
push rbx
je 0x403866
xor ebp, dword [rbp + 0x65]
jb 0x4038ac
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x4038b7
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x34454533
jae 0x403921
insd dword [rdi], dx
add byte [rdi + 0x5f], bl
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x40393e
jb 0x403941
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x403933
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x403954
jae 0x4038e4
pop rdi
pop rdx
xor eax, 0x766c6f73
jbe 0x4038ee
pop rdi
pop rdx
xor esi, dword [rdx + 0x6e]
imul eax, dword fs:[rax], 0x534e5a5f
je 0x40392d
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x403971
movsxd rsp, dword [rbp + 0x37]
pop rdi
pop r15
imul ebp, dword [rsi + 0x69], 0x4b524574
push rbx
je 0x403950
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x40398f
movsxd rbx, dword [rdi + 0x73]
je 0x40399d
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403998
je 0x4039ad
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x403998
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x4039ff
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x737300
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x61]
pop rdi
je 0x403a0f
js 0x403a15
je 0x4039ee
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x4039f2
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x403a36
movsxd rsp, dword [rbp + 0x44]
xor dword [rbp + 0x76], eax
add byte [rdi + 0x5a], bl
push rbx
je 0x403a12
pop rdi
pop rdi
je 0x403a41
imul ebp, dword [rsp + rsi + 0x5f], 0x49646f4d
insd dword [rdi], dx
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x45316d4c]
insd dword [rdi], dx
xor byte [rbp + 0x4c], al
xor dword [rbp + 0x4c], eax
xor dword [rbp + 0x45], eax
pop rdi
pop rdi
movsxd rsp, dword [rcx + 0x6c]
movsxd rax, dword [rbp + 0x6d]
add byte [rdi + 0x5a], bl
push rbx
je 0x403a48
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x403a9d
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x403ac5
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x403ad9
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403aee
pop rdi
jae 0x403b04
jb 0x403b07
add byte [rdi + 0x5a], bl
push rbx
je 0x403ad1
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403b10
movsxd rbx, dword [rdi + 0x73]
je 0x403b1e
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403b19
je 0x403b2e
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rbp + 0x76], r8d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
xor al, 0x72
jbe 0x403ae7
pop rdi
pop rdx
xor esp, dword [rcx + 0x64]
push rdx
imul ebp, dword [rcx], 0x4d545f5f
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
jae 0x403b71
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x403b51
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x403b95
movsxd rsp, dword [rbp + 0x39]
pop rdi
pop r15
je 0x403bac
insb byte [rdi], dx
jbe 0x403b7b
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dword [rax], edi
add byte [rdi + 0x5a], bl
push rbx
je 0x403b89
pop rdi
pop rdi
je 0x403bb8
imul ebp, dword [rbp + rsi + 0x5f], 0x646f6d5f
insd dword [rdi], dx
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
insd dword [rdi], dx
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor byte [rbp + 0x45], al
push r12
pop rdi
push rbx
xor dword [rdi], ebx
pop rdi
pop rdx
xor al, 0x6d
jne 0x403bf0
je 0x403bef
imul eax, dword [rax], 0x534e5a5f
je 0x403bbf
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x403c03
movsxd rsp, dword [rbp + 0x44]
xor al, byte [rbp + 0x76]
add byte [rdi + 0x5a], bl
push rbx
je 0x403bd9
xor ebp, dword [rbp + 0x65]
jb 0x403c1f
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x403c2a
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x63454533
insb byte [rdi], dx
jbe 0x403c31
pop rdi
pop rdx
push rbx
je 0x403c6f
pop rdi
pop rdi
je 0x403c9e
imul ebp, dword [rsp + rsi + 0x5f], 0x49646f4d
insd dword [rdi], dx
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
insd dword [rdi], dx
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor byte [rbp + 0x4c], al
xor dword [rbp + 0x4c], eax
xor dword [rbp + 0x45], eax
pop rdi
pop rdi
movsxd rsp, dword [rcx + 0x6c]
movsxd rax, dword [rbp + 0x6d]
add byte [rdi + 0x5f], bl
jae 0x403ce6
pop rdi
jae 0x403cea
jb 0x403ced
add byte [rdi + 0x5f], bl
jae 0x403cf2
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
movsxd rax, dword [r13 + 0x44]
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403ce7
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x403d2b
movsxd rsp, dword [rbp + 0x63]
insb byte [rdi], dx
jbe 0x403cc9
js 0x403d3e
add byte [rdi + 0x5a], bl
push rbx
je 0x403d04
insd dword [rdi], dx
imul ebp, dword [rsi + 0x49], 0x4b524565
push rsp
pop rdi
push rbx
xor bl, byte [rdi + 0x53]
xor bl, byte [rdi]
pop rdi
pop rdx
push rbx
je 0x403d20
pop rdi
pop rdi
je 0x403d4f
imul ebp, dword [rbp + rsi + 0x5f], 0x646f6d5f
insd dword [rdi], dx
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x45316d4c]
insd dword [rdi], dx
xor byte [rbp + 0x45], al
push r12
pop rdi
push rbx
xor dword [rdi], ebx
pop rdi
pop rdx
push rbx
je 0x403d45
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x403d89
movsxd rsp, dword [rbp + 0x37]
pop rdi
pop r15
imul bp, word [rsi + 0x69], 0x7645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dword [rax], edi
add byte [rdi + 0x5a], bl
push rbx
je 0x403d75
xor ebp, dword [rbp + 0x65]
jb 0x403dbb
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x403dc6
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x43454533
xor dword [rbp + 0x6d], eax
add byte [rdi + 0x5a], bl
push rbx
je 0x403e0a
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403e49
movsxd rbx, dword [rdi + 0x73]
je 0x403e57
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403e52
je 0x403e67
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [r13 + 0x50], eax
movsxd rdx, dword [r10 + 0x4b]
push rbx
xor ebx, dword [rdi + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x403e85
add byte [rdi + 0x5a], bl
push rbx
je 0x403e5d
xor ebp, dword [rbp + 0x65]
jb 0x403ea3
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x403eae
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x43454533
xor al, byte [rbp + 0x6d]
add byte [rdi + 0x5a], bl
push rbx
movsxd rax, dword [r13 + 0x43]
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
js 0x403f4c
pop rdi
jo 0x403f3c
jb 0x403f4c
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x403f5e
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x403f71
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
pop rdi
pop rdx
push rbx
je 0x403f40
xor ebp, dword [rbp + 0x65]
jb 0x403f86
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x403f91
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x31454533
xor dword [rdi + 0x4d], ebx
pop rdi
outsb dx, byte gs:[esi]
pop rdi
jb 0x403fff
outsb dx, byte [rsi]
jbe 0x403fa3
pop rdi
pop rdx
push rbx
je 0x403fda
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x40401e
movsxd rsp, dword [rbp + 0x43]
xor al, byte [rbp + 0x52]
push rbx
je 0x403ff7
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404036
movsxd rbx, dword [rdi + 0x73]
je 0x404044
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40403f
je 0x404054
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
add byte [r13 + 0x61], r13b
imul ebp, dword [rsi], 0x79732e00
insd dword [rdi], dx
je 0x40405e
add byte [rsi], ch
jae 0x404076
jb 0x404078
add byte [rsi], ch
jae 0x404072
jae 0x404080
jb 0x404082
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x404083
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x404091
outsb dx, byte cs:[esi]
jne 0x40405f
jne 0x40409d
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x40406d
push 0x687361
jns 0x4040b6
jae 0x4040c3
insd dword [rdi], dx
add byte [rsi], ch
jns 0x4040be
jae 0x4040c6
jb 0x404054
outsb dx, byte cs:[esi]
jne 0x404087
jbe 0x4040c0
jb 0x4040d0
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x404094
jbe 0x4040cd
jb 0x4040dd
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x4040d8
insb byte [rdi], dx
jns 0x4040e7
add byte [rsi], ch
jb 0x4040e2
insb byte [rdi], dx
jo 0x4040ee
je 0x404084
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x4040bd
outsd dx, dword [esi]
je 0x404093
je 0x4040fb
js 0x40410c
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x404111
je 0x404107
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x40412a
jo 0x40413e
pop rdi
je 0x40412e
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x40413c
jns 0x4040dd
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x404158
jns 0x4040e9
push 0x63
jb 0x4040ee
jns 0x404160
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x40416a
je 0x404100
je 0x404166
add byte [rsi], ch
jae 0x40417d
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x404114
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, bh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, 0x4004
add byte [rax], al
add byte [rax + 4], bh
add byte [rax], al
add byte [rsi + 2], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0x600000000000000]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], dl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
or byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], 0
add byte [rax], al
add byte [rax], al
add byte [rip + 0x19000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4009], ch
add byte [rax], al
add byte [rax + 9], ch
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
ror byte [rcx], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
loopne 0x40447c
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dh
adc al, 0x40
add byte [rax], al
add byte [rax], al
add ah, dh
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x40
add byte [rax], al
add byte [rip], dl
add byte [rax], al
and byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd qword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
call 0x404652
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], bl
add byte [rax], al
add byte [rax + 0x20], bl
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
test al, 0x20
add byte [rax], al
add byte [rax], al
add byte [rax], al
jo 0x40482d
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x1000001
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], ch
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
idiv byte [rdi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
sldt word [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
dec byte [rdi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
