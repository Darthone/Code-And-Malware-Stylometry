xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6030af
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400b50
mov eax, 0
test rax, rax
je 0x400b50
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400b98
mov eax, 0
test rax, rax
je 0x400b98
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x202519], 0
jne 0x400bba
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x202506], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400bd0
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400bcb
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
sub rsp, 0x10
mov dword [rbp - 4], edi
mov edi, obj.mrand
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::operator__
mov rdx, rax
mov eax, dword [rbp - 4]
movsxd rcx, eax
mov rax, rdx
mov edx, 0
div rcx
mov rax, rdx
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov dword [rbp - 0xc], esi
mov rax, qword [rbp - 8]
mov edx, dword [rax]
mov eax, dword [rbp - 0xc]
add edx, eax
mov rax, qword [rbp - 8]
mov dword [rax], edx
mov rax, qword [rbp - 8]
mov eax, dword [rax]
cmp eax, 0x3b9aca06
setg al
test al, al
je 0x400c57
mov rax, qword [rbp - 8]
mov eax, dword [rax]
mov edx, 0x3b9aca07
sub eax, edx
mov edx, eax
mov rax, qword [rbp - 8]
mov dword [rax], edx
nop
pop rbp
ret
push rbp
mov rbp, rsp
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
mov eax, dword [rbp - 4]
movsxd rdx, eax
mov eax, dword [rbp - 8]
cdqe
mov rcx, rdx
imul rcx, rax
movabs rdx, 0x89705f3112a28fe5
mov rax, rcx
imul rdx
lea rax, [rdx + rcx]
sar rax, 0x1d
mov rdx, rax
mov rax, rcx
sar rax, 0x3f
sub rdx, rax
mov rax, rdx
imul rax, rax, 0x3b9aca07
sub rcx, rax
mov rax, rcx
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x18
mov dword [rbp - 0x14], edi
mov dword [rbp - 0x18], esi
mov dword [rbp - 4], 1
cmp dword [rbp - 0x18], 0
je 0x400cfb
mov eax, dword [rbp - 0x18]
and eax, 1
test eax, eax
je 0x400ce4
mov edx, dword [rbp - 0x14]
mov eax, dword [rbp - 4]
mov esi, edx
mov edi, eax
call sym.mult
mov dword [rbp - 4], eax
mov edx, dword [rbp - 0x14]
mov eax, dword [rbp - 0x14]
mov esi, edx
mov edi, eax
call sym.mult
mov dword [rbp - 0x14], eax
sar dword [rbp - 0x18], 1
jmp 0x400cc2
mov eax, dword [rbp - 4]
leave
ret
push rbp
mov rbp, rsp
nop
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov edx, obj.q
mov esi, obj.n
mov edi, str._d_d
mov eax, 0
call sym.imp.scanf
cmp eax, 1
setle al
test al, al
je 0x400d3c
mov eax, 0
jmp 0x400e31
mov dword [rbp - 0xc], 0
mov eax, dword [rip + 0x20f447]
cmp dword [rbp - 0xc], eax
jge 0x400d89
mov eax, dword [rbp - 0xc]
cdqe
shl rax, 3
add rax, 4
lea rdx, [rax + obj.go]
mov eax, dword [rbp - 0xc]
cdqe
shl rax, 3
add rax, obj.go
mov rsi, rax
mov edi, str._d_d
mov eax, 0
call sym.imp.scanf
add dword [rbp - 0xc], 1
jmp 0x400d43
mov dword [rbp - 8], 0
mov eax, dword [rip + 0x20f3fa]
cmp dword [rbp - 8], eax
jge 0x400e2c
mov dword [rbp - 4], 0
mov eax, dword [rip + 0x20f3e4]
cmp dword [rbp - 4], eax
jge 0x400e23
mov eax, dword [rbp - 8]
cdqe
imul rax, rax, 0x1b8
lea rdx, [rax + obj.dist]
mov eax, dword [rbp - 4]
cdqe
shl rax, 2
add rax, rdx
mov rsi, rax
mov edi, 0x40193d
mov eax, 0
call sym.imp.scanf
mov eax, dword [rbp - 4]
cdqe
mov edx, dword [rbp - 8]
movsxd rdx, edx
imul rdx, rdx, 0x6e
add rax, rdx
mov eax, dword [rax*4 + obj.dist]
cmp eax, -1
jne 0x400e1d
mov eax, dword [rbp - 4]
cdqe
mov edx, dword [rbp - 8]
movsxd rdx, edx
imul rdx, rdx, 0x6e
add rax, rdx
mov dword [rax*4 + obj.dist], 0x3c336080
add dword [rbp - 4], 1
jmp 0x400da6
add dword [rbp - 8], 1
jmp 0x400d90
mov eax, 1
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x60
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
mov dword [rbp - 0x44], 0
mov eax, dword [rip + 0x20f339]
cmp dword [rbp - 0x44], eax
jge 0x400f26
mov dword [rbp - 0x40], 0
mov eax, dword [rip + 0x20f323]
cmp dword [rbp - 0x40], eax
jge 0x400f1d
mov dword [rbp - 0x3c], 0
mov eax, dword [rip + 0x20f30d]
cmp dword [rbp - 0x3c], eax
jge 0x400f14
mov eax, dword [rbp - 0x44]
cdqe
mov edx, dword [rbp - 0x40]
movsxd rdx, edx
imul rdx, rdx, 0x6e
add rax, rdx
mov edx, dword [rax*4 + obj.dist]
mov eax, dword [rbp - 0x3c]
cdqe
mov ecx, dword [rbp - 0x44]
movsxd rcx, ecx
imul rcx, rcx, 0x6e
add rax, rcx
mov eax, dword [rax*4 + obj.dist]
add eax, edx
mov dword [rbp - 0x48], eax
mov eax, dword [rbp - 0x3c]
movsxd rdx, eax
mov eax, dword [rbp - 0x40]
cdqe
imul rax, rax, 0x6e
add rax, rdx
shl rax, 2
lea rdx, [rax + obj.dist]
lea rax, [rbp - 0x48]
mov rsi, rax
mov rdi, rdx
call sym.std::min_int_
mov eax, dword [rax]
mov edx, dword [rbp - 0x3c]
movsxd rdx, edx
mov ecx, dword [rbp - 0x40]
movsxd rcx, ecx
imul rcx, rcx, 0x6e
add rdx, rcx
mov dword [rdx*4 + obj.dist], eax
add dword [rbp - 0x3c], 1
jmp 0x400e7d
add dword [rbp - 0x40], 1
jmp 0x400e67
add dword [rbp - 0x44], 1
jmp 0x400e51
mov dword [rbp - 0x38], 0
mov eax, dword [rip + 0x20f261]
cmp dword [rbp - 0x38], eax
jge 0x40117c
lea rdx, [rbp - 0x48]
lea rax, [rbp - 0x4c]
mov rsi, rax
mov edi, str._d_d
mov eax, 0
call sym.imp.scanf
mov eax, dword [rbp - 0x4c]
sub eax, 1
mov dword [rbp - 0x4c], eax
mov eax, dword [rbp - 0x48]
sub eax, 1
mov dword [rbp - 0x48], eax
mov dword [rbp - 0x34], 0
mov eax, dword [rip + 0x20f21b]
cmp dword [rbp - 0x34], eax
jge 0x400fa7
mov eax, dword [rbp - 0x34]
cdqe
shl rax, 4
add rax, obj.ans
fld xword [rip + 0x9d1]
fstp xword [rax]
mov eax, dword [rbp - 0x34]
cdqe
mov dword [rax*4 + obj.used], 0
add dword [rbp - 0x34], 1
jmp 0x400f6f
mov eax, dword [rbp - 0x4c]
cdqe
shl rax, 4
add rax, obj.ans
fldz
fstp xword [rax]
mov dword [rbp - 0x30], 0
mov eax, dword [rip + 0x20f1c9]
cmp dword [rbp - 0x30], eax
jge 0x401129
mov dword [rbp - 0x2c], 0xffffffff
mov dword [rbp - 0x28], 0
mov eax, dword [rip + 0x20f1ac]
cmp dword [rbp - 0x28], eax
jge 0x401038
mov eax, dword [rbp - 0x28]
cdqe
mov eax, dword [rax*4 + obj.used]
test eax, eax
jne 0x401031
cmp dword [rbp - 0x2c], -1
je 0x401029
mov eax, dword [rbp - 0x2c]
cdqe
shl rax, 4
add rax, obj.ans
fld xword [rax]
mov eax, dword [rbp - 0x28]
cdqe
shl rax, 4
add rax, obj.ans
fld xword [rax]
fxch st(1)
fucomip st(1)
fstp st(0)
jbe 0x401032
mov eax, dword [rbp - 0x28]
mov dword [rbp - 0x2c], eax
jmp 0x401032
nop
add dword [rbp - 0x28], 1
jmp 0x400fde
mov eax, dword [rbp - 0x2c]
cdqe
mov dword [rax*4 + obj.used], 1
mov dword [rbp - 0x24], 0
mov eax, dword [rip + 0x20f13b]
cmp dword [rbp - 0x24], eax
jge 0x401120
mov eax, dword [rbp - 0x24]
cdqe
mov eax, dword [rax*4 + obj.used]
test eax, eax
jne 0x401116
mov eax, dword [rbp - 0x24]
cdqe
mov edx, dword [rbp - 0x2c]
movsxd rdx, edx
imul rdx, rdx, 0x6e
add rax, rdx
mov edx, dword [rax*4 + obj.dist]
mov eax, dword [rbp - 0x2c]
cdqe
mov eax, dword [rax*8 + obj.go]
cmp edx, eax
jg 0x401116
mov eax, dword [rbp - 0x2c]
cdqe
shl rax, 4
add rax, obj.ans
fld xword [rax]
mov eax, dword [rbp - 0x24]
cdqe
mov edx, dword [rbp - 0x2c]
movsxd rdx, edx
imul rdx, rdx, 0x6e
add rax, rdx
mov eax, dword [rax*4 + obj.dist]
mov dword [rbp - 0x5c], eax
fild dword [rbp - 0x5c]
mov eax, dword [rbp - 0x2c]
cdqe
mov eax, dword [rax*8 + 0x6101a4]
mov dword [rbp - 0x5c], eax
fild dword [rbp - 0x5c]
fdivp st(1)
faddp st(1)
fstp xword [rbp - 0x20]
mov eax, dword [rbp - 0x24]
cdqe
shl rax, 4
add rax, obj.ans
fld xword [rax]
fld xword [rbp - 0x20]
fxch st(1)
fucomip st(1)
fstp st(0)
jbe 0x401117
mov eax, dword [rbp - 0x24]
cdqe
shl rax, 4
add rax, obj.ans
fld xword [rbp - 0x20]
fstp xword [rax]
jmp 0x401117
nop
add dword [rbp - 0x24], 1
jmp 0x40104f
add dword [rbp - 0x30], 1
jmp 0x400fc1
mov eax, dword [rip + 0x20f065]
sub eax, 1
cmp eax, dword [rbp - 0x38]
sete al
movzx eax, al
cdqe
movzx eax, byte [rax + 0x401948]
movsx eax, al
mov edx, dword [rbp - 0x48]
movsxd rdx, edx
shl rdx, 4
add rdx, obj.ans
fld xword [rdx]
fstp qword [rbp - 0x58]
movsd xmm0, qword [rbp - 0x58]
mov esi, eax
mov edi, str._.18f_c
mov eax, 1
call sym.imp.printf
add dword [rbp - 0x38], 1
jmp 0x400f2d
nop
mov rax, qword [rbp - 8]
xor rax, qword fs:[0x28]
je 0x401191
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
call sym.precalc
lea rax, [rbp - 0xc]
mov rsi, rax
mov edi, 0x40193d
mov eax, 0
call sym.imp.scanf
mov dword [rbp - 0xc], 0
call sym.read
test eax, eax
sete al
test al, al
jne 0x4011fe
mov eax, dword [rbp - 0xc]
add eax, 1
mov dword [rbp - 0xc], eax
mov eax, dword [rbp - 0xc]
mov esi, eax
mov edi, str.Case___d:
mov eax, 0
call sym.imp.printf
call sym.solve
jmp 0x4011cc
nop
mov eax, 0
mov rdx, qword [rbp - 8]
xor rdx, qword fs:[0x28]
je 0x401218
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x13d8
mov dword [rbp - 0x13d4], edi
mov dword [rbp - 0x13d8], esi
mov rax, qword fs:[0x28]
mov qword [rbp - 0x18], rax
xor eax, eax
cmp dword [rbp - 0x13d4], 1
jne 0x401351
cmp dword [rbp - 0x13d8], 0xffff
jne 0x401351
mov edi, obj.std::__ioinit
call sym.std::ios_base::Init::Init
mov edx, obj.__dso_handle
mov esi, obj.std::__ioinit
mov edi, sym.std::ios_base::Init::_Init
call sym.imp.__cxa_atexit
lea rax, [rbp - 0x13c1]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rdx, [rbp - 0x13c1]
lea rax, [rbp - 0x13c0]
mov esi, str.default
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rdx, [rbp - 0x13c0]
lea rax, [rbp - 0x13a0]
mov rsi, rdx
mov rdi, rax
call sym.std::random_device::random_device
lea rax, [rbp - 0x13a0]
mov rdi, rax
call sym.std::random_device::operator__
mov eax, eax
mov rsi, rax
mov edi, obj.mrand
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::mersenne_twister_engine
lea rax, [rbp - 0x13a0]
mov rdi, rax
call sym.std::random_device::_random_device
lea rax, [rbp - 0x13c0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
lea rax, [rbp - 0x13c1]
mov rdi, rax
call sym.std::allocator_char_::_allocator
jmp 0x401351
mov rbx, rax
lea rax, [rbp - 0x13a0]
mov rdi, rax
call sym.std::random_device::_random_device
jmp 0x401323
mov rbx, rax
lea rax, [rbp - 0x13c0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
jmp 0x401337
mov rbx, rax
lea rax, [rbp - 0x13c1]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
mov rax, qword [rbp - 0x18]
xor rax, qword fs:[0x28]
je 0x401365
call sym.imp.__stack_chk_fail
add rsp, 0x13d8
pop rbx
pop rbp
ret
push rbp
mov rbp, rsp
mov esi, 0xffff
mov edi, 1
call sym.__static_initialization_and_destruction_0
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call sym.std::random_device::_M_init
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::random_device::_M_fini
nop
leave
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::random_device::_M_getval
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::seed
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov rax, qword [rbp - 0x18]
mov rax, qword [rax + 0x1380]
cmp rax, 0x26f
jbe 0x401431
mov rax, qword [rbp - 0x18]
mov rdi, rax
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::_M_gen_rand
mov rax, qword [rbp - 0x18]
mov rax, qword [rax + 0x1380]
lea rcx, [rax + 1]
mov rdx, qword [rbp - 0x18]
mov qword [rdx + 0x1380], rcx
mov rdx, qword [rbp - 0x18]
mov rax, qword [rdx + rax*8]
mov qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shr rax, 0xb
mov eax, eax
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shl rax, 7
and eax, 0x9d2c5680
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shl rax, 0xf
and eax, 0xefc60000
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shr rax, 0x12
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rax, qword [rbp - 0x10]
mov edx, dword [rax]
mov rax, qword [rbp - 8]
mov eax, dword [rax]
cmp edx, eax
jge 0x4014bb
mov rax, qword [rbp - 0x10]
jmp 0x4014bf
mov rax, qword [rbp - 8]
pop rbp
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov rax, qword [rbp - 0x20]
mov rdi, rax
call sym.std::__detail::__mod_unsignedlong_4294967296ul_1ul_0ul_
mov rdx, rax
mov rax, qword [rbp - 0x18]
mov qword [rax], rdx
mov qword [rbp - 0x10], 1
cmp qword [rbp - 0x10], 0x26f
ja 0x40155b
mov rax, qword [rbp - 0x10]
lea rdx, [rax - 1]
mov rax, qword [rbp - 0x18]
mov rax, qword [rax + rdx*8]
mov qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shr rax, 0x1e
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
imul rax, rax, 0x6c078965
mov qword [rbp - 8], rax
mov rax, qword [rbp - 0x10]
mov rdi, rax
call sym.std::__detail::__mod_unsignedlong_624ul_1ul_0ul_
add qword [rbp - 8], rax
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::__detail::__mod_unsignedlong_4294967296ul_1ul_0ul_
mov rcx, rax
mov rax, qword [rbp - 0x18]
mov rdx, qword [rbp - 0x10]
mov qword [rax + rdx*8], rcx
add qword [rbp - 0x10], 1
jmp 0x4014f0
mov rax, qword [rbp - 0x18]
mov qword [rax + 0x1380], 0x270
nop
leave
ret
nop
push rbp
mov rbp, rsp
mov qword [rbp - 0x48], rdi
mov qword [rbp - 0x28], -0x80000000
mov qword [rbp - 0x20], 0x7fffffff
mov qword [rbp - 0x38], 0
cmp qword [rbp - 0x38], 0xe2
ja 0x40161e
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x38]
mov rax, qword [rax + rdx*8]
and rax, 0xffffffff80000000
mov rcx, rax
mov rax, qword [rbp - 0x38]
lea rdx, [rax + 1]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
and eax, 0x7fffffff
or rax, rcx
mov qword [rbp - 0x18], rax
mov rax, qword [rbp - 0x38]
lea rdx, [rax + 0x18d]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
mov rdx, qword [rbp - 0x18]
shr rdx, 1
xor rdx, rax
mov rax, qword [rbp - 0x18]
and eax, 1
test rax, rax
je 0x4015fd
mov eax, 0x9908b0df
jmp 0x401602
mov eax, 0
mov rcx, rdx
xor rcx, rax
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x38]
mov qword [rax + rdx*8], rcx
add qword [rbp - 0x38], 1
jmp 0x40158e
mov qword [rbp - 0x30], 0xe3
cmp qword [rbp - 0x30], 0x26e
ja 0x4016b6
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x30]
mov rax, qword [rax + rdx*8]
and rax, 0xffffffff80000000
mov rcx, rax
mov rax, qword [rbp - 0x30]
lea rdx, [rax + 1]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
and eax, 0x7fffffff
or rax, rcx
mov qword [rbp - 0x10], rax
mov rax, qword [rbp - 0x30]
lea rdx, [rax - 0xe3]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
mov rdx, qword [rbp - 0x10]
shr rdx, 1
xor rdx, rax
mov rax, qword [rbp - 0x10]
and eax, 1
test rax, rax
je 0x401695
mov eax, 0x9908b0df
jmp 0x40169a
mov eax, 0
mov rcx, rdx
xor rcx, rax
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x30]
mov qword [rax + rdx*8], rcx
add qword [rbp - 0x30], 1
jmp 0x401626
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + 0x1378]
and rax, 0xffffffff80000000
mov rdx, rax
mov rax, qword [rbp - 0x48]
mov rax, qword [rax]
and eax, 0x7fffffff
or rax, rdx
mov qword [rbp - 8], rax
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + 0xc60]
mov rdx, qword [rbp - 8]
shr rdx, 1
xor rdx, rax
mov rax, qword [rbp - 8]
and eax, 1
test rax, rax
je 0x401705
mov eax, 0x9908b0df
jmp 0x40170a
mov eax, 0
xor rdx, rax
mov rax, qword [rbp - 0x48]
mov qword [rax + 0x1378], rdx
mov rax, qword [rbp - 0x48]
mov qword [rax + 0x1380], 0
nop
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::__detail::_Mod_unsignedlong_4294967296ul_1ul_0ul_true_true_::__calc
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::__detail::_Mod_unsignedlong_624ul_1ul_0ul_true_true_::__calc
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 0x18], rdi
mov rax, qword [rbp - 0x18]
mov qword [rbp - 8], rax
mov eax, 0xffffffff
and qword [rbp - 8], rax
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 0x18], rdi
mov rax, qword [rbp - 0x18]
mov qword [rbp - 8], rax
mov rcx, qword [rbp - 8]
mov rax, rcx
shr rax, 4
movabs rdx, 0xd20d20d20d20d21
mul rdx
mov rax, rdx
shr rax, 1
imul rax, rax, 0x270
sub rcx, rax
mov rax, rcx
mov qword [rbp - 8], rax
mov rax, qword [rbp - 8]
pop rbp
ret
nop word cs:[rax + rax]
nop dword [rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x201606]
push rbp
lea rbp, [rip + 0x20160e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401826
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401810
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, 0
add byte [rax], al
add eax, 0x6000000
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], cl
or byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
or al, byte [rax]
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rax + 0x3c3360]
and byte [rax + 0x33], 0x3c
add byte [rax], al
add byte [rax], al
add byte [rax + 0x5f4136b4], ch
pop r15
jo 0x4018a1
loope 0x401959
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor eax, 0xa22168c2
fimul dword [rdi]
leave
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], al
retf 0x3b9a
outsb dx, byte [rsi]
add byte [rax], al
add byte [rip + 0x642564], ah
and eax, 0x642564
and eax, 0x2e250064
and eax, 0x6638312e
and eax, 0xa200063
add byte [rbx + 0x61], al
jae 0x4019b4
and byte [rbx], ah
and eax, 0x203a64
jne 0x4019c8
je 0x40195e
add byte [rax], al
add byte [rax], al
jbe 0x40199f
imul ecx, dword [rbx], -0x22
cmp al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add dword [rbx], ebx
add edi, dword [rbx]
fadd qword [rax]
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
ljmp [rax]
add dword [rax], eax
add byte [rax - 0x700000f], al
add byte [rax], al
add byte [rsi - 0xe], dh
fadd dword [rcx]
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
clc
add dword [rax], eax
add dl, ch
lcall [rax]
add al, byte [rax]
add byte [rip + 0x38fffff3], bh
add al, byte [rax]
add byte [rax + 0x58fffff3], dl
add al, byte [rax]
add byte [rdi + 0x78fffff3], dl
add al, byte [rax]
add bl, al
hlt
lcall [rax + 0x23000002]
clc
mov eax, 0xaa000002
clc
clc
add eax, dword [rax]
add bh, bh
stc
jmp qword [rax]
add al, 0
add byte [rdx + rdi*8], dl
call qword [rax + 1]
add byte [rax], al
cmp bh, dl
call qword [rax + 0x56000001]
cli
mov eax, 0x70000001
cli
fadd dword [rdx]
add byte [rax], al
xchg eax, esi
cli
clc
add al, byte [rax]
add byte [rcx], ch
sti
lcall [rax]
add eax, dword [rax]
add byte [rdx - 5], dl
cmp byte [rbx], al
add byte [rax], al
sti
lcall [rax + 3]
add byte [rax], al
mov edx, 0x78fffffd
add eax, dword [rax]
add ah, dl
std
lcall [rax - 0x11fffffd]
std
mov eax, 0xd000003
fadd dword [rbx]
add byte [rax], al
inc dword [rax + 4]
add byte [rax], al
sar dh, 1
dec dword [rax + 4]
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401a6f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
xor al, 0xff
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401a9f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
xor bh, ch
call qword [rax]
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rax + rdi*8 + 0x26ffff], bh
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x401b01
add eax, eax
or al, byte [rax]
add ebx, dword [rbx]
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
movabs byte [0x40000001bfffff8], al
adc al, 0x1e
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
push rsi
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
lodsb al, byte [rsi]
add byte [rax], al
add byte [rsi + 0x1afffff8], dl
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rbp
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
int3
add byte [rax], al
add byte [rsi + 0x2efffff0], dl
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
imul ecx, dword [rdi + rax], 8
sbb al, 0
add byte [rax], al
in al, dx
add byte [rax], al
add byte [rax + rsi*8 + 0x46ffff], ah
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add al, byte [rcx + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
or al, 1
add byte [rax], al
retf -0x10
call qword [rbx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add cl, byte [rsi + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sub al, 1
add byte [rax], al
std
call qword [rbx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add cl, byte [rsi + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add qword [rax], r8
add byte [rax], dh
int1
inc dword [rdi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
insb byte [rdi], dx
add dword [rax], eax
add byte [rdi], dl
int1
ljmp [rcx + rax]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add esp, dword [rdi]
add dword [rdi + rax], ecx
or byte [rax], al
sbb al, 0
add byte [rax], al
mov word [rcx], es
add byte [rax], al
and esi, edx
jmp qword [rax + 3]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add ebx, dword [rbx + 3]
or al, 7
or byte [rax], al
sbb al, 0
add byte [rax], al
lodsb al, byte [rsi]
add dword [rax], eax
add byte [rbx - 0xb], ah
inc dword [rdi]
adc byte [rsi + 0x60d4302], al
add al, byte [rdx + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
int3
add dword [rax], eax
add byte [rax + 0x26fffff7], dl
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
in al, dx
add dword [rax], eax
add byte [rsi - 0x6c000009], dl
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add cl, byte [rsi + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
or al, 2
add byte [rax], al
or eax, edi
ljmp [rax]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
movsxd rcx, dword [rdi + rax]
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
sub al, 2
add byte [rax], al
adc bh, al
ljmp [rbx]
adc byte [rsi + 0x60d4302], al
add ah, byte [rsi + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
add r8b, byte [rax]
add byte [rsi - 0x43000008], bl
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add esi, dword [rdi + 0x8070c01]
add byte [rax + rax], bl
add byte [rax], al
insb byte [rdi], dx
add al, byte [rax]
add byte [rdx], bh
cli
lcall [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rbp
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
mov word [rdx], es
add byte [rax], al
xor al, 0xfa
lcall [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rbp
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
lodsb al, byte [rsi]
add al, byte [rax]
add byte [rsi], ch
cli
lcall [rdi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
pop rdx
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
int3
add al, byte [rax]
add byte [rip + 0x45fffffa], ch
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add al, byte [rax + 0xc]
or byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
mov word [rdx], es
add byte [rax], al
stosb byte [rdi], al
hlt
call qword [rbp + 1]
add byte [rax], al
add al, 0x18
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add qword [rbx], 3
add qword [rdi + rax], rcx
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
adc al, 3
add byte [rax], al
xlatb
cmc
call qword [rip]
adc byte [rsi + 0x60d4302], al
push rax
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rbx + rax], dh
add byte [rax], al
sbb dl, bh
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x401df2
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
jl 0x401e01
add byte [rax], al
cli
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
add bh, bh
inc dword [rcx]
sbb ecx, dword [rcx + 5]
add byte [rax], al
xchg dword [rcx], eax
add eax, 0xa000029a
add dword [rip - 0x50fffd7a], eax
add dword [rdx + rsi*8], edx
add dword [rax], eax
mov dl, 2
add eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
outsd dx, dword [rsi]
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
movabs al, byte [0x400b]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, dl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
test al, 9
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rax + rbx + 0x40], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sub eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 0x4004], bh
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov es, word [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], 0
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rsi + 7], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, ah
or dword [rax], eax
add byte [rax], al
add byte [rax], al
test byte [rcx], 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte es:[rax]
add byte [rax], al
add byte [rax], al
or al, byte ss:[rax]
add byte [rax], al
add byte [rax], al
or r8b, byte [rax]
add byte [rax], al
add byte [rax], al
push rsi
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
jbe 0x40306c
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400a], al
add byte [rax], al
add byte [rsi + 0x400a], dl
add byte [rax], al
add byte [rsi + 0x400a], ah
add byte [rax], al
add byte [rsi + 0x400a], dh
add byte [rax], al
add dh, al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x403120
je 0x403129
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x403137
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x403134
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 0x4004], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rsi + 7], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax], dl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, byte [rax]
sub byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add byte [rax + 0x4009], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
ror byte [rcx], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400ae000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add al, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sldt word [rax + rbx + 0x40]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax + 0x18], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rax + 0x19], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add byte [rax + 0x1a], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], dl
add byte [rsi + rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], dl
call 0x4092fa
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
cwde
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb eax, dword [rax]
sal byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xb], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400b], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rbx], bl
add al, al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add al, al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg byte [rax], al
add byte [rax], al
add dword [rax], eax
adc al, 0
call 0x409492
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], ch
add byte [rax], dl
add byte [rax + 0x18], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x18], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x18], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, ch
add byte [rax], al
add byte [rcx], al
add byte [rbx], bl
add al, al
or eax, 0x61
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
cli
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rax + rbx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and dword [rcx], eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
push 0x4018
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dh
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x18], ch
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 1], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
push 0x18
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], bl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
insb byte [rdi], dx
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
ja 0x403563
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
jo 0x403582
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edi
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rax + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ecx, 0x1000001
add byte [rax], dl
add byte [rax + 0x18], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fiadd dword [rcx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
jl 0x4035ca
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb byte [rax], 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + rbx + 0x40], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4018], cl
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rbp
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + rbx + 0x40], cl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jnp 0x403624
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
nop
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + rbx + 0x40], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
ret 2
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4018], bl
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + rbx + 0x40], bl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
movabs al, byte [0x400000000004018]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + rbx + 0x40], ah
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4018], ch
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rbx], eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
lodsb al, byte [rsi]
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4018], dh
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fld dword [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov ah, 0x18
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 4
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov eax, 0x4018
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub eax, 0x1000004
add byte [rax], dl
add byte [rax + rbx + 0x40], bh
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
add al, 0
add byte [rcx], al
add byte [rax], dl
add al, al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jnp 0x40375e
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsd dword [rsi], dword ptr [rdi]
add al, 0
add byte [rcx], al
add byte [rax], dl
add al, cl
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
iretd
add al, 0
add byte [rcx], al
add byte [rax], dl
add ah, cl
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
add al, 0
add byte [rcx], al
add byte [rax], dl
add al, dl
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
fcomp dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
fcomp qword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
add eax, 0x10000
adc byte [rax], al
loopne 0x403822
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dh, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
in al, 0x18
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild word [rip + 0x10000]
adc byte [rax], al
call 0x407855
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x1000006
add byte [rax], dl
add ah, ch
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub eax, dword [rsi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
lock sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
hlt
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], 0
add byte [rcx], al
add byte [rax], dl
add al, bh
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsb byte [rsi], byte ptr [rdi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, cl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
or byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
and byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, ah
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
xor byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jmp 0x403928
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
xor al, 0x19
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
hlt
add byte [rax], al
add al, byte [rax]
add byte [rdx], bl
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
push rbp
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdi + rax], ah
add byte [rax], al
add al, byte [rax]
add byte [rdi + 0x13], ch
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bh
add byte [rax], al
add dword [rax], eax
adc al, byte [rax]
adc byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 7], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 7], dl
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
jo 0x4039eb
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], ah
add byte [rax], al
add dword [rax], eax
sbb dword [rax], eax
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rax], bh
add byte [rax], al
add byte [rax + rax], dl
clc
sub eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea eax, [rdi]
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x409a4a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000007], ah
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x2000000a], cl
add byte [rdx], bl
add byte [rax + 0x6030], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x12000007], ch
add byte [rsi], cl
add byte [rbp + 0x400c], ch
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ah, 7
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 7, 0
adc al, byte [rax]
add byte [rax], al
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x18], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1200000a], cl
add byte [rsi], cl
add al, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, 7
add byte [rax], al
and al, byte [rax]
add byte [rbx + rdx + 0x40], al
add byte [rax], al
add byte es:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], dh
or byte [rax], al
add byte [rdx], ah
add byte [rsi], cl
add dl, al
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
add ch, al
or byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
or byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
or byte [rax], al
add byte [rdx], dl
add byte [rsi], cl
add byte [rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 3], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rdx], dl
add byte [rsi], cl
add dh, ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
add dh, bl
add byte [rax], al
adc al, byte [rax]
sldt word [rax + rbx + 0x40]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, bh
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 9], bl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rcx], 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xa], dl
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
and byte [rip + 0x61], al
add byte [rax], al
mov eax, 1
add byte [rax], al
add byte [rdx + 0x12000009], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rcx + 0x220000], bh
add byte [rdx + 0x4013], ch
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, dl
or dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add byte [rbp + 0x17], bh
add byte [rax], al
add byte [rax], al
add byte [rbp], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or ecx, dword [rdx]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
xor byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dh
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
loopne 0x403c8a
add byte [rax], al
add byte [rax], al
add byte [rax + 0x13], cl
add byte [rax], al
add byte [rdx + rcx], cl
add byte [rcx], dl
add byte [rax], dl
add byte [rax + 0x18], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rbx
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xa], ch
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rdx], cl
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
cwde
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, ebp
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bl
or al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rdi], al
or eax, 0x40
add byte [rax], al
sub al, 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x12403d07
add byte [rsi], cl
add byte [rsp + rcx], dl
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rcx], dl
add bl, byte [rdx]
add byte [rax + 0x6030], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
or al, byte [rax]
add byte [rcx], dl
add bl, byte [rdx]
add byte [rax + 0x6030], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
or eax, dword [rax]
add byte [rcx], dl
add byte [rbx], bl
add byte [rcx + rax + 0x61], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, 0x1200000b
add byte [rsi], cl
add al, dl
add byte [rax], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, 0x1200000b
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xb], cl
add byte [rax], al
and al, byte [rax]
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1200000b], al
add byte [rsi], cl
add byte [rdx + 0xc], bl
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ecx, dword [rbx]
add byte [rax], al
and al, byte [rax]
add byte [rdx + 0x4013], ch
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rcx + 0x220000], ah
add byte [rsi], al
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rsp + rcx], dh
add byte [rax], al
and al, byte [rax]
add byte [rsi + 0x17], bl
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0xc], dh
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
test al, 0x30
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0xc], bh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cdq
or al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x2200000c], dh
add byte [rsi], cl
add dh, al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
int3
or al, 0
add byte [rdx], ah
add byte [rsi], cl
add byte [rcx + 0x4014], bl
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, bh
sldt word [rax]
adc dword [rax], eax
sbb eax, dword [rax]
nop
add dword [rcx], esp
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
loop 0x403e9e
add byte [rax], al
and al, byte [rax]
add byte [rdi + rdx + 0x40], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x10000007], cl
add byte [rbx], bl
add al, cl
or eax, 0x61
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp eax, 0x1100000d
add byte [rbx], bl
add byte [rax + 0x6044], al
add byte [rax], al
add byte [rax], dl
mov ebp, 0
add byte [rax], al
or eax, 0x220000
add al, ah
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte es:[rax], al
add byte [rax], al
add byte [rax], al
add dl, dl
or eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and ecx, dword [rsi]
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
test al, 0x30
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
and al, byte [rax]
add al, ah
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte es:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x1200000e], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
ror byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, dh
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
loopne 0x403f90
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
stc
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rdi], ecx
add byte [rax], al
and al, byte [rax]
add byte [rsi + 0x15], ch
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], bh
add byte [rax], al
lodsb al, byte [rsi]
sldt word [rax]
and al, byte [rax]
add byte [rbx + rdx + 0x40], al
add byte [rax], al
add byte es:[rax], al
add byte [rax], al
add byte [rax], al
add dl, bh
sldt word [rax]
adc al, byte [rax]
add byte [rbx + 0x4011], dl
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rdi], dl
or eax, dword [rax]
add byte [rdx], dl
add byte [rbx], cl
add byte [rax + 0x4009], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
sldt word [rax]
adc dword [rax], eax
sbb eax, dword [rax]
movabs al, byte [0x7000000000006101]
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x4040a2
jne 0x404096
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x404056
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4040d4
jb 0x4040da
pop rdi
jne 0x4040e3
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x4040dd
je 0x4040d9
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4040f9
jb 0x4040ff
pop rdi
jne 0x404108
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x40410b
jns 0x4040fb
outsb dx, byte gs:[rsi]
je 0x404112
jns 0x4040a2
jb 0x404106
insd dword [rdi], dx
pop rdi
jne 0x404118
insd dword [rdi], dx
jns 0x4040ae
pop rdi
pop rdi
jb 0x404114
insd dword [rdi], dx
pop rdi
jne 0x404126
insd dword [rdi], dx
jns 0x40411b
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404126
jns 0x404126
outsb dx, byte gs:[rsi]
je 0x40413d
jns 0x4040cd
insd dword [rdi], dx
imul ebp, dword [rsi + 0x2e], 0x707063
pop rdi
pop rdx
push rbx
je 0x404127
xor dword [rcx], edi
jo 0x404148
movsxd rsp, dword gs:[rbp + 0x77]
imul esi, dword [rbx + 0x65], 0x6e6f635f
jae 0x404160
jb 0x404163
movsxd rsi, dword [rax + rax + 0x5f]
pop rdx
push rbx
je 0x404142
xor dword [rbx], esi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x404161
jb 0x40416c
add byte [rdi + 0x5a], bl
push rbx
je 0x404157
imul esp, dword ss:[rdi + 0x6e], 0x65726f
pop rdi
pop rdx
push rbx
je 0x404164
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x40418b
movsxd rdi, dword [rax + 0x78]
xor r14b, byte [rcx]
pop rdi
pop rdi
jne 0x4041a6
je 0x40419b
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x5f]
jo 0x4041b2
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x5a5f0045
push rbx
je 0x40419a
xor dword [rax], esi
jb 0x4041b5
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x4041ac
xor dword [rcx], esi
je 0x4041d6
jns 0x4041c5
je 0x4041d7
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x4041bf
xor dword [rax], esi
outsd dx, dword fs:[rsi]
jo 0x4041ee
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x4041b7
xor eax, 0x65676572
js 0x4041ec
movsxd rbp, dword [rdi + 0x6e]
jae 0x404206
outsb dx, byte [rsi]
je 0x404209
xor rax, 0x73616369
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x4041d6
xor eax, 0x65676572
js 0x40420b
movsxd rbp, dword [rdi + 0x6e]
jae 0x404225
outsb dx, byte [rsi]
je 0x404228
outsb dx, byte ss:[rsi]
outsd dx, dword [rsi]
jae 0x404230
jae 0x404203
add byte [rdi + 0x5a], bl
push rbx
je 0x4041f6
xor eax, 0x65676572
js 0x40422b
movsxd rbp, dword [rdi + 0x6e]
jae 0x404245
outsb dx, byte [rsi]
je 0x404248
cmp byte [rdi + 0x70], r13b
je 0x404244
insd dword [rdi], dx
imul edi, dword [rdx + 0x65], 0x5a5f0045
push rbx
je 0x404218
xor eax, 0x65676572
js 0x40424d
movsxd rbp, dword [rdi + 0x6e]
jae 0x404267
outsb dx, byte [rsi]
je 0x40426a
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x404265
add byte [r15 + 0x5a], r11b
push rbx
je 0x404239
xor eax, 0x65676572
js 0x40426e
movsxd rbp, dword [rdi + 0x6e]
jae 0x404288
outsb dx, byte [rsi]
je 0x40428b
xor qword [rax], r14
push r11
movsxd rsi, dword [rdx + 0x69]
jo 0x404299
add byte [r15 + 0x5a], r11b
push rbx
je 0x40425e
xor eax, 0x65676572
js 0x404293
movsxd rbp, dword [rdi + 0x6e]
jae 0x4042ad
outsb dx, byte [rsi]
je 0x4042b0
xor rax, 0x69736162
movsxd rax, dword [rbp]
pop rdi
pop rdx
push rbx
je 0x40427d
xor eax, 0x65676572
js 0x4042b2
movsxd rbp, dword [rdi + 0x6e]
jae 0x4042cc
outsb dx, byte [rsi]
je 0x4042cf
cmp byte [rbp + 0x78], r12b
je 0x4042c7
outsb dx, byte [rsi]
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x40429f
xor eax, 0x65676572
js 0x4042d4
movsxd rbp, dword [rdi + 0x6e]
jae 0x4042ee
outsb dx, byte [rsi]
je 0x4042f1
xor r12, qword [rcx + 0x77]
imul eax, dword [rbp], 0x5f
pop rdx
push rbx
je 0x4042bc
xor eax, 0x65676572
js 0x4042f1
movsxd rbp, dword [rdi + 0x6e]
jae 0x40430b
outsb dx, byte [rsi]
je 0x40430e
xor al, 0x67
jb 0x404305
jo 0x4042e7
add byte [rdi + 0x5a], bl
push rbx
je 0x4042da
xor eax, 0x65676572
js 0x40430f
movsxd rbp, dword [rdi + 0x6e]
jae 0x404329
outsb dx, byte [rsi]
je 0x40432c
xor rax, 0x65726765
jo 0x404306
add byte [rdi + 0x5a], bl
push rbx
je 0x4042f9
xor eax, 0x65676572
js 0x40432e
movsxd rbp, dword [rdi + 0x6e]
jae 0x404348
outsb dx, byte [rsi]
je 0x40434b
xor qword [rbx], r14
insd dword [rdi], dx
je 0x404342
push 0x6665645f
jne 0x404353
je 0x40432e
add byte [rdi + 0x5a], bl
push rbx
je 0x404321
xor eax, 0x65676572
js 0x404356
movsxd rbp, dword [rdi + 0x6e]
jae 0x404370
outsb dx, byte [rsi]
je 0x404373
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40436a
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x404349
xor eax, 0x65676572
js 0x40437e
movsxd rbp, dword [rdi + 0x6e]
jae 0x404398
outsb dx, byte [rsi]
je 0x40439b
xor qword [rbx], r14
insd dword [rdi], dx
je 0x404392
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x404371
xor eax, 0x65676572
js 0x4043a6
movsxd rbp, dword [rdi + 0x6e]
jae 0x4043c0
outsb dx, byte [rsi]
je 0x4043c3
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4043ba
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
ja 0x4043a6
add byte [rdi + 0x5a], bl
push rbx
je 0x404399
xor eax, 0x65676572
js 0x4043ce
movsxd rbp, dword [rdi + 0x6e]
jae 0x4043e8
outsb dx, byte [rsi]
je 0x4043eb
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4043e2
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
ja 0x4043ce
add byte [rdi + 0x5a], bl
push rbx
je 0x4043c1
xor eax, 0x65676572
js 0x4043f6
movsxd rbp, dword [rdi + 0x6e]
jae 0x404410
outsb dx, byte [rsi]
je 0x404413
cmp qword [rbp + 0x61], r13
je 0x404409
push 0x796e615f
add byte [r15 + 0x5a], r11b
push rbx
je 0x4043e4
xor eax, 0x65676572
js 0x404419
movsxd rbp, dword [rdi + 0x6e]
jae 0x404433
outsb dx, byte [rsi]
je 0x404436
xor qword [rbp*2 + 0x68637461], r14
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
je 0x40442f
outsb dx, byte [rsi]
jne 0x40443f
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x40440d
xor eax, 0x65676572
js 0x404442
movsxd rbp, dword [rdi + 0x6e]
jae 0x40445c
outsb dx, byte [rsi]
je 0x40445f
xor qword [rsi], r14
insd dword [rdi], dx
je 0x404456
push 0x6e6f635f
je 0x404463
outsb dx, byte [rsi]
jne 0x40446c
jne 0x404472
add byte [r15 + 0x5a], r11b
push rbx
je 0x404438
xor eax, 0x65676572
js 0x40446d
movsxd rbp, dword [rdi + 0x6e]
jae 0x404487
outsb dx, byte [rsi]
je 0x40448a
xor qword [rsi], r14
insd dword [rdi], dx
je 0x404481
push 0x6572705f
jbe 0x404484
jbe 0x404489
imul ebp, dword [rbp + rax*2], 0x534e5a5f
je 0x404463
xor eax, 0x65676572
js 0x404498
movsxd rbp, dword [rdi + 0x6e]
jae 0x4044b2
outsb dx, byte [rsi]
je 0x4044b5
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x4044b6
je 0x4044ab
jne 0x4044be
je 0x404499
add byte [rdi + 0x5a], bl
push rbx
je 0x40448c
xor eax, 0x65676572
js 0x4044c1
movsxd rbp, dword [rdi + 0x6e]
jae 0x4044db
outsb dx, byte [rsi]
je 0x4044de
xor qword [rax], r14
outsw dx, word [rsi]
jb 0x4044df
je 0x4044d4
jae 0x4044dc
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x4044b1
xor eax, 0x65676572
js 0x4044e6
movsxd rbp, dword [rdi + 0x6e]
jae 0x404500
outsb dx, byte [rsi]
je 0x404503
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x404504
je 0x4044f9
outsb dx, byte [rsi]
outsd dx, dword [rsi]
pop rdi
movsxd rbp, dword [rdi + 0x70]
jns 0x4044e7
add byte [rdi + 0x5a], bl
push rbx
je 0x4044da
xor eax, 0x65676572
js 0x40450f
movsxd rbp, dword [rdi + 0x6e]
jae 0x404529
outsb dx, byte [rsi]
je 0x40452c
xor qword [rdi], r14
outsw dx, word [rsi]
jb 0x40452d
je 0x404522
imul si, word [rdx + 0x73], 0x5f74
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
jns 0x404513
add byte [rdi + 0x5a], bl
push rbx
je 0x404506
xor eax, 0x65676572
js 0x40453b
movsxd rbp, dword [rdi + 0x6e]
jae 0x404555
outsb dx, byte [rsi]
je 0x404558
xor qword [rbx], r14
jb 0x40455d
outsd dx, dword [rsi]
jb 0x40454d
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x40455a
add byte [r15 + 0x5a], r11b
push rbx
je 0x40452e
xor eax, 0x65676572
js 0x404563
movsxd rbp, dword [rdi + 0x6e]
jae 0x40457d
outsb dx, byte [rsi]
je 0x404580
xor qword [rcx], r14
jb 0x404585
outsd dx, dword [rsi]
jb 0x404575
movsxd rsi, dword [rcx + rdi*2 + 0x70]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x404554
xor eax, 0x65676572
js 0x404589
movsxd rbp, dword [rdi + 0x6e]
jae 0x4045a3
outsb dx, byte [rsi]
je 0x4045a6
xor qword [rdx], r14
jb 0x4045ab
outsd dx, dword [rsi]
jb 0x40459b
jae 0x4045a2
jo 0x4045a7
add byte [r15 + 0x5a], r11b
push rbx
je 0x40457b
xor eax, 0x65676572
js 0x4045b0
movsxd rbp, dword [rdi + 0x6e]
jae 0x4045ca
outsb dx, byte [rsi]
je 0x4045cd
xor qword [rbx], r14
jb 0x4045d2
outsd dx, dword [rsi]
jb 0x4045c2
movsxd rbp, dword [rbx + 0x72]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x4045a3
xor eax, 0x65676572
js 0x4045d8
movsxd rbp, dword [rdi + 0x6e]
jae 0x4045f2
outsb dx, byte [rsi]
je 0x4045f5
xor qword [rcx], r14
jb 0x4045fa
outsd dx, dword [rsi]
jb 0x4045ea
jb 0x4045ef
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4045c9
xor eax, 0x65676572
js 0x4045fe
movsxd rbp, dword [rdi + 0x6e]
jae 0x404618
outsb dx, byte [rsi]
je 0x40461b
xor qword [rcx], r14
jb 0x404620
outsd dx, dword [rsi]
jb 0x404610
jo 0x404614
jb 0x40461a
outsb dx, byte [rsi]
add byte [r15 + 0x5a], r11b
push rbx
je 0x4045ef
xor eax, 0x65676572
js 0x404624
movsxd rbp, dword [rdi + 0x6e]
jae 0x40463e
outsb dx, byte [rsi]
je 0x404641
xor qword [rcx], r14
jb 0x404646
outsd dx, dword [rsi]
jb 0x404636
jb 0x40463b
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x404615
xor eax, 0x65676572
js 0x40464a
movsxd rbp, dword [rdi + 0x6e]
jae 0x404664
outsb dx, byte [rsi]
je 0x404667
xor qword [0x726f7272], r14
pop rdi
jb 0x404664
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40463e
xor eax, 0x65676572
js 0x404673
movsxd rbp, dword [rdi + 0x6e]
jae 0x40468d
outsb dx, byte [rsi]
je 0x404690
xor qword [rcx], r14
jb 0x404695
outsd dx, dword [rsi]
jb 0x404685
jb 0x404689
outsb dx, byte [rsi]
add byte gs:[r15d + 0x5a], r11b
push rbx
je 0x404664
xor eax, 0x65676572
js 0x404699
movsxd rbp, dword [rdi + 0x6e]
jae 0x4046b3
outsb dx, byte [rsi]
je 0x4046b6
xor qword [rcx], r14
jb 0x4046bb
outsd dx, dword [rsi]
jb 0x4046ab
jae 0x4046be
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40468a
xor eax, 0x65676572
js 0x4046bf
movsxd rbp, dword [rdi + 0x6e]
jae 0x4046d9
outsb dx, byte [rsi]
je 0x4046dc
xor qword [rip + 0x6f727265], r14
jb 0x4046d1
jb 0x4046dc
jo 0x4046de
je 0x4046c1
add byte [rdi + 0x5a], bl
push rbx
je 0x4046b4
xor eax, 0x65676572
js 0x4046e9
movsxd rbp, dword [rdi + 0x6e]
jae 0x404703
outsb dx, byte [rsi]
je 0x404706
xor qword [rsi], r14
jb 0x40470b
outsd dx, dword [rsi]
jb 0x4046fb
movsxd rbp, dword [rdi + 0x6d]
jo 0x40470d
js 0x40470d
je 0x40471f
add byte [r15 + 0x5a], r11b
push rbx
je 0x4046df
xor eax, 0x65676572
js 0x404714
movsxd rbp, dword [rdi + 0x6e]
jae 0x40472e
outsb dx, byte [rsi]
je 0x404731
xor qword [rcx], r14
jb 0x404736
outsd dx, dword [rsi]
jb 0x404726
jae 0x40473d
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40470c
pop rdi
pop rdi
je 0x40473b
imul ebp, dword [rsp + rcx*2 + 0x31], 0x5f535f39
imul ebp, dword [rsi + 0x76], 0x64696c61
pop rdi
jae 0x404760
je 0x404754
pop rdi
imul esp, dword [rbp + rax*2], 0x334c5a5f
imul ebp, dword [rsi + 0x66], 0x4c5a5f00
xor esp, dword [rbp + 0x70]
jae 0x404704
pop rdi
pop rdx
xor r14b, byte [rax + 0x69]
add byte [rdi + 0x5a], bl
xor r13, qword [rbp + 0x6f]
add byte fs:[rdi + 0x5a], bl
xor al, 0x6d
js 0x404789
add byte [rdi + 0x5a], bl
xor al, 0x31
pop rdi
pop rdi
jae 0x404798
je 0x404790
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x40479e
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x4047b4
jb 0x4047b7
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x4047cc
pop rdi
pop r15
insd dword [rdi], dx
jb 0x4047bf
outsb dx, byte [rsi]
add byte fs:[rdi + 0x5f], bl
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404810
jns 0x404810
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404821
jns 0x404821
jae 0x404838
jb 0x40483b
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
xor eax, 0x65776f70
jb 0x404843
imul eax, dword [rax], 0x6e697270
je 0x404848
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x375a5f00
jo 0x404867
movsxd rsp, dword gs:[rcx + 0x6c]
movsxd rsi, dword [rsi]
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdx
push rbx
je 0x404843
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404887
movsxd rsp, dword [rbp + 0x43]
xor dword [rbp + 0x52], eax
push rbx
je 0x404860
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x40489f
movsxd rbx, dword [rdi + 0x73]
je 0x4048ad
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4048a8
je 0x4048bd
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
add byte [r15 + 0x5a], r11b
push rbx
je 0x404892
xor ebp, dword [rbp + 0x65]
jb 0x4048d8
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x4048e3
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x34454533
jae 0x40494d
insd dword [rdi], dx
add byte [rdi + 0x5f], bl
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x40496a
jb 0x40496d
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x40495f
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x404980
jae 0x404910
pop rdi
pop rdx
xor eax, 0x766c6f73
jbe 0x40491a
pop rdi
pop rdx
xor esi, dword [rdx + 0x6e]
imul eax, dword fs:[rax], 0x534e5a5f
je 0x404959
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x40499d
movsxd rsp, dword [rbp + 0x37]
pop rdi
pop r15
imul ebp, dword [rsi + 0x69], 0x4b524574
push rbx
je 0x40497c
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x4049bb
movsxd rbx, dword [rdi + 0x73]
je 0x4049c9
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4049c4
je 0x4049d9
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x4049c4
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x404a2b
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x404a30
pop rdi
je 0x404a38
js 0x404a3e
je 0x404a17
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x404a1b
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404a5f
movsxd rsp, dword [rbp + 0x44]
xor dword [rbp + 0x76], eax
add byte [rdi + 0x5a], bl
push rbx
je 0x404a3b
pop rdi
pop rdi
je 0x404a6a
imul ebp, dword [rsp + rsi + 0x5f], 0x49646f4d
insd dword [rdi], dx
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x45316d4c]
insd dword [rdi], dx
xor byte [rbp + 0x4c], al
xor dword [rbp + 0x4c], eax
xor dword [rbp + 0x45], eax
pop rdi
pop rdi
movsxd rsp, dword [rcx + 0x6c]
movsxd rax, dword [rbp + 0x6d]
add byte [rdi + 0x5a], bl
push rbx
je 0x404a71
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x404ac6
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x404aee
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x404b02
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x404b17
pop rdi
jae 0x404b2d
jb 0x404b30
add byte [rdi + 0x5a], bl
push rbx
je 0x404afa
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404b39
movsxd rbx, dword [rdi + 0x73]
je 0x404b47
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404b42
je 0x404b57
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rbp + 0x76], r8d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
xor al, 0x72
jbe 0x404b10
pop rdi
pop rdx
xor esp, dword [rcx + 0x64]
push rdx
imul ebp, dword [rcx], 0x4d545f5f
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
jae 0x404b9a
pop rdi
push 0x6c646e61
add byte gs:[rcx], dh
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x404b7c
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404bc0
movsxd rsp, dword [rbp + 0x39]
pop rdi
pop r15
je 0x404bd7
insb byte [rdi], dx
jbe 0x404ba6
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dword [rax], edi
add byte [rdi + 0x5a], bl
push rbx
je 0x404bb4
pop rdi
pop rdi
je 0x404be3
imul ebp, dword [rbp + rsi + 0x5f], 0x646f6d5f
insd dword [rdi], dx
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
insd dword [rdi], dx
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor byte [rbp + 0x45], al
push r12
pop rdi
push rbx
xor dword [rdi], ebx
pop rdi
pop rdx
xor al, 0x6d
jne 0x404c1b
je 0x404c1a
imul eax, dword [rax], 0x534e5a5f
je 0x404bea
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404c2e
movsxd rsp, dword [rbp + 0x44]
xor al, byte [rbp + 0x76]
add byte [rdi + 0x5a], bl
push rbx
je 0x404c04
xor ebp, dword [rbp + 0x65]
jb 0x404c4a
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x404c55
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x63454533
insb byte [rdi], dx
jbe 0x404c5c
pop rdi
pop rdx
push rbx
je 0x404c9a
pop rdi
pop rdi
je 0x404cc9
imul ebp, dword [rsp + rsi + 0x5f], 0x49646f4d
insd dword [rdi], dx
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
insd dword [rdi], dx
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor byte [rbp + 0x4c], al
xor dword [rbp + 0x4c], eax
xor dword [rbp + 0x45], eax
pop rdi
pop rdi
movsxd rsp, dword [rcx + 0x6c]
movsxd rax, dword [rbp + 0x6d]
add byte [rdi + 0x5f], bl
jae 0x404d11
pop rdi
jae 0x404d15
jb 0x404d18
add byte [rdi + 0x5f], bl
jae 0x404d1d
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
movsxd rax, dword [r13 + 0x44]
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404d12
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404d56
movsxd rsp, dword [rbp + 0x63]
insb byte [rdi], dx
jbe 0x404cf4
pop rdi
pop rdx
push rbx
je 0x404d2c
insd dword [rdi], dx
imul ebp, dword [rsi + 0x49], 0x4b524569
push rsp
pop rdi
push rbx
xor bl, byte [rdi + 0x53]
xor bl, byte [rdi]
pop rdi
pop rdx
push rbx
je 0x404d48
pop rdi
pop rdi
je 0x404d77
imul ebp, dword [rbp + rsi + 0x5f], 0x646f6d5f
insd dword [rdi], dx
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x45316d4c]
insd dword [rdi], dx
xor byte [rbp + 0x45], al
push r12
pop rdi
push rbx
xor dword [rdi], ebx
pop rdi
pop rdx
push rbx
je 0x404d6d
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404db1
movsxd rsp, dword [rbp + 0x37]
pop rdi
pop r15
imul bp, word [rsi + 0x69], 0x7645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dword [rax], edi
add byte [rcx + rbp*2 + 0x73], ah
je 0x404d6a
pop rdi
pop rdx
push rbx
je 0x404da2
xor ebp, dword [rbp + 0x65]
jb 0x404de8
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x404df3
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x43454533
xor dword [rbp + 0x6d], eax
add byte [rdi + 0x5a], bl
push rbx
je 0x404e37
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404e76
movsxd rbx, dword [rdi + 0x73]
je 0x404e84
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404e7f
je 0x404e94
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [r13 + 0x50], eax
movsxd rdx, dword [r10 + 0x4b]
push rbx
xor ebx, dword [rdi + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x404eb2
add byte [rdi + 0x5a], bl
push rbx
je 0x404e8a
xor ebp, dword [rbp + 0x65]
jb 0x404ed0
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x404edb
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x43454533
xor al, byte [rbp + 0x6d]
add byte [rdi + 0x5a], bl
push rbx
movsxd rax, dword [r13 + 0x43]
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
js 0x404f79
pop rdi
jo 0x404f69
jb 0x404f79
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
outsb dx, byte [rsi]
jae 0x404f21
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x404f8f
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x404fa2
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
pop rdi
pop rdx
push rbx
je 0x404f71
xor ebp, dword [rbp + 0x65]
jb 0x404fb7
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x404fc2
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x31454533
xor dword [rdi + 0x4d], ebx
pop rdi
outsb dx, byte gs:[esi]
pop rdi
jb 0x405030
outsb dx, byte [rsi]
jbe 0x404fd4
pop rdi
pop rdx
push rbx
je 0x40500b
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x40504f
movsxd rsp, dword [rbp + 0x43]
xor al, byte [rbp + 0x52]
push rbx
je 0x405028
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x405067
movsxd rbx, dword [rdi + 0x73]
je 0x405075
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x405070
je 0x405085
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
add byte [r13 + 0x61], r13b
imul ebp, dword [rsi], 0x6f67
jae 0x4050a7
insd dword [rdi], dx
je 0x405092
add byte [rsi], ch
jae 0x4050aa
jb 0x4050ac
add byte [rsi], ch
jae 0x4050a6
jae 0x4050b4
jb 0x4050b6
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x4050b7
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x4050c5
outsb dx, byte cs:[esi]
jne 0x405093
jne 0x4050d1
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x4050a1
push 0x687361
jns 0x4050ea
jae 0x4050f7
insd dword [rdi], dx
add byte [rsi], ch
jns 0x4050f2
jae 0x4050fa
jb 0x405088
outsb dx, byte cs:[esi]
jne 0x4050bb
jbe 0x4050f4
jb 0x405104
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x4050c8
jbe 0x405101
jb 0x405111
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x40510c
insb byte [rdi], dx
jns 0x40511b
add byte [rsi], ch
jb 0x405116
insb byte [rdi], dx
jo 0x405122
je 0x4050b8
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x4050f1
outsd dx, dword [esi]
je 0x4050c7
je 0x40512f
js 0x405140
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x405145
je 0x40513b
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x40515e
jo 0x405172
pop rdi
je 0x405162
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x405170
jns 0x405111
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x40518c
jns 0x40511d
push 0x63
jb 0x405122
jns 0x405194
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x40519e
je 0x405134
je 0x40519a
add byte [rsi], ch
jae 0x4051b1
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x405148
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, bh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, 0x4004
add byte [rax], al
add byte [rax + 4], bh
add byte [rax], al
add byte [rsi + 2], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0x600000000000000]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], dl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
or byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], 0
add byte [rax], al
add byte [rax], al
add byte [rip + 0x19000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4009], ch
add byte [rax], al
add byte [rax + 9], ch
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
ror byte [rcx], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
loopne 0x4054ac
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx + 0xd], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x600000001000000], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rbx + 0x40], al
add byte [rax], al
add byte [rax], al
add byte [rax + rbx], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x18], dl
add byte [rax], al
add byte [rax], al
add byte [rax + 0x18], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
jo 0x4055b3
add byte [rax], al
add byte [rax], al
add byte [rax + 0x19], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd qword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1a], dl
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1a], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rsi + rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
call 0x405692
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sub eax, 0x60
add byte [rax], al
clc
sub eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6030], bl
add byte [rax], al
add byte [rax + 0x30], bl
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
test al, 0x30
add byte [rax], al
add byte [rax], al
add byte [rax], al
or ch, bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x1000001
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x30], ch
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub dl, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xf], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
