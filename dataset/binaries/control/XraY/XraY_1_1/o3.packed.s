call 0x4013e0
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x4011f8
add ebx, ebx
je 0x4011ae
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4011e6
cmp rbp, -4
ja 0x4011e6
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4011ce
add ecx, 4
mov dl, byte [rax]
je 0x4011f6
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4011e6
ret
cld
pop r11
cmp r8b, 2
je 0x40120e
jmp 0x40128b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40121e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401206
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401236
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401223
sub eax, 3
jb 0x401254
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40128b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x40127b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401279
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401268
cmp rbp, -0xd00
adc ecx, eax
call 0x4011ba
jmp 0x40120e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401364
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401302
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40134e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401321
push 0x3a707474
jne 0x40137a
js 0x40133a
jae 0x401374
outsb dx, byte cs:[rsi]
je 0x401333
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4013a1
jb 0x401393
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4013be
jb 0x4013d1
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x212194
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x212194
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x40129c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4013c7
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401375
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f146f
jb 0x401487
movsxd rbp, dword [rdi]
jae 0x401481
insb byte [rdi], dx
js 0x401487
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401467
cmp rsi, rcx
jae 0x40146f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x40144e
cmp al, 0x8f
ja 0x40144e
cmp byte [rsi - 2], 0xf
je 0x401454
sub al, 0xe8
jg 0x401451
push rdi
cmp al, 1
ja 0x40143c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40143f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x40146c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4014c3
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1941
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401507
mov al, 0xa
jmp 0x401507
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4014e3
inc ebx
mov al, 0
jmp 0x40150b
mov al, 2
jmp 0x40150b
mov al, 3
jmp 0x40150b
mov al, 0x3c
jmp 0x40150b
push rcx
rcr ah, 1
fstp st(7)
jle 0x40154c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40155e
jg 0x401550
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6cd3
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4015aa
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6727
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4015b2
cmp esi, 0x21585055
jne 0x4015b6
jge 0x4015a8
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4015ab
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4015af
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40165b
pop rcx
or al, 0x3b
jb 0x401661
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4015d3
jmp 0x4015d5
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661516
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5375e
in eax, dx
jg 0x40160d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401653
mov bh, 0x2a
add edi, 0x10
jmp 0x401650
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40168d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4016c9
jne 0x4016e0
fstpnce st(6), st(0)
jle 0x4016a9
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4016df
jrcxz 0x401713
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b677
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401792
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401752
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295d27
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4017c5
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40175f
and ecx, 7
or al, 0xeb
jae 0x4017ca
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x4017ff
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40183d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x4017f6
push rax
call 0xffffffff868d14e3
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401800
std
cmp edi, esi
xchg eax, edi
jle 0x401855
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95de1
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401853
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401841
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40186a
js 0x4018aa
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40193c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2b77
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40195d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401962
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21414
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4018f0
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
xor ecx, dword [rdi]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + 0x92a08a], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dil, dil
movabs eax, dword [0x2000008ab000019]
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401a16
je 0x401a1f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x4019e8
mov dh, 0x7d
jbe 0x4019e7
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa9
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401a20
sahf
sahf
add al, 0
cwde
add eax, 0x3f2c000
insb byte [rdi], dx
wait
add al, 5
add dl, ah
stc
add cl, bh
add dword [rax], ecx
add byte [rax], bl
or byte [rcx], cl
add al, bl
jl 0x401a04
jns 0x401a06
or al, byte [rax]
or eax, dword [rax]
mov eax, 0x7c813e0a
or byte [rax + rax], 0xe0
or eax, 0x9f0c2000
add byte [rax], dh
verr word [rdx + rbx]
or dword [rsp + rbx + 0x17102f60], ebp
add al, 0xf2
add edx, esi
adc dword [rax], eax
cmp al, 0x1b
adc al, byte [rax]
enter -0x1c0, 0
stc
adc eax, dword [rax]
jl 0x401a59
adc al, 0
call 0xffffffff9f607a6f
adc eax, 0x16f800
add byte [rsi], ch
mov dl, 0x4d
and byte [rdi], bl
add byte [rax], cl
sbb byte [rdi + 0x2f], al
retf
add dword [rcx], ebx
xor byte [rdi], dl
sbb al, byte [rax]
mov al, 0x4d
and byte [rdi + 0x20], cl
sbb eax, dword [rax]
loopne 0x401a83
mov fs, esp
fst qword [rbx + rdx + 0x41701]
int1
dec dword [rcx*2 + 0x1bc595c3]
mov edi, 0x50029719
and al, 0x83
fmul dword [rsi]
sbb edx, dword [rax + 0x320c90d8]
rol byte cs:[rdi + rbx*2 + 0x10], 1
sbb esp, ebp
mov dl, 0xa7
add dword [rdi], edx
push rbx
xor bl, r8b
xchg eax, ebp
jp 0x401ae4
lock xchg byte [rax], cl
mov ebx, 0xa5972212
xlatb
sbb dword [rsp + rbx + 0x20a7ae6c], 0xf
idiv dword [rcx - 0xe]
in al, 0x20
xor byte [rsi + rcx], cl
add dword [rcx + rax], esi
fiadd word ds:[rbp + 0x4344a83c]
outsd dx, dword [rsi]
sbb esp, dword [rax + rdx*4 - 0x3f]
or r10, qword [rdi]
movsxd rsp, dword [rax]
and byte [rdi], ah
sbb ecx, dword [rip + 0x100184bf]
cmp ebx, esi
push rax
ret 0x7f05
cdq
lahf
js 0x401afe
and dword [rdi + rsi*2 + 0x5717a721], ecx
retf 0x1d88
mov r11b, 0xb0
jmp qword [rbx + 0x57]
in al, dx
mov byte [rdi + 0x57], 0xdc
adc al, 0xca
cwde
or qword [r15 - 0x13], r15
push qword [rsi]
pop rsi
sbb edi, ebp
add al, byte [rdi - 0x31]
pop rbx
add al, 0x9f
and byte [rdx + 0x9401ba1], dh
adc al, byte [rdi]
adc byte [rax], ah
or dword [rsi + rsi*2], 0x76
adc al, 0xe0
xor cl, al
add ah, byte [rax]
and byte [rdx], bl
sbb dword [rbp + 0x45ff20c], 0xe
sub dh, byte [rdi + 0x30]
fcom dword [r13 + 0x3f00029d]
push rbx
or dword [rip - 0x58eeca2e], 0xffffffc0
ja 0x401b9a
cmp esp, ebp
retf 0x22
imul edi, dword [rdi - 0x637c6cef], 0x3d
rol dword [rsi], cl
jne 0x401b94
sbb byte [rax + 0x19b06421], dh
jge 0x401af5
adc eax, 0xb2864219
sub dh, byte [rax - 0x86a13f5]
add ebp, dword [rdi]
push 0x17
or byte [rcx], bl
xchg byte [rdi + 0x1d85e1ae], cl
enter 0xb70, 0x77
in eax, dx
add ecx, dword [rdi - 0x4f]
fcomi st(3)
add dl, byte [rbx + 0x311b1b01]
pop rbp
add ah, bh
leave
mov byte [rbx], dl
or dword [rdi + rbx*4], eax
add al, 0xc0
nop
xor dword [rdi + 0x18], 4
sub edx, dword [rdi]
mov dword [rip + 0x4c7b0b2], 0x18396f59
add ecx, dword [rax + 0x10]
lock adc byte [rax + 0x653b0641], dl
outsd dx, dword [rsi]
add byte [rdx - 0x59a10613], dl
cmpsd dword [rsi], dword ptr [rdi]
jns 0x401bc0
enter -0x379c, 6
sbb eax, dword [rbp - 0x6da047e9]
fadd dword [r13 - 0x5de64fe4]
mov edi, 0x72760cd3
sbb byte [rdi - 0x22e8c6f0], dh
cmp al, 0x7b
shl dword [rdx], 1
push rdi
sbb byte [rbp + 1], cl
xlatb
insd dword [rdi], dx
add eax, 0xfc90ec0b
sbb eax, dword [rax]
jns 0x401bf5
pop rdi
leave
or dword [rdi - 0x64e86a50], eax
xchg eax, edi
sbb byte [rdx - 0x62], al
popfq
test byte [rdi - 0x18], bh
add dword [rdi - 0x50], ebx
xchg dword [rax - 0x11401bdf], r10d
cmp ebx, esp
xchg eax, esp
jl 0x401bb9
sbb cl, byte [rsi + rax + 0x3f]
fsub dword [rcx]
insd dword [rdi], dx
test dword [r15], r10d
loope 0x401c06
jmp 0xd9fb433
pop r13
pop rcx
pushfq
outsd dx, dword [rsi]
popfq
jle 0x401c0a
and byte [rbx + 0x181800ef], al
movsxd rsi, dword [rdx + 0x74]
jae 0x401c33
mov edi, 0x66cd85f5
movsxd rax, dword cs:[rbx + 0x5f]
push r10
pop rdi
push r11
push rsp
or edi, esi
jg 0x401cbe
inc dword [rax]
jb 0x401cbe
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401c89
fstp xword [rdi + 0x7b]
jnp 0x401cd1
outsd dx, dword [rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x401cd9
jne 0x401cf5
outsd dx, dword [rsi]
mov edi, 0x6df6fec0
jo 0x401cf2
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bp, word [rsi + 0x35], 0xf46e
mov bh, 0x69
or byte [rdx + 0x72], dh
jns 0x401cfd
jb 0x401d1b
mov dword [rsi], eax
int3
jge 0x401c62
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x401ce2
or eax, 0x9dadd5f
jmp 0x401ce0
je 0x401ce3
insd dword [rdi], dx
adc bl, byte [rdi - 0x49208f90]
outsd dx, dword [rsi]
mov edi, 0x534e5a27
je 0x401d00
sub eax, 0x31787863
add byte [rdx], dh
jae 0x401d3c
movsxd rbx, dword [rdi - 0x12]
lodsd eax, dword [rsi]
mov ebp, 0x1e72a36d
movsxd rbx, dword [r9d]
adc ah, byte [rbx + 0x68]
scasd eax, dword [rdi]
out dx, al
insd dword [rdi], dx
imul edi, dword [rcx], 0x40
jae 0x401cfd
push r11
add al, 0x45
xor al, byte [r13 + 0x50]
movsxd rdx, dword [r10 - 0x45]
pop rbx
sti
push r11
xor ebx, dword [rdi + 0x2e]
rcr byte [rbx], 1
test eax, 0xdc313448
in eax, dx
jae 0x401cc8
pop rdi
cmp dword [rcx + 0x74], esp
outsd dx, dword [rsi]
imul ebp, dword [rcx + rbp*2 - 0x24e1f286], 0x5fe6df2d
outsb dx, byte [rsi]
push rbp
jne 0x401d88
wrmsr
imul ebp, dword [rcx + 0x33], 0x7cd6b7db
adc byte [rax + 0x72], dh
outsd dx, dword [rsi]
jo 0x401d71
xor dword [rdx + 0x68], ebp
out dx, al
mov ch, 0x76
cmp byte [rsi], r15b
sbb al, 0x39
std
fistp dword [rdi + 0x2b]
jbe 0x401d90
xor dword [rcx], edi
adc al, 0x50
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
test ebp, edi
scasd eax, dword [rdi]
adc byte [rdi], bl
xor eax, 0x766c6f73
and byte gs:[rdi + 0x4c], al
test dword [rbx - 0x47], 0x5f5a8f4c
pop r15
insd dword [rdi], dx
jb 0x401cfd
adc ah, byte [rdi]
cmp edi, dword [rdi + rdi*8 + 0x4d415246]
pop r15
and r11b, byte [rdx - 0x60b1b8f5]
in al, dx
rcl dword [rsi + 0x48204855], 0x44
push rdx
push rbx
or r15b, r13b
outsd dx, dword [rsi]
pop rbp
pop rdi
push rsp
sub byte [r9 + 0x64], r9b
fucomp st(6)
mov edx, 0x72fc1085
mov esp, 0x454e5944
retf
scasb al, byte [rdi]
adc eax, 0x7035a5de
outsd dx, dword [rsi]
ja 0x401db1
in al, dx
sal byte [rdi], 1
jo 0x401e2c
sub eax, 0x110bb82c
movsxd rsi, dword [rsi + 0x32]
and ah, byte [rbx - 0x68]
movabs eax, dword [0x163c136d670fc19a]
mov edi, 0x5f764a8b
push rdx
insb byte [rdi], dx
jae 0x401da6
fild qword [rip + 0x73832438]
insb byte [rdi], dx
push rax
jbe 0x401e3b
xchg eax, edi
loope 0x401db7
cli
pop r8
pop rax
pop rdi
xor esp, dword [rdx]
or dword [rbx], ecx
fnstsw dword [rbx + 0x6d]
xor esi, dword [rdx - 0x72]
xor qword [rax + 0x66], r9
mov al, 0x6c
xchg byte [rdi + 0x5f2c60f6], cl
xor ch, byte [rsi]
add dword [rax + rsi*2 - 0x2b], eax
xor bl, dh
mov dl, 0xdb
je 0x401e91
jns 0x401e95
imul ebx, dword [rcx], 0x46
add esp, dword [rsi + 0x68]
or ecx, dword [rcx]
ja 0x401e84
xor byte [rsi - 0x1ca7b7b3], ah
push r10
xchg eax, edi
shr dword [rbp + 0x53d871a1], 1
xor dword [rbx], esi
js 0x401e17
cld
jbe 0x401ea1
mov sil, 0x1d
fsub qword [rbp + 0x37]
xor ch, byte [rsi]
xor byte [rbx + 0x70], cl
movsd dword [rdi], dword ptr [rsi]
mov byte [rip + 0x38634536], 0x33
sbb byte [rcx], cl
ja 0x401ede
xor al, 0x49
pop rdx
xor dword [r13 + 0x23], eax
and al, 0x3c
outsb dx, byte es:[rsi]
pop rsi
not byte [rip + 0x6ddd6b21]
test byte [rcx + 0x5f], ah
js 0x401ebe
sbb dword [rbp + 0x5d657257], esi
push r12
shl dword [rbp - 0x27da4961], cl
or al, 0x43
push rsp
mov ebp, 0x75c142da
sbb ecx, dword [rdi + 0x76]
xchg eax, esp
jne 0x401ee2
outsb dx, byte [rsi]
sub dh, byte ss:[rbx - 2]
outsb dx, byte [rsi]
add bh, byte [rbx + 0x23]
imul esp, dword [rdi], -0x70
push rcx
ret
fcomp st(2)
push 0x216561a7
mov eax, 0xf921db8f
push rdx
pop rdi
sahf
loope 0x401e93
shl dword fs:[rcx + rbx + 0x5f], 1
push -0x7bf6c783
ret
xor dh, byte [rcx + 0x7e]
wait
nop
xor eax, 0x67399ab6
jno 0x401f5a
movabs byte [0x38312ef7fbdfade2], al
insb byte [rdi], dx
insd dword [rdi], dx
jne 0x401f5d
je 0x401f56
cmp dh, byte [rdx]
xor ebx, dword [rax - 0x54]
test esi, edx
pop rdx
cmp dword [rax - 0x2f885c68], 0x6b
std
fimul dword [rax + rsi*4]
insd dword [rdi], dx
insd dword [rdi], dx
xor ebx, dword [rbx]
add al, 0xff
out dx, al
mov ecx, 0x3432367b
add eax, 0x31373933
add al, 0x32
xor eax, 0x38343736
xor esi, dword [rsi]
xlatb
fidivr dword [rdi]
fnsave dword [rcx]
xor eax, 0x32343111
cmp dword [rcx + rdi], esi
adc al, 5
adc edi, edi
cmp al, 0xff
fbstp tbyte [rdi]
and dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
xor eax, 0x37323230
xor esi, dword [rsi]
pop rsi
xor dword [rax], 0x4865202
xor dword [rcx + 0x74], ebx
mov eax, 0x6233db8d
xor eax, 0xa9630e33
out dx, eax
int1
clc
or eax, 0x630712a1
imul ebx, edi, -0xb
sub edx, esi
nop
xor al, 0x60
sub dh, byte [rax + rbp*2 - 0x4a]
out 0xb8, al
mov al, 0x71
ja 0x401f89
outsd dx, dword [rsi]
jo 0x401f35
or esi, dword [rdx + 0x29]
mov word [rcx + rdi*4 - 0x6e471139], es
mov ah, 0x12
stosq qword [rdi], rax
sbb bh, byte [rbx]
and al, 0x57
cmp bl, byte [rdi + 0x6d]
jne 0x40200a
cmp al, byte [rcx - 0x78a12bc2]
add dword [rbp - 0x15], esp
sbb edx, dword [rdi - 0x55]
add dword [rsi + 0x56db7a1], 0xda63744e
push -0x47
jbe 0x402026
xor byte [rbx], ch
mov ss, ebp
xor edx, edx
loope 0x402010
mov esp, 0x816e5520
pop rbp
push rdx
adc eax, 0x75c2bb70
xchg eax, esp
fisub dword [rip + 0x6d0bb02c]
fnstsw dword [rcx + 1]
xor eax, ebx
push 0x3d
sti
add r8b, bl
jae 0x40205a
insd dword [rdi], dx
or eax, 0x5c6dd93b
je 0x40205d
push 0x6dcb7509
jae 0x402012
insb byte [rdi], dx
jo 0x401ffc
outsb dx, byte [rsi]
outsd dx, dword [rsi]
sub eax, 0xb60fe178
adc eax, 0x6e670d67
jne 0x402033
jne 0x40205e
sub eax, 0x2d6b7b69
int3
or eax, 0x640938d9
jns 0x402085
rcr byte [r13 + 0x450799b5], 0x19
jbe 0x401fd2
jo 0x402037
call 0x7f34
sbb esi, dword [rdx - 0x509f3944]
shr dword [rax], 1
or dword [rax + 0x53], esi
jb 0x40209c
jb 0x402012
jae 0x401fcb
or ch, byte [rdi + rbp*2]
or byte [rcx + 0x7423c105], cl
insd dword [rdi], dx
and al, 0x6f
add eax, 0x8668652e
outsb dx, byte [rsi]
fld dword [rbx + 0x726468cd]
or eax, 0xc0c5635d
jne 0x401ffe
test dword [rax - 0x61], edi
jo 0x402037
mov ebp, 0xc3ad116c
lea rax, [r11 + 0xb]
push -0x56
mov bl, 0xb7
shl byte [rdx - 0x5f], 1
sahf
add byte [rax + 0x7b], ch
movabs byte [0x3527204425e6639], al
xchg dword gs:[rip + 0x109ba700], ebx
retf
stosb byte [rdi], al
add dword [rdi - 0x69], eax
nop
or al, 0xc9
fnstcw word [rdi]
sbb al, 1
or al, 0x32
and ch, cl
and eax, dword [rdi]
push rsp
push rsp
xor spl, byte [r11 + r8*4]
and byte [rcx + rsi], al
or dword [rdx + rsi], 0x24
je 0x40211c
and al, 0x43
fimul word [0xfffffffffffff644]
outsd dx, dword [rsi]
sbb dword [rax + rdx*4 - 0x68], esp
cwde
sub byte [rip + 0x4192180c], al
or byte [rsi - 0x55], cl
or dword [rdx + rsi*2], 0xffffffd8
rol al, 0x40
enter -0x6c9c, -0x4d
add bh, bl
sbb byte [rbx], dh
xor rdx, qword [r14 + 3]
pop rdi
out dx, al
and ah, cl
jo 0x4020c0
add bh, byte [rdi]
pop rsi
mov edi, 0x92c466f6
inc dword [rdi + 0x6437bf07]
jb 0x402120
add al, byte [rdi]
imul edi, dword [rdi], 0x7b
xor esp, dword [rdx + 0x49]
scasd eax, dword [rdi]
cmpsd dword [rsi], dword ptr [rdi]
xchg eax, esp
cmp eax, eax
dec dword [rbp + 0xe]
or eax, edx
jp 0x40215c
fmul st(2)
sub al, 0xcc
out 0x3f, eax
inc dword [rcx + 6]
sbb esp, ebp
test byte [rdi], bh
lock sbb byte [rdx + rsi*2 - 0x70], 0xf0
enter 0x1901, -0x5d
and byte [rbx + 0x6138e30], al
mov bh, 0xa1
in al, 0x84
lcall [rdx]
sbb dword [rdx - 0x1f1fc077], esi
fst dword [rax + 0x140c85d]
adc byte [rdi], al
xchg eax, esp
xor ah, bl
movsb byte [rdi], byte ptr [rsi]
or byte [rdi + 7], dh
or al, 0xd9
xchg eax, ecx
sub eax, 0x303f9d0f
or esp, esp
cdq
wait
jg 0x40214c
or eax, 0x61c9080c
movabs dword [0x9ff07dcce4a1acf], eax
test eax, 0x484066e6
mov edi, 0x84bf074f
in al, dx
and bh, byte [rcx + 0xb]
add dword [rcx + 0x6e67253f], esi
jg 0x40210e
mov ecx, 0xbf0d90c9
enter 0x2107, -0x47
sahf
jg 0x402144
add cl, cl
jb 0x40212a
wait
adc eax, 0x397f0767
cwde
xor al, 0xdd
push rax
fisttp dword [rsi]
add edx, dword [rdx - 0x707b21ed]
mov edi, 0xe9019310
xchg bh, ah
psubb mm6, qword [rsi + 0x2e]
jo 0x4021be
push rbx
add byte [rbx + 0x2e87588c], bl
int 0x66
movabs r10, 0xccf272433f1f9bf8
jg 0x4021c0
add dword [rsi], eax
adc byte [rbx + rbx*2 - 0x38], ah
and byte [rax - 0x1be3d041], bl
and bl, byte [rcx]
or byte [rcx], al
add dword [rdi - 0x506f7f0b], edx
js 0x402199
leave
nop
or al, 0x65
or dh, byte [rax - 0x46636bc9]
call qword [rdi]
adc byte [rdi], bh
and byte [rbx - 0x1ff7b7f4], al
insb byte [rdi], dx
in al, 0xd0
adc esp, dword [rax]
adc eax, 0x2161c67f
sbb esi, dword [rax]
xor al, 0x3f
fldlg2
mov al, 0x10
adc dword [rbx], edi
leave
xor ecx, dword [rsi + 0x49]
jg 0x402240
add dword [rdi - 0x44cd3e6b], ebp
fdivr st(7)
or eax, 0xa8c9cd20
or dword [rdi], ebx
or dword ss:[rcx + 0x7f84393c], edx
test al, 0x3a
movabs eax, dword [0x90006000000006]
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x4bf7fdea], ecx
pop rax
in eax, dx
pop r15
nop
out dx, eax
movabs eax, dword [0x68000008ab000019]
add byte [rax], al
add byte [r8], al
and ah, dh
add byte [rax], al
add bh, bh
