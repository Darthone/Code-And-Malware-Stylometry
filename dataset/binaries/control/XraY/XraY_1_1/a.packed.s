call 0x4013f0
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401208
add ebx, ebx
je 0x4011be
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4011f6
cmp rbp, -4
ja 0x4011f6
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4011de
add ecx, 4
mov dl, byte [rax]
je 0x401206
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4011f6
ret
cld
pop r11
cmp r8b, 2
je 0x40121e
jmp 0x40129b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40122e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401216
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401246
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401233
sub eax, 3
jb 0x401264
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40129b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x40128b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401289
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401278
cmp rbp, -0xd00
adc ecx, eax
call 0x4011ca
jmp 0x40121e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401374
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401312
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40135e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401331
push 0x3a707474
jne 0x40138a
js 0x40134a
jae 0x401384
outsb dx, byte cs:[rsi]
je 0x401343
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4013b1
jb 0x4013a3
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4013ce
jb 0x4013e1
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x212722
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x212722
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x4012ac
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4013d7
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401385
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add dword [rax], eax
jmp rbp
call 0x706f147f
jb 0x401497
movsxd rbp, dword [rdi]
jae 0x401491
insb byte [rdi], dx
js 0x401497
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401477
cmp rsi, rcx
jae 0x40147f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x40145e
cmp al, 0x8f
ja 0x40145e
cmp byte [rsi - 2], 0xf
je 0x401464
sub al, 0xe8
jg 0x401461
push rdi
cmp al, 1
ja 0x40144c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40144f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x40147c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4014d3
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1951
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401517
mov al, 0xa
jmp 0x401517
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4014f3
inc ebx
mov al, 0
jmp 0x40151b
mov al, 2
jmp 0x40151b
mov al, 3
jmp 0x40151b
mov al, 0x3c
jmp 0x40151b
push rcx
rcr ah, 1
fstp st(7)
jle 0x40155c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40156e
jg 0x401560
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6ce3
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4015ba
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6737
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4015c2
cmp esi, 0x21585055
jne 0x4015c6
jge 0x4015b8
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4015bb
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4015bf
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40166b
pop rcx
or al, 0x3b
jb 0x401671
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4015e3
jmp 0x4015e5
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661526
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5376e
in eax, dx
jg 0x40161d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401663
mov bh, 0x2a
add edi, 0x10
jmp 0x401660
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40169d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4016d9
jne 0x4016f0
fstpnce st(6), st(0)
jle 0x4016b9
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4016ef
jrcxz 0x401723
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b687
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4017a2
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401762
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295d37
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4017d5
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40176f
and ecx, 7
or al, 0xeb
jae 0x4017da
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x40180f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40184d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401806
push rax
call 0xffffffff868d14f3
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401810
std
cmp edi, esi
xchg eax, edi
jle 0x401865
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95df1
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401863
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401851
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40187a
js 0x4018ba
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40194c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2b87
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40196d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401972
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21424
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401900
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
mov ebp, 0xe000009
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], dh
test al, 0x28
nop
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
dec dword [rcx - 0x4cffffd5]
or al, 0
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401a26
je 0x401a2f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x4019f8
mov dh, 0x7d
jbe 0x4019f7
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa9
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401a30
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x5480006], bl
add dl, bl
or al, cl
enter 0x80f, 0
adc byte [rcx], cl
or dword [rax], eax
mov al, 0xe4
adc ecx, eax
adc ecx, dword [rdx]
add al, cl
or eax, dword [rax]
fmul dword [rbx]
sal byte [rsi + 0xc040c03], 0x17
or eax, 0x4f0d7000
and byte [rdi], bl
and byte [rsi], cl
add byte [rax + 0x7f4000f], al
enter -0x4ff1, 0x1c
mov edi, 0x1d000010
adc dword [rax + 0x7e], eax
sub byte [rip + 0x12171e], 0xa8
enter 0x201f, 0x3f
adc eax, dword [rax]
fsub qword [rbx]
adc al, 0
call 0x14247a82
enter 0x1503, 0
clc
add byte [rax], al
or esp, esp
add edx, dword [rdi]
add byte [rax], cl
sbb byte [rax], al
clc
stc
add cl, bh
add dword [rcx], ebx
add byte [rax], al
xor byte [rdx], bl
add al, cl
insb byte [rdi], dx
add bh, byte [rcx + 2]
sbb eax, dword [rax]
loopne 0x401a98
adc esi, dword [rsi + 0x24]
out dx, eax
cmpsb byte [rsi], byte ptr [rdi]
add dword [rdi], edx
add al, 0
int1
dec dword [rbx + rbx]
imul ebx, dword [rdx], 0x19bf2cae
xchg eax, edi
add dh, byte [rax + 0x21b06486]
sbb edx, dword [rdi]
mov ebx, dword cs:[rbp - 0x38]
xor byte [r14], cl
pop rdi
cmpsd dword [rsi], dword ptr [rdi]
or dword [rcx + 0x17012ec1], edx
push rbx
xor r12b, byte [r11 + r8*4]
pop rbp
jp 0x401af8
push rax
xchg byte [rsi - 0x68ded450], al
movsd dword [rdi], dword ptr [rsi]
xlatb
scasb al, byte [rdi]
wait
insb byte [rdi], dx
sal byte [rcx + 0x27], cl
adc byte [rdi - 0x37], dh
sbb dword [rax + rcx*2 + 6], esp
adc esi, ebx
adc dl, byte [rdi]
jb 0x401a7e
and ebx, ebp
mov edi, 0xefa44a8
xor cl, al
adc al, 4
and dword [rcx], eax
sbb dword [rax + rcx*2 + 0x4e], ebp
sbb byte [rbx], dh
sbb dword [rdi + 0x46219064], eax
sbb bl, byte [rax + 1]
or al, 0x36
and al, 0x67
pop rdi
sbb al, 0x77
and byte [rbx + 0x32], al
fcom dword [rax - 0x46dbd069]
or dword [rcx + rcx*8], 0x20
sub dl, bl
sub al, 0x90
or al, 0x32
and al, 0xff
xor byte [rdi], ah
xchg esp, esp
in al, 0x1e
add dh, byte [rax + rax*2]
add bh, byte [rax]
nop
or al, 0x32
and al, 0x5d
cmp al, 0x20
xor cl, r8b
jnp 0x401b61
and al, 0x83
or al, 0xc9
ret 0xe448
nop
or al, 0x32
adc r8b, byte [rbx]
and al, 0x27
xchg esp, esp
push rax
cmp al, byte [rbx]
push rsp
enter 0xc90, 0x32
pop rax
test ecx, ecx
and byte [rbx + 0x32], al
pop rsp
scasb al, byte [rdi]
cmp dword [rbx + rax*4], esp
or al, 0xd9
add al, 4
leave
leave
and dword [rcx], edi
push 0x326c042d
and al, 0x83
or al, 0x52
jo 0x401bd9
xor cl, al
nop
or al, 0x74
cmpsd dword [rsi], dword ptr [rdi]
js 0x401b72
leave
and byte [rbx - 0x31], al
jl 0x401b61
cmp dword [rcx], edi
and al, 0x83
sbb byte [rax - 0x3636f37c], 0x21
add eax, 0x320c6a88
and al, 0x83
mov word [rax - 0x37cdbc70], ss
nop
mov dh, 0x94
fisttp word [rsi + 0xe]
leave
and byte [rax + 0x439c0605], bl
jb 0x401c07
sub rax, qword [rsi]
movabs al, byte [0xa880a420c90c8355]
or dword [rdx + rsi], 0x24
cmpsb byte [rsi], byte ptr [rdi]
mov al, 8
xor cl, r8b
and ah, cl
mov eax, 0xc8320cd4
rcl byte [rax], 0xdc
cmp dword [rbx], edi
and al, 0x83
shl bl, 1
xlatb
loopne 0x401c33
jb 0x401b53
and ebx, ebp
nop
or eax, dword [rcx + 0xb0e4193]
or eax, 0x27b3c90f
sub al, 7
adc eax, 0x1551716
adc bh, byte [rax]
cmp eax, ecx
pop rsp
push 0x17
adc eax, 0xf13419e7
xchg byte [rcx + 0x5f], dh
fsubr st(7)
ret 0xde0
jg 0x401c0b
mov edi, 0xef125747
add dword [rbx - 0x6198faf9], ecx
scasb al, byte [rdi]
or al, 0x62
mov r15d, 0x92142fb4
shl dword [rsi + 0x17c5e704], -0x18
js 0x401c37
adc dword [rbx], ebx
fadd dword [rdi + 0x37]
xchg byte [rbx], cl
imul ebx, dword [rax], 0x20079640
loope 0x401c28
adc cl, byte [rbx + 0x3db2760c]
rcpps xmm2, xmmword [rdi]
in al, dx
add byte [rdi], dl
in al, 0x6c
add byte [rax], cl
nop
xchg al, bl
leave
mov r14d, 0x1cf00c17
add ch, byte [rdi]
sbb dword [rsp + rdi - 0x7ff475c7], 0xd
sub bl, byte [rsi + rax]
cmp ecx, ebx
xor eax, 0x17861722
push 0x39
fmul st(1)
neg byte [r8]
stosd dword [rdi], eax
mov edi, 0xc0b908fd
pop rsi
fld dword [rax]
or al, 9
and byte [rdx], bl
add dword [rdx + rdx - 0x27f8eece], esp
leave
mov bl, 0x93
movabs r15, 0xe41c9d101ca70936
in al, dx
jb 0x401c83
jbe 0x401c90
and cl, byte cs:[rcx]
sbb dword [rdi + 0x48], 0x16
sbb eax, edx
scasb al, byte [rdi]
test byte [rdi + 0x63], dh
sahf
jo 0x401ca0
in al, dx
or dword [rdi], eax
pop rsi
sbb esp, dword [rdx + rax*8 + 0x2e]
mov al, 0xc3
mov edi, 0x17512f0a
fsub dword [rax]
sbb al, 0x6b
or ah, byte [rdi - 0x54]
sbb edx, dword [rdi]
ror dword [rsi + 0xe], 0x32
test byte [rax], bh
sbb al, 0x45
outsb dx, byte [rsi]
enter -0x6f98, -0x46
cmp byte [rdi - 0x21], 0x5f
neg cl
nop
and byte [rdi], al
push rbp
adc dword [rcx], esi
movsb byte [rdi], byte ptr [rsi]
test eax, 0x13883939
sti
adc dword [rdi + 0x605d8400], edi
xchg dword [rdx], ecx
or esp, dword [rdi - 0x1c5be8a9]
add bh, byte [rbx]
push 0xb
ja 0x401c6d
iretd
adc byte [rcx], cl
xchg dword [rax - 0x24b86eff], esi
or eax, dword [rdi]
ret 0x3421
enter 0x67f, -0x15
or al, 0xdf
cmp dword [rbx - 0x69], edi
movhps qword [rbp - 0x37cc8bf4], xmm0
leave
movsb byte [rdi], byte ptr [rsi]
adc dword [rdx], eax
sbb dl, byte [rax + 0x3765360c]
and dl, byte [rdi]
rol byte [rcx + 0x38], 1
cmp eax, ebx
sbb byte [r12*2 + 0x179390f7], 0xc8
or al, 0x70
or al, 0xc2
nop
imul ebx, dword [rdx], 0xea0ca3a7
sbb dword [rbp + 0x20], -0x44
lodsd eax, dword [rsi]
or al, 0xdf
or byte [rcx + 0x72], bh
nop
xchg eax, ebx
sbb byte [rbx + 0x1c190d56], dl
lodsb al, byte [rsi]
imul eax, dword [rsi], 0x39
xchg eax, ebx
adc byte [rip - 0x26374021], bh
rol dword [rsi + 0x189b2f9f], -0x41
pop rbx
and esp, ebp
add bh, byte [rcx]
mov ebp, 0x1917d90d
in al, 0xd9
or eax, 0x3717c8d7
adc bh, byte [rdi]
ret 0x98c9
ror dword [rax + 0xe0c271f], 1
enter 0x43b3, 0x72
fadd st(0), st(0)
cmpsd dword [rsi], dword ptr [rdi]
mov al, 0x44
in al, 0xa4
sbb dword [rbp + 0x38], 0x2f
neg byte [rbx]
ja 0x401db3
or byte [rcx - 0x7f], bh
sbb al, 0x6e
popfq
fsub dword [rcx]
cmp dword [rbx + 0xe], ebp
xchg eax, edi
loop 0x401e1c
comiss xmm3, xmmword [rbp - 0x32e8786e]
getsec
sbb dl, ah
paddsb mm0, qword [rdx]
jns 0x401d31
adc byte fs:[rsi + 0x17], bh
or byte [rbx], bl
mov dl, 0x1a
xor byte [rdi], dl
lahf
in al, 0xd9
and dword [rdi + rsi*4 + 0x17], ebp
add dword [rcx], edx
ja 0x401d69
sbb eax, esi
add bh, byte [rcx - 0xa]
mov esp, 0x119c2f01
out 0x11, al
xor ebx, dword [rsi + 0x20]
xchg dword [rdx + rdx], esi
outsd dx, dword [rsi]
mov ss, word [rip + 0xce03287]
jb 0x401d6a
cmp dword [rdi - 0x47be6f95], esi
cmp edi, eax
nop
sbb al, bh
jmp qword [rdi]
jb 0x401e68
jae 0x401e6a
jne 0x401e5e
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
or esi, edi
outsd dx, dword [rsi]
in eax, dx
or byte [rbp + 0x72], ah
imul ebx, dword gs:[edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401e19
outsd dx, dword [rsi]
outsd dx, dword [rsi]
out dx, eax
and dword [rdi + rbp*2 + 0x5f], esp
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x401e8f
jne 0x401eab
fcomp st(7)
jle 0x401ea8
insd dword [rdi], dx
jo 0x401ea8
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
jbe 0x401e43
push rsi
imul bp, word [rsi + 0x69], 0x7208
jb 0x401eb3
jns 0x401eb3
outsb dx, byte gs:[rsi]
je 0x401eca
jns 0x401e5a
or ch, byte [rbp + 0x65]
and dh, dl
or eax, 0x6d75fb98
insd dword [rdi], dx
jns 0x401e9a
or eax, 0x2a74295f
jg 0x401e2a
mov ch, 0x13
insd dword [rdi], dx
adc bl, byte [rdi + 0x5a277070]
push rbx
je 0x401ec8
xor dword [rcx], edi
mov esi, 0x70fdad6d
imul esp, dword [rbp + 0x63], 0x309c7765
jp 0x401efa
movabs byte [0xc1b5bb9d74637572], al
sbb dh, byte [rbx]
jae 0x401f11
movsxd rsp, dword [rcx + 0x75]
mov bh, 0xb3
in eax, dx
adc al, 0x36
imul esp, dword [rdi + 0x6e], 0x380c650f
push 0x69
outsd dx, dword [rsi]
fbstp tbyte [rsi + 0xe607bb6]
cmp qword [rdx + r11], r9
jne 0x401efe
js 0x401f34
xor r15b, dil
scasb al, byte [rdi]
insd dword [rdi], dx
mov ebx, 0x6665b631
test eax, 0x6b417a6c
pop rdi
jo 0x401f3d
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0xb06e0cf6
push r15
xor byte [rbx], bl
or dword [rcx], ebx
adc dword [rip + 0x310dd6b0], edi
cwde
pop rdi
adc dh, byte [eax]
sbb ebp, dword [rsi + 0x6f]
mov dh, 0xf8
jo 0x401f2d
pop rbp
adc dh, byte [rcx]
xor eax, 0xb6786543
insd dword [rdi], dx
outsd dx, dword [rsi]
movsd dword [edi], dword ptr [esi]
retf 0x4c73
xor eax, 0x45b66153
sub esp, ebp
fist dword [rcx]
test al, 0x73
jne 0x401f70
jae 0x401f2f
push 0x38bbd857
pop rdi
imul ebp, dword [rbp + 0x69], 0xa37417a
mov edi, 0x156b0ad
jmp qword [rax]
movsd dword [rdi], dword ptr [rsi]
push r11
jbe 0x401f36
imul ecx, dword [rbx], -0xa
imul ecx, dword [rdx + 0x24], 0x6ca56235
insd dword [rdi], dx
test dword [rbp + 0x610d86a9], esi
outsb dx, byte [rsi]
jbe 0x401f61
test dword [rip - 0x78de9bee], ebp
ja 0x401fb3
sbb al, 0xae
mov al, 0xed
adc al, 0x34
adc dword [eax + 0x7b], esi
loope 0x401f0b
nop
enter -0x1de2, 0x6d
fisub word [rbx + 0x68]
lodsb al, byte [rsi]
and dword [rbp - 0x6eaed8f3], edx
nop
or dword [rax + 0x271362c2], esi
or eax, dword gs:[rcx + 0x774f216c]
fucomi st(4)
or bh, byte [rcx]
or edi, dword es:[rcx + 0x4a]
and byte [rbx - 0x69], ch
pop rsp
xor al, 0x6e
jmp 0x401f20
mov ebp, 0x3664dc35
adc dword [rsi], ebx
sub dword [rdi + 0x75], ebp
jae 0x401fdb
xchg eax, ebp
sub dh, byte [rax + 0x18]
jbe 0x402015
jbe 0x401ff3
sub ebx, dword [rip + 0x663455c8]
sub eax, 0xd8236c6a
push rbp
xor byte [rax], ch
fldenv [rbp + rcx*2 - 0x7f]
lodsb al, byte [rsi]
imul ebp, dword [rbx - 0xa8fea33], -0x53
mov ch, 0x5c
mov bl, 0x37
sub byte [rcx], dh
cmp al, byte [rip + 0x6969817]
mov dl, 0x6c
sub esi, dword [rbx]
xchg eax, esp
jb 0x401fb5
fld dword [rbx + 0x31f4654d]
je 0x40204c
jo 0x401ffa
sub esi, dword [rbp - 0x17cdfcda]
movsb byte [rdi], byte ptr [rsi]
sub edx, dword es:[rbp + 0x2374d942]
out 0x1b, eax
retf -0x5624
insb byte [rdi], dx
je 0x40204e
jb 0x402016
and eax, 0x9db2012c
jo 0x402056
outsb dx, byte [rsi]
cdq
fldlg2
nop
xor dword [rsp], 0x59534e28
fild dword [rsi + 0x24]
outsb dx, byte [rsi]
sbb byte [rbx + rsi*2 + 0x4d], dh
xchg eax, edx
jo 0x402044
mov bh, 0x65
xor byte [rcx + 0x29860ac2], bh
pop rsp
test dword gs:[rdi + 0x2f], esp
js 0x402088
jp 0x402096
sal cl, 0xc0
and eax, 0x74a1383b
mov cl, 0xb
xor al, 0x1c
in al, dx
add dword [rdi + 0x53], ebx
and eax, 0x5664a2bd
mov word [rsi + 0x78], ss
and bh, cl
or eax, 0x9e0d7779
mov dh, 0x15
jo 0x4020bc
xor ch, byte [rdx]
mov ebx, 0xe63cdb5
insd dword [rdi], dx
outsd dx, dword [rsi]
pop rdx
xor al, 0x67
movsd dword [rdi], dword ptr [rsi]
jbe 0x40209e
cld
mov edi, 0x4552505f
push rsp
push rsp
pop rcx
pop rdi
push rbp
push r12
adc byte [rdi], r11b
xor eax, 0xc2b83973
outsb dx, byte [rsi]
jbe 0x4020de
and byte [0xffffffffe0506375], dh
outsd dx, dword [rsi]
sbb esp, dword [rcx + rbp*2 + 0x70337a80]
int 0xd
mov dh, 0xc7
popfq
mov eax, dword [rip + 0xf7eefdc]
xor byte [rcx + 0x78], ch
xor r10b, bl
sti
outsd dx, dword [rsi]
pop rdi
pop r15
insd dword [rdi], dx
insd dword [rdi], dx
test dword [rcx + 0x52], edx
pop r15
push rdx
pop rbx
sahf
in al, dx
jb 0x4020c5
push rbp
and byte [rdi + 0x4807b27d], dil
push rdx
push rbx
lea ebx, [rdi + 0x54]
test qword [rbp + 0x48], r9
mov esp, 0x64212845
adc ch, bl
in eax, dx
mov edx, 0x44dd729f
pop rcx
mov r12b, 0x35
lodsd eax, dword [rsi]
in al, 0xa
lodsd eax, dword [rsi]
jo 0x402075
rep stosd dword [rdi], eax
div byte [rsi + 0x40]
push rsp
pop r15
xor ch, byte [rsi]
add dword [rip + 0x6d0a371e], esi
fcmovnu st(0), st(4)
lodsd eax, dword [rsi]
movsxd rcx, eax
movsxd rsi, dword [rsi + 0x46]
fldenv [rbx - 0x52]
and dword [rdx], edx
lodsd eax, dword [rsi]
wait
xor esi, dword [rsi - 0x5148089e]
mov cl, 0xdd
jbe 0x40211b
xor dword gs:[r13 + 0x52], eax
pop rdi
mov eax, dword [rcx - 0x57]
jo 0x402169
cmpsb byte [rsi], byte ptr [rdi]
xor ebp, dword [rdx]
jne 0x40214f
pop rbx
fstp qword [rbp + 0x6349675c]
xor byte [rcx], dh
pop rsi
xor al, 0x35
div dword [rsi + 0x73923635]
adc byte [rbp + 0x53], al
add al, 0
insd dword [rdi], dx
sub ebx, dword [rbp + rcx*2 + 0x738a8932]
mov bl, 0x4c
sub eax, 0x20b62cda
ja 0x4021c0
or al, 0x66
jae 0x40215e
imul byte [rdi + 0xe]
insd dword [rdi], dx
insd dword [rdi], dx
xor esi, dword [rdx]
add al, 0x36
xor dh, byte [rax - 0x2cc8c6cd]
xor eax, 0x431ddfe
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
and al, 0x11
xor edi, edi
jge 0x40213a
std
xor al, 0x32
cmp dword [rcx + rdi], esi
adc al, 5
adc dword [rdi], esi
and dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
mov ch, 0xf8
iretd
cmp byte [rsi], dh
xor al, 0x30
xor eax, 0x37323230
xor esi, dword [rax]
fucomi st(5)
sti
push rdx
xor dword [rax], edi
add al, 0xaa
xor al, 0x33
xor eax, 0x61348b33
movabs dword [0x1867f06da9816aeb], eax
outsb dx, byte [rsi]
xor dword [rax + 0x2c], ebx
lock xor byte [rax - 0xbadedb6], al
movabs eax, dword [0xf173d66c433b62ed]
jo 0x402252
xor dword [rdx - 0x22f4970f], eax
pop rcx
sub dword [rbx + 0x6e], edi
movabs eax, dword [0x462f4a691e1f09e0]
adc al, byte [rsi - 0x7e]
movabs dword [0xb0b088484662a066], eax
mov r11b, 0x4c
adc al, 0xea
add dword [rbp + 0x5f585860], 0x33
ret
rol dword [rsi - 0x70], cl
pop rdx
mov ebx, 0x86737820
or dword [rbx + 0x70], ebp
xchg byte [rcx + rcx*2], dh
pop rdx
test eax, 0x54b2776
fidiv dword [rbx + 0x24]
xchg dword [rbx + 0x5c], ebp
push 0x65
and byte [rbx + rax*2 + 0x4b], dh
sub byte [rbp + 0x5c], 0x49
push rax
imul eax, dword [rip + 0x36d2851a], 0x376f0935
lodsb al, byte [rsi]
movabs dword [0x9a4d121981dad6b], eax
jp 0x40225d
xchg cl, dh
mov bh, 0x53
xor al, 2
push rsp
xor byte [rdi + 0x25], bl
xor al, 0x42
mov dl, 0x43
cdq
in eax, dx
or al, 0xb9
stosd dword [rdi], eax
test bl, dl
je 0x402243
movsb byte [rdi], byte ptr [rsi]
movsd dword [rdi], dword ptr [rsi]
sub eax, 0x4d65dd24
lodsb al, byte [rsi]
mov ds, word [rdx + rdi*4 + 0x33]
or dword [rcx], esi
add esi, dword [rax]
xor dword [rbp + 0x36], eax
pop rsp
fld st(1)
loope 0x4022e0
lodsb al, byte [rsi]
mov esp, 0x519644f2
loope 0x40221e
push r12
push 0x3fb5d7ca
fimul dword [rbx + rax*2]
enter 0x6154, 0x62
fcomp qword [rbx]
push 0x1b
add eax, 0x3f7500bb
enter 0xc1e, -0x70
mov dword [rsp + rax], esi
je 0x4022d0
test eax, 0x418f4383
outsb dx, byte [rsi]
imul ebp, dword [rax], 0x8a7b02db
mov cl, bh
sub dword [rbx - 0x70], ebx
push r9
xchg al, bh
xor al, 0xac
test byte [rcx], bl
adc ebx, edx
imul ebx, dword ds:[rax - 0x24de9e40], 0xee59167e
jmp 0x4022cc
retf
push rdx
mov ecx, 0xac96a05f
mov eax, 0x5feb6431
push 0x6622aab5
add ah, bl
mov cl, 0xbe
fstp xword [rcx]
xor al, 0x32
add eax, dword [rbp - 0x6b623599]
je 0x40231c
movabs eax, dword [0x612463ec6d95eb83]
xchg eax, edx
sal dword [rsi], cl
jbe 0x40233b
jae 0x40233e
add dh, byte [rsi + 0x6d]
jle 0x4022a8
or byte [r8 + 0x5b3201ca], sil
sub ebx, dword [rbx + 0x61]
cmp al, 0x63
insb byte [rdi], dx
shl esp, 1
xor byte [rdx + rdx], dh
sbb al, bl
rcr byte [rax + rsi*4 + 0xdc30e90], 1
mov al, 0xb7
cwde
sbb dword [rdi], ebx
cmp byte [rax + 0x6b], ch
jrcxz 0x402349
pop rcx
ja 0x402373
sbb ebx, dword [rdx]
loope 0x402369
adc byte [rsi + 0x45], dl
mov ch, 0x9b
scasd eax, dword [rdi]
test byte [rbx + 0xa], dl
mov byte [rsi + rcx*2 + 0x52d7564b], dl
pop rcx
cmp byte [rbp - 0x52], dl
push rbx
jno 0x402384
add al, 0x5e
mov bh, 0x34
push rsp
cmp ecx, dword [rdx]
movsb byte [rdi], byte ptr [rsi]
or ecx, dword [rdi + rax + 0xc4b2c6e]
push rsi
push rdx
in al, dx
sub dh, byte [rip + 0x30351022]
or byte [rax], dh
and eax, 0xee0d6d9c
and al, 0xea
cmp dword [rax + 0x4b], edx
movsxd rsi, dword [rsi]
fsubr st(3)
retf 0x560c
loopne 0x4023ef
out 0x3e, eax
add al, 0x32
mov al, byte [rbx + 0x34]
sub bl, byte [rbx + 0x4a]
sti
cli
mov ds, word [rdx]
add eax, 0xfc0c125c
adc byte [rbx], cl
mov ch, 0x70
in eax, dx
pop rdi
jbe 0x4023d9
and dword [rip - 0x2dced018], ebx
push rax
mov ebx, ebx
xor esp, dword cs:[rax]
push rbp
outsb dx, byte [rsi]
pop rdx
push rdx
and al, 0x74
mov ebx, 0x3cfe75c6
cmp byte [r8], sil
cmp dl, byte [rax + 0x60]
mov ah, 0x17
imul edi, dword [rax - 0x74], 0x220d414
insd dword [rdi], dx
mov ch, 0x39
stc
add ecx, ebx
jmp 0x7124b2fc
movsxd r9, r9d
xchg eax, ecx
rol byte [rdx], 1
leave
xor ch, byte [rbx - 0xbee7630]
mov esi, dword [rsi + 0x1b]
push rcx
insd dword [rdi], dx
jae 0x40246d
insd dword [rdi], dx
jo 0x402459
je 0x40246c
jmp 0x402466
ret
push 0x70002209
pop rbx
ret
jb 0x402477
outsd dx, dword [rsi]
sub eax, 0x2d0d6715
jne 0x4023fe
scasb al, byte [rdi]
xor al, 0x2e
jne 0x40247a
sub eax, 0xdee600b5
pop rdx
mov ecx, dword [rip + 0x64093866]
jns 0x402496
cmpsb byte [rsi], byte ptr [rdi]
sbb al, 0x67
insd dword [rdi], dx
sbb dword [r14 + 0x1b], r14d
push r8
add esi, dword [rdi]
or al, 0x5f
sbb esi, dword [rcx - 0x509f5491]
movabs al, byte [0x3db70b72744f0928]
xchg eax, ecx
or ch, byte [rdi + rbp*2]
or byte [rdx - 0x63422b71], al
add eax, 0x196f245a
push 0x119d5acb
imul ebp, dword [rax - 0x54], 0xad0a210d
jne 0x4024c5
movsxd rdi, eax
adc al, 0xbe
fst dword [rdx + 0x6cbd5d72]
adc dword [rcx + 0x43], edx
test dword [rsi], edx
sti
mov al, 0xb
push 0x63
jb 0x402420
sub esi, dword ss:[rbx]
xor byte [rbx + 0x7b6800bd], bl
pop rsi
mov eax, 0xc07b0004
push rbp
fisubr word [rcx + 0x54250000]
and eax, 0x39af012f
jae 0x402430
jg 0x4024a7
sbb al, 0xa4
sbb dword [rdx + 0x7230121], edx
nop
push rsp
push rsp
and byte [rsi + 0x4864864], al
xor dword [rcx + 0x64], esi
nop
je 0x4024e1
or al, 0x72
enter 0x449b, -0xa
ljmp [rdi - 0x68]
cwde
xor cl, al
and byte [rbx + 0xe080528], al
wait
push rbp
sal byte [rdx + 0x76], 0x90
ror byte [r8 + 0x6906fb02], 6
cdq
insb byte [rdi], dx
sbb byte [rsi + 3], dl
ret 0x159b
sub al, 0x47
xchg eax, edx
out dx, al
and bh, byte [rcx - 0x6f]
add ebx, dword [rsi - 0x41]
lcall [rbp + rdi*4 + 0x76fc159]
mov edi, 0xd90dd236
nop
add al, byte [rdi]
imul edi, dword [rdi], -2
mov bl, 0x37
sub ebx, dword [rax - 0x69]
cmpsd dword [rsi], dword ptr [rdi]
fldenv [rax + rdx*4 - 0x60]
jp 0x4024f5
in al, 0xb0
and byte [rbx + 0x3f], dl
mov al, 7
scasb al, byte [rdi]
insb byte [rdi], dx
ret 0xe7c2
inc dword [rcx + rbx + 0x3fc19064]
enter 0x3c8, -0x38
and eax, 0x19021007
xor ebp, dword [rax + 0x32]
or byte [rbx], dl
push rdi
sbb ecx, dword [rdx + 0x4e]
js 0x40254b
lcall [rdx]
mov dword [rdi], edi
ret 0x1021
and dword [rdi], esi
or al, 0x70
jb 0x4025c4
adc byte [rdi], al
xchg eax, esp
ret
and byte [r10 + 0x5f], r8b
cdq
sbb eax, 0x9d0f02d9
int3
add byte es:[rdi], 0x7f
jb 0x40257e
test esp, esp
mov al, 5
movabs dword [0x9ff0737566e6725], eax
nop
and dword cs:[rip + 0x1dffbfa9], ecx
and esp, esp
sbb eax, 0x3373fad
or cl, cl
mov cl, 0x97
xchg byte [rdx - 0x400b80cd], dl
mov eax, 0x7274419
xor al, 0x44
enter -0x6dd2, 4
leave
and eax, 0x4f19b967
jg 0x402600
or byte [rcx - 0x2d], 0xd
fisttp dword [rsi]
add ecx, dword [rdx + 0x4e]
js 0x402550
sysret
mov edi, 0xa4064d10
sbb esp, edi
psubb mm3, mm1
mov ecx, 0xff07c100
add byte [rbx + 0x2e07602c], bl
int 0x66
movabs r10, 0xccf272433f1f9bf8
jg 0x4025d7
add dword [rsi], eax
adc byte [rbx + rbx*2 - 0x38], ah
and byte [rax - 0x1be3d041], bl
and bl, byte [rcx]
or byte [rcx], al
add dword [rbx - 0x386f573f], esi
xor byte [rdi], bh
xchg byte fs:[rdx + 0x1bc80ac8], dl
fadd qword [rdi]
call qword [rdi]
adc byte [rdi], bh
nop
movsb byte [rdi], byte ptr [rsi]
or al, ah
fbstp tbyte [rsi]
and al, 0x17
jb 0x4025ec
adc esp, dword [rax]
adc eax, 0x90b0e37f
or eax, 0x343f1730
insb byte [rdi], dx
jbe 0x402684
or byte [rdi], al
adc dword [rbx], edi
leave
xor ebx, dword [rdx - 0x5c]
jg 0x402656
add dword [rdx + 0x65], edi
xor edx, dword [rsi]
mov ebx, 0x80311800
xor al, 0x27
iretd
push rax
nop dword [rbp - 0xe]
in al, 0x10
or dword ss:[rdi + 8], edi
cmp eax, 0x80000012
add al, byte [rax]
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip + 0x59080216], ecx
xor ebp, dword [rsp + rcx*8 + 0x2b89386a]
add byte [rax], al
mov bl, 0xc
add byte [rax], al
push 0x4900005c
add dword [rax], eax
wait
hlt
add byte [rax], al
add bh, bh
