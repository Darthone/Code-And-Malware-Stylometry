call 0x4012d0
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x4010e8
add ebx, ebx
je 0x40109e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4010d6
cmp rbp, -4
ja 0x4010d6
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4010be
add ecx, 4
mov dl, byte [rax]
je 0x4010e6
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4010d6
ret
cld
pop r11
cmp r8b, 2
je 0x4010fe
jmp 0x40117b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40110e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x4010f6
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401126
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401113
sub eax, 3
jb 0x401144
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40117b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x40116b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401169
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401158
cmp rbp, -0xd00
adc ecx, eax
call 0x4010aa
jmp 0x4010fe
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401254
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x4011f2
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40123e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401211
push 0x3a707474
jne 0x40126a
js 0x40122a
jae 0x401264
outsb dx, byte cs:[rsi]
je 0x401223
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x401291
jb 0x401283
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4012ae
jb 0x4012c1
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x211d5b
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x211d5b
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x40118c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4012b7
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401265
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f135f
jb 0x401377
movsxd rbp, dword [rdi]
jae 0x401371
insb byte [rdi], dx
js 0x401377
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401357
cmp rsi, rcx
jae 0x40135f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x40133e
cmp al, 0x8f
ja 0x40133e
cmp byte [rsi - 2], 0xf
je 0x401344
sub al, 0xe8
jg 0x401341
push rdi
cmp al, 1
ja 0x40132c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40132f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x40135c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4013b3
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1831
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x4013f7
mov al, 0xa
jmp 0x4013f7
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4013d3
inc ebx
mov al, 0
jmp 0x4013fb
mov al, 2
jmp 0x4013fb
mov al, 3
jmp 0x4013fb
mov al, 0x3c
jmp 0x4013fb
push rcx
rcr ah, 1
fstp st(7)
jle 0x40143c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40144e
jg 0x401440
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6bc3
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x40149a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6617
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4014a2
cmp esi, 0x21585055
jne 0x4014a6
jge 0x401498
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x40149b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x40149f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40154b
pop rcx
or al, 0x3b
jb 0x401551
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4014c3
jmp 0x4014c5
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661406
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5364e
in eax, dx
jg 0x4014fd
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401543
mov bh, 0x2a
add edi, 0x10
jmp 0x401540
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40157d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4015b9
jne 0x4015d0
fstpnce st(6), st(0)
jle 0x401599
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4015cf
jrcxz 0x401603
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b567
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401682
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401642
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295c17
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4016b5
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40164f
and ecx, 7
or al, 0xeb
jae 0x4016ba
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x4016ef
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40172d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x4016e6
push rax
call 0xffffffff868d13d3
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x4016f0
std
cmp edi, esi
xchg eax, edi
jle 0x401745
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95cd1
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401743
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401731
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40175a
js 0x40179a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40182c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2a67
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40184d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401852
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21304
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4017e0
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
cmp eax, 0xe000003
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
or dword [rdx], 0xffffff92
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x17a0ff04], al
add byte [rax], al
and byte [rax], cl
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401906
je 0x40190f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x4018d8
mov dh, 0x7d
jbe 0x4018d7
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401910
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x4880006], bl
add byte [rdx - 0x6fd837fa], ah
invd
add al, cl
or dword [rax], eax
js 0x4018f7
in al, 0x13
enter 0xa07, 0
nop
or eax, dword [rax]
loopne 0x401903
sal byte ds:[rsi + 0x9040c03], 0x17
or eax, 0x6c03f000
wait
add al, 0xa
add al, 0xf2
add edx, esi
verr word [rdi + rdx]
adc byte [rax], al
xor byte [rdx + rsi*8], al
add al, 0xf2
adc dword [rax], eax
pop rax
adc al, byte [rax]
loopne 0x401964
inc byte [rax]
stc
adc eax, dword [rax]
xchg eax, esp
sbb dl, byte [rax + rax]
call 0xffffffff9f60794f
adc eax, 0x16f800
add byte [rsi], bl
nop
and byte [r15], r11b
add byte [rax], cl
sbb byte [rax], al
clc
enter -0x37f9, 0xf
sbb dword [rax], eax
add byte [rax], ah
sbb al, byte [rax]
mov byte [rbp + 0x13], ah
enter 0x1b13, 0
movabs al, byte [0x1701377923b1131c]
add al, 0
int1
dec dword [rbx + rbx]
jbe 0x40193b
jo 0x4019cf
mov edi, 0xd0029719
or al, 0x40
in al, 0x20
adc ebx, dword [rbx]
adc byte [rip - 0x6de4e9d2], cl
push r8
pop rdi
cmpsd dword [rsi], dword ptr [rdi]
adc ah, byte [rdx]
sbb dword [rbp + 1], 0x17
push rbx
mov ebx, 0x8670477a
or eax, 0x97425761
movsd dword [rdi], dword ptr [rsi]
xlatb
scasb al, byte [rdi]
enter -0x6c37, -0x7d
pop qword [rax]
or ch, byte [rsi]
add ebx, ebp
mov al, 0xb
cmp dword [rax - 0x6f100503], ecx
neg byte [rdx + rcx*2]
sbb byte [rip + 0x12010f37], al
test cl, dh
xchg byte [rdi + rdi + 0x190f171d], cl
mov cl, 3
sub al, 0x47
sub dword [rax - 0x77351349], eax
pop rbp
cmp al, 0x47
rsqrtps xmm5, xmmword [rdi]
or dword [rbx + 0x37146129], esi
movsxd rdx, dword [rdi]
test edx, 0x47764d88
xchg dword [rsi + 3], ebx
pop rdx
mov edx, 0x7f570c01
adc dh, byte [rdi]
nop
ror dword [rsi + 0x76], 0x17
mov al, byte [rax + 0x19064595]
add dl, byte [rsi + 0x390bd900]
fsubr dword [rdx + 0x6217202f]
add eax, dword [rdi - 0x5c]
sbb esp, esp
in al, 0xa0
or al, 0x2a
mov edx, 0xb086c220
add ecx, ecx
fnsave dword [rdi - 0x4d]
sbb ecx, esi
nop
pop gs
add eax, 0x72760e17
nop
sti
adc eax, 0x2034719
xchg eax, ebp
adc eax, 0x7fb440b9
or al, 0x61
fcomp dword [rip - 0x59e87ed1]
neg byte [rcx + 0x3a]
test byte [rdx], ch
add edx, dword [rdi]
adc dword [rdi], esp
insb byte [rdi], dx
or byte [rcx], bh
cmp dword [rax + 0x17dfc501], edi
sbb byte [r10], r10b
sbb byte [rax + 0x7bc7043f], al
in al, 0x95
pop rdi
or dword [rcx], eax
add dl, ch
mov byte [rbx], dl
ja 0x401a9e
xchg eax, esi
sar byte [rcx], 0x20
xchg eax, ebx
or byte [rbx + 0x2f779e40], bh
add eax, dword [rdx + 0x5f]
ret 0xa401
movsxd rbx, dword [rdi + rdi + 0x10]
imul eax, dword [rbx], 0x390643f7
jns 0x401a13
int1
jb 0x401a3d
out 0x7b, eax
xchg eax, ebx
or eax, 0x27c8f8e
cwde
and dword [rcx], ebx
insb byte [rdi], dx
mov byte [rdi], dl
nop
insb byte [rdi], dx
ret 0x841e
xchg eax, ebp
shr byte [rax], 1
mov edi, 0x83215f97
pushfq
sbb eax, 0x65d716b0
cmpsd dword [rsi], dword ptr [rdi]
fsub dword [rax]
or dword [rip + 0x39c08fd8], 0x17
cmp ecx, dword [rax + 0x47]
xor esp, edx
and ah, byte [rdi]
add r15, r13
mov al, 0x53
idiv byte [rdx + rsi*2]
add al, 0x1b
cmpsd dword [rsi], dword ptr [rdi]
jle 0x401acf
pop rdi
cmp esp, dword [rdi]
adc eax, 0x5ed4a705
add dword [rdi + 0x43], eax
enter 0x3c85, -0x70
std
leave
jb 0x401b57
nop
xchg eax, ebx
add al, 0xe0
adc byte [rbp - 0x731b3171], bh
push rbx
xor bl, byte [rdx]
add al, 0x27
shl ah, 1
fld st(1)
xchg dh, dh
shl byte [r8], 0x77
loopne 0x401b03
jge 0x401ac1
and esp, esp
cli
adc al, byte [rip + 0x400b301f]
adc dl, byte [rcx + 0x37776586]
movabs eax, dword [0x60ef175760e4f5f7]
sub dword [rax + 3], esi
mov edi, 0x729887d0
je 0x401b95
push rsp
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
ljmp [r13 + 0x5453dbfd]
or dword [rax], eax
jb 0x401ba1
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
in eax, dx
in eax, dx
frstor dword [rbp + 0x73]
and dword [rdi + rbp*2 + 0x5f], esp
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x401bbc
jne 0x401bd8
add bh, bl
fld xword [rdi + 0x42]
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x401bd5
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0xbe243538
rcr bh, 1
pop rdi
imul bp, word [rsi + 0x69], 0x7208
jb 0x401be0
jns 0x401be0
jb 0x401bfe
add byte [rsi + 3], ah
out 0xbe, al
fisttp qword [rdx]
insd dword [rdi], dx
and byte gs:[rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x401bc6
or eax, 0x84ed6e5f
jne 0x401bc4
je 0x401bc7
insd dword [rdi], dx
adc bl, byte [rdi - 0x4e48f90]
fisub word [rdi]
pop rdx
xor al, 0x31
sub edx, dword [rcx + 0x26636974]
imul esp, dword [rbx - 0x2a], 0x697737ca
jp 0x401bc8
popfq
pop rdi
outsb dx, byte [rsi]
movabs dword fs:[0xf6375ec7b5adf2f], eax
xor byte [rcx + 0x69], ch
xor eax, dword [rdi]
adc byte [rax + 0x72], dh
outsd dx, dword [rsi]
jo 0x401bc1
mov ch, 0xf6
out dx, al
xor dword cs:[rdi], esi
cmp al, 0x53
je 0x401c2a
cmp byte [rsi], bh
sbb al, 0x39
mov ecx, 0x47fdc8df
push rdi
pop rdi
pop r15
insd dword [rdi], dx
jb 0x401c35
fld dword [rsi + rsi*8 + 0x524688df]
pop r15
or r10b, byte [rax]
or esp, dword [rdi + rcx - 0x4a]
cmp al, 0x47
push rbp
and byte [rax + 0x44], cl
push rdx
ret 0x2fde
cld
push rbx
xor r10d, dword [r9 + rax*2 + 0x42]
sub byte [r15 + 0x6c2dd776], r15b
adc byte fs:[rbx + 0x59447b72], bh
jne 0x401be0
out dx, al
xchg eax, r11d
xor eax, 0x63776f70
stosd dword [rdi], eax
or dh, byte [rdi]
mov ebx, 0xa9bb76f0
movsxd rdx, eax
movsxd rsi, dword [rsi - 0x10]
insd dword [rdi], dx
jae 0x401c9f
jbe 0x401cbd
jg 0x401ca0
pop r15
xor ch, byte [rsi]
add dword [rsi - 0x16], edx
cmc
movsxd rbx, dword [rax - 0x5197ba25]
packuswb mm5, qword [r13 - 0x1a]
push rax
ret
cmpps xmm7, xmmword [rdi + 0x5f764a9f], 0x52
mov cl, 0x43
insb byte [rdi], dx
jae 0x401cef
scasb al, byte [rdi]
push rdi
cmp ebp, 0x5a
insb byte [rdi], dx
push rax
jbe 0x401ccd
pop rax
pop rax
pop rdi
xor ebp, dword [rdi]
jno 0x401cf9
scasd eax, dword [rdi]
in eax, dx
jae 0x401d02
insb byte [rdi], dx
jbe 0x401cfb
jbe 0x401ca1
xor esi, dword [rdx - 0x62]
ja 0x401cee
jo 0x401c56
in al, dx
jbe 0x401d17
pop dx
push 0x4e2b726b
movabs eax, dword [0xe219333132b870a1]
pop rsp
jbe 0x401d2b
pop rbx
jae 0x401c48
jge 0x401d20
pop rdi
iretq
push r10
sbb al, 0xd
xor eax, 0xb5ae7778
fstp xword [rax + 0x31]
add byte [rdx], dh
jb 0x401cee
lea ecx, [rdx + 0x67]
movsxd rbp, dword [r13 - 0x33]
mov cl, 0x75
xor dword ss:[rsi + 0x61], ecx
cmp edi, dword [rbx + rbp]
jae 0x401d10
int 0xbd
adc byte [rbp + 0x53], al
add al, 0
mov edi, ss
out dx, al
sbb al, byte [rbp + 0x386331b3]
xchg eax, ebx
and eax, 0x49346541
mov bl, 0xd9
enter 0x5aee, 0x43
xor dword [rbp - 0x4c], eax
sti
jmp 0x401cc9
adc bl, byte ss:[rsi]
or eax, 0x6061841a
sub ebx, dword [rbx]
or dword [rdi + 0x346978f9], esi
pop rbp
sub eax, 0x4492bda3
push r12
shr edi, cl
scasb al, byte [rdi]
imul edi, esp, -0x4f
or al, 0x43
in eax, dx
push rsp
sbb ecx, dword [rdi + 0x76]
mov al, 0xd0
or ah, byte [rip - 0x34c08a98]
jae 0x401d3c
jnp 0x401d5d
mov ebx, 0x62666e9f
cmp eax, 0xdb31ed3b
ficom dword [rbx + rdx*4 + 0x61]
mov ch, 0xba
and al, 0xdc
ret
sub eax, 0x766461c2
push rdx
int1
pop rdi
jo 0x401dbe
xor bl, byte [rsi + 0x64]
xchg eax, esi
pop rdi
push 0x38403869
or al, 0x84
jno 0x401d57
insb byte [rdi], dx
mov dword [rcx + 0x63], ebx
movabs dword [0xefd0317625673999], eax
std
fisttp dword [rax]
in al, dx
cmp byte [rsi + 0x6d], ch
jne 0x401ded
je 0x401de8
cmp bl, byte [rdx + 0x68]
retf
xor dh, byte [rbx]
push rdx
jb 0x401dfb
xchg eax, ecx
ja 0x401d87
outsd dx, dword [rsi]
lodsd eax, dword [rsi]
or al, 0xb2
insd dword [rdi], dx
insd dword [rdi], dx
xor esi, dword [rdx]
add al, 0xff
fnsave dword [rbx - 9]
xor dh, byte ss:[rax + 0x31373933]
add al, 0x32
xor eax, 0x38343736
xor esi, dword [rsi]
xor dword [rdi + 0x35ba7fb5], ebp
adc dword [rcx], esi
xor al, 0x32
cmp dword [rcx + rdi], esi
adc al, 5
adc edi, edi
jns 0x401dc6
mov edi, 0x33362237
cmp dword ss:[rdx], esi
cmp byte [rsi], dh
xor al, 0x30
xor eax, 0x37323230
xor esi, dword [rax]
mov dh, 0xb1
neg byte [rdx + 7]
push rdx
xchg byte [rcx + rsi], al
pop rcx
xor ecx, dword [rbp + 0x62dc2dce]
xor eax, 0xa963fc33
fisub dword [rdx - 0x64]
outsd dx, dword [rsi]
or byte [rdi + rax], dl
movsxd rbp, dword [rbx + 0x79]
sub ecx, dword [rbp + 0x7c6cd60b]
sbb eax, eax
cld
jno 0x401de5
push 0x1a65ce9c
xchg eax, esp
int1
mov ch, 0x4b
pop rbp
add eax, 0x7674208b
jbe 0x401e50
xor dl, bl
push rdx
leave
sub al, 0xa1
call 0x5340f85d
push rbp
mov edx, 0x551c9b0a
outsb dx, byte [rsi]
or dword [rbx], esi
push rdx
jp 0x401de4
outsb dx, byte [rsi]
mov bh, 0x75
xor byte gs:[r8 + r8 + 0x67], bpl
outsd dx, dword [rsi]
popfq
in al, dx
mov dh, 0x3b
xchg eax, edx
jae 0x401ec5
insd dword [rdi], dx
je 0x401ec4
push -0x7966491b
or dword [rsi], ebp
pop rsp
jo 0x401e63
outsb dx, byte [rsi]
outsd dx, dword [rsi]
test byte [rdi], 0xdb
mov edx, 0x152d542e
or eax, 0x2e756e67
jne 0x401e39
mov ch, 0x42
lodsb al, byte [rsi]
int1
sub eax, 0xd40d2e69
cmp dh, cl
fcmove st(0), st(4)
mov ebp, 0x6e796409
sbb dword [r14 - 0x1f], r14d
int3
in eax, 0xa1
stosb byte [rdi], al
or al, 0x5f
sbb eax, dword [rbp + 0x28a95ec1]
shr byte [rax], 9
jo 0x401e61
loope 0x401e52
out 0x78, eax
jb 0x401ea6
or ch, byte [rdi + rbp*2]
or byte [rsi], bl
jmp 0x401eb5
jmp 0x401eaf
or esp, dword [rdi + rbp*2]
cmc
push 0x41ecb74
push 0x5d0d7264
movsxd rdi, dword [rdx + 0x496b42d2]
cmp eax, 0x6cbd3b70
xchg ebp, ecx
xchg eax, esi
in eax, 0x11
nop
or ebp, dword [r10 + 0x5b]
push -0x5ef2f94f
insb byte [rdi], dx
add byte [rax - 0x30], ch
or al, 0xb3
fnstcw word [rbx + 0x5e]
mov dh, 4
pop rbx
xor ebp, ebx
push rdx
std
add byte [rax], al
adc ch, byte [rbx]
scasd eax, dword [rdi]
cmpsd dword [rsi], dword ptr [rdi]
add dword [rdi - 0x69], esi
xor ah, byte [rdi]
outsd dx, dword [rsi]
sbb al, 1
enter 0x3480, 0x43
and eax, dword [rdi]
push rsp
leave
nop
or al, 0x32
push rsp
and byte [rdx + rsi], al
enter 0xc90, 0x31
je 0x401f84
jns 0x401f49
xchg eax, esp
or al, 0x24
jg 0x401f0e
ljmp [rdi + 0x64]
nop
cwde
cwde
sub byte [rsi + 0x48], ah
sbb dword [rip + 0x6414e08], eax
sbb edx, dword [rax - 0x3fc03ff5]
mov dl, 0xc9
fxch st(0)
add ebx, edi
sbb byte [rcx - 0x50], bl
movsb byte [rdi], byte ptr [rsi]
sbb dword [rsi + 3], edx
pop rdi
xchg eax, edx
mov esp, 0x2193f07
pop rsi
outsd dx, dword [rsi]
sub al, 0xe9
mov edi, 0x430787ff
and al, 0x67
mov edi, 0x6b070226
mov ecx, 0x3f7480c9
dec al
retf -0x7cda
pushfq
cmpsd dword [rsi], dword ptr [rdi]
mov al, 6
jmp qword [rsi - 0x3f]
xchg eax, edx
outsb dx, byte [rsi]
jp 0x401fc1
add al, 0xd7
adc edx, dword gs:[rsi]
test byte [rdi], 0xe7
jmp qword [rax]
or dword [rsi + rsi*2], 0xffffff84
nop
cmp eax, ecx
nop
push rax
add dword [rcx], ebx
push rax
nop
sbb byte [r14 + 0x72500613], cl
ret 0x2f9b
lcall [rdx]
cmp eax, dword [rax + rcx + 0x4f3f89d9]
or dword [rdi], ebp
sbb esi, dword [rdx + 0x10f03921]
xchg eax, esp
sal byte [rax - 0x6d], 0x21
jb 0x40201a
mov r14b, 0xf
popfq
jg 0x401fc6
mov dh, 0x40
sahf
or al, 0xa
and cl, byte [rip - 0x6f7fb2c1]
sbb al, 0xa3
movsb byte [rdi], byte ptr [rsi]
movabs eax, dword [0x9cbfa909ff07cce4]
mov ebp, 0x7af8559
mov edi, 0x36436028
xchg eax, esp
mov cl, 0x3f
pop rax
jg 0x401fad
push rax
xor cl, al
pop rax
test byte [rdi + 0xc8320e4], bh
loopne 0x401fd0
mov ah, 2
sbb dword [rcx], edx
xchg eax, edx
mov ecx, ecx
or eax, 0x7b96725
jg 0x402016
fisttp dword [rbp - 0x7e]
ror qword [r14], cl
add edx, edi
mov edx, 0x7ece4a1
call qword [rax]
out 0x3f, eax
movups xmm3, xmm4
clc
dec dword [rbx]
xchg eax, esi
popfq
or esi, ebx
iretd
xchg eax, edx
shl byte cs:[rsi], 0x1e
clc
wait
jb 0x401fde
fstp dword [rdi]
jg 0x402021
or al, 0x32
jg 0x402047
cwde
xchg eax, edx
mov r14b, 0x85
mov edi, 0xc9081f1f
or byte cs:[rcx], al
add dword [rax], ebp
cmp dword [rbx], ebx
add al, 0x27
and byte [rdi], bh
mov cl, al
xchg byte [r10 + rcx - 0x78], r12b
jg 0x40205d
movsb byte [rdi], byte ptr [rsi]
mov ebx, 0x83f1000
movabs al, byte [0xb2dcf09841907216]
ror dword [rsi + 0x7f154f0c], 0x30
or esp, dword [rcx + 0x1c]
xor al, 0x3f
jrcxz 0x40200c
int 0xe
adc dword [rbx], edi
sbb ch, byte [rdi]
jg 0x4020b7
movsxd rdx, dword [rcx - 0x44fee1c4]
add byte [rbx - 0xe], dh
lodsb al, byte [rsi]
push rdi
shl byte [rax], 1
push qword [rax]
or dword [rdi], ebx
add ecx, dword [rax + 0x33]
or dword [rdi], edi
sub al, byte [rax]
pop rax
and al, 0x4f
sbb al, byte [rip]
add byte [rax], al
add byte [rdi + rdi*8], ah
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x6cf7fdea], ecx
sub byte [rdi + 0x46], 0xc5
iretd
cmp ah, byte [rcx]
movabs al, byte [0x3800000820000017]
cmp byte [rax], al
add byte [rcx], cl
add byte [rbp + 0xf4], dl
