xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x60209f
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400d00
mov eax, 0
test rax, rax
je 0x400d00
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400d48
mov eax, 0
test rax, rax
je 0x400d48
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x201349], 0
jne 0x400d6a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x201336], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400d80
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400d7b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
add esi, dword [rdi]
cmp esi, 0x3b9aca06
jle 0x400db0
sub esi, 0x3b9aca07
mov dword [rdi], esi
ret
nop dword [rax]
nop word cs:[rax + rax]
movsxd rax, edi
movsxd rsi, esi
movabs rdx, 0x89705f3112a28fe5
imul rsi, rax
mov rax, rsi
imul rdx
mov rax, rsi
sar rax, 0x3f
add rdx, rsi
sar rdx, 0x1d
sub rdx, rax
mov rax, rsi
imul rdx, rdx, 0x3b9aca07
sub rax, rdx
ret
nop dword [rax]
test esi, esi
mov ecx, 1
je 0x400e73
movabs r8, 0x89705f3112a28fe5
nop dword [rax + rax]
movsxd rdi, edi
movsxd r9, ecx
imul r9, rdi
mov rax, r9
imul r8
mov rax, r9
sar rax, 0x3f
add rdx, r9
sar rdx, 0x1d
sub rdx, rax
imul rdx, rdx, 0x3b9aca07
sub r9, rdx
test sil, 1
cmovne ecx, r9d
imul rdi, rdi
mov rax, rdi
imul r8
mov rax, rdi
sar rax, 0x3f
add rdx, rdi
sar rdx, 0x1d
sub rdx, rax
imul rdx, rdx, 0x3b9aca07
sub edi, edx
sar esi, 1
jne 0x400e18
mov eax, ecx
ret
nop word cs:[rax + rax]
ret
nop dword [rax]
nop word cs:[rax + rax]
push r14
push r13
xor eax, eax
push r12
push rbp
mov edx, obj.q
push rbx
mov esi, obj.n
mov edi, str._d_d
call sym.imp.scanf
cmp eax, 1
jle 0x400f76
mov eax, dword [rip + 0x201e17]
xor ebp, ebp
mov ebx, obj.go
test eax, eax
jle 0x400f68
nop dword [rax]
lea rdx, [rbx + 4]
mov rsi, rbx
xor eax, eax
mov edi, str._d_d
add ebp, 1
add rbx, 8
call sym.imp.scanf
mov eax, dword [rip + 0x201de4]
cmp eax, ebp
jg 0x400ed0
test eax, eax
jle 0x400f68
mov r13d, obj.dist
xor r14d, r14d
nop dword [rax]
test eax, eax
jle 0x400f58
mov rbx, r13
mov r12, r13
xor ebp, ebp
jmp 0x400f35
nop word cs:[rax + rax]
mov eax, dword [rip + 0x201dae]
add ebp, 1
add r12, 4
add rbx, 4
cmp eax, ebp
jle 0x400f58
xor eax, eax
mov rsi, r12
mov edi, 0x401736
call sym.imp.scanf
cmp dword [rbx], -1
jne 0x400f20
mov dword [rbx], 0x3c336080
jmp 0x400f20
nop dword [rax]
add r14d, 1
add r13, 0x1b8
cmp r14d, eax
jl 0x400f08
pop rbx
mov eax, 1
pop rbp
pop r12
pop r13
pop r14
ret
pop rbx
xor eax, eax
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax + rax]
nop word cs:[rax + rax]
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x78
mov r12d, dword [rip + 0x201d2f]
mov rax, qword fs:[0x28]
mov qword [rsp + 0x68], rax
xor eax, eax
test r12d, r12d
jle 0x4012ce
movsxd rax, r12d
mov r13d, obj.dist
mov qword [rsp + 0x38], 0
shl rax, 2
mov qword [rsp + 0x40], 4
xor r14d, r14d
mov qword [rsp + 0x18], rax
lea eax, [r12 - 1]
mov dword [rsp + 0x30], 0
mov dword [rsp + 0x54], eax
lea rax, [rax*4 + 4]
mov qword [rsp + 0x48], rax
mov rax, r13
mov esi, r12d
mov rbx, qword [rsp + 0x40]
and eax, 0xf
mov r8d, obj.dist
mov qword [rsp], 0
shr rax, 2
mov r9d, 0x10
neg rax
lea rdx, [rbx + 0x602cdc]
and eax, 3
cmp eax, r12d
cmova eax, r12d
xor r15d, r15d
sub esi, eax
mov edi, eax
mov dword [rsp + 0x20], eax
lea ecx, [rsi - 4]
mov dword [rsp + 0x34], esi
mov qword [rsp + 0x28], rdi
shr ecx, 2
add ecx, 1
lea esi, [rcx*4]
mov dword [rsp + 0x50], esi
mov esi, dword [rsp + 0x54]
sub esi, eax
mov rax, rdi
lea rdi, [r14 + 0x10]
add rax, qword [rsp + 0x38]
mov dword [rsp + 0x24], esi
mov qword [rsp + 0x10], rdi
movsxd rdi, dword [rsp + 0x30]
lea rsi, [rax*4 + obj.dist]
xor eax, eax
imul rdi, rdi, 0x6e
mov qword [rsp + 8], rdi
nop dword [rax + rax]
cmp rax, qword [rsp + 0x10]
setge r10b
cmp r14, r9
setge dil
or r10d, edi
cmp r12d, 7
seta r11b
cmp rax, r9
setge dil
and edi, r11d
test r10b, dil
je 0x4014e6
mov rdi, qword [rsp + 0x18]
lea r10, [rbx - 4]
add rdi, rax
cmp r10, rdi
setge r10b
cmp rax, rbx
setge dil
or r10b, dil
je 0x4014e6
mov r11d, dword [rsp + 0x20]
xor edi, edi
test r11d, r11d
je 0x401155
mov edi, dword [r13]
add edi, dword [rdx]
mov r10d, dword [r8]
cmp edi, r10d
cmovg edi, r10d
cmp r11d, 1
mov dword [r8], edi
mov edi, 1
je 0x401155
mov edi, dword [r13 + 4]
add edi, dword [rdx]
mov r10d, dword [r8 + 4]
cmp edi, r10d
cmovg edi, r10d
cmp r11d, 2
mov dword [r8 + 4], edi
mov edi, 2
je 0x401155
mov edi, dword [r13 + 8]
add edi, dword [rdx]
mov r10d, dword [r8 + 8]
cmp edi, r10d
cmovg edi, r10d
mov dword [r8 + 8], edi
mov edi, 3
cmp dword [rsp + 0x24], 2
jbe 0x4011cb
movd xmm4, dword [rdx]
mov r10, qword [rsp + 0x28]
xor r11d, r11d
add r10, qword [rsp]
pshufd xmm3, xmm4, 0
lea rbp, [r10*4 + obj.dist]
xor r10d, r10d
nop dword [rax]
movdqa xmm2, xmmword [rsi + r10]
add r11d, 1
movdqu xmm1, xmmword [rbp + r10]
paddd xmm2, xmm3
movdqa xmm0, xmm2
pcmpgtd xmm0, xmm1
pand xmm1, xmm0
pandn xmm0, xmm2
por xmm0, xmm1
movups xmmword [rbp + r10], xmm0
add r10, 0x10
cmp r11d, ecx
jb 0x401180
mov r11d, dword [rsp + 0x50]
add edi, r11d
cmp dword [rsp + 0x34], r11d
je 0x40126e
movsxd r10, r15d
movsxd r11, edi
imul r10, r10, 0x6e
lea rbp, [r10 + r11]
add r11, qword [rsp + 8]
mov r11d, dword [r11*4 + obj.dist]
add r11d, dword [rdx]
cmp r11d, dword [rbp*4 + obj.dist]
cmovg r11d, dword [rbp*4 + obj.dist]
mov dword [rbp*4 + obj.dist], r11d
lea r11d, [rdi + 1]
cmp r12d, r11d
jle 0x40126e
movsxd r11, r11d
lea rbp, [r10 + r11]
add r11, qword [rsp + 8]
mov r11d, dword [r11*4 + obj.dist]
add r11d, dword [rdx]
cmp r11d, dword [rbp*4 + obj.dist]
cmovg r11d, dword [rbp*4 + obj.dist]
add edi, 2
cmp edi, r12d
mov dword [rbp*4 + obj.dist], r11d
jge 0x40126e
movsxd rdi, edi
add r10, rdi
add rdi, qword [rsp + 8]
mov r11d, dword [r10*4 + obj.dist]
mov edi, dword [rdi*4 + obj.dist]
add edi, dword [rdx]
cmp edi, r11d
cmovg edi, r11d
mov dword [r10*4 + obj.dist], edi
add r15d, 1
add rax, 0x1b8
add rbx, 0x1b8
add r9, 0x1b8
add r8, 0x1b8
add rdx, 0x1b8
add qword [rsp], 0x6e
cmp r15d, r12d
jne 0x4010a0
add dword [rsp + 0x30], 1
add r14, 0x1b8
add qword [rsp + 0x40], 4
mov eax, dword [rsp + 0x30]
add r13, 0x1b8
add qword [rsp + 0x38], 0x6e
cmp eax, r12d
jne 0x401003
mov edi, dword [rip + 0x2019fc]
test edi, edi
jle 0x4014c7
fld qword [rip + 0x46e]
xor ebx, ebx
lea rdx, [rsp + 0x64]
lea rsi, [rsp + 0x60]
xor eax, eax
mov edi, str._d_d
fstp qword [rsp]
call sym.imp.scanf
mov eax, dword [rsp + 0x60]
mov r13d, dword [rip + 0x2019cc]
fld qword [rsp]
lea r15d, [rax - 1]
mov eax, dword [rsp + 0x64]
test r13d, r13d
mov dword [rsp + 0x60], r15d
lea r14d, [rax - 1]
mov dword [rsp + 0x64], r14d
jle 0x401520
lea ebp, [r13 - 1]
mov eax, obj.ans
add rbp, 1
mov rdx, rbp
shl rdx, 4
add rdx, rax
nop dword [rax]
fstp xword [rax]
fld xword [rax]
add rax, 0x10
cmp rax, rdx
jne 0x401348
lea r12, [rbp*4]
fstp qword [rsp]
mov edi, obj.used
xor esi, esi
mov rdx, r12
call sym.imp.memset
movsxd rax, r15d
fldz
xor edi, edi
shl rax, 4
fstp xword [rax + obj.ans]
fld qword [rsp]
nop dword [rax + rax]
xor eax, eax
mov edx, 0xffffffff
jmp 0x4013c4
nop dword [rax]
movsxd rcx, edx
mov rsi, rax
shl rcx, 4
shl rsi, 4
fld xword [rcx + obj.ans]
fld xword [rsi + obj.ans]
fxch st(1)
fucomip st(1)
fstp st(0)
cmova edx, eax
add rax, 1
cmp rax, rbp
je 0x4013df
mov esi, dword [rax*4 + obj.used]
test esi, esi
jne 0x4013bb
cmp edx, -1
jne 0x401398
mov edx, eax
add rax, 1
cmp rax, rbp
jne 0x4013c4
movsxd rdx, edx
xor eax, eax
imul rsi, rdx, 0x1b8
mov r8, rdx
mov dword [rdx*4 + obj.used], 1
shl r8, 4
nop dword [rax]
mov ecx, dword [rax + obj.used]
test ecx, ecx
jne 0x401458
mov ecx, dword [rsi + rax + obj.dist]
cmp ecx, dword [rdx*8 + obj.go]
jg 0x401458
mov dword [rsp], ecx
fild dword [rsp]
fild dword [rdx*8 + 0x602964]
fdivp st(1)
fld xword [r8 + obj.ans]
faddp st(1)
fld xword [rax*4 + obj.ans]
fucomip st(1)
jbe 0x401450
fstp xword [rax*4 + obj.ans]
jmp 0x401458
nop word cs:[rax + rax]
fstp st(0)
nop word [rax + rax]
add rax, 4
cmp r12, rax
jne 0x401400
add edi, 1
cmp edi, r13d
jne 0x401388
mov eax, dword [rip + 0x20185d]
fstp qword [rsp]
mov esi, str._.18f_c
mov edi, 1
sub eax, 1
cmp eax, ebx
sete al
add ebx, 1
movzx eax, al
movsx edx, byte [rax + 0x401741]
movsxd rax, r14d
shl rax, 4
fld xword [rax + obj.ans]
mov eax, 1
fstp qword [rsp + 0x58]
movsd xmm0, qword [rsp + 0x58]
call sym.imp.__printf_chk
cmp dword [rip + 0x201814], ebx
fld qword [rsp]
jg 0x4012e4
fstp st(0)
mov rax, qword [rsp + 0x68]
xor rax, qword fs:[0x28]
jne 0x401534
add rsp, 0x78
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rdi, qword [rsp + 0x48]
mov r11, r8
lea rbp, [rdi + r8]
nop word [rax + rax]
mov r10, r11
mov edi, dword [rdx]
sub r10, rax
add edi, dword [r10 + r14]
mov r10d, dword [r11]
cmp edi, r10d
cmovg edi, r10d
add r11, 4
mov dword [r11 - 4], edi
cmp r11, rbp
jne 0x4014f8
jmp 0x40126e
movsxd rax, r15d
fldz
shl rax, 4
fstp xword [rax + obj.ans]
jmp 0x40146d
call sym.imp.__stack_chk_fail
nop dword [rax]
push rbx
mov ebx, edi
mov edi, obj.mrand
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::operator__
movsxd rdi, ebx
xor edx, edx
div rdi
pop rbx
mov eax, edx
ret
nop dword [rax]
mov rax, qword [rdi + 0x1380]
cmp rax, 0x26f
ja 0x4015b8
lea rdx, [rax + 1]
mov rax, qword [rdi + rax*8]
mov qword [rdi + 0x1380], rdx
mov rdx, rax
shr rdx, 0xb
mov edx, edx
xor rax, rdx
mov rdx, rax
shl rdx, 7
and edx, 0x9d2c5680
xor rax, rdx
mov rdx, rax
shl rdx, 0xf
and edx, 0xefc60000
xor rax, rdx
mov rdx, rax
shr rdx, 0x12
xor rax, rdx
ret
nop dword [rax]
mov r8, qword [rdi]
lea rcx, [rdi + 8]
lea rdx, [rdi + 0x720]
mov r10d, 0x9908b0df
xor r9d, r9d
nop
mov rax, r8
mov r8, qword [rcx]
and rax, 0xffffffff80000000
mov rsi, r8
and esi, 0x7fffffff
or rax, rsi
mov rsi, r9
test al, 1
cmovne rsi, r10
xor rsi, qword [rcx + 0xc60]
shr rax, 1
add rcx, 8
xor rax, rsi
mov qword [rcx - 0x10], rax
cmp rdx, rcx
jne 0x4015d0
mov rsi, qword [rdi + 0x718]
lea r10, [rdi + 0x1380]
mov r9d, 0x9908b0df
xor r8d, r8d
nop word [rax + rax]
mov rax, rsi
mov rsi, qword [rdx]
and rax, 0xffffffff80000000
mov rcx, rsi
and ecx, 0x7fffffff
or rax, rcx
mov rcx, r8
test al, 1
cmovne rcx, r9
xor rcx, qword [rdx - 0x720]
shr rax, 1
add rdx, 8
xor rax, rcx
mov qword [rdx - 0x10], rax
cmp r10, rdx
jne 0x401628
mov rax, qword [rdi]
mov rcx, qword [rdi + 0x1378]
mov esi, 0x9908b0df
mov rdx, rax
and rcx, 0xffffffff80000000
and edx, 0x7fffffff
or rdx, rcx
mov rcx, rdx
shr rcx, 1
xor rcx, qword [rdi + 0xc60]
and edx, 1
cmovne rdx, rsi
xor rdx, rcx
mov qword [rdi + 0x1378], rdx
mov edx, 1
jmp 0x401577
nop dword [rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200726]
push rbp
lea rbp, [rip + 0x20072e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401706
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x4016f0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
and eax, 0x642564
and eax, 0x6638312e
and eax, 0xa200063
add byte [rbx + 0x61], al
jae 0x4017ad
and byte [rbx], ah
and eax, 0x203a64
add byte [rax], al
enter 0x674e, 0x6d
insd dword [edi], dx
shr dword [rbx + 0x31b0143], 0x3b
add dword [rbx], ebx
add edi, dword [rbx]
test byte [rax], al
add byte [rax], al
sldt word [rax]
add byte [rax - 0x2f00000f], ch
add byte [rax], al
add byte [rax + 0x18fffff2], ch
add dword [rax], eax
add al, bl
inc dword [rax + 2]
add byte [rax], al
cmp ch, dh
inc eax
add al, byte [rax]
add byte [rax - 0xb], cl
jmp qword [rax + 0x48000000]
idiv bh
inc dword [rax + 1]
add byte [rax], al
push 0x58fffff6
add dword [rax], eax
add byte [rax + 0x70fffff6], ch
add dword [rax], eax
add byte [rax], ch
idiv edi
dec dword [rax + 0x38000001]
idiv edi
jmp qword [rax + 0x38000001]
clc
push rax
add dword [rax], eax
add al, ch
std
jmp qword [rax + 0x8000002]
dec dword [rax + 0x58000002]
fadd dword [rdx]
add byte [rax], al
enter -1, -1
and byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4017ff
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
movabs al, byte [0x2afffff4]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40182f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sal al, 1
push rax
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x401871
add edx, eax
or dword [rax], eax
add ebx, dword [rbx]
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
mov cl, dh
ljmp [rsi]
add dword [rax], eax
add byte [rsp + rdx*4], al
sbb al, byte [rax]
adc byte [rbx - 0x3ff1b3fe], al
add ch, ch
or cl, byte [rsi]
adc byte [rcx + 0xe], al
or byte [rcx + 0xb], al
adc al, 0
add byte [rax], al
mov word [rax], es
add byte [rax], al
add ch, dh
call qword [rbx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add byte [rax], al
add byte [rax], cl
cmc
cmp dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
mov esp, 0x30000000
cmc
push qword [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax + 0x2fffff5], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add ah, ch
add byte [rax], al
add byte [rax - 0xe00000b], dl
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x180e4202], cl
lea eax, [rbx]
and byte [rsp + rax - 0x79d7f1bf], cl
add eax, 0x83300e46
add cl, dl
or cl, byte [rsi]
sub byte [rsi + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
sub byte [rbx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rcx + rax], bh
add byte [rax], al
idiv dil
ljmp [rcx + 5]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx - 0x4ff1bbf9], al
add dword [rbx], eax
cmp eax, 0x380e0a05
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx + rax - 0xe700000], cl
call qword [rdx + 1]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rsi + 0x180e4202], cl
lea eax, [rbx]
and byte [rsp + rax - 0x79d7f1bf], cl
add eax, 0x83300e41
add esi, dword [rbx]
add dword [rdx], ecx
xor byte [rcx + 0xe], al
sub byte [rcx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add dword [rax], eax
add byte [rax - 5], bh
dec dword [rbp + 1]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
in al, dx
add dword [rax], eax
add byte [rax - 5], al
lcall [rcx]
add byte [rax], al
add byte [rax], al
adc byte [rbx + 0x80e5502], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
or al, 2
add byte [rax], al
jo 0x401a14
inc dword [rip]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rdx + rax], ah
add byte [rax], al
js 0x401a36
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x401a72
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
insb byte [rdi], dx
add al, byte [rax]
add byte [rax + 0x2fffffc], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
adc esp, dword [rax]
add eax, 0x56d0000
cld
add dword [rax], eax
ja 0x401aa8
lahf
add al, byte [rax]
xchg eax, ebp
add al, byte [rip]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0x400c], dl
add byte [rax], al
add byte [rax + 0xd], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 1], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add word [rax], ax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x401e4a
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rdi + rdx], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sbb eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 0x4004], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb dword [rdx], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rax
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4007], dl
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 7], bh
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add al, cl
add byte [rax], al
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rdx + 0x4006], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or dword es:[rax], eax
add byte [rax], al
add byte [rax], al
or dword ss:[rax], eax
add byte [rax], al
add byte [rax], al
or dword [rax], r8d
add byte [rax], al
add byte [rax], al
push rsi
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or word [rax], ax
add byte [rax], al
add byte [rax], al
jbe 0x402053
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x4009], al
add byte [rax], al
add byte [rsi + 0x4009], dl
add byte [rax], al
add byte [rsi + 0x4009], ah
add byte [rax], al
add byte [rsi + 0x4009], dh
add byte [rax], al
add dh, al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
out 9, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402110
je 0x402119
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x402127
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x402124
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 0x4004], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rdx + 0x4006], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add al, cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax + 7], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add byte [rax + 0x4007], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add al, ah
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, 0
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x4009f000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
verr word [rdi + rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rax + 0x17], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], dl
add byte [rdx + rbx + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
call 0x4082da
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
mov byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], dl
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0xd], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rbx], bl
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add dword [rax], eax
adc eax, 0x601df800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
call 0x408472
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x2000000], ch
add byte [rsi], cl
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add dword cs:[rax], eax
add byte [rax], al
add byte [rax], al
add bl, ch
add byte [rax], al
add byte [rcx], al
add byte [rbx], bl
add byte [rax + 0x60fd], cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, bh
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400c], dl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add dword [rax], eax
add byte [rcx], al
add byte [rdx], dl
add byte [rax + 0x401a], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], bl
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], ch
add dword [rax], eax
add byte [rax], al
add byte [rcx], dl
add byte [rax + 0x17], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], bh
add byte [rax], al
add dword [rax], eax
sbb dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 1], dl
add byte [rax], al
add byte [rax], al
adc al, 0
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rax, dword [rcx]
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x408592
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 1], dh
add byte [rax], al
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 3], bl
add byte [rax], al
and byte [rax], al
sbb al, byte [rax]
mov byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 1], bh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, byte [rcx]
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x400e], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x12000001], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000001], ch
add byte [rsi], cl
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 3], ah
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x400c], ah
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x20000001], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, bl
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dh
add dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x400f], dl
add byte [rax], al
add byte [rcx + 5], ch
add byte [rax], al
add bl, bh
add dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x15], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax + 0x120000], dh
verr word [rdi + rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x12000002], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x12000002], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x12000002], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add eax, dword [rax]
add byte [rcx], dl
add byte [rbx], bl
add byte [rax + 0x6027], ah
add byte [rax], al
add byte [rax + 1], bh
add byte [rax], al
add ch, al
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bl
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0x4009], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rcx], eax
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
add dl, ch
add byte [rax], al
add byte [rax], al
add byte [rax + 0x13], cl
add byte [rax], al
add byte [rax], ah
add eax, dword [rax]
add byte [rcx], dl
add byte [rax], dl
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 3], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsp
add eax, dword [rax]
add byte [rax], dl
add byte [rdx], bl
add byte [rax + 0x6020], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 3], ch
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x400e], dl
add byte [rax], al
add cl, dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 3], dh
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x400d], ah
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rax], bh
add byte [rcx], dl
add bl, byte [rdx]
add byte [rax + 0x6020], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x11000003], cl
add bl, byte [rdx]
add byte [rax + 0x6020], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x11000003], dl
add byte [rbx], bl
add al, dl
sub al, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edi
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x4016], dh
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsd dword [rsi], dword ptr [rdi]
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add al, al
or eax, 0x40
add byte [rax], al
cmp dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
loop 0x4028b5
add byte [rax], al
and al, byte [rax]
add byte [rax + 0x15], ah
add byte [rax], al
add byte [rax], al
add byte [rbp + 1], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
jb 0x4028ce
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
cwde
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jle 0x4028e6
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x11000005
add byte [rbx], bl
add ah, dl
sub al, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
add dword [rax], eax
add byte [rax], dl
add byte [rbx], bl
add byte [rax + 0x60fd], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000004], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add al, 0
add byte [rcx], dl
add byte [rbx], bl
add al, ah
sub al, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], dl
mov ebp, 0
add byte [rax], al
add al, 0
add byte [rax], dl
add byte [rdx], bl
add byte [rax + 0x6020], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, dl
add al, 0
add byte [rdx], dl
add byte [rax], al
add al, dl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test byte [rax + rax], 0
adc dword [rax], eax
sbb eax, dword [rax]
shl byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
cli
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], dl
add eax, 0x120000
add byte [rax], dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
push rdx
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x12000003], ah
add byte [rbx], cl
add al, ah
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x110000
sbb eax, dword [rax]
sub dword [rax], esp
add byte [rax], al
add byte [rax], al
jo 0x4029fd
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x72], ah
je 0x402a78
je 0x402a7c
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402a2e
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402aac
jb 0x402ab2
pop rdi
jne 0x402abb
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402ab5
je 0x402ab1
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402ad1
jb 0x402ad7
pop rdi
jne 0x402ae0
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402ae3
jns 0x402ad3
outsb dx, byte gs:[rsi]
je 0x402aea
jns 0x402a7a
jb 0x402ade
insd dword [rdi], dx
pop rdi
jne 0x402af0
insd dword [rdi], dx
jns 0x402a86
pop rdi
pop rdi
jb 0x402aec
insd dword [rdi], dx
pop rdi
jne 0x402afe
insd dword [rdi], dx
jns 0x402af3
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402afe
jns 0x402afe
outsb dx, byte gs:[rsi]
je 0x402b15
jns 0x402aa5
insd dword [rdi], dx
imul ebp, dword [rsi + 0x2e], 0x707063
pop rdi
pop rdx
xor al, 0x31
pop rdi
pop rdi
jae 0x402b2a
je 0x402b22
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x402b30
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x402b46
jb 0x402b49
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
movsxd rbp, dword cs:[rdi + 0x6e]
jae 0x402b57
jo 0x402b57
outsd dx, dword [rsi]
jo 0x402b16
xor dword [rdi], esi
add byte [rdi + 0x5a], bl
push rbx
je 0x402b3c
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdi
pop rdi
jae 0x402b7a
pop rdi
pop r15
insd dword [rdi], dx
jb 0x402b6d
outsb dx, byte [rsi]
add byte fs:[rdi + 0x5f], bl
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402bbe
jns 0x402bbe
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402bcf
jns 0x402bcf
jae 0x402be6
jb 0x402be9
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
xor eax, 0x65776f70
jb 0x402bf1
imul eax, dword [rax], 0x70375a5f
jb 0x402bf5
movsxd rsp, dword [rcx + 0x6c]
movsxd rsi, dword [rsi]
insd dword [rdi], dx
insd dword [rdi], dx
jae 0x402c00
je 0x402bdd
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x6c5f5f00
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x402c37
jb 0x402c3a
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x402c2c
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x402c4d
jae 0x402bdd
pop rdi
pop rdx
insb byte [rdi], dx
push rax
jbe 0x402c24
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
xor eax, 0x766c6f73
jbe 0x402bfb
pop rdi
pop rdx
xor esi, dword [rdx + 0x6e]
imul eax, dword fs:[rax], 0x72705f5f
imul ebp, dword [rsi + 0x74], 0x68635f66
imul eax, dword [rax + 0x40], 0x47
pop r15
xor ch, byte [rsi]
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402c54
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x402c98
movsxd rsp, dword [rbp + 0x37]
pop rdi
pop r15
imul ebp, dword [rsi + 0x69], 0x4b524574
push rbx
je 0x402c77
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x402cb6
movsxd rbx, dword [rdi + 0x73]
je 0x402cc4
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x402cbf
je 0x402cd4
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x402cbf
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x402d26
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x402d2b
pop rdi
je 0x402d33
js 0x402d39
je 0x402d12
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x402d1d
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x402d72
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x402d9a
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x402dae
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x402dc3
pop rdi
jae 0x402dd9
jb 0x402ddc
add byte [rdi + 0x5a], bl
xor al, 0x72
jbe 0x402d72
pop rdi
pop rdx
xor esp, dword [rcx + 0x64]
push rdx
imul ebp, dword [rcx], 0x4d545f5f
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
jae 0x402dfc
pop rdi
push 0x6c646e61
add byte gs:[rcx], dh
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x402dde
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x402e22
movsxd rsp, dword [rbp + 0x39]
pop rdi
pop r15
je 0x402e39
insb byte [rdi], dx
jbe 0x402e08
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dword [rax], edi
add byte [rdi + 0x5a], bl
xor al, 0x6d
jne 0x402e4a
je 0x402e49
imul eax, dword [rax], 0x534e5a5f
je 0x402e1a
xor ebp, dword [rbp + 0x65]
jb 0x402e60
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x402e6b
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x63454533
insb byte [rdi], dx
jbe 0x402e72
pop rdi
pop rdi
jae 0x402eea
pop rdi
jae 0x402eee
jb 0x402ef1
add byte [rdi + 0x5f], bl
jae 0x402ef6
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402ed1
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x402f15
movsxd rsp, dword [rbp + 0x37]
pop rdi
pop r15
imul bp, word [rsi + 0x69], 0x7645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dword [rax], edi
add byte [rcx + rbp*2 + 0x73], ah
je 0x402ece
pop rdi
je 0x402f35
add byte [rdi + 0x5f], bl
js 0x402f52
pop rdi
jo 0x402f42
jb 0x402f52
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
outsb dx, byte [rsi]
jae 0x402efa
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x402f68
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x402f7b
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
insd dword [rdi], dx
imul ebp, dword [rsi], 0x6f67
jae 0x402f97
insd dword [rdi], dx
je 0x402f82
add byte [rsi], ch
jae 0x402f9a
jb 0x402f9c
add byte [rsi], ch
jae 0x402f96
jae 0x402fa4
jb 0x402fa6
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402fa7
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402fb5
outsb dx, byte cs:[esi]
jne 0x402f83
jne 0x402fc1
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x402f91
push 0x687361
jns 0x402fda
jae 0x402fe7
insd dword [rdi], dx
add byte [rsi], ch
jns 0x402fe2
jae 0x402fea
jb 0x402f78
outsb dx, byte cs:[esi]
jne 0x402fab
jbe 0x402fe4
jb 0x402ff4
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x402fb8
jbe 0x402ff1
jb 0x403001
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x402ffc
insb byte [rdi], dx
jns 0x40300b
add byte [rsi], ch
jb 0x403006
insb byte [rdi], dx
jo 0x403012
je 0x402fa8
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x402fe1
outsd dx, dword [esi]
je 0x402fb7
je 0x40301f
js 0x403030
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x403035
je 0x40302b
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x40304e
jo 0x403062
pop rdi
je 0x403052
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403060
jns 0x403001
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x40307c
jns 0x40300d
push 0x63
jb 0x403012
jns 0x403084
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x40308e
je 0x403024
je 0x40308a
add byte [rsi], ch
jae 0x4030a1
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x403038
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, cl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rax + rax*2], al
add byte [rax], al
add byte [rax], al
add byte [rax + 4], cl
add byte [rax], al
add byte [rcx], bl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x4006], ah
add byte [rax], al
add byte [rdx + 6], ah
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add byte [rax], al
add byte [rax], al
add al, cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x403291
add byte [rax], al
add byte [rax], al
add byte [rax + 7], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4007], dl
add byte [rax], al
add byte [rax + 7], dl
add byte [rax], al
add byte [rax + 1], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x19000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
or byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x40331a
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
lock or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1000000], bl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
and cl, byte [rip]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x600000001000000], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdx], ah
add byte [rax], al
add byte [rax], al
add byte [rdi + rdx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rax
add byte [rax], al
add byte [rax], al
add byte [rax + 0x17], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
test byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ah, 2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rbx + 0x40], dl
add byte [rax], al
xchg eax, esp
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
call 0x403572
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], cl
add byte [rax], al
add byte [rax + 0x20], cl
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rax + 0x20], bl
add byte [rax], al
add al, dh
fadd qword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], bl
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb ch, byte [rdi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rbx], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
