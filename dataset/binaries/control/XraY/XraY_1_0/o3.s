xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6020af
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400d00
mov eax, 0
test rax, rax
je 0x400d00
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400d48
mov eax, 0
test rax, rax
je 0x400d48
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x201369], 0
jne 0x400d6a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x201356], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400d80
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400d7b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
add esi, dword [rdi]
cmp esi, 0x3b9aca06
jle 0x400db0
sub esi, 0x3b9aca07
mov dword [rdi], esi
ret
nop dword [rax]
nop word cs:[rax + rax]
movsxd rax, edi
movsxd rsi, esi
movabs rdx, 0x89705f3112a28fe5
imul rsi, rax
mov rax, rsi
imul rdx
mov rax, rsi
sar rax, 0x3f
add rdx, rsi
sar rdx, 0x1d
sub rdx, rax
mov rax, rsi
imul rdx, rdx, 0x3b9aca07
sub rax, rdx
ret
nop dword [rax]
test esi, esi
mov ecx, 1
je 0x400e73
movabs r8, 0x89705f3112a28fe5
nop dword [rax + rax]
movsxd rdi, edi
movsxd r9, ecx
imul r9, rdi
mov rax, r9
imul r8
mov rax, r9
sar rax, 0x3f
add rdx, r9
sar rdx, 0x1d
sub rdx, rax
imul rdx, rdx, 0x3b9aca07
sub r9, rdx
test sil, 1
cmovne ecx, r9d
imul rdi, rdi
mov rax, rdi
imul r8
mov rax, rdi
sar rax, 0x3f
add rdx, rdi
sar rdx, 0x1d
sub rdx, rax
imul rdx, rdx, 0x3b9aca07
sub edi, edx
sar esi, 1
jne 0x400e18
mov eax, ecx
ret
nop word cs:[rax + rax]
ret
nop dword [rax]
nop word cs:[rax + rax]
push rbx
xor eax, eax
mov esi, obj.n
mov edi, 0x401704
call sym.imp.scanf
test eax, eax
jle 0x400ed8
mov ebx, obj.cnt
nop dword [rax + rax]
xor eax, eax
mov rsi, rbx
mov edi, 0x401704
call sym.imp.scanf
cmp eax, 1
jne 0x400edc
add rbx, 4
cmp rbx, obj.n
jne 0x400eb0
pop rbx
ret
nop dword [rax + rax]
xor eax, eax
pop rbx
ret
mov ecx, str.int_read__
mov edx, 0x45
mov esi, str.sorted_code_control_XraY_XraY_1_0_main.cpp
mov edi, str.scanf___d___cnt___i_____1
call sym.imp.__assert_fail
nop
nop word cs:[rax + rax]
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x68
mov edi, dword [rip + 0x2011cc]
mov esi, dword [rip + 0x2011ce]
mov ecx, dword [rip + 0x2011d0]
mov rax, qword fs:[0x28]
mov qword [rsp + 0x58], rax
xor eax, eax
mov ebx, edi
sub ebx, dword [rip + 0x2011b4]
mov eax, esi
mov edx, ecx
sub eax, dword [rip + 0x2011b2]
sub edx, dword [rip + 0x20119c]
test ebx, ebx
mov dword [rsp + 0x20], ebx
mov dword [rsp + 0x24], eax
mov dword [rsp + 0x28], edx
js 0x401160
test eax, eax
js 0x401160
test edx, edx
js 0x401160
lea r8d, [rbx + rax]
test ebx, ebx
lea r9d, [r8 + rdx]
mov dword [rsp + 0x18], r9d
jne 0x400f85
test edi, edi
jg 0x40114d
test eax, eax
jne 0x401198
test esi, esi
jg 0x401148
test edx, edx
jne 0x4011b8
test ecx, ecx
jg 0x401490
cmp ebx, eax
jge 0x4011b8
lea rcx, [rsp + 0x20]
lea rax, [rsp + 0x24]
sub rax, rcx
sar rax, 2
mov dword [rsp + 0x1c], eax
cdqe
mov eax, dword [rsp + rax*4 + 0x20]
add eax, eax
cmp dword [rsp + 0x18], eax
jl 0x401160
lea rax, [rsp + 0x30]
mov edx, dword [rsp + 0x18]
mov qword [rsp + 0x38], 0
mov byte [rsp + 0x40], 0
mov qword [rsp + 0x10], rax
lea rax, [rsp + 0x40]
test edx, edx
mov qword [rsp + 0x30], rax
je 0x40149a
mov ebp, 0xffffffff
mov qword [rsp + 8], rax
nop dword [rax]
test ebp, ebp
je 0x4014a2
cmp ebp, 1
je 0x4012a0
mov edx, dword [rsp + 0x24]
cmp edx, dword [rsp + 0x20]
mov ecx, 1
jg 0x401046
sete al
xor ecx, ecx
cmp dword [rsp + 0x1c], 1
sete cl
and ecx, eax
movsxd rax, ecx
mov edx, dword [rsp + rax*4 + 0x20]
cmp ebp, 2
je 0x401290
mov eax, dword [rsp + 0x28]
mov ebp, 2
cmp edx, eax
jl 0x401072
mov eax, edx
jne 0x401070
cmp dword [rsp + 0x1c], 2
je 0x401072
nop word [rax + rax]
mov ebp, ecx
test eax, eax
jle 0x4014b0
sub eax, 1
movsxd rdx, ebp
lea ebx, [rbp + rbp]
mov dword [rsp + rdx*4 + 0x20], eax
mov rax, qword [rsp + 0x30]
cmp rax, qword [rsp + 8]
mov r12, qword [rsp + 0x38]
movsxd r14, ebx
movzx r15d, byte [r14 + str.ROYGBV]
lea r13, [r12 + 1]
je 0x4012b0
mov rdx, qword [rsp + 0x40]
cmp r13, rdx
ja 0x4011d0
mov byte [rax + r12], r15b
mov rax, qword [rsp + 0x30]
add ebx, 3
mov qword [rsp + 0x38], r13
mov edx, 0x2aaaaaab
mov byte [rax + r12 + 1], 0
mov eax, ebx
imul edx
mov eax, ebx
sar eax, 0x1f
sub edx, eax
lea eax, [rdx + rdx*2]
add eax, eax
sub ebx, eax
movsxd rdx, ebx
mov eax, dword [rdx*4 + obj.cnt]
test eax, eax
jne 0x4011f8
sub dword [rsp + 0x18], 1
jne 0x401010
mov rdx, qword [rsp + 0x30]
mov esi, 0x40172d
mov edi, 1
xor eax, eax
call sym.imp.__printf_chk
mov rdi, qword [rsp + 0x30]
mov rax, qword [rsp + 0x38]
movzx eax, byte [rdi + rax - 1]
cmp byte [rdi], al
je 0x4014ee
mov rax, qword [rsp + 0x10]
add rax, 0x10
cmp rdi, rax
je 0x401171
call sym.operatordelete
jmp 0x401171
mov ebx, 2
mov ecx, dword [rsp + 0x18]
test ecx, ecx
je 0x401322
nop dword [rax]
mov esi, str.IMPOSSIBLE_n
mov edi, 1
xor eax, eax
call sym.imp.__printf_chk
mov rax, qword [rsp + 0x58]
xor rax, qword fs:[0x28]
jne 0x401507
add rsp, 0x68
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
test edx, edx
je 0x400f9d
cmp ebx, eax
jge 0x4011b8
lea rcx, [rsp + 0x20]
mov ebx, eax
lea rax, [rcx + 4]
jmp 0x4011c0
nop dword [rax]
lea rcx, [rsp + 0x20]
mov rax, rcx
lea rsi, [rcx + 8]
cmp edx, ebx
cmovg rax, rsi
jmp 0x400fb7
nop
mov rdi, qword [rsp + 0x10]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r12
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x4010bb
nop dword [rax]
sub eax, 1
mov rbx, qword [rsp + 0x38]
movzx r13d, byte [rdx + str.ROYGBV]
mov dword [rdx*4 + obj.cnt], eax
mov rax, qword [rsp + 0x30]
cmp rax, qword [rsp + 8]
lea r12, [rbx + 1]
je 0x401308
mov rdx, qword [rsp + 0x40]
cmp r12, rdx
ja 0x4012e0
mov byte [rax + rbx], r13b
mov rax, qword [rsp + 0x30]
mov qword [rsp + 0x38], r12
mov byte [rax + rbx + 1], 0
mov rax, qword [rsp + 0x30]
cmp rax, qword [rsp + 8]
mov rbx, qword [rsp + 0x38]
movzx r13d, byte [r14 + str.ROYGBV]
lea r12, [rbx + 1]
je 0x401318
mov rdx, qword [rsp + 0x40]
cmp r12, rdx
ja 0x4012c0
mov byte [rax + rbx], r13b
mov rax, qword [rsp + 0x30]
mov qword [rsp + 0x38], r12
mov byte [rax + rbx + 1], 0
jmp 0x4010fb
nop word [rax + rax]
mov eax, edx
jmp 0x401070
nop word [rax + rax]
mov edx, dword [rsp + 0x20]
xor ecx, ecx
jmp 0x40104f
nop dword [rax + rax]
mov edx, 0xf
jmp 0x4010b2
nop word [rax + rax]
mov rdi, qword [rsp + 0x10]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x40126f
nop
mov rdi, qword [rsp + 0x10]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x401231
nop dword [rax]
mov edx, 0xf
jmp 0x401228
nop word [rax + rax]
mov edx, 0xf
jmp 0x40126a
lea esi, [rbx + 3]
lea rax, [rsp + 0x30]
mov edx, 0x2aaaaaab
lea rcx, [rsp + 0x40]
mov qword [rsp + 0x38], 0
mov byte [rsp + 0x40], 0
mov qword [rsp + 0x10], rax
mov eax, esi
xor r12d, r12d
imul edx
mov eax, esi
mov qword [rsp + 0x30], rcx
sar eax, 0x1f
xor r13d, r13d
movsxd rbx, ebx
mov r15, rcx
sub edx, eax
lea eax, [rdx + rdx*2]
add eax, eax
sub esi, eax
mov rax, rcx
movsxd rdi, esi
mov qword [rsp + 8], rdi
jmp 0x4013eb
nop word [rax + rax]
mov byte [rax + r12], r14b
mov rax, qword [rsp + 0x30]
mov qword [rsp + 0x38], rbp
mov byte [rax + rbp], 0
mov rax, qword [rsp + 8]
mov rbp, qword [rsp + 0x38]
movzx r14d, byte [rax + str.ROYGBV]
mov rax, qword [rsp + 0x30]
lea r12, [rbp + 1]
cmp rax, r15
je 0x401454
mov rdx, qword [rsp + 0x40]
cmp r12, rdx
ja 0x40142c
mov byte [rax + rbp], r14b
mov rax, qword [rsp + 0x30]
add r13d, 1
mov qword [rsp + 0x38], r12
mov byte [rax + rbp + 1], 0
cmp dword [rbx*4 + obj.cnt], r13d
jle 0x40145e
mov r12, qword [rsp + 0x38]
mov rax, qword [rsp + 0x30]
cmp rax, r15
movzx r14d, byte [rbx + str.ROYGBV]
lea rbp, [r12 + 1]
je 0x40144d
mov rdx, qword [rsp + 0x40]
cmp rbp, rdx
jbe 0x401380
mov rdi, qword [rsp + 0x10]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r12
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x401380
mov rdi, qword [rsp + 0x10]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbp
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x4013c0
mov edx, 0xf
jmp 0x401402
mov edx, 0xf
jmp 0x4013bb
mov rdx, qword [rsp + 0x30]
mov esi, 0x40172d
mov edi, 1
xor eax, eax
call sym.imp.__printf_chk
mov rax, qword [rsp + 0x10]
mov rdi, qword [rsp + 0x30]
add rax, 0x10
cmp rdi, rax
jne 0x401141
jmp 0x401171
mov ebx, 4
jmp 0x40114d
mov rdx, rax
jmp 0x40110b
mov edx, dword [rsp + 0x24]
mov ecx, 1
jmp 0x40104f
mov ecx, str.void_solve__
mov edx, 0x7c
mov esi, str.sorted_code_control_XraY_XraY_1_0_main.cpp
mov edi, str.ks_pos____0
call sym.imp.__assert_fail
mov rbx, rax
mov rax, qword [rsp + 0x10]
mov rdi, qword [rsp + 0x30]
add rax, 0x10
cmp rdi, rax
je 0x4014e4
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
jmp 0x4014c9
mov ecx, str.void_solve__
mov edx, 0x8a
mov esi, str.sorted_code_control_XraY_XraY_1_0_main.cpp
mov edi, str.ans_0_____ans.back__
call sym.imp.__assert_fail
call sym.imp.__stack_chk_fail
nop dword [rax]
push rbx
mov ebx, edi
mov edi, obj.mrand
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::operator__
movsxd rdi, ebx
xor edx, edx
div rdi
pop rbx
mov eax, edx
ret
nop dword [rax]
mov rax, qword [rdi + 0x1380]
cmp rax, 0x26f
ja 0x401588
lea rdx, [rax + 1]
mov rax, qword [rdi + rax*8]
mov qword [rdi + 0x1380], rdx
mov rdx, rax
shr rdx, 0xb
mov edx, edx
xor rax, rdx
mov rdx, rax
shl rdx, 7
and edx, 0x9d2c5680
xor rax, rdx
mov rdx, rax
shl rdx, 0xf
and edx, 0xefc60000
xor rax, rdx
mov rdx, rax
shr rdx, 0x12
xor rax, rdx
ret
nop dword [rax]
mov r8, qword [rdi]
lea rcx, [rdi + 8]
lea rdx, [rdi + 0x720]
mov r10d, 0x9908b0df
xor r9d, r9d
nop
mov rax, r8
mov r8, qword [rcx]
and rax, 0xffffffff80000000
mov rsi, r8
and esi, 0x7fffffff
or rax, rsi
mov rsi, r9
test al, 1
cmovne rsi, r10
xor rsi, qword [rcx + 0xc60]
shr rax, 1
add rcx, 8
xor rax, rsi
mov qword [rcx - 0x10], rax
cmp rdx, rcx
jne 0x4015a0
mov rsi, qword [rdi + 0x718]
lea r10, [rdi + 0x1380]
mov r9d, 0x9908b0df
xor r8d, r8d
nop word [rax + rax]
mov rax, rsi
mov rsi, qword [rdx]
and rax, 0xffffffff80000000
mov rcx, rsi
and ecx, 0x7fffffff
or rax, rcx
mov rcx, r8
test al, 1
cmovne rcx, r9
xor rcx, qword [rdx - 0x720]
shr rax, 1
add rdx, 8
xor rax, rcx
mov qword [rdx - 0x10], rax
cmp r10, rdx
jne 0x4015f8
mov rax, qword [rdi]
mov rcx, qword [rdi + 0x1378]
mov esi, 0x9908b0df
mov rdx, rax
and rcx, 0xffffffff80000000
and edx, 0x7fffffff
or rdx, rcx
mov rcx, rdx
shr rcx, 1
xor rcx, qword [rdi + 0xc60]
and edx, 1
cmovne rdx, rsi
xor rdx, rcx
mov qword [rdi + 0x1378], rdx
mov edx, 1
jmp 0x401547
nop dword [rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200756]
push rbp
lea rbp, [rip + 0x20075e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x4016d6
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x4016c0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
and eax, 0x63730064
jae 0x40176c
outsb dx, byte [rsi]
sub byte [rdx], ah
and eax, 0x202c2264
movsxd rbp, dword [rsi + 0x74]
and byte [rbx], ch
and byte [rcx + 0x29], ch
and byte [rip + 0x31203d], bh
push r8
push r11
push rbx
or r8b, byte [r8]
and eax, 0x6b000a73
imul esi, dword [rbx + 0x5b], 0x70
outsd dx, dword [rsi]
jae 0x401795
and byte [rsi], bh
and byte [rax], dh
add byte [rcx + 0x6e], ah
outsb dx, byte [rsi]
jae 0x40179c
xor byte [rbp + 0x20], bl
and dword [rip + 0x736e6120], edi
movsxd rbp, dword [rbx + 0x28]
sub dword [rax], eax
jae 0x4017bb
and byte [rbx], ah
and eax, 0x203a64
add byte [rax], al
add byte [rbx + 0x6f], dh
jae 0x4017d1
jb 0x4017d8
pop rdi
movsxd rbp, dword [rdi + 0x64]
movsxd rbp, dword [rdi + 0x6e]
je 0x4017e3
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rax
jb 0x4017d8
pop rcx
pop rax
jb 0x4017dd
pop rcx
pop rdi
xor dword [rdi + 0x30], ebx
insd dword [rdi], dx
imul ebp, dword [rsi + 0x2e], 0x707063
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x6f], dh
jbe 0x401801
imul esp, dword [rax + 0x73], 0x65766c6f
sub byte [rcx], ch
add byte [rax], al
add byte [rax], al
imul ebp, dword [rsi + 0x74], 0x61657220
sub byte fs:[rcx], ch
add byte [rax], al
add byte [rcx], al
add dword [rbx], ebx
add edi, dword [rbx]
add byte [rax], 0
add byte [rdi], cl
add byte [rax], al
add ah, dl
int1
dec esp
add byte [rax], al
add ah, ah
call qword [rcx + rax]
add byte [rax], al
adc al, 0xf4
lcall [rdx + rax]
add byte [rax], al
in al, 0xf4
jl 0x4017d8
add byte [rax], al
hlt
hlt
lcall [rax + rax - 0xa0c0000]
cmp al, 1
add byte [rax], al
adc al, 0xf6
call qword [rcx + rax]
add byte [rsi + rsi*8 - 1], dl
ljmp [rcx + rax]
add ah, dl
idiv bh
inc dword [rcx + rax - 0x91c0000]
lcall [rcx + rax - 0x8ac0000]
inc esp
add dword [rax], eax
add byte [rbp + rdi*8 - 1], ah
lcall [rdx + rax]
add byte [rbp + rdi*8 + 0x244ffff], al
add byte [rax], al
call qword [rdx + rax - 0xbc0000]
fadd qword [rdx]
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40184f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
push rax
hlt
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40187f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add cl, dh
inc dword [rax]
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x4018c1
add esp, dword [rax + 0xa]
add byte [rbx], al
sbb ecx, dword [rdi + rax]
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
enter -0xf, -1
add dword cs:[rax], eax
add byte [rsp], al
sbb al, byte [rax]
adc byte [rbx - 0x3ff1b3fe], al
add ch, ch
or cl, byte [rsi]
adc byte [rcx + 0xe], al
or byte [rcx + 0xb], al
adc al, 0
add byte [rax], al
mov word [rax], es
add byte [rax], al
mov al, 0xf4
call qword [rbx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add byte [rax], al
add byte [rax + 0x39fffff4], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
mov esp, 0xe0000000
hlt
push qword [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax - 0xb], cl
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
in al, dx
add byte [rax], al
add byte [rax - 0xb], al
jmp qword [rbp]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rbx + 0xa410202], al
or byte [rsi + 0xb], al
or cl, byte [r14]
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add ah, dl
add byte [rax], al
add byte [rax + 0xcfffff5], cl
add byte [rax], al
add al, 0xbb
sbb al, byte [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx - 0x5ff1bbf9], al
add dword [rbx], eax
jnp 0x4019ac
or cl, byte [rsi]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rbp + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
insb byte [rdi], dx
add dword [rax], eax
add al, dh
int1
dec esi
add byte [rax], al
add byte [rax], al
adc byte [rbx + 0x200e4902], al
add ah, byte [rdx + rcx + 0xe41100e]
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
xchg eax, esp
add dword [rax], eax
add byte [rax], bh
sti
dec dword [rbp + 1]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
lodsb al, byte [rsi]
add dword [rax], eax
add byte [rax], al
sti
lcall [rcx]
add byte [rax], al
add byte [rax], al
adc byte [rbx + 0x80e5502], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
int3
add dword [rax], eax
add byte [rax - 0xe], ah
inc dword [rip]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add ah, ah
add dword [rax], eax
add byte [rax], bh
cld
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x401a82
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
sub al, 2
add byte [rax], al
cld
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
adc esp, dword [rax]
add eax, 0x56d0000
cld
add dword [rax], eax
ja 0x401ab8
lahf
add al, byte [rax]
xchg eax, ebp
add al, byte [rip - 0x10000]
add dword [rip - 0x13fafb69], ebx
or eax, dword [rax]
in al, dx
add al, 5
add byte [rax], al
loop 0x401ad1
xchg eax, ebp
add ch, ah
or eax, dword [rax]
popfq
or dl, byte [rdi - 0x37]
or eax, dword [rax]
out 0xb, eax
add eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jo 0x401df7
add byte [rax], al
add byte [rax], al
add byte [rax + 0x400c], dl
add byte [rax], al
add byte [rax + 0xd], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 1], ch
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or eax, 0
add byte [rax], al
add ah, dh
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sbb eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 0x4004], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [eax]
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
push 1
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x4009], dl
add byte [rax], al
add byte [rsi + 0x4009], ah
add byte [rax], al
add byte [rsi + 0x4009], dh
add byte [rax], al
add dh, al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
out 9, al
add byte [rax], al
add byte [rax], al
add dh, dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte es:[rax]
add byte [rax], al
add byte [rax], al
or al, byte ss:[rax]
add byte [rax], al
add byte [rax], al
or r8b, byte [rax]
add byte [rax], al
add byte [rax], al
push rsi
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
jbe 0x402094
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x4f], dl
pop rcx
push rsi
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x40211f
je 0x402128
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x402136
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add dword [rax], eax
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 0x4004], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add byte [rax + 9], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
or byte [rcx], 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400a8000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0x400a], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add ah, dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rdi + rdx + 0x40], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, byte [rax]
xor byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], dl
add byte [rdx + rbx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
call 0x4082ea
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
nop
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb eax, dword [rax]
shl byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], dl
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0xd], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rbx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
call 0x408482
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x2000000], ch
add byte [rsi], cl
add byte [rax + 0x400a], dl
add byte [rax], al
add byte [rsi], ch
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add bl, ch
add byte [rax], al
add byte [rcx], al
add byte [rbx], bl
add byte [rax + 0x6034], cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, bh
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4017], ah
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4017], dl
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rbx], bh
add dword [rax], eax
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400c], dl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], dl
add byte [rax], al
add dword [rax], eax
adc al, byte [rax]
movabs al, byte [0x401a]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 1], bl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 1], ch
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
lodsb al, byte [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 1], bh
add byte [rax], al
add dword [rax], eax
sbb dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 1], dl
add byte [rax + rax], dl
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add dword [rax], eax
add byte [rax], al
add byte [rax + rax], dl
call 0x4085d2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x1000001], dh
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x20000003], ch
add byte [rdx], bl
add byte [rax + 0x6020], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
retf
add dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x400e], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, dl
add dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add al, dh
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x12000003], ch
add byte [rsi], cl
add byte [rax + 0x400c], ah
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, dh
add dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add al, byte [rax]
add byte [rcx], dl
add byte [rdx], bl
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ah
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], al
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
or al, 6
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, 2
add byte [rax], al
adc al, byte [rax]
add byte [rax], dl
adc eax, 0x40
add byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, 2
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add r8b, byte [r8]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, ah
add dword [rax], eax
add byte [rdx], dl
add byte [rdi], cl
add ah, dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 2], ch
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
int 2
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], dl
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rax
add eax, dword [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 1], cl
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
add byte [rcx], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 0x13], cl
add byte [rax], al
add byte [rbx + rax], ch
add byte [rcx], dl
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jnp 0x4027ed
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov es, word [rbx]
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test al, 3
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
nop
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ch, 3
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x400e], dl
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov esi, 0x12000003
add byte [rsi], cl
add byte [rax + 0x400d], ah
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add eax, dword [rax]
add byte [rcx], dl
add bl, byte [rdx]
add byte [rax + 0x6020], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
add eax, dword [rax]
add byte [rcx], dl
add bl, byte [rdx]
add byte [rax + 0x6020], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, ah
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x4016], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
int1
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ah
add al, 0
add byte [rdx], dl
add byte [rsi], cl
add al, al
or eax, 0x40
add byte [rax], al
cmp dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, 4
add byte [rax], al
and al, byte [rax]
add byte [rax], dh
adc eax, 0x40
add byte [rax], al
add qword [r8], r8
add byte [rax], al
add byte [rax], al
add byte [rsp + rax + 0x100000], bh
sbb eax, dword [rax]
cmpsd dword [rsi], dword ptr [rdi]
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 4, 0
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lodsd eax, dword [rsi]
add eax, 0x110000
sbb eax, dword [rax]
clc
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
lahf
add dword [rax], eax
add byte [rax], dl
add byte [rbx], bl
add byte [rax + 0x6034], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ah
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push 5
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
cmpsd dword [rsi], dword ptr [rdi]
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jno 0x40299f
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edx
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
stosb byte [rdi], al
add eax, 0x120000
add al, al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, ch
add eax, dword [rax]
add byte [rdx], dl
add byte [rbx], cl
add byte [rax + 9], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x11000005], ch
add byte [rbx], bl
add al, ah
and byte [rax], ah
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x72], ah
je 0x402a88
je 0x402a8c
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402a3e
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402abc
jb 0x402ac2
pop rdi
jne 0x402acb
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402ac5
je 0x402ac1
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402ae1
jb 0x402ae7
pop rdi
jne 0x402af0
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402af3
jns 0x402ae3
outsb dx, byte gs:[rsi]
je 0x402afa
jns 0x402a8a
jb 0x402aee
insd dword [rdi], dx
pop rdi
jne 0x402b00
insd dword [rdi], dx
jns 0x402a96
pop rdi
pop rdi
jb 0x402afc
insd dword [rdi], dx
pop rdi
jne 0x402b0e
insd dword [rdi], dx
jns 0x402b03
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402b0e
jns 0x402b0e
outsb dx, byte gs:[rsi]
je 0x402b25
jns 0x402ab5
insd dword [rdi], dx
imul ebp, dword [rsi + 0x2e], 0x707063
pop rdi
pop rdx
xor al, 0x31
pop rdi
pop rdi
jae 0x402b3a
je 0x402b32
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x402b40
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x402b56
jb 0x402b59
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
movsxd rbp, dword cs:[rdi + 0x6e]
jae 0x402b67
jo 0x402b67
outsd dx, dword [rsi]
jo 0x402b26
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x402b4c
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdx
pop rdx
xor al, 0x72
jbe 0x402b59
xor dword [rcx], edi
pop rdi
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
pop rdx
xor eax, 0x766c6f73
jbe 0x402b7a
xor dword [rcx], edi
pop rdi
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x402bcb
pop rdi
pop r15
insd dword [rdi], dx
jb 0x402bbe
outsb dx, byte [rsi]
add byte fs:[rdi + 0x5f], bl
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402c0f
jns 0x402c0f
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402c20
jns 0x402c20
jae 0x402c37
jb 0x402c3a
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
xor eax, 0x65776f70
jb 0x402c42
imul eax, dword [rax], 0x70375a5f
jb 0x402c46
movsxd rsp, dword [rcx + 0x6c]
movsxd rsi, dword [rsi]
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x402c74
jb 0x402c77
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x402c69
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x402c8a
jae 0x402c1a
movsxd rbp, dword [rax + 0x73]
add byte [rdi + 0x5a], bl
insb byte [rdi], dx
push rax
jbe 0x402c65
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
xor eax, 0x766c6f73
jbe 0x402c3c
pop rdi
pop rdx
xor esi, dword [rdx + 0x6e]
imul eax, dword fs:[rax], 0x73615f5f
jae 0x402caf
jb 0x402cc0
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x705f5f00
jb 0x402ccd
outsb dx, byte [rsi]
je 0x402ccd
pop rdi
movsxd rbp, dword [rax + 0x6b]
pop r15
xor ch, byte [rsi]
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402cb0
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x402cf4
movsxd rsp, dword [rbp + 0x37]
pop rdi
pop r15
imul ebp, dword [rsi + 0x69], 0x4b524574
push rbx
je 0x402cd3
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x402d12
movsxd rbx, dword [rdi + 0x73]
je 0x402d20
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x402d1b
je 0x402d30
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x402d1b
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x402d82
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x402d87
pop rdi
je 0x402d8f
js 0x402d95
je 0x402d6e
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x402d79
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x402dce
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x402df6
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x402e0a
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x402e1f
pop rdi
jae 0x402e35
jb 0x402e38
add byte [rdi + 0x5a], bl
xor al, 0x72
jbe 0x402dce
pop rdi
pop rdx
xor esp, dword [rcx + 0x64]
push rdx
imul ebp, dword [rcx], 0x4d545f5f
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
jae 0x402e58
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x402e38
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x402e7c
movsxd rsp, dword [rbp + 0x39]
pop rdi
pop r15
je 0x402e93
insb byte [rdi], dx
jbe 0x402e62
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dword [rax], edi
add byte [rdi + 0x5a], bl
xor al, 0x6d
jne 0x402ea4
je 0x402ea3
imul eax, dword [rax], 0x534e5a5f
je 0x402e74
xor ebp, dword [rbp + 0x65]
jb 0x402eba
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x402ec5
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x63454533
insb byte [rdi], dx
jbe 0x402ecc
pop rdi
pop rdi
jae 0x402f44
pop rdi
jae 0x402f48
jb 0x402f4b
add byte [rdi + 0x5f], bl
jae 0x402f50
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402f2b
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x402f6f
movsxd rsp, dword [rbp + 0x37]
pop rdi
pop r15
imul bp, word [rsi + 0x69], 0x7645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dword [rax], edi
add byte [rdi + 0x5a], bl
push rbx
je 0x402f60
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x402f9f
movsxd rbx, dword [rdi + 0x73]
je 0x402fad
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x402fa8
je 0x402fbd
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
insd dword [rdi], dx
jne 0x402fd3
je 0x402fc7
insd dword [rdi], dx
insd dword [rdi], dx
push rax
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x402fe1
add byte [rdi + 0x5f], bl
js 0x402ffe
pop rdi
jo 0x402fee
jb 0x402ffe
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x403010
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x403023
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
insd dword [rdi], dx
imul ebp, dword [rsi], 0x746e63
add byte [rsi], ch
jae 0x403040
insd dword [rdi], dx
je 0x40302b
add byte [rsi], ch
jae 0x403043
jb 0x403045
add byte [rsi], ch
jae 0x40303f
jae 0x40304d
jb 0x40304f
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x403050
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x40305e
outsb dx, byte cs:[esi]
jne 0x40302c
jne 0x40306a
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x40303a
push 0x687361
jns 0x403083
jae 0x403090
insd dword [rdi], dx
add byte [rsi], ch
jns 0x40308b
jae 0x403093
jb 0x403021
outsb dx, byte cs:[esi]
jne 0x403054
jbe 0x40308d
jb 0x40309d
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x403061
jbe 0x40309a
jb 0x4030aa
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x4030a5
insb byte [rdi], dx
jns 0x4030b4
add byte [rsi], ch
jb 0x4030af
insb byte [rdi], dx
jo 0x4030bb
je 0x403051
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x40308a
outsd dx, dword [esi]
je 0x403060
je 0x4030c8
js 0x4030d9
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x4030de
je 0x4030d4
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x4030f7
jo 0x40310b
pop rdi
je 0x4030fb
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403109
jns 0x4030aa
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x403125
jns 0x4030b6
push 0x63
jb 0x4030bb
jns 0x40312d
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x403137
je 0x4030cd
je 0x403133
add byte [rsi], ch
jae 0x40314a
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x4030e1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, ah
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0xa000000000004004]
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rdi + 2], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
add byte [rax], al
add bh, bh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x403341
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
push 1
add byte [rax], al
add byte [rip + 0x19000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 9], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 9], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4009], al
add byte [rax], al
add byte [rax + 9], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x400a], al
add byte [rax], al
add byte [rax + 0xa], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1000000], bl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x400a], dl
add byte [rax], al
add byte [rax + 0xa], dl
add byte [rax], al
add byte [rdx + 0xc], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x600000001000000], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dh
add byte [rax], al
add byte [rax], al
add ah, dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
stosd dword [rdi], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdx + 0x40], ch
add byte [rax], al
lodsb al, byte [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
test byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
je 0x40358c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rbx + 0x40], ah
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
call 0x403622
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], dl
add byte [rax], al
add byte [rax + 0x20], dl
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
cmpsd dword [rsi], dword ptr [rdi]
and byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x20], ah
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ret
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rip + 0x8000000], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx + 5], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
