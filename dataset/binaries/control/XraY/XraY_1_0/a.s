xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6030e7
push rbp
sub rax, obj.completed.7585
cmp rax, 0xe
mov rbp, rsp
jbe 0x400de0
mov eax, 0
test rax, rax
je 0x400de0
pop rbp
mov edi, obj.completed.7585
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.completed.7585
push rbp
sub rsi, obj.completed.7585
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400e28
mov eax, 0
test rax, rax
je 0x400e28
pop rbp
mov edi, obj.completed.7585
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x2022a9], 0
jne 0x400e4a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x202296], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400e60
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400e5b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
sub rsp, 0x10
mov dword [rbp - 4], edi
mov edi, obj.mrand
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::operator__
mov rdx, rax
mov eax, dword [rbp - 4]
movsxd rcx, eax
mov rax, rdx
mov edx, 0
div rcx
mov rax, rdx
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov dword [rbp - 0xc], esi
mov rax, qword [rbp - 8]
mov edx, dword [rax]
mov eax, dword [rbp - 0xc]
add edx, eax
mov rax, qword [rbp - 8]
mov dword [rax], edx
mov rax, qword [rbp - 8]
mov eax, dword [rax]
cmp eax, 0x3b9aca06
setg al
test al, al
je 0x400ee7
mov rax, qword [rbp - 8]
mov eax, dword [rax]
mov edx, 0x3b9aca07
sub eax, edx
mov edx, eax
mov rax, qword [rbp - 8]
mov dword [rax], edx
nop
pop rbp
ret
push rbp
mov rbp, rsp
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
mov eax, dword [rbp - 4]
movsxd rdx, eax
mov eax, dword [rbp - 8]
cdqe
mov rcx, rdx
imul rcx, rax
movabs rdx, 0x89705f3112a28fe5
mov rax, rcx
imul rdx
lea rax, [rdx + rcx]
sar rax, 0x1d
mov rdx, rax
mov rax, rcx
sar rax, 0x3f
sub rdx, rax
mov rax, rdx
imul rax, rax, 0x3b9aca07
sub rcx, rax
mov rax, rcx
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x18
mov dword [rbp - 0x14], edi
mov dword [rbp - 0x18], esi
mov dword [rbp - 4], 1
cmp dword [rbp - 0x18], 0
je 0x400f8b
mov eax, dword [rbp - 0x18]
and eax, 1
test eax, eax
je 0x400f74
mov edx, dword [rbp - 0x14]
mov eax, dword [rbp - 4]
mov esi, edx
mov edi, eax
call sym.mult
mov dword [rbp - 4], eax
mov edx, dword [rbp - 0x14]
mov eax, dword [rbp - 0x14]
mov esi, edx
mov edi, eax
call sym.mult
mov dword [rbp - 0x14], eax
sar dword [rbp - 0x18], 1
jmp 0x400f52
mov eax, dword [rbp - 4]
leave
ret
push rbp
mov rbp, rsp
nop
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov esi, obj.n
mov edi, 0x401d24
mov eax, 0
call sym.imp.scanf
test eax, eax
setle al
test al, al
je 0x400fc3
mov eax, 0
jmp 0x40101a
mov dword [rbp - 4], 0
cmp dword [rbp - 4], 5
jg 0x401015
mov eax, dword [rbp - 4]
cdqe
shl rax, 2
add rax, obj.cnt
mov rsi, rax
mov edi, 0x401d24
mov eax, 0
call sym.imp.scanf
cmp eax, 1
je 0x40100f
mov ecx, str.int_read__
mov edx, 0x45
mov esi, str.sorted_code_control_XraY_XraY_1_0_main.cpp
mov edi, str.scanf___d___cnt___i_____1
call sym.imp.__assert_fail
add dword [rbp - 4], 1
jmp 0x400fca
mov eax, 1
leave
ret
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x78
mov rax, qword fs:[0x28]
mov qword [rbp - 0x18], rax
xor eax, eax
mov edx, dword [rip + 0x203456]
mov eax, dword [rip + 0x20345c]
sub edx, eax
mov eax, edx
mov dword [rbp - 0x50], eax
mov edx, dword [rip + 0x20344b]
mov eax, dword [rip + 0x203451]
sub edx, eax
mov eax, edx
mov dword [rbp - 0x4c], eax
mov edx, dword [rip + 0x203440]
mov eax, dword [rip + 0x20342e]
sub edx, eax
mov eax, edx
mov dword [rbp - 0x48], eax
mov dword [rbp - 0x78], 0
cmp dword [rbp - 0x78], 2
jg 0x40109c
mov eax, dword [rbp - 0x78]
cdqe
mov eax, dword [rbp + rax*4 - 0x50]
test eax, eax
jns 0x401096
mov edi, str.IMPOSSIBLE
call sym.imp.puts
jmp 0x4014af
add dword [rbp - 0x78], 1
jmp 0x401074
mov edx, dword [rbp - 0x50]
mov eax, dword [rbp - 0x4c]
add edx, eax
mov eax, dword [rbp - 0x48]
add eax, edx
mov dword [rbp - 0x74], eax
mov dword [rbp - 0x70], 0
cmp dword [rbp - 0x70], 2
jg 0x4011db
mov eax, dword [rbp - 0x70]
cdqe
mov eax, dword [rbp + rax*4 - 0x50]
test eax, eax
jne 0x4011d2
mov eax, dword [rbp - 0x70]
add eax, eax
cdqe
mov eax, dword [rax*4 + obj.cnt]
test eax, eax
jle 0x4011d2
mov eax, dword [rbp - 0x70]
cdqe
mov eax, dword [rbp + rax*4 - 0x50]
cmp eax, dword [rbp - 0x74]
je 0x401101
mov edi, str.IMPOSSIBLE
call sym.imp.puts
jmp 0x4014af
lea rax, [rbp - 0x79]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rdx, [rbp - 0x79]
lea rax, [rbp - 0x40]
mov esi, 0x401d78
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rax, [rbp - 0x79]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov dword [rbp - 0x6c], 0
mov eax, dword [rbp - 0x70]
add eax, eax
cdqe
mov eax, dword [rax*4 + obj.cnt]
cmp eax, dword [rbp - 0x6c]
jle 0x4011ac
mov eax, dword [rbp - 0x70]
add eax, eax
cdqe
movzx eax, byte [rax + str.ROYGBV]
movsx edx, al
lea rax, [rbp - 0x40]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
mov eax, dword [rbp - 0x70]
add eax, eax
lea ecx, [rax + 3]
mov edx, 0x2aaaaaab
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
sub edx, eax
mov eax, edx
add eax, eax
add eax, edx
add eax, eax
sub ecx, eax
mov edx, ecx
movsxd rax, edx
movzx eax, byte [rax + str.ROYGBV]
movsx edx, al
lea rax, [rbp - 0x40]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
add dword [rbp - 0x6c], 1
jmp 0x401135
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::c_str
mov rdi, rax
call sym.imp.puts
nop
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
jmp 0x4014af
add dword [rbp - 0x70], 1
jmp 0x4010b3
lea rax, [rbp - 0x50]
add rax, 0xc
lea rdx, [rbp - 0x50]
mov rsi, rax
mov rdi, rdx
call sym.std::max_element_int__
mov rdx, rax
lea rax, [rbp - 0x50]
sub rdx, rax
mov rax, rdx
sar rax, 2
mov dword [rbp - 0x5c], eax
mov eax, dword [rbp - 0x5c]
cdqe
mov eax, dword [rbp + rax*4 - 0x50]
add eax, eax
cmp eax, dword [rbp - 0x74]
jle 0x401225
mov edi, str.IMPOSSIBLE
call sym.imp.puts
jmp 0x4014af
lea rax, [rbp - 0x79]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rdx, [rbp - 0x79]
lea rax, [rbp - 0x40]
mov esi, 0x401d78
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rax, [rbp - 0x79]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov dword [rbp - 0x68], 0xffffffff
cmp dword [rbp - 0x74], 0
jle 0x4013e5
mov dword [rbp - 0x64], 0xffffffff
mov dword [rbp - 0x60], 0
cmp dword [rbp - 0x60], 2
jg 0x4012d0
mov eax, dword [rbp - 0x60]
cmp eax, dword [rbp - 0x68]
je 0x4012c9
cmp dword [rbp - 0x64], -1
je 0x40129b
mov eax, dword [rbp - 0x64]
cdqe
mov edx, dword [rbp + rax*4 - 0x50]
mov eax, dword [rbp - 0x60]
cdqe
mov eax, dword [rbp + rax*4 - 0x50]
cmp edx, eax
jge 0x4012a3
mov eax, dword [rbp - 0x60]
mov dword [rbp - 0x64], eax
jmp 0x4012ca
mov eax, dword [rbp - 0x64]
cdqe
mov edx, dword [rbp + rax*4 - 0x50]
mov eax, dword [rbp - 0x60]
cdqe
mov eax, dword [rbp + rax*4 - 0x50]
cmp edx, eax
jne 0x4012ca
mov eax, dword [rbp - 0x60]
cmp eax, dword [rbp - 0x5c]
jne 0x4012ca
mov eax, dword [rbp - 0x60]
mov dword [rbp - 0x64], eax
jmp 0x4012ca
nop
add dword [rbp - 0x60], 1
jmp 0x401271
mov eax, dword [rbp - 0x64]
cdqe
mov eax, dword [rbp + rax*4 - 0x50]
test eax, eax
jg 0x4012f6
mov ecx, str.void_solve__
mov edx, 0x7c
mov esi, str.sorted_code_control_XraY_XraY_1_0_main.cpp
mov edi, str.ks_pos____0
call sym.imp.__assert_fail
mov eax, dword [rbp - 0x64]
cdqe
mov eax, dword [rbp + rax*4 - 0x50]
lea edx, [rax - 1]
mov eax, dword [rbp - 0x64]
cdqe
mov dword [rbp + rax*4 - 0x50], edx
mov eax, dword [rbp - 0x64]
add eax, eax
cdqe
movzx eax, byte [rax + str.ROYGBV]
movsx edx, al
lea rax, [rbp - 0x40]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
mov eax, dword [rbp - 0x64]
add eax, eax
lea ecx, [rax + 3]
mov edx, 0x2aaaaaab
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
sub edx, eax
mov eax, edx
add eax, eax
add eax, edx
add eax, eax
sub ecx, eax
mov edx, ecx
movsxd rax, edx
shl rax, 2
add rax, obj.cnt
mov qword [rbp - 0x58], rax
mov rax, qword [rbp - 0x58]
mov eax, dword [rax]
test eax, eax
je 0x4013d6
mov rax, qword [rbp - 0x58]
mov eax, dword [rax]
lea edx, [rax - 1]
mov rax, qword [rbp - 0x58]
mov dword [rax], edx
mov eax, dword [rbp - 0x64]
add eax, eax
lea ecx, [rax + 3]
mov edx, 0x2aaaaaab
mov eax, ecx
imul edx
mov eax, ecx
sar eax, 0x1f
sub edx, eax
mov eax, edx
add eax, eax
add eax, edx
add eax, eax
sub ecx, eax
mov edx, ecx
movsxd rax, edx
movzx eax, byte [rax + str.ROYGBV]
movsx edx, al
lea rax, [rbp - 0x40]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
mov eax, dword [rbp - 0x64]
add eax, eax
cdqe
movzx eax, byte [rax + str.ROYGBV]
movsx edx, al
lea rax, [rbp - 0x40]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
mov eax, dword [rbp - 0x64]
mov dword [rbp - 0x68], eax
sub dword [rbp - 0x74], 1
jmp 0x401259
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::c_str
mov rdi, rax
call sym.imp.puts
lea rax, [rbp - 0x40]
mov esi, 0
mov rdi, rax
call 0x400d50
movzx ebx, byte [rax]
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::back
movzx eax, byte [rax]
cmp bl, al
jne 0x401439
mov ecx, str.void_solve__
mov edx, 0x8a
mov esi, str.sorted_code_control_XraY_XraY_1_0_main.cpp
mov edi, str.ans_0_____ans.back__
call sym.imp.__assert_fail
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
jmp 0x4014af
mov rbx, rax
lea rax, [rbp - 0x79]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
mov rbx, rax
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
mov rbx, rax
lea rax, [rbp - 0x79]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
mov rbx, rax
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
mov rax, qword [rbp - 0x18]
xor rax, qword fs:[0x28]
je 0x4014c3
call sym.imp.__stack_chk_fail
add rsp, 0x78
pop rbx
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
call sym.precalc
lea rax, [rbp - 0xc]
mov rsi, rax
mov edi, 0x401d24
mov eax, 0
call sym.imp.scanf
mov dword [rbp - 0xc], 0
call sym.read
test eax, eax
sete al
test al, al
jne 0x401535
mov eax, dword [rbp - 0xc]
add eax, 1
mov dword [rbp - 0xc], eax
mov eax, dword [rbp - 0xc]
mov esi, eax
mov edi, str.Case___d:
mov eax, 0
call sym.imp.printf
call sym.solve
jmp 0x401503
nop
mov eax, 0
mov rdx, qword [rbp - 8]
xor rdx, qword fs:[0x28]
je 0x40154f
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x13d8
mov dword [rbp - 0x13d4], edi
mov dword [rbp - 0x13d8], esi
mov rax, qword fs:[0x28]
mov qword [rbp - 0x18], rax
xor eax, eax
cmp dword [rbp - 0x13d4], 1
jne 0x401688
cmp dword [rbp - 0x13d8], 0xffff
jne 0x401688
mov edi, obj.std::__ioinit
call sym.std::ios_base::Init::Init
mov edx, obj.__dso_handle
mov esi, obj.std::__ioinit
mov edi, sym.std::ios_base::Init::_Init
call sym.imp.__cxa_atexit
lea rax, [rbp - 0x13c1]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rdx, [rbp - 0x13c1]
lea rax, [rbp - 0x13c0]
mov esi, str.default
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rdx, [rbp - 0x13c0]
lea rax, [rbp - 0x13a0]
mov rsi, rdx
mov rdi, rax
call sym.std::random_device::random_device
lea rax, [rbp - 0x13a0]
mov rdi, rax
call sym.std::random_device::operator__
mov eax, eax
mov rsi, rax
mov edi, obj.mrand
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::mersenne_twister_engine
lea rax, [rbp - 0x13a0]
mov rdi, rax
call sym.std::random_device::_random_device
lea rax, [rbp - 0x13c0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
lea rax, [rbp - 0x13c1]
mov rdi, rax
call sym.std::allocator_char_::_allocator
jmp 0x401688
mov rbx, rax
lea rax, [rbp - 0x13a0]
mov rdi, rax
call sym.std::random_device::_random_device
jmp 0x40165a
mov rbx, rax
lea rax, [rbp - 0x13c0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
jmp 0x40166e
mov rbx, rax
lea rax, [rbp - 0x13c1]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
mov rax, qword [rbp - 0x18]
xor rax, qword fs:[0x28]
je 0x40169c
call sym.imp.__stack_chk_fail
add rsp, 0x13d8
pop rbx
pop rbp
ret
push rbp
mov rbp, rsp
mov esi, 0xffff
mov edi, 1
call sym.__static_initialization_and_destruction_0
pop rbp
ret
push rbp
mov rbp, rsp
pop rbp
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call sym.std::random_device::_M_init
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::random_device::_M_fini
nop
leave
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::random_device::_M_getval
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::seed
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov rax, qword [rbp - 0x18]
mov rax, qword [rax + 0x1380]
cmp rax, 0x26f
jbe 0x40176f
mov rax, qword [rbp - 0x18]
mov rdi, rax
call sym.std::mersenne_twister_engine_unsignedlong_32ul_624ul_397ul_31ul_2567483615ul_11ul_4294967295ul_7ul_2636928640ul_15ul_4022730752ul_18ul_1812433253ul_::_M_gen_rand
mov rax, qword [rbp - 0x18]
mov rax, qword [rax + 0x1380]
lea rcx, [rax + 1]
mov rdx, qword [rbp - 0x18]
mov qword [rdx + 0x1380], rcx
mov rdx, qword [rbp - 0x18]
mov rax, qword [rdx + rax*8]
mov qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shr rax, 0xb
mov eax, eax
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shl rax, 7
and eax, 0x9d2c5680
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shl rax, 0xf
and eax, 0xefc60000
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shr rax, 0x12
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
leave
ret
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x28
mov qword [rbp - 0x28], rdi
mov qword [rbp - 0x30], rsi
mov rax, qword fs:[0x28]
mov qword [rbp - 0x18], rax
xor eax, eax
call sym.__gnu_cxx::__ops::__iter_less_iter
mov rdx, qword [rbp - 0x30]
mov rax, qword [rbp - 0x28]
sub rsp, 8
push rbx
mov rsi, rdx
mov rdi, rax
call sym.std::__max_element_int____gnu_cxx::__ops::_Iter_less_iter_
add rsp, 0x10
mov rcx, qword [rbp - 0x18]
xor rcx, qword fs:[0x28]
je 0x40182c
call sym.imp.__stack_chk_fail
mov rbx, qword [rbp - 8]
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov rax, qword [rbp - 0x20]
mov rdi, rax
call sym.std::__detail::__mod_unsignedlong_4294967296ul_1ul_0ul_
mov rdx, rax
mov rax, qword [rbp - 0x18]
mov qword [rax], rdx
mov qword [rbp - 0x10], 1
cmp qword [rbp - 0x10], 0x26f
ja 0x4018cb
mov rax, qword [rbp - 0x10]
lea rdx, [rax - 1]
mov rax, qword [rbp - 0x18]
mov rax, qword [rax + rdx*8]
mov qword [rbp - 8], rax
mov rax, qword [rbp - 8]
shr rax, 0x1e
xor qword [rbp - 8], rax
mov rax, qword [rbp - 8]
imul rax, rax, 0x6c078965
mov qword [rbp - 8], rax
mov rax, qword [rbp - 0x10]
mov rdi, rax
call sym.std::__detail::__mod_unsignedlong_624ul_1ul_0ul_
add qword [rbp - 8], rax
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::__detail::__mod_unsignedlong_4294967296ul_1ul_0ul_
mov rcx, rax
mov rax, qword [rbp - 0x18]
mov rdx, qword [rbp - 0x10]
mov qword [rax + rdx*8], rcx
add qword [rbp - 0x10], 1
jmp 0x401860
mov rax, qword [rbp - 0x18]
mov qword [rax + 0x1380], 0x270
nop
leave
ret
nop
push rbp
mov rbp, rsp
mov qword [rbp - 0x48], rdi
mov qword [rbp - 0x28], -0x80000000
mov qword [rbp - 0x20], 0x7fffffff
mov qword [rbp - 0x38], 0
cmp qword [rbp - 0x38], 0xe2
ja 0x40198e
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x38]
mov rax, qword [rax + rdx*8]
and rax, 0xffffffff80000000
mov rcx, rax
mov rax, qword [rbp - 0x38]
lea rdx, [rax + 1]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
and eax, 0x7fffffff
or rax, rcx
mov qword [rbp - 0x18], rax
mov rax, qword [rbp - 0x38]
lea rdx, [rax + 0x18d]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
mov rdx, qword [rbp - 0x18]
shr rdx, 1
xor rdx, rax
mov rax, qword [rbp - 0x18]
and eax, 1
test rax, rax
je 0x40196d
mov eax, 0x9908b0df
jmp 0x401972
mov eax, 0
mov rcx, rdx
xor rcx, rax
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x38]
mov qword [rax + rdx*8], rcx
add qword [rbp - 0x38], 1
jmp 0x4018fe
mov qword [rbp - 0x30], 0xe3
cmp qword [rbp - 0x30], 0x26e
ja 0x401a26
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x30]
mov rax, qword [rax + rdx*8]
and rax, 0xffffffff80000000
mov rcx, rax
mov rax, qword [rbp - 0x30]
lea rdx, [rax + 1]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
and eax, 0x7fffffff
or rax, rcx
mov qword [rbp - 0x10], rax
mov rax, qword [rbp - 0x30]
lea rdx, [rax - 0xe3]
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + rdx*8]
mov rdx, qword [rbp - 0x10]
shr rdx, 1
xor rdx, rax
mov rax, qword [rbp - 0x10]
and eax, 1
test rax, rax
je 0x401a05
mov eax, 0x9908b0df
jmp 0x401a0a
mov eax, 0
mov rcx, rdx
xor rcx, rax
mov rax, qword [rbp - 0x48]
mov rdx, qword [rbp - 0x30]
mov qword [rax + rdx*8], rcx
add qword [rbp - 0x30], 1
jmp 0x401996
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + 0x1378]
and rax, 0xffffffff80000000
mov rdx, rax
mov rax, qword [rbp - 0x48]
mov rax, qword [rax]
and eax, 0x7fffffff
or rax, rdx
mov qword [rbp - 8], rax
mov rax, qword [rbp - 0x48]
mov rax, qword [rax + 0xc60]
mov rdx, qword [rbp - 8]
shr rdx, 1
xor rdx, rax
mov rax, qword [rbp - 8]
and eax, 1
test rax, rax
je 0x401a75
mov eax, 0x9908b0df
jmp 0x401a7a
mov eax, 0
xor rdx, rax
mov rax, qword [rbp - 0x48]
mov qword [rax + 0x1378], rdx
mov rax, qword [rbp - 0x48]
mov qword [rax + 0x1380], 0
nop
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov rax, qword [rbp - 0x18]
cmp rax, qword [rbp - 0x20]
jne 0x401aba
mov rax, qword [rbp - 0x18]
jmp 0x401afc
mov rax, qword [rbp - 0x18]
mov qword [rbp - 8], rax
add qword [rbp - 0x18], 4
mov rax, qword [rbp - 0x18]
cmp rax, qword [rbp - 0x20]
setne al
test al, al
je 0x401af8
mov rdx, qword [rbp - 0x18]
mov rax, qword [rbp - 8]
mov rsi, rax
lea rdi, [rbp + 0x10]
call sym.__gnu_cxx::__ops::_Iter_less_iter::operator___int__int__
test al, al
je 0x401ac2
mov rax, qword [rbp - 0x18]
mov qword [rbp - 8], rax
jmp 0x401ac2
mov rax, qword [rbp - 8]
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::__detail::_Mod_unsignedlong_4294967296ul_1ul_0ul_true_true_::__calc
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::__detail::_Mod_unsignedlong_624ul_1ul_0ul_true_true_::__calc
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov qword [rbp - 0x18], rdx
mov rax, qword [rbp - 0x10]
mov edx, dword [rax]
mov rax, qword [rbp - 0x18]
mov eax, dword [rax]
cmp edx, eax
setl al
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 0x18], rdi
mov rax, qword [rbp - 0x18]
mov qword [rbp - 8], rax
mov eax, 0xffffffff
and qword [rbp - 8], rax
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 0x18], rdi
mov rax, qword [rbp - 0x18]
mov qword [rbp - 8], rax
mov rcx, qword [rbp - 8]
mov rax, rcx
shr rax, 4
movabs rdx, 0xd20d20d20d20d21
mul rdx
mov rax, rdx
shr rax, 1
imul rax, rax, 0x270
sub rcx, rax
mov rax, rcx
mov qword [rbp - 8], rax
mov rax, qword [rbp - 8]
pop rbp
ret
nop dword [rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x201216]
push rbp
lea rbp, [rip + 0x20121e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401c16
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401c00
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, 0
add byte [rax], al
add eax, 0x6000000
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], cl
or byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
or al, byte [rax]
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rax + 0x3c3360]
and byte [rax + 0x33], 0x3c
add byte [rax], al
add byte [rax], al
add byte [rax + 0x5f4136b4], ch
pop r15
jo 0x401c91
loope 0x401d49
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor eax, 0xa22168c2
fimul dword [rdi]
leave
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], al
retf 0x3b9a
and eax, 0x73000064
jae 0x401d99
jb 0x401da0
pop rdi
movsxd rbp, dword [rdi + 0x64]
movsxd rbp, dword [rdi + 0x6e]
je 0x401dab
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rax
jb 0x401da0
pop rcx
pop rax
jb str.default
pop rcx
pop rdi
xor dword [rdi + 0x30], ebx
insd dword [rdi], dx
imul ebp, dword [rsi + 0x2e], 0x707063
jae 0x401db8
outsb dx, byte [rsi]
sub byte [rdx], ah
and eax, 0x202c2264
movsxd rbp, dword [rsi + 0x74]
and byte [rbx], ch
and byte [rcx + 0x29], ch
and byte [rip + 0x31203d], bh
push r8
push r11
push rbx
add byte [r8], r8b
imul esi, dword [rbx + 0x5b], 0x70
outsd dx, dword [rsi]
jae 0x401ddd
and byte [rsi], bh
and byte [rax], dh
add byte [rcx + 0x6e], ah
outsb dx, byte [rsi]
jae 0x401de4
xor byte [rbp + 0x20], bl
and dword [rip + 0x736e6120], edi
movsxd rbp, dword [rbx + 0x28]
sub dword [rax], eax
jae 0x401e03
and byte [rbx], ah
and eax, 0x203a64
jne 0x401e17
je 0x401dad
add byte [rax], al
add byte [rcx + 0x6e], ch
imul ebp, dword [rsi + 0x74], 0x61657220
sub byte fs:[rcx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
jbe 0x401e31
imul esp, dword [rax + 0x73], 0x65766c6f
sub byte [rcx], ch
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add dword [rbx], ebx
add edi, dword [rbx]
hlt
add byte [rax], al
add byte [rip + 0x30000000], bl
out dx, al
inc dword [rax + 1]
add byte [rax], al
mov al, 0xef
call qword [rax]
add dword [rax], eax
add byte [rsi + 0x10fffff0], ah
add al, byte [rax]
add ah, dl
push qword [rax]
add al, byte [rax]
add byte [rdx], bl
int1
call qword [rax + 2]
add byte [rax], al
insd dword [rdi], dx
int1
push qword [rax + 2]
add byte [rax], al
sal cl, 0xff
call qword [rax - 0x38fffffe]
int1
push qword [rax + 0x4c000002]
call rax
add al, byte [rax]
add dl, bh
idiv bh
clc
add al, byte [rax]
add byte [rcx - 0x7f000009], al
add al, 0
add dh, dl
clc
ljmp [rax - 0x14fffffc]
clc
ljmp [rax + 1]
add byte [rax], al
clc
dec dword [rax + 0x18000001]
stc
dec eax
add dword [rax], eax
add byte [rcx + rdi*8], dh
push rax
add dword [rax], eax
add byte [rsi - 7], cl
lcall [rax]
add eax, dword [rax]
add byte [rcx + rdi*8 - 1], dh
cmp byte [rbx], al
add byte [rax], al
cli
lcall [rax + 3]
add byte [rax], al
cli
inc dword [rax + 0xe000003]
sti
jmp qword [rax - 0x35fffffd]
cld
inc eax
add eax, dword [rax]
add byte [rsi], ch
std
jmp rax
add eax, dword [rax]
add byte [rax - 3], cl
inc dword [rax]
add al, 0
add byte [rdx - 3], ah
jmp qword [rax]
add al, 0
add byte [rbp + 0x40fffffd], al
add al, 0
add byte [rbp + rdi*8 + 0x460ffff], ah
add byte [rax], al
std
dec eax
add al, 0
add byte [rax - 2], ah
call qword [rax]
add eax, 0
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401ee7
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
cwde
out dx, al
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401f17
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
call 0x71401f09
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rbx - 9], bh
inc dword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte fs:[rax], al
add byte [rdx - 9], ah
jmp qword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x401f99
add esi, dword [rax]
or eax, 0x1b030040
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
idiv rdi
lcall [rbx]
add byte [rax], al
add byte [rsp + rdi*8], al
and al, byte [rax]
adc byte [rsi + 0x60d4302], al
push rsi
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
int3
add byte [rax], al
add byte [rdi + rsi*8], bh
lcall [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rbp
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
in al, dx
add byte [rax], al
add byte [rsi + 0x2effffee], cl
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
imul ecx, dword [rdi + rax], 8
sbb al, 0
add byte [rax], al
or al, 1
add byte [rax], al
pushfq
out dx, al
inc dword [rsi]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add al, byte [rcx + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sub al, 1
add byte [rax], al
ret 0xffee
call qword [rbx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add cl, byte [rsi + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add qword [rax], r8
add ch, dh
out dx, al
call qword [rbx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add cl, byte [rsi + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
insb byte [rdi], dx
add dword [rax], eax
add byte [rax], ch
out dx, eax
inc dword [rdi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
mov word [rcx], es
add byte [rax], al
pxor mm7, mm7
inc dword [rbp]
adc byte [rsi + 0x60d4302], al
add al, byte [rax + 0x8070c]
add byte [rax + rax], ah
add byte [rax], al
sub al, 1
add byte [rax], al
je 0x402099
ljmp [rsi + 0x4000004]
add byte [rbx], ah
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add dword [r11], 3
movsb byte [rdi], byte ptr [rsi]
add al, 0xc
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add dword [rax], eax
add dl, bh
inc dword [rdi]
adc byte [rsi + 0x60d4302], al
add al, byte [rdx + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
hlt
add dword [rax], eax
add byte [rsi], ch
idiv bh
jmp qword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
adc al, 2
add byte [rax], al
xor al, 0xf6
call qword [rbx]
adc byte [rsi + 0x60d4302], al
add cl, byte [rsi + 0x8070c]
add byte [rax + rax], ah
add byte [rax], al
xor al, 2
add byte [rax], al
cmpsd dword [rsi], dword ptr [rdi]
idiv bh
lcall [rbx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add dword [r11], 2
push rcx
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
pop rsp
add al, byte [rax]
add dl, bl
idiv bh
ljmp [rbx]
adc byte [rsi + 0x60d4302], al
add ah, byte [rsi + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
jl 0x402178
add byte [rax], al
idiv di
mov esp, 1
adc byte [rsi + 0x60d4302], al
add esi, dword [rdi + 0x8070c01]
add byte [rax + rax], bl
add byte [rax], al
pushfq
add al, byte [rax]
add byte [rdx], al
stc
jmp qword [rax + rax]
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add bl, byte [rdi + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
mov esp, 0x46000002
stc
lcall [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rbp
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
fadd qword [rdx]
add byte [rax], al
stc
lcall [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rbp
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
cld
add al, byte [rax]
add byte [rdx], bh
stc
jmp qword [rbx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
pop rsi
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
sbb al, 3
add byte [rax], al
cmp eax, 0x1ffffff9
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
pop rdx
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
cmp al, 3
add byte [rax], al
cmp al, 0xf9
inc dword [rbp]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add al, byte [rax + 0xc]
or byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
fadd qword [rdx]
add byte [rax], al
stc
call qword [rbp + 1]
add byte [rax], al
add al, 0x2b
and eax, dword [rax]
adc byte [rsi + 0x60d4302], al
add qword [rbx], 3
add qword [rdi + rax], rcx
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
test byte [rbx], al
add byte [rax], al
hlt
call qword [rip]
adc byte [rsi + 0x60d4302], al
push rax
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rbx + rax - 0x6e00000], ah
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x4022da
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
in al, dx
add eax, dword [rax]
add byte [rax - 7], cl
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
add bh, bh
inc dword [rcx]
jo 0x402376
add byte [rax], al
add dword [rdx], 0x8ab05
mov byte [rdx], 0x5e
or byte [rax], al
rol dword [rbx], 1
xor eax, dword [rax]
add byte [rbp + 0x8df0504], ah
add byte [rcx - 0x6fe1afa], cl
or byte [rax], al
ror byte [rax], 0x53
add byte [rax], al
inc dword [rcx]
sbb ecx, dword [rcx + 5]
add byte [rax], al
xchg dword [rcx], eax
add eax, 0xa000029a
add dword [rip - 0x50fffd7a], eax
add dword [rdx + rsi*8], edx
add dword [rax], eax
mov dl, 2
add eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rax
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x4016], ah
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ah
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
fmul dword [rbx]
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rsp + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sub eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 5], cl
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, ecx
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4009], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add byte [rax], dl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add dl, bl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rsi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dl
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], ah
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400c], al
add byte [rax], al
add byte [rsi + 0x400c], dl
add byte [rax], al
add byte [rsi + 0x400c], ah
add byte [rax], al
add byte [rsi + 0x400c], dh
add byte [rax], al
add dh, al
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
push rsi
or eax, 0x40
add byte [rax], al
or ax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
pop r9
push rsi
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x403157
je 0x403160
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x40316e
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add dword [rax], eax
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 5], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add dl, bl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or byte [rax], al
adc byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax + 0x4009], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add al, cl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or eax, dword [rax]
fmul dword [rbx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
add byte [rax + rax*2], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400d7000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0x400d], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rsp + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax + 0x1c], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add al, dl
sbb eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, byte [rax]
enter 0x401e, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
cld
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
call 0x409332
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
enter 0x6030, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb eax, dword [rax]
loopne 0x4033da
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400d], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, dh
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rbx], bl
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xe], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
call 0x4094ca
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], ch
add byte [rax], dl
add byte [rax + 0x1c], dl
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x1c], dl
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x1c], dl
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, ch
add byte [rax], al
add byte [rcx], al
add byte [rbx], bl
add byte [rax + 0x6044], ch
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, bh
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and dword [rcx], eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
pop rax
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dh
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x1c], bl
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 1], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
pop rdx
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], bl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
pop rsp
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ja 0x40359b
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edi
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ecx, 0x1000001
add byte [rax], dl
add byte [rax + 0x1c], ch
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fiadd dword [rcx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
insb byte [rdi], dx
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
jo 0x40361e
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x1c], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rbp
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jnp 0x40365c
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb byte [rax + rax*2], 0
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
ret 2
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x401c], cl
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], cl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
nop
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp al, byte [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
xchg eax, esp
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x401c], bl
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rbx], eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
pushfq
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x401c], ah
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fld dword [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
movsb byte [rdi], byte ptr [rsi]
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 4
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
test al, 0x1c
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub eax, 0x1000004
add byte [rax], dl
add byte [rsp + rbx + 0x40], ch
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x401c], dh
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jnp 0x403796
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov ah, 0x1c
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsd dword [rsi], dword ptr [rdi]
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x401c], bh
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
iretd
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], bh
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
add al, 0
add byte [rcx], al
add byte [rax], dl
add al, al
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
enter 0x401c, 0
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
push 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
int3
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
add eax, 0x10000
adc byte [rax], al
rcr byte [rax + rax*2], 1
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dh, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild word [rip + 0x10000]
adc byte [rax], al
fcomp dword [rax + rax*2]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x1000006
add byte [rax], dl
add ah, bl
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub eax, dword [rsi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
loopne 0x4038be
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
in al, 0x1c
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], 0
add byte [rcx], al
add byte [rax], dl
add al, ch
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsb byte [rsi], byte ptr [rdi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, cl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
clc
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
add byte [rip + 0x40], bl
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd qword [rsi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc byte [rip + 0x40], bl
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jrcxz 0x403948
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
and byte [rip + 0x40], bl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jmp 0x403960
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov al, 0x1d
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
rcr byte [rip + 0x40], 0
add byte [rip], cl
add byte [rax], al
add byte [rdi + rax], ch
add byte [rax], al
add al, byte [rax]
add byte [rcx + 0x15], dl
add byte [rax], al
add byte [rax], al
add byte [rbp + 1], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsp
add byte [rax], al
add al, byte [rax]
add byte [rsi + 0x4016], ah
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 7], dh
add byte [rax], al
add dword [rax], eax
adc al, byte [rax]
clc
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jg 0x4039f1
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 7], cl
add byte [rcx], dl
add al, dl
sbb eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sahf
add byte [rax], al
add dword [rax], eax
sbb dword [rax], eax
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rax], dh
adc al, 0
clc
sub eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x409a9a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
add byte [rax], al
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x2000000b], al
add byte [rdx], bl
add al, cl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loope 0x403ab1
add byte [rax], al
adc al, byte [rax]
add byte [rip + 0x400f], bh
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, dx
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x400f], dl
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rcx], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax], dh
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x1200000b], cl
add byte [rsi], cl
add byte [rax + 0x400d], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rcx], bl
add byte [rax], al
and al, byte [rax]
add dl, al
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 8], ch
add byte [rax], al
and al, byte [rax]
add byte [rdx], dh
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
stosd dword [rdi], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, bh
or byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rcx], cl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rcx], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor cl, byte [rcx]
add byte [rax], al
adc dword [rax], eax
sbb al, byte [rax]
fdiv dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rsi + 4], ch
add byte [rax], al
add byte [rax + 9], al
add byte [rax], al
adc al, byte [rax]
add byte [rsi + 0xe], dh
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 9], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rdx], dl
add byte [rdi], cl
add byte [rsp + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 9], ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ch
or dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add byte [rdx + 0x401a], bl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rdx], dh
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0xa], dl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
imul ecx, dword [rdx], 0
add byte [rdx], ah
add byte [rsi], cl
add al, ch
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rcx + 0x220000], al
add byte [rbx + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rbp], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edx, 0x1200000a
add byte [rax], al
add byte [rax + 0x400c], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bl
or al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 7], ch
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
add byte [rcx], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0x13], cl
add byte [rax], al
add bl, bh
or al, byte [rax]
add byte [rcx], dl
add byte [rax], dl
add byte [rax + 0x1c], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or cl, byte [rbx]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdi
or eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0xb], ch
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test byte [rbx], cl
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
enter 0x6030, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, ecx
or eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
or eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rbx + 0x4016], bh
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
or al, 0
add byte [rdx], dl
add byte [rsi], cl
add byte [rdi + 0x400f], dl
add byte [rax], al
add byte [rbp], al
add byte [rax], al
add byte [rsp + rcx], cl
add byte [rax], al
adc al, byte [rax]
add byte [rsi + rcx + 0x40], ah
add byte [rax], al
add byte [rax], r8b
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
or al, 0
add byte [rcx], dl
add bl, byte [rdx]
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and cl, byte [rax + rax]
add byte [rcx], dl
add bl, byte [rdx]
add al, dl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0
add byte [rdx], dl
add byte [rsi], cl
add al, al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte gs:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], bh
or al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], dh
add byte [rax], al
and al, byte [rax]
add dh, bh
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0xea000e001200000c], eax
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lodsd eax, dword [rsi]
or al, 0
add byte [rdx], ah
add byte [rsi], cl
add al, ch
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, al
or al, 0
add byte [rdx], ah
add byte [rsi], cl
add byte [rdi + rdx + 0x40], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rsi + 0xd], dl
add byte [rax], al
and al, byte [rax]
add byte [rbp + 0x1b], dl
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000d], dl
add byte [rbx], bl
add bh, bl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lahf
or eax, 0x220000
add bh, dl
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ebp, 0x1200000d
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, bl
or eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, 0x220000
add byte [rdi + rdx], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dh
adc al, byte [rax]
add byte [rcx], dl
add byte [rbx], bl
add byte [rax + 0x6044], cl
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0xe
add byte [rax], al
and al, byte [rax]
add byte [rax], bl
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdi], 0
add byte [rax], dl
add byte [rbx], bl
add byte [rax + 0x6044], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add byte [rax], al
and al, byte [rax]
add byte [rdx], dh
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
outsb dx, byte [rsi]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, dx
add byte [rax], al
and al, byte [rax]
add byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rcx], bh
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, cl
sldt word [rax]
adc byte [rax], al
sbb al, byte [rax]
fbstp tbyte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
sldt word [rax]
and al, byte [rax]
add byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rdx], ah
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x10], bh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
xor byte [rip + 0x40], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lahf
adc byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x12000010], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
adc dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add dh, bl
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
mov esp, 1
add byte [rax], al
add byte [rcx + rdx + 0x120000], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 0x11, al
add byte [rax], al
and al, byte [rax]
add dl, al
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rdx], dh
add byte [rax], al
adc al, byte [rax]
add dl, cl
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rcx], bh
or al, 0
add byte [rdx], dl
add byte [rbx], cl
add al, bl
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp dword [rdx], edx
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
nop
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x404182
jne 0x404176
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x404136
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4041b4
jb 0x4041ba
pop rdi
jne 0x4041c3
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x4041bd
je 0x4041b9
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4041d9
jb 0x4041df
pop rdi
jne 0x4041e8
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x4041eb
jns 0x4041db
outsb dx, byte gs:[rsi]
je 0x4041f2
jns 0x404182
jb 0x4041e6
insd dword [rdi], dx
pop rdi
jne 0x4041f8
insd dword [rdi], dx
jns 0x40418e
pop rdi
pop rdi
jb 0x4041f4
insd dword [rdi], dx
pop rdi
jne 0x404206
insd dword [rdi], dx
jns 0x4041fb
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404206
jns 0x404206
outsb dx, byte gs:[rsi]
je 0x40421d
jns 0x4041ad
insd dword [rdi], dx
imul ebp, dword [rsi + 0x2e], 0x707063
pop rdi
pop rdx
push rbx
je 0x404207
xor dword [rcx], edi
jo 0x404228
movsxd rsp, dword gs:[rbp + 0x77]
imul esi, dword [rbx + 0x65], 0x6e6f635f
jae 0x404240
jb 0x404243
movsxd rsi, dword [rax + rax + 0x5f]
pop rdx
push rbx
je 0x404222
xor dword [rbx], esi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x404241
jb 0x40424c
add byte [rdi + 0x5a], bl
push rbx
je 0x404237
imul esp, dword ss:[rdi + 0x6e], 0x65726f
pop rdi
pop rdx
push rbx
je 0x404244
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x40426b
movsxd rdi, dword [rax + 0x78]
xor r14b, byte [rcx]
pop rdi
pop rdi
jne 0x404286
je 0x40427b
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x5f]
jo 0x404292
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x5a5f0045
push rbx
je 0x40427a
xor dword [rax], esi
jb 0x404295
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x40428c
xor dword [rcx], esi
je 0x4042b6
jns 0x4042a5
je 0x4042b7
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x40429f
xor dword [rax], esi
outsd dx, dword fs:[rsi]
jo 0x4042ce
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x404297
xor eax, 0x65676572
js 0x4042cc
movsxd rbp, dword [rdi + 0x6e]
jae 0x4042e6
outsb dx, byte [rsi]
je 0x4042e9
xor rax, 0x73616369
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x4042b6
xor eax, 0x65676572
js 0x4042eb
movsxd rbp, dword [rdi + 0x6e]
jae 0x404305
outsb dx, byte [rsi]
je 0x404308
outsb dx, byte ss:[rsi]
outsd dx, dword [rsi]
jae 0x404310
jae 0x4042e3
add byte [rdi + 0x5a], bl
push rbx
je 0x4042d6
xor eax, 0x65676572
js 0x40430b
movsxd rbp, dword [rdi + 0x6e]
jae 0x404325
outsb dx, byte [rsi]
je 0x404328
cmp byte [rdi + 0x70], r13b
je 0x404324
insd dword [rdi], dx
imul edi, dword [rdx + 0x65], 0x5a5f0045
push rbx
je 0x4042f8
xor eax, 0x65676572
js 0x40432d
movsxd rbp, dword [rdi + 0x6e]
jae 0x404347
outsb dx, byte [rsi]
je 0x40434a
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x404345
add byte [r15 + 0x5a], r11b
push rbx
je 0x404319
xor eax, 0x65676572
js 0x40434e
movsxd rbp, dword [rdi + 0x6e]
jae 0x404368
outsb dx, byte [rsi]
je 0x40436b
xor qword [rax], r14
push r11
movsxd rsi, dword [rdx + 0x69]
jo 0x404379
add byte [r15 + 0x5a], r11b
push rbx
je 0x40433e
xor eax, 0x65676572
js 0x404373
movsxd rbp, dword [rdi + 0x6e]
jae 0x40438d
outsb dx, byte [rsi]
je 0x404390
xor rax, 0x69736162
movsxd rax, dword [rbp]
pop rdi
pop rdx
push rbx
je 0x40435d
xor eax, 0x65676572
js 0x404392
movsxd rbp, dword [rdi + 0x6e]
jae 0x4043ac
outsb dx, byte [rsi]
je 0x4043af
cmp byte [rbp + 0x78], r12b
je 0x4043a7
outsb dx, byte [rsi]
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x40437f
xor eax, 0x65676572
js 0x4043b4
movsxd rbp, dword [rdi + 0x6e]
jae 0x4043ce
outsb dx, byte [rsi]
je 0x4043d1
xor r12, qword [rcx + 0x77]
imul eax, dword [rbp], 0x5f
pop rdx
push rbx
je 0x40439c
xor eax, 0x65676572
js 0x4043d1
movsxd rbp, dword [rdi + 0x6e]
jae 0x4043eb
outsb dx, byte [rsi]
je 0x4043ee
xor al, 0x67
jb 0x4043e5
jo 0x4043c7
add byte [rdi + 0x5a], bl
push rbx
je 0x4043ba
xor eax, 0x65676572
js 0x4043ef
movsxd rbp, dword [rdi + 0x6e]
jae 0x404409
outsb dx, byte [rsi]
je 0x40440c
xor rax, 0x65726765
jo 0x4043e6
add byte [rdi + 0x5a], bl
push rbx
je 0x4043d9
xor eax, 0x65676572
js 0x40440e
movsxd rbp, dword [rdi + 0x6e]
jae 0x404428
outsb dx, byte [rsi]
je 0x40442b
xor qword [rbx], r14
insd dword [rdi], dx
je 0x404422
push 0x6665645f
jne 0x404433
je 0x40440e
add byte [rdi + 0x5a], bl
push rbx
je 0x404401
xor eax, 0x65676572
js 0x404436
movsxd rbp, dword [rdi + 0x6e]
jae 0x404450
outsb dx, byte [rsi]
je 0x404453
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40444a
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x404429
xor eax, 0x65676572
js 0x40445e
movsxd rbp, dword [rdi + 0x6e]
jae 0x404478
outsb dx, byte [rsi]
je 0x40447b
xor qword [rbx], r14
insd dword [rdi], dx
je 0x404472
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x404451
xor eax, 0x65676572
js 0x404486
movsxd rbp, dword [rdi + 0x6e]
jae 0x4044a0
outsb dx, byte [rsi]
je 0x4044a3
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40449a
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
ja 0x404486
add byte [rdi + 0x5a], bl
push rbx
je 0x404479
xor eax, 0x65676572
js 0x4044ae
movsxd rbp, dword [rdi + 0x6e]
jae 0x4044c8
outsb dx, byte [rsi]
je 0x4044cb
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4044c2
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
ja 0x4044ae
add byte [rdi + 0x5a], bl
push rbx
je 0x4044a1
xor eax, 0x65676572
js 0x4044d6
movsxd rbp, dword [rdi + 0x6e]
jae 0x4044f0
outsb dx, byte [rsi]
je 0x4044f3
cmp qword [rbp + 0x61], r13
je 0x4044e9
push 0x796e615f
add byte [r15 + 0x5a], r11b
push rbx
je 0x4044c4
xor eax, 0x65676572
js 0x4044f9
movsxd rbp, dword [rdi + 0x6e]
jae 0x404513
outsb dx, byte [rsi]
je 0x404516
xor qword [rbp*2 + 0x68637461], r14
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
je 0x40450f
outsb dx, byte [rsi]
jne 0x40451f
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x4044ed
xor eax, 0x65676572
js 0x404522
movsxd rbp, dword [rdi + 0x6e]
jae 0x40453c
outsb dx, byte [rsi]
je 0x40453f
xor qword [rsi], r14
insd dword [rdi], dx
je 0x404536
push 0x6e6f635f
je 0x404543
outsb dx, byte [rsi]
jne 0x40454c
jne 0x404552
add byte [r15 + 0x5a], r11b
push rbx
je 0x404518
xor eax, 0x65676572
js 0x40454d
movsxd rbp, dword [rdi + 0x6e]
jae 0x404567
outsb dx, byte [rsi]
je 0x40456a
xor qword [rsi], r14
insd dword [rdi], dx
je 0x404561
push 0x6572705f
jbe 0x404564
jbe 0x404569
imul ebp, dword [rbp + rax*2], 0x534e5a5f
je 0x404543
xor eax, 0x65676572
js 0x404578
movsxd rbp, dword [rdi + 0x6e]
jae 0x404592
outsb dx, byte [rsi]
je 0x404595
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x404596
je 0x40458b
jne 0x40459e
je 0x404579
add byte [rdi + 0x5a], bl
push rbx
je 0x40456c
xor eax, 0x65676572
js 0x4045a1
movsxd rbp, dword [rdi + 0x6e]
jae 0x4045bb
outsb dx, byte [rsi]
je 0x4045be
xor qword [rax], r14
outsw dx, word [rsi]
jb 0x4045bf
je 0x4045b4
jae 0x4045bc
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x404591
xor eax, 0x65676572
js 0x4045c6
movsxd rbp, dword [rdi + 0x6e]
jae 0x4045e0
outsb dx, byte [rsi]
je 0x4045e3
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x4045e4
je 0x4045d9
outsb dx, byte [rsi]
outsd dx, dword [rsi]
pop rdi
movsxd rbp, dword [rdi + 0x70]
jns 0x4045c7
add byte [rdi + 0x5a], bl
push rbx
je 0x4045ba
xor eax, 0x65676572
js 0x4045ef
movsxd rbp, dword [rdi + 0x6e]
jae 0x404609
outsb dx, byte [rsi]
je 0x40460c
xor qword [rdi], r14
outsw dx, word [rsi]
jb 0x40460d
je 0x404602
imul si, word [rdx + 0x73], 0x5f74
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
jns 0x4045f3
add byte [rdi + 0x5a], bl
push rbx
je 0x4045e6
xor eax, 0x65676572
js 0x40461b
movsxd rbp, dword [rdi + 0x6e]
jae 0x404635
outsb dx, byte [rsi]
je 0x404638
xor qword [rbx], r14
jb 0x40463d
outsd dx, dword [rsi]
jb 0x40462d
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x40463a
add byte [r15 + 0x5a], r11b
push rbx
je 0x40460e
xor eax, 0x65676572
js 0x404643
movsxd rbp, dword [rdi + 0x6e]
jae 0x40465d
outsb dx, byte [rsi]
je 0x404660
xor qword [rcx], r14
jb 0x404665
outsd dx, dword [rsi]
jb 0x404655
movsxd rsi, dword [rcx + rdi*2 + 0x70]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x404634
xor eax, 0x65676572
js 0x404669
movsxd rbp, dword [rdi + 0x6e]
jae 0x404683
outsb dx, byte [rsi]
je 0x404686
xor qword [rdx], r14
jb 0x40468b
outsd dx, dword [rsi]
jb 0x40467b
jae 0x404682
jo 0x404687
add byte [r15 + 0x5a], r11b
push rbx
je 0x40465b
xor eax, 0x65676572
js 0x404690
movsxd rbp, dword [rdi + 0x6e]
jae 0x4046aa
outsb dx, byte [rsi]
je 0x4046ad
xor qword [rbx], r14
jb 0x4046b2
outsd dx, dword [rsi]
jb 0x4046a2
movsxd rbp, dword [rbx + 0x72]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x404683
xor eax, 0x65676572
js 0x4046b8
movsxd rbp, dword [rdi + 0x6e]
jae 0x4046d2
outsb dx, byte [rsi]
je 0x4046d5
xor qword [rcx], r14
jb 0x4046da
outsd dx, dword [rsi]
jb 0x4046ca
jb 0x4046cf
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4046a9
xor eax, 0x65676572
js 0x4046de
movsxd rbp, dword [rdi + 0x6e]
jae 0x4046f8
outsb dx, byte [rsi]
je 0x4046fb
xor qword [rcx], r14
jb 0x404700
outsd dx, dword [rsi]
jb 0x4046f0
jo 0x4046f4
jb 0x4046fa
outsb dx, byte [rsi]
add byte [r15 + 0x5a], r11b
push rbx
je 0x4046cf
xor eax, 0x65676572
js 0x404704
movsxd rbp, dword [rdi + 0x6e]
jae 0x40471e
outsb dx, byte [rsi]
je 0x404721
xor qword [rcx], r14
jb 0x404726
outsd dx, dword [rsi]
jb 0x404716
jb 0x40471b
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4046f5
xor eax, 0x65676572
js 0x40472a
movsxd rbp, dword [rdi + 0x6e]
jae 0x404744
outsb dx, byte [rsi]
je 0x404747
xor qword [0x726f7272], r14
pop rdi
jb 0x404744
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40471e
xor eax, 0x65676572
js 0x404753
movsxd rbp, dword [rdi + 0x6e]
jae 0x40476d
outsb dx, byte [rsi]
je 0x404770
xor qword [rcx], r14
jb 0x404775
outsd dx, dword [rsi]
jb 0x404765
jb 0x404769
outsb dx, byte [rsi]
add byte gs:[r15d + 0x5a], r11b
push rbx
je 0x404744
xor eax, 0x65676572
js 0x404779
movsxd rbp, dword [rdi + 0x6e]
jae 0x404793
outsb dx, byte [rsi]
je 0x404796
xor qword [rcx], r14
jb 0x40479b
outsd dx, dword [rsi]
jb 0x40478b
jae 0x40479e
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40476a
xor eax, 0x65676572
js 0x40479f
movsxd rbp, dword [rdi + 0x6e]
jae 0x4047b9
outsb dx, byte [rsi]
je 0x4047bc
xor qword [rip + 0x6f727265], r14
jb 0x4047b1
jb 0x4047bc
jo 0x4047be
je 0x4047a1
add byte [rdi + 0x5a], bl
push rbx
je 0x404794
xor eax, 0x65676572
js 0x4047c9
movsxd rbp, dword [rdi + 0x6e]
jae 0x4047e3
outsb dx, byte [rsi]
je 0x4047e6
xor qword [rsi], r14
jb 0x4047eb
outsd dx, dword [rsi]
jb 0x4047db
movsxd rbp, dword [rdi + 0x6d]
jo 0x4047ed
js 0x4047ed
je 0x4047ff
add byte [r15 + 0x5a], r11b
push rbx
je 0x4047bf
xor eax, 0x65676572
js 0x4047f4
movsxd rbp, dword [rdi + 0x6e]
jae 0x40480e
outsb dx, byte [rsi]
je 0x404811
xor qword [rcx], r14
jb 0x404816
outsd dx, dword [rsi]
jb 0x404806
jae 0x40481d
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4047ec
pop rdi
pop rdi
je 0x40481b
imul ebp, dword [rsp + rcx*2 + 0x31], 0x5f535f39
imul ebp, dword [rsi + 0x76], 0x64696c61
pop rdi
jae 0x404840
je 0x404834
pop rdi
imul esp, dword [rbp + rax*2], 0x334c5a5f
imul ebp, dword [rsi + 0x66], 0x4c5a5f00
xor esp, dword [rbp + 0x70]
jae 0x4047e4
pop rdi
pop rdx
xor r14b, byte [rax + 0x69]
add byte [rdi + 0x5a], bl
xor r13, qword [rbp + 0x6f]
add byte fs:[rdi + 0x5a], bl
pop rdx
xor al, 0x72
jbe 0x404842
xor dword [rcx], edi
pop rdi
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
pop rdx
xor eax, 0x766c6f73
jbe 0x404863
xor dword [rcx], edi
pop rdi
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
xor al, 0x31
pop rdi
pop rdi
jae 0x4048b0
je 0x4048a8
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x4048b6
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x4048cc
jb 0x4048cf
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x4048e4
pop rdi
pop r15
insd dword [rdi], dx
jb 0x4048d7
outsb dx, byte [rsi]
add byte fs:[rdi + 0x5f], bl
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404928
jns 0x404928
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404939
jns 0x404939
jae 0x404950
jb 0x404953
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
xor eax, 0x65776f70
jb 0x40495b
imul eax, dword [rax], 0x6e697270
je 0x404960
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x375a5f00
jo 0x40497f
movsxd rsp, dword gs:[rcx + 0x6c]
movsxd rsi, dword [rsi]
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdx
push rbx
je 0x40495b
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x40499f
movsxd rsp, dword [rbp + 0x43]
xor dword [rbp + 0x52], eax
push rbx
je 0x404978
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x4049b7
movsxd rbx, dword [rdi + 0x73]
je 0x4049c5
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4049c0
je 0x4049d5
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
add byte [r15 + 0x5a], r11b
push rbx
je 0x4049aa
xor ebp, dword [rbp + 0x65]
jb 0x4049f0
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x4049fb
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x34454533
jae 0x404a65
insd dword [rdi], dx
add byte [rdi + 0x5f], bl
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x404a82
jb 0x404a85
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x404a77
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x404a98
jae 0x404a28
jo 0x404a9f
je 0x404a9f
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x73686300
add byte [rdi + 0x5a], bl
xor eax, 0x766c6f73
jbe 0x404a48
pop rdi
pop rdx
xor esi, dword [rdx + 0x6e]
imul eax, dword fs:[rax], 0x73615f5f
jae 0x404abb
jb 0x404acc
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x404aa2
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404ae6
movsxd rsp, dword [rbp + 0x37]
pop rdi
pop r15
imul ebp, dword [rsi + 0x69], 0x4b524574
push rbx
je 0x404ac5
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404b04
movsxd rbx, dword [rdi + 0x73]
je 0x404b12
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404b0d
je 0x404b22
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x404b0d
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404b2a
xor ebx, dword [rdi + 0x5f]
insd dword [rdi], dx
js 0x404b5f
insb byte [rdi], dx
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x404b51
push rax
imul ecx, dword [rsi + 0x39], 0x6e675f5f
jne 0x404b71
movsxd rdi, dword [rax + 0x78]
xor eax, 0x706f5f5f
jae 0x404b4d
xor eax, 0x6574495f
jb 0x404b82
insb byte [rdi], dx
jae 0x404b9a
pop rdi
imul esi, dword [rbp + 0x72], 0x5f544545
push rbx
xor al, 0x5f
push rbx
xor al, 0x5f
push rsp
xor byte [rdi], bl
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x404bba
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x404bbf
pop rdi
je 0x404bc7
js 0x404bcd
je 0x404ba6
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x404baa
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404bee
movsxd rsp, dword [rbp + 0x44]
xor dword [rbp + 0x76], eax
add byte [rdi + 0x5a], bl
push rbx
je 0x404bca
pop rdi
pop rdi
je 0x404bf9
imul ebp, dword [rsp + rsi + 0x5f], 0x49646f4d
insd dword [rdi], dx
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x45316d4c]
insd dword [rdi], dx
xor byte [rbp + 0x4c], al
xor dword [rbp + 0x4c], eax
xor dword [rbp + 0x45], eax
pop rdi
pop rdi
movsxd rsp, dword [rcx + 0x6c]
movsxd rax, dword [rbp + 0x6d]
add byte [rdi + 0x5a], bl
push rbx
je 0x404c00
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x404c55
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x404c7d
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x5a], bl
push rbx
je 0x404c4f
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404c8e
movsxd rbx, dword [rdi + 0x73]
je 0x404c9c
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404c97
je 0x404cac
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor al, 0x62
movsxd rbp, dword [rbx + 0x45]
jbe 0x404c8f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x404cde
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x404cf3
pop rdi
jae 0x404d09
jb 0x404d0c
add byte [rdi + 0x5a], bl
push rbx
je 0x404cd6
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404d15
movsxd rbx, dword [rdi + 0x73]
je 0x404d23
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404d1e
je 0x404d33
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rbp + 0x76], r8d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x404d4c
movsxd rdi, dword [rax + 0x78]
xor eax, 0x706f5f5f
jae 0x404d28
pop rdi
pop rdi
imul esi, dword [rbp + 0x72], 0x73656c5f
jae 0x404d63
imul esi, dword [rbp + 0x72], 0x5f007645
pop rdx
xor al, 0x72
jbe 0x404d14
pop rdi
pop rdx
xor esp, dword [rcx + 0x64]
push rdx
imul ebp, dword [rcx], 0x4d545f5f
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
jae 0x404d9e
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x404d7e
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404dc2
movsxd rsp, dword [rbp + 0x39]
pop rdi
pop r15
je 0x404dd9
insb byte [rdi], dx
jbe 0x404da8
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dword [rax], edi
add byte [rdi + 0x5a], bl
push rbx
je 0x404db6
pop rdi
pop rdi
je 0x404de5
imul ebp, dword [rbp + rsi + 0x5f], 0x646f6d5f
insd dword [rdi], dx
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
insd dword [rdi], dx
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor byte [rbp + 0x45], al
push r12
pop rdi
push rbx
xor dword [rdi], ebx
pop rdi
pop rdx
xor al, 0x6d
jne 0x404e1d
je 0x404e1c
imul eax, dword [rax], 0x534e5a5f
je 0x404dec
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404e30
movsxd rsp, dword [rbp + 0x44]
xor al, byte [rbp + 0x76]
add byte [rdi + 0x5a], bl
push rbx
je 0x404e06
xor ebp, dword [rbp + 0x65]
jb 0x404e4c
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x404e57
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x63454533
insb byte [rdi], dx
jbe 0x404e5e
pop rdi
pop rdx
push rbx
je 0x404e9c
pop rdi
pop rdi
je 0x404ecb
imul ebp, dword [rsp + rsi + 0x5f], 0x49646f4d
insd dword [rdi], dx
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
insd dword [rdi], dx
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor byte [rbp + 0x4c], al
xor dword [rbp + 0x4c], eax
xor dword [rbp + 0x45], eax
pop rdi
pop rdi
movsxd rsp, dword [rcx + 0x6c]
movsxd rax, dword [rbp + 0x6d]
add byte [rdi + 0x5f], bl
jae 0x404f13
pop rdi
jae 0x404f17
jb 0x404f1a
add byte [rdi + 0x5a], bl
push rbx
je 0x404edd
xor dword [rbp + 0x61], ebp
js 0x404f10
insb byte [rdi], dx
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x404f02
push rax
imul eax, dword [rbp + 0x54], 0x5f31535f
push rbx
xor dword [rdi], ebx
pop rdi
pop rdi
jae 0x404f3d
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
movsxd rax, dword [r13 + 0x44]
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404f32
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404f76
movsxd rsp, dword [rbp + 0x63]
insb byte [rdi], dx
jbe 0x404f14
pop rdi
pop rdx
push rbx
je 0x404f52
pop rdi
pop rdi
je 0x404f81
imul ebp, dword [rbp + rsi + 0x5f], 0x646f6d5f
insd dword [rdi], dx
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x45316d4c]
insd dword [rdi], dx
xor byte [rbp + 0x45], al
push r12
pop rdi
push rbx
xor dword [rdi], ebx
pop rdi
pop rdx
cmp qword [r15 + 0x5f], rbx
outsb dx, byte [esi]
jne 0x404faa
movsxd rdi, dword [rax + 0x78]
xor eax, 0x706f5f5f
jae 0x404f86
xor eax, 0x6574495f
jb 0x404fbb
insb byte [rdi], dx
jae 0x404fd3
pop rdi
imul esi, dword [rbp + 0x72], 0x50496c63
imul edx, dword [rbx + 0x33], 0x6245455f
push rsp
pop rdi
push rsp
xor byte [rdi], bl
pop rdi
pop rdx
push rbx
je 0x404fad
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x404ff1
movsxd rsp, dword [rbp + 0x37]
pop rdi
pop r15
imul bp, word [rsi + 0x69], 0x7645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dword [rax], edi
add byte [rdi + 0x5a], bl
push r11
je 0x404fe3
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x405022
movsxd rbx, dword [rdi + 0x73]
je 0x405030
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40502b
je 0x405040
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor eax, 0x74735f63
jb 0x405027
jbe 0x405024
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x40502c
xor ebp, dword [rbp + 0x65]
jb 0x405072
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x40507d
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x43454533
xor dword [rbp + 0x6d], eax
add byte [rdi + 0x5a], bl
push rbx
je 0x4050c1
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x405100
movsxd rbx, dword [rdi + 0x73]
je 0x40510e
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x405109
je 0x40511e
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [r13 + 0x50], eax
movsxd rdx, dword [r10 + 0x4b]
push rbx
xor ebx, dword [rdi + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x40513c
add byte [rdi + 0x5a], bl
push rbx
je 0x405114
xor ebp, dword [rbp + 0x65]
jb 0x40515a
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x405165
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x43454533
xor al, byte [rbp + 0x6d]
add byte [rdi + 0x5a], bl
push rbx
movsxd rax, dword [r13 + 0x43]
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
js 0x405203
pop rdi
jo 0x4051f3
jb 0x405203
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x405215
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x405228
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
pop rdi
pop rdx
push rbx
je 0x4051fc
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x40523b
movsxd rbx, dword [rdi + 0x73]
je 0x405249
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x405244
je 0x405259
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
imul edi, dword [rax + 0x45], 0x4740406d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x405241
xor ebp, dword [rbp + 0x65]
jb 0x405287
outsb dx, byte gs:[rsi]
outsb dx, byte [rsi]
pop rdi
je 0x405292
imul esi, dword [rbx + 0x74], 0x655f7265
outsb dx, byte [rsi]
imul ebp, dword [esi + 0x65], 0x6d4c6d49
xor esi, dword [rdx]
insd dword [rdi], dx
xor dh, byte ss:[rax*2 + 0x39336d4c]
insd dword [rdi], dx
xor esi, dword [rcx]
insd dword [rdi], dx
xor dh, byte [rip + 0x38343736]
xor esi, dword [rsi]
xor dword [rip + 0x316d4c45], esi
xor dword [rbp + 0x4c], eax
insd dword [rdi], dx
xor al, 0x32
cmp dword [rcx + rdi], esi
xor bh, byte [rcx]
xor eax, 0x376d4c45
insd dword [rdi], dx
xor dh, byte [rsi]
xor esi, dword [rsi]
cmp dword [rdx], esi
cmp byte [rsi], dh
xor al, 0x30
insd dword [rdi], dx
xor dword [rip + 0x346d4c45], esi
xor byte [rdx], dh
xor dh, byte [rdi]
xor esi, dword [rax]
xor eax, 0x6d4c4532
xor dword [rax], edi
insd dword [rdi], dx
xor dword [rax], edi
xor dword [rdx], esi
xor al, 0x33
xor esi, dword [rdx]
xor eax, 0x31454533
xor dword [rdi + 0x4d], ebx
pop rdi
outsb dx, byte gs:[esi]
pop rdi
jb 0x405300
outsb dx, byte [rsi]
jbe 0x4052a4
pop rdi
pop rdx
push rbx
je 0x4052e1
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x405320
movsxd rbx, dword [rdi + 0x73]
je 0x40532e
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x405329
je 0x40533e
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
jo 0x405327
movsxd r8, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x405325
xor esi, dword [rdx + 0x61]
outsb dx, byte [rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
pop rdi
jbe 0x405369
movsxd rsp, dword [rbp + 0x43]
xor al, byte [rbp + 0x52]
push rbx
je 0x405342
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x405381
movsxd rbx, dword [rdi + 0x73]
je 0x40538f
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40538a
je 0x40539f
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
add byte [r13 + 0x61], r13b
imul ebp, dword [rsi], 0x746e63
add byte [rsi], ch
jae 0x4053c2
insd dword [rdi], dx
je 0x4053ad
add byte [rsi], ch
jae 0x4053c5
jb 0x4053c7
add byte [rsi], ch
jae 0x4053c1
jae 0x4053cf
jb 0x4053d1
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x4053d2
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x4053e0
outsb dx, byte cs:[esi]
jne 0x4053ae
jne 0x4053ec
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x4053bc
push 0x687361
jns 0x405405
jae 0x405412
insd dword [rdi], dx
add byte [rsi], ch
jns 0x40540d
jae 0x405415
jb 0x4053a3
outsb dx, byte cs:[esi]
jne 0x4053d6
jbe 0x40540f
jb 0x40541f
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x4053e3
jbe 0x40541c
jb 0x40542c
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x405427
insb byte [rdi], dx
jns 0x405436
add byte [rsi], ch
jb 0x405431
insb byte [rdi], dx
jo 0x40543d
je 0x4053d3
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x40540c
outsd dx, dword [esi]
je 0x4053e2
je 0x40544a
js 0x40545b
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x405460
je 0x405456
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x405479
jo 0x40548d
pop rdi
je 0x40547d
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x40548b
jns 0x40542c
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x4054a7
jns 0x405438
push 0x63
jb 0x40543d
jns 0x4054af
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x4054b9
je 0x40544f
je 0x4054b5
add byte [rsi], ch
jae 0x4054cc
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x405463
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 2], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add rax, 0x40
add byte [rax], al
add rax, 0
add byte [rax], al
xchg eax, ecx
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, bl
or byte [rax], al
add byte [rax], al
add byte [rax], al
fimul dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte ss:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
adc byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0x600000000000000]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 9
add byte [rax], al
add byte [rax], al
add byte [rax + 9], dh
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
enter 9, 0
add byte [rax], al
add byte [rax], al
adc byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x19000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
fmul dword [rbx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax + 1], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x400d], al
add byte [rax], al
add byte [rax + 0xd], al
add byte [rax], al
add byte [rdx + 0xe], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsp + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rsp + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1c], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1c], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea eax, [rcx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rcr byte [rip + 0x40], 1
add byte [rax], al
rcr byte [rip], 1
add byte [rax], al
hlt
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add byte [rax], al
add byte [rax], al
add al, cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, 4
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bh
and al, byte [rax]
add byte [rax], al
add byte [rax], al
cld
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
call 0x4059b2
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sub eax, 0x60
add byte [rax], al
clc
sub eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
enter 0x30, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
fbstp tbyte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rcl byte [rbx], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x1000001
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bl
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push r11
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add al, dh
sldt word [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x12], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
