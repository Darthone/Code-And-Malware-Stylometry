call 0x401240
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401058
add ebx, ebx
je 0x40100e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x401046
cmp rbp, -4
ja 0x401046
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x40102e
add ecx, 4
mov dl, byte [rax]
je 0x401056
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x401046
ret
cld
pop r11
cmp r8b, 2
je 0x40106e
jmp 0x4010eb
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40107e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401066
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401096
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401083
sub eax, 3
jb 0x4010b4
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x4010eb
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x4010db
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x4010d9
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4010c8
cmp rbp, -0xd00
adc ecx, eax
call 0x40101a
jmp 0x40106e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4011c4
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401162
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x4011ae
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401181
push 0x3a707474
jne 0x4011da
js 0x40119a
jae 0x4011d4
outsb dx, byte cs:[rsi]
je 0x401193
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x401201
jb 0x4011f3
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x40121e
jb 0x401231
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x211d9b
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x211d9b
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x4010fc
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x401227
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4011d5
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f12cf
jb 0x4012e7
movsxd rbp, dword [rdi]
jae 0x4012e1
insb byte [rdi], dx
js 0x4012e7
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x4012c7
cmp rsi, rcx
jae 0x4012cf
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x4012ae
cmp al, 0x8f
ja 0x4012ae
cmp byte [rsi - 2], 0xf
je 0x4012b4
sub al, 0xe8
jg 0x4012b1
push rdi
cmp al, 1
ja 0x40129c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40129f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x4012cc
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401323
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c17a1
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401367
mov al, 0xa
jmp 0x401367
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401343
inc ebx
mov al, 0
jmp 0x40136b
mov al, 2
jmp 0x40136b
mov al, 3
jmp 0x40136b
mov al, 0x3c
jmp 0x40136b
push rcx
rcr ah, 1
fstp st(7)
jle 0x4013ac
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x4013be
jg 0x4013b0
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6b33
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x40140a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6587
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x401412
cmp esi, 0x21585055
jne 0x401416
jge 0x401408
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x40140b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x40140f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x4014bb
pop rcx
or al, 0x3b
jb 0x4014c1
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401433
jmp 0x401435
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661376
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf535be
in eax, dx
jg 0x40146d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x4014b3
mov bh, 0x2a
add edi, 0x10
jmp 0x4014b0
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4014ed
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401529
jne 0x401540
fstpnce st(6), st(0)
jle 0x401509
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x40153f
jrcxz 0x401573
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b4d7
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4015f2
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x4015b2
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295b87
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x401625
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x4015bf
and ecx, 7
or al, 0xeb
jae 0x40162a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x40165f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40169d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401656
push rax
call 0xffffffff868d1343
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401660
std
cmp edi, esi
xchg eax, edi
jle 0x4016b5
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95c41
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x4016b3
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x4016a1
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x4016ca
js 0x40170a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40179c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad29d7
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x4017bd
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x4017c2
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21274
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401750
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
or al, 3
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add dword [rax], 0x92
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0x41
sbb byte [rax], al
add byte [rdi + 8], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401876
je 0x40187f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401848
mov dh, 0x7d
jbe 0x401847
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa9
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401880
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x4a00006], bl
add byte [rax], cl
nop
nop
invd
add byte [rax], dh
or dword [rax], eax
loopne 0x401828
nop
or al, byte [rax]
clc
or eax, dword [rax]
or dword [rbx + rdx], ebp
enter 0xc07, 0
or byte [rip + 0x7c813e0a], 0x80
add byte [rax + 0x16f4000f], dl
and byte [rdi], bh
adc byte [rax], al
add byte [rdi], dl
adc dword [rax], eax
lodsb al, byte [rsi]
xor byte [rax - 0x10eddfb3], 0x18
nop
jle 0x4018a9
add byte [rdx + rbx + 0x1de80014], ah
stc
add al, 0x56
adc eax, 0x1617
jl 0x4018ac
stc
add byte [rdi], dl
add byte [rax], cl
sbb byte [rax], al
clc
jle 0x401837
sbb dword [rax], eax
add byte [rax], ah
sbb al, byte [rax]
nop
wait
sahf
sbb eax, dword [rax]
rcr byte [rbx + rdx], 0x1d
leave
mov ebx, 0x4170129
add cl, dh
dec dword [rbx + rbx*4]
xchg byte [rbx], ch
mov ebx, dword [rbx]
mov edi, 0xd0029719
or al, 0x21
cdq
mov al, 0x40
sbb edx, dword [rax]
or eax, 0x720c90d8
push rax
pop rdi
adc byte [rcx], bl
in al, dx
mov dl, 0xa7
add dword [rdi], edx
push rbx
xor bl, r8b
xchg eax, ebp
jp 0x401944
jo 0x401885
or byte [rbx - 0x5a68ddee], bh
xlatb
sahf
sbb al, 0x6c
scasb al, byte [rdi]
nop
or ch, byte [rsi]
add ebx, ebp
jrcxz 0x40196f
enter -0x77bf, 0x34
cli
push rdi
sbb esp, dword [rax + 0x11a170b]
nop
cmp eax, ebx
and byte [rip + 0xc013b5f], cl
int1
xchg byte [rdx], dl
add rax, 0x61475067
mov esp, 0xa087d90b
sbb bl, byte [rsi + 0x17]
in al, dx
add byte [rbx], cl
push -0x50
out 0xbb, eax
xor ah, byte [rdx + 0x57]
jge 0x401993
xchg eax, ebx
ret 0x4a6c
sbb byte [rdi], dl
movsb byte [rdi], byte ptr [rsi]
movabs r13, 0x3aab747b7536232
cmpsb byte [rsi], byte ptr [rdi]
add bl, al
pop rdx
xchg eax, eax
adc cl, byte [rdx + rsi]
fmul st(1)
add byte [rsi], cl
jbe 0x401989
retf
cmp byte [rcx], 0xc8
and byte [rbx + 0x16f0d702], al
in al, dx
in al, 0xc9
or ebp, dword [rsi + 0x2a0ca003]
ja 0x401949
scasb al, byte [rdi]
in al, dx
sbb al, 0xe7
add dword [rax], eax
not byte [rdi]
insb byte [rdi], dx
nop
scasb al, byte [rdi]
sbb ecx, dword [rdx]
push rax
adc dword [rdi - 0x8a0f860], esp
scasb al, byte [rdi]
in al, dx
sbb al, 0xe
add al, byte [rax]
and dl, byte [rdi]
mov edi, 0xc9ece41c
or al, 6
sub al, 0x10
adc eax, 0x9d83210d
sbb dword [rdi + 0x34], eax
push r15
cmp dword [rdi + rdx + 0x69c701e1], eax
xor al, byte [rbp + rcx + 0x17cd2f61]
nop
or esp, esp
adc byte [rcx], dl
add ebp, dword [rbx]
add ah, cl
nop
rcl byte [rdi + 0x50], 3
in al, 0xd8
add rbp, rbx
and dword [rax + 0x17], esp
mov byte [rbx], dl
shr dword [rsi], -0x7f
rep insb byte [rdi], dx
add ebp, dword [rdi + 4]
ja 0x401a05
ret 0x9086
jnp 0x401980
pop rdi
test al, 0x9e
jno 0x4019f7
jmp 0x3f52a3b
seto byte [rsi]
in al, 0x90
mov esi, 0xf9ed920d
fimul word [rsi + 0x4702c88f]
test al, 0x64
enter 0x1b06, -0x2c
cwde
pop rdi
loope 0x401a5d
fadd dword [rbp - 0xee97fe4]
mov edi, 0x906c1922
mov bl, 4
ja 0x4019e9
cmp dword [rdi], edx
sub al, 0x9e
sbb eax, 0xf22a3a4
xor byte [rbp + 1], cl
xlatb
mov esp, 0x486c4204
jle 0x401a58
add byte [rdi + 0x96747c8], ah
mov bl, 0x93
push rdi
lodsd eax, dword [rsi]
add eax, 0xc84f2ff8
test dword [rbx + rdi], edi
lahf
add dword [rdi - 0x70], eax
xor al, 0xe4
jl 0x401a86
mov al, 0x43
adc eax, dword [rip - 0x70fa95e9]
sbb ah, byte [rcx]
cmp ebx, esp
xchg eax, esp
jno 0x401a6b
punpcklbw mm4, mm4
or dword [rdi - 0x55b86d50], eax
add eax, 0x250bc037
adc dword [rcx], ebx
in al, 0xce
jmp 0x401a71
or dword [rsi + rsi*2], 0xffffffaf
xlatb
loopne 0x401a9a
sbb bl, bh
call qword [rdi]
cli
movsxd rsi, dword [rdx + 0x74]
jae 0x401ae1
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
or ebx, edi
mov edi, 0x64007fb5
jb 0x401b0a
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401ad5
in eax, dx
mov edi, 0x6f64bdbd
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x401b25
jne 0x401b41
pop rdi
jg 0x401ac9
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x401b3e
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bx, bx, 0xfa17
fld xword [rsi + 0x69]
or byte [rdx + 0x72], dh
jns 0x401b49
jb 0x401b67
add byte [rsi + 0xa], ah
insd dword [rdi], dx
outsb dx, byte [rsi]
rcr ah, 0xb7
and byte gs:[rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x401b2f
or eax, 0xaddb295f
popfq
mov al, 0x74
sub ch, byte [rbp + 0x61]
adc bl, byte [rdi + 0x5a277070]
outsb dx, byte [rsi]
movsxd rbx, edi
fidiv dword [rcx + rsi]
sub edx, dword [rcx + 0x26636974]
imul esp, dword [rbx + 0x69], 0xf95add7a
out 0xd, al
popfq
pop rdi
outsb dx, byte [rsi]
movabs dword fs:[0xf8f6b5bfd63752f], eax
xor byte [rcx + 0x69], ch
xor eax, dword [rdi]
adc byte [rax + 0x72], dh
outsd dx, dword [rsi]
jo 0x401b6b
xor dh, byte [rcx]
int 0xbd
fidivr word [rbx + rdx*2]
je 0x401b93
cmp byte [rsi], bh
sbb al, 0x39
in eax, dx
outsd dx, dword [rsi]
loop 0x401bb4
jbe 0x401b9b
xor dword [rcx], edi
adc al, 0x50
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
lahf
ret 0xd7fe
adc byte [rdi], bl
xor eax, 0x766c6f73
and byte gs:[rdi + 0x4c], al
popfq
sti
fadd qword [rcx + 0x4c]
cdq
pop rdi
pop r15
insd dword [rdi], dx
jb 0x401b08
leave
jbe 0x401c04
call qword [rdx + 0x41]
pop r15
and r10b, byte [rcx + 0xb]
push rbp
fld dword ds:[rbx + 0x4820482d]
push rdx
push rbx
wait
adc dh, bl
fistp word [rbp + 0x5f]
push rsp
sub byte [r8], r8b
adc byte fs:[rbx - 0x3f48a23], bh
jb 0x401b7b
pop rcx
movsd dword [rdi], dword ptr [rsi]
xchg eax, esi
pop rbp
sub edi, dword [rbp + rsi - 0x5b889090]
in al, dx
sal byte [rdi], 1
jo 0x401c37
pop rbx
pop rax
jo 0x401bef
adc dword [rbx + 0x76], esp
xor dl, byte [rdi]
and ah, byte [rbx - 0x66]
xor ebx, eax
js 0x401bf6
insd dword [edi], dx
adc edi, dword [rsi + rax*4]
test byte [rdi - 0x75], bh
jbe 0x401c52
push rdx
fiadd word [rbx + 0x6c]
jae 0x401c6d
fcmovnbe st(0), st(4)
mov edi, 0x6863eefd
jae 0x401c45
insb byte [rdi], dx
push rax
jbe 0x401c48
xchg eax, edi
pop r8
pop rax
pop rdi
xor ebp, dword [rbx - 0x45]
or dword [rdi + 0x9066161], ebp
xor esi, dword [rdx - 0x72]
pop rbx
call 0x66884e02
xchg eax, edi
insb byte [rdi], dx
sub al, 0x5f
xor dh, byte [rdi + 0x2eb43b5b]
add ebx, edi
outsd dx, dword [rsi]
je 0x401c9a
jns 0x401c9e
imul eax, ebx, -0x7b
mov bl, 0x65
sbb dword [rsi + 0x4e], eax
jle 0x401c71
xor esp, dword [rsp + rbp*8]
or ecx, dword [rip + 0x76a82e8d]
shl dword [rbp + 0x37], 0x5f
fcmovu st(0), st(5)
ficomp word [rdx + 0x4b52457b]
sbb al, 0xd
xor eax, 0x317878
xor ah, byte [rdx - 0x53]
mov ebx, 0x1d5fad73
lodsb al, byte [rsi]
movsxd rsi, dword [r14d]
xor dword [rsi - 0x12], ecx
insd dword [rdi], dx
imul ecx, dword [rsi + 0x2b3c8761], 0x73
adc byte [rbp + 0x53], al
add al, 0xba
or dword [rcx], ecx
imul eax, dword [rax], -0x59
loope 0x401cc9
cmp byte [rbx - 0x20eb9445], bh
jno 0x401ccc
xor al, 0x49
pop rdx
xor dword [r13 - 0x31], eax
mov dword [rcx + rcx + 0x590a1a23], 0xb236da16
rol dword [rcx - 0x1b87e720], -0x36
cmp al, 0x19
pop rbp
insd dword [rdi], dx
push -0x51
push r12
sar dword [rbx], cl
or al, 0x43
jmp 0x401d03
cmp dword [rcx + 0x62], edx
and byte [rbx], bl
jbe 0x401d03
sub al, 0xb4
test dword [rdi + 0x73d63f75], eax
stosb byte [rdi], al
outsb dx, byte [rsi]
mov dh, 0xc0
pop rsi
enter 0x3d62, 0x3b
push rsp
or dh, al
adc byte [rsi - 0x46029e6d], dh
sbb esi, ebp
loope 0x401d59
xchg eax, ecx
push rdx
cld
pop rdi
imul ecx, dword cs:[rdi - 0x4e9bcf48], 0x3869685f
or dword [rsi + 2], esp
loope 0x401caa
push -0x79
cmp dword [rip + 0x67a58d64], edi
sal byte [rsi + 0x3a], 0xce
xor dword cs:[rax], edi
mov dh, 0xf6
idiv esi
insb byte [rdi], dx
insd dword [rdi], dx
jne 0x401d7d
je 0x401d76
cmp dh, byte [rdx]
xor ebp, dword [rbp - 0x66]
mov esi, 0xb59b5a6e
rcr byte [rax + 0xc1f778f], 1
mov al, 0xe7
out dx, al
in eax, dx
fisttp word [rsi]
insd dword [rdi], dx
insd dword [rdi], dx
xor esi, dword [rdx]
add al, 0x36
xor dh, byte [rax - 0xc8c6cd]
je 0x401d3a
mov ebx, 0x35320431
xor al, 0x38
xor esi, dword [rsi]
xor dword [rip + 0x32343111], esi
cmp dword [rcx + rdi], esi
cld
jg 0x401db1
imul edx, dword [rax + 0x36223711], 0x33
cmp dword ss:[rdx], esi
cmp byte [rsi], dh
xor al, 0x30
in eax, dx
mov ch, 0xfe
xor eax, 0x37323230
xor esi, dword [rax]
push rcx
push rdx
xchg byte [rbx - 0x48], bl
insd dword [rdi], dx
movsxd rax, dword [rcx + rsi]
pop rcx
xor esp, dword [rdx + 0x35]
xor edi, edx
movsxd rbp, dword [rcx - 0x78b5ef21]
xchg dword [rdx + 0x12], esp
movsxd rax, edx
or byte [rcx], bl
imul esi, dword [rdi - 0x6a], 0x7a
sbb dword [rcx], ecx
in al, dx
mov ah, 0x19
mov ebx, 0x4200870a
cwde
xchg dword gs:[r11], r13d
jrcxz 0x401dfd
ret 0x4b50
movsxd rbp, dword [rbp - 0x64]
rol dword gs:[rdx - 0x76b12b5f], 0x57
and eax, 0xdae4db43
movsd dword [rdi], dword ptr [rsi]
scasb al, byte [rdi]
mov esp, 0x3076d174
sub esp, dword [rdi]
test dword [rbx + 0x69], ebx
stosd dword [rdi], eax
cld
xor dword [r10], ebp
and byte [rbp + 0x6e], dl
push rdi
mov bh, 0x2b
sub al, 0x5d
retf
push rdx
jne 0x401e3c
stosb byte [rdi], al
push rsp
mov al, byte [rax + 0x30]
add al, 0xa4
pop rbx
jbe 0x401d92
fld xword [rsi + 0x2b]
jae 0x401e5e
insd dword [rdi], dx
je 0x401e5d
push 0x66db9609
sbb bh, byte [rbx + 0x59]
jo 0x401dfc
outsb dx, byte [rsi]
outsd dx, dword [rsi]
ret 0x6c1f
jmp 0x401e4e
sub eax, 0x670d6715
outsb dx, byte [rsi]
jne 0x401e33
jne 0x401e21
pop rdx
lodsb al, byte [rsi]
int1
sub eax, 0xc60d7b69
cmp byte [rcx], cl
cmp ebp, dword [rbx + 0x33]
mul dword [rcx + rdi*2 + 0x6e]
sbb dword [r14 - 0x62], r14d
loope 0x401e49
int3
add byte [rbx + 0xc], 0x5f
sbb ecx, dword [rbp + 0x75ab5ec1]
sub al, 0x28
or dword [rax + 0x16], esi
in al, 0xb6
out 0x78, eax
jb 0x401e8e
or ch, byte [rdi + rbp*2]
or byte [rsi], bl
jmp 0x401e4e
cmp byte [rip - 0xd90dba6], al
push 0x41ecb74
fild qword [rax + 0x64]
jb 0x401e60
pop rbp
movsxd rdi, dword [rdx + 0x582b42d2]
jo 0x401de6
mov ebp, 0x96cd876c
in eax, 0x11
call 0x5baa29ad
push -0x5e59f94f
mov eax, dword ss:[rax]
push -0x264ce330
jnp 0x401ed7
add eax, 0x43b00204
jae 0x401e04
push rdx
sbb eax, 0xf4658200
sbb ebp, dword [rbx]
inc dword [rsi + 0x37cdece4]
sbb al, 1
sbb dword [rax + 0x7234866], edx
push rsp
sbb dword [rdx + 0x20540641], edx
add al, 6
sbb dword [rdx + 0x74743121], edx
outsd dx, dword [rsi]
xchg byte [rdx - 0x9bbdbbf], dl
ljmp [rdi + 0xc]
xor cl, al
and dword [rax - 0x36f3d768], ebx
and byte [rbx + 0x64e0805], al
cmp dword [rdx + rax + 0x63], ebp
rol al, 0xb2
leave
fld dword [rcx - 0x20]
add ebx, edi
mov al, 0xa4
sbb dword [rax + rbx + 0x56], esp
add edx, dword [rdx - 0xa643d9]
add al, byte [edx + 0x2c]
jmp 0xffffffffffff7d16
nop
pop rbp
outsd dx, dword [rsi]
mov edi, 0x326e0702
and ch, bl
imul edi, dword [rdi], -2
xor byte [rdi], al
mov dl, 0xc9
and byte [rdi - 0x59], ah
mov al, 6
dec ecx
cwde
jp 0x401f5b
loopne 0x401ee4
test byte [rbp + 0x3fe707b9], al
dec eax
and byte [rbx + 0x423f845d], al
clc
nop
xor bh, al
push 0x64141901
adc byte [rsi], al
mov ss, word [rbx]
xchg eax, esp
pushfq
iretd
lcall [rdx]
loopne 0x401f59
mov dword ss:[rdi], edi
add byte [rdi], 0x64
jbe 0x401ebe
jo 0x401f4f
xchg eax, esp
pop rbx
or al, 0x72
or cl, byte [rdx]
getsec
sbb dword [rdx - 0x6fc062dd], esi
ret
enter 0x7f33, 0x62
or al, 0x3f
mov ecx, 0xa3921009
lahf
nop
xor al, 0x94
pushfq
dec dword [rcx]
test eax, 0xc3b392bf
mov byte [rdi - 0x235440e9], cl
enter -0x4e7a, 0x3f
lodsb al, byte [rsi]
and dword [rcx], ebx
jg 0x401f03
mov edi, 0x119b921b
fild word [rdi]
iretd
jg 0x401fdb
test ah, ah
and cl, cl
leave
pop rcx
outsb dx, byte [rsi]
jg 0x401fcd
mov bl, 0x60
sal byte [rsi + rcx + 0xe], cl
add eax, dword [rdi + 0x6e]
sub byte [rcx], bh
jnp 0x401faa
call qword [rax]
out 0x3f, eax
add al, 0x37
sbb dword [rax - 0xf807f1], edx
mov byte [rbp - 0x19], ah
add dh, bl
movsb byte [rdi], byte ptr [rsi]
or esi, dword [rax + 0x3f1e3f49]
clc
wait
mov bl, 0xdc
insb byte [rdi], dx
mov dh, 0x1f
jg 0x401f4a
fcom dword [rdx - 0x67ef8010]
nop
insd dword [rdi], dx
and dword [rdi + 0x72421f1f], edi
nop
mov ecx, dword [rax]
add dword [rcx], eax
add dword [rdi + 0x73903f20], ebp
xchg eax, ebx
and dword [rcx], ebx
or dl, byte [rax + 0x6e90ff07]
sub byte [rcx], bh
adc byte [rdi], bh
or al, cl
sbb eax, eax
cmpsd dword [rsi], dword ptr [rdi]
rcl byte [rbx], 1
fcom dword ss:[rax + 0x7f15205c]
xor byte [rdi], dl
and dword [rbx + rax*8 + 0x3f343f42], ecx
pushfq
mov dl, 0xd9
adc dword [rbx], edi
ret
sub al, 0x92
jg 0x40203a
add dword [rbx - 0x350a61b2], edi
add al, ah
and bh, bh
xor byte [rcx], cl
and dword [rax + rax + 0x69], ebp
xor eax, 0x8b007f09
in al, 0xc9
adc byte [rdx], ch
mov bl, 5
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip + 0x61080216], ecx
lodsd eax, dword [rsi]
hlt
movabs dword [0x18417b25745f], eax
or byte [r8], r8b
add al, ch
cmp byte [rax], al
add byte [rcx], cl
add byte [rsp + rsi*8], dh
add byte [rax], al
