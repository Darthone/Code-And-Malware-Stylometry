call 0x400f58
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x400d70
add ebx, ebx
je 0x400d26
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x400d5e
cmp rbp, -4
ja 0x400d5e
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x400d46
add ecx, 4
mov dl, byte [rax]
je 0x400d6e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x400d5e
ret
cld
pop r11
cmp r8b, 2
je 0x400d86
jmp 0x400e03
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x400d96
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x400d7e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x400dae
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x400d9b
sub eax, 3
jb 0x400dcc
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x400e03
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x400df3
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x400df1
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x400de0
cmp rbp, -0xd00
adc ecx, eax
call 0x400d32
jmp 0x400d86
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x400edc
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x400e7a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x400ec6
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x400e99
push 0x3a707474
jne 0x400ef2
js 0x400eb2
jae 0x400eec
outsb dx, byte cs:[rsi]
je 0x400eab
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x400f19
jb 0x400f0b
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x400f36
jb 0x400f49
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x2118f8
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x2118f8
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x400e14
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x400f3f
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x400eed
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f0fe7
jb 0x400fff
movsxd rbp, dword [rdi]
jae 0x400ff9
insb byte [rdi], dx
js 0x400fff
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x400fdf
cmp rsi, rcx
jae 0x400fe7
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x400fc6
cmp al, 0x8f
ja 0x400fc6
cmp byte [rsi - 2], 0xf
je 0x400fcc
sub al, 0xe8
jg 0x400fc9
push rdi
cmp al, 1
ja 0x400fb4
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x400fb7
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x400fe4
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x40103b
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c14b9
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40107f
mov al, 0xa
jmp 0x40107f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x40105b
inc ebx
mov al, 0
jmp 0x401083
mov al, 2
jmp 0x401083
mov al, 3
jmp 0x401083
mov al, 0x3c
jmp 0x401083
push rcx
rcr ah, 1
fstp st(7)
jle 0x4010c4
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x4010d6
jg 0x4010c8
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a684b
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x401122
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb629f
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x40112a
cmp esi, 0x21585055
jne 0x40112e
jge 0x401120
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x401123
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x401127
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x4011d3
pop rcx
or al, 0x3b
jb 0x4011d9
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x40114b
jmp 0x40114d
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x366108e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf532d6
in eax, dx
jg 0x401185
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x4011cb
mov bh, 0x2a
add edi, 0x10
jmp 0x4011c8
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x401205
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401241
jne 0x401258
fstpnce st(6), st(0)
jle 0x401221
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x401257
jrcxz 0x40128b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b1ef
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x40130a
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x4012ca
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x5829589f
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x40133d
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x4012d7
and ecx, 7
or al, 0xeb
jae 0x401342
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x401377
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x4013b5
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x40136e
push rax
call 0xffffffff868d105b
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401378
std
cmp edi, esi
xchg eax, edi
jle 0x4013cd
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95959
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x4013cb
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x4013b9
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x4013e2
js 0x401422
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x4014b4
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad26ef
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x4014d5
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x4014da
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc20f8c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401468
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
movabs al, byte [0x20000000e000007]
add byte [rax], al
add byte [rax - 0x58], al
movabs al, byte [0x92]
and byte [rcx], al
jmp qword [rax]
adc al, 0
add byte [rip + 0x2000006], dh
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x40158e
je 0x401597
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401560
mov dh, 0x7d
jbe 0x40155f
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401598
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x4880006], bl
add byte [rsi + rax], dl
nop
nop
invd
add byte [rax + 9], al
add al, ah
enter -0x6fd9, 0x27
or al, byte [rax]
clc
or eax, dword [rax]
or spl, bpl
adc ecx, eax
or al, 0
jo 0x401597
add byte [rax + 9], ah
adc dword ds:[rbp + 0xf170e03], 0x9e141400
adc byte ds:[rax], al
and byte [rcx], dl
add byte [rax - 0x61], dl
sahf
adc al, byte [rax]
mov byte [rbx], dl
add ah, dl
adc eax, 0x807f200
adc al, 0
sbb eax, 0xc09f2060
retf 0x1715
add byte [rax], al
mov dl, 0x4d
and byte [rdi], bl
add byte [rax], cl
sbb byte [rdi + 0x1f], al
retf
add dword [rcx], ebx
and byte [rdi], dl
sbb al, byte [rax]
mov byte [rbp + 0x20], cl
and byte [r11], r11b
add byte [rax - 0x221b71e4], bl
xchg eax, esp
adc eax, dword [rcx]
add al, 0
int1
dec dword [rcx*2 + 0x1bc595c3]
mov edi, 0xd0029719
nop
or dword [rax + rbx*8 + 0x12], 0x40
sbb edx, dword [rax]
adc ebp, dword [rax + rcx*2 + 6]
mov ecx, 0x5f44502e
mov byte [rsi + rsi*2], cl
pop rcx
cmpsd dword [rsi], dword ptr [rdi]
add dword [rdi], edx
push rbx
and dword [rcx], ebx
in al, dx
jp 0x40165b
jo 0x401598
pop rbp
or dword [rcx - 0x285a687a], edx
fld dword [rsi - 0x72]
shr bh, 0xab
adc dl, bh
adc eax, 0xb8421b0
mov ecx, 0x76470007
xchg ch, al
add eax, 0xb247d86f
mov cl, 0x2b
and edi, eax
out dx, al
add eax, 0xaf78ef14
insb byte [rdi], dx
xchg eax, esi
pop rax
xlatb
adc al, byte [rcx]
add dword [r15 + r14*8], r9d
retf 0x233f
add bl, byte [rdx + 0xf]
scasb al, byte [rdi]
lodsb al, byte [rsi]
mov ecx, 0xd52f1b
jbe 0x401652
scasd eax, dword [rdi]
adc al, 2
add ah, byte [rax + 0x60cd2012]
sub al, byte [rdi + 0x3f]
and byte [rax], dl
test byte ss:[rip + 0x7762174e], cl
xchg eax, edx
and al, byte [rbx - 0x28]
jbe 0x401695
cmp edi, edx
and dword [rax + rcx - 0x45], ebp
nop
stosb byte [rdi], al
shr byte [rdx - 0x7a], 0xb0
leave
in eax, 0x11
jb 0x40169b
sbb dword [rsp + rax + 0x47], ebp
hlt
add al, byte [rbx]
ret
add eax, 0x2e106721
nop
and dword [rcx + 0x76], ebx
adc dword [rdx], eax
cwde
cmp ah, ah
adc byte [rsi + 0x67479064], al
adc edx, dword [rbp + 0x65ec1914]
pop rdi
push rdi
mov edi, 0xec0bd9c9
movsxd rax, dword [rdx]
cmpsd dword [rsi], dword ptr [rdi]
cli
add byte [rdi], ch
movabs al, byte [0x95179b7f0c843610]
popfq
fadd st(1)
pop rdi
fild word [rdx]
xlatb
in al, 0x84
cmp al, 0xd8
out 0x47, al
and byte [rcx], cl
add eax, dword [rdx - 0x7a]
mov al, 0xb
sbb dl, byte [rdi]
xor ch, ah
and eax, 0xff451910
or dword [rdi - 8], esi
add dword [rsi], eax
out 0x51, eax
pop rdi
movsxd rsi, dword [rdx + 0x74]
jae 0x40177b
sti
call qword [rdi + 0x2e6666a4]
movsxd rax, dword [rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
or dword [rax], eax
jb 0x40177a
mov ebp, 0x69b5bffb
sbb al, byte [rsi]
pop rdi
je 0x40178d
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401749
outsd dx, dword fs:[rsi]
pop rdi
sti
in eax, dx
mov edi, 0x61620bbd
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x401799
jne 0x4017b5
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x4017ae
sub ebx, ebx
pop rdi
jg 0x4017ad
xor eax, 0x5f243538
imul bp, word [rsi + 0x69], 0x7208
mov bh, 0xdb
mov bh, 0xf8
jb 0x4017bd
jns 0x4017bd
adc eax, 0x66007972
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
mov al, 0x6e
rcr ah, 0x6d
jns 0x4017a3
or eax, 0x2a74295f
fdivr qword [rdi + 0x77]
wait
pushfq
jo 0x4017ee
and al, 0x46
push rdx
pop r15
lahf
retf
xchg ebp, ecx
lodsb al, byte [rsi]
or eax, dword [rdi + 0x4e]
push rbp
and byte [rsi - 5], dil
push rsi
push rdx
adc al, byte [rdi + 0x4c]
pop rdi
push rbx
iretd
push rsp
insd dword [rdi], dx
adc esi, esi
sub byte [rbx + 0x64], bl
adc ah, ch
mov ebx, 0x76dbdbd
je 0x4017d0
pop rcx
add byte [r15 - 0x72a8c93], cl
xlatb
jbe 0x40180e
pop r15
xor ch, byte [rsi]
add ebx, ebx
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x5d8bb0ac
jae 0x401858
ror byte [rdi], 1
insd dword [edi], dx
sbb dword [rcx], edi
loope 0x4017f2
loope 0x4017cc
mov byte [rdx + 0x76], cl
pop rdi
push rdx
insb byte [rdi], dx
jae 0x40186b
xor ebx, ebx
cld
sar esi, 0x5a
insb byte [rdi], dx
push rax
jbe 0x401849
pop rax
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x70
jb 0x40184a
jg 0x4017c4
in al, dx
jbe 0x401885
push 0x6319606b
js 0x40187b
pop rdi
jb 0x40180a
int 0xb5
outsd dx, dword [rsi]
ja 0x40188a
jb 0x401893
ja 0x401840
xor byte [rcx + 0x1b315f49], bh
enter -0x4c26, 0x61
jp 0x40189c
insd dword [rdi], dx
cdq
mov dh, 0x25
jl 0x401884
push rsp
pop r15
mov ah, 0xc
mov r10b, 0x54
in eax, dx
jne 0x4017cd
cdq
sbb ecx, dword [rdi + 0x37]
xor bl, byte fs:[rdi + 0x75]
xchg eax, ecx
rol byte [rdx], 0xd8
outsd dx, dword [rsi]
hlt
jae 0x4018bc
outsb dx, byte [rsi]
cmp ax, 0xee3b
adc dl, bl
mov dh, 0x54
jb 0x401881
pop rdi
sbb ebp, dword [rdi + 0x5b]
cmp byte [rcx], cl
je 0x4018d2
jae 0x401857
push 0x6b25644a
frstor dword [rcx + 9]
push rax
punpckldq mm7, mm4
xor al, 0xb6
ret 0x25db
movsxd rbp, dword [rbx - 0x15]
xor al, 0xb7
insb byte [rdi], dx
imul eax, dword [rsi - 0x7611b49f], 7
sar dh, 1
ret 0x205a
pop rdx
push rbx
je 0x4018cc
and eax, ebx
sbb ch, byte [rbp - 0x75]
or cl, byte [rdi + 0x61]
and edx, dword [rax - 0x69]
movsxd rax, dword [rax + 0x4a4a5f75]
mov edx, 0x8db5436e
xchg dword [rdi + 0x65], esi
mov ebp, 0x708278a6
fcmove st(0), st(0)
mov ah, 0xb6
mov cl, 0x6e
lahf
jmp 0x40193d
xor byte [rbx - 0x50], ch
mov ch, 0x21
jnp 0x40193c
ja 0x40193d
pop rax
push rbp
adc dl, byte [rbx + 0x64]
imul esp, esp, 0x1a
int 0xcf
or bl, byte [rbx]
loope 0x4018f6
shr byte [rsi], 1
stc
movabs dword [0xc92a317970631630], eax
outsb dx, byte [rsi]
mov ebx, 0x73ca8deb
jns 0x401960
imul esp, dword [rdx + 7], 0x74
jb 0x401967
wait
fsubr dword [rax + 9]
jmp 0x40197b
jo 0x401909
outsb dx, byte [rsi]
outsd dx, dword [rsi]
jge 0x4018b6
lodsd eax, dword [rsi]
pop rbx
jae 0x401938
adc eax, 0x6e670d67
jne 0x401940
test dword [rdi], edx
adc eax, 0x99692d64
or eax, 0x15adee66
push rdx
cmp byte [rcx], cl
jns 0x401995
ret 0x775a
sbb dword [r14 - 0x40], r14d
imul eax, ecx, 0xa35ec0c
outsb dx, byte [rsi]
pop rdi
sbb edi, dword [rax + 0x7b09286b]
xchg byte [rdi + 0x72748c14], dh
xchg byte [rdx], cl
sub al, 0xdd
ret
insd dword [rdi], dx
outsb dx, byte [rsi]
outsd dx, dword [rsi]
or byte [rcx + 0x78], ch
add eax, 0xd96f24b3
xor esp, 8
adc al, 0x2e
push 0x72646876
or eax, 0x6e856f1a
pop rbp
movsxd rcx, ecx
movsxd rsp, dword cs:[rbp + 0x70]
pop rbx
xchg eax, edx
jmp 0x40192f
insb byte [rdi], dx
adc dword [rbx + rax*2], esp
or edx, esi
imul ebx, dword [rip + 0x36a13d6a], 0x69
int 0x31
wait
mov ebp, 0x15e7b68
add al, 0x46
pop r13
sbb ebp, dword [rbp - 0x3c]
add byte [rax], al
push rsi
add dword [rcx + 0x6f012787], ecx
xor ah, byte [rdi]
outsd dx, dword [rsi]
sbb al, 1
enter 0x3480, 0x43
and eax, dword [rdi]
push rsp
leave
nop
or al, 0x32
push rsp
and byte [rdx + rsi], al
enter 0xc90, 0x31
je 0x401a2c
jns 0x4019ed
xchg eax, esp
or al, 0x24
idiv dil
ljmp [rdi + 0x1b]
xchg eax, edx
cwde
cwde
add eax, 0x4866907f
or byte [rsi + 0xb], cl
fld dword [rcx + 6]
sbb eax, eax
ror al, 1
sti
sbb dword [rdx + rsi*4 - 0x37], esp
sbb byte [rsi - 0x44], dl
pop rcx
add eax, 0x7df03a4
jmp 0x3f67ac1d
mov eax, dword [rcx]
pop rsi
mov edi, 0x26f67ff
sub al, 7
mov edi, 0x36437426
and al, 2
imul edi, dword [rdi], -2
pushfq
mov ecx, 0x74080c9
cmpsd dword [rsi], dword ptr [rdi]
movabs al, byte [0x537aff068326ca61]
out 0x26, al
xchg dword [rip - 0x18f81fc1], eax
jbe 0x401a84
adc edx, dword [rsi]
inc dword [rdi + rdi + 0xc8320c8]
clc
clc
sbb byte [rax + 0x2e], al
cmp dword [rax + 1], edx
sbb dword [rsi + 0x4190449b], ecx
adc eax, dword [rsi]
fst dword [rax + 0x72]
ret 0x1aff
mov dword [rdi], edi
leave
and byte [rbx - 0xf8f8ff4], al
or cl, bl
nop
or eax, 0x3f940710
sub eax, 0xf704dc30
sbb dword [rcx + rbx*8], -0x6f
setge byte [rdi + 9]
or dword [rdi - 0x5dd86fd3], eax
or bh, byte [rdi]
movabs dword [0x85ff076f2428cdec], eax
movsb byte [rdi], byte ptr [rsi]
movabs eax, dword [0x19bd9c94bfa909e4]
mov edi, 0x4360c830
mov cl, 0x3f
push rax
jg 0x401ada
or al, 0xc9
push rax
xor dh, byte [rdi + rdi*4]
mov byte [rbx - 0x777cdf1c], cl
add qword [rcx - 0x366defe7], r15
out 7, eax
xchg eax, esp
pushfq
jg 0x401b21
fisttp dword [rdi]
add eax, dword [rdi + rsi + 0x79f20ab]
mov edi, 0x2ee9019
out 0x3f, eax
psubb mm6, mm6
xchg byte [rax + 6], al
clc
mov edi, 0x49b003f
pop rax
xchg eax, edi
int 0x66
movabs r10, 0xcb392d843f1f9bf8
jg 0x401ac6
jg 0x401ab1
xor cl, al
adc byte [rax - 0x46f8e041], bl
or byte [rcx], al
add dword [rbx + 0x57242a43], esi
and byte [rdi], bh
xchg byte fs:[rdx + 0x1b880a88], dl
fadd qword [rdi]
call qword [rax]
adc byte [rdi], bh
ror byte [rbp + 6], 0xa4
or byte [rax + 0x4a1bc607], bl
jg 0x401b13
adc eax, 0x9085e77f
leave
push rsi
xor al, 0x70
retf -0x789a
adc dword [rbx], edi
sub ecx, ebx
or byte [rip - 0x44e140d9], ah
jb 0x401b8a
jg 0x401afb
add byte [rdi], 0x1f
adc byte [rsi], dh
int 0xa3
dec dword [rcx]
jg 0x401ab7
in al, 0x50
sub byte [rdx + 3], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dil, dil
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip + 0xe080216], ecx
mov edi, 0x449f6d20
and byte [rax], 0x14
add byte [rax], al
xor eax, 0xb8000006
xor al, 0
add byte [rcx], cl
add byte [rbx - 0xc], bh
add byte [rax], al
add bh, bh
