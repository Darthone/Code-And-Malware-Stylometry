call 0x401c40
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401a58
add ebx, ebx
je 0x401a0e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x401a46
cmp rbp, -4
ja 0x401a46
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x401a2e
add ecx, 4
mov dl, byte [rax]
je 0x401a56
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x401a46
ret
cld
pop r11
cmp r8b, 2
je 0x401a6e
jmp 0x401aeb
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x401a7e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401a66
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401a96
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401a83
sub eax, 3
jb 0x401ab4
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x401aeb
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x401adb
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401ad9
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401ac8
cmp rbp, -0xd00
adc ecx, eax
call 0x401a1a
jmp 0x401a6e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401bc4
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401b62
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x401bae
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401b81
push 0x3a707474
jne 0x401bda
js 0x401b9a
jae 0x401bd4
outsb dx, byte cs:[rsi]
je 0x401b93
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x401c01
jb 0x401bf3
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x401c1e
jb 0x401c31
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21597c
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21597c
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x401afc
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x401c27
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401bd5
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add al, byte [rax]
jmp rbp
call 0x706f1ccf
jb 0x401ce7
movsxd rbp, dword [rdi]
jae 0x401ce1
insb byte [rdi], dx
js 0x401ce7
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401cc7
cmp rsi, rcx
jae 0x401ccf
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x401cae
cmp al, 0x8f
ja 0x401cae
cmp byte [rsi - 2], 0xf
je 0x401cb4
sub al, 0xe8
jg 0x401cb1
push rdi
cmp al, 1
ja 0x401c9c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x401c9f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x401ccc
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401d23
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c21a1
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401d67
mov al, 0xa
jmp 0x401d67
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401d43
inc ebx
mov al, 0
jmp 0x401d6b
mov al, 2
jmp 0x401d6b
mov al, 3
jmp 0x401d6b
mov al, 0x3c
jmp 0x401d6b
push rcx
rcr ah, 1
fstp st(7)
jle 0x401dac
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x401dbe
jg 0x401db0
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a7533
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x401e0a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6f87
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x401e12
cmp esi, 0x21585055
jne 0x401e16
jge 0x401e08
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x401e0b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x401e0f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x401ebb
pop rcx
or al, 0x3b
jb 0x401ec1
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401e33
jmp 0x401e35
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661d76
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf53fbe
in eax, dx
jg 0x401e6d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401eb3
mov bh, 0x2a
add edi, 0x10
jmp 0x401eb0
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x401eed
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401f29
jne 0x401f40
fstpnce st(6), st(0)
jle 0x401f09
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x401f3f
jrcxz 0x401f73
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1bed7
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401ff2
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401fb2
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58296587
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x402025
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x401fbf
and ecx, 7
or al, 0xeb
jae 0x40202a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x40205f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40209d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x402056
push rax
call 0xffffffff868d1d43
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x402060
std
cmp edi, esi
xchg eax, edi
jle 0x4020b5
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96641
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x4020b3
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x4020a1
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x4020ca
js 0x40210a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40219c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad33d7
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x4021bd
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x4021c2
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21c74
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x402150
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
sbb al, 7
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax - 0x60], al
adc byte [rdx], 0
add byte [rax], al
and byte [rcx], al
push qword [rax]
push rdi
add byte [rax], al
fist word [rax + rax]
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402276
je 0x40227f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402248
mov dh, 0x7d
jbe 0x402247
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x402280
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x4880006], bl
add al, bh
add eax, 0xfc807c8
or byte [rax], al
and byte [rsi], al
or dword [rax], eax
movabs al, byte [0xbb8000a13c813e4]
add byte [rax], cl
or byte [rsi + 0xc03e409], dh
add byte [rax], dh
or eax, 0x58130977
cmp eax, eax
wbinvd
in al, 3
in al, 0
je 0x4022bb
adc byte [rax], al
add byte [rax + 0x11e409f0], 0
mov eax, 0x3d700012
xchg rax, r8
jle 0x4022ab
add byte [rbp + rdx*2 + 0x5df00014], al
stc
add al, 0x56
adc eax, 0x1617
pop rsi
jl 0x4022ae
stc
add byte [rdi], dl
add byte [rax], cl
sbb byte [rax], al
clc
pop rdi
jle 0x402239
sbb dword [rax], eax
add byte [rax + 0x1a], ah
add byte [rax + 0x409e409b], cl
sbb eax, dword [rax]
cwde
sbb al, 0x13
sbb eax, 0x129bbc9
add al, 0
int1
dec dword [rdx + rbx*4]
xchg byte [rbx], ch
mov ebx, dword [rbx]
mov edi, 0x60029719
and dword [rcx], ebx
insb byte [rdi], dx
sbb rdx, qword [rdi]
movabs al, byte [0x5f44e02e906486c5]
test al, cl
xchg eax, edi
cmpsd dword [rsi], dword ptr [rdi]
add dword [rdi], edx
push rbx
pop r12
enter -0x513f, 0x7a
add byte [r10], r9b
xchg byte [rcx], ah
in al, dx
mov byte [rdi - 0x7cf6285b], dl
je 0x4022a6
stosd dword [rdi], eax
mov byte [rcx], al
test esp, ebp
cmp byte [rbx - 0x3a], al
adc byte [rbp + 0x43], 0xd8
adc dl, al
add byte [rdi - 0x20], al
adc byte [rbx - 0x78fa9dce], bh
push r11
ret 0x95d8
fisttp word [rcx]
cwde
adc al, 7
sbb cl, byte [rdi + rsi*2 - 0x10e89936]
sub eax, 0x9c574701
insb byte [rdi], dx
call 0x225759f1
pop rdx
and eax, 0xe5900626
popfq
adc byte [rax], ah
push rdi
xor bl, al
leave
shr dword [rdi], 0x46
adc al, 0x62
jne 0x4022eb
ror dword [rsi + 0xe], 0x62
sbb ebp, dword [rdi]
xchg eax, ebx
or dword [rip + 0x478f17d9], 0xffffff92
xor dh, byte [rax + 0x1d906421]
fist dword [rdi]
or dword [rdx + rsi*2], 0x72
test al, 0x14
hlt
out 0x2c, al
adc dword [rbx + 0x146b501b], 0x3c9c1202
cmp eax, dword [rax - 0xca0fdd8]
and al, 0x2e
enter -0x6c37, -0x7d
pop rbx
add bl, byte [rax - 0x637c9ce1]
cmp al, 0x39
sahf
add dh, byte [rsi]
xor dword [rsp + rbx*8 + 0xc], ecx
jb 0x402359
cmp ebp, dword [rdi]
jo 0x4023e2
add ch, ah
jb 0x40233f
mov bl, 0x83
ret 0x1728
and al, 3
leave
cmp byte [r9 + 0x50], dil
sub cl, byte [rbx + 0x7f]
add ecx, ecx
shr dword [rsi], -0x1c
stosb byte [rdi], al
and eax, dword [rbx - 0x6fe61fe9]
or al, 0x32
enter -0x48f5, -0x14
and byte [rdx + rax - 0x11], bl
movabs eax, dword [0xf2720eaf2a0f8f10]
in al, 0xeb
add ebp, ebx
sub ebp, dword [rdi + 0x20]
add al, 0xe4
and byte [rdi], ah
sbb dword fs:[rbx + 0x4e], eax
add al, 0x4f
jb 0x4023e6
cmpsb byte [rsi], byte ptr [rdi]
sbb eax, 0x58048948
xor esi, edx
in al, 0x20
sub eax, 0x152804ff
pop rsp
enter 0x17b3, 0x1c
add eax, 0x4a1b6c17
sbb al, 0xe4
test byte [rbx + 0xe372a9b], al
nop
add eax, 0x9c90d832
adc byte [rax - 0x6c3692e9], bh
or dword [rdx*2 + 0x35950603], 0x4e
xor cl, al
sbb dh, byte [rsp + rax*2 + 0x1d]
or edi, dword [rcx + 0x72]
adc bh, dh
cmpsb byte [rsi], byte ptr [rdi]
mov bl, 0x25
xor dword [rdx + rsi*2 - 0x50], 0xffffffeb
nop
xor dword [rbx + 0x17], edx
or dword [rcx], edi
enter -0x6c37, 7
jb 0x40247b
adc al, 0x45
test byte ss:[rbp - 0x27], bl
add byte [rdi + rdx + 0x68], dl
mov ebx, 0x26590e10
xchg eax, edi
xchg eax, esi
or esp, dword [rdi]
mov esp, 0xd42178c0
mov bh, 0xe8
jb 0x4023ff
xchg eax, ebx
pmulhuw mm6, qword [ecx]
push rsp
add al, 8
jb 0x402429
or edi, dword [rcx - 0x7e]
sbb byte [rax], ch
mov word [rbx + 0x6c49720c], es
push rsi
xor eax, 0x1c9e4227
in al, 0x31
xchg eax, edi
or byte [rcx + 0x1921c22a], ch
in al, dx
int3
pop rdi
or bh, al
jns 0x402471
or edi, dword [rcx - 0x53]
sub dword [rcx + rcx], ebx
xlatb
or dh, byte [rbx]
xchg eax, ebp
movsb byte [rdi], byte ptr [rsi]
or esp, esi
xchg eax, edi
jns 0x402477
or ebp, esp
pop rbx
or edi, ebp
jne 0x4024c1
or edi, dword [rcx - 0x3e]
or edx, dword [rdx + 0x281f3709]
enter -0x793f, -0x50
rol byte [rdi - 0x2b], 0x2f
mov byte [rsi + rbx*2], bl
enter 0x5e33, -0xa
or dword [rdi], edi
or al, 0x2e
xor al, 0xa
in al, 0x20
iretd
pop rdi
pop rsi
and dh, byte [rip + 0x72760a77]
mov al, 0xb
xchg eax, esi
jno 0x40250e
sub dword [rdi + 0xe4f2178], edi
ret
or cl, byte [rsi]
adc al, 0xd0
or cl, dh
jp 0x40251b
jg 0x402490
and bl, byte [rdi]
or edx, dword [rdi + 0x70205e03]
or ebx, dword fs:[rdi + 0x17840b85]
add al, 0xf
loopne 0x402528
sahf
or edi, dword [rdi + 0xb]
jns 0x4024ea
or ebx, ebp
or ebx, dword [rdi + 0x4a]
or edi, dword [rcx - 0x3e]
add eax, 0x19b61f0c
or al, 0x27
cmp dword [rcx + 0x12], edi
cmp byte es:[rbp + 0xc], ah
sbb edi, dword [rcx + 0x72]
nop
xchg eax, ebx
sub edi, dword [rbx + 0xc]
in eax, dx
adc edx, dword [rax + 0x12390727]
or dword [rax + rbp*4], 0x19
mov esp, 0xb6bc6790
or al, 0x57
mov dl, 0x1c
or al, 0x72
nop
xchg eax, ebx
adc eax, 0x790d186a
ret 0x790b
xor dword [rax + rbx*2], esp
or eax, 0x9326844f
cmp dword [rbx], esp
mov byte [rip + 0x790b14ec], cl
jb 0x402504
and byte [rcx + 0xe2fa80d], ah
jb 0x4025ee
mov al, 0xbe
mov byte [rdi + rax*2], ch
and al, 0xe
jp 0x4025a8
and al, 0x34
out dx, eax
mov esp, 0x50bc2790
test edx, 0x670e901c
in al, 0x49
jle 0x4025b5
scasb al, byte [rdi]
mov edi, 0xbc67904a
nop
sub dh, bl
cmovae esp, dword [rbx]
mov ebx, 0x11bd2790
xlatb
mov al, 0x21
push rbp
sbb al, 0x6c
shr byte [rax - 0x40fb20ef], 0x64
setle cl
sahf
and byte [rdi + rcx + 0x173464e7], cl
enter 0x4e41, 0x58
paddw mm2, qword [rbx]
pop rsi
enter 0xf93, 0xa
sbb byte [rcx], ah
adc byte [rdi - 0x37a1fb0e], ch
pop rsp
adc byte [r15 + 0xb8b1a72], r8b
test byte [rdi], dl
adc dword [rax], 0x796f9b37
mov byte [rcx], 0xa4
adc byte [rax + 0x2b5a8710], ch
or edi, dword [rcx - 0x3a]
or eax, edi
adc byte [rdi], cl
cmp byte [rdx], dh
xor eax, ecx
fnstenv [rcx]
adc dword [rdi], ebp
sbb byte [rdx - 0x49], al
sahf
or esp, esp
pop rdi
adc dword [rbp + 0x11], edi
sbb al, 0x7a
xor eax, 0xc711ab42
jmp 0x402635
in al, 0x20
mov dh, 0x18
pop rsi
adc byte [rdx], dl
enter 0x17b3, -0xe
scasb al, byte [rdi]
adc eax, 0x9a471234
sbb ch, al
or ebp, dword [rsi + rbx*2]
adc dh, byte [rdi + 0x3c9c1282]
jnp 0x4025c7
mov edx, 0x20d28f12
pop rcx
mov esp, 0x4786c3b0
sbb al, 0x8f
and dl, byte [rbx]
add cl, byte [rbx + 0x43575817]
adc edi, dword [rdi]
int1
sahf
hlt
ja 0x402677
cmpsd dword [rsi], dword ptr [rdi]
sub edi, dword [rbp + 0x42ec1c13]
sahf
outsd dx, dword [rsi]
out dx, eax
mov byte [rax], ah
in al, dx
test dword [rcx], esp
adc al, 0x47
xor dword [rbp + 0x27], edx
hlt
add cl, byte [rbx + 0x1489cf14]
xchg eax, edx
pop rbp
and byte [rbp + 0x14c72b90], bh
ja 0x402668
mov ebp, 0xea178390
and ah, bh
adc al, 0x47
movabs rsp, 0x21d84d1f15292790
cmp dword [rbx + 0x6a245f15], eax
adc eax, 0x763648ef
pushfq
adc dword [rdx], eax
lahf
cwde
and byte [rdi], ah
iretd
call 0x295f75d6
mov fs, word [rbp + 0x3e4f216]
cli
and dword [rdi], eax
in al, 9
fistp word [rdx + 0x47167523]
pop rcx
nop
mov esp, 0x16d02790
fist word [rdx + rbx]
loopne 0x402672
pushfq
mov ebp, 0x908f1707
adc al, 0x17
jp 0x40270e
iretq
cld
sbb eax, 0xd6ef1747
nop
je 0x402741
movsd dword [rdi], dword ptr [rsi]
xor ecx, dword [rdx]
leave
sbb dword [rbx + rsi*8 + 0x372abf17], edi
and al, 0x67
push rax
pop rax
cld
cmp byte [rdi], dl
sbb al, 0xe4
adc bpl, byte fs:[r15 + 0x48653700]
sbb byte [rsi + 0x109e42f0], bl
xor dword [rbp + 0x18], esp
mul dword [rsi]
and al, 0x67
retf
sbb byte [rdi], dl
mov esi, 0x38902f06
lcall [rax]
or al, 0x19
pop rdi
enter 0x790b, -0x1c
sbb qword ss:[r15 - 0x5c], rdi
repne lodsb al, byte [rsi]
sbb edi, eax
and dword [rip + 0x17bf19ac], esp
jb 0x4026fe
or edx, eax
push r12
sbb esi, esp
sahf
cmp al, 0xa9
sbb dword [rdi], esp
xchg byte [rsi], ch
adc eax, dword [rcx]
adc dword [rdx], ebx
add bh, byte [rcx]
and al, 0x27
test dword [rdi + 0x790bb01a], eax
mul byte [rdx + rbx - 0x23de9e71]
in al, 0x59
xchg dword [rsp + rcx - 7], esp
sbb dh, byte [rdi]
adc al, 0x19
mov esp, 0x192f6790
sbb eax, dword [rdi + 0x69]
xor ah, byte [rbp + 0x1b]
mov ebx, 0x8a7f2790
and dword [rbp + 0x17], edi
sub byte [rdi], bl
or dword [rax + rdi*2], eax
and dword [rbp + 0x7a93af1b], edx
add ecx, 0xb7171ba2
sbb esp, dword [rdi]
in al, 0xa4
pop rsi
enter 0x2cd0, -0xd
sbb ebx, dword [rdi + 0x813a3c]
xchg dword [rsp + rbx - 0x39], esp
jge 0x4027d2
sahf
jo 0x402801
xlatb
movsd dword [rdi], dword ptr [rsi]
sbb al, 0xdf
xor eax, 0x42ec1c85
pop rax
mov ebp, 0x1d3de2c0
imul ebx, dword [rip - 0x4c37a1a1], 0x17
xchg eax, ebx
sbb eax, 0xc7301a47
sbb eax, 0x93921c59
mov dl, 0x15
push rdi
add eax, 0x34e42f06
sbb byte [rsi], ch
cmp dword [rcx], edi
fcom dword [rbx + 0x17]
and byte [rip - 0x50ad6fcd], 0x84
push 0x1e9c8710
outsd dx, dword [rsi]
add ch, bl
add eax, 0xd0f71ec0
xor eax, 0x6e679e42
sub al, 0xe
scasd eax, dword [rdi]
push rbp
js 0x402845
iretd
jp 0x402841
movabs byte [0x5e241f6d2a186727], al
enter 0x77b3, -0x59
mov eax, 0x84f27f1f
xor edx, dword [rip + 0x17c6df20]
test byte [rdi], dl
cmp dword [rax], esp
shl byte [rbx], 1
jbe 0x402809
and dword [rcx], edi
and dword [rax], 0x2f
add dword [rax - 0x7e87b0df], ebx
pop rdi
and byte [rdi - 0x6de3d032], dl
mov bl, 0x7a
or al, 0x21
ror dword [rdx + 0x21], 1
add ecx, dword [rsi]
leave
pop rcx
scasd eax, dword [rdi]
cmpsd dword [rsi], dword ptr [rdi]
and dword [rdi + 0x27018e4], ebx
and dword [rdi], esp
push rsp
sbb byte [rax + rdx*4 - 0x2fb8d27d], bh
xor byte [rbp + 0x22], dl
mov esp, 0x367f9eb0
imul dword [rbx + 0x174a9722]
movabs rbp, 0x871935b7231c3490
in al, 0xa4
and eax, dword [rdi + 0x5a]
and edx, dword [rdi - 0x1c]
or dword [rdi], ebp
in al, 0x88
sbb eax, dword [rsi + 0x1dee3723]
xchg eax, ebx
or byte [rdi], ch
retf
and edi, dword [rdi - 0x11]
and esp, esp
pop rcx
sbb eax, 0x241a1092
pop rsi
enter 0x2ec1, 0x73
loopne 0x4028f8
int3
and al, 0x60
ror byte [rbx], 0x84
out dx, eax
cli
and al, 0x3f
jp 0x4028f0
iretd
and eax, 0x5b2df8d7
and eax, 0x302f6790
lea esp, [rip + 0x381b1cd7]
and al, 0x27
mov ebp, 0xa02f0115
shl byte [rip + 0x47213a9], cl
scasd eax, dword [rdi]
retf 0x11e
pop rbp
and ah, dh
add al, byte [rbp + 0x26]
jae 0x4028d1
or edi, ecx
pop rdi
and dl, al
in al, 0xd9
or edi, dword [rcx + 0x62]
and al, 1
clc
sbb dword [rbx], edi
adc dword [rax], 0x6f27412f
jbe 0x402943
pop rdi
shr dl, 0x85
cmp al, 0xe1
and eax, 0x841727b6
sbb byte [rsp + rdx*8 + 0x27f15f27], bh
mov al, 0x17
out 0x27, eax
sbb eax, 0x285d8f28
adc ch, byte [rdi]
in al, 9
cld
movabs al, byte [0x28d805e0b027c728]
sbb al, 0x29
enter 0x17b3, 0x58
cmp byte [r9], r13b
jp 0x402974
cmp al, 0x3b
test byte [rbp + 0x6b], bl
xchg eax, ecx
sub dword [rdi + 0x392127f5], esp
jmp 0x2f69dfef
mov esp, 0xc0604eb3
sub dh, byte [rdi + 0x2972a4f]
or ebx, dword [rsi - 0x38]
jl 0x4029ab
imul ebp, dword [rdx], 0x37
movabs eax, dword [0x2aba172a88711813]
pop rdi
or edi, dword [rcx]
in al, dx
add dh, cl
ja 0x4029b4
loope 0x402921
pushfq
shl dword [rax], 0x2b
pop qword [rdi + 0x2af2b79]
loope 0x402922
cmp al, 0xe4
sub al, 0x96
sub eax, dword [rdi]
in al, 0x48
int1
mov ah, 0x2b
sbb ch, bh
sub edx, eax
or edi, dword [rcx + 0x56]
mov edi, 0x2c1d29d6
enter 0x7ab3, -0x7f
sub ch, byte [rdi + rdx]
jo 0x4029df
xchg ah, ah
sub al, 0x5e
pop rbx
sub al, 0xf
loopne 0x402971
mov bl, 0x5e
enter 0x17c1, -1
fild qword [rdi + rbx*8]
sahf
sbb al, 0x64
nop
sub byte [rbx - 3], dl
sub al, 0xfd
xor eax, 0x42f018c8
push rbx
sub eax, 0xbb0fcb7
movsb byte [rdi], byte ptr [rsi]
pop rsi
xchg eax, ebp
sub eax, 0xe417b257
mov dword [rdi], edx
jb 0x4029af
sub edi, edx
sub eax, 0xe42f1a07
or dword [rdi - 0x6698d222], esp
add al, 0x2e
call 0xffffffff974a0e37
call qword [rbx]
or eax, 0x85d91217
xchg eax, edi
pop rdi
out dx, eax
jl 0x402a08
in al, 0xf2
adc eax, 0x35171752
in al, dx
add ah, cl
test dword [rbp + 0x2e], edi
scasd eax, dword [rdi]
nop
sahf
shl dword [rcx], -0x58
ja 0x402a5b
sbb eax, dword [rsi + rbx*2]
and ah, dh
fld xword [rsi]
mov edi, 0x7acf2ef8
adc eax, 0xd72f1d0b
cmp eax, 0x217a302f
movabs r15, 0x18136972f6c212c
nop
xsaves [rdi]
push rbx
int 0x90
or al, 0x60
jmp 0x402a71
iretd
stosb byte [rdi], al
jae 0x402a55
or al, bh
or dword [rdx + 0x5e], eax
and ch, dh
cmpsq qword [rsi], qword ptr [rdi]
lahf
and al, 0x30
xor dword [rdx + rax - 0x77], 0x173063cf
pop rbx
enter 0x7833, -0x80
xor byte [rdi - 0x57cfdb40], cl
std
jg 0x402afc
je 0x402aff
je 0x402b03
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
or ebx, edi
mov edi, 0x6538dfb5
jb 0x402b0b
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402ad6
in eax, dx
mov edi, 0x6f64bdbd
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x402b26
jne 0x402b42
pop rdi
jg 0x402aca
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x402b3f
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bx, bx, 0xffed
fld xword [rsi + 0x69]
or byte [rdx + 0x72], dh
jns 0x402b4a
outsb dx, byte gs:[rsi]
je 0x402b61
jns 0x402af1
or ch, byte [rbp + 0x65]
and byte [rbp + 0x58], dh
out dx, al
insd dword [rdi], dx
insd dword [rdi], dx
jns 0x402b31
or eax, 0x2a74295f
std
jg 0x402ac2
pushfq
jo 0x402b7c
and al, 0x5a
push rbx
je 0x402b5d
xor dword [rcx], edi
jo 0x402b7e
movsxd rsp, dword gs:[rbp + 0x77]
out dx, eax
mov esi, 0x2d99ad6d
ja 0x402b8f
lahf
jb 0x402b99
movsxd rsi, dword [rdi + rdi + 0x46]
push rdx
stc
mov al, 0x99
sti
pop r15
mov edx, 0x4e470bc7
push rbp
fistp word [rsi]
insb byte [rdi], dx
and byte [rax + 0x44], cl
push rdx
adc al, byte [rdi + 0x4c]
pop rdi
push rbx
insb byte [rdi], dx
ret 0x6fde
push rsp
sub byte [r14 + 0x64], r14b
adc byte [rsi], ch
ja 0x402b0e
sub eax, 0x44660767
pop rcx
outsb dx, byte [rsi]
xlatb
outsb dx, byte [rsi]
out dx, eax
mov cl, byte [rsi + 0x53]
jbe 0x402b02
loope 0x402bc2
or eax, 0xdbfef65c
add byte fs:[r11 + 0x32], r8b
push r10
push r11
xor bl, byte [rdi + 0x20]
sbb eax, 0x3749be6c
insb byte [rdi], dx
sbb al, 0x6d
sbb eax, 0xb7443030
fist dword es:[rcx]
jbe 0x402bab
cmp dword [r8 + 0x67], edi
outsb dx, byte [rsi]
xor al, 0x6c
mov bh, 0x75
fdivr qword [rax + 0x78]
xor dword [rdi], esi
or ch, byte [rsi + 0x3f]
insd dword [rdi], dx
imul r14d, dword [r8 - 0x78ca026c], 0x4b504b61
insb byte [rdi], dx
pop rax
jbe 0x402b77
mov dl, 0x33
mov dh, 0x58
xor dword [rbx - 0x24e7af8f], eax
pop rsi
je 0x402bff
push rsi
sbb bl, byte [rdi - 0x59]
jl 0x402c10
lodsb al, byte ss:[rsi]
rcr qword [r15], 0x70
jb 0x402bd6
je 0x402c45
insd dword [rdi], dx
mov al, 0xed
pop r15
xor ch, byte [rsi]
add dword [rip - 0x4875c9cd], esi
js 0x402c00
xlatb
movsxd rcx, dword [rax + 0x73948f14]
fisub dword [r8 - 0x73]
xor dword ss:[eax], esi
sbb ah, byte cs:[rbp - 0x76]
push rdx
xchg eax, esi
shr dh, 0xe2
push rax
insd dword [rdi], dx
nop
lea esi, [rsi - 0x47fa18c7]
jmp 0x402c68
jb 0x402ba2
in eax, dx
jo 0x402c62
insb byte [rdi], dx
insw word [edi], dx
test dword [rsi + rdx*2], ebp
xchg byte [rsp], dh
jnp 0x402c4e
out dx, al
mov dh, 0x39
push rbx
xor ah, byte [rbp + 0x6c]
push rsi
pop rdi
adc byte [rax + rsi*2], dl
jrcxz 0x402c2d
xchg dword [rdi - 0x2dcef287], eax
insb byte [rdi], dx
imul esp, dword [rdx + 0x2d], 0x7d757363
mov dl, 0x1b
xor r10, r8
ja 0x402cb6
iretd
xor dword [rbp + 0x74cc4214], 0x43849837
sbb byte [rbp + 0x2d6d0938], cl
adc al, byte [rsi - 0x4b2052b0]
or bh, byte [rbx]
sbb al, 0x84
pop rsi
xor ebp, dword [rip - 0x9ef7de8]
mov ds, word [rdx - 0x4d44e9bd]
and dword [rip + 0x7904af2], esi
xor byte [rsi - 0x17], bh
jbe 0x402cdd
jo 0x402ce0
push rsp
xor al, cl
xor dh, byte [rcx]
xchg rax, rdi
or al, 0xab
insb byte [rdi], dx
je 0x402cc5
test dword [rbp + 0x7b69dbb9], eax
imul edi, dword [rdx - 0x12], 0x9e60952d
xchg dword [rcx + 0x57], esp
in al, 0x31
cmp byte [rip - 0x75529edf], al
test al, 0x35
lodsb al, byte [rsi]
and ebx, dword [rsi + rsi*8 - 0xa]
cmp dh, byte [rdx]
jno 0x402d23
jne 0x402d34
sbb al, 0x64
movsb byte [rdi], byte ptr [rsi]
fnstenv [rax + 0x31624cee]
cmp al, 0x33
sbb edx, dword [rax + rbp]
mov ebx, 0x4580f739
push rax
add eax, 0x4353ded6
add ch, byte [rax]
sub dword [rbp - 0x63a0bd90], eax
sal dword [rbp - 0x27], 0x15
imul edi, ebx, 0x5366375e
out 0x6e, al
insd dword [rdi], dx
adc dword [rdi + 0x29], esi
rcl qword fs:[r11 + 0x4f], cl
insd dword [rdi], dx
and ch, byte [rbp + 0x75]
push rdx
in eax, 0x6d
outsd dx, dword [rsi]
sbb ebx, dword [rdi + 0x59]
push 0x6606b035
movsxd rbp, dword [rsi - 0x34]
sbb al, 0x35
mov ch, 0x48
sub byte [rsp + rsi + 0x74], bh
jns 0x402d8f
or al, 0xd8
mov esp, fs
mov byte [rsi + rbp], spl
sbb dword [rbp + 0x31079521], eax
xor eax, 0x974cd038
or eax, 0x199d491b
pop rdx
insb byte [rdi], dx
rol dword [rbx], 0x51
loop 0x402d26
cdqe
sbb eax, 0x645be53b
fdecstp
fimul dword [rdx + 0x2e]
add ah, bl
mov cl, 0xc3
or al, 0x6d
mov ch, 0x35
pop rdi
loopne 0x402d93
or esp, dword [rbp - 0x4b]
push rbx
pop rcx
sbb byte [rdi + 0x1b], cl
sbb eax, 0x7d5b1892
mov byte [rsi - 0x72d4a6e4], ch
xor ecx, dword [rcx + 0xe]
fstp dword [rax]
pushfq
sub rax, -0x1e1a9dcb
and byte [rbx + rsi*4 + 0x1d4b626e], ch
cmp byte [rcx], dl
movabs eax, dword [0x363bc076786b47b9]
rol dword [rbp + 0x6e60cc1f], 1
and al, 0x73
jbe 0x402d85
adc bh, byte [rbx + rax*2]
insb byte [rdi], dx
fstp st(6)
jae 0x402d68
add al, 0x3a
sbb edi, dword [rax]
cmp al, 0x6d
mov al, 0x64
sub al, 0xc0
out dx, eax
cmp eax, 0x391f020f
xor esp, dword [rsp + rbp*2 + 0x50]
jbe 0x402d7f
pop rax
pop rax
pop rdi
xchg eax, esi
or dword [rbx], 0xffffffec
xor ebp, dword [rsi]
xor al, 0xfc
xor esp, edi
adc byte [rax - 0x6793ae3f], r11b
int3
loope 0x402e21
mov rbx, qword [rip - 0x658b0b50]
sal dword [rbx - 0x413a97cd], 1
pop rdi
cdq
jbe 0x402d75
add ah, byte [rcx - 0x5c]
xor byte [rbp - 0x56], al
xchg eax, edi
push rsp
xor dword [rax - 0x72c3f30b], edx
outsd dx, dword [rsi]
sub ch, byte [rbx + 0x2c1595b2]
imul ebp, dword [rbx + 0x482316c7], -0x74
adc al, 0xa4
sbb byte [rax], al
loope 0x402e4d
jmp 0xffffffff99bb9274
outsd dx, dword [rsi]
fiadd dword [rbx]
xchg eax, edx
pop bp
push rcx
push rdx
test byte [rdi], al
mov esi, 0xd7025ba9
in eax, 0x74
push -0x6888908e
mov dh, 0x30
adc al, 0x8d
mov dword [rcx + 0x49], ebp
xchg eax, edi
xor ecx, dword cs:[rcx - 0x44]
adc al, 0x16
movabs eax, dword ds:[0x75702942323f8d69]
je 0x402ea6
push 0x46d4b876
adc ch, byte [rcx + rax*2 - 0x329abb09]
xor byte fs:[rbp + 0x3b], ch
outsd dx, dword [rsi]
jns 0x402e43
in al, 0xed
cmc
sbb esp, dword [rax]
xor eax, 0x284352b8
and eax, 0x52017214
mov edi, 0x81ec9432
and eax, esi
sub al, 0xb6
shl byte [rdx + rax*4], cl
mov ebx, dword [rdx - 0x6a4daccf]
mov dl, 0x52
add eax, 0x5f2635dc
mov bh, 0x14
lodsb al, byte [rsi]
insb byte [rdi], dx
insd dword [rdi], dx
mov edi, 0x7cef9231
sbb al, 0x4d
cmpsd dword [rsi], dword ptr [rdi]
xor dword [rcx], edi
xor al, 0x65
sbb eax, 0x6e733063
outsb dx, byte [rsi]
push rax
cmpsd dword [rsi], dword ptr [rdi]
test ebx, edx
cmp eax, 0xa88f6d37
xor al, 0xbb
sub byte [rdi + rdx], ah
test byte [rax + rbp + 0x14], dl
mov byte [rdx], al
movabs dword [0xe40342062d785615], eax
xor dword [rcx + 0x32216692], ecx
adc dword [rdi + 0x10], 0xa59b4647
in eax, dx
insb byte [rdi], dx
add eax, 0x6c92b09b
int1
and al, bl
mov edx, 0xb9d04e91
pop r14
insb byte [rdi], dx
insb byte [rdi], dx
mov byte gs:[rsi + 0x36], al
pop rdi
xor ebp, dword [rbp - 0x62]
sbb eax, 0x7390ae0c
pop rsi
outsb dx, byte [rsi]
popfq
outsb dx, byte [rsi]
ja 0x402f02
pop rax
test dword [rcx], esp
pop rdx
push rdx
pop rbx
sub byte [rip + 0x67393c1b], dh
cwde
jo 0x402eb9
sub al, byte [rsi + rbx*2 + 0x5bc9fe2c]
push rsi
retf 0x7662
wait
mov bl, 0xe9
and esp, ecx
and al, byte [rdx - 0x43c576cc]
add esi, eax
mov ecx, dword [rbp - 0x6b7b17bb]
xor dword [rcx + rdi*8], esp
insd dword [rdi], dx
jp 0x402f09
sbb byte [rbx - 0x7b3a32d7], spl
and byte [rdi + 0x69], r12b
js 0x402f84
call 0x348bc4f9
js 0x402f0c
add ebp, dword [rbx + 0x6e]
sbb edi, ebx
jns 0x402ed0
push rdx
mov ebx, 0x61cc8a6a
sbb eax, 0xd660d433
pop rbx
pop rax
jae 0x402fc6
std
sal dword [rbp + 0x7a7aad06], 1
push rax
stosd dword [rdi], eax
push r12
fcmovbe st(0), st(6)
push rdi
jbe 0x402f73
jne 0x402fb9
lodsd eax, dword [rsi]
in eax, 0x66
and edi, 0x36
retf
shl dword [rcx + 0x6e735380], cl
adc byte [rdi], cl
xor eax, 0x6c075ed2
rcr dword [rdi], 0xc
sbb eax, 0x42566554
movabs eax, dword [0xa92b09309451bb0]
xor byte [rbp - 0xb], dl
sub ah, byte [rbx + rax*2]
sbb byte [rcx - 0x4b], 0x6c
mov byte [rdi], ch
adc dword [rip + 0x49e8c0d9], 0x4f
mov ah, 0xb5
sbb bl, byte [rbp - 0x26]
cmp eax, dword fs:[rsi - 0x52c39bc3]
lodsb al, byte [rsi]
xchg eax, ecx
pop rsi
cmp byte [rsi], ah
xor al, 0x48
adc esi, dword [rdx]
xor al, 0x32
and byte [rcx], dh
and ah, byte [rbx - 0x2ff6ad16]
jo 0x402fb5
pop r15
jne 0x402fc1
outsb dx, byte [rsi]
jnp 0x402fd9
xchg eax, edx
pop rdx
scasb al, byte [rdi]
jg 0x402ffd
or cl, cl
push rdx
sub byte [rsi], dh
xor cl, byte [rdi + 0x26b08109]
mov al, 0x35
sbb byte [rdx + 0x63], cl
fisub word [rcx + 0x30]
and al, 0x37
jp 0x40304f
sub byte [rsi - 0x264b0dfa], 0x64
outsb dx, byte [rsi]
xor dword [rdx + rsi], edi
xor cl, byte [rip - 0x32ebcd70]
xor byte [rbx + 0x29350913], ch
sub bl, al
loopne 0x403050
or dh, al
mov word [rbp - 0x40], gs
cld
inc byte [rdx]
movsb byte [rdi], byte ptr [rsi]
sub al, 0x61
jns 0x40307e
push 0x5a45a488
xor dword [rcx - 0x3dbde9bb], eax
xchg eax, edx
and eax, 0x2109b225
mov dl, 0x48
loopne 0x40303c
or eax, dword [rcx + 0x641fac76]
xchg eax, ebx
movabs dword [0x82c230857319590], eax
rol dword [rbp + rdx + 0x2097cc11], cl
cmp dword [rdx - 0x41], eax
xor esp, esi
xchg eax, esi
ret 0x2c80
xchg byte [rip + 0x2c302908], al
mov byte [rcx - 0x75], ah
in al, 0x84
xor al, 0x30
xor dword [rdx + 0x22], ecx
test dword [rbp + 0x4b], ecx
xor bl, byte [rsi + 0x2c4258c2]
or dword [rsi], eax
or esp, dword [rax]
movsd dword [rdi], dword ptr [rsi]
sbb byte [esi - 0x5cf684f6], dh
adc ecx, dword [rdi]
xchg eax, ecx
sbb eax, 0x48306160
push rsp
push rdi
or dword [rbx + 0x76], ecx
call 0xffffffffa4608631
xor eax, 0x59bd3040
loopne 0x4030ac
cmp eax, 0x1b205a13
fdiv dword [rdx]
mov ebx, dword [rdx + 0x59]
and al, 0xa9
xor dword [rax], esi
test eax, 0x32ed03c9
in eax, dx
xor al, 0x50
cmp esi, dword [rsi]
xchg eax, ecx
mov ah, 8
imul edx, dword [rdi + 0x5a], 0x2e
in al, 0xc2
sub byte [rdi], bl
xor dword [rsi - 0x56], ebp
in al, dx
or al, 0xe8
xor ecx, esp
insb byte [rdi], dx
movsb byte [rdi], byte ptr [rsi]
pop rcx
add edx, dword [rdx + 0x25e4cd6c]
mov esi, 0xa632b925
jae 0x403149
pop rdi
push -0x3b7b9edf
and dword [rax + rdi*2 - 0x51], 0xb
add edi, dword [rcx - 0x36]
or eax, 0xc034203b
adc r15b, byte [rdx + 0x216f887b]
mov cl, 0xba
pop rbp
xor al, 0xcb
and byte [rbp - 0xa], al
hlt
leave
nop
hlt
sub cl, byte [rcx + 0x1b]
stosb byte [rdi], al
xor byte [rax + 0x345b0a05], dl
sbb byte [rip + 0x5fa4e0b0], ah
cmpsb byte [rsi], byte ptr [rdi]
adc byte [rsi + 0x27], al
push rsi
shl dword [rsi + 0xac20d12], 0x41
jl 0x403161
xchg dword [rsp + r13*2 + 0x4b], ebx
imul esp, dword [rsi], 0x3431e0c8
enter -0x4e8a, 0x64
sub al, byte [rbx]
call 0x18d2d69c
and eax, 0x2b404d9b
movsb byte [rdi], byte ptr [rsi]
ret 0x8563
xor byte [rdx - 0x7c], al
xchg dword [rdx + 0x2012cc5], edx
xchg ebx, edx
or bl, byte [rcx]
adc dword [rdx], esp
test ah, al
adc ch, byte [rdx + 0x115942b9]
retf 0x72c4
add edx, dword [rsi]
in eax, dx
and dh, byte [rbx]
jno 0x4031d7
je 0x4031cc
movsb byte [rdi], byte ptr [rsi]
shr edi, -3
xchg eax, ebp
mov word [rcx + rcx + 0x5f0869da], fs
xor byte [rbx - 0x5a], cl
insb byte [rdi], dx
mov ss, word [rdi]
insb byte [rdi], dx
int 0x88
insd dword [rdi], dx
add byte [rax], cl
imul ecx, dword [rdx - 0x16], 0xb74bb950
adc ch, byte [rax + 0x59]
xor dword [rbp + 0x195a04ef], ebp
add esi, esi
out dx, eax
jo 0x4031a7
pop rcx
sub byte [rsi], bh
fmul dword [rbp + 0x46]
and rax, 0x31340f68
pop rax
xchg eax, esp
jge 0x4031ef
mov r8b, 0x58
pop rcx
sbb al, 0xc9
push rcx
sub eax, 0xdc3753b0
pop rdx
push rdx
or byte [rsi + rdi*4 - 0x6ff6b50f], 0x48
nop
sbb eax, esp
adc byte [rax + rcx*2 + 0x504b819a], 0xf
push rdx
and dword [rax], edx
and dword [rsi], esi
xor cl, byte [rax]
xchg eax, esp
and esp, esi
nop
add eax, dword [rsi + 0xc]
mov es, edx
jb 0x403218
xor qword [r8 - 0x349bda7d], r15
push rdi
jae 0x403264
and byte [rax + rdx*8 - 0x538d0cfc], dl
cwde
ror byte [rax - 0x40], 1
call 0x40e62dda
scasb al, byte [rdi]
insb byte [rdi], dx
jns 0x403268
imul ebp, dword [rdi + 0x49], 0xd
pop rdx
insd dword [rdi], dx
push 0x74ad5d03
shl byte [rbx - 0x6c], 0x70
xor al, 0xbe
shr byte [rax - 0x5a9ec36f], 1
insb byte [rdi], dx
insd dword [rdi], dx
insb byte [rdi], dx
loopne 0x403269
mov spl, 0x6c
cmp byte [rdx - 0x80], dl
movabs qword [0x68eaf3090a59a121], rax
movsb byte [rdi], byte ptr [rsi]
xchg eax, esp
nop
or ch, ah
rcl byte [rsi + 0x21], 1
test eax, 0xac9d81a5
or al, 0x60
xor dl, byte [rcx]
xor ch, byte [rdi]
or eax, 0x656ca992
nop
adc ch, byte [rdx + 0x10]
jne 0x4031de
sbb dl, byte [rcx + 0x32509191]
and byte [rdx], cl
xchg byte [rax], ch
and dword [rsi + 0x23646f3c], edx
and esp, eax
add eax, 0x236ca4b6
push rsp
or cl, byte [rsi]
xor dword [rbp + 0x6a], ebp
test dword [rax + 0x3682db0b], 0x6d6f6672
push rsi
xor dil, byte [r13 + 0x65636374]
jmp 0x40320c
mov ebp, 0x33548561
fld dword [rdi - 0x2b179f9a]
push rax
popfq
in al, 5
mov ecx, 0xb70ce400
insd dword [rdi], dx
pop r13
pop rax
mov al, 8
mov dl, 0x4b
mov al, 0x90
sbb byte [rcx + rbx*4 + 0x6d], ah
mov word [rax + 0x20], cs
test dword [rcx + 0x52922c32], edi
sbb byte [rbx], al
mov ch, 0xad
xchg eax, edx
pop rcx
cmc
movabs dword [0xb231745a64122592], eax
add eax, 0x58cdb120
and dword [rbx], edx
pop rcx
mov cl, 0xaa
xor dword [rdx - 0x7a], ecx
mov dl, 0x6a
push r10
leave
ret 0x64f9
add bpl, byte [rcx]
add al, 0x21
push rbx
adc dl, al
and byte [rbx], ah
loop 0x40334e
push rax
stosb byte [rdi], al
mov ebp, edi
add ch, byte [rbx]
xor dl, byte [rax]
fldenv [rax]
movsb byte [rdi], byte ptr [rsi]
xor ah, byte [rdx + 0x4ab51843]
stosb byte [rdi], al
movabs byte [0x149b5315b351969b], al
movsb byte [rdi], byte ptr [rsi]
enter -0x2800, 0x2a
sbb byte [rax + rax*4 + 0x55], 0x49
mov word [rdx + 0x3f5d32ad], ds
pop rbp
and dword [rbx], ebp
and dword gs:[rsi], esp
adc r10b, byte [r8]
movsxd rsp, dword [rbp + 0x1d]
sti
add byte [rcx + 0x40], cl
mov al, 0x41
in eax, dx
add byte [rip + 0x1b84a2c6], dl
iretd
add eax, 0x28600c09
movabs byte [0xc988ba319f845cec], al
sal byte [rbx], 9
push 0x5f0bbae4
outsb dx, byte [rsi]
adc al, dl
sbb eax, dword [rbp + 0x31152340]
mov ebp, 0xfde9700
xor dword [rbp + rbx + 2], esp
mov word [rax + 0x1e0a13a8], es
sub ebx, dword [rbx - 0x4e]
xor r8b, byte [r9]
enter -0x4d8d, 0x6d
lea r14, [r10]
push rsp
and dl, byte [rcx]
movsb byte [rdi], byte ptr [rsi]
insb byte [rdi], dx
pop rcx
mov ebx, 0x10a41eb3
call 0x55d850e8
sbb byte [rbx + 0x655c86b0], cl
movabs byte [0x5641c962402aace], al
sub dword [rbx + 0x19], ebx
adc byte [rdx - 0x53], bh
scasd eax, dword [rdi]
enter 0x7919, 0x31
or al, byte [rbx]
sbb byte [rbx + 0x76], r15b
adc dl, byte [rsi]
cmc
push rsi
adc cl, byte [rip - 0x7cdfa5ab]
sbb dword [rsi], edi
adc al, 0x90
sbb al, 0x20
add byte fs:[rbx - 0x6afdf774], cl
mov cl, 0x32
loop 0x403436
add cl, byte [rdi - 0x77ed2e6b]
repe cmpsd dword [rsi], dword ptr [rdi]
ret 0x958a
pop rsp
insb byte [rdi], dx
sub dl, byte [rsi + 0x16]
and eax, 0xb1090b6b
ret 0x345e
and al, 0xc
rcr byte [rcx + 0x2b], 0x20
cmp ebp, dword gs:[rsp + 0x6c670100]
lodsd eax, dword [rsi]
cdq
loopne 0x403434
cmp al, 0xb5
mov cl, 0xdc
sbb cl, byte [rdx]
fistp dword [rdi + 0x70]
sub esi, dword [rbx + 0x78]
je 0x4033e2
jbe 0x403435
or eax, dword [rsi]
jns 0x40342e
or cl, cl
push rbx
or ch, ah
push rax
insb byte [rdi], dx
push r14
and eax, dword [rcx]
push rbp
adc ch, byte [rcx - 0x49]
and ebp, dword [rsi + 0xd]
jno 0x403474
fbstp tbyte [rbp + 0x6d]
hlt
mov dword [rsi + 0x49], eax
xor byte [rbx - 0x6d], al
push -0x7b
push rsp
sub edi, dword [rax + 0x48b920c4]
xchg eax, esi
xor dword [rcx], ebx
or al, 0xb2
mov edi, 0x2ac0cd44
and ecx, dword [rsi + 0x64]
insd dword [rdi], dx
add byte [rsi + 0x7850a2c], dh
mov edi, 0x8111035a
or byte [rsi + 0x31242242], 0x48
cmpsb byte [rsi], byte ptr [rdi]
enter 0x3194, 0xb
or ah, byte [rcx]
sbb dword [rcx], edx
in al, dx
insd dword [rdi], dx
cld
nop
nop
add byte [rsi], ch
jae 0x4034eb
insd dword [rdi], dx
scasb al, byte [rdi]
or eax, 0x7407d93b
jb 0x4034e5
or ecx, ebx
mov esi, dword [rbx]
jne 0x4034af
mov bh, 0x70
outsb dx, byte [rsi]
outsd dx, dword [rsi]
lodsd eax, dword cs:[rsi]
sub eax, 0xbf60da4
fadd qword [rip + 0x75622eb7]
sub eax, 0xd006469
int 0xdc
push 0x64096864
jns 0x403515
xor byte [rdi + 0x1945ace3], dl
jbe 0x4034ab
je 0x4034bf
out dx, eax
xchg eax, esi
wait
pop rdi
sbb ebx, edx
insb byte [rdi], dx
sub byte [rcx], cl
mov ebp, 0x70d6bd16
jae 0x403537
test byte [rdx], 7
in al, 0x36
mov bh, 0x2c
outsd dx, dword [rsi]
or byte [rcx + 0x78], ch
add eax, 0x91e82c67
mov dh, 0x24
outsd dx, dword [rsi]
jge 0x403508
push 0x565b96d7
call 0x5d4da04d
push rcx
xlatb
mov ch, 0xb6
ficomp dword [rdi + 0x2e]
push rbp
jo 0x4034a9
mov ebp, 0x59b0116c
mov dl, 0x20
push 0x43
or ebp, edi
sub eax, 0x556ae056
movabs eax, dword [0xcc52b56800636936]
jnp 0x403569
sub dword [rax + rax*4], eax
insd dword [rdi], dx
lodsd eax, dword [rsi]
adc byte [rdx + rdx*2 - 3], bh
add byte [rax], al
sub byte [rax - 0x76], ch
add dword [rcx + 0x5f4b1049], edi
or al, 0xc9
nop
pushfq
sbb al, 1
and ecx, eax
and byte [rbx], al
rol byte [rdi], cl
push rsp
push rsp
xor ah, byte [rbx + rax*2]
xor ah, byte [rax]
add al, 0x31
xor cl, al
and byte [rbx + 0x74], al
je 0x403564
cmp esp, esp
int 0x50
idiv dil
ljmp [rdi - 0x68]
sbb dword [rax + rcx*2 + 6], esp
cwde
add eax, 0xa2936108
and dword [rsi + 0x63], ecx
xor cl, al
rol al, 0xc8
add ebx, edi
xor ecx, dword [rax]
xchg eax, ebx
sbb byte [rdi], bh
push rsi
add rcx, qword [rax + 0x70048804]
add ecx, ebp
xchg eax, edx
add dword [rsi - 0x41], ebx
inc dword [rsi - 0x7361b1c]
add eax, 0x22605f8
sbb al, 0x90
outsb dx, byte [rsi]
enter 0x6b07, 0x3f
and byte [rsi], al
leave
and byte [rdi - 0x11], ah
cmpsd dword [rsi], dword ptr [rdi]
add byte [rsi], 0x61
cwde
mov dl, 0xff
jp 0x4035f2
test byte [rbp + 0x7a0c9b9], al
out 0x3f, eax
and byte [rbx - 0x7b0026a3], al
xor cl, al
mov eax, 0x580150b8
adc byte [rsi], al
nop
sbb dword [rsi - 0x21ecd1ed], ecx
add al, 0x2a
sysret
jmp qword [rax + rcx*8 - 0x7a]
xchg eax, edx
sbb cl, byte [rcx + 0x486c303f]
sbb dword [rax], esi
lock adc byte [rdi], al
mov esp, 0x9486c873
and byte [rcx], cl
mov dl, 0x23
pop rbx
setge byte [rdi + 0x20]
cmp dword [rcx], ecx
or dword [rdx + 0x2e], eax
jb 0x4035ba
pop rbx
add byte [rbx + 0x693774ff], ah
sub byte [rcx], bh
jns 0x403672
or dword [rcx - 0x4c8cc641], ebp
and dword [rax + 0x38bf073f], eax
rol dword [rsi + 0x3fb1286c], -0x48
jg 0x4035dd
jb 0x4035a7
mov eax, 0x92bf05b4
jo 0x40365e
jo 0x403660
adc al, 0x18
leave
test dword [rbx + 0x76e196c], 0x31047f3f
imul edi, dword [rdx + 0x30e0edb], 0x9bc20177
xchg eax, edi
mov edi, 0x83203fe7
or al, 0x48
psubb mm7, mm0
sub al, 0x7b
mov edi, 0xd805d23f
pop rsi
clc
wait
pop rcx
outsb dx, byte [rsi]
pop rbx
jg 0x4036a4
insb byte [rdi], dx
leave
jg 0x403679
xor cl, al
mov dh, 0x90
cwde
mov edi, 0x39215f5f
enter 0x845, 1
add ecx, ecx
fldenv [rax + 0x54]
mov byte [rsi + 0x32], ch
and al, 0x43
or cl, byte [rax + 0x250dd207]
call qword [eax]
adc byte [rdi], bh
or byte [rdi - 0x20], ah
add ebx, dword es:[rax + 0x64087f07]
or dword [rip + 0x307f1525], 0x17
pop rax
or byte [rcx], bh
sub al, 0x3f
xor al, 7
loopne 0x4036eb
pop rdx
jbe 0x4036bd
jnp 0x403645
scasb al, byte [rdi]
wait
adc dword [rdx + 0x4e], ecx
mov edi, 0x3900bb1e
jns 0x403690
sub edx, eax
ljmp [rax]
sbb eax, 0x1b0871f
movsb byte [rdi], byte ptr [rsi]
xor dword [rcx], ecx
jg 0x4036c1
jge 0x4036cb
sub al, 0x92
stosd dword [rdi], eax
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip + 0x73080216], ecx
jmp 0x4036c1
out dx, eax
mov al, dl
movabs byte [0x14df00005730a0], al
add al, cl
mov bh, 0
add byte [rcx + 2], cl
add byte [rdi - 0xc], al
add byte [rax], al
add bh, bh
