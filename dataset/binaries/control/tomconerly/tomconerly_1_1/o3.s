xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6040af
push rbp
sub rax, obj.completed.7585
cmp rax, 0xe
mov rbp, rsp
jbe 0x4017d0
mov eax, 0
test rax, rax
je 0x4017d0
pop rbp
mov edi, obj.completed.7585
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.completed.7585
push rbp
sub rsi, obj.completed.7585
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x401818
mov eax, 0
test rax, rax
je 0x401818
pop rbp
mov edi, obj.completed.7585
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x202881], 0
jne 0x40183a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x20286e], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x401850
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x40184b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
push r15
push r14
mov r14d, ecx
push r13
push r12
push rbp
push rbx
sub rsp, 0x88
mov rcx, qword fs:[0x28]
mov qword [rsp + 0x78], rcx
xor ecx, ecx
test r8, r8
mov qword [rsp + 8], rdi
mov qword [rsp + 0x10], rsi
mov qword [rsp], r8
je 0x4019f0
mov rcx, qword [rsi + 8]
test rcx, rcx
je 0x401ca8
mov rbp, qword [rsi]
xor eax, eax
mov r13d, edx
cmp dl, byte [rbp]
jne 0x4018db
mov qword [rsp + 0x18], 1
mov rsi, qword [rsp + 0x18]
jmp 0x4018fb
nop dword [rax]
mov rax, rdx
lea rdx, [rax + 1]
cmp rdx, rcx
je 0x401ca8
cmp byte [rbp + rax + 1], r13b
jne 0x4018d8
add rax, 2
mov qword [rsp + 0x18], rax
mov rsi, rax
cmp rcx, rsi
lea rax, [rsp + 0x40]
cmova rcx, rsi
cmp rcx, 0xf
mov qword [rsp + 0x30], rax
mov rbx, rcx
mov qword [rsp + 0x28], rcx
ja 0x401bf9
cmp rcx, 1
je 0x401c36
test rcx, rcx
mov rdx, rax
jne 0x401c98
xor ebp, ebp
cmp qword [rsp], 0
mov qword [rsp + 0x38], rbx
lea r12, [rsp + 0x40]
mov byte [rdx + rbx], 0
jg 0x4019a9
jmp 0x401ab0
mov byte [rax + rbx], r14b
mov rax, qword [rsp + 0x30]
mov qword [rsp + 0x38], r15
mov byte [rax + rbx + 1], 0
mov rax, qword [rsp + 0x30]
mov rbx, qword [rsp + 0x38]
cmp rax, r12
lea r15, [rbx + 1]
je 0x401a90
mov rdx, qword [rsp + 0x40]
cmp r15, rdx
ja 0x401a68
add rbp, 1
cmp qword [rsp], rbp
mov byte [rax + rbx], r13b
mov rax, qword [rsp + 0x30]
mov qword [rsp + 0x38], r15
mov byte [rax + rbx + 1], 0
je 0x401ab0
mov rax, qword [rsp + 0x30]
mov rbx, qword [rsp + 0x38]
cmp rax, r12
lea r15, [rbx + 1]
je 0x401aa0
mov rdx, qword [rsp + 0x40]
cmp r15, rdx
jbe 0x401950
lea rdi, [rsp + 0x30]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x401950
nop dword [rax + rax]
mov rax, rdi
add rax, 0x10
mov qword [rdi], rax
mov rax, qword [rsp + 0x10]
mov rdx, qword [rax]
add rax, 0x10
cmp rdx, rax
je 0x401b98
mov rsi, qword [rsp + 0x10]
mov qword [rdi], rdx
mov rcx, rdi
mov rdx, qword [rsi + 0x10]
mov qword [rdi + 0x10], rdx
mov rdx, qword [rsi + 8]
mov qword [rcx + 8], rdx
mov qword [rsi], rax
mov rax, rcx
mov qword [rsi + 8], 0
mov byte [rsi + 0x10], 0
mov rcx, qword [rsp + 0x78]
xor rcx, qword fs:[0x28]
jne 0x401cda
add rsp, 0x88
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
lea rdi, [rsp + 0x30]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x401988
nop dword [rax]
mov edx, 0xf
jmp 0x40197f
nop word [rax + rax]
mov edx, 0xf
jmp 0x4019c5
nop word [rax + rax]
mov rax, qword [rsp + 0x10]
mov rcx, qword [rax + 8]
cmp rcx, qword [rsp + 0x18]
jb 0x401cdf
mov rsi, rax
lea rax, [rsp + 0x60]
mov qword [rsp + 0x50], rax
mov rax, qword [rsp + 0x18]
mov rbp, rax
add rbp, qword [rsi]
sub rcx, rax
mov rbx, rcx
mov rax, rbp
add rax, rcx
je 0x401af9
test rbp, rbp
jne 0x401af9
mov edi, str.basic_string::_M_construct_null_not_valid
call sym.std::__throw_logic_error
cmp rbx, 0xf
mov qword [rsp + 0x28], rbx
ja 0x401bbc
cmp rbx, 1
je 0x401c46
test rbx, rbx
lea rax, [rsp + 0x60]
jne 0x401ca0
mov qword [rsp + 0x58], rbx
mov byte [rax + rbx], 0
lea rdi, [rsp + 0x30]
mov rdx, qword [rsp + 0x58]
mov rsi, qword [rsp + 0x50]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
mov rdi, qword [rsp + 0x50]
lea rax, [rsp + 0x60]
cmp rdi, rax
je 0x401b51
call sym.operatordelete
mov rsi, qword [rsp + 8]
lea rdx, [rsp + 0x40]
mov rax, rsi
add rax, 0x10
mov qword [rsi], rax
mov rax, qword [rsp + 0x30]
cmp rax, rdx
je 0x401c58
mov rsi, qword [rsp + 8]
mov qword [rsi], rax
mov rax, qword [rsp + 0x40]
mov rcx, rsi
mov qword [rsi + 0x10], rax
mov rax, qword [rsp + 0x38]
mov qword [rcx + 8], rax
mov rax, rcx
jmp 0x401a3c
mov rcx, qword [rsp + 0x10]
mov rsi, qword [rsp + 0x10]
mov rbx, qword [rcx + 0x18]
mov rcx, qword [rcx + 0x10]
mov qword [rdi + 0x18], rbx
mov qword [rdi + 0x10], rcx
mov rcx, qword [rsp + 8]
jmp 0x401a22
lea rsi, [rsp + 0x28]
lea rdi, [rsp + 0x50]
xor edx, edx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_create
mov rdi, rax
mov qword [rsp + 0x50], rax
mov rax, qword [rsp + 0x28]
mov qword [rsp + 0x60], rax
mov rdx, rbx
mov rsi, rbp
call sym.imp.memcpy
mov rbx, qword [rsp + 0x28]
mov rax, qword [rsp + 0x50]
jmp 0x401b20
lea rdi, [rsp + 0x30]
lea rsi, [rsp + 0x28]
xor edx, edx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_create
mov rdi, rax
mov qword [rsp + 0x30], rax
mov rax, qword [rsp + 0x28]
mov qword [rsp + 0x40], rax
mov rdx, rbx
mov rsi, rbp
call sym.imp.memcpy
mov rbx, qword [rsp + 0x28]
mov rdx, qword [rsp + 0x30]
jmp 0x401934
movzx edx, byte [rbp]
mov byte [rsp + 0x40], dl
mov rdx, rax
jmp 0x401934
movzx eax, byte [rbp]
mov byte [rsp + 0x60], al
lea rax, [rsp + 0x60]
jmp 0x401b20
mov rcx, qword [rsp + 8]
mov rax, qword [rsp + 0x40]
mov rdx, qword [rsp + 0x48]
mov qword [rcx + 0x10], rax
mov qword [rcx + 0x18], rdx
jmp 0x401b87
mov rbx, rax
mov rdi, qword [rsp + 0x30]
lea rax, [rsp + 0x40]
cmp rdi, rax
je 0x401c8b
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
nop dword [rax + rax]
mov rdi, rax
jmp 0x401c1c
mov rdi, rax
jmp 0x401bdf
mov ecx, str.std::__cxx11::string_replace_std::__cxx11::string__char__char__i64_
mov edx, 0x3c
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.false
call sym.imp.__assert_fail
mov rdi, qword [rsp + 0x50]
mov rbx, rax
lea rax, [rsp + 0x60]
cmp rdi, rax
je 0x401c77
call sym.operatordelete
jmp 0x401c77
call sym.imp.__stack_chk_fail
mov rdx, qword [rsp + 0x18]
mov esi, str.basic_string::substr
mov edi, str._s:___pos__which_is__zu____this__size____which_is__zu_
xor eax, eax
call sym.std::__throw_out_of_range_fmt
nop
nop word cs:[rax + rax]
push r15
push r14
push r13
push r12
push rbp
push rbx
mov rbx, r8
sub rsp, 0x28
mov qword [rsp + 0x10], r8
lea r8, [rsi + rdx]
mov qword [rsp], rdx
mov qword [rsp + 8], rcx
mov qword [rsp + 0x18], r9
add r8, rcx
add r8, rbx
add r8, r9
add r8, qword [rsp + 0x60]
cmp r8, qword [rdi + 8]
jne 0x401f4f
test r8, r8
je 0x401ed6
mov rdi, qword [rdi]
lea rcx, [r8 - 1]
lea r11, [r8 + r8 - 1]
xor r14d, r14d
xor ebx, ebx
xor ebp, ebp
xor r12d, r12d
xor r15d, r15d
xor r13d, r13d
mov r10, rdi
sub r10, r8
jmp 0x401da4
nop dword [rax]
cmp al, 0x56
je 0x401e58
cmp al, 0x4f
je 0x401ea8
cmp al, byte [rdi + r9]
je 0x401eeb
cmp al, byte [rdi + rdx]
je 0x401eeb
cmp al, 0x52
jne 0x401df0
add r13, 1
add rcx, 1
cmp r11, rcx
je 0x401e05
xor edx, edx
mov rax, rcx
div r8
lea rax, [rcx + 2]
mov r9, rdx
xor edx, edx
div r8
movzx eax, byte [r10 + rcx + 1]
cmp al, 0x47
jne 0x401d70
add rbp, 1
cmp byte [rdi + r9], 0x52
jne 0x401f04
cmp byte [rdi + rdx], 0x52
je 0x401d9b
mov ecx, str.void_check_std::__cxx11::string__i64__i64__i64__i64__i64__i64_
mov edx, 0x48
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.ans_n______R_
call sym.imp.__assert_fail
cmp al, 0x59
jne 0x401e90
add rcx, 1
add r12, 1
cmp r11, rcx
jne 0x401da4
cmp rsi, r13
jne 0x401f68
cmp r15, qword [rsp]
jne 0x401f68
cmp qword [rsp + 8], r12
jne 0x401f68
cmp qword [rsp + 0x10], rbp
jne 0x401f68
cmp qword [rsp + 0x18], rbx
jne 0x401f68
cmp qword [rsp + 0x60], r14
jne 0x401f68
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
add r14, 1
cmp byte [rdi + r9], 0x59
jne 0x401f36
cmp byte [rdi + rdx], 0x59
je 0x401d9b
mov ecx, str.void_check_std::__cxx11::string__i64__i64__i64__i64__i64__i64_
mov edx, 0x4c
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.ans_n______Y_
call sym.imp.__assert_fail
nop word [rax + rax]
cmp al, 0x42
jne 0x401d9b
add rbx, 1
jmp 0x401d9b
nop dword [rax]
add r15, 1
cmp byte [rdi + r9], 0x42
jne 0x401f1d
cmp byte [rdi + rdx], 0x42
je 0x401d9b
mov ecx, str.void_check_std::__cxx11::string__i64__i64__i64__i64__i64__i64_
mov edx, 0x50
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.ans_n______B_
call sym.imp.__assert_fail
xor r14d, r14d
xor ebx, ebx
xor ebp, ebp
xor r12d, r12d
xor r15d, r15d
xor r13d, r13d
jmp 0x401e05
mov ecx, str.void_check_std::__cxx11::string__i64__i64__i64__i64__i64__i64_
mov edx, 0x52
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.ans_p_____ans_i_____ans_n_____ans_i_
call sym.imp.__assert_fail
mov ecx, str.void_check_std::__cxx11::string__i64__i64__i64__i64__i64__i64_
mov edx, 0x47
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.ans_p______R_
call sym.imp.__assert_fail
mov ecx, str.void_check_std::__cxx11::string__i64__i64__i64__i64__i64__i64_
mov edx, 0x4f
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.ans_p______B_
call sym.imp.__assert_fail
mov ecx, str.void_check_std::__cxx11::string__i64__i64__i64__i64__i64__i64_
mov edx, 0x4b
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.ans_p______Y_
call sym.imp.__assert_fail
mov ecx, str.void_check_std::__cxx11::string__i64__i64__i64__i64__i64__i64_
mov edx, 0x40
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.ans.size______R___O___Y___G___B___V
call sym.imp.__assert_fail
mov ecx, str.void_check_std::__cxx11::string__i64__i64__i64__i64__i64__i64_
mov edx, 0x5b
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.R____r____O____o____Y____y____G____g____B____b____V____v
call sym.imp.__assert_fail
nop dword [rax + rax]
nop word cs:[rax + rax]
mov rax, rsi
sub rax, rdi
cmp rax, 0x10f
jle 0x402157
push r15
push r14
push r13
push r12
mov r13, rdi
push rbp
push rbx
mov rbx, rdx
sub rsp, 0x18
test rdx, rdx
je 0x402158
lea rax, [rdi + 0x20]
lea r12, [rdi + 0x10]
mov r15, rsi
mov r8, rsi
mov qword [rsp + 8], rax
sub r8, r13
sub rsp, 8
lea rcx, [r15 - 0x10]
sar r8, 4
push 0
mov rsi, r12
mov rdx, r8
mov rdi, r13
sub rbx, 1
shr rdx, 0x3f
add rdx, r8
sar rdx, 1
shl rdx, 4
add rdx, r13
call sym.std::__move_median_to_first___gnu_cxx::__normal_iterator_std::pair_long_char___std::vector_std::pair_long_char__std::allocator_std::pair_long_char_______gnu_cxx::__ops::_Iter_less_iter_
mov rdi, qword [rsp + 0x18]
mov rcx, qword [r13]
mov rsi, r15
pop rax
pop rdx
jmp 0x40204f
nop word cs:[rax + rax]
jl 0x40202d
movzx r10d, byte [rax + 8]
cmp byte [r13 + 8], r10b
jl 0x40207b
cmp rbp, rax
jae 0x402088
mov qword [rdi - 0x10], rdx
mov qword [rax], r9
movzx ecx, byte [rax + 8]
movzx edx, byte [rdi - 8]
mov byte [rdi - 8], cl
mov byte [rax + 8], dl
mov rcx, qword [r13]
add rdi, 0x10
mov r9, qword [rdi - 0x10]
lea rbp, [rdi - 0x10]
mov r14, rbp
cmp r9, rcx
jl 0x40204b
jg 0x40206b
movzx eax, byte [r13 + 8]
cmp byte [rdi - 8], al
jl 0x40204b
lea rax, [rsi - 0x10]
nop
mov rdx, qword [rax]
mov rsi, rax
cmp rdx, rcx
jle 0x402020
sub rax, 0x10
jmp 0x402070
nop dword [rax]
mov rdx, rbx
mov rsi, r15
mov rdi, rbp
call sym.std::__introsort_loop___gnu_cxx::__normal_iterator_std::pair_long_char___std::vector_std::pair_long_char__std::allocator_std::pair_long_char_____long___gnu_cxx::__ops::_Iter_less_iter_
mov rax, rbp
mov r8, rbp
sub rax, r13
cmp rax, 0x10f
jle 0x402149
test rbx, rbx
je 0x4020b8
mov r15, r8
jmp 0x401fd2
sar rax, 4
mov rbx, rax
lea rbp, [rbx - 2]
sar rbp, 1
mov r12, rbp
shl r12, 4
add r12, r13
jmp 0x4020dc
nop word [rax + rax]
sub rbp, 1
mov r8, qword [r12 + 8]
sub rsp, 8
mov rcx, qword [r12]
push 0
mov rdi, r13
mov rdx, rbx
mov rsi, rbp
sub r12, 0x10
call sym.std::__adjust_heap___gnu_cxx::__normal_iterator_std::pair_long_char___std::vector_std::pair_long_char__std::allocator_std::pair_long_char_____long_std::pair_long_char____gnu_cxx::__ops::_Iter_less_iter_
test rbp, rbp
pop rdi
pop r8
jne 0x4020d8
sub r14, 0x10
mov rax, qword [r13]
mov rcx, qword [r14]
mov rbx, r14
mov r8, qword [r14 + 8]
sub rsp, 8
sub rbx, r13
mov rdx, rbx
xor esi, esi
mov rdi, r13
mov qword [r14], rax
movzx eax, byte [r13 + 8]
sar rdx, 4
sub r14, 0x10
mov byte [r14 + 0x18], al
push 0
call sym.std::__adjust_heap___gnu_cxx::__normal_iterator_std::pair_long_char___std::vector_std::pair_long_char__std::allocator_std::pair_long_char_____long_std::pair_long_char____gnu_cxx::__ops::_Iter_less_iter_
cmp rbx, 0x1f
pop rcx
pop rsi
jg 0x402109
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
sar rax, 4
mov r14, rsi
mov rbx, rax
jmp 0x4020bf
nop word [rax + rax]
push r14
mov r14, rsi
push r13
lea rsi, [rdx + rsi]
push r12
lea r13, [rdi + 0x10]
push rbp
push rbx
mov r12, rdx
add rsi, rcx
mov edx, 0x20
mov rbx, rdi
sub rsp, 0x40
mov qword [rdi], r13
mov rbp, rcx
mov rax, qword fs:[0x28]
mov qword [rsp + 0x38], rax
xor eax, eax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_construct
mov edi, 0x30
mov qword [rsp], r14
mov byte [rsp + 8], 0x52
mov qword [rsp + 0x10], r12
mov byte [rsp + 0x18], 0x59
mov qword [rsp + 0x20], rbp
mov byte [rsp + 0x28], 0x42
call sym.operatornew
mov rbp, rax
mov rdx, qword [rsp + 8]
mov rax, qword [rsp]
cmp rbp, -0x10
mov qword [rbp], rax
mov qword [rbp + 8], rdx
je 0x4023da
mov rax, qword [rsp + 0x10]
mov rdx, qword [rsp + 0x18]
mov qword [rbp + 0x10], rax
mov rax, rbp
mov qword [rbp + 0x18], rdx
add rax, 0x20
je 0x402221
mov rsi, qword [rsp + 0x20]
mov rdi, qword [rsp + 0x28]
mov qword [rax], rsi
mov qword [rax + 8], rdi
lea r12, [rbp + 0x30]
mov edx, 2
mov rdi, rbp
mov rsi, r12
call sym.std::__introsort_loop___gnu_cxx::__normal_iterator_std::pair_long_char___std::vector_std::pair_long_char__std::allocator_std::pair_long_char_____long___gnu_cxx::__ops::_Iter_less_iter_
sub rsp, 8
mov rsi, r12
mov rdi, rbp
push 0
call sym.std::__insertion_sort___gnu_cxx::__normal_iterator_std::pair_long_char___std::vector_std::pair_long_char__std::allocator_std::pair_long_char_______gnu_cxx::__ops::_Iter_less_iter_
cmp qword [rbp + 0x20], 0
pop rax
mov eax, 0xffffffff
pop rdx
jle 0x40227d
xor edx, edx
xor eax, eax
jmp 0x402262
nop word [rax + rax]
mov eax, ecx
movzx esi, byte [rbp + 0x28]
mov rcx, qword [rbx]
mov byte [rcx + rdx*2], sil
add rdx, 1
cmp qword [rbp + 0x20], rdx
lea ecx, [rax + 2]
jg 0x402260
add eax, 1
xor edx, edx
cmp qword [rbp + 0x10], 0
jg 0x4022a8
jmp 0x4022ca
nop dword [rax + rax]
movzx edi, byte [rbp + 0x18]
mov rsi, qword [rbx]
add eax, 2
add rdx, 1
mov byte [rsi + rcx], dil
cmp qword [rbp + 0x10], rdx
jle 0x4022ca
movsxd rcx, eax
cmp rcx, qword [rbx + 8]
jb 0x402290
movzx ecx, byte [rbp + 0x18]
mov rax, qword [rbx]
add rdx, 1
mov byte [rax + 1], cl
cmp qword [rbp + 0x10], rdx
mov eax, 3
jg 0x4022a8
mov rsi, qword [rbx + 8]
xor eax, eax
xor ecx, ecx
test rsi, rsi
jne 0x4022e9
jmp 0x40236d
nop dword [rax]
add rax, 1
cmp rax, rsi
jae 0x40230c
mov rdx, rax
add rdx, qword [rbx]
cmp byte [rdx], 0x20
jne 0x4022e0
movzx esi, byte [rbp + 8]
add rax, 1
add rcx, 1
mov byte [rdx], sil
mov rsi, qword [rbx + 8]
cmp rax, rsi
jb 0x4022e9
cmp qword [rbp], rcx
jne 0x4023c1
xor ecx, ecx
jmp 0x402340
nop word [rax + rax]
mov r8, qword [rbx]
xor edx, edx
movzx edi, byte [r8 + rcx]
add rcx, 1
mov rax, rcx
div rsi
cmp dil, byte [r8 + rdx]
je 0x402372
cmp dil, 0x20
je 0x40238b
cmp rcx, rsi
jne 0x402320
mov rdi, rbp
call sym.operatordelete
mov rax, rbx
mov rbx, qword [rsp + 0x38]
xor rbx, qword fs:[0x28]
jne 0x4023a4
add rsp, 0x40
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
mov rcx, rsi
jmp 0x40230c
mov ecx, str.std::__cxx11::string_place_i64__i64__i64_
mov edx, 0x28
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.ans_i_____ans__i_1__ans.size___
call sym.imp.__assert_fail
mov ecx, str.std::__cxx11::string_place_i64__i64__i64_
mov edx, 0x29
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.ans_i________
call sym.imp.__assert_fail
call sym.imp.__stack_chk_fail
mov rdi, qword [rbx]
mov rbp, rax
cmp rdi, r13
je 0x4023b9
call sym.operatordelete
mov rdi, rbp
call sym.imp._Unwind_Resume
mov ecx, str.std::__cxx11::string_place_i64__i64__i64_
mov edx, 0x26
mov esi, str.sorted_code_control_tomconerly_tomconerly_1_1_B.cpp
mov edi, str.t____v_0_.first
call sym.imp.__assert_fail
mov eax, 0x10
jmp 0x402210
nop word cs:[rax + rax]
nop
cmp rsi, rdi
je 0x4024c1
lea r9, [rdi + 0x10]
cmp r9, rsi
je 0x4024c1
push rbx
lea r10, [rdi + 0x20]
jmp 0x402433
nop dword [rax]
jg 0x402418
cmp byte [rax - 8], r11b
jg 0x402459
mov rbx, r10
add r9, 0x10
add r10, 0x10
cmp rbx, rsi
mov qword [rax], r8
mov byte [rax + 8], r11b
je 0x4024c0
mov r8, qword [r9]
cmp r8, qword [rdi]
movzx r11d, byte [r9 + 8]
jl 0x402470
jg 0x402448
cmp r11b, byte [rdi + 8]
jl 0x402470
mov rax, r9
nop dword [rax + rax]
mov rdx, qword [rax - 0x10]
cmp r8, rdx
jge 0x402410
mov qword [rax], rdx
movzx edx, byte [rax - 8]
sub rax, 0x10
mov byte [rax + 0x18], dl
jmp 0x402450
nop dword [rax]
mov rdx, r9
mov rbx, r10
lea rax, [r9 - 0x10]
sub rdx, rdi
sar rdx, 4
test rdx, rdx
jle 0x4024a8
nop word cs:[rax + rax]
mov rcx, qword [rax]
sub rax, 0x10
mov qword [rax + 0x20], rcx
movzx ecx, byte [rax + 0x18]
mov byte [rax + 0x28], cl
sub rdx, 1
jne 0x402490
add r9, 0x10
add r10, 0x10
cmp rbx, rsi
mov qword [rdi], r8
mov byte [rdi + 8], r11b
jne 0x402433
pop rbx
ret
nop word cs:[rax + rax]
nop dword [rax]
mov r8, qword [rsi]
mov rax, qword [rdx]
cmp rax, r8
jg 0x4024e8
jl 0x402510
movzx r10d, byte [rdx + 8]
cmp byte [rsi + 8], r10b
jge 0x402510
mov r9, qword [rcx]
cmp rax, r9
jge 0x402530
mov rcx, qword [rdi]
mov qword [rdi], rax
mov qword [rdx], rcx
movzx ecx, byte [rdx + 8]
movzx eax, byte [rdi + 8]
mov byte [rdi + 8], cl
mov byte [rdx + 8], al
ret
nop dword [rax + rax]
mov r9, qword [rcx]
cmp r8, r9
jge 0x402568
mov rax, qword [rdi]
mov qword [rdi], r8
movzx edx, byte [rsi + 8]
mov qword [rsi], rax
movzx eax, byte [rdi + 8]
mov byte [rdi + 8], dl
mov byte [rsi + 8], al
ret
jg 0x40253d
movzx r11d, byte [rcx + 8]
cmp byte [rdx + 8], r11b
jl 0x4024f0
cmp r8, r9
jl 0x40254d
jg 0x402518
movzx eax, byte [rcx + 8]
cmp byte [rsi + 8], al
jge 0x402518
mov rax, qword [rdi]
mov qword [rdi], r9
movzx edx, byte [rcx + 8]
mov qword [rcx], rax
movzx eax, byte [rdi + 8]
mov byte [rdi + 8], dl
mov byte [rcx + 8], al
ret
nop dword [rax]
jg 0x402575
movzx r11d, byte [rcx + 8]
cmp byte [rsi + 8], r11b
jl 0x402518
cmp rax, r9
jl 0x40254d
jg 0x4024f0
movzx esi, byte [rcx + 8]
cmp byte [rdx + 8], sil
jl 0x40254d
jmp 0x4024f0
nop
lea rax, [rdx - 1]
push r14
push r13
push r12
push rbp
mov r10, rsi
mov rbp, rax
push rbx
shr rbp, 0x3f
add rbp, rax
sar rbp, 1
cmp rsi, rbp
jl 0x4025f0
jmp 0x4026f6
nop word cs:[rax + rax]
movzx r14d, byte [r11 + 8]
cmp r14b, byte [r9 + 8]
cmovle r11, r9
cmovle rbx, r13
cmovle rax, r12
shl r10, 4
add r10, rdi
cmp rax, rbp
mov qword [r10], rbx
movzx r9d, byte [r11 + 8]
mov byte [r10 + 8], r9b
jge 0x402630
mov r10, rax
lea r9, [r10 + 1]
lea r12, [r9 + r9]
shl r9, 5
add r9, rdi
lea rax, [r12 - 1]
mov r13, qword [r9]
mov r11, rax
shl r11, 4
add r11, rdi
mov rbx, qword [r11]
cmp rbx, r13
jg 0x4025d5
jge 0x4025c0
mov r11, r9
mov rbx, r13
mov rax, r12
jmp 0x4025d5
nop word cs:[rax + rax]
test dl, 1
jne 0x40264f
sub rdx, 2
mov r9, rdx
shr r9, 0x3f
add rdx, r9
sar rdx, 1
cmp rdx, rax
je 0x4026d0
cmp rax, rsi
jle 0x40268a
lea rdx, [rax - 1]
mov r9, rdx
shr r9, 0x3f
add r9, rdx
sar r9, 1
nop dword [rax]
mov r11, r9
shl r11, 4
add r11, rdi
mov rdx, qword [r11]
cmp rcx, rdx
jg 0x4026a0
jl 0x402682
cmp r8b, byte [r11 + 8]
jg 0x4026a0
shl rax, 4
lea r11, [rdi + rax]
mov qword [r11], rcx
mov byte [r11 + 8], r8b
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop word [rax + rax]
shl rax, 4
add rax, rdi
mov qword [rax], rdx
movzx edx, byte [r11 + 8]
mov byte [rax + 8], dl
lea rdx, [r9 - 1]
mov rax, rdx
shr rax, 0x3f
add rdx, rax
mov rax, r9
sar rdx, 1
cmp rsi, r9
jge 0x40268a
mov r9, rdx
jmp 0x402668
lea rax, [rax + rax + 1]
mov rdx, rax
shl rdx, 4
add rdx, rdi
mov r9, qword [rdx]
mov qword [r11], r9
movzx r9d, byte [rdx + 8]
mov byte [r11 + 8], r9b
mov r11, rdx
jmp 0x40264f
mov rax, rsi
shl rax, 4
test dl, 1
lea r11, [rdi + rax]
mov rax, rsi
je 0x402635
jmp 0x40268a
nop word cs:[rax + rax]
nop dword [rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x2016be]
push rbp
lea rbp, [rip + 0x2016be]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x402776
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x402760
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
jae 0x402811
movsxd rbx, dword [rdi + 0x73]
je 0x40281f
imul ebp, dword [rsi + 0x67], 0x75733a3a
jae 0x40282b
jb str.false
insb byte [rdi], dx
jae str.ans_i________
add byte [rcx + 0x6e], ah
outsb dx, byte [rsi]
jae 0x40281e
jo 0x402822
and byte [rip + 0x5227203d], bh
add byte [rcx + 0x6e], ah
outsb dx, byte [rsi]
jae 0x40282c
outsb dx, byte [rsi]
pop rbp
and byte [rip + 0x5227203d], bh
add byte [rcx + 0x6e], ah
outsb dx, byte [rsi]
jae 0x40283a
jo 0x40283e
and byte [rip + 0x5927203d], bh
add byte [rcx + 0x6e], ah
outsb dx, byte [rsi]
jae 0x402848
outsb dx, byte [rsi]
pop rbp
and byte [rip + 0x5927203d], bh
add byte [rcx + 0x6e], ah
outsb dx, byte [rsi]
jae 0x402856
jo str.Case___lld:__s_n
and byte [rip + 0x4227203d], bh
add byte [rcx + 0x6e], ah
outsb dx, byte [rsi]
jae 0x402864
outsb dx, byte [rsi]
pop rbp
and byte [rip + 0x4227203d], bh
add byte [rax + 0x3d], dh
je 0x402835
cmp eax, 0x5b76203d
xor byte [rbp + 0x2e], bl
imul si, word [rdx + 0x73], 0x74
outsb dx, byte [rsi]
jae 0x402882
imul ebx, dword [rbp + 0x20], 0x27203d21
and byte [rdi], ah
add byte [rip + 0x646c6c], ah
and eax, 0x646c6c
jb 0x40289e
je 0x4028a1
jb 0x40285e
and byte ds:[rax], dh
add byte [rbx + 0x61], al
jae 0x4028ab
and byte [rbx], ah
and eax, 0x3a646c6c
and byte [rcx + 0x4d], cl
push rax
push r11
push rbx
or r8b, byte [r8]
jae 0x4028c3
and byte [rbx], ah
and eax, 0x3a646c6c
and byte [rip + 0xa73], ah
add byte [rax], al
add byte [rax], al
add byte [rip + 0x5f203a73], ah
and eax, 0x5f203a73
pop rdi
jo 0x4028e7
jae 0x40289a
sub byte [rdi + 0x68], dh
imul esp, dword [rbx + 0x68], 0x20736920
and eax, 0x2029757a
and byte ds:[rax + rbp*2 + 0x69], dh
jae 0x4028bd
jae 0x4028fc
jp 0x4028fa
sub byte [rcx], ch
and byte [rax], ch
ja 0x402903
imul esp, dword [rbx + 0x68], 0x20736920
and eax, 0x29757a
add byte [rbx + 0x6f], dh
jae 0x402919
jb 0x402920
pop rdi
movsxd rbp, dword [rdi + 0x64]
movsxd rbp, dword [rdi + 0x6e]
je 0x40292b
outsd dx, dword [rsi]
insb byte [rdi], dx
je 0x40292d
insd dword [rdi], dx
movsxd rbp, dword [rdi + 0x6e]
jb 0x402931
jns 0x4028f6
je str.ans_p_____ans_i_____ans_n_____ans_i_
insd dword [rdi], dx
movsxd rbp, dword [rdi + 0x6e]
jb 0x40293c
jns 0x402931
xor dword [rdi + 0x31], ebx
movsxd rsi, dword cs:[rax + 0x70]
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x61], ah
jae 0x40294d
movsxd rbx, dword [rdi + 0x73]
je 0x40295b
imul ebp, dword [rsi + 0x67], 0x4d5f3a3a
pop rdi
movsxd rbp, dword [rdi + 0x6e]
jae 0x40296a
jb 0x40296d
movsxd rsi, dword [rax + 0x6e]
jne 0x40296a
insb byte [rdi], dx
and byte [rsi + 0x6f], ch
je 0x402924
jbe 0x402967
insb byte [rdi], dx
imul esp, dword [rax + rax], 0
add byte [rcx + 0x6e], ah
outsb dx, byte [rsi]
jae 0x402942
jae 0x40297f
jp 0x40297d
sub byte [rcx], ch
and byte [rip + 0x2052203d], bh
sub esp, dword [rax]
and byte [r11], r13b
and byte [rcx + 0x20], bl
sub esp, dword [rax]
and byte [r11], r13b
and byte [rdx + 0x20], al
sub esp, dword [rax]
push rsi
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x6e], ah
outsb dx, byte [rsi]
jae 0x402997
jo 0x40299b
and byte [rcx], ah
cmp eax, 0x736e6120
pop rbx
imul ebx, dword [rbp + 0x20], 0x61202626
outsb dx, byte [rsi]
jae 0x4029ab
outsb dx, byte [rsi]
pop rbp
and byte [rcx], ah
cmp eax, 0x736e6120
pop rbx
imul ebx, dword [rbp], 0x52000000
push rdx
and byte [rip + 0x2072203d], bh
and byte es:[rdi + 0x20], cl
cmp eax, 0x206f203d
and byte es:[rcx + 0x20], bl
cmp eax, 0x2079203d
and byte es:[rdi + 0x20], al
cmp eax, 0x2067203d
and byte es:[rdx + 0x20], al
cmp eax, 0x2062203d
and byte es:[rsi + 0x20], dl
cmp eax, 0x76203d
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x6e], ah
outsb dx, byte [rsi]
jae 0x4029ff
imul ebx, dword [rbp + 0x20], 0x61203d21
outsb dx, byte [rsi]
jae 0x402a09
sub byte [rcx + 0x2b], ch
xor dword [rcx], ebp
and eax, 0x2e736e61
jae 0x402a23
jp 0x402a21
sub byte [rcx], ch
pop rbp
add byte [rip + 0x20646c6c], ah
and eax, 0x20646c6c
and eax, 0x20646c6c
and eax, 0x20646c6c
and eax, 0x20646c6c
and eax, 0x20646c6c
and eax, 0x20646c6c
and eax, 0x646c6c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x6e], ch
imul ebp, dword [rsi + 0x74], 0x69616d20
outsb dx, byte [rsi]
sub byte [rcx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jbe 0x402a91
imul esp, dword [rax + 0x63], 0x6b636568
sub byte [rbx + 0x74], dh
cmp bh, byte fs:[rdx]
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
cmp bh, byte [rdx]
jae 0x402aaf
jb 0x402aa6
outsb dx, byte [rsi]
sub al, 0x20
imul esi, dword [rsi], 0x69202c34
xor al, 0x2c
and byte [rcx + 0x36], ch
xor al, 0x2c
and byte [rcx + 0x36], ch
xor al, 0x2c
and byte [rcx + 0x36], ch
xor al, 0x2c
and byte [rcx + 0x36], ch
xor al, 0x29
add byte [rax], al
jae 0x402ad6
cmp bh, byte fs:[rdx]
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
cmp bh, byte [rdx]
jae 0x402ae4
jb 0x402adb
outsb dx, byte [rsi]
and byte [edx + 0x65], dh
jo 0x402ae5
movsxd rsp, dword [rbp + 0x28]
jae 0x402af3
cmp bh, byte fs:[rdx]
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
cmp bh, byte [rdx]
jae 0x402b01
jb 0x402af8
outsb dx, byte [rsi]
sub al, 0x20
movsxd rbp, dword [rax + 0x61]
jb 0x402ac4
and byte [rbx + 0x68], ah
jb 0x402aca
and byte [rcx + 0x36], ch
xor al, 0x29
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x74], dh
jae 0x402b36
cmp bh, byte fs:[rdx]
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
cmp bh, byte [rdx]
jae 0x402b44
jb 0x402b3b
outsb dx, byte [rsi]
and byte [eax + 0x6c], dh
movsxd rsp, dword [rbp + 0x28]
imul esi, dword [rsi], 0x69202c34
xor al, 0x2c
and byte [rcx + 0x36], ch
xor al, 0x29
add byte [rax], al
add byte [rax], al
add dword [rbx], ebx
add edi, dword [rbx]
push 0xc000000
add byte [rax], al
add byte [rdi + rbx*8], dh
push qword [rax + rax - 0x1fac0000]
cld
add al, byte [rax]
add byte [rsp + rbp*8 + 0x84ffff], al
add byte [rax], al
test ch, ch
cld
add byte [rax], al
add byte [rdx + rsi*8], dl
call qword [rcx + rax]
add byte [rsp + rsi*8 + 0x21cffff], ah
add byte [rax], al
test dh, dh
jmp qword [rdx + rax - 0x6fc0000]
jmp qword [rcx + rax - 0x61c0000]
inc esp
add dword [rax], eax
add byte [rdx + rdi*8 + 0x1dcffff], ah
add byte [rax], al
xor al, 0xfc
inc dword [rbx + rax - 0x35c0000]
dec esp
add eax, dword [rax]
add byte [rax + rax], dl
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x402b77
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
clc
jmp 0x402b7a
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x402ba7
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
js 0x402b88
call qword [rax]
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x402be9
add esi, eax
or al, byte [rax]
add ebx, dword [rbx]
or al, 7
or byte [rax + 0x54000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
sub ah, 0xff
inc dword [rbp + 0x4000004]
add byte cs:[rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx - 0x3ff1b8f9], al
add dword [rbx], eax
rol dword [rcx], cl
or cl, byte [rsi]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rdi + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax + rax - 0xf480000], bh
inc dword [rcx + 2]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx + 0x600e4707], al
add esi, dword [rdi]
add dword [rdx], ecx
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rsi + 0xb], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
or al, 1
add byte [rax], al
pop rax
idiv edi
call rbx
add byte [rax], al
add byte [rax], al
push rdi
adc byte [rbx - 0x3c45fdfe], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
sub al, 1
add byte [rax], al
sbb al, bh
mov edi, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bh
add byte [rax], al
add dword [rax], r8d
add al, al
clc
inc dword [rdx + 1]
adc byte [rsi + 0x180e4202], cl
lea eax, [rbx]
and byte [rsp + rax - 0x79d7f1bf], cl
add eax, 0x83300e47
add dh, al
or cl, byte [rsi]
sub byte [rcx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rdi + 0xb], al
add byte [rax], al
add byte [rax + rax + 0x1840000], al
add byte [rax], al
xor dl, 0xff
call rdi
add dword [rax], eax
add byte [rax], al
push rsp
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx + 0x500e4707], al
movsxd rcx, dword [rsi]
pop rax
jo 0x402d50
pop rax
push rax
add dl, cl
pop rax
push rsi
pop rax
push rax
pop rax
pop rax
pop rax
push rax
cmp byte [rcx - 0x3d], al
xor byte [rcx - 0x3a], al
sub byte [rdx - 0x34], al
and byte [rdx - 0x33], al
sbb byte [rdx - 0x32], al
adc byte [rdx - 0x31], al
or byte [rcx + 0xe], al
push rax
add dword [rdi], -0x7a
mov word [rip + 0x38e048d], es
pop qword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add ah, cl
add dword [rax], eax
add al, bl
push qword [rdx + rax]
add byte [rdi + rsi*8], al
add byte cs:[rdx + 0xe], al
adc byte [rsi + 0x180e4502], cl
lea eax, [rbx]
and byte [rsp + rax - 0x79d7f1bb], cl
add eax, 0x83300e41
push rdx
jo 0x402dc4
movsb byte [rdi], byte ptr [rsi]
js 0x402e0e
add byte [rcx], 0x4b
js 0x402e13
jo 0x402dd3
adc al, byte [rcx]
or cl, byte [rsi]
xor byte [rcx + 0xe], al
sub byte [rcx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
test byte [rax], al
add byte [rax], al
and al, 2
add byte [rax], al
push rax
jmp qword [rcx]
or al, 0
add byte [rcx + rcx], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx - 0x6ff1b8f9], al
add al, 2
pop rax
cwde
add al, 0x49
movabs al, byte [0xe4204980e8c0204]
nop
add al, 3
add cl, byte ds:[rdx]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rbx + 0xb], al
add ebx, dword [rdx]
add ecx, dword [rsi]
cwde
add al, 0x46
movabs al, byte [0x900e4104980e6304]
add al, 3
push rdx
add dword [rsi], ecx
cwde
add al, 0x59
movabs al, byte [0x900e4104980e5304]
add al, 0
add byte [rax], r8b
add ah, ch
add al, byte [rax]
add byte [rax + 0x65fffff8], ch
add byte [rax], al
add byte [rax], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x402eb2
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
xor al, 3
add byte [rax], al
sar al, 1
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
in al, dx
add bl, byte [rbp + 0x88402]
enter 0x505, -0x2f
or byte [rax], al
fadd dword [rsi]
add eax, 0x95000884
mov es, word [rcx]
add byte [rax], al
or byte [rcx], 5
test byte [rax], cl
add bh, bh
inc dword [rcx]
cmp eax, dword [rip + 0x5620000]
mov ecx, 0x4cc0004
add eax, 0xffff0000
add dword [rdi + 0x2e], ebp
insb byte [rdi], dx
add byte [rax], al
mov dword [rip + 0x178605], 0x5068f
add cl, ah
add eax, 0x80001786
add eax, 0x7b90000
add eax, 0xb3001781
or byte [rip - 0x7cffe780], al
or dword [rip - 0x1cffe904], eax
or dword [rip - 0x40ffe83a], eax
or al, byte [rip - 0x62ffe909]
or eax, dword [rip - 0x56ffe85b]
or al, 0xa0
add dword [rsi + rdx - 0x57f06000], eax
add dword [rsi + 0x10ff0017], eax
add eax, 0xd2001684
adc dword [rip - 0x59ffe87f], eax
adc al, byte [rip - 0x7dffe909]
adc eax, dword [rip - 0x47ffe904]
adc al, 5
xchg byte [rdi], dl
add dl, dh
add eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, ah
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or eax, 0
add byte [rax], al
add byte [rdi + 0x40], dl
add byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
cmp eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 0x4004], bh
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov esi, 2
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], bh
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], ah
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4007], ah
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rsi + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or r8b, byte [rax]
add byte [rax], al
add byte [rax], al
push rsi
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
jbe 0x404044
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400a], al
add byte [rax], al
add byte [rsi + 0x400a], dl
add byte [rax], al
add byte [rsi + 0x400a], ah
add byte [rax], al
add byte [rsi + 0x400a], dh
add byte [rax], al
add dh, al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
out 0xa, al
add byte [rax], al
add byte [rax], al
add dh, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword es:[rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x404120
je 0x404129
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x404137
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x404134
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 0x4004], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rsi + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax + 0x4007], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax + 8], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add byte [rax + 8], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add al, bh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, 0
and byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400b3000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rdi + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc byte [rax], al
movabs al, byte [0x4027]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add ah, ch
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, byte [rax]
pop rax
sub eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], dl
cmp eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, 0x603df800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], bl
add byte [rax + 0x6040], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add byte [rax + 0x6040], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x4017], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], ah
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rbx], bl
add byte [rax + 0x6040], ch
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add dword [rax], eax
adc eax, 0x603df800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0x18], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
cmp eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsd dword [rdi], dword ptr [rsi]
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ch
add byte [rax], dl
add byte [rax + 0x2a], ah
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
and byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rdi], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 1], bl
add byte [rax], al
add al, byte [rax]
add byte [rax + 0x401f], dl
add byte [rax], al
add bh, dl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add dl, ch
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add al, al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 2
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dh
add al, byte [rax]
add byte [rcx], al
add byte [rdx], dl
add al, dl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 2], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 2], cl
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
in al, dx
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 2], dh
add byte [rax], al
add byte [rax], al
adc al, 0
clc
cmp eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg dword [rdx], eax
add byte [rax], al
add byte [rax], al
adc al, 0
cmp eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 4], dh
add byte [rax], al
and byte [rax], al
sbb al, byte [rax]
cwde
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x12000002], ah
add byte [rsi], cl
add byte [rax + 0x4027], dl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 4], bh
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x17], dh
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x12000002], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, ah
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], al
sbb eax, 0x40
add byte [rax], al
add dword [rdx], 0
add byte [rax], al
sub dword [rbx], eax
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rbx], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add r8, qword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 3], ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jnp 0x4046b5
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, ebp
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x12000002], ch
add byte [rdi], cl
add byte [rdi + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jmp 0x12404700
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add al, 0
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x21], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add al, 0
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dh
add al, 0
add byte [rcx], dl
add byte [rax], dl
add byte [rax + 0x4027], ah
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 4], bl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jae 0x40478e
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
cwde
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x22000004], al
add byte [rsi], cl
add byte [rax + 0x4025], dl
add byte [rax], al
add byte [rdx + 1], al
add byte [rax], al
add byte [rdi], al
add eax, 0x2110000
sbb al, byte [rax]
test al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add eax, 0x2110000
sbb al, byte [rax]
movabs al, byte [0x6040]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add eax, 0x120000
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rip + 0x100000], al
sbb eax, dword [rax]
test al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x120000], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rax
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], dl
add byte [rbx], bl
add byte [rax + 0x6040], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, dl
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, byte [rax]
add al, dh
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
rol dword [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
add byte [rax], al
and al, byte [rax]
add al, dl
and al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rdi], bh
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x18], dh
add byte [rax], al
add byte [rax], al
add byte [rbp + 4], al
add byte [rax], al
add byte [rdi + rax], bh
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, dl
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
test al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, bl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sti
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bh
or byte [rax], al
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rcx], ah
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add eax, 0x120000
or eax, dword [rax]
clc
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x72], ah
je 0x404a10
je 0x404a14
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x4049c6
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x404a44
jb 0x404a4a
pop rdi
jne 0x404a53
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x404a4d
je 0x404a49
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x404a69
jb 0x404a6f
pop rdi
jne 0x404a78
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x404a7b
jns 0x404a6b
outsb dx, byte gs:[rsi]
je 0x404a82
jns 0x404a12
jb 0x404a76
insd dword [rdi], dx
pop rdi
jne 0x404a88
insd dword [rdi], dx
jns 0x404a1e
pop rdi
pop rdi
jb 0x404a84
insd dword [rdi], dx
pop rdi
jne 0x404a96
insd dword [rdi], dx
jns 0x404a8b
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404a96
jns 0x404a96
outsb dx, byte gs:[rsi]
je 0x404aad
jns 0x404a3d
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x5a], bl
pop rdx
jb 0x404aae
jo 0x404ab7
movsxd rsp, dword [rbp + 0x4e]
push rbx
je 0x404a89
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404ac8
movsxd rbx, dword [rdi + 0x73]
je 0x404ad6
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404ad1
je 0x404ae6
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
movsxd r12, dword [r11 + 0x6c]
xor dword [r9], r15d
pop rdi
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
pop rdx
xor eax, 0x63656863
imul ecx, dword [rsi + 0x53], 0x74
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404b1f
movsxd rbx, dword [rdi + 0x73]
je 0x404b2d
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404b28
je 0x404b3d
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
insb byte [rdi], dx
insb byte [rdi], dx
insb byte [rdi], dx
insb byte [rdi], dx
insb byte [rdi], dx
insb byte [rdi], dx
xor dword [r9], r15d
pop rdi
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x404b2c
pop rdi
pop rdi
imul ebp, dword [rsi + 0x74], 0x6f736f72
jb 0x404b7b
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
outsd dx, dword [rsi]
jo 0x404b56
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x404b74
movsxd rdi, dword [rax + 0x78]
xor dword [rdi], esi
pop rdi
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
jb 0x404b8d
insb byte [rdi], dx
pop rdi
imul esi, dword [rbp + 0x72], 0x726f7461
push r8
push rbx
je 0x404b64
jo 0x404b93
imul esi, dword [rdx + 0x49], 0x5345636c
je 0x404b71
jbe 0x404ba2
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push r11
xor ebx, dword [rdi + 0x53]
push r11
xor ebx, dword [rdi + 0x45]
insb byte [rdi], dx
push rbx
xor byte [rdi + 0x35], bl
pop rdi
pop rdi
outsd dx, dword [rsi]
jo 0x404bcd
xor dword [rip + 0x6574495f], esi
jb 0x404bc1
insb byte [rdi], dx
jae 0x404bd9
pop rdi
imul esi, dword [rbp + 0x72], 0x54764545
pop rdi
push rbx
pop rdi
push rsp
xor byte [rdi + 0x54], bl
xor dword [rdi + 0x2e], ebx
imul esi, dword [rbx + 0x72], 0x34352e61
add byte [rdi + 0x5a], bl
pop rdx
xor eax, 0x63616c70
xor eax, 0x31787863
xor dword [rsp + rbp*2 + 0x6c], ebp
xor dword [r9], r15d
pop rdi
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
pop rdx
xor al, 0x6d
imul ebp, dword [rsi + 0x45], 0x5f5f3931
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404c7a
jns 0x404c7a
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404c8b
jns 0x404c8b
jae 0x404ca2
jb 0x404ca5
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdx
push rbx
je 0x404c82
xor al, 0x5f
pop rdi
je 0x404cbd
jb 0x404cc6
ja 0x404cb8
outsd dx, dword [rsi]
jne 0x404cd0
pop rdi
outsd dx, dword [rsi]
pop di
jb 0x404cc3
outsb dx, byte [rsi]
pop rdi
insw word [rdi], dx
je 0x404cba
movsxd rdi, dword [r10 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rax]
add byte [rdi + 0x5a], bl
xor eax, 0x63656863
imul ecx, dword [rsi + 0x53], 0x74
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404d00
movsxd rbx, dword [rdi + 0x73]
je 0x404d0e
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404d09
je 0x404d1e
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
insb byte [rdi], dx
insb byte [rdi], dx
insb byte [rdi], dx
insb byte [rdi], dx
insb byte [rdi], dx
insb byte [rdi], dx
add byte [rdi + 0x5f], bl
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x404d3e
jb 0x404d41
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x404d33
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x404d54
jae 0x404ce4
pop rdi
pop rdx
insb byte [rdi], dx
push rax
jbe 0x404d2b
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
jae 0x404d70
jb 0x404d74
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x705f5f00
jb 0x404d81
outsb dx, byte [rsi]
je 0x404d81
pop rdi
movsxd rbp, dword [rax + 0x6b]
pop r15
xor ch, byte [rsi]
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404d6a
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404da9
movsxd rbx, dword [rdi + 0x73]
je 0x404db7
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404db2
je 0x404dc7
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
movsxd rsi, dword [rdx + 0x65]
je 0x404dd1
push r10
insd dword [rdi], dx
insd dword [rdi], dx
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x404e01
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x355a5f00
jo 0x404e11
movsxd rsp, dword [rbp + 0x42]
xor eax, 0x31787863
xor dword [rsp + rbp*2 + 0x6c], ebp
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x404e21
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x404e49
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x404e5d
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x404e72
pop rdi
jae 0x404e88
jb 0x404e8b
add byte [rdi + 0x5a], bl
push rbx
je 0x404e4e
xor ebx, dword [rdi + 0x5f]
push 0x75
jae 0x404e9a
pop rdi
push 0x49706165
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x404e93
movsxd rdi, dword [rax + 0x78]
xor dword [rdi], esi
pop rdi
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
jb 0x404eac
insb byte [rdi], dx
pop rdi
imul esi, dword [rbp + 0x72], 0x726f7461
push r8
push rbx
je 0x404e83
jo 0x404eb2
imul esi, dword [rdx + 0x49], 0x5345636c
je 0x404e90
jbe 0x404ec1
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push r11
xor ebx, dword [rdi + 0x53]
push r11
xor ebx, dword [rdi + 0x45]
insb byte [rdi], dx
push rbx
xor ebx, dword [rdi + 0x4e]
push rbx
xor byte [rdi + 0x35], bl
pop rdi
pop rdi
outsd dx, dword [rsi]
jo 0x404eef
xor dword [rip + 0x6574495f], esi
jb 0x404ee3
insb byte [rdi], dx
jae 0x404efb
pop rdi
imul esi, dword [rbp + 0x72], 0x54764545
pop rdi
push rsp
xor byte [rdi + 0x53], bl
pop r15
push rsp
xor dword [rdi + 0x54], ebx
xor bl, byte [rdi]
pop rdi
pop rdi
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
jae 0x404f1f
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5f5f0074
jae 0x404f40
pop rdi
jae 0x404f44
jb 0x404f47
add byte [rdi + 0x5f], bl
jae 0x404f4c
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404f26
cmp dword [rdi + 0x5f], ebx
je 0x404f62
jb 0x404f6b
ja 0x404f5d
insb byte [rdi], dx
outsd dx, dword [rsi]
imul esp, dword [ebx + 0x5f], 0x6f727265
jb 0x404f5a
movsxd rax, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404f57
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404f96
movsxd rbx, dword [rdi + 0x73]
je 0x404fa4
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404f9f
je 0x404fb4
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
jo 0x404fc6
outsb dx, byte gs:[rsi]
push r8
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x404fac
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404feb
movsxd rbx, dword [rdi + 0x73]
je 0x404ff9
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404ff4
je 0x405009
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rdx], esi
pop rdi
pop r15
movsxd rbp, dword [rdi + 0x6e]
jae 0x405022
jb 0x405025
movsxd rsi, dword [rbp + rax*2 + 0x6d]
movsxd rax, dword [rax + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x404ffc
pop rdi
pop rdi
imul ebp, dword [rsi + 0x73], 0x69747265
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x405049
jb 0x405050
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x405044
movsxd rdi, dword [rax + 0x78]
xor dword [rdi], esi
pop rdi
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
jb 0x40505d
insb byte [rdi], dx
pop rdi
imul esi, dword [rbp + 0x72], 0x726f7461
push r8
push rbx
je 0x405034
jo 0x405063
imul esi, dword [rdx + 0x49], 0x5345636c
je 0x405041
jbe 0x405072
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push r11
xor ebx, dword [rdi + 0x53]
push r11
xor ebx, dword [rdi + 0x45]
push rbx
xor byte [rdi + 0x35], bl
pop rdi
pop rdi
outsd dx, dword [rsi]
jo 0x40509c
xor dword [rip + 0x6574495f], esi
jb 0x405090
insb byte [rdi], dx
jae 0x4050a8
pop rdi
imul esi, dword [rbp + 0x72], 0x54764545
pop rdi
push rbx
pop rdi
push rsp
xor byte [rdi], bl
pop rdi
pop rdx
push rbx
je 0x40507d
xor bl, byte [rdi + 0x5f]
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x4050b7
pop rdi
insd dword [rdi], dx
imul esp, dword fs:[rcx + 0x6e], 0x5f6f745f
imul si, word [rdx + 0x73], 0x4974
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x4050ca
movsxd rdi, dword [rax + 0x78]
xor dword [rdi], esi
pop rdi
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
jb 0x4050e3
insb byte [rdi], dx
pop rdi
imul esi, dword [rbp + 0x72], 0x726f7461
push r8
push rbx
je 0x4050ba
jo 0x4050e9
imul esi, dword [rdx + 0x49], 0x5345636c
je 0x4050c7
jbe 0x4050f8
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push r11
xor ebx, dword [rdi + 0x53]
push r11
xor ebx, dword [rdi + 0x45]
push rbx
xor byte [rdi + 0x35], bl
pop rdi
pop rdi
outsd dx, dword [rsi]
jo 0x405122
xor dword [rip + 0x6574495f], esi
jb 0x405116
insb byte [rdi], dx
jae 0x40512e
pop rdi
imul esi, dword [rbp + 0x72], 0x54764545
pop rdi
push rbx
pop rdi
push rbx
pop rdi
push rbx
pop rdi
push rsp
xor byte [rdi], bl
pop rdi
pop rdx
jb 0x40513c
jo 0x405145
movsxd rsp, dword [rbp + 0x4e]
push rbx
je 0x405117
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x405156
movsxd rbx, dword [rdi + 0x73]
je 0x405164
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40515f
je 0x405174
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
movsxd r12, dword [r11 + 0x6c]
add byte [rdi + 0x5a], bl
push rbx
je 0x405151
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x405190
movsxd rbx, dword [rdi + 0x73]
je 0x40519e
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x405199
je 0x4051ae
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
insd dword [rdi], dx
jne 0x4051c4
je 0x4051b8
insd dword [rdi], dx
insd dword [rdi], dx
push rax
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x4051d2
add byte [rdi + 0x5f], bl
js 0x4051ef
pop rdi
jo 0x4051df
jb 0x4051ef
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
outsb dx, byte [rsi]
ja 0x405205
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x405214
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x405227
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
insd dword [rdi], dx
insd dword [rdi], dx
movsxd rsi, dword [rax + 0x79]
pop r15
xor ch, byte [rsi]
xor dword [rax + rax], esi
insd dword [rdi], dx
imul ebp, dword [rsi], 0x79732e00
insd dword [rdi], dx
je 0x40523e
add byte [rsi], ch
jae 0x405256
jb 0x405258
add byte [rsi], ch
jae 0x405252
jae 0x405260
jb 0x405262
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x405263
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x405271
outsb dx, byte cs:[esi]
jne 0x40523f
jne 0x40527d
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x40524d
push 0x687361
jns 0x405296
jae 0x4052a3
insd dword [rdi], dx
add byte [rsi], ch
jns 0x40529e
jae 0x4052a6
jb 0x405234
outsb dx, byte cs:[esi]
jne 0x405267
jbe 0x4052a0
jb 0x4052b0
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x405274
jbe 0x4052ad
jb 0x4052bd
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x4052b8
insb byte [rdi], dx
jns 0x4052c7
add byte [rsi], ch
jb 0x4052c2
insb byte [rdi], dx
jo 0x4052ce
je 0x405264
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x40529d
outsd dx, dword [esi]
je 0x405273
je 0x4052db
js 0x4052ec
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x4052f1
je 0x4052e7
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x40530a
jo 0x40531e
pop rdi
je 0x40530e
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x40531c
jns 0x4052bd
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x405338
jns 0x4052c9
push 0x63
jb 0x4052ce
jns 0x405340
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x40534a
je 0x4052e0
je 0x405346
add byte [rsi], ch
jae 0x40535d
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x4052f4
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, bh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, 0x4004
add byte [rax], al
add byte [rax + 4], bh
add byte [rax], al
add byte [rsi + 2], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4007], ah
add byte [rax], al
add byte [rax + 7], ah
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], bh
add byte [rax], al
add byte [rax], al
add byte [rax + 8], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], 0
add byte [rax], al
add byte [rax], al
add byte [rip + 0x19000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
clc
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
and byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
xor byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x40], dl
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4027], ah
add byte [rax], al
add byte [rax + 0x27], ah
add byte [rax], al
add byte [rdx + 3], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, dx
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
in al, dx
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x2b], bl
add byte [rax], al
add byte [rax], al
add byte [rax + 0x2b], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
jl 0x40579d
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
add byte cs:[rax], al
add byte [rax], al
add ah, dl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
test al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
cmp eax, 0x60
add byte [rax], al
cmp eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 0, eax
add byte [rax], al
sldt word [rax]
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
cmp eax, 0x60
add byte [rax], al
clc
cmp eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte ds:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte ds:[rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x60], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cwde
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6040], bl
add byte [rax], al
add byte [rax + 0x40], bl
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6040], ch
add byte [rax], al
add byte [rax + 0x40], ch
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x40], ch
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rcx
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, 8
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rip + 0x8000000], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x49], bl
add byte [rax], al
add byte [rsi], bh
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
