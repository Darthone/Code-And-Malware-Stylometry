call 0x402190
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401fa8
add ebx, ebx
je 0x401f5e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x401f96
cmp rbp, -4
ja 0x401f96
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x401f7e
add ecx, 4
mov dl, byte [rax]
je 0x401fa6
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x401f96
ret
cld
pop r11
cmp r8b, 2
je 0x401fbe
jmp 0x40203b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x401fce
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401fb6
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401fe6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401fd3
sub eax, 3
jb 0x402004
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40203b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x40202b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x402029
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x402018
cmp rbp, -0xd00
adc ecx, eax
call 0x401f6a
jmp 0x401fbe
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x402114
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x4020b2
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x4020fe
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x4020d1
push 0x3a707474
jne 0x40212a
js 0x4020ea
jae 0x402124
outsb dx, byte cs:[rsi]
je 0x4020e3
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x402151
jb 0x402143
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x40216e
jb 0x402181
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21594b
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21594b
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x40204c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x402177
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x402125
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f221f
jb 0x402237
movsxd rbp, dword [rdi]
jae 0x402231
insb byte [rdi], dx
js 0x402237
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x402217
cmp rsi, rcx
jae 0x40221f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x4021fe
cmp al, 0x8f
ja 0x4021fe
cmp byte [rsi - 2], 0xf
je 0x402204
sub al, 0xe8
jg 0x402201
push rdi
cmp al, 1
ja 0x4021ec
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x4021ef
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x40221c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x402273
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c26f1
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x4022b7
mov al, 0xa
jmp 0x4022b7
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x402293
inc ebx
mov al, 0
jmp 0x4022bb
mov al, 2
jmp 0x4022bb
mov al, 3
jmp 0x4022bb
mov al, 0x3c
jmp 0x4022bb
push rcx
rcr ah, 1
fstp st(7)
jle 0x4022fc
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40230e
jg 0x402300
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a7a83
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x40235a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb74d7
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x402362
cmp esi, 0x21585055
jne 0x402366
jge 0x402358
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x40235b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x40235f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40240b
pop rcx
or al, 0x3b
jb 0x402411
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x402383
jmp 0x402385
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x36622c6
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5450e
in eax, dx
jg 0x4023bd
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x402403
mov bh, 0x2a
add edi, 0x10
jmp 0x402400
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40243d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x402479
jne 0x402490
fstpnce st(6), st(0)
jle 0x402459
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x40248f
jrcxz 0x4024c3
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1c427
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x402542
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x402502
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58296ad7
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x402575
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40250f
and ecx, 7
or al, 0xeb
jae 0x40257a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x4025af
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x4025ed
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x4025a6
push rax
call 0xffffffff868d2293
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x4025b0
std
cmp edi, esi
xchg eax, edi
jle 0x402605
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96b91
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x402603
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x4025f1
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40261a
js 0x40265a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x4026ec
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad3927
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40270d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x402712
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc221c4
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4026a0
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
xchg eax, ebp
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add al, al
and byte [rax + 0x92], 0
add byte [rax], al
add byte [rax], ah
add edi, edi
add byte [rbx], 0
or edx, dword [rcx]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4027c6
je 0x4027cf
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402798
mov dh, 0x7d
jbe 0x402797
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x4027d0
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x5600006], bl
add byte [rsi + 9], ah
enter -0x6fd9, 0xf
or byte [rax], al
movabs al, byte [0x7c813e40a300009]
or al, byte [rax]
or rax, qword [rax]
jo 0x4027c7
or esp, esp
add ecx, dword [rax + rax]
nop
or eax, 0xf90e1000
add al, 0xf2
add dword [rsi], ecx
add byte [rax], ah
lldt sp
jl 0x4027d5
stc
add byte [rax], dl
add al, ah
adc dword [rax], eax
lodsb al, byte [rsi]
jle 0x402760
adc al, byte [rax]
or byte [rdi + 0x13], al
add byte [rbp + rdx*2 + 0x201fc803], dh
adc al, 0
pop rbp
adc eax, 0xc813e403
add al, bh
add byte [rax], al
pop rsi
mov sil, 9
in al, 0x17
add byte [rax], cl
sbb byte [rdi + 0x5f], al
in al, 3
insb byte [rdi], dx
cmp dword [rcx], ebx
sbb al, byte [rax]
sal byte [rdx + 0x1b09e409], 1
add al, ah
sbb al, 0x13
fcom dword [rcx + 0x17019bbc]
add al, 0
int1
dec dword [rbx + rbx]
movsb byte [rdi], byte ptr [rsi]
imul edi, dword [rax - 0x68e6404e], 0x92195002
rol dword [rsi + 0x2e90171b], 0x59
insb byte [rdi], dx
rol byte [rdi + rbx*2 - 0x59], 1
mov byte [rsi + r14*2], cl
add dword [rdi], edx
push rbx
xchg rax, r9
and dword [rcx], ebx
in al, dx
jp 0x402893
lock xchg byte [rsi], dh
test byte [rbp + 9], bl
xchg eax, edi
movsd dword [rdi], dword ptr [rsi]
xlatb
stosd dword [rdi], eax
ja 0x402866
and dword ss:[rdi], edi
adc byte [rax], al
add byte [rcx + 0x40], al
rol byte [rdx - 0x14], 0x90
ror dword [rsi + 0x2a], 0x2f
sbb dword [rsp + rbx + 0x14944e4], 0x60
or al, 0x32
enter -0x5ce0, -0x60
or esi, dword [rdx + 0x67250de3]
ret 0x872f
mov al, 0x55
ret 0x1778
rcl byte [rdi], 1
scasb al, byte [rdi]
mov eax, ds
add esp, ebx
enter -0x1019, -0x1f
jnp 0x4028ff
add eax, 0x67140502
xchg byte [rax + rsi*4 + 0x29], ah
lock sub dword [rip + 0x168cac3], ecx
mov bh, 0xd7
xchg dword [rax + rbp*8 + 6], ebp
nop
and byte [rdx], dh
and ch, byte [rdi + 0x20e421f8]
sbb dword [rbp + 0x6a6e1706], 0x30
sbb esp, esp
shr dh, 0xb0
sub eax, 0xe4f2720e
and byte [rdx], ch
add edx, dword [rax + rsi]
push rsi
nop
xchg eax, ebx
or dword [rdx + rdi*2], 0xffffffc4
and eax, 0xacaec50
cmpsb byte [rsi], byte ptr [rdi]
add byte [r10 - 0x637cc4d1], r15b
sbb al, 0xeb
jb 0x4028bf
pop rdi
or dword [rdx + rsi*2], 0xffffffb2
rol byte [rax + 2], 1
ficom word [rax]
and dword [rax + rdx*4 - 0x6d], esp
sub esp, dword [rsi]
stc
sbb al, 0xe4
in al, 0xd9
add al, 0x2f
sahf
and bl, byte [rbx]
jmp 0x4028da
push rdi
leave
shr dword [rsi], -0x1c
and eax, 0x3680179b
ret 0x4f4f
retf -0x1fc
js 0x4029a3
add eax, 0x4f16395f
push rdx
add al, 0x49
pop rbp
enter 0x593, 0x4b
and bh, byte [rbp + 0x17]
and byte [rdi + 0xd84360], bh
mov word [rdi], ss
movabs al, byte [0x592c06e4ec1c9e47]
and dword [rsi], eax
xor al, 0x29
in al, 0x60
ret
loop 0x402984
or byte [rdi], al
sbb esp, esp
sbb eax, 0x726b8d8
pop rsi
pop r14
add eax, 0x5f23ea07
sub al, byte [rdi]
leave
shr dword [rsi], 0x10
or byte [rbx], dh
enter 0x3210, -0x38
mov dl, 0xc8
jrcxz 0x4029d2
js 0x40295e
cmp esp, edi
cmp bl, ah
sub ecx, dword [rax]
xchg eax, esp
cmp al, 0x9c
cmp al, 0x7b
and dword [rcx + 0x2a59bf08], edx
mov bh, 0x57
adc dword [rsi + 0x411777f7], eax
sbb byte [rcx + rcx - 0x69c0d961], cl
and byte [rdi], ch
in al, 0xc9
jae 0x4029b7
outsb dx, byte [rsi]
cmp al, 0x94
or esp, esp
leave
out dx, al
pop rbp
mov bl, 0x17
add eax, 0xe41d9c83
or ebp, dword [rax]
ja 0x402a28
adc edi, dword [rcx]
enter -0x6c37, 0xa
pop rdi
sub al, 0xef
movabs al, byte [0xd0259e3c85d83a0a]
jbe 0x402a00
wait
pushfq
int1
ret 0xfe97
or ah, byte [rdi]
sub ebx, dword [rbx + 0x27679390]
or edi, dword [rdi - 0xdced448]
in al, dx
add eax, 0x8b0b3d72
or ecx, dword [rdi + 0x40bd3f26]
jb 0x402a33
stc
or ebp, dword [rcx]
or al, 0x90
sahf
push 0x34
xchg eax, edi
or dword [rdx + rsi*2], 0x72
sub ecx, dword fs:[rdx]
int1
movabs byte [0xd6f1a3c93907279], al
sbb byte [rip + 0x38c1c817], dh
iretd
test dword [rip - 0x1b78a75f], ecx
test byte [rip + 0xdcf6a07], cl
nop
sti
or eax, 0xce6f0e45
and byte [rip - 0x10fbee38], cl
push rsp
in al, dx
adc byte [rsi], dh
sal byte [rdi + 0x17], 0xb4
cmpsd dword [rsi], dword ptr [rdi]
add dword [rcx + rax*4 + 0x1057ce0b], esp
pop rax
xchg dword [rax + 0xf2547db], esi
pop r15
xchg esp, esp
lodsb al, byte [rsi]
getsec
xchg dword [rdi], ecx
mov r12d, 0xd75c8390
mov edx, 0x720fee22
nop
xchg eax, ebx
xor al, 0x54
or eax, 0x39072710
jns 0x402a77
sub byte [0x817a110], bh
mov esp, 0x10ab2890
push rdi
sbb al, 0xe4
in al, 0x60
cmp ch, ah
adc dword [r8], esp
sahf
cmp bpl, byte [rsi]
add cl, dl
jmp 0x3663258b
out dx, eax
not byte [rcx]
and byte [rdi - 0x44], ah
nop
and eax, 0x689f121b
jne 0x402ad9
adc bh, bh
mov word es:[rdi], ss
in al, 0x20
movsb byte [rdi], byte ptr [rsi]
adc bh, al
sub esi, eax
test dword [rsi - 0x38], ebx
mov bl, 0x12
pop rdi
outsb dx, byte [rsi]
sub ebx, dword [rsi + 0x13]
ja 0x402af4
cmpsd dword [esi], dword ptr [edi]
in al, 0x11
add bl, byte [rdx]
push 0x13
jmp 0xffffffffc8723772
bt eax, ebx
sar dword [rdx], 0x39
enter 0x30b0, 0x23
mov edx, 0xe139071f
leave
adc esp, dword [rax + 0x40]
jg 0x402b5d
add dl, byte [rdi + rax]
mov ebx, 0x37da2790
pop rdx
and ah, ah
in al, 0x60
adc dword [rdi + 0x27361488], ecx
cmp byte [rdi + rbx*4], dl
adc al, 0x3d
test dword [rbx + rdi], edi
and al, 0xfc
adc al, 0xbf
sahf
rcr dword [rax], -0x1c
in al, dx
adc eax, 0x3f910d17
add al, byte [rbx + 0x15b8c817]
iretd
adc eax, 0x1c9c48d7
in al, dx
pop rsi
xor eax, 0xf6794ff1
add bh, byte [rcx]
adc dword [rsi], -0x66
cmpsd dword [rsi], dword ptr [rdi]
jb 0x402b20
or eax, eax
call 0xffffffffe46f9340
or dword [rip + 0x2e171721], esi
sbb dword [rax + rdx*4 - 0x6d], esp
and al, 0x48
jbe 0x402bd6
nop
jno 0x402be1
sub dword [rax], esp
or al, 0x72
loop 0x402b66
adc byte [rdi + 0x78], ch
and edi, ecx
add dword [rax], ebx
mov r13d, 0xcf186734
pop rsi
enter 0x793, -0x72
sub ebx, dword [rdi + 0x3fdda718]
mov ebx, 0xd1217a40
sbb byte [rdi + 0x60e42fed], ah
ret 0x5c24
ja 0x402bdd
sbb dword [rdi], esp
sbb esp, esp
lodsb al, byte [rsi]
adc dword [rdx + 0x72793e19], ecx
nop
xchg eax, ebx
and eax, 0xcf19a02b
mov esp, 0xb3c9e40
add dword [rbx], ebx
sbb dh, byte [rip - 0x1bd0e9e6]
or dword [rdi + 0x1ab3395b], eax
cmp dword [rcx + 0x50], edi
adc al, 0xe9
sbb ch, ch
in al, 0xc9
xchg eax, ebx
cmp al, 0x74
add dword [rbp + 0x1b], ebp
movabs dword [0x8e17d31760e30b3e], eax
xor edi, esp
or dword [rdx + rsi*2], 0xffffffc6
sbb al, 0x1c
cvtps2pd xmm0, qword [rbx + 0x3b]
pop rax
sbb al, 0x92
xchg eax, ebx
sbb al, 0x72
jnp 0x402c10
push rdi
pop rcx
nop
movabs al, byte [0xe42d284e971cee1c]
shr byte [rax], cl
movabs dword [0x1d104876793be8df], eax
mov word [rdi], fs
test ebp, edx
sbb al, 0x39
cmp edi, dword [rcx]
fsubr dword [rdx + 0x33286e17]
loope 0x402bb6
sbb eax, 0xd71e1f42
mov edx, 0x49e4f233
mov esp, 0xbe971e77
sub eax, 0xf279014f
add bh, byte [rcx - 9]
sbb eax, 0x933e621f
cmp dword [rcx + 0x36], eax
add al, 0x22
or edi, dword [rcx + 0x72]
nop
shr byte [rdi], cl
test byte [rdx - 0x62], 0xc4
jns 0x402c7a
fisttp word [rdx + rdi]
out 0x1f, eax
ja 0x402c69
cmp ecx, esp
add eax, 0xf3c72036
adc eax, 0x793c9e01
out 0xc2, eax
and byte [rsp + rdx - 0x1b], dl
add dword [rbp + 0x44f2790], edi
and dword [rsi + 0x2d], ecx
and qword [r8 + 0x2f], r11
in al, 9
pop rdi
jne 0x402cc0
ret 0x9721
or dword [rdi], ebp
mov al, 0x17
hlt
and dword [rdi - 0x1b98ddbe], ecx
and byte [rax], dh
enter 0x35d6, 0x6f
jg 0x402cbf
leave
ror dword [rbx], cl
shl dword [rdx], -0x29
sbb cl, al
and dh, byte [rax - 0xfb0de9]
div byte [rbx]
adc byte [rbx], ah
ja 0x402c96
in al, 9
sub ah, byte [rbx]
sub r14b, byte [r9]
sahf
sbb al, 0xa5
and eax, eax
sbb word ds:[rdi], dx
leave
adc eax, 0x400dc024
and al, 0xe7
add eax, 0xaae42f16
jne 0x402cfb
iretd
mov dl, 0x95
call 0x502f5183
and al, 0x39
cmp eax, ebx
add eax, 0x2fae2fe4
and esp, dword [rsi + rbx*2 + 0x25200720]
cmp byte [rip - 0x4f793d19], ah
or eax, dword [rdi + rbp - 0x7cc3e832]
sbb al, 0x18
jnp 0x7a81c21
mov esp, 0xfc9ce232
sbb eax, 0xc90e2c26
or dword [rdi], esp
pop rdx
outsd dx, dword es:[rsi]
inc dword [rbp + 0x3cbcf212]
or esp, dword [rbx + 0x72]
je 0x402d96
je 0x402d9a
pop di
push 0x632ecbff
pop rdi
push r10
pop rdi
push r11
push rsp
or dword [rax + 0x67657265], ecx
mov ebp, 0x69b5bffb
sbb al, byte [rsi]
pop rdi
je 0x402db3
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402d6f
outsd dx, dword fs:[rsi]
pop rdi
sti
in eax, dx
mov edi, 0x61620bbd
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x402dbf
jne 0x402ddb
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x402dd4
sub ebx, ebx
pop rdi
jg 0x402dd3
xor eax, 0x5f243538
imul bp, word [rsi + 0x69], 0x7208
fild qword [rsi - 0x7b]
push qword [rdx + 0x61]
jns 0x402de3
outsb dx, byte gs:[rsi]
je 0x402dfa
jns 0x402d5b
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x402d55
mov edx, 0xd327301
pop rdi
sub dword [rdx + rbp - 0x13], esi
fld xword [rbp + 0x42]
pushfq
jo 0x402e14
and al, 0x5a
push rbx
je 0x402df5
xor dword [rcx], edi
jo 0x402e16
movsxd rsp, dword gs:[rbp + 0x77]
cdq
insd dword [rdi], dx
imul dword [rbp + 0x6b]
sub eax, 0x729f6e77
jne 0x402e20
je 0x402dd9
pop rdx
xor eax, 0xfdb6b782
mov bh, 0x61
xor eax, 0x31787863
xor dword [rax + rax + 0x45], ebp
sub dword [rbp + 0x50], edx
push rdx
imul ebx, dword [rbp + 0x5445fffb], 0x54
pop rcx
pop rdi
push rbp
push r12
sub dword [rdi], esi
fsubr dword [rbx]
mov bh, 0x63
insd dword [rdi], dx
sbb ecx, dword [rsi + 0x4e]
adc dword [rdi], ebp
xor dword [rdx], esi
lodsb al, byte [rsi]
jae 0x402e63
not esi
fsub qword [rbx + 0x5f]
jl 0x402e6a
movsxd rbx, dword [r9]
adc ah, byte [rbx + 0x68]
cli
div dword [rsi + 0x738b8435]
adc byte [rbp + 0x53], al
add al, 0
movsxd rsp, dword [rbx - 0x4e]
insd dword [rdi], dx
or esp, dword [rax + rbx*2 + 0x7b]
push 0x76566b9a
and dh, byte [rbx + 3]
scasd eax, dword [rdi]
mov dl, 0x34
insd dword [rdi], dx
neg edi
fsubr dword [rsi + 0x1e]
or al, 0x52
pop r15
or eax, 0x8764f2d8
ret
or eax, dword [rdi + 0x4e]
push rbp
and byte [rdi + 0x483dbffd], dil
push rdx
adc al, byte [rdi + 0x4c]
pop rdi
push rbx
pop rdi
push rsp
and dword ss:[rbp + rax*2 + 0x10647228], edi
fucomp st(5)
xchg dh, dl
mov ebp, 0x59446207
mov cs, word [r14 - 0x18]
mov esi, 0x6787777d
outsb dx, byte [rsi]
jne 0x402e65
xor eax, 0x73706f09
xor dword [rsi], eax
imul esi, edi, 0x29f1f856
or dword [rdi + 0x76], ebx
idiv dword [rdi + 0x53]
xor byte [rdi + 0x15], bl
or byte [rbx + 0x37], ah
pop rsi
adc al, 0x1a
jae 0x402f14
ret 0x6856
or ebp, ebp
xor dword [rbx], esi
sub al, 0x27
rcr dword [rcx], 0x68
sbb byte [rax + 0x4d49bb85], dh
xor dword [rax], edi
outsb dx, byte [rsi]
insd dword [rdi], dx
fcom st(6)
xor ah, ch
insb byte [rdi], dx
cmp al, 0x49
push rax
xor dword [rdx], edi
ja 0x402ebd
ret 0x7034
sub eax, 0x746c4972
jbe 0x402f07
adc eax, 0xce0cc553
rol byte [rdx + rdi + 5], 1
cmp al, 0x6c
mov esi, 0x889b2bdb
jb 0x402f2c
jbe 0x402ece
push rbx
add dl, byte [rax + r11*8 + 0x6d]
and esi, edx
and al, 0x7f
outsd dx, dword [rsi]
push r10
push rsi
pop rdi
movabs dword [0x1916369647450c2b], eax
pop rdi
jbe 0x402f74
cli
outsb dx, byte [rsi]
movsxd rsp, dword [rbx]
cmp dword [rbp + 0x34], eax
je 0x402f8c
jo 0x402f7a
xchg dword [rdi + 0x531fddee], esi
xor al, 0x3b
and eax, 0x755f4432
outsb dx, byte [rsi]
sbb al, 0xda
out dx, eax
sbb dh, byte [rdi + 0x7a69a469]
bnd jo 0x402fa9
xor byte [rbp + 3], al
imul byte [rsi + rsi*8 - 0x28]
sbb edx, dword [rax + rdx*2]
movsxd rdx, dword [r8 + 0x60]
out 0x62, eax
stosd dword [rdi], eax
or dword [rsi + 0x354f3738], 0xffffffc7
fmul dword [rbp - 0x2ea9a0df]
pop rdi
sub dword [rcx - 0x57], esi
insd dword [rdi], dx
mov edx, 0x31deeb81
xor edx, r8d
in eax, 0xbf
shr byte [rax + 0x47], 1
je 0x402fcd
fidivr dword [rbp + 0x5f434249]
xor bh, byte [rbx]
or cl, bh
mov dh, 0x2e
add dword [rip + 0x487773cb], esi
jbe 0x402fce
jmp 0x56b46af7
xor eax, ecx
xchg eax, esp
movsxd rdi, dword [rsi + 0x73]
jne 0x402ff9
std
cmp byte [rbp - 0x15b89ce9], 0x43
xor al, byte [rbp + 0x52]
in eax, dx
sub cl, byte [rsi + rbp*8 - 0x56b4e5d6]
pop rcx
call 0x62fac528
and eax, dword [rbp - 0x5a]
mov word [rax + 0x58], ds
pop rdi
xor ebx, eax
sbb esp, dword [rax - 0x69]
in eax, dx
xor dh, byte [rcx]
imul edi, dword [rdx - 0x4d14611a], 0x10
and dword [rcx + 0x4c], ebp
hlt
insb byte [rdi], dx
or rsi, qword [rbx]
sub al, 0x30
in eax, 0x36
js 0x402fa3
clc
push rax
jo 0x403023
xchg byte [rbx], ah
test byte [rcx - 0x25], dh
xchg eax, edi
lea edx, [rsi + 0x63c615a4]
xchg eax, edi
mov ebx, 0xa8d8edb6
lodsd eax, dword [rsi]
mov di, 0x2277
fadd qword fs:[rdx]
jrcxz 0x402fd8
xchg eax, edx
pop rdi
push rdx
push rbp
and dword [rsi], 0x56306e6d
add byte [rsi + 0x6b606e1c], ch
adc byte [rax - 0x61], ch
scasd eax, dword [rdi]
jbe 0x40303e
je 0x40304f
movabs eax, dword [0x3404a09d5ad09dad]
sbb al, 0xf8
push r10
imul ecx, dword [rdi + 0x612b7272], 0x32
fadd dword [r9]
sbb ebp, dword [rbp + 0x6d]
imul ebx, dword [rdx + rsi + 6], 0x322320d8
pop rdi
xchg eax, esi
loope 0x403000
mov ecx, 0x646ffa6e
imul esp, dword [rsi + 0xb], 0x7db7b25f
sbb al, 6
pop qword [rcx + 0x3d]
push -0x28
jne 0x402fd8
or edi, dword gs:[rbx + 0x72]
xor r14, qword [rax - 0x16d968f3]
mov esi, 0xcf38796f
insd dword [rdi], dx
iretd
mov cl, 0x37
loope 0x403086
push rdx
xchg eax, edx
sbb esp, dword [rcx]
sub eax, 0x834e787b
and al, 0x5b
jl 0x4030d6
insb byte [rdi], dx
push rax
jbe 0x40306c
adc dh, byte gs:[rcx]
jo 0x403095
jne 0x403077
cmpsd dword [rsi], dword ptr [rdi]
sbb byte [rip - 0x2afe5ebe], dl
movsb byte [rdi], byte ptr [rsi]
mov es, edi
and eax, 0x5fa6a34c
xchg eax, ebp
xor byte [rdx + 0x6c5366b6], dh
sub byte [rsi + 0x66], dl
xchg eax, ebx
push rsp
out dx, al
leave
xor byte [rcx - 0x6e9aa9fc], cl
loop 0x4030e2
add al, 3
movsxd rbx, dword [rbx + 0x3a]
push rbx
sbb dword [r10 - 0x7a], r10d
idiv dword [rbp + 0x4bbf74da]
outsb dx, byte [rsi]
and dword [rax], edx
sbb eax, edi
adc qword [rbp - 0x75ae764a], r8
pop r15
je 0x4030c4
cmp esi, dword [rax + 0xcc31a0c]
int1
sbb al, 0xc1
jb 0x4030b9
fiadd word [rsi - 0x2d]
sub al, 0xf
xchg eax, esi
ror byte [rbp + 0x61f0a164], 0x67
mov eax, 0xf8325260
push rax
jbe 0x403076
lodsb al, byte [rsi]
or esp, eax
imul eax, ebp, 0x23164616
loope 0x4030f4
iretd
jmp 0x4030de
in eax, 0x4a
xor ebp, ebp
push rdi
xor dword [rcx - 0x4b], esp
in al, dx
ret 0x4578
mov ah, 0x35
sub byte [rbx], 0x1c
and byte [rbp + 0x538854bd], bl
adc dword [rdx], eax
mov bh, 4
jb 0x4030a2
or dword [rcx + 0x76], ebp
nop
xchg eax, ebp
sub al, byte [rdi + rbp*2 + 0x30677e86]
add byte [rbx + 0x4a32d63e], al
sbb ebx, dword [rip - 0x4bccbca7]
ja 0x403150
and dword [rbp + 0x6f201784], eax
movsxd rsp, dword [rcx - 0x38]
ror dword [rdx + 0x62], cl
xor al, bh
outsb dx, byte [rsi]
ja 0x4031b6
push rax
push 0x38
fmul dword [rcx - 0x48]
xchg eax, ecx
ret
push -0x3e
add dword [rdx], esi
or dl, al
sub dword ss:[rax], esi
adc al, 0xde
jo 0x4031ad
stosb byte [rdi], al
out 0x40, al
or dword [rbx + 6], edx
sal dword [rbx - 0xb93f1f0], -0x36
jle 0x4031bc
pop rbp
je 0x4031d9
xchg eax, ecx
xchg eax, ecx
sub esi, dword [rip - 0x1b9df9cb]
and byte [rdi + rax], al
cwde
pop rax
xor dword [rsi], esi
adc dl, byte [rsi - 0x4a]
popfq
mov ebx, 0x7268439e
push rcx
test al, 9
ret
xchg eax, edx
movsxd r15, dword [rax]
rcr byte [rcx], 0xd9
adc dword [rax], ebx
pop rbx
jns 0x40317c
cmp dword [rbp + 0x6f], ebp
mul byte [rax + 0x40b10b69]
mov byte [rdi - 0x34b7b1d2], 0xbe
push rbx
xor dword [rbx], 0xffffff98
pop rsi
sbb al, 0xbd
insb byte [rdi], dx
ret 0x7541
push rbx
pop rdx
xchg eax, edx
add byte [rbp + 0x4d2eedf6], ch
jo 0x403215
loope 0x4031d7
fmul dword [rbx + rax*2]
outsb dx, byte [rsi]
push rsp
pop rax
rol byte [rdx], 1
pop rcx
sub byte [rip + 0x4128326d], al
mov ebx, 0x5dbd2b44
stosd dword [rdi], eax
xchg eax, ebp
jno 0x4031bf
mov ecx, 0x14643889
sub dh, byte [rbx]
outsd dx, dword [rsi]
pop rax
fild dword [rcx]
ror byte [rdi + 0x15], cl
jae 0x4031e9
outsb dx, byte [rsi]
stc
pop rax
and byte [rsi + rax*2], bl
sub al, 0xc8
mov al, 0x50
cmp edi, ebx
xchg eax, esp
ret
push rbx
push rdx
adc byte [rdx], dl
movsxd rsi, dword [rsi + rsi]
xchg eax, esp
mov al, 0xa4
sbb esi, edx
xor eax, 0x2c54808b
insd dword [rdi], dx
movsxd rbp, esi
mov esi, gs
mov ebx, 0x128e0b05
insb byte [rdi], dx
je 0x403245
js 0x403273
jmp 0x4032ae
adc dh, byte [rdx + 3]
nop
out dx, al
and dword [rip + 0x43d3244b], 0x1a04ac60
sub ecx, ebx
jb 0x403267
or cl, byte [rcx]
movsd dword [rdi], dword ptr gs:[rsi]
adc dl, byte [rbx + 0x49]
mov al, 0xcc
xor dword [rip + 0x4cd01e03], esp
xor byte [rdx + 0x5b], dl
push rsp
jno 0x40326f
mov word [rdx], fs
sti
push -0x34
sbb eax, 0x74feb601
jg 0x4032e6
adc eax, 0x60
jo 0x403223
jge 0x4032e0
sbb al, 0x54
pop rbx
ret 0x20ab
movabs al, byte [0x22930426092e6270]
xor dword [rbx], esi
ffree st(6)
test eax, 0xde395a2c
imul edi, dword [rax + 0x59], 0x80cb925c
insb byte [rdi], dx
adc esi, dword [rdx - 0x7340c6f7]
xor qword [r14 + 0x47], rax
sal dword gs:[rax], 0x76
sbb byte [rdx], al
test byte [rdx - 0x21acd3d7], dl
test dword [rbx], edi
fcmovbe st(0), st(7)
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
movsxd rsp, dword [rbx - 0x44]
mov eax, 0x5fea842e
sahf
lea esp, [rdx + 0x58]
int 0xa
xchg eax, ebx
xchg eax, ebp
lea ebx, [rdx + 0x31fe4914]
fisub dword [rdi + rbp*4 + 0x77]
or byte [rax - 0x59], ah
add dword [rdx - 0x2c], esp
ret 0x35cb
or ch, byte [rdi + 0x56]
loope 0x4032aa
sbb byte [rsi + 0x2d041250], ah
or esp, dword [rsi]
loope 0x403318
enter 0x1023, -0x38
or ebp, ecx
and eax, 0xd746cf4
sbb al, 0
and ecx, dword [rdi + 0x6ec66235]
and dword [rcx], ebx
mov eax, 0x617bda36
and dword [rcx + 0x2b3088f1], esp
retf
xor eax, 0x39245820
xor dword [rdx], edx
pushfq
nop
loopne 0x403399
jge 0x403380
insb byte [rdi], dx
jle 0x403371
and cl, cl
xor dword [rdx - 0x6a], ebx
pop rdx
movsb byte [rdi], byte ptr [rsi]
push rbp
sbb dh, byte [rsi]
xchg eax, ebp
movabs al, byte [0x304a331a10b10947]
nop
outsd dx, dword [rsi]
and eax, 0xcd8135cf
pop rdx
movabs eax, dword [0x25b965ced60906a1]
fcom qword [rsi + 0x3c]
rol dword [rsi], 0x30
and ah, byte [rsi + rsi*2 - 0x224f68aa]
out 0x31, eax
jb 0x4033a2
outsd dx, dword [rsi]
and al, bl
lodsd eax, dword [rsi]
add eax, 0x65fd0718
xor cl, byte [rcx]
xor dword [rbx + 0x17], esi
push rdx
movabs dword [0x92c170016928466c], eax
sub byte [rbx + 0x28], bl
jp 0x40340a
cwde
or al, 0xf4
jno 0x4033f4
int1
xor ebp, dword [rsi + 0x7060048c]
outsd dx, dword [rsi]
outsd dx, dword [rsi]
xor byte [rcx], bh
in al, 0xbe
loop 0x4033a5
push rsp
sbb dh, dl
fadd dword [rbx - 0x42dadf]
ret 0xab04
mov dl, 0xc3
imul ebx, dword [rdx], -0x74
test eax, 0xc9c24195
ret
fisubr word [r8 + 0x42]
add bh, byte [rax]
fld xword [rbp - 0x55]
add al, 0x1a
adc byte [rax - 0x48ef599d], dh
neg byte [rsi]
adc bh, dl
mov ebx, 0xa4026b68
fld dword [rbp - 0x58b2cbf5]
add dword [rax], ebx
mov word [rax], ss
push rcx
cmp dword [rbx + rbp*4 + 0x6471876d], ebx
pushfq
xor edi, dword [rax]
js 0x403417
insb byte [rdi], dx
outsb dx, byte [rsi]
jp 0x403393
pop rbx
xor al, byte [rdx]
add eax, 0xd656b18
sub al, 0xda
movsxd rdi, dword [rcx]
add al, 0x58
adc al, byte [r11 + 0x6d]
scasb al, byte [rdi]
add cl, byte [rbp + 0x4b]
test eax, 0xb70402e1
cmp byte [rsi + 0x5f], cl
sti
enter 0xf42, 1
jo 0x4033c4
push 0x442090b4
stosd dword [rdi], eax
nop
and eax, 0x655641a2
mov word [rcx + rsi - 0x6f], fs
mov cl, 0x30
movabs al, byte [0x289b81c1acdcd915]
add al, 0x58
movsxd rsi, dword [rsi + 0x45]
test byte ss:[rax + 0x48], dl
loop 0x403485
jae 0x403491
or ah, byte [rax - 0x7f]
pop rcx
xor al, 0xb
mov dl, 0xe8
push rbp
mov cl, 0xa6
mov ah, 0x12
add dh, al
enter -0x7cd0, 0x46
sbb byte [rip + 0x48b3912], dl
or edx, ebp
xor al, byte [rsi + rcx*2]
cmp byte [rcx], bh
sal byte [rdi], 0x47
add bl, byte [rbx - 0x66bafdef]
fldenv [rax + rdx*8]
xchg eax, esp
pop rdi
insd dword [rdi], dx
sar byte [rax + rax*2], 1
mov dl, byte [rax]
jno 0x403426
sbb byte [rsi + rax], al
adc dword [rip + 0x9456e76], eax
jg 0x4034f6
je 0x4034ff
pop rcx
adc ebx, dword [rdx]
or byte ss:[rdi + 0x14], dh
xor ah, bh
cmp al, al
add byte [rbx], cl
or dl, byte [rsi + 0x39]
xchg eax, edi
test byte [eax], dl
pop rax
xchg eax, ecx
and al, 0x8c
xchg eax, esp
adc byte [rdx + 0x6c], dl
mov ch, 0x73
jbe 0x4034aa
mov al, 0x53
sub al, 0xa1
and cl, byte [rsi + 0x41]
rol byte [rsi + 0x48], 1
xor dword [rcx + 0x35], ebx
xchg eax, ecx
enter 0xc80, 0x34
xor al, 0x8c
in al, dx
movsb byte [rdi], byte ptr [rsi]
sbb dword [rsi + rax*2], edi
xor eax, 0x10826422
push rdx
ror byte [r10], 1
test dword [rdx], ebx
fsubr qword [rbp + 0x36]
jns 0x4034a9
enter 0x4ba8, -0x2c
jge 0x4034a2
jb 0x403564
popfq
and al, 0x20
or dword [rcx], ebp
retf 0x13d0
add al, 0xa2
xor byte [rax + 0x62], dh
cmp ebx, dword [r12 + rbp*2 + 0x3d9c216]
insb byte [rdi], dx
and al, 0x84
push rdx
adc esi, dword [rdx]
in al, dx
call 0x11ec35cf
push rsp
xor ecx, ecx
pop rax
pop r10
xor al, byte [rsi]
enter 0x6c88, -0x4a
add ch, byte [rcx + rdx + 0x1c03397]
xchg eax, esi
add byte [rbx + 0x4c9471b7], bh
xor ah, byte [rbp + 6]
add byte [rbx + 0x70e4f24c], ah
add bl, byte [rcx + 0x76dc962c]
hlt
push r8
mov cl, 0xda
jbe 0x4034f2
mov edi, eax
add cl, bl
or byte [rax + 0x30], bl
push rbp
adc bl, byte [rcx + 0x70]
stosb byte [rdi], al
mov dword [r8 + 0x7e1d81b0], r15d
cmp eax, 0x2980359c
or ebx, dword [rdx + 0x2b5a7437]
sbb al, 0x97
shr byte [rcx], cl
jmp 0x403599
fcomp qword [rdx - 0x57]
test byte [rdi + 0x35], al
jbe 0x4035a9
or al, 0x66
or ah, ah
outsd dx, dword [rsi]
pop r15
xor dword [rsi], ebp
xor edi, dword [rcx]
rcl byte [rbp + 0x6567ed8c], 0x74
pop rcx
jo 0x403524
test al, 0x83
nop
js 0x40360e
rcr byte [rbx], cl
or dword [rcx - 0x52], eax
xor bh, byte [rcx + 0x10596340]
add bl, byte [rax + 0x58]
push -0x4c
out 0x32, eax
push rbp
jge 0x40356e
push rdx
mov word [rsi - 0x29], gs
pop rdx
push rcx
jne 0x40359f
push rdi
push r11
xor byte [rdi + 0x62], ch
push rsp
shr byte [rdx + 0x256a328f], cl
cdq
movabs byte [0x49630bb2955c908b], al
jbe 0x4035dc
nop
add dword [rcx], eax
jge 0x403642
xor dword [rsi], edx
enter 0x103, 0x32
stosb byte [rdi], al
shl byte [rbp + rcx*2 + 8], 1
xor cl, dl
xor al, 0x93
ffree st(6)
jl 0x4035eb
jae 0x403667
insd dword [rdi], dx
lodsd eax, dword [rsi]
je 0x403666
fcomp qword [rdx]
fidiv dword [rax + 0x598e0968]
jo 0x403605
outsb dx, byte [rsi]
outsd dx, dword [rsi]
adc ah, cl
sal dword [rcx - 0x2ad278d2], 1
or eax, 0xdffb16b5
test dword [rsi], ebp
jne 0x40367b
insb byte [rdi], dx
sub eax, 0xd006469
in eax, 0x38
fcmove st(0), st(4)
mov ebp, 0x6e796409
sbb dword [r14 - 0x24], r14d
test byte [rcx + 0xc736e2d], bl
pop rdi
sbb esp, dword [rax]
fsubr dword [rbx - 0x30]
int3
sub byte [r9], cl
fld xword [rbx]
pop rbx
je 0x4036b2
or ch, byte [rdi + rbp*2]
cmp eax, dword [rip + 0x6908736e]
js 0x403651
push rdi
and al, 0xcf
and byte [rsi], bl
imul ebp, dword [rdi + 0x75], 0x2e
push -0x2f9b9747
xchg eax, esi
fdiv qword [rdx - 0x7da2f28e]
pop rdi
mov eax, 0x701eb1ae
sti
mov ebp, 0x87d8116c
int 0x92
push rax
or ebp, dword [r10 + 0x63]
jb 0x40361a
fldlg2
sub eax, 0xaa36b4
push -0x7dcaa185
push rsi
cmpsb byte [rsi], byte ptr [rdi]
add al, 0xbd
push rax
add dh, byte [rax + 0xfd52ad]
add byte [rdx + 0x271d5025], ch
add edi, eax
and dword [rcx], edi
jae 0x403630
ja 0x4036a6
sbb al, 6
movsb byte [rdi], byte ptr [rsi]
sbb dword [rdx + 0x54072301], edx
xchg byte [rax + rdx*4 + 0x41], ah
push rsp
and byte [rcx + rax*2], al
xchg byte [rax + rcx*2 + 0x31], ah
je 0x403652
movabs eax, dword [0x90fff64424749064]
or al, 0x72
enter 0x6fff, -0x68
cwde
adc al, 0x43
xor cl, al
add eax, 0x90644e08
ret
jmp 0x403713
rol al, 0x26
wait
pushfq
sbb eax, 0x6fb02a0
sbb byte [rbp + 0x4b], dl
push r14
add ecx, dword [rax - 0x62]
add al, 0x56
mov ch, 0xa4
mov ebx, 0x67ffbf5e
and al, 0x67
outsd dx, dword [rsi]
mov edi, 0xc9070238
xor byte [rbx + rax*2 + 0x6b], 0x3f
movabs al, byte [0x690a707b99c8326]
xchg eax, edx
outsb dx, byte [rsi]
retf 0x7aff
add al, 0x84
test dword [rbp - 0x18f848a7], edi
and byte [rbx - 0x7b0026a3], al
xor cl, al
sub byte [rdx], al
adc byte fs:[rsi], al
nop
sbb dword [rsi - 0x43d8f9ed], ecx
sbb ebp, eax
mov edi, 0xc81aff07
nop
or eax, 0x903f8925
in al, dx
xor dl, byte [rax + 0x7100180]
add al, byte [rax - 0x38]
xchg byte [rdi + rdi + 0x1816c857], dl
outsb dx, byte [rsi]
bswap esp
xchg r12b, r13b
popfq
and byte [rdi], al
jg 0x40374c
mov al, 5
mov dl, 0x32
movabs dword [0xdff072f85449b99], eax
leave
or dword [rcx - 0x1bd11f41], ebp
and byte [rbx + 0x2cbe03f], al
and byte [rbp + rax*4 + 0x64], dl
mov cl, 0x8b
in al, 0x99
wait
sysret
jg 0x4037f0
add ebx, dword [rbx - 0x406defff]
in al, dx
and bh, byte [rcx - 0x7e]
lodsb al, byte [rsi]
leave
in eax, 0x66
add byte [rdi + rax*2 - 0x6bcea9f9], al
pushfq
jg 0x403758
fcmovnbe st(0), st(3)
outsb dx, byte [rsi]
push rdx
xor eax, 0x787a66c
and ch, bl
add eax, 0x3fe7bf08
or eax, 0xf8320c81
clc
push r14
mov ch, 0xec
xchg eax, ebx
jg 0x40382f
mov bl, 0x25
pop rbp
cmp byte [rdi], 0xf8
wait
cmp dword [rcx - 0x1a], edi
jg 0x4037d1
add dword [rsi], eax
sub eax, 0x10219064
cwde
jb 0x40377c
or al, 0xb2
mov edi, 0x48085f5f
push rax
add dword [rcx], eax
mov edi, 0x367250c9
ror byte [rdx], 1
leave
cdq
wait
or al, 0xd0
call qword [rax]
leave
xor byte [rbx + rax*2 + 0x10], 0x3f
or al, ah
or eax, 0x7b82725
dec dword [rax]
adc eax, 0x83642c39
jg 0x40384e
xor al, 0x6c
jbe 0x40387c
or byte [rdi], al
adc dword [rbx], edi
sub al, 0x92
cmpsd dword [esi], dword ptr [edi]
cmp eax, 0x11e7f9b
jmp 0x40387e
mov bx, 0x61a7
inc dword [rax]
rcr byte [rsp + rdi + 0x351f1398], cl
leave
xchg eax, ebx
fmul dword [r9]
jg 0x4037f9
je 0x4037d8
add byte es:[rax], al
add byte [rsi], dl
add byte [rcx], cl
add byte [rax], al
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip + 0x71080216], ecx
retf
retf 0x7bf
in eax, dx
add byte [rbx], 0
or edx, dword [rcx]
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add byte [rax], al
add byte [r8], al
je 0x403879
add byte [rax], al
add bh, bh
