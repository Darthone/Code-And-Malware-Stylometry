call 0x402178
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401f90
add ebx, ebx
je 0x401f46
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x401f7e
cmp rbp, -4
ja 0x401f7e
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x401f66
add ecx, 4
mov dl, byte [rax]
je 0x401f8e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x401f7e
ret
cld
pop r11
cmp r8b, 2
je 0x401fa6
jmp 0x402023
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x401fb6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401f9e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401fce
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401fbb
sub eax, 3
jb 0x401fec
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x402023
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x402013
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x402011
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x402000
cmp rbp, -0xd00
adc ecx, eax
call 0x401f52
jmp 0x401fa6
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4020fc
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40209a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x4020e6
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x4020b9
push 0x3a707474
jne 0x402112
js 0x4020d2
jae 0x40210c
outsb dx, byte cs:[rsi]
je 0x4020cb
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x402139
jb 0x40212b
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x402156
jb 0x402169
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x2158b7
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x2158b7
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x402034
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x40215f
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x40210d
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f2207
jb 0x40221f
movsxd rbp, dword [rdi]
jae 0x402219
insb byte [rdi], dx
js 0x40221f
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x4021ff
cmp rsi, rcx
jae 0x402207
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x4021e6
cmp al, 0x8f
ja 0x4021e6
cmp byte [rsi - 2], 0xf
je 0x4021ec
sub al, 0xe8
jg 0x4021e9
push rdi
cmp al, 1
ja 0x4021d4
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x4021d7
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x402204
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x40225b
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c26d9
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40229f
mov al, 0xa
jmp 0x40229f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x40227b
inc ebx
mov al, 0
jmp 0x4022a3
mov al, 2
jmp 0x4022a3
mov al, 3
jmp 0x4022a3
mov al, 0x3c
jmp 0x4022a3
push rcx
rcr ah, 1
fstp st(7)
jle 0x4022e4
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x4022f6
jg 0x4022e8
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a7a6b
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x402342
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb74bf
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x40234a
cmp esi, 0x21585055
jne 0x40234e
jge 0x402340
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x402343
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x402347
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x4023f3
pop rcx
or al, 0x3b
jb 0x4023f9
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x40236b
jmp 0x40236d
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x36622ae
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf544f6
in eax, dx
jg 0x4023a5
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x4023eb
mov bh, 0x2a
add edi, 0x10
jmp 0x4023e8
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x402425
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x402461
jne 0x402478
fstpnce st(6), st(0)
jle 0x402441
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x402477
jrcxz 0x4024ab
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1c40f
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x40252a
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x4024ea
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58296abf
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x40255d
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x4024f7
and ecx, 7
or al, 0xeb
jae 0x402562
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x402597
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x4025d5
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x40258e
push rax
call 0xffffffff868d227b
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x402598
std
cmp edi, esi
xchg eax, edi
jle 0x4025ed
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96b79
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x4025eb
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x4025d9
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x402602
js 0x402642
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x4026d4
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad390f
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x4026f5
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x4026fa
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc221ac
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x402688
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
sub dword [rax], ecx
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], dh
add byte [rax], dl
add byte [rax], al
add byte [rax], cl
inc dword [rax + 0xb000043]
adc dword [rax], eax
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4027ae
je 0x4027b7
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402780
mov dh, 0x7d
jbe 0x40277f
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x4027b8
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x5600006], bl
add byte [rsi + 9], ah
enter -0x6fd9, 0xf
or byte [rax], al
movabs al, byte [0x7c813e40a300009]
or al, byte [rax]
or rax, qword [rax]
jo 0x4027af
or esp, esp
add ecx, dword [rax + rax]
nop
or eax, 0xc20e1000
add al, 0xf2
add dword [rsi], ecx
add byte [rax], ah
getsec
add ch, byte [rbx]
fadd dword [rax - 0x11]
adc byte [rdi], dl
jle 0x402742
jge 0x4027d5
add byte [rbx + rax*2], ch
adc al, byte [rax]
mov byte [rsi - 7], al
add ebp, dword [rcx + rdi + 0x13]
push rbp
adc al, 0
pop rbp
jl 0x4027dc
jns 0x4027dc
adc eax, 0x16f800
add byte [rsi + 0x36], bl
cmp dword [rax + rax*4 + 0x17], 0x47180800
sub byte [rip + 0x195fc807], 0x60
cmp dword [rcx + rax*4], 0xd0001a7c
sbb eax, dword [rax]
loopne 0x402791
ja 0x402854
sbb al, 0x13
add dword [rdi], edx
add al, 0
int1
dec dword [rip + 0xc3b1657]
sbb edi, dword [rdi + 0x32029719]
fcom dword [rax + 0x171b5034]
nop
or eax, 0x2e4320c9
rol byte [rcx + rdx*4 - 0x3f], 1
mov ebx, dword cs:[rdi - 0x59]
add dword [rdi], edx
push rbx
and al, 0x83
pop rbp
or dword [rdi + 0x7a], ecx
mov al, 0x2b
and dword [rdx], esi
xchg byte [rdi - 0x2d93285b], dl
jno 0x4027c6
stosd dword [rdi], eax
xor byte [rdi + 0x60], 0x27
wait
sub bpl, byte [rdi]
sbb dword [rax + rcx*8 - 0x10], ebp
add qword [r10], rsi
enter 0x2720, -0x20
movabs dword [0x670b43200e4e1286], eax
ret 0xbbc
fyl2x
xchg dword [rax], ebp
push rbp
rcl byte [rdi], 1
in al, dx
add byte [rbx], cl
fmul st(0), st(0)
xor ah, byte [rdx + 0x57]
out 0xef, eax
fcom dword [rax + rsi*8 + 0x50205bd]
adc al, 0x67
xor al, 0x43
xor dh, al
sub dword [rcx], eax
mov bh, 3
enter 0x6186, -0x29
xchg dword [rax], esp
xor al, cl
je 0x4028d0
and ch, byte [rdi + 0x1706216e]
or al, 0x72
jb 0x40283b
outsb dx, byte [rsi]
loopne 0x4028dd
shr dh, 0x72
nop
xchg eax, ebx
and dword [rsi], 0x2d
sub al, byte [rbx]
cmp dword [rcx - 0x76], edi
push rsi
jp 0x4028c7
xor ecx, eax
leave
cmp ah, byte [rip + 0x4e4da650]
jbe 0x402933
add byte [rdx + 0x723f612f], bh
cmp ecx, ebx
popfq
pop rdi
push rax
add cl, al
leave
fiadd word [rsi - 0x130dd9d6]
adc byte [rdx], dh
stc
add al, 0x2f
adc al, 0x22
jrcxz 0x402966
jb 0x40290f
push rdi
jb 0x4028ab
or esp, dword [rcx + 0x2f]
clc
and al, 0x9b
loope 0x4028e8
div byte [rip + 0x4ca4f4f]
cmp eax, 0x7427243b
add eax, 0x2016395f
sahf
push rdx
add al, 0x49
add eax, 0x335803c1
enter 0x7d0e, 0x20
mov edi, 0xd83938c
movabs al, byte [0x59b072793b2b7c47]
and dword [rsi], eax
stosb byte [rdi], al
sub byte [rbx + 0x47], al
nop
xchg eax, ebx
or dword [rip + 0x1d265817], 0x79
and dword [rsp], ebx
fsubr dword [rsi]
add eax, 0x21784007
cmp eax, 0x2a5f2360
and byte [edi], ah
mov ebx, 0x327e2f3e
mov dl, 0xe7
and byte [rbx - 0x38], al
enter 0x72e3, 0x38
test dword [rcx], edi
jrcxz 0x40299c
or byte [rdi], bl
or bh, byte [rax + rbx]
jb 0x40296a
in al, dx
xchg eax, ecx
or byte [rdi + 0x30b729cf], bh
pop rsi
sbb dword [rdi + rsi*8 + 0x77], eax
or dword [rdi + 0x63390727], ebx
and eax, 0x973963f
in al, 0x77
cmp dword [rax + rdx*4 - 0x4cf66bc5], 0x27939017
mov ebx, 0x3e0f1647
add eax, 0x720e4fc6
jbe 0x40292b
ja 0x402a0f
adc ecx, dword [rdx]
sub esi, edx
in al, 0x20
out dx, eax
movabs al, byte [0xd01760eb0b25140a]
in al, dx
and al, 0x97
popfq
insb byte [rdi], dx
jb 0x40298d
dec byte [rdx]
movabs eax, dword [0xbf9e4e41c80b069b]
sub esi, dword cs:[rcx]
cmp eax, 0xb3c9c80b
mov ecx, dword [rbx]
pushfq
xor al, 0x79
test byte [rdx], 0x39
stc
or ebp, dword [rcx]
or al, 0x17
loopne 0x402a20
leave
cmp dword [rdx - 0x69], eax
fisubr dword [rdx]
xor cl, al
or dh, cl
sbb byte [rdx + rbx], bh
jrcxz 0x4029e4
leave
outsd dx, dword [rsi]
or eax, 0xcf46348e
adc ebx, dword [rsi + 0x20]
test dword [rip + 0x5e070da1], ecx
sbb eax, 0xdcfe092
sti
or eax, 0x40bc5b20
outsd dx, dword [rsi]
adc dword [rax], eax
cmp eax, dword [rbx + 0x54ef0434]
ja 0x402a5a
mov al, 0x43
fcom dword [rdi]
mov ah, 0xe
cmpsd dword [rsi], dword ptr [rdi]
ret 0x9006
push rdi
adc bl, bl
mov r11b, 0x5e
sbb eax, 0x5f4f0f25
getsec
jb 0x4029c9
sbb eax, 0xf876892
xlatb
sahf
int1
xor byte [rdx], ah
out dx, al
xor esp, esp
leave
push rsp
or eax, 0x42286e10
sahf
sbb al, 0xe4
cmp al, 0x65
adc byte [rdi], dl
sub byte [rbx - 0x540fdfa3], al
adc byte [rdi - 0x3a], dl
jns 0x402aea
nop
xchg eax, ebx
in eax, 0x43
adc dword [rsi - 0x637c6cc7], esi
cmp al, 0x2e
add cl, dl
jo 0x402aab
sahf
sbb al, 0xa4
out dx, eax
not byte [rcx]
xchg eax, esp
and al, 0x58
sbb dword [rcx + rsi*8 - 0x2160ede5], 0x75
sbb dword [rsp + rdi + 0x75122f39], 0x26
mov word [rdi + rcx*8 + 0x1293c85e], fs
outsb dx, byte [rsi]
sub esi, eax
adc bl, byte [rdi - 0x1c]
sub dl, byte [rdx + 0x5e217a17]
adc esi, dword [rdi + 0x11]
add bl, byte [rdx]
sahf
popfq
push 0x13
pop rdi
sub ecx, dword [rdi]
xchg byte [r8 + rdx*4 - 0x5d], spl
fdiv dword [rax - 0x3629f1b1]
cmpsb byte [rsi], byte ptr [rdi]
and bh, byte [rdx - 0x1fec0de1]
cmp al, 0x39
enter 0x7f09, 0x65
add dl, byte [rax + rdx*2]
jb 0x402ad8
in al, dx
test dword [rdx + 0x14], ebx
mov edi, 0x4311224c
mov byte [rsp + rbp*4], dl
lahf
jb 0x402aeb
sub dword [rdi], -0x39
adc al, 0xb3
cld
iretd
pop rsi
enter 0x14b3, -0x41
adc al, 0x2f
adc eax, 0x22e8317
cmp dword [rax], ebx
xchg eax, ecx
mov eax, 0x605d8315
iretd
adc eax, 0xd417fed7
and byte [rdi], al
mov dword [rbx - 0x7cb00ecc], edx
jbe 0x402b4a
iretd
pop rsi
cmpsd dword [rsi], dword ptr [rdi]
fidiv dword [rip + 0x20c82fc0]
or dword [rsi + rbx*2], 0x12
in eax, dx
in al, 0xd9
or edi, dword [rcx]
jg 0x402b73
and dword [rdi], edx
movsb byte [rdi], byte ptr [rsi]
and eax, dword [rcx + 6]
sbb esp, esp
in al, dx
pushfq
sbb al, 0x64
nop
jno 0x402b3f
sub dl, ah
add ecx, dword [rax + 0x35]
xor ebp, 0x10
outsd dx, dword [rsi]
add dword [rsi + rbx*2], esp
enter 0x18b3, 0x47
xor esi, dword [rdi]
sbb byte [rdi], al
enter 0x17b3, -0xe
add al, 0x2b
lahf
sbb byte [rdi + 0x2ec13f53], ah
nop
pop rsi
rcr dword [rax], 1
cmpsd dword [rsi], dword ptr [rdi]
in eax, dx
cmp dword [rcx], edi
fmul st(1)
cmp byte [rsp + rbx*2], ah
ja 0x402bc5
sbb dword [rdx], esp
in al, 0xc9
adc dword [rdx + 0x4f24b419], ecx
sahf
sbb al, 0xe4
sub esp, dword [rax + 0xb364519]
add dword [rdx], eax
nop
sbb ebx, dword [rdx]
xor eax, 0xc59e871a
or edi, dword [rcx - 0x2f]
cmp byte [rbx + 0x35c6271a], dh
in al, 0xc9
adc al, 0xe9
sbb ah, byte [rbx + 0x3c]
test dword [rcx + rdi*2], edi
bnd je 0x402bbe
insd dword [rdi], dx
sbb ebx, dword [rcx]
int1
ret 0xd838
rcl dword [rdi], cl
add al, 0x31
out 0x1c, eax
sbb al, 0x67
mov esp, 0xd06f6790
and dword [rbx], edi
sbb al, 0xf
call 0x2478dc0a
jnp 0x402bf9
push rdi
movabs al, byte [0xdf1cee205e13901c]
nop
pushfq
sbb al, 0x64
adc dword es:[rdx], eax
call 0xffffffffe28e6da4
adc byte [rip + 0x17490297], bl
pop rbp
pop rax
sbb eax, 0x38924e64
stosb byte [rdi], al
xor bl, al
and byte [rbx + 0x4733e42f], al
loope 0x402b92
cmp al, 0xe9
adc byte [rdi], bl
xlatb
xor byte [rbx], dh
xchg eax, ebx
loop 0x402c91
xchg eax, edi
xor al, 0x2d
add r9, r9
xchg eax, ebx
enter 0x1ef7, 0x1d
fdivr dword [rip - 0x37c6c364]
jp 0x402c54
pop rsi
enter -0x7c6d, 0x41
jns 0x402c5d
mov al, 0x17
and al, 0xdf
cmp edi, esp
ja 0x402c81
enter 0x2f09, 0x36
and bh, al
imul edx, dword [rip - 0x361b0dff], 0x20c2e7b3
push rsp
adc al, 0xe5
add eax, ebp
test dword [rcx + rdi*2], edi
add al, 0x21
sub al, 0x4d
and eax, eax
jp 0x402c8b
pop r15
jmp 0x402ca6
ret 0x9721
js 0x402bf5
mov ebp, 0x428f21f4
and ah, byte [rdi + 0x4c]
and byte [rdi], al
add dword [rcx + 0x35], 0x70227f6f
sahf
pop rsi
shl dword [rdx], -0x29
sbb cl, al
and al, byte [rcx - 0xd86f43]
insb byte [rdi], dx
xor edx, dword [rax]
and esi, dword [rdi + 0x20]
js 0x402cc7
and ecx, dword [rdi - 0x60]
xor byte [rsi + rcx + 0x72], ah
in al, 0xa5
and esi, dword [rsi]
adc ax, 0xcf24
mov eax, 0xdc04f90
and al, 0xe7
and byte [rsi], ah
mov al, 0x78
and dword [rbp + 0x24], esi
iretd
movabs dword [0x244fef4201ae9024], eax
enter -0x3e37, 0x2e
in al, 0x2f
and al, 0x2f
and esp, dword [rax]
cmc
add bh, byte [rcx]
and byte [rip + 0x10e72538], ah
test byte ss:[rbp - 0x7c], bl
in al, 0x19
cmp al, 0xe3
sbb byte [rsi], ah
jnp 0x71e1c08
loope 0x402c85
adc edi, esp
cld
sbb eax, 0xeb390726
test dword [rax + rdx*8], edi
xor bh, ah
and al, 6
xor dword [rbx + 0x73747263], eax
je 0x402d82
movsxd rdi, ebx
test esi, esi
mov edi, 0x52434a5f
pop rdi
push r11
push rsp
or dword [rax + 0x67657265], ecx
imul ebx, dword [rdx], 0x5bffbbdb
pop rdi
je 0x402d9b
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402d57
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx - 0x49]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x402da7
jne 0x402dc3
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x402dbc
sub dword gs:[rsi + rbp - 0x41], esp
std
add eax, 0x383537f6
xor eax, 0x69665f24
outsb dx, byte [rsi]
imul ecx, dword [rax], 0x79617272
pop rdi
imul ebp
push rsi
clc
outsb dx, byte gs:[rsi]
je 0x402de2
jns 0x402d43
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x402dad
lodsb al, byte es:[rsi]
sbb esi, dword [rax]
or eax, 0x2a74295f
mov edi, 0x70709cdd
and al, 0x5a
push rbx
je 0x402ddd
xor dword [rcx], edi
jo 0x402dfe
movsxd rsp, dword gs:[rbp + 0x77]
cdq
sub eax, 0xb6df76db
ja 0x402e0f
lahf
jb 0x402e19
movsxd rsi, dword [rdx + rbx + 0x5a]
xor eax, 0x7f176182
imul ebx, ebx, 0x7f
xor eax, 0x31787863
xor dword [rax + rax + 0x45], ebp
sub dword [rbp + 0x50], edx
push rdx
push r12
push rsp
pop rcx
mov cl, 0xd6
mov ecx, 0x55465fff
push r12
sub dword [rdi], esi
fsubr dword [rbx]
jge 0x402e11
mov dh, 0x4e
adc dword [rdi], ebp
xor dword [rdx], esi
lodsb al, byte [rsi]
jae 0x402e4b
movsxd rbx, dword [rdi + 0x73]
outsd dx, dword [rsi]
in eax, dx
int 0x4e
jl 0x402e52
movsxd rbx, dword [r9]
adc ah, byte [rbx + 0x68]
cli
test byte [rsi + 0x73], dh
outsd dx, dword [rsi]
pop rbx
mov esi, dword [rbx + 0x10]
push r11
add al, 0
movsxd rsp, dword [rbx + 0x58]
and bl, bl
mov dh, 0x40
jnp 0x402e71
imul edx, dword [rsi + 0x6d], 0x27
xor dh, byte [rdi]
scasd eax, dword [rdi]
mov dl, 0x34
insd dword [rdi], dx
outsb dx, byte [rsi]
js 0x402e17
insd dword [rdi], dx
test byte [rsi], bl
or al, 0x52
pop r15
or eax, 0x764f2d83
ret
or eax, dword [rdi + 0x4e]
push rbp
and byte [rax - 5], cl
fild dword [rdx + rdx*2 + 0x12]
pop rdi
push rbx
pop rdi
push rsp
sub byte [r13 + 0x61], r13b
adc eax, edx
jb 0x402eb5
adc byte [rbp + 0x686eddd7], bh
pop rcx
mov cs, word [r14 - 0x79]
out dx, al
ja 0x402ece
outsb dx, byte [rsi]
jne 0x402e4d
xor eax, 0x73706f09
xor dword [rsi], eax
imul ebp, dword [rcx], 0x1f856f75
or dword [rdi + 0x76], ebx
idiv dword [rdi + 0x53]
xor byte [rdi + 0x15], bl
xor byte [rsi - 0x1d], dh
adc al, 0x1a
jae 0x402efc
ret 0x3331
push 0x2cd0b685
rcr dword [rcx], -0x73
xchg byte [rcx], al
pop rbx
mov ebx, 0x38314d49
outsb dx, byte [rsi]
xor ah, bl
jbe 0x402e32
insd dword [rdi], dx
in al, dx
insb byte [rdi], dx
cmp al, 0x49
push rax
xor dword [rax + rsi*2], esi
lodsd eax, dword [rsi]
jae 0x402eeb
sub eax, 0x746c4972
jbe 0x402eef
adc eax, 0xcc594453
loopne 0x402ed0
cmp al, byte [rip - 0x127793c4]
mov ebx, 0x4572b2bd
jbe 0x402eb6
push rbx
add dl, byte [rsp + r12 - 0x80]
fst qword [rsi]
jg 0x402f27
outsd dx, dword [rsi]
push r10
push rsi
div byte [rip + 0x4745c2ba]
xchg eax, esi
sbb dword [rdi + 6], ebx
in eax, dx
outsd dx, dword [rsi]
insd dword [rdi], dx
cli
outsb dx, byte [rsi]
movsxd rsp, dword [rbx]
cmp dword [rbp + 0x34], eax
je 0x402f74
jo 0x402f62
jnp 0x402f78
jmp 0x402ee0
push rbx
xor al, 0x3b
and eax, 0x755f4432
outsb dx, byte [rsi]
sbb al, 0x69
movsb byte [rdi], byte ptr [rsi]
scasd eax, dword [rdi]
std
scasb al, byte [rdi]
jno 0x402f7c
jp 0x402f07
bnd jo 0x402f91
xor byte [rbp - 0x28], al
iretd
sbb dx, word [rax + rdx*2]
movsxd rdx, dword [r8 - 0x55]
or byte [rsi - 0x717cd18c], dh
cmp byte [rdi], dh
pop r8
jae 0x402ec1
frstor dword [rcx]
pop rdi
push rsi
rcr dword [rdi + 0x29], 1
jno 0x402f29
xchg eax, esp
fisub dword [rsi + 0x4431de1b]
xor edx, eax
in eax, 0xb6
std
test dword [rdi + 0x3f], esi
je 0x402fb5
mov ebp, 0x5f434249
xor ch, byte [rsi]
add dword [rip + 0x51dba1cb], esi
js 0x402fd3
ja 0x402faa
jbe 0x402fb7
push rsi
xor eax, ecx
mov ebp, 0x94dbb748
movsxd rdi, dword [rsi + 0x73]
jne 0x402fe2
movsxd rsi, dword [rdi + rbp*8 + 7]
in al, dx
xor al, byte [r13 + 0x52]
sub bl, byte [r10]
insd dword [rdi], dx
push rdi
test eax, 0x23625936
mov r11d, 0xa6ac1f44
mov word [rax + 0x58], ds
pop rdi
xor ebp, ebp
xor dh, byte [rcx]
imul eax, dword [rbp - 0x45ff2140], -0x1a
cwde
int1
pop rsp
xchg eax, edi
and dword [rcx + 0x4c], ebp
hlt
sub al, 0x76
pop r10
xor byte [rbx - 0x1b], al
mov ebx, es
retf
clc
push rax
jo 0x40300c
fist dword [rdi + 0x211c331e]
lea edx, [rsi - 0x52dab9f2]
xor byte [rdi + 0x6db737bb], dl
lodsd eax, dword [rsi]
mov di, 0x2277
xchg eax, edx
pop rdi
push rdx
and ecx, 0x16
sbb byte [rbp - 0x7f], dl
push rsi
add bl, bh
xor al, 0x69
jae 0x402f96
sbb al, 0x6e
scasd eax, dword [rdi]
jbe 0x403023
pop rdx
add dword [rax + 0x74], 0x43
movabs eax, dword [0x340484ed6c7ba09d]
sbb al, 0xf8
jb 0x403074
sub ebx, eax
sub byte [rdx + 0x6d32615a], dl
sbb dword [rcx], edi
ret 0x6d0e
imul ebx, dword [rdx + rsi + 0x32], 0x6c035ce
pop rdi
xchg eax, esi
outsb dx, byte [rsi]
cli
jrcxz 0x40304d
or byte [rdi + 0x6f], ch
imul esp, dword fs:[rsi + 0xb], 0x5b8f065f
nop
mov ebp, 0x443d41ed
push -0x28
jnp 0x403066
test eax, 0x4e722c7b
xor ebp, ecx
mov es, word [rbp + 0x4467b86d]
mov esi, 0x3738796f
fnstcw word [rbx + 0x6e]
jnp 0x40302b
and al, 0x52
xchg eax, edx
js 0x40309e
jrcxz 0x40302d
or byte [rcx - 0x7d], ch
and al, 0x64
insb byte [rdi], dx
push rax
jbe 0x403051
fnstcw word [rdx + 9]
adc dh, byte gs:[rcx]
jne 0x40306f
sub eax, 0xef7cb82
cmpsd dword [rsi], dword ptr [rdi]
add ebp, edx
ret 0x10a8
movsb byte [rdi], byte ptr [rsi]
movabs dword [0x462f5f2e3c75b5a6], eax
push bx
insb byte [rdi], dx
push rdx
stosb byte [rdi], al
test byte [rcx - 0x7411a9d8], dl
xor al, 0x9b
movsb byte [rdi], byte ptr [rsi]
leave
xor byte [rcx + 0x22dbe2c7], cl
mov al, 0x2a
cmp byte [rdx], bh
push rbx
sbb byte es:[rax], bl
sbb dword [r10 + 0x74], r10d
enter -0x43d0, -0x11
mov edi, 0x4ed46e4b
clc
xor cl, byte [rsi]
or dword [rsi + 0x11], 0x4db428d0
mov cl, byte [rbp + 0x5f]
je 0x4030ad
ret
neg esi
and dword [rbp + 0xc], 0xd3461cf1
and al, 0xb
xchg eax, esi
add ebp, dword [rdi + rcx]
movabs eax, dword [0xb86761f06e04b7c1]
push rax
jbe 0x4030f3
xchg eax, ebx
xchg eax, edx
mov byte [rsi], bl
imul ecx, dword [rcx], 0xc54d6627
stc
iretd
xor dword [rdx + 0x13edeb18], esi
push rdi
push rdi
xor dword [rcx + 0x78], esp
jmp 0xffffffffb44f96a1
xor eax, 0x8854bd80
xor ebx, dword [rcx]
push rbx
adc dword [rdx], eax
and dword [rbp + 0x69093790], edi
jbe 0x40317a
xchg byte [rax], bl
test byte [rsp + rdx*2 + 0x3ac83e7e], ch
add dword [rcx], -0x2a
xor al, byte [rbx - 0x44]
push rax
call 0x18b7e554
and byte [rdi + 0x63], ch
ror dword [rdi], 0x29
and al, 0xc8
shr dword [rsi + 0x77], cl
insd dword [rdi], dx
push rax
and al, 0x56
adc al, byte [rbx - 0x3c27c796]
adc byte [rsi - 0x3e], cl
lea ebp, [rdx - 0x3e]
sub eax, esi
nop
xor byte [r8 + 0x4c], sil
stosb byte [rdi], al
xor bh, byte [rax]
movabs byte [0x984b07a3c14b40e6], al
xor al, 0x1d
retf 0x5c7e
xor dword [rax + 0x60], 0x35745d49
cmp byte [rax], bl
mov ecx, dword [rbp + rsi - 0x4d679dfa]
and eax, 0x31582107
popfq
mov esi, dword [rdx - 0x61444f6f]
sbb al, byte fs:[rdx - 0x6d]
test al, 0x63
fmul dword [rdx + 0x18]
xchg eax, esi
cmp al, al
sbb dword [rdi], eax
jns 0x4031e3
retf -0x3f72
fdiv qword [rdi]
cmp edi, eax
add ch, byte [rbx + 0x7b]
xor ebx, ebp
mul byte [rax + 0x5b2dc669]
mov byte [rip + 0x534e2e87], al
adc eax, dword [rsi + 0x5a]
test byte [rbx + 0x415e9833], 0x75
mov ch, 0xe7
call 0x53a17f13
pop rdx
in eax, dx
rcl byte cs:[rsi + 0x704d6804], 0xc
sub dword [r8], esi
or dh, byte [rdi]
outsb dx, byte [rsi]
push rsp
pop rax
rcr dh, 1
adc eax, 0x326d42c8
sub r9d, dword [rbx + rax*2 - 0x2c42cdf7]
mov ecx, 0xad5ae956
mov dword [rax], edi
xor edx, dword fs:[rax + 0x6fb6c8a6]
pop rax
adc rax, 0xeda3230
jae 0x4031d2
outsb dx, byte [rsi]
stc
test edx, eax
add ah, cl
sub al, 0x45
jb 0x403236
and dword ss:[rcx + 0x39], 0x209044df
movabs dword [0x3463829298cdc304], eax
jno 0x4031aa
test byte [rip + 0x636d8b35], ah
pop rax
add byte [rdx + 0x308e8cee], ah
jo 0x4031f9
sub eax, 0xf746c12
js 0x4031a3
sbb al, 0x12
mov edx, 0x656eeb35
and dl, byte [rcx - 0x11b8e470]
pop rax
or dword [rcx + rbx*2], ebp
rol dword [rbx + 0x60], cl
and eax, 0x6562cbd0
adc byte [rbp + 0x12a5508b], 0xcc
jb 0x40327b
and eax, 0x19145230
lock sbb byte [rbx + 0x54], 0xb0
lea ebx, [rbx]
sti
push -2
je 0x4032dd
sbb esp, dword [rbp - 0x12]
or byte [rdi + rax - 0x7d], ch
jge 0x40326c
add dword [rsi], 0x541c5e83
movabs al, byte [0x222e62705e12dc98]
ror dword [rdx + 0x30], 1
and dword [rcx], esi
xor ebx, ebp
cmp dword [rsi], eax
xor al, 0x4e
fisubr word gs:[rcx + 0x78]
pop rcx
enter -0x6d1f, 0x5c
insb byte [rdi], dx
adc edi, dword [rdi + 0x48a9a32a]
mov word [rbx - 0x3f], cs
xchg eax, esp
xor dword [rdx], edi
xor al, 0x60
jbe 0x4032c6
rol esi, 1
adc byte [rax], ah
sub al, 0x53
xlatb
and esp, esi
fadd qword cs:[rsi]
outsd dx, dword fs:[rsi]
insd dword [rdi], dx
movsxd rsp, dword [rbx - 0x44]
push rsi
adc dl, al
jne 0x403316
sahf
lea eax, [rsp + rdx*8 + 0x14]
ret
push -0x6d
adc al, 0x49
add byte [rbx + 0x31fe6cae], ch
fisub dword [rdi + 0x51]
js 0x40328a
add dword [r10 - 0x2c], esp
outsd dx, dword [rsi]
test dword [rdx], edx
pop rsi
scasb al, byte [rdi]
push rsi
loope 0x403293
or dword [rdi + 0x41230c0], esi
sbb al, 0xc8
outsd dx, dword [rsi]
pop rcx
xor byte [rbx], ah
and eax, 0x408118f4
pop rsi
insb byte [rdi], dx
je 0x40327f
xor ch, byte [rax - 0x20]
add byte [rip - 0x4791399e], dh
imul ecx, dword [rax], 0xda3660c9
jnp 0x4032f2
ror dword [rdx], 0xb
and dword [rax + 0x4242b30], ecx
pop rdi
scasb al, byte [rdi]
add dword [rcx], edi
xor dword [rbp + 6], ebp
xchg eax, edx
loopne 0x403299
jge 0x403369
insb byte [rdi], dx
jle 0x40334b
and byte [rip + 0x65a4912], al
mov dl, 0xd4
xor dl, byte [rbp + 0x1a]
test dword ss:[rax], esi
test al, 0xac
movabs al, byte [0xa4a33884a392b1a]
test dword [rcx - 0x5eca3084], eax
adc dword [rdx], ecx
insb byte [rdi], dx
or esi, edx
adc dword [rcx], ebp
retf
sub eax, 0xc13c56dc
xor byte [rcx + 0x315676a4], al
jb 0x40338c
mov eax, 0x6f33ed84
and al, bl
std
cdq
imul ebp, dword [rip + 0x17c565c0], 0x52
or edx, dword [rax + 0x6ca38849]
fnstenv [rdx]
jo 0x403332
sub byte [rax + 0x7a420497], ah
jno 0x4032fc
fcmovnb st(0), st(3)
int1
xor ebp, dword [rsi + 0x17306f6f]
and al, 0
cmp dword [rsp + rcx + 0x21], edx
not dword [rip + 0x25186226]
sbb eax, 0xbd1ec6b6
jmp qword [rdx - 0x3e]
imul ebx, dword [rdx], 0x12
pop rax
xchg eax, ebp
mov ecx, cs
ret
adc al, 0x48
lodsd eax, dword [rsi]
or al, 0x41
fiadd word [r8 + 0x38d21340]
fld xword [rbp - 0x50]
neg dword [rax + 0x25]
shl byte [rbx - 0x5a], 1
adc bh, dl
test byte cs:[rax + 0x68bbc7b5], bh
imul ecx, dword [rbx], 0x34
test byte [rax], dl
and ch, cl
cmpsq qword [rsi], qword ptr [rdi]
push rcx
mov word [rbx], cs
shl byte [rax + 0x39], 0x9c
pushfq
jmp 0x403430
insd dword [rdi], dx
cmp esi, dword [rbx]
cmp byte [rax + 0x26], bh
insb byte [rdi], dx
pop rbx
xor al, byte [rdx]
jno 0x40342c
rol byte [rip - 0x259a94e8], cl
push 0x28
mov dl, 0x62
movsxd rdx, dword [rdx]
adc eax, 0x43c021c8
insd dword [rdi], dx
and byte [rax], dh
add byte [rdx + 0x4d], dh
mov r15b, 8
or rax, 0x5f4e3817
sti
and dword [rdx + 0x16], eax
jp 0x403450
jo 0x4033ad
push 0x485a12b
stosd dword [rdi], eax
movabs byte [0xb0ad314114841324], al
sub ah, byte [rbx - 0x6f]
fstpnce st(4), st(0)
mov dword [rbp + 0x1204ac01], r8d
femms
fcomp qword [rax + 0x63]
jbe 0x403471
cmp al, 0x73
or dword [rsp + rax*4], esp
pop rcx
scasd eax, dword [rdi]
push rdx
and byte [rbx], al
xor al, 0xb1
adc ebx, dword [rax - 0x70]
cmpsb byte [rsi], byte ptr [rdi]
ret 0x95a0
add al, cl
adc eax, 0x34198048
adc ch, dl
leave
pop rcx
and al, 0x1f
xor bh, byte [rcx]
rcl byte [rax], 0x20
jo 0x403483
cmpsb byte [rsi], byte ptr [rdi]
adc al, 0xd8
mov word [rbp - 0x67], es
test al, cl
sbb dword es:[rdi + 0x45], 0xe030d06d
add dword [rdx + 0x4e], edx
jno 0x403483
call 0x3e45553c
mov al, 0xb1
jae 0x4034a7
jg 0x4034df
je 0x4034e8
or byte [rdi + 0x52], dh
retf -0x2f66
adc al, 0x64
xor ah, bh
add dl, cl
rol dword [rcx], 6
or edx, dword [rdi - 0x4fab2b76]
and al, 0xab
and eax, 0x948cc084
jae 0x4034aa
test dword [rax + 0x22ed7662], edx
mov al, byte [rcx + 0x414e629d]
test byte [rsi], dh
pop rcx
xor eax, 0x38cd340c
xor al, 0x8c
cmp al, 0x90
and al, 0x46
xor eax, 0x24684722
adc eax, dword [rax + rdx*8 + 0x56a26ddc]
sub ah, dl
jns 0x403492
jge 0x40351c
pop rbp
mov bl, 0x72
jae 0x403478
and eax, 0xd0ca4901
loope 0x40347f
add byte [rax + rsi], al
jo 0x403554
and dword [rbx + rcx], edx
fcmovb st(0), st(2)
fst dword [rdx + 0x60]
sbb eax, 0x32132360
in al, dx
adc dword [rdx + 0x42], ebp
out 5, eax
push rsp
xor dword [rdx + 0x46], ebx
ret 0x32c5
insb byte [rdi], dx
lea esi, [rax]
push 0x3004b644
adc esp, dword [rax - 0x69]
xor edi, dword [rbx - 0x4ff1fcd6]
mov bh, 0xce
mov ah, byte gs:[rbx - 0xd9acd9c]
mov cl, 0x34
add byte [rax], bl
in al, 0x70
fdiv qword [rsi - 0x2b]
enter -0xb9c, 0x43
jbe 0x403575
adc byte [rdx], 0x8a
test al, 0x89
pop rax
push rbx
cmp eax, 0x5530c806
in al, dx
nop
enter -0x767e, 0x7e
cmp eax, 0xd85c058
pushfq
xor eax, 0x4c00e69a
jno 0x403586
je 0x4034e8
ror byte [rdx - 0x2b], cl
pop rdx
movabs eax, dword [0xd6e1437f84eb3e29]
xor eax, 0xf30c3076
pop r15
xor dword [rsi], ebp
xor ebp, dword [rdi + rsi + 0x53]
and byte [rcx], bh
je 0x4035cd
jo 0x4034fa
add al, 0xae
xchg eax, ebx
js 0x4035ef
add eax, 0xd2761d42
xor dl, byte [rax]
fmul dword [rax + 8]
mov ecx, 0xcb1f3d40
pop rsp
movabs al, byte [0x7d4ea352c2d65532]
mov edi, 0xe8755152
push rsi
je 0x40355b
push rdi
push r11
xor byte [rdi - 0x37], ch
adc al, 0xa3
xchg eax, edx
movabs byte [0x863902b51905d8b], al
loopne 0x403560
xchg eax, esp
jbe 0x403637
pop rax
or byte [rsp + rbp*2], 1
xor al, byte [rdx - 0x78]
mov cl, 0x40
stosb byte [rdi], al
jle 0x40354d
imul esi, dword es:[rdx], -0x36
xor al, 0x7c
add byte [rsi], ch
jae 0x40364c
insd dword [rdi], dx
xchg byte [rbp + 0x62ad36ec], bl
je 0x40364f
push -0x291a71f7
ror byte [rsi + 0x6e077059], 1
outsd dx, dword [rsi]
xchg edi, edi
xchg byte [rax - 0x72], ah
sub eax, 0x2e850dd5
jne 0x403660
insb byte [rdi], dx
sub eax, 0xb5adee69
fsub dword [rax + rax + 0xd]
in eax, 0x38
or dword [rcx + rdi*2 + 0x6e], esp
insb byte [rdi], dx
jno 0x4035e2
sbb dword [r14 + 0x6e], r14d
jae 0x403597
out 0x26, al
int3
or al, 0x5f
sbb ecx, esp
fiadd word [r10]
rcr dword [rsi + 0x28], 9
je 0x403697
wait
fistp dword [rsi + 0x29]
or ch, byte [rdi + rbp*2]
or byte [rcx + 0x78], ch
pop rax
fld xword [rcx]
jo 0x40363a
push rdi
and al, 0x6f
jne 0x4035d0
jge 0x403642
int1
push 0x726468b9
or eax, 0xe4b6858d
pop rbp
pop rdi
jo 0x40364b
xchg eax, esi
add al, 0xc2
jne 0x403612
insb byte [rdi], dx
adc dword [rax + 0x43], edx
movabs eax, dword [0xa172636a0b6c3ec5]
stosb byte [rdi], al
adc cl, ah
outsw dx, word [rsi]
add byte [rax + 0x7b], ch
pop rsi
cmpsb byte [rsi], byte ptr [rdi]
insd dword [rdi], dx
lodsd eax, dword [rsi]
adc dword [rsp + rax + 0xfd52bd], esi
adc byte [rdx], 0x80
add byte [rdi], ah
add dword [rbx - 0x387ed2ac], ebx
ja 0x40368b
nop
or al, 0xc9
cdq
sbb al, 1
or al, 0x32
and ch, cl
and eax, dword [rdi]
push rsp
push rsp
xor spl, byte [r11 + r8*4]
and byte [rcx + rsi], al
or dword [rdx + rsi], 0x24
je 0x403714
and al, 0x43
fimul word [0xfffffffffffff644]
outsd dx, dword [rsi]
xchg byte [r8 + rdx*4 - 0x68], spl
cwde
add eax, 0x9218a136
or byte [rsi - 0x15], cl
in al, dx
and byte [rbx - 0x5f3f3fe4], al
add bh, bl
or al, 0x32
ftst
sbb byte [rsi + 0x37], dl
stosd dword [rdi], eax
pop rdx
rol byte [rbx], cl
fld qword [rbp - 0xe]
test byte [rdi], bh
add al, 0x5e
mov edi, 0xaab37bff
and eax, 0x1bbf0767
mov dl, 0x21
cmp dword [rax], edi
add al, byte [rdi]
imul edi, dword [rdi], -0x34
movsb byte [rdi], byte ptr [rsi]
movabs al, byte [0x690e4193653a707]
jp 0x4036c9
stosb byte [rdi], al
xchg eax, esi
je 0x40374f
add al, 0xb7
retf 0x2c26
in al, dx
out 0x3f, eax
inc dword [rcx + 6]
sbb esp, ebp
test byte [rdi], bh
sbb byte [rdx + rsi*2 - 0x70], 0x48
sub byte [rdx], al
sbb dword [rax], ebp
xor dword es:[rax], 0xffffff8e
adc eax, dword [rsi]
sub byte [rcx], bh
loope 0x4036f2
mov edi, 0x901aff07
xchg byte [r9 + rcx*4 + 0x3f], bpl
nop
nop
jb 0x4036b6
add dword [rax], edx
xchg eax, esp
jo 0x403750
add byte [rdx + 0x57], al
mov r14b, 0xc0
setge byte [rdi]
mov ch, 0x82
or al, 0x32
and byte [rax], ah
cld
and dword [rcx], edi
insb byte [rdi], dx
cmp dword [rdi + 0x3f], 0x26e672a3
push rcx
dec dword [rcx]
rcl byte [r8 - 0x57], cl
mov edi, 0xb923f60
cmp eax, ecx
retf
add ah, byte [rax]
push rbp
and dword [rcx], ebx
mov cl, 0xf
in al, 0x22
jns 0x40375f
jg 0x4037d8
add edi, dword [rdi - 0x7bff9920]
and edi, dword [rbx - 0x5bc061b8]
leave
jg 0x403800
cmp edx, dword [rbp - 0x29]
jg 0x403730
mov al, 0x59
push rax
fcmovnbe st(0), st(3)
cmpsb byte [rsi], byte ptr [rdi]
and byte [rax + 0x787d549], bh
mov edi, 0x177480c8
out 0x3f, eax
psubb mm6, qword [rdx - 0x7cdfbc9]
xchg eax, ebx
add dword [rsi], esi
pop rcx
jg 0x403817
wait
int 0x96
je 0x4037b7
wait
xchg ah, ah
in al, 0x99
jg 0x4037b9
add dword [rsi], eax
adc al, cl
mov dh, 0x90
cwde
mov edi, 0x45c8395f
xor bl, byte [rdi + 8]
add dword [rcx], eax
fldenv [rax]
and dword [r15 + 0x24323f60], edi
leave
ror byte [rdx], 1
ror byte [rip + 0x76e6725], 1
call qword [rax]
adc al, ah
add edx, edx
or al, ah
or eax, 0xff9c9436
or byte [rip - 0x1bdecf81], dl
mov al, 0x90
xor al, 0x9d
mov dl, 0xd9
adc dword [rbx], edi
cmp eax, 0x48b19a9b
sahf
jg 0x403837
add dword [rbx + 0x92bacf2], edi
cmpsd dword [rsi], dword ptr [rdi]
lcall [rax + 0x48036113]
jae 0x403848
xor eax, 0x24587f09
mov al, 0x74
lea esp, [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, 0
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x1ef7fdea], ecx
stosb byte [rdi], al
xor dword [rsi + rax - 0x55], edx
rcr dword [rax + 0x4380], 0xb
adc dword [rax], eax
add byte [rax - 0x5c], ah
add byte [rax], al
add byte [r8], al
xchg eax, ecx
hlt
add byte [rax], al
add bh, bh
