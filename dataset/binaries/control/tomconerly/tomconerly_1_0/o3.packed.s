call 0x401b60
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401978
add ebx, ebx
je 0x40192e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x401966
cmp rbp, -4
ja 0x401966
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x40194e
add ecx, 4
mov dl, byte [rax]
je 0x401976
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x401966
ret
cld
pop r11
cmp r8b, 2
je 0x40198e
jmp 0x401a0b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40199e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401986
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x4019b6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x4019a3
sub eax, 3
jb 0x4019d4
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x401a0b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x4019fb
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x4019f9
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4019e8
cmp rbp, -0xd00
adc ecx, eax
call 0x40193a
jmp 0x40198e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401ae4
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401a82
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x401ace
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401aa1
push 0x3a707474
jne 0x401afa
js 0x401aba
jae 0x401af4
outsb dx, byte cs:[rsi]
je 0x401ab3
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x401b21
jb 0x401b13
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x401b3e
jb 0x401b51
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21307d
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21307d
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x401a1c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x401b47
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401af5
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add dword [rax], eax
jmp rbp
call 0x706f1bef
jb 0x401c07
movsxd rbp, dword [rdi]
jae 0x401c01
insb byte [rdi], dx
js 0x401c07
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401be7
cmp rsi, rcx
jae 0x401bef
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x401bce
cmp al, 0x8f
ja 0x401bce
cmp byte [rsi - 2], 0xf
je 0x401bd4
sub al, 0xe8
jg 0x401bd1
push rdi
cmp al, 1
ja 0x401bbc
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x401bbf
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x401bec
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401c43
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c20c1
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401c87
mov al, 0xa
jmp 0x401c87
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401c63
inc ebx
mov al, 0
jmp 0x401c8b
mov al, 2
jmp 0x401c8b
mov al, 3
jmp 0x401c8b
mov al, 0x3c
jmp 0x401c8b
push rcx
rcr ah, 1
fstp st(7)
jle 0x401ccc
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x401cde
jg 0x401cd0
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a7453
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x401d2a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6ea7
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x401d32
cmp esi, 0x21585055
jne 0x401d36
jge 0x401d28
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x401d2b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x401d2f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x401ddb
pop rcx
or al, 0x3b
jb 0x401de1
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401d53
jmp 0x401d55
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661c96
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf53ede
in eax, dx
jg 0x401d8d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401dd3
mov bh, 0x2a
add edi, 0x10
jmp 0x401dd0
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x401e0d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401e49
jne 0x401e60
fstpnce st(6), st(0)
jle 0x401e29
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x401e5f
jrcxz 0x401e93
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1bdf7
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401f12
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401ed2
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x582964a7
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x401f45
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x401edf
and ecx, 7
or al, 0xeb
jae 0x401f4a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x401f7f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x401fbd
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401f76
push rax
call 0xffffffff868d1c63
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401f80
std
cmp edi, esi
xchg eax, edi
jle 0x401fd5
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96561
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401fd3
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401fc1
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x401fea
js 0x40202a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x4020bc
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad32f7
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x4020dd
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x4020e2
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21b94
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x402070
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
sub eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
nop
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1a50ff], al
add byte [rdx], dh
or byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402196
je 0x40219f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402168
mov dh, 0x7d
jbe 0x402167
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x4021a0
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x4b80006], bl
add byte [rsi + 7], dh
enter -0x6fd9, 0xf
or byte [rax], al
movabs al, byte [0x7c813e408600009]
or al, byte [rax]
js 0x402193
add al, bh
or ecx, edi
add edx, esi
add ecx, dword [rax + rax]
and byte [rdx], cl
or eax, 0x7c0b3000
add bh, cl
add byte [rsi], cl
add byte [rax + 0xf], al
add ah, dh
and eax, 0x201f900f
adc byte [rax], al
add byte [rsi], ah
adc dword [rax], eax
add ch, byte [rbx]
enter 0x294c, 0x12
and byte [rdi - 0x80], bh
jge 0x4021cd
add byte [rbp - 0xfffeb11], ah
sub eax, 0xac09f260
or al, 0x15
add byte [rax], al
fild dword cs:[rdx + rsi*8]
add dword [rdi], edx
add byte [rax], cl
sbb byte [rdi + 0x2f], al
add dword [rsi + 0x3019201c], esi
add al, 0xf2
add al, 0xf2
sbb al, byte [rax]
cwde
sbb eax, dword [rax]
test al, 0x48
fimul word [rbp - 0x27]
sbb al, 0x13
add dword [rdi], edx
add al, 0
int1
lcall [rip + 0xcef656f]
sbb edi, dword [rdi + 0x190eb589]
outsb dx, byte fs:[rsi]
sbb eax, dword [rax - 0x7a]
nop
and dword [rsi], ebp
add byte [rax + rcx*8 + 0x60], 0x97
pop rdi
cmpsd dword [rsi], dword ptr [rdi]
add dword [rdi], edx
push rbx
xchg eax, edx
shr dword [rsi + 0x477a4f84], -0x60
fcom dword [rbp - 0x6879e6f0]
movsd dword [rdi], dword ptr [rsi]
xlatb
leave
out dx, al
cmp byte [rbx - 0x55], al
shr byte [rax], 0x40
xchg dword [rax + 0x177e4e41], esi
add al, 1
cmp byte [rdi], 0x77
sahf
cmp eax, 0x15e7279
sbb eax, 0xea4701d7
add esp, esp
and byte [rdi], ah
and byte [r9], r13b
sub dl, byte [rdx + rax]
sbb ecx, dword [rdx + 0x18]
in al, 0x60
or esp, dword [rdi + 0x33]
int1
mov dword fs:[rdi + 0x17412d20], 0x842c03de
add r8b, byte [rip + 0x32bb1195]
out 0x60, eax
push bx
ret 0x76d8
adc al, 0x67
xchg dword [rdi], edx
xchg eax, ebp
adc dword [rbx + 0x479a4f12], ebx
mov bh, 0xba
add dword [rbx + 0x75], esp
add al, 0x87
and byte [rbx - 0x1036edd1], ah
and eax, 0x4791756
mov cl, 0xb
loope 0x402270
adc eax, 0x2fb337
jbe 0x402290
sbb eax, dword [rcx + 0x43297702]
fcom dword [rbp + 0x3800039d]
adc byte [rdx], r14b
xor byte [rdx + rdx], 0x60
and dword [rbx - 0x38], eax
jnp 0x40225b
lodsd eax, dword [rsi]
add al, byte [rbx - 0x28]
xchg eax, ebp
jne 0x402264
jmp 0x724e2b01
jbe 0x4022dc
xlatb
je 0x4022f4
add al, 1
stosd dword [rdi], eax
mov ebx, 0x11173740
fstp st(0), st(0)
add eax, 0x5f04b072
add al, 0x59
and byte [rip + 0x10af7343], cl
add byte [rcx + rdi*2], 0xf6
in al, 0x59
and ah, byte [rbx]
add dword [rdi + 7], esi
add eax, 0xb594d832
add bl, byte [rdx]
adc r10, qword [r15]
movabs al, byte [0x80d7052043b3c9d8]
and eax, 0x57b07765
cmp dword [rax], esi
add eax, 0xbf053c97
or byte [rcx], bl
ret 0x582e
xchg spl, spl
in al, dx
add bl, byte [rdi - 0x50]
xlatb
ror dword [rsi - 0x62], 0x1d
out dx, eax
push rax
and dl, bl
xor dword [rax + 0x72], 0xffffff90
scasb al, byte [rdi]
xor byte [rbx], ah
mov edi, 0xf6793aaf
nop
test dword [rdi + rbx*2], eax
jl 0x402355
leave
test dword [rdx], 0x1aef07d3
fiadd dword [rdi]
ret 0x2486
sti
adc byte [r10 - 0x7f], r14b
sbb eax, 0x2617080e
or dword [rdi], ebp
mov eax, ecx
cmp dword [rdi], esi
nop
or al, byte [rdi]
int1
add esp, dword [rsi + rcx*8]
sub dl, byte [rdi + 0x73747263]
push rsi
ljmp [rdi - 0x24]
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
or dword [rax], eax
jb 0x4023fa
imul edi, dword [ebx - 9], 0x61a6b7f
pop rdi
je 0x40240d
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x4023c9
outsd dx, dword fs:[rsi]
pop rdi
or esi, esi
fstp xword [rdi + 0x7b]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x402419
jne 0x402435
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x40242e
sub dword gs:[rdi + 0x64fec0bf], esi
xor eax, 0x5f243538
imul bp, word [rsi + 0x69], 0x7208
jb 0x402447
mov bh, 0x2f
hlt
jns 0x40243d
jb 0x40245b
add byte [rsi + 0xa], ah
insd dword [rdi], dx
and byte gs:[rbp + 0x6d], dh
insd dword [rdi], dx
fld qword [rax + 0xd3279b9]
pop rdi
sub dword [rdx + rbp + 0x6f], esi
in eax, dx
in eax, dx
pushfq
jo 0x40246e
and al, 0x5a
pop rdx
xchg eax, ebx
imul esp, dword [rcx + 0x63], 0xfb6df665
test byte [rsi + 0x53], 0x74
xor esp, dword [rbx + 0x78]
js 0x402445
add byte [rdx], dh
jae 0x402482
movsxd rbx, dword [rdi - 0x57]
out 0xde, al
fcmovu st(0), st(3)
jb 0x402459
movsxd rbx, dword [r9d]
adc ah, byte [rbx + 0x68]
mov ch, 0x3f
out 0xde, al
mov dh, 0x46
jae 0x402443
push r11
add al, 0
movsxd rax, ebx
std
xor dword [rcx], edi
xor eax, 0x54455250
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rax
mov ebp, 0x35b7b203
xor ah, byte [rbp + 0x63]
imul edx, dword [rsi + 0x6c], 0
in al, dx
mov dh, 0x6e
test dword [rcx + 0x37], ebx
or byte ss:[rcx - 0x3a], ch
outsd dx, dword [rsi]
jae 0x402427
sti
sub ecx, dword [rdx]
outsd dx, dword [rsi]
jo 0x4024be
sub al, 0x67
outsb dx, byte [rsi]
jne 0x4024e4
or eax, 0x70175b0d
outsb dx, byte [rsi]
sbb byte [rbp + 0x2b], ch
imul ebp, dword [rbx + 0x61], 0xdb76f37
push r8
xor al, 0x34
jo 0x4024f7
jb 0x4024dd
insb byte [rdi], dx
je 0x4024cd
jbe 0x402514
popfq
sti
imul ebx, dword [rcx + 0x5f335315], 0x72
add eax, 0x1caa7545
mov dh, 0x5b
jnp 0x4024db
pop rdi
xor eax, 0x31734c3a
movsq qword [rdi], qword ptr [rsi]
jnp 0x402471
xor dword cs:[rbx + 0x73], 0x54761d43
sub al, byte [rdx + 0x5f]
push rsp
and dword [rax], edx
jnp 0x4024f2
jl 0x40251d
xor dword [rdi + 0x2e], ebx
ret
push rbp
xor eax, 0x907be534
cmp al, 0x42
xor eax, 0x345ab5e1
nop
sti
ret 0xb35a
or al, 0x52
xchg r10d, r14d
ja 0x40253d
or eax, 0x4e470b34
push rbp
std
mov edi, 0x2048d83d
push rdx
adc al, byte [rdi + 0x4c]
pop rdi
push rbx
test bh, dh
lodsd eax, dword [rsi]
nop
sub r11b, r12b
fidiv word fs:[rsi + 0x7310c2c2]
je 0x402533
pop rcx
sbb byte [rdi], r13b
fcomp st(0), st(5)
sbb ebp, dword [r9 + r13*2 + 0x62]
mov dword [rbx + 0x73], esp
jne 0x402578
loope 0x4025a9
test byte [rdx + rsi + 0x34], dl
je 0x4025a5
push rbx
ja 0x402541
outsd dx, dword [rsi]
or ebp, ebp
insd dword [rdi], dx
jne 0x40257c
outsd dx, dword [rsi]
pop di
movsd dword [rdi], dword ptr [rsi]
insd dword [rdi], dx
je 0x4025a0
xchg eax, esp
test eax, 0x634bfb7f
jp 0x402598
jne 0x4025a4
pop r8
pop rax
pop rdi
xor ebp, dword [rcx - 0x51f6ae45]
cmpsd dword [rsi], dword ptr [rdi]
xor ah, al
test dword [rdi + 0x6d], esp
nop
dec ch
add rbx, qword [rbx + 0x5f764aea]
push rdx
and bl, bh
cmpsd dword [rsi], dword ptr [rdi]
push r13
jp 0x40259d
pop rdx
insb byte [rdi], dx
push rax
jbe 0x402602
insd dword [rdi], dx
fnsave dword [rbx + 9]
sbb esi, dword ss:[rdx]
push bp
insb byte [rdi], dx
jmp 0x402530
mov dh, 0x83
sbb bl, byte [rdi + 0x32]
xchg eax, ebx
jo 0x402616
je 0x402559
mov dl, 0xb1
pop rbx
jbe 0x40260f
sbb dword [rdx + rbx*2], esi
test al, 0x5b
push 0xb
add dword [rbx + 0x611f304d], ebp
nop
test byte [rcx], ah
movabs eax, dword [0x845310245524574]
fldenv [rcx + 0x36]
mov edi, 0xb5658cdd
pop rbx
retf 0x121c
push r12
push rcx
jne 0x40255c
mov edi, 0x4430cb6
push rsp
imul ebx, dword [rbx], 0xed0b854f
pop r15
jne 0x4025c1
mov esi, 0x2d7e6373
mov al, 0x17
mov dl, 0x66
push rax
cmp eax, 0xb349c33b
lodsd eax, dword [rsi]
push rsp
movsb byte [rdi], byte ptr [rsi]
mov dword [rcx], esp
xor esp, dword [rip + 0x6d4bc801]
push 0x49
push 0x469b6165
and dword [rsi], ebx
push rbx
leave
jo 0x4025a1
and qword [r10 + r14 - 0x70], r10
movabs byte [0x89aa64a56b6f19c5], al
shl dword [rsp + rbp*4 + 0x7c], 1
add eax, 0xa163dd73
punpckldq mm0, qword [rbx + rdi*4 - 0x7a]
test byte [rbx - 0x1d], al
push rsp
mov edi, 0xdb0c34de
xor dh, cl
xlatb
cmp dword [rsp + rdi*8 + 0xc84c167], esp
js 0x402651
jb 0x4025e7
and dword [rdx - 0x13dbb9ea], ebx
sub dword [rax + 0x3a], esi
or dword [r10 - 0x12af1f6b], r14d
push rsp
test dword [rsi + 0x422768f0], ebp
cmpsd dword [rsi], dword ptr [rdi]
jne 0x4026b6
lodsd eax, dword fs:[rsi]
in al, dx
insd dword [rdi], dx
movsxd rdx, dword [rsi - 0x31]
rol dword [rax], cl
adc byte [rdi + 0x69], bl
paddq mm6, qword [rax + 0x56016939]
cli
xor dh, byte [rsi - 0x5d]
mov ch, 0x52
mov dword [rsp + rax + 0x78], eax
imul esp, dword [rcx - 0x7f], 0xb5703590
test dword fs:[rdx], esi
cwde
int 0x42
add cl, byte [rbx + 0x4915f38d]
movabs eax, dword [0xa508174e74756de6]
in eax, 0xfb
pop rdi
pop rdx
stosd dword [rdi], eax
mov ebp, 0xba6257b0
movabs byte [0x57420715a05dae6e], al
jbe 0x4026e9
sub esp, dword [rdi]
fsubr dword [rsi + 0x498202f5]
pop rdi
xor dword [rdi + 0x7e], esp
outsb dx, byte [rsi]
ja 0x402705
jo 0x402737
pop rbx
adc dl, byte [rbp + 0x7d]
fld dword fs:[rip - 0x102f5124]
pop rsi
sbb eax, dword [rbx + 0x43]
fisub dword [rbp - 0x24]
push 0x79700c0b
fbstp tbyte [rcx]
sub dh, byte [rsi - 0x25]
or eax, 0x734642bd
jns 0x40275d
imul esp, dword [rdx + 7], 0x74
jb 0x4026d1
pop rsp
ret
push 0x707bda09
insd dword [rdi], dx
fnsave dword [rdx + 0x6e]
outsd dx, dword [rsi]
jae 0x402735
adc eax, 0xeb580d67
movsd dword [rdi], dword ptr [rsi]
sbb esp, dword [rbp + 0x3075622e]
sub eax, 0x660d3b69
out dx, al
lodsd eax, dword [rsi]
mov ch, 0xe8
cmp byte [rcx], cl
jns 0x402791
ja 0x4026ff
sbb dword [r14 - 0x40], r14d
push 0x50af60c
pop rdi
sbb edi, dword [rbx + 0x7a]
sub byte [rcx], cl
cmp eax, 0x88085bd3
je 0x4027b2
movabs eax, dword [0x86f2cb736e07b0a]
imul edi, dword [rax + 5], 0x2c1e2433
movabs eax, dword [0x64686a68652e146f]
jb 0x402789
xor al, 0x75
retf
or eax, 0x789f635d
retf
jo 0x4027c2
scasb al, byte [rdi]
imul eax, dword [rbx - 0x6fee9343], 0x43
or bl, byte [rsi + rsi]
or ebp, dword [rdx + 0x64]
movabs eax, dword [0x6800ad36a16f66cd]
jnp 0x4027e0
insd dword [rdi], dx
int 0x50
jae 0x4027a3
add al, 0xf
push rdx
std
add byte [rax + 0x800609], ah
push rdi
add esi, esp
adc bh, byte [rdi]
xor esp, dword [rbx + rax*2]
jb 0x4027bc
add dword [rbx], esp
and byte [rbx + 0x5407480c], al
push rsp
leave
nop
or al, 0xc9
and byte [rcx + rsi], al
leave
and byte [rbx + 0x2474740c], al
in al, 0x90
idiv dil
ljmp [rdi - 0x68]
nop
and dword [rcx], ebx
cwde
add eax, 0x9361c08
xchg byte [rsi + 0x43], cl
shl ah, 0xec
and byte [rbx - 0x4fe0740], al
ror byte [rdx + rsi], cl
fnstcw word [rdi]
sbb byte [rsi + 3], dl
adc ebx, esi
movsb byte [rdi], byte ptr [rsi]
pop rax
sysret
xchg eax, esi
je 0x402802
leave
mov esi, 0xffbf5e02
xchg eax, edx
mov bl, 0x37
sub dword [rdi], esi
mov edi, 0x21ba402a
sbb eax, dword [rdx]
imul edi, dword [rdi], -2
fsub qword [rax + 7]
cmpsd dword [rsi], dword ptr [rdi]
ror byte [rcx + 0x37], 0x65
xchg eax, ebx
jp 0x402861
add al, 0xb
jnp 0x4027a9
xchg dword [rdi], eax
out 6, eax
mov ebx, 0xff3f09b2
test byte [rdi], bh
sbb al, 0x64
nop
js 0x4028a1
add byte [rcx], 0x20
or al, 0x20
xchg eax, edi
sbb dword [rsi + 0x2acde113], ecx
enter 0x3f06, 7
inc dword [rsp + rbp*2 - 0x76e5c6d8]
leave
or dword [rsi + 0x52], ebp
inc dword [rdi]
jo 0x402859
or cl, bl
nop
or eax, 0x3f940710
sub eax, 0x27acdc30
wait
or al, 0xd9
xchg eax, ecx
setge byte [rdi]
or esp, esp
cdq
jg 0x402819
sbb bh, byte [rdi]
fsub qword [rax + rcx]
leave
movabs dword [0x9ffce4a1a4807df], eax
test eax, 0x61d9e4bf
lahf
add rax, qword [rsp + r12*2 - 0x4edfd1b8]
and eax, 0xdf426e67
jg 0x4028fb
xor cl, al
nop
or eax, 0xb8b83fbf
nop
pop rbp
and al, 0x1c
add edi, dword [rdi]
leave
cmp ebx, ecx
movabs al, byte [0x286e9a4ca17f0717]
fisttp dword [rsi]
add eax, dword [rip + 0x57466f08]
mov edi, 0xdd20320c
out 0x3f, eax
psubb mm7, mm0
mov cl, 0xec
or eax, 0x3f93f381
je 0x4028c9
clc
xchg eax, esi
wait
int 0x96
wait
jg 0x402868
or dword [rbx + 0x72], ebx
jg 0x4028ee
or al, 0xb2
sub eax, 0x2fbf9864
jb 0x40287b
or byte [rcx], al
add ecx, ecx
fldenv [rax + 0x41]
xor byte [r15], r15b
cwde
outsb dx, byte [rsi]
xor ah, byte [rbx + rax*2]
or bl, byte [rax + 0x250dd207]
call qword [eax]
adc byte [rdi], bh
or byte [rax + 0x7a80326], bl
dec dword [rax]
nop
or eax, 0x7f159436
xor byte [rdi], dl
and esp, esp
mov al, 0x3f
xor al, 7
sahf
popfq
mov dl, 0xd9
adc dword [rbx], edi
jg 0x402945
add dword [rbx], ebp
wait
mov cl, 0x48
mov ebx, 0x7939a400
loopne 0x402964
mov eax, 0x27351f08
xchg dword [rax - 0x6780f6ff], esi
cmp dword [rsi], edi
add byte [rax], al
sub al, 0x92
or byte [rdx], dl
add byte [rax], al
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x3cf7fdea], ecx
out 0x4c, al
enter 0x4d69, -0x18
push rax
sbb al, byte [rax]
add byte [rdx], dh
or byte [rax], al
add al, bh
add byte [rax], al
add qword [r8], rax
hlt
add byte [rax], al
add bh, bh
