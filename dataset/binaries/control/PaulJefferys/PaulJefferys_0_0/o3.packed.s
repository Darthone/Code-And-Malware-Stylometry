call 0x400de0
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x400bf8
add ebx, ebx
je 0x400bae
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x400be6
cmp rbp, -4
ja 0x400be6
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x400bce
add ecx, 4
mov dl, byte [rax]
je 0x400bf6
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x400be6
ret
cld
pop r11
cmp r8b, 2
je 0x400c0e
jmp 0x400c8b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x400c1e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x400c06
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x400c36
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x400c23
sub eax, 3
jb 0x400c54
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x400c8b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x400c7b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x400c79
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x400c68
cmp rbp, -0xd00
adc ecx, eax
call 0x400bba
jmp 0x400c0e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x400d64
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x400d02
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x400d4e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x400d21
push 0x3a707474
jne 0x400d7a
js 0x400d3a
jae 0x400d74
outsb dx, byte cs:[rsi]
je 0x400d33
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x400da1
jb 0x400d93
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x400dbe
jb 0x400dd1
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x2117f5
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x2117f5
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x400c9c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x400dc7
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x400d75
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f0e6f
jb 0x400e87
movsxd rbp, dword [rdi]
jae 0x400e81
insb byte [rdi], dx
js 0x400e87
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x400e67
cmp rsi, rcx
jae 0x400e6f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x400e4e
cmp al, 0x8f
ja 0x400e4e
cmp byte [rsi - 2], 0xf
je 0x400e54
sub al, 0xe8
jg 0x400e51
push rdi
cmp al, 1
ja 0x400e3c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x400e3f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x400e6c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x400ec3
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1341
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x400f07
mov al, 0xa
jmp 0x400f07
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x400ee3
inc ebx
mov al, 0
jmp 0x400f0b
mov al, 2
jmp 0x400f0b
mov al, 3
jmp 0x400f0b
mov al, 0x3c
jmp 0x400f0b
push rcx
rcr ah, 1
fstp st(7)
jle 0x400f4c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x400f5e
jg 0x400f50
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a66d3
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x400faa
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6127
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x400fb2
cmp esi, 0x21585055
jne 0x400fb6
jge 0x400fa8
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x400fab
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x400faf
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40105b
pop rcx
or al, 0x3b
jb 0x401061
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x400fd3
jmp 0x400fd5
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3660f16
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5315e
in eax, dx
jg 0x40100d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401053
mov bh, 0x2a
add edi, 0x10
jmp 0x401050
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40108d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4010c9
jne 0x4010e0
fstpnce st(6), st(0)
jle 0x4010a9
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4010df
jrcxz 0x401113
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b077
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401192
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401152
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295727
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4011c5
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40115f
and ecx, 7
or al, 0xeb
jae 0x4011ca
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x4011ff
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40123d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x4011f6
push rax
call 0xffffffff868d0ee3
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401200
std
cmp edi, esi
xchg eax, edi
jle 0x401255
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c957e1
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401253
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401241
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40126a
js 0x4012aa
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40133c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2577
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40135d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401362
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc20e14
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4012f0
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
jrcxz 0x40137e
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + 0x900a2a], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dil, dil
sbb byte [rax], bl
add byte [rax], al
xchg eax, ecx
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401416
je 0x40141f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x4013e8
mov dh, 0x7d
jbe 0x4013e7
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401420
sahf
sahf
add al, 0
cwde
add eax, 0x1f90d800
and byte [rdi + 0x5900006], bl
add byte [rcx + rcx], bl
nop
nop
invd
add byte [rax + 9], bl
add al, bh
in al, 7
enter 0xa27, 0
sub byte [rdx], cl
or eax, dword [rax]
cmp byte [rdx + rsi*8], cl
or esp, esp
add ecx, dword [rax + rax]
or eax, 0xf90dd000
add al, 0xf2
add dword [rsi], ecx
add al, ah
sldt word [rbx + rdx]
jns 0x401425
stc
add byte [rax], dl
add byte [rax], dl
adc dword [rax], eax
add r12, qword [rcx + 2]
adc bl, byte [rdi]
adc eax, dword [rax + 0x13f201fc]
add ah, ch
adc al, 0x14
add al, ch
sbb eax, 0xb027c860
xor dl, byte [rip + 0x1617]
in al, 0x13
enter 0x1707, 0
or byte [rax], bl
add al, bh
add edx, esi
add ebx, dword [rcx]
add byte [rax], al
and byte [rdx], bl
add al, cl
fld dword [rdx + rsi*8]
add al, 0x1b
add al, ah
sbb al, 0x13
in al, dx
fimul word [rbp + 1]
add al, 0
int1
dec dword [rbx + rbx]
fnsave dword [rsp + rbx*2]
pop rcx
mov edi, 0xb0029719
adc dword [rax + 0x43], eax
xor cl, al
test byte [rdi], dl
sbb esi, eax
imul dword cs:[rsi]
in al, 0x20
xor byte [rdx], dl
pop rdi
xor eax, 0x6cec1910
lock and dword [rdi + 1], ebx
push rbx
xor bl, r8b
xchg eax, ebp
jp 0x4014e8
push rax
xchg byte [rax], cl
mov ebx, 0xa5972212
xlatb
sbb dword [rsp + rbx + 0x8fae6c], 0x11
jbe 0x401476
nop
mov al, 0xe4
and byte [rax], ah
xchg byte [rdx + rsi + 0x1277d176], cl
fistp word [rbx]
ret 0x1086
add byte [rdi - 0x15], al
add eax, 0x1195d884
lahf
inc byte [rdi - 9]
wait
adc al, dh
scasb al, byte [rdi]
adc al, 0x98
adc al, 0x1f
and eax, 0x94ef1917
xor byte [rdi], al
cmp byte [rcx], al
outsd dx, dword [rsi]
and cl, 0x5e
mov edi, 0x413f5a02
ficom word [rbp + 0x5800d535]
adc esp, esp
leave
ror dword [rsi + 2], 0x17
ret
add al, byte [rax + 0x19086e11]
in al, dx
sub al, byte [rdi + 0x68]
lea edx, [rdi]
sbb eax, dword [rdx + 6]
nop
and byte [rax + rsi*4 + 0x6c219147], bl
or ah, al
cmp eax, dword [rbp + rbx*2 + 0x2ff51f59]
sbb al, byte [rdx]
nop
and esp, esp
add bh, byte [rcx]
push rbx
mov edx, 0xc7e06b21
js 0x401565
and byte [rax - 0x6be654ff], dh
adc dword [rdi - 0x796fd0fc], edx
and dword [rbx - 0x43], esp
xchg eax, edi
adc cl, ch
sbb dl, al
retf -0x4271
mov bh, 0x11
cmp al, 0x7b
or edi, esp
and al, 0x98
cmc
add dl, byte [rdi]
add byte [rdx], ah
mov dl, 0x3d
sbb dword [rax + rcx - 0x27a0fd07], -0x14
mov ebp, 0x2f030543
adc byte [rcx], al
ja 0x40158e
adc cl, byte [rax]
sbb al, 3
xchg dword [rax + 3], ebx
ficom word [rax + 0x65d0479c]
cmpsd dword [rsi], dword ptr [rdi]
nop
xor cl, al
fld dword [rcx + 0x65]
add byte [rdi + 0x75], al
adc byte [rdx + rdx + 0x17b14366], bl
add al, 0x40
sbb al, byte [rdx - 0xa]
sbb esp, dword [rdi + 0x642104af]
or byte [rbx - 0x6faee8cb], bh
xchg dword [eax + 0x77012069], edx
sub byte [rsi], ah
add eax, 0xb8b90876
add eax, 0x43be4a17
enter 0x772f, 5
xlatb
sbb bl, al
nop
pushfq
jo 0x401642
add eax, 0x479fa01f
or al, 0x61
mov r15b, 0x17
shl byte [rdx], 1
mov byte [rsi + rsi*2], cl
adc al, byte [rbx]
jmp 0x4015bd
pushfq
xchg eax, edx
sbb r8b, byte [r11]
jg 0x401652
call qword [rsi]
scasd eax, dword [rdi]
movsxd rsi, dword [rdx + 0x74]
jae 0x4015e1
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
mov bh, 0xf6
outsd dx, dword [rsi]
dec dword [rdx + 0x43]
push rdx
pop rdi
push r11
push rsp
or dword [rax], eax
jb 0x40166b
imul ebx, dword [edx], 0xb7745f06
mov bh, 0x77
ljmp [rbp + 0x5f]
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x40163a
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 - 0x14], esi
outsd dx, dword [rsi]
mov edi, 0x5f7372fd
jne 0x4016a6
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x40169f
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x42243538
jg 0x40163a
or ebx, dword [rdi + 0x66]
imul ebp, dword [rsi + 0x69], 0x61727208
jns 0x4016aa
cwde
sti
jbe 0x40164c
jb 0x4016cc
add byte [rsi + 0xa], ah
insd dword [rdi], dx
and byte gs:[rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x401690
or eax, 0xdd613b5
pop rdi
sub dword [rdx + rbp + 0x6d], esi
adc cl, byte [rbx]
insd dword [rdi], dx
jg 0x401629
lahf
jo 0x4016e1
jae 0x401626
pop rdi
fsubp st(5)
mov bh, 0xb7
xor al, 0x6f
jne 0x4016f9
adc ebx, dword [rdx + 0x53]
je 0x4016d6
cmp byte [rdx], dl
imul ebp, dword [rdi + 0x37], 0xeffb99b0
push rdx
pop r15
ror byte [rbx], cl
leave
insb byte [rdi], dx
stc
push rbp
and byte [rax + 0x44], cl
push rdx
adc r14, r14
jle 0x4016ac
push rbx
cmc
push rsp
sub byte [r9 + 0x615aee64], r8b
adc byte [rdx], dl
pop cx
push rsi
fistp word [rbp + 0x49]
jle 0x401720
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x40171c
imul eax, dword [rax + 0x40], 0x4342494c
pop rax
pop rax
pop rdi
xor esi, dword [rbp + 0x3646bbc2]
xor ch, byte [rcx + rbp*2 + 0x62]
movsxd rsi, dword [rdi]
test al, 0x5f
push -0x5a0674ec
sbb r14b, byte [rax + r13*2 + 0x72]
outsd dx, dword [rsi]
mov r14b, 0x6d
retf
ja 0x40175f
sbb ah, byte fs:[rcx + 0x49]
jbe 0x40173a
or bh, bh
test word [rbp + 0x67], bp
mov al, 0x4a
jbe 0x401771
push rdx
test byte [rcx + 0x433b61fd], dl
insb byte [rdi], dx
jae 0x40169e
pop rdx
insb byte [rdi], dx
push rax
sti
fbstp tbyte [rsi + 0x355d4b82]
movsxd rsi, dword [rcx + rdi*2 + 0x70]
movsxd rax, dword gs:[r13 + 0x31]
xor ebx, dword [rdi + 0x4d]
pop rdi
ja 0x4017a2
mov ecx, 0x58d85f63
mov dh, 0x45
sub eax, 0xb331312e
je 0x4016fe
mov ebx, 0x303885b9
jae 0x4016d7
push rsp
xor al, 0x49
and eax, 0x76273143
cwde
movsd dword [rdi], dword ptr [rsi]
insb byte [rdi], dx
ror dword [rcx + rax*4 + 0x687e151e], 0xf
pop rdi
xor ch, byte [rsi]
add ebp, esp
movsxd rdi, dword [rax + 0x61]
adc dl, byte [rdi + 0x16]
mov dl, 0xb6
js 0x4017ae
sbb dword [rbp + 0x44], ebx
pop rbx
jnp 0x40179e
push r12
movsb byte [rdi], byte ptr [rsi]
movsxd rcx, dword [rbx*2 + 0x4363f8d7]
push rsp
sbb rcx, qword [rdi + 0x76]
add eax, 0x716edb36
pop rdi
jne 0x4017d3
sub ch, byte fs:[rax]
jnp 0x401805
mov dh, 0xb5
and byte [r9 - 0x5e], 0x76
imul esi, dword [rcx], 0x17edfb30
xchg eax, edx
xor al, 0x61
or eax, 0x45456449
push rdx
adc dl, byte [rdx + rbx*2 - 0x28ad7af8]
add al, cl
ret
xor byte [rbx + rsi + 0x194a3b91], bl
pushfq
sbb dl, byte [rdx - 0x7e]
movsxd rsi, dword [rbx]
push rdi
mov ah, 0x34
sbb ch, byte [rbp + 0x69c5e85d]
imul esp, dword [rsi + 0x66], 0xb736a484
fst qword [rip + 0x63311360]
push -0x259aa08e
jae 0x401832
fxch st(0), st(2)
sbb dh, byte [rcx + 0x45]
fistp word [rdx + 0x19610573]
scasd eax, dword [rdi]
shl dword [rip - 0x6ef358c3], 1
or byte [rbp + 0x6f58d85c], al
push rsi
jo 0x4017b6
ror dword [rax + 0x6f], 0x35
push rax
and edi, ebp
add eax, 0x3cb026e9
push rdx
xor esp, dword fs:[rbx - 0x25]
cmp al, byte [rdx - 0xbcf1c9d]
push rbx
push rax
xor dword [rbx + 0x1b], esp
or dword [rbp + 0x33], ebp
xchg eax, ebp
sbb byte [rsi + 0x62], dl
insb byte [rdi], dx
loope 0x40182e
outsd dx, dword [rsi]
xor eax, 0x68836c66
fsubr qword [rbp + 0x22add8dc]
movsxd rbp, dword [rbx - 0x23]
push -0x62d49295
mov al, 0x84
insb byte [rdi], dx
push qword [rcx + rbp*2]
jl 0x4018a4
cmp dword [rdx], esp
imul ecx, dword [rbx + rax*2 - 0x63], 0xf6c746d2
sbb byte [rax - 0x2bb0bbb7], ah
outsb dx, byte [rsi]
adc eax, 0x8d640c80
sub cl, byte [rsi + 0x6f]
mov word [rcx], cs
mov ss, word [rbx]
outsd dx, dword [rsi]
cmp dword [rbx], edi
cmp r13b, byte [rsi + 0x6fe32b18]
cmp dword [rcx], ebp
adc cl, byte [rcx + rbx*2]
sub al, byte [rsp + rbp*2 - 0x5e9a9090]
adc eax, 0xf0b97a78
js 0x40189f
xchg eax, ecx
mov bh, 0x5a
add dword [rsi - 0x2d], 0x765d452d
xor ch, ch
lodsd eax, dword [rsi]
xchg eax, esi
imul ebp, dword [rax], 0x24
mov ch, bl
xor dword [rsi], ebp
xor esp, dword [rax]
jo 0x401855
rcl byte [rbp + 0x6e], cl
leave
outsb dx, byte [rsi]
cmp ebp, dword [rbp - 0x4d]
jne 0x40188e
test qword [r11 + 0x43], 0x703330af
mov cl, 0x45
movsxd rax, ebp
xor dh, byte [rax]
xchg eax, ecx
or edi, dword [rax]
mov cl, byte [rdx]
fisttp dword [rbp + 0x45]
movabs al, byte [0x62796d7973a84527]
push -0x3d
jbe 0x4018d6
je 0x401943
push -0x2292e1f7
jb 0x401943
jo 0x4018e2
outsb dx, byte [rsi]
outsd dx, dword [rsi]
sub dword cs:[rip + 0x5db66715], 0x670d83f8
outsb dx, byte [rsi]
jne 0x401919
jne 0x4018d7
sub eax, 0x990d004c
jnp 0x401961
sub eax, 0x640938f9
jns 0x40196b
mov al, 0xd6
popfq
mov ch, 0x45
sbb dword [rsi - 0x32], esi
imul ecx, edi, 0x82ad7b0c
wait
pop rdi
sbb ecx, dword [rdi]
ret
sub byte [rcx], cl
jp 0x401932
add al, 0x32
je 0x40198d
or al, byte [rbx]
in eax, 0xb6
sub al, 0x6f
or byte [rbp + 5], cl
xor cl, al
loopne 0x40193b
mov edx, 0x2e226f24
push -0x489645e4
in al, dx
push 0x5d0d7264
movsxd rsp, dword [rbx - 0x17]
movsxd rsp, dword [rbp + 0x70]
mov dh, 4
pop rsp
xlatb
popfq
mov ebp, 0x43a4116c
mov esi, dword [rip + 0x6a0b6c38]
jrcxz 0x4018f4
cwde
int 0xde
cwde
add byte [rax + 0x7b], ch
pop rsi
fistp dword [rdx + 0x4f0e683]
rcl dword [rdx - 3], 0
add byte [rcx], cl
popfq
mov edx, 0x9ecf1b2a
cmp dword [rbx - 0x4d], edi
sysret
sbb al, 0xa4
sbb dword [rdx + 0x7230121], edx
nop
push rsp
push rsp
and byte [rsi + 0x4864864], al
xor dword [rcx + 0x64], esi
nop
je 0x4019b6
or al, 0x72
enter 0x44bb, 0x7f
idiv bh
ljmp [rdi - 0x68]
cwde
xor cl, al
and byte [rbx - 0x27f7fac4], al
xor byte [rbx + rax*2], 0x4e
or ebx, eax
xor bl, al
mov eax, 0x2506fb02
int 0x20
xchg eax, ebx
sbb byte [rsi + 3], dl
cmp al, 0xe1
int 0x82
xlatb
mov eax, dword [rbx]
ja 0x40195c
pop rsi
mov edi, 0x7b3921ff
mov bl, 0xff
mov edi, 0x1ba4063a
mov dl, 2
imul edi, dword [rdi], -2
pop rax
sbb esp, esp
int3
cmpsd dword [rsi], dword ptr [rdi]
movabs al, byte [0x537aff3653082c06]
in al, 4
cmp eax, edi
xor byte [rdx], dh
fsub dword [rcx + 0x21]
inc dword [rdi + rdi + 0x137b3c42]
ja 0x401a0d
adc byte [rdx], al
and byte [rax], cl
xchg eax, edi
sbb dword [rsi + 0x284de113], ecx
enter -0x10fa, 7
inc dword [rsi + 0x1a39286c]
mov dword [rdi], edi
jb 0x4019b3
jo 0x401a28
adc byte [rcx], ah
xchg eax, esp
out dx, eax
or ecx, dword fs:[rdi + rsi]
out 0x26, al
jbe 0x4019d9
loopne 0x401a46
jg 0x401ab3
fadd dword [rdx]
jns 0x401a67
add eax, 0x3733a33f
add eax, dword [rdx + 0x1f]
lcall [rbx]
xchg eax, edx
xchg byte [rdx + 0x10bfa909], dl
xchg byte [rdx + 0x3b100641], dl
mov cl, 6
sbb dword [rax + rcx*2 + 0x4c], esp
xchg eax, ebx
and dword [rcx], ebx
movabs rdi, 0x5c3f07704f245d90
add ecx, ecx
retf
int 0x88
nop
fild word [rdi]
jg 0x401a97
sub byte [rcx], bh
sbb ebx, ebx
xchg eax, ebx
js 0x401a39
pop rcx
movsb byte [rdi], byte ptr [rsi]
sbb ecx, dword [rdx + 0x4e]
mov edi, 0xf3fe710
add cl, al
clc
call qword [rdx]
fnstcw word [rcx + 0x2d5f3ff3]
jmp 0x3f5e86aa
clc
wait
leave
xor esi, dword [rdi]
wait
jg 0x401aa3
add dword [rcx], esp
or dword [rcx + rcx*8], 6
adc byte [rax + 0x6d90648b], bl
mov edi, 0x42011f1f
jb 0x401a56
or byte [rcx], al
add edi, edi
sbb dword [rdx - 0x32], ecx
and byte [rdi], bh
enter 0x400a, 0x70
xchg eax, ebx
and eax, ecx
jg 0x401a6a
add ecx, ebp
adc byte cs:[rdi], bh
or al, ah
leave
test dword [rsp], ebx
fmul dword [rax + 5]
and byte [rsp], ch
or dword [rip + 0x17307f15], 0x3f
sbb eax, 0x3438c216
adc dword [rbx], esi
cmpsb byte [rsi], byte ptr [rdi]
or al, 0x98
jnp 0x401aaf
jg 0x401adc
xor dl, byte [rsi]
leave
add dword [rbx + 0x67939ad7], edi
or eax, 0x8d0ff21
xor dh, byte [rdx + 8]
sbb eax, dword [rax + 9]
jg 0x401afb
sub dword [rax], eax
shl byte [rdx], 0x79
add eax, 1
add byte [rax], al
add byte [rax], ah
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x5ff7fdea], ecx
cmp bl, al
and bl, byte [rcx]
loopne 0x401b6b
xchg eax, edx
sbb byte [rax], bl
add byte [rax], al
xchg eax, ecx
add byte [rax], al
cmp byte [rax], al
add byte [rcx], cl
add bl, ch
hlt
add byte [rax], al
add bh, bh
