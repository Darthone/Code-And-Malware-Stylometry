xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6020d7
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400da0
mov eax, 0
test rax, rax
je 0x400da0
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400de8
mov eax, 0
test rax, rax
je 0x400de8
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x2013f9], 0
jne 0x400e0a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x2013e6], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400e20
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400e1b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x88
mov rax, qword fs:[0x28]
mov qword [rbp - 0x18], rax
xor eax, eax
mov dword [rbp - 0x7c], 0
lea rax, [rbp - 0x7c]
mov rsi, rax
mov edi, obj.fin
call 0x400cb0
mov dword [rbp - 0x68], 0
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
mov esi, 9
mov edi, 0x6020e8
call sym.std::ios_base::precision
mov esi, 9
mov edi, 0x6022f8
call sym.std::ios_base::precision
mov ebx, dword [rbp - 0x7c]
mov esi, str.HELLO
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
mov esi, 0x401901
mov rdi, rax
call sym.std::operator___std::char_traits_char__
mov esi, ebx
mov rdi, rax
call 0x400bf0
mov esi, sym.std::endl_char_std::char_traits_char__
mov rdi, rax
call sym.std::ostream::operator__
mov eax, dword [rbp - 0x7c]
test eax, eax
jle 0x401729
add dword [rbp - 0x68], 1
mov eax, dword [rbp - 0x7c]
sub eax, 1
mov dword [rbp - 0x7c], eax
pxor xmm0, xmm0
movsd qword [rbp - 0x60], xmm0
lea rax, [rbp - 0x70]
mov rsi, rax
mov edi, obj.fin
call 0x400cb0
mov rdx, rax
lea rax, [rbp - 0x6c]
mov rsi, rax
mov rdi, rdx
call 0x400cb0
mov dword [rbp - 0x78], 0
mov edx, dword [rbp - 0x78]
mov eax, dword [rbp - 0x70]
cmp edx, eax
jge 0x400f67
mov eax, dword [rbp - 0x78]
cdqe
shl rax, 3
lea rbx, [rax + obj.sval]
mov eax, dword [rbp - 0x78]
cdqe
shl rax, 3
add rax, obj.eval
mov rsi, rax
mov edi, obj.fin
call sym.std::istream::operator__
mov rsi, rbx
mov rdi, rax
call 0x400c00
mov eax, dword [rbp - 0x78]
add eax, 1
mov dword [rbp - 0x78], eax
jmp 0x400f1b
mov dword [rbp - 0x78], 0
mov edx, dword [rbp - 0x78]
mov eax, dword [rbp - 0x70]
cmp edx, eax
jge 0x401063
mov dword [rbp - 0x74], 0
mov edx, dword [rbp - 0x74]
mov eax, dword [rbp - 0x70]
cmp edx, eax
jge 0x401055
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
shl rax, 3
add rax, obj.d
mov rsi, rax
mov edi, obj.fin
call sym.std::istream::operator__
mov edx, dword [rbp - 0x78]
mov eax, dword [rbp - 0x74]
cmp edx, eax
jne 0x40100e
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
mov qword [rax*8 + obj.d], 0
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
movsd xmm0, qword [rip + 0x8fa]
movsd qword [rax*8 + obj.t], xmm0
mov eax, dword [rbp - 0x74]
add eax, 1
mov dword [rbp - 0x74], eax
jmp 0x400f83
mov eax, dword [rbp - 0x78]
add eax, 1
mov dword [rbp - 0x78], eax
jmp 0x400f6e
mov dword [rbp - 0x64], 0
mov eax, dword [rbp - 0x70]
cmp dword [rbp - 0x64], eax
jge 0x40123e
mov dword [rbp - 0x78], 0
mov edx, dword [rbp - 0x78]
mov eax, dword [rbp - 0x70]
cmp edx, eax
jge 0x401235
mov dword [rbp - 0x74], 0
mov edx, dword [rbp - 0x74]
mov eax, dword [rbp - 0x70]
cmp edx, eax
jge 0x401227
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x64]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
mov rax, qword [rax*8 + obj.d]
test rax, rax
js 0x401219
mov eax, dword [rbp - 0x74]
movsxd rcx, eax
mov eax, dword [rbp - 0x64]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
mov rax, qword [rax*8 + obj.d]
test rax, rax
js 0x401219
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x64]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
mov rcx, qword [rax*8 + obj.d]
mov eax, dword [rbp - 0x74]
movsxd rsi, eax
mov eax, dword [rbp - 0x64]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rsi
mov rax, qword [rax*8 + obj.d]
add rax, rcx
mov qword [rbp - 0x58], rax
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
mov rax, qword [rax*8 + obj.d]
test rax, rax
js 0x4011e4
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
mov rax, qword [rax*8 + obj.d]
cmp rax, qword [rbp - 0x58]
jle 0x401219
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
lea rdx, [rax + rcx]
mov rax, qword [rbp - 0x58]
mov qword [rdx*8 + obj.d], rax
mov eax, dword [rbp - 0x74]
add eax, 1
mov dword [rbp - 0x74], eax
jmp 0x401092
mov eax, dword [rbp - 0x78]
add eax, 1
mov dword [rbp - 0x78], eax
jmp 0x40107d
add dword [rbp - 0x64], 1
jmp 0x40106a
mov dword [rbp - 0x78], 0
mov edx, dword [rbp - 0x78]
mov eax, dword [rbp - 0x70]
cmp edx, eax
jge 0x4013c3
mov dword [rbp - 0x74], 0
mov edx, dword [rbp - 0x74]
mov eax, dword [rbp - 0x70]
cmp edx, eax
jge 0x4013b5
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
mov rdx, qword [rax*8 + obj.d]
mov eax, dword [rbp - 0x78]
cdqe
mov rax, qword [rax*8 + obj.eval]
cmp rdx, rax
jg 0x4013a7
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
mov rax, qword [rax*8 + obj.d]
pxor xmm0, xmm0
cvtsi2sd xmm0, rax
mov eax, dword [rbp - 0x78]
cdqe
movsd xmm1, qword [rax*8 + obj.sval]
divsd xmm0, xmm1
movsd qword [rbp - 0x50], xmm0
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
movsd xmm1, qword [rax*8 + obj.t]
pxor xmm0, xmm0
ucomisd xmm0, xmm1
ja 0x401371
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
movsd xmm0, qword [rax*8 + obj.t]
ucomisd xmm0, qword [rbp - 0x50]
jbe 0x4013a7
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
movsd xmm0, qword [rbp - 0x50]
movsd qword [rax*8 + obj.t], xmm0
mov eax, dword [rbp - 0x74]
add eax, 1
mov dword [rbp - 0x74], eax
jmp 0x40125a
mov eax, dword [rbp - 0x78]
add eax, 1
mov dword [rbp - 0x78], eax
jmp 0x401245
mov dword [rbp - 0x64], 0
mov eax, dword [rbp - 0x70]
cmp dword [rbp - 0x64], eax
jge 0x4015b7
mov dword [rbp - 0x78], 0
mov edx, dword [rbp - 0x78]
mov eax, dword [rbp - 0x70]
cmp edx, eax
jge 0x4015ae
mov dword [rbp - 0x74], 0
mov edx, dword [rbp - 0x74]
mov eax, dword [rbp - 0x70]
cmp edx, eax
jge 0x4015a0
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x64]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
movsd xmm0, qword [rax*8 + obj.t]
pxor xmm1, xmm1
ucomisd xmm0, xmm1
jb 0x401592
mov eax, dword [rbp - 0x74]
movsxd rcx, eax
mov eax, dword [rbp - 0x64]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
movsd xmm0, qword [rax*8 + obj.t]
pxor xmm1, xmm1
ucomisd xmm0, xmm1
jb 0x401592
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x64]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
movsd xmm1, qword [rax*8 + obj.t]
mov eax, dword [rbp - 0x74]
movsxd rcx, eax
mov eax, dword [rbp - 0x64]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
movsd xmm0, qword [rax*8 + obj.t]
addsd xmm0, xmm1
movsd qword [rbp - 0x48], xmm0
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
movsd xmm1, qword [rax*8 + obj.t]
pxor xmm0, xmm0
ucomisd xmm0, xmm1
ja 0x40155c
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
movsd xmm0, qword [rax*8 + obj.t]
ucomisd xmm0, qword [rbp - 0x48]
jbe 0x401592
mov eax, dword [rbp - 0x78]
mov edx, dword [rbp - 0x74]
movsxd rcx, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
movsd xmm0, qword [rbp - 0x48]
movsd qword [rax*8 + obj.t], xmm0
mov eax, dword [rbp - 0x74]
add eax, 1
mov dword [rbp - 0x74], eax
jmp 0x4013f2
mov eax, dword [rbp - 0x78]
add eax, 1
mov dword [rbp - 0x78], eax
jmp 0x4013dd
add dword [rbp - 0x64], 1
jmp 0x4013ca
mov esi, str.Case__
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
mov rdx, rax
mov eax, dword [rbp - 0x68]
mov esi, eax
mov rdi, rdx
call 0x400bf0
mov esi, 0x40190a
mov rdi, rax
call sym.std::operator___std::char_traits_char__
mov esi, str.Case__
mov edi, obj.fout
call sym.std::operator___std::char_traits_char__
mov rdx, rax
mov eax, dword [rbp - 0x68]
mov esi, eax
mov rdi, rdx
call 0x400bf0
mov esi, 0x40190a
mov rdi, rax
call sym.std::operator___std::char_traits_char__
mov dword [rbp - 0x64], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x64], eax
jge 0x401706
lea rax, [rbp - 0x78]
mov rsi, rax
mov edi, obj.fin
call 0x400cb0
mov rdx, rax
lea rax, [rbp - 0x74]
mov rsi, rax
mov rdi, rdx
call 0x400cb0
mov eax, dword [rbp - 0x78]
lea edx, [rax - 1]
mov eax, dword [rbp - 0x74]
sub eax, 1
movsxd rcx, eax
movsxd rdx, edx
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
mov rbx, qword [rax*8 + obj.t]
mov esi, 0x401901
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
mov qword [rbp - 0x88], rbx
movsd xmm0, qword [rbp - 0x88]
mov rdi, rax
call 0x400be0
mov eax, dword [rbp - 0x78]
lea edx, [rax - 1]
mov eax, dword [rbp - 0x74]
sub eax, 1
movsxd rcx, eax
movsxd rdx, edx
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 2
add rax, rcx
mov rbx, qword [rax*8 + obj.t]
mov esi, 0x401901
mov edi, obj.fout
call sym.std::operator___std::char_traits_char__
mov qword [rbp - 0x88], rbx
movsd xmm0, qword [rbp - 0x88]
mov rdi, rax
call 0x400be0
add dword [rbp - 0x64], 1
jmp 0x401616
mov esi, sym.std::endl_char_std::char_traits_char__
mov edi, obj.fout
call sym.std::ostream::operator__
mov esi, sym.std::endl_char_std::char_traits_char__
mov edi, obj.std::cout
call sym.std::ostream::operator__
jmp 0x400ed0
mov ebx, 0
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov eax, ebx
mov rbx, qword [rbp - 0x18]
xor rbx, qword fs:[0x28]
je 0x40176c
jmp 0x401767
mov rbx, rax
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
call sym.imp.__stack_chk_fail
add rsp, 0x88
pop rbx
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
cmp dword [rbp - 4], 1
jne 0x401811
cmp dword [rbp - 8], 0xffff
jne 0x401811
mov edi, obj.std::__ioinit
call sym.std::ios_base::Init::Init
mov edx, obj.__dso_handle
mov esi, obj.std::__ioinit
mov edi, sym.std::ios_base::Init::_Init
call sym.imp.__cxa_atexit
mov esi, 0x20
mov edi, 0x10
call sym.std::operator_
mov edx, eax
mov esi, str..._.._.._output.txt
mov edi, obj.fout
call sym.std::basic_ofstream_char_std::char_traits_char__::basic_ofstream
mov edx, obj.__dso_handle
mov esi, obj.fout
mov edi, sym.std::basic_ofstream_char_std::char_traits_char__::_basic_ofstream
call sym.imp.__cxa_atexit
mov edx, 8
mov esi, str..._.._.._input.txt
mov edi, obj.fin
call sym.std::basic_ifstream_char_std::char_traits_char__::basic_ifstream
mov edx, obj.__dso_handle
mov esi, obj.fin
mov edi, sym.std::basic_ifstream_char_std::char_traits_char__::_basic_ifstream
call sym.imp.__cxa_atexit
nop
leave
ret
push rbp
mov rbp, rsp
mov esi, 0xffff
mov edi, 1
call sym.__static_initialization_and_destruction_0
pop rbp
ret
push rbp
mov rbp, rsp
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
mov eax, dword [rbp - 4]
or eax, dword [rbp - 8]
pop rbp
ret
nop
push rbp
mov rbp, rsp
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov rax, qword [rbp - 0x18]
mov rax, qword [rax + 8]
mov qword [rbp - 8], rax
mov rax, qword [rbp - 0x18]
mov rdx, qword [rbp - 0x20]
mov qword [rax + 8], rdx
mov rax, qword [rbp - 8]
pop rbp
ret
nop word cs:[rax + rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200566]
push rbp
lea rbp, [rip + 0x20056e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x4018c6
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x4018b0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x45], cl
add byte [r8], r12b
add byte [rbx + 0x61], al
jae 0x40196c
and byte [rbx], ah
add byte [rdx], bh
add byte [rsi], ch
outsd dx, dword [rsi]
jne 0x40198c
jo 0x40198f
je 0x40194a
je 0x401996
je str..._.._.._input.txt
imul ebp, dword [rsi + 0x70], 0x742e7475
js 0x4019a6
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x3b031b01
add dword [rbx], ebx
add edi, dword [rbx]
push rsp
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax - 0x5f00000e], dl
add byte [rax], al
add byte [rax], al
hlt
push qword [rax]
add byte [rax], al
div ah
ljmp [rax]
add dword [rax], eax
add byte [rsi], dh
call qword [rax + 1]
add byte [rax], al
push qword [rax + 1]
add byte [rax], al
jmp 0xffffffffc9401977
add byte [rax], al
add ah, bh
call 0x30401985
call qword [rax - 0x5fffffff]
fadd dword [rcx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4019b7
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
mov bl, dh
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4019e7
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
call 0x614019de
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rcx], bl
call qword [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte fs:[rax], al
add byte [rsi + rdi*8], cl
ljmp [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x401a69
add edx, dword [rax]
or eax, 0x1b030040
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
inc dword [rax + 9]
add byte [rax], al
add al, 0x34
sbb eax, dword [rax]
adc byte [rsi + 0x60d4302], al
add qword [rbx], 3
xor ecx, dword [rcx]
or al, 7
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
int3
add byte [rax], al
add dh, bl
cld
lcall [rsi]
adc byte [rsi + 0x60d4302], al
add bl, byte [rcx + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
in al, dx
add byte [rax], al
add byte [rbp + rdi*8 - 1], bl
call qword [rip]
adc byte [rsi + 0x60d4302], al
push rax
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx + rax], cl
add byte [rax], al
cwde
std
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x401b12
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
push rsp
add dword [rax], eax
add al, al
std
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
ucomiss xmm0, dword [rip - 0x28f0000]
adc byte [rdi + 0x12ac0012], dl
add eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rbx], dl
add byte [rax], al
add byte [rax], al
add al, dh
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rdx], 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, 2
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 0xb
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add ah, ah
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x407e82
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 5], ah
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4009], bh
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4009], cl
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add al, bh
or byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add dl, al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
test byte [rbx], 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dl
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], ah
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400c], al
add byte [rax], al
add byte [rsi + 0x400c], dl
add byte [rax], al
add byte [rsi + 0x400c], ah
add byte [rax], al
add byte [rsi + 0x400c], dh
add byte [rax], al
add dh, al
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402148
je 0x402151
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x40215f
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x40215c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002d800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 5], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add dl, al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or byte [rax], al
clc
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or dword [rax], eax
mov byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add byte [rax + 0x4009], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add byte [rax + 0x400b], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
ror byte [rbx], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400d3000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0xd], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add ah, ah
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc byte [rax], al
lock sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc dword [rax], eax
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, byte [rax]
cwde
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
xor al, 0x1b
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], dl
call 0x408312
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
shl byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add al, ah
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400d], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, dh
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rbx], bl
add al, dh
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
call 0x4084aa
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], ch
add byte [rax], dl
add al, bh
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rbx], bl
add byte [rax - 0x63], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add cl, bh
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
in eax, dx
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add dl, bh
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
cli
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rsi + 0x17], dh
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
add byte [rdx], ch
add dword [rax], eax
add byte [rdx], al
add byte [rsi], cl
add byte [rax + rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bh
add dword [rax], eax
add byte [rcx], al
add byte [rdx], dl
add byte [rax], dh
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add qword [rax], r8
add byte [rcx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], bl
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
imul eax, dword [rcx], 0
add byte [rcx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], 0
adc al, 0
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edx
add dword [rax], eax
add byte [rax], al
add byte [rax + rax], dl
call 0x408612
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1000001], ah
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x20000003], bl
add byte [rdx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, al
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bl
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dh
add dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add al, ah
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sahf
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xd], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, dword [rdx]
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc byte [rcx]
add byte [rax], al
adc al, byte [rax]
verr sp
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], cl
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 2], ch
add byte [rax], al
and al, byte [rax]
add byte [rcx], ch
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
jl 0x40273d
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
sub al, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + 0x138], al
add byte [rax], al
add bh, al
add byte [rax], al
add byte [rcx], dl
add byte [rbx], bl
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax + 0x138], al
add byte [rax], al
add byte [rbp + 0x12000002], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x12000002], bl
add byte [rax], al
add byte [rax + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, al
add al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x12000003], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 3], ch
add byte [rax], al
adc dword [rax], eax
adc byte [rax], al
lock sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jle 0x4027fd
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cwde
add eax, dword [rax]
add byte [rax], dl
add byte [rdx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsd dword [rdi], dword ptr [rsi]
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bh
add dword [rax], eax
add byte [rcx], dl
add byte [rbx], bl
add byte [rax], al
and ah, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, eax
add eax, dword [rax]
add byte [rcx], dl
add byte [rbx], bl
add byte [rax], al
and al, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add bl, dh
add eax, dword [rax]
add byte [rcx], dl
add bl, byte [rdx]
add al, dl
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rbx]
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
loopne 0x4028b2
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0x400c], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 4], dl
add byte [rax], al
adc dword [rdx], eax
sbb al, byte [rax]
enter 0x6020, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdi
add al, 0
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x18], dh
add byte [rax], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
outsd dx, dword [rsi]
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0x400c], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x22000004], ch
add byte [rsi], cl
add byte [rax + rbx], bh
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, al
add al, 0
add byte [rcx], dl
add byte [rbx], bl
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add bl, cl
add al, 0
add byte [rax], dl
add byte [rbx], bl
add al, dl
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xlatb
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, dh
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea eax, [rcx]
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
push 0x629d
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 5], bl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x4029c7
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rip + 0x110000], 0x2940001b
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add ah, cl
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, 5
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rip + 0x40], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, 6
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
shl byte [rax], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
adc byte [rip + 0x40], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rsp
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
insb byte [rdi], dx
add byte [rax], al
adc al, byte [rax]
add byte [rsi], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 9], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
imul eax, dword [rax + rax], 0xb001200
add byte [rax + 0x400b], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x402b12
jne 0x402b06
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402ac6
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402b44
jb 0x402b4a
pop rdi
jne 0x402b53
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402b4d
je 0x402b49
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402b69
jb 0x402b6f
pop rdi
jne 0x402b78
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402b7b
jns 0x402b6b
outsb dx, byte gs:[rsi]
je 0x402b82
jns 0x402b12
jb 0x402b76
insd dword [rdi], dx
pop rdi
jne 0x402b88
insd dword [rdi], dx
jns 0x402b1e
pop rdi
pop rdi
jb 0x402b84
insd dword [rdi], dx
pop rdi
jne 0x402b96
insd dword [rdi], dx
jns 0x402b8b
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402b96
jns 0x402b96
outsb dx, byte gs:[rsi]
je 0x402bad
jns 0x402b3d
insd dword [rdi], dx
imul ebp, dword [rsi + 0x2e], 0x707063
pop rdi
pop rdx
push rbx
je 0x402b97
xor dword [rcx], edi
jo 0x402bb8
movsxd rsp, dword gs:[rbp + 0x77]
imul esi, dword [rbx + 0x65], 0x6e6f635f
jae 0x402bd0
jb 0x402bd3
movsxd rsi, dword [rax + rax + 0x5f]
pop rdx
push rbx
je 0x402bb2
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdx
push rbx
je 0x402bc1
xor dword [rbx], esi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x402be0
jb 0x402beb
add byte [rdi + 0x5a], bl
push rbx
je 0x402bd6
imul esp, dword ss:[rdi + 0x6e], 0x65726f
pop rdi
pop rdx
xor al, 0x31
pop rdi
pop rdi
jae 0x402c0e
je 0x402c06
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x402c14
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x402c2a
jb 0x402c2d
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x402c42
pop rdi
pop r15
outsw dx, word [rsi]
jne 0x402c49
add byte [rdi + 0x5f], bl
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402c85
jns 0x402c85
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402c96
jns 0x402c96
jae 0x402cad
jb 0x402cb0
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x402c93
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x402caa
imul eax, dword [rax + 0x40], 0x42494c47
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
imul esi, dword [rdx + 0x73], 0x40645245
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x402d19
jb 0x402d1c
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x402d0e
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x402d2f
jae 0x402cbf
pop rdi
pop rdx
push rbx
je 0x402cfd
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x402d64
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x535a5f00
je 0x402d77
jb 0x402d5d
je 0x402d3d
xor ebx, dword [rdi + 0x49]
outsd dx, dword [rsi]
jae 0x402d71
jo 0x402d7a
outsb dx, byte [rsi]
insd dword [rdi], dx
outsd dx, dword [rsi]
push rbx
pop rdi
add byte [rdi + 0x5f], bl
movsxd rdi, dword [rax + 0x61]
pop rdi
je 0x402d8b
js 0x402d91
je 0x402d6a
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x402d75
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x402dca
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5a], bl
push rbx
je 0x402de9
jae 0x402dc8
push rbx
je 0x402db3
xor dword [rbx + 0x68], esp
jb 0x402de7
je 0x402dfc
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x402dc7
xor esp, dword [rdx + 0x61]
jae 0x402e04
movsxd rbx, dword [rdi + 0x6f]
jae 0x402e14
jb 0x402e07
insd dword [rdi], dx
movsxd rdx, dword [r15 + rbx*2 + 0x45]
push rbx
xor eax, 0x634b505f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402dfa
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x402e39
movsxd rbx, dword [rdi + 0x73]
je 0x402e47
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x402e42
je 0x402e57
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [r13 + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x49], bl
pop r15
jae 0x402e81
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x402e82
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x402e97
pop rdi
jae 0x402ead
jb 0x402eb0
add byte [rdi + 0x5a], bl
push rbx
je 0x402e7a
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x402eb9
movsxd rbx, dword [rdi + 0x73]
je 0x402ec7
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x402ec2
je 0x402ed7
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rbp + 0x76], r8d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rsi + 0x69], ah
outsb dx, byte [rsi]
add byte [rdi + 0x5f], bl
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x402ed0
movsxd rbp, dword [rdi + 0x75]
je 0x402ee1
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402ee5
xor al, 0x62
jae 0x402f22
movsxd rbx, dword [rdi + 0x69]
jae 0x402f33
jb 0x402f26
insd dword [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x402f2d
je 0x402f42
imul esi, dword [rbx + rsi*2 + 0x49], 0x44454563
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
jae 0x402f5e
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x402f3e
xor al, 0x62
jae 0x402f7b
movsxd rbx, dword [rdi + 0x6f]
jae 0x402f8c
jb 0x402f7f
insd dword [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x402f86
je 0x402f9b
imul esi, dword [rbx + rsi*2 + 0x49], 0x44454563
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402f81
imul ebp, dword [rdi + 0x73], 0x7361625f
cmp dword gs:[rax + 0x72], esi
movsxd rbp, dword gs:[rcx + 0x73]
imul ebp, dword [rdi + 0x6e], 0x65006c45
jbe 0x402fc2
insb byte [rdi], dx
add byte [rdi + 0x5f], bl
jae 0x402fdb
pop rdi
jae 0x402fdf
jb 0x402fe2
add byte [rdi + 0x5f], bl
jae 0x402fe7
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
imul esi, dword [rdx + 0x73], 0x40695245
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402fda
xor al, 0x62
jae 0x403017
movsxd rbx, dword [rdi + 0x69]
jae 0x403028
jb 0x40301b
insd dword [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403022
je 0x403037
imul esi, dword [rbx + rsi*2 + 0x49], 0x43454563
xor dword [rbp + 0x50], eax
movsxd rdx, dword [r11 + 0x74]
xor dword [rbx], esi
pop rdi
outsd dx, dword [rsi]
jae 0x40303b
jo 0x403044
outsb dx, byte [rsi]
insd dword [rdi], dx
outsd dx, dword [rsi]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x40303f
push rax
push rdx
push rbx
outsd dx, dword [rsi]
push rbx
pop rdi
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403047
xor al, 0x62
jae 0x403084
movsxd rbx, dword [rdi + 0x6f]
jae 0x403095
jb 0x403088
insd dword [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40308f
je 0x4030a4
imul esi, dword [rbx + rsi*2 + 0x49], 0x43454563
xor dword [rbp + 0x50], eax
movsxd rdx, dword [r11 + 0x74]
xor dword [rbx], esi
pop rdi
outsd dx, dword [rsi]
jae 0x4030a8
jo 0x4030b1
outsb dx, byte [rsi]
insd dword [rdi], dx
outsd dx, dword [rsi]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
jae 0x4030d7
insb byte [rdi], dx
add byte [rdi + 0x5a], bl
push rbx
imul esi, dword [rdx + 0x73], 0x40785245
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x4030b5
outsb dx, byte gs:[rsi]
insb byte [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4030ef
je 0x403104
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x4030cf
xor esp, dword [rdx + 0x61]
jae 0x40310c
movsxd rbx, dword [rdi + 0x6f]
jae 0x40311c
jb 0x40310f
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
je 0x40312b
add byte [rdi + 0x5f], bl
js 0x403148
pop rdi
jo 0x403138
jb 0x403148
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x40315a
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x40316d
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
insd dword [rdi], dx
imul ebp, dword [rsi], 0x79732e00
insd dword [rdi], dx
je 0x403171
add byte [rsi], ch
jae 0x403189
jb 0x40318b
add byte [rsi], ch
jae 0x403185
jae 0x403193
jb 0x403195
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x403196
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x4031a4
outsb dx, byte cs:[esi]
jne 0x403172
jne 0x4031b0
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x403180
push 0x687361
jns 0x4031c9
jae 0x4031d6
insd dword [rdi], dx
add byte [rsi], ch
jns 0x4031d1
jae 0x4031d9
jb 0x403167
outsb dx, byte cs:[esi]
jne 0x40319a
jbe 0x4031d3
jb 0x4031e3
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x4031a7
jbe 0x4031e0
jb 0x4031f0
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x4031eb
insb byte [rdi], dx
jns 0x4031fa
add byte [rsi], ch
jb 0x4031f5
insb byte [rdi], dx
jo 0x403201
je 0x403197
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x4031d0
outsd dx, dword [esi]
je 0x4031a6
je 0x40320e
js 0x40321f
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x403224
je 0x40321a
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x40323d
jo 0x403251
pop rdi
je 0x403241
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x40324f
jns 0x4031f0
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x40326b
jns 0x4031fc
push 0x63
jb 0x403201
jns 0x403273
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x40327d
je 0x403213
je 0x403279
add byte [rsi], ch
jae 0x403290
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x403227
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax + rax], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd dword [rdx]
add byte [rax], al
add byte [rax], al
add al, bl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 2], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x40
add byte [rax], al
add eax, 0
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, al
or byte [rax], al
add byte [rax], al
add byte [rax], al
ret 8
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
or byte [rax], al
add byte [rax], al
add byte [rax], al
clc
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax + 9], cl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4009], bh
add byte [rax], al
add byte [rax + 9], bh
add byte [rax], al
add al, bh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rip + 0x19000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x400b], dh
add byte [rax], al
add byte [rax + 0xb], dh
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
ror byte [rbx], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or eax, 0x40
add byte [rax], al
xor byte [rip], cl
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs byte [0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ah
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
in al, 0x18
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
lock sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4019], bl
add byte [rax], al
add byte [rax + 0x19], bl
add byte [rax], al
add byte [rcx + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rbx + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
call 0x403762
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
shl byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
and byte [rax], ah
add byte [rax], al
add byte [rax], al
shl byte [rax], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rdx + rax], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x1000001
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rcx], esi
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + 9], dl
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rsi], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x2a], bl
add byte [rax], al
add byte [rcx + 6], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
