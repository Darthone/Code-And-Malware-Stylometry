call 0x4043e8
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x404200
add ebx, ebx
je 0x4041b6
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4041ee
cmp rbp, -4
ja 0x4041ee
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4041d6
add ecx, 4
mov dl, byte [rax]
je 0x4041fe
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4041ee
ret
cld
pop r11
cmp r8b, 2
je 0x404216
jmp 0x404293
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x404226
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x40420e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x40423e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x40422b
sub eax, 3
jb 0x40425c
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x404293
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x404283
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x404281
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x404270
cmp rbp, -0xd00
adc ecx, eax
call 0x4041c2
jmp 0x404216
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x40436c
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40430a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x404356
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x404329
push 0x3a707474
jne 0x404382
js 0x404342
jae 0x40437c
outsb dx, byte cs:[rsi]
je 0x40433b
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4043a9
jb 0x40439b
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4043c6
jb 0x4043d9
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x219450
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x219450
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x4042a4
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4043cf
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x40437d
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f4477
jb 0x40448f
movsxd rbp, dword [rdi]
jae 0x404489
insb byte [rdi], dx
js 0x40448f
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x40446f
cmp rsi, rcx
jae 0x404477
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x404456
cmp al, 0x8f
ja 0x404456
cmp byte [rsi - 2], 0xf
je 0x40445c
sub al, 0xe8
jg 0x404459
push rdi
cmp al, 1
ja 0x404444
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x404447
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x404474
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4044cb
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c4949
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40450f
mov al, 0xa
jmp 0x40450f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4044eb
inc ebx
mov al, 0
jmp 0x404513
mov al, 2
jmp 0x404513
mov al, 3
jmp 0x404513
mov al, 0x3c
jmp 0x404513
push rcx
rcr ah, 1
fstp st(7)
jle 0x404554
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x404566
jg 0x404558
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a9cdb
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4045b2
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb972f
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4045ba
cmp esi, 0x21585055
jne 0x4045be
jge 0x4045b0
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4045b3
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4045b7
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x404663
pop rcx
or al, 0x3b
jb 0x404669
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4045db
jmp 0x4045dd
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x366451e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf56766
in eax, dx
jg 0x404615
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x40465b
mov bh, 0x2a
add edi, 0x10
jmp 0x404658
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x404695
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4046d1
jne 0x4046e8
fstpnce st(6), st(0)
jle 0x4046b1
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4046e7
jrcxz 0x40471b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1e67f
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x40479a
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x40475a
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58298d2f
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4047cd
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x404767
and ecx, 7
or al, 0xeb
jae 0x4047d2
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x404807
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x404845
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x4047fe
push rax
call 0xffffffff868d44eb
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x404808
std
cmp edi, esi
xchg eax, edi
jle 0x40485d
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c98de9
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x40485b
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x404849
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x404872
js 0x4048b2
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x404944
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad5b7f
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x404965
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x40496a
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc2441c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4048f8
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
adc byte [rip + 0xe0000], cl
add byte [rax], al
add al, byte [rax]
add byte [rax], al
adc byte [rdx], cl
and byte [rdx], dl
add byte [rax], al
add byte [rax], cl
dec dword [rax + 0x33]
add byte [rax], al
sub cl, byte [rdi]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x404a1e
je 0x404a27
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x4049f0
mov dh, 0x7d
jbe 0x4049ef
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x404a28
sahf
sahf
add al, 0
cwde
add eax, 0x1f90e000
and byte [rdi + 0x7480006], bl
add byte [rsi + 0xb], ch
fsub dword [rdi]
nop
invd
add al, dl
or dword [rax], eax
movabs al, byte [0xa07e403f25f0c]
add byte [rip + 0x10a8000b], cl
lahf
ror dl, 1
or al, 0x17
or eax, 0x4f135000
and byte [rdi], bl
and byte [rsi], cl
add byte [rax + 0xf], ah
add ah, dh
enter -0x6ff1, 0x7f
adc byte [rax], al
add byte [rax + 0x3f20111], al
in al, 0
sbb byte [rsi - 0x7877ffee], al
inc byte [rax]
stc
adc eax, dword [rax]
mov esp, 0xd800148f
popfq
sahf
adc eax, 0x16e800
cdq
sahf
add al, bh
sbb byte [rdi + 0x3b6c03f], bl
sbb dword [rax], eax
sbb al, byte [rax]
push rax
movabs eax, dword [0x1c60001b201f204d]
mov fs, esp
fst qword [rbx + rdx + 0x41701]
int1
dec dword [rcx*2 + 0x1bc595c3]
mov edi, 0x20029719
and al, 0x83
fcomp dword [rcx]
sbb esp, dword [rax - 0x28]
nop
or al, 0x32
movabs al, byte cs:[0x1bf93b06445f44]
sub byte [rdx - 0x6face8ff], ah
or al, 0x76
and eax, 0xc0477a4f
ret 0x84ae
enter -0x687a, -0x5b
xlatb
jbe 0x404ad0
sbb dword [rax - 0x48bf7ef0], esi
sbb esp, esp
rol eax, cl
and eax, 0x90641907
cld
sub eax, 0x9072012a
mov bl, 0x27
add byte [rcx + 0x15c3fef], 0x27
cmp dword [rcx + 0x50], edi
sbb byte [rdi - 0x215ffe88], dl
push rax
ret 0x7f39
xchg dword [rdi], ebp
ja 0x404b0d
cmp ebx, dword [rdi + 0x17958fb8]
push rdi
mov byte [rip - 0x5eb8dea0], bl
push -0x3513b9a9
push qword [rdi + rax*2 + 0x4d98ca57]
or dword [rbx + 0x2f], esp
adc al, 0x7f
fist dword [rdi]
push rdi
insb byte [rdi], dx
out dx, al
iretd
mov cl, 0x1a
nop
lea ecx, [rdx]
lahf
and bh, dh
adc cl, bl
xchg eax, ebx
insb byte [rdi], dx
xor byte [rax + 0x37], al
mov ebp, 0x22020715
sbb al, 0xec
sbb byte ss:[rbx + 0x1b], 0x17
loopne 0x404b8c
xchg eax, ebp
popfq
sbb dword [rbp + 0x2694755], 0
leave
mov bl, 0xd
fst qword [rdi + rdx - 0x7b1768df]
pop rdi
sub byte [rax], al
cmp dword [rcx], edi
enter 0x10a7, 0x59
sub edi, dword [rax]
add esi, dword [rdx - 0x70]
xchg eax, ebx
add byte [rsi + 0x42], bl
jo 0x404b61
cmp edi, dword [rcx]
fadd dword [rip + 0x5d702f84]
mov edx, edi
mov al, 0x93
mov bh, 3
jg 0x404b73
sbb dword [rsp + rbx + 0x5890c764], 0x77
mov ch, 0x19
in al, 0x64
nop
or bl, byte [rax]
sub ah, cl
in al, 0x60
and byte [rbx + rcx*8 - 0x29], bl
sbb al, 4
leave
mov bl, 0x17
test dword [rsi + 4], ecx
pop rdi
push rax
pop rsi
cmp al, 0x79
in al, 0xbd
add dword [rdx - 0x18e57ffc], edi
fcom dword [rbp + 0x197279d]
add eax, 0xd9171000
or eax, dword [rbx + rax*2 + 0x50070524]
add eax, 0x360c848f
enter 0x3888, 0x2f
ret
jnp 0x404bb8
add bh, byte [rbx]
fadd dword [rdi]
xlatb
add eax, 0x475a40bf
sbb al, 0x42
cmp dword [rax], esi
cli
adc eax, 0xc9c83206
and byte [rdi + 0x59], bh
add ecx, 0x20caf605
sub eax, dword [rsi]
or r9d, dword [r11 + r8*2 + 0x6a1745d8]
outsd dx, dword [rsi]
sbb dword [rdx - 0x7a], eax
mov al, 0xb8
retf
cmp eax, ecx
or dword [rdi], eax
add byte [rdx - 0x21], bl
cmp ah, byte [rbx]
jb 0x404c12
cmp eax, esi
jne 0x404c56
push rsi
cmp dword [rbx + 0x20], edi
mov dword [rsi], ecx
xor cl, al
fst dword [rax - 0x7d]
sbb byte [r10 - 0x6f9b9ff0], r11b
movabs rbp, 0xa707d087610c9e78
mov al, 0x57
mov word [rdi - 0x44], fs
xor byte [rdi + 0x703f0860], dh
sub dword [rdi - 0xd86c6df], eax
mov edi, 0x38086916
fst dword [rbx + 0x87cd817]
pop rdi
or byte [rax], dh
jno 0x404c7e
in al, dx
add eax, 0x194e4f2
or dword [rcx + rcx - 0x41], ebx
fsubr st(4), st(0)
xor byte [rcx], cl
outsd dx, dword [rsi]
enter -0x1cf7, -0x50
adc dword [rax - 0x49], eax
xchg eax, esp
or dword [rax - 0x7bf43d87], esi
or dword [rdi - 0x17], edi
or dword [rdi], ebx
cwde
in al, 0xd9
or esp, dword [rcx]
or dl, byte [rdi]
rol byte [rax + rsi + 0x68b014c1], 1
adc dword [rdi + 0x56], edx
in al, dx
nop
pushfq
sbb al, 0x3f
or dl, byte [rax]
push rax
or ch, bh
cmp dword [rcx + rdi*2], 0x8e5af0f2
add byte [rdx + rcx + 0x41], ah
jbe 0x404d1b
ja 0x404d0d
or dword [rdi], 0xffffffc9
sbb eax, 0x5c2f8b9c
ja 0x404cf8
add edx, dword [rdi]
fcom dword [rbp + 0x6fafef0a]
adc byte [rsi - 0x43fc7b1c], al
or dh, byte [rdi]
rcr al, 1
xor ebx, dword [rsi - 0x38]
sar dword [rdi + 0xaf484a8], 0x3f
nop
pushfq
sbb eax, 0xb030892
pop rax
jmp 0x404c5c
cmp al, 0xe1
or eax, 0x8250af0b
or edi, dword [rdi - 0x78]
cmp dword ss:[rax + 0x2f], esi
push rsp
and byte [rdi], al
jmp 0x404c9e
lahf
pop rax
mov dword [rsi - 0x1b1be6f5], 0xa3776dd9
add cl, dl
cwde
enter -0x3e37, 6
or byte [rdi + 0x41a00bd0], ah
xor ch, byte [rsi]
add cl, byte [rax]
sbb ah, ah
in al, 0x90
sub byte [rax + rdi*8], cl
or ebx, dword [rsi + 0x27c1c830]
sbb al, 0xc
jo 0x404d3c
sub dword [rcx], eax
nop
xchg eax, ebx
or al, 0x60
xor al, 0x7e
jb 0x404d9e
cdq
or al, 0xd0
retf
ja 0x404d34
sbb dl, byte [rdi]
or byte [rdi + 0xcd77784], ah
idiv ebx
mov dl, 0xc5
or rax, 0xffffffffbd60778f
sahf
or eax, 0xd6c2f0a
mov dword [rip - 0x61bd0d8e], ecx
nop
test ah, bh
or eax, 0x8ce48758
or dword [r14], ecx
outsd dx, dword [rsi]
and byte [rsi + rcx], bl
sbb dword [rbp + 0x7f2f060c], 0x65
sub al, 0x83
pushfq
shl byte [rcx], 0x84
lahf
outsd dx, dword [rsi]
lahf
ret 0x2f20
nop
out dx, eax
pop rdx
jb 0x404e00
add eax, 0x5e04f00f
and byte [rax + 0x21], dh
andps xmm1, xmmword [rdi]
call qword [rdi]
enter -0x6f7, 0x20
adc al, byte [rax + 0x73]
jns 0x612d31ba
movabs al, byte [0x7610c80fce62a76a]
and ebx, 0x90e2f617
xor edi, dword [rdx + 0x3571ac4]
adc byte [rsi + rbx*4 + 0x169fc0bd], cl
adc byte [rdi], ch
adc byte [rdx], bl
sbb qword [rdi + 0x2f], r9
and dl, byte [rax]
or ebx, dword [rbx]
ucomiss xmm2, dword [rax]
and al, 0x27
mov ebp, 0x17104140
mov eax, 0x3a4e486c
jbe 0x404de9
pop rdi
enter 0x4792, 0x43
jb 0x404db6
and dword [rsi - 0x354f20f0], ebp
sub al, 0xe
leave
call 0xffffffffecaf5ecc
add eax, 0x11170bd2
pop rsp
adc dword [rdi + 8], esi
jb 0x404dbe
or esi, dword [rax + 0x11]
fild word [rax - 0x28]
adc byte [rdx], dh
out 0x7e, al
adc esi, 0xbc2745f
cmp eax, eax
push rdi
add dword [rdi], esi
test al, 0x10
jb 0x404daa
cwde
mov edi, 0xc91256af
xchg eax, ebx
or eax, 0xf0d717bd
push rbp
mov ch, 1
jb 0x404dff
or esp, esp
jbe 0x404e3f
scasb al, byte [rdi]
adc cl, byte [rdi - 0x70]
mul ah
mov r13b, 0x2f
sal byte [rdx - 0x55], 1
or al, 0x77
fcom dword [r8]
jb 0x404e0b
out 0x17, al
or al, 0xc9
or esp, dword [rbx + rdx + 0x771329bf]
and byte [rax + rdx*4 + 0x33], ch
cmp eax, 0x22403f13
add al, 0xe
sbb dword [rdi + 0x58], ecx
lahf
jo 0x404e74
nop
mov bl, 0x27
fadd dword [rdx - 0x6f7df1d1]
cmp byte [rcx*2 + 0x13a4c02f], ah
test eax, 0xc22f205e
adc edi, dword [rax]
adc al, 0x2f
scasd eax, dword [rdi]
in al, dx
mov esp, 0x6c00144c
adc al, 0x87
cmp r11b, al
add eax, 0x5850178f
add eax, 0x41cf2539
unpckhps xmm3, xmmword [rdx]
adc eax, 0x4121783
out dx, eax
adc eax, 0xf6793c17
add bh, byte [rbx + 0x15]
mov edi, 0x2356b10
mov ebx, 0x15da9e40
in eax, dx
rcl byte [rdi + 0x6c], 1
xor byte [rsi + 0x48], bl
xlatb
imul eax, dword [rcx], 0x3f
sbb dword [rdi], edx
pop rsi
and eax, 0x163d4716
xlatb
pushfq
jo 0x404f17
mov bl, 0x16
fild word [rax + 0x72]
mov cl, 0x49
ja 0x404e9d
out 0x73, al
enter 0x1d19, 0x59
scasd eax, dword [rdi]
sub dl, byte [rdi]
pushfq
ror cl, 0x82
div eax
add al, 0x6f
cmp dword es:[rbp + 0x3057e212], 0x42dba717
js 0x404f3e
outsd dx, dword [rsi]
mov byte [rcx], cl
movsxd rcx, dword [rbx + 0x72fffff2]
je 0x404f79
je 0x404f7d
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
movabs al, byte [0x676572657ed6ffee]
imul ebx, dword [rdx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x404f4f
mov bh, 0xff
div dh
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x404f9f
jne 0x404fbb
outsd dx, dword [rsi]
insd dword [rdi], dx
jg 0x404ec9
std
in eax, dx
jo 0x404fb8
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bp, word [rsi + 0x69], 0xb76f
ljmp [rdi + 8]
jb 0x404fd3
jns 0x404fc3
outsb dx, byte gs:[rsi]
je 0x404fda
jns 0x404f6a
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
fld qword [rax + 0xd3279b9]
pop rdi
sub dword [rdx + rbp - 0x49], esi
outsd dx, dword [rsi]
mov bh, 0x3f
jae 0x404ff2
jne 0x404ff7
movsxd rsp, dword [rbp - 0x5f]
jo 0x404ffa
sub dword [rdx + 0x5a], ebx
jae 0x404ffb
fdiv st(7), st(0)
mov edi, 0x6a6573fc
xor dword [r9], r15d
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
movabs rcx, 0x23323122edd6cb6b
push rax
shl byte [rbx + 0x69], 0xb8
sub dh, bh
ljmp [rbp + 0x20]
xor al, 0x23
push rdx
imul edx, dword [rbx + 0x30], 0x7645455f
jo 0x40501e
in eax, dx
push rbp
sti
sub eax, 0x5f003141
js 0x40500f
neg bl
retf 0x4731
or qword [rbx + 0x75], r14
pop rdi
imul dh
ret 0x5aee
cmp byte [rbp + 0x68136957], dl
push 0x4d
push rbx
je 0x405049
cmp byte [rbx], dl
fld xword [rbp - 0x12614a1f]
add byte [rsi + 0x55], al
xchg rax, rsi
cmp edi, dword [rsp + rax*2 + 0x470b8838]
push rbp
outsd dx, dword [rsi]
lahf
in al, dx
shl dword [rax], 0x48
push rdx
push rdi
push rbx
jae 0x405086
push rsp
test dword [r13 + 8], ecx
out dx, eax
sub byte [r15], r14b
adc byte fs:[rdi - 0x47], dh
imul eax, dword [rbp + 0x446607c8], 0x59
jle 0x404ff9
pop rbp
push 0x1630316d
and al, 0xb9
push rsp
sbb dh, byte gs:[rsi + 0xf]
test dl, 0xed
pop rbx
adc byte [rdi + 0x75], r9b
je 0x4050c9
add al, byte [rsi + 0x69]
retf
xor dword [rbp + 0x13], r8d
mov edx, 0xa32dc286
jbe 0x4050ad
ret
or sil, byte [r15]
mov bh, 0x50
call 0x78a3a152
js 0x405070
xor bl, cl
push rsi
movsxd rdx, dword [rdx + 0x39]
ficomp dword [rbx + 0x72]
movsxd rbx, dword [r9d]
adc ah, byte [rbx + 0x68]
cld
mov edx, 0x6f51adb7
jae 0x4050a2
push r11
add al, 0x45
push rbx
xor eax, 0x3337656f
push rsi
xor dh, byte [rax]
cld
jb 0x405115
ja 0x405103
imul ebp, dword [rbp + 0x39625fb5], 9
cmpsb byte [rsi], byte ptr [rdi]
wait
pop rbx
push rax
mov ch, 0xdd
push rsi
movsxd rax, dword [r8 + 0x40]
ror byte [rcx + 0x42], cl
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2a
push rsp
push rsi
ficomp dword fs:[rdi + 0x448d9f6d]
jbe 0x40513c
mov esi, dword gs:[rdx]
xor ebx, dword [rdi + 0x53]
jo 0x40505d
xchg byte [rbx + 0x3b], ch
or al, 0x6e
imul ebx, dword [rdi + 0x70], 0x6e
loopne 0x40515e
cmp ebx, -0x26
popfq
pop rax
popfq
outsd dx, dword [rsi]
mov r12b, 0xd6
out dx, al
cmp cl, byte [rcx + rcx*2 + 0x425f3293]
test eax, 0x7fedb065
pushfq
push rax
jbe 0x405180
xchg byte [rbp - 0x6a], al
fstp xword [rbx + 0x4e4cc377]
mov ah, 0x67
outsb dx, byte [rsi]
jne 0x4050ed
sub al, 0x4c
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x53]
outsd dx, dword [rsi]
adc al, 0xda
mov bh, 0xb7
insb byte [rdi], dx
insd dword [rdi], dx
jns 0x40516d
xor ah, byte [rcx + rsi]
xor al, 0x5f
sbb rax, 0x7fb7eeae
insb byte [rdi], dx
xchg eax, edx
fidiv dword gs:[rdx + 0x45]
push rdx
push r11
cmp dword [rcx + rdi*2 + 0x70], esi
je 0x405102
outsd dx, dword [rsi]
test ecx, ebx
outsw dx, word [rsi]
nop
xor cl, byte [rdx + 0x65757169]
mov ecx, dword [rcx + 0x38]
movsxd rbp, ebx
sbb al, 0xf
xchg eax, r15d
xor al, 0x35
hlt
int3
mov bl, 0x30
insb byte [rdi], dx
insb byte [rdi], dx
cmp eax, 0xdb323006
cmp dword [rcx], 0x36
in al, 0x6d
add al, 0xef
pop rdi
xor ch, byte [rsi]
add dword [rip + 0x7b02b0b3], esi
movabs r15, 0xa85fdbb46a45304d
movsxd rdi, dword [rdx - 0x244ea7a7]
and ah, bh
cmp dword [rcx + 0x6e], ecx
mov ebp, 0x6c6c1239
or eax, 0x7b29081b
sub dword [rax - 0x7bdd5418], ebp
and al, byte [r15 + 0x36213459]
xor dword [rcx - 0x49], r15d
xor byte [rdi], ah
cmp edx, r14d
insb byte [rdi], dx
sub byte [rip + 0x663ede16], bh
pop r8
jb 0x4051f9
sahf
mov ch, 0xc6
jae 0x405232
cmp byte [rax + 0x46], bl
xor eax, 0xbee68576
movsb byte [rdi], byte ptr [rsi]
sbb bh, byte [rcx]
sbb dword [rdi - 0x63], ebx
ret
pand mm1, qword [rdx]
out 0x70, eax
xor ebx, dword [rax]
xor al, 0x81
imul edi, esp, 0x70
test dword [rbx + 0x7731c213], ecx
cmp dword [rip + 0x7c2ca320], 0x77736e41
movabs al, byte [0x674930dad49aa369]
insd dword [rdi], dx
and bl, byte [rdi]
insd dword [rdi], dx
cmp ebx, dword [rax + 0x7f]
outsb dx, byte [rsi]
jbe 0x40526e
push rdx
clc
insb byte [rdi], dx
jae 0x4051a4
call 0x73fa6b2a
jns 0x405239
insd dword [rdi], dx
mov edx, 0x9b422369
xor byte [rax - 0x56cc9cd2], bh
xchg eax, edx
fisubr word [rip + 0x6c647222]
push rax
jbe 0x405276
jo 0x4051ba
cmp cl, byte [r14 + 0x41]
push rbx
add dh, byte [rcx]
xor esi, edi
fcom qword [rbx]
mov gs, word [rbx]
push rsp
outsd dx, dword [rsi]
cwde
push -8
hlt
xchg eax, esi
xor bl, byte [rdx]
add eax, 0x3d9008fd
sal byte [rsi - 0x6d], 1
sar dword [rdi + 0x61], 0x5f
mov edx, 0x8b5cb56f
xor byte [rdx + 0x78], ch
xor dword [rsi], ebp
xor ecx, dword [rax*4 + 0x386319d6]
retf 0x75b3
push rdx
out 0xba, al
hlt
jbe 0x4052bc
xor dword [rdx - 0x4ff799b6], edx
xor r8b, byte [rdx + 0x36c85261]
outsb dx, byte [rsi]
mov ch, 0x13
leave
sbb bl, byte [rcx + 0x3b]
insd dword [rdi], dx
cmp ebx, dword [rsi]
or byte [rdx - 0x5f], bh
movsb byte [rdi], byte ptr [rsi]
push rbx
xor dword [rsi], eax
neg esi
and byte [rbp + 0x53399e42], al
adc al, byte [rsi - 0x48]
mov ch, 0x43
pop rdi
js 0x4052c0
test dword [rax - 0x66ab5970], edx
movsb byte [rdi], byte ptr [rsi]
mov r10b, 0x80
add al, 0xa0
jne 0x405241
mov al, 0x10
test al, 0xa4
jne 0x40532e
sub al, 0x22
movsxd rsp, dword [rbp + 0x65]
cwde
xchg eax, edx
mov cl, 0xed
and byte [rsp + rsi], bh
ja 0x405292
imul ebp, dword [rbx + 0x1ac8dd56], 0x18
pop di
jae 0x405282
jbe 0x405313
mov bh, 0xe5
sbb eax, 0x756a649a
jae 0x405352
jo 0x405336
xchg dword fs:[rbx + 0x6e3463ad], ecx
insd dword [rdi], dx
pop rcx
int3
adc eax, 0x1f0d0f6e
sbb dl, byte [rax + 0x31]
xor al, 0x70
in eax, dx
jne 0x405306
movabs eax, dword [0xb161e830676408b5]
sbb dword [rdx + 0x6cae05ef], edi
fstp dword ss:[rdi - 0xa]
loop 0x4052a1
mov ebx, 0xe0317336
mov dh, 0x46
pushfq
fsubr qword [rsi]
stc
or dh, byte [rcx]
jbe 0x4052e4
mov dh, 0xdd
push rsi
push rbx
add eax, 0x6dd90231
sub r12d, dword [r9 + 3]
or bl, byte [rbp - 0x15fc889c]
mov dh, 0x16
mov ebx, 0x636e4265
or byte [rsi - 0xf], ch
jbe 0x40537e
stc
enter 0x370b, -0x39
adc qword [r13 + 0x4429491c], -0x57b492f5
jnp 0x4053e6
or al, 0x43
mov word [rbx], es
jge 0x4053c3
cmp eax, 0x1ba103c5
sub esp, dword [rax]
ljmp ss:[rsi - 0x27]
adc byte [rax], bl
xchg eax, edi
push rsi
wait
or al, byte [rip + 0x614fa60a]
push 0x31
lahf
sub al, 0x46
rol dword [rcx - 0x4b], 1
push rsi
xchg rax, rsp
xor cl, bl
insb byte [rdi], dx
lodsb al, byte [rsi]
mov ch, 0x16
xchg eax, edx
lea ecx, [rsi]
push rbx
xchg eax, ecx
sub byte [rsi], dl
fadd dword [rbp + rbp*4 + 0x78b868]
inc dl
mov cl, 0xd0
fsub dword [rsi - 0x708f329f]
nop
mov dl, 8
insd dword [rdi], dx
mov eax, 0x18b15fbb
sub eax, 0xd392bb60
lock xchg dword [rdi], ebp
and byte [rbx - 0x2e], ah
ja 0x40540f
adc dword [rdi - 0x49b0deae], ecx
imul rsi, qword [r11 - 0xf], -0x28
or al, 0xde
adc dword [rbp + 0x4b], ebp
int3
jnp 0x405436
mov ebx, 0x3272373d
mov ch, 0x69
jbe 0x405438
jmp 0x40536b
leave
loop 0x405370
pop rdi
sub eax, 0xeb2b4846
mov esi, dword [rbx - 0x6f]
sbb bl, byte [rax - 0x6b588dc7]
xor ah, 0xe4
enter 0x5094, -0x7a
mov es, word [rbp - 0x5c]
or bh, ch
add dword [rax], 0x69
rcl byte [rdi - 0x36], 1
cmpxchg dword [rcx + 0x22], ebx
lock sbb byte [rbx - 0x6a], dl
xor al, 0xb2
and eax, 0x6a766595
and cl, ch
xchg eax, edi
xor dword [rcx + rbx - 0x6a], esp
sub eax, dword [rsi + rax*8 + 0x1b]
push rbx
ja 0x4053c4
xchg eax, esp
ret
mov cl, 8
sbb ebp, dword [rdx]
xor dh, byte [rbp + 0x42]
xor eax, 0x636a34af
je 0x405467
insb byte [rdi], dx
sahf
xor dword [rbx], esp
adc ecx, dword [rbp - 0x17]
jmp 0x10796c7b
jae 0x40543b
or dword [rbx - 0x75d97f65], esp
pop rdi
jae 0x4054bf
mov cl, 0x45
js 0x4054b5
xor dh, byte [rdi]
stosd dword [rdi], eax
insb byte [edi], dx
outsb dx, byte [rsi]
push rbp
fstp xword fs:[rax + 0x14]
adc byte [rdx], cl
and ebp, dword [rbp - 0x72]
jl 0x40542d
xor byte [rdi - 0x51], al
nop
cmp byte [rcx + 2], cl
xchg eax, edi
xchg eax, ecx
jae 0x4054f8
movsxd rcx, dword [rax - 0x42]
stosd dword [rdi], eax
cmp eax, 0xaf1753ac
xchg eax, esi
shl dword [rcx + rcx*2 - 0x25], 1
enter 0x1522, -0x37
push rbx
sub dword [rbx + 0x34068d06], esp
and al, 0x16
sub esp, dword [rcx - 0x26603d6c]
mov esp, 0x39a3a052
and ecx, dword [rax]
lea ecx, [rip - 0x73394a5]
wbinvd
lea eax, [rdx + 0x62]
std
sub byte [rbx], bl
add eax, 0x20626d07
push r9
jne 0x40545f
lea esp, [rsi + rax + 0x883ecad]
nop
je 0x40548f
jmp 0x5cec7b54
cmp esp, eax
xchg eax, ebx
sub dword [rbx + 0x24375d2a], eax
mov al, 0xd1
int3
jbe 0x4054f6
mov dx, 0x4c9
and eax, dword [rcx - 0x3e1bbbe3]
sub al, 0x25
mov al, 0x6c
movsxd rsi, dword [rcx - 0x4547f674]
and dword [rbp + rcx*8 + 0x62], esp
mov eax, 0x73235971
lodsd eax, dword [rsi]
jle 0x405557
in al, dx
retf -0x63d6
or ch, byte [rcx]
out dx, eax
test dword [rax + rdx], ebp
popfq
imul rbx, qword [r8], 0x32
pop rdx
jo 0x405505
fldcw word [rbx - 0x66]
xor al, 0x61
xor eax, 0x53d51e48
jl 0x4055a2
mov cs, eax
sub bh, dl
xor dword [rsi - 0x56fb37b], eax
lea rsi, [r10]
pop rbx
sbb dword [rbx - 0x727a08de], esi
mov bh, 0x20
movsxd rsp, ecx
jge 0x40552a
sub eax, 0x705c0153
insd dword [rdi], dx
out 0x8e, al
and cl, byte [rcx]
push rsi
xor byte cs:[rbx - 0x74], ah
mov dh, 0x50
jae 0x40556f
xchg dword [rsi + 0x28], esp
mov al, 0x94
xor bl, byte [rdx + 0x785b7308]
cmp dword [rax], esp
or dword [rsi + 0x6e], ebx
cmp eax, 0x17b27631
outsd dx, dword [rsi]
xor eax, 0x219a8473
test qword [r15 + 0x17071275], rsp
xor cl, byte [rdx]
add eax, 0x566f345d
leave
and byte [rax + 0x37], al
shl dword [rdx + 0x33], -0x6d
add ch, byte [rcx]
add dword [rdi - 0x36], eax
mov esp, 0x4c948b80
hlt
test dword [rcx], edx
and ebp, dword [rbx]
shr byte [rax + 0x56], cl
add cl, byte [rsp + 0x62c3754c]
movsd dword [rdi], dword ptr ss:[rsi]
push rbx
pop rdi
mov cl, 5
pop rbx
js 0x405635
retf
fldenv [rsp + rbp*4]
lodsb al, byte [rsi]
movabs eax, dword [0xc020bdebdb6e0f62]
push rax
xor bh, byte [rdi - 0x28]
call 0xffffffffc7e7e684
insd dword [rdi], dx
cmp eax, 0x656aca19
sub dl, cl
xor ecx, esp
or byte [rcx - 0x7a], dl
mov eax, 0x646ce04b
stosb byte [rdi], al
sbb dl, al
pop rdi
or ch, byte ss:[rbp + 0x252c14b9]
pop rsp
outsb dx, byte [rsi]
and eax, 0x2935a174
call 0xffffffffb070cc96
nop
and byte [rbx + rdx*2], ah
adc byte [r13 + 0x3a], cl
pop rbx
or bl, al
xor ebp, dword [rsp + rbp*4]
frstor dword [rcx + 0x16]
insd dword [rdi], dx
pop rsi
outsb dx, byte [rsi]
ja 0x40562f
loope 0x4055d9
push rax
sbb bl, cl
pop rdx
sbb dword [rax + rdi*8 - 0x26], 0x43
adc eax, 0x52224a55
jne 0x405697
add edx, ecx
call 0x43844a6f
xor byte [r10 - 0x3e], r15b
xchg dword [rax + 0x12], edi
lodsd eax, dword [rsi]
xor eax, 0x2168c22f
and esi, dword [rdi - 0x79]
jns 0x405679
and al, 0x11
pop rsp
sbb ebx, dword [rbx - 0x23]
jo 0x405611
push rdx
mul dword [rsi + 0x6c]
clc
push 0x616dd52f
pop rbp
outsd dx, dword [rsi]
jae 0x405628
jae 0x4056da
insd dword [rdi], dx
ret
jbe 0x405681
cmp ah, byte [rdx + 7]
je 0x4056dd
push -0x248d38f7
adc ebx, esp
jb 0x4056e4
outsb dx, byte [rsi]
outsd dx, dword [rsi]
fucomp st(4)
sub eax, 0x2e7c0d58
jne 0x4056af
mov bh, 0x56
mov ch, bh
sub eax, 0xd006469
jmp 0x79a45fcc
ficomp dword [rcx - 0x65]
mov ecx, 0x45074f6e
sbb dword [rsi + 0x44], esi
fadd qword es:[rbp + rdi*4 + 0x1b5f0c65]
push rsp
mov ebp, 0x58092861
je 0x405724
jo 0x405690
xor esi, dword [rax + 0x86f2c0a]
sbb byte [rip + 0xaf6c63d], al
sub ah, byte [rdi + rbp*2]
jrcxz 0x4056f4
push 0x127d96e8
jne 0x405736
jb 0x4056de
pop rbp
movsxd rax, dword [rax + 0x7bd685a9]
mov edi, 0x4b360b70
cmp eax, 0x43472e74
or eax, dword [rbp + 0x6a1d6b16]
lodsd eax, dword [rsi]
movabs eax, dword [0x6800bd9b31733136]
jnp 0x405754
xor eax, 0x2b402b04
movsxd rdx, dword [r10 + 0x59]
add ah, dl
mov dword [rax - 0x13e4e4d6], ebx
cmp eax, 0xdf97658a
xchg spl, spl
sbb al, 1
and eax, dword [rcx + 6]
sbb dword [rax - 0x6dababf9], edx
and dword [rcx], ebx
xchg eax, edx
and byte [rcx + rsi], al
xchg eax, edx
sbb dword [rsp + rsi*2 + 0x24], esi
enter 0x6f21, -0x7a
idiv dil
ljmp [rdi - 0x68]
and byte [rbx + 0x4498320c], al
add eax, 0xc90c059b
or byte [rsi - 0x5d], cl
jbe 0x4056d5
loopne 0x405729
push -0x66f904fc
insb byte [rdi], dx
jb 0x405757
sbb byte [rsi - 0x65], dl
push rbp
sub al, 0x69
add eax, dword [rdi]
out dx, al
and bh, byte [rcx - 0x3e]
add al, 0x5e
mov edi, 0x92c559bd
ljmp [rdi]
or eax, 0xbf9c90d9
pop rsi
add al, byte [rdi]
imul esp, esi, 0x26
add edx, edx
rol byte [rdi], 1
inc dword [rax]
ror byte [rdx + rsi*2], cl
rol byte [rsi], 1
add al, 0x66
adc eax, 0x177adecb
jg 0x4057b9
test byte [rax + rsi*8 - 0x9fc0f9], bl
push rbp
cmp eax, dword [rdi + rdi + 0x6792e442]
xchg eax, ebx
cmpsd dword [rsi], dword ptr [rdi]
or eax, 0x1903a83f
xor eax, 0x8e018419
adc eax, dword [rsi]
and eax, 0x7749bc27
lcall [rdx]
xor cl, al
nop
or eax, 0xd0d03f89
fld dword [rdx + 0x22]
add byte [rdx], 0x7f
adc esp, dword [rax + 0x3f940d90]
mov r14b, 0xc0
jo 0x4057d7
setge byte [rdi + 0x6e]
xor ah, byte [rdi + rdi + 0x60]
jg 0x40576e
and al, 0x87
sub eax, 0xa33f6c90
fsub qword [rdx]
push rdi
dec dword [rcx]
push rax
sbb cl, byte [rdx - 0x57]
mov edi, 0x876790b
xchg eax, edi
cmp byte [rdi], 0x18
adc al, 0x21
sbb dword [rdx + 0x7922b120], edx
out 0x66, al
mov edi, 0x16c7f07
wait
add byte [rbp + 0x7e7bfe4], al
in al, dx
and bh, byte [rcx - 0x7e]
xor al, 8
leave
cdq
wait
add dword [rbp + 0x267f070f], eax
add dword [rbx - 0x37], eax
or al, 0xdb
wait
mov esp, 0x66304549
ror byte [rip + 0x10bf2725], cl
out 0x3f, eax
jo 0xffffffffe8437f1c
inc dword [rcx + 0x26]
wait
pop rsp
and dword [rax - 0x44f90710], edx
nop
fsub qword [rax + rdi*8 + 7]
call 0x64c5d75d
nop
and dword [rax], edx
cwde
cdq
wait
add edi, edx
jg 0x40580e
pop rax
fadd st(3)
add dword [rcx], eax
cmpsd dword [rsi], dword ptr [rdi]
pop rsp
and al, 0xcf
movabs al, byte [0x908893700a01503f]
add ecx, ebp
jg 0x405890
or byte [rdi + rcx*8], ah
jo 0x405819
mov edi, 0xc8580148
pop rsi
adc eax, 0x3f173001
or esp, dword [rcx + 0x70]
xor al, 0xbf
adc dword [rcx], ecx
pop rsp
pop rax
retf
jnp 0x4058f9
retf
mov edi, 0xe48b196c
add dword [rbx + 0x75f2737f], edi
cwde
call qword [rdx]
add ecx, dword [rax + 0x36]
or dword [rdi + 0x40], edi
mov ah, 0
pop rax
and al, 0x4f
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], ah
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip + 0x1e080216], ecx
retf
xchg eax, ecx
push 0x5b
fucomi st(7)
pushfq
xor rax, qword [rax]
add byte [rdx], ch
sldt word [rax]
test al, 0xd4
add byte [rax], al
add byte [r8], al
outsb dx, byte [rsi]
hlt
add byte [rax], al
add bh, bh
