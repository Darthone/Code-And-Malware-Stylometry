call 0x404ba0
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x4049b8
add ebx, ebx
je 0x40496e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4049a6
cmp rbp, -4
ja 0x4049a6
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x40498e
add ecx, 4
mov dl, byte [rax]
je 0x4049b6
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4049a6
ret
cld
pop r11
cmp r8b, 2
je 0x4049ce
jmp 0x404a4b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x4049de
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x4049c6
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x4049f6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x4049e3
sub eax, 3
jb 0x404a14
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x404a4b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x404a3b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x404a39
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x404a28
cmp rbp, -0xd00
adc ecx, eax
call 0x40497a
jmp 0x4049ce
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x404b24
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x404ac2
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x404b0e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x404ae1
push 0x3a707474
jne 0x404b3a
js 0x404afa
jae 0x404b34
outsb dx, byte cs:[rsi]
je 0x404af3
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x404b61
jb 0x404b53
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x404b7e
jb 0x404b91
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21f364
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21f364
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x404a5c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x404b87
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x404b35
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add dword [rax], eax
jmp rbp
call 0x706f4c2f
jb 0x404c47
movsxd rbp, dword [rdi]
jae 0x404c41
insb byte [rdi], dx
js 0x404c47
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x404c27
cmp rsi, rcx
jae 0x404c2f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x404c0e
cmp al, 0x8f
ja 0x404c0e
cmp byte [rsi - 2], 0xf
je 0x404c14
sub al, 0xe8
jg 0x404c11
push rdi
cmp al, 1
ja 0x404bfc
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x404bff
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x404c2c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x404c83
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c5101
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x404cc7
mov al, 0xa
jmp 0x404cc7
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x404ca3
inc ebx
mov al, 0
jmp 0x404ccb
mov al, 2
jmp 0x404ccb
mov al, 3
jmp 0x404ccb
mov al, 0x3c
jmp 0x404ccb
push rcx
rcr ah, 1
fstp st(7)
jle 0x404d0c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x404d1e
jg 0x404d10
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296aa493
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x404d6a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb9ee7
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x404d72
cmp esi, 0x21585055
jne 0x404d76
jge 0x404d68
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x404d6b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x404d6f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x404e1b
pop rcx
or al, 0x3b
jb 0x404e21
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x404d93
jmp 0x404d95
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3664cd6
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf56f1e
in eax, dx
jg 0x404dcd
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x404e13
mov bh, 0x2a
add edi, 0x10
jmp 0x404e10
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x404e4d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x404e89
jne 0x404ea0
fstpnce st(6), st(0)
jle 0x404e69
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x404e9f
jrcxz 0x404ed3
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1ee37
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x404f52
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x404f12
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x582994e7
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x404f85
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x404f1f
and ecx, 7
or al, 0xeb
jae 0x404f8a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x404fbf
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x404ffd
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x404fb6
push rax
call 0xffffffff868d4ca3
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x404fc0
std
cmp edi, esi
xchg eax, edi
jle 0x405015
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c995a1
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x405013
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x405001
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40502a
js 0x40506a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x4050fc
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad6337
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40511d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x405122
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc24bd4
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4050b0
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], dl
and byte [rax + 0x92], cl
add byte [rax], al
add byte [rax], al
add dil, dil
and byte [rcx + rax], dh
add byte [rbx + rdi + 0x20000], dh
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4051d6
je 0x4051df
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x4051a8
mov dh, 0x7d
jbe 0x4051a7
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x4051e0
sahf
sahf
add al, 0
cwde
add eax, 0x1f90e000
and byte [rdi + 0x9100006], bl
add dl, dh
adc ah, ah
enter 0x80f, 0
js 0x4051ce
or dword [rax], eax
adc sil, dl
or esp, esp
add ecx, dword [rdx]
add byte [rax + 0x1818000b], ch
stc
add al, 0xf2
add dword [rax + rax], ecx
or eax, 0x7e1bf000
cmp ah, 0
add byte [rax], al
sbb al, 0xf
add byte [rdx + rbx*4 + 0x403e409f], al
adc byte [rax], al
movabs al, byte [0x201f900fa1500011]
adc al, byte [rax]
add byte [rax - 0xdffffed], dh
enter -0x1294, 0x14
add al, bl
std
add al, 0xf2
add al, 0xf2
adc eax, 0x16e800
and bl, cl
add al, 0xf2
add al, bh
sbb bh, bh
retf
add dh, dl
sbb eax, 0x77610519
sbb al, byte [rcx]
add dword [rsi + 0x1b17601d], esi
add al, 2
fimul word [rbp - 0x27]
sbb al, 0x13
add dword [rdi], edx
add al, 0
int1
jmp rcx
pop rbx
pop rcx
in al, dx
or al, 0x1b
mov edi, 0x92970289
rol dword [rsi + 0x171b30a4], 0x70
outsd dx, dword [rsi]
sbb dword [rsi], ebp
mov al, 0x44
pop rdi
enter -0x7ca0, 0x74
cmpsd dword [rsi], dword ptr [rdi]
enter 0x1701, 0x53
xchg eax, edx
shr dword [rsi + 0x477a4f84], -0x30
fcom dword [rbp - 0x6879e6f0]
movsd dword [rdi], dword ptr [rsi]
xlatb
jmp 0x27f095a6
sal byte [rdi - 0x28], 0x20
or dword [rbp - 0x35], 0x5f
not byte [rsi]
xor ah, ah
mov byte [rax + rcx - 0x36131be7], bl
adc eax, 0x171d0c01
and eax, 0x4190642c
xor dword [rdi], ebp
pop rax
jns 0x405257
and dword [rcx], ebx
xchg byte [rcx], al
sbb eax, 0x39072793
sbb ch, byte [rsi + 0x391da901]
jns 0x40531b
nop
sub bl, ah
add ebx, edx
sbb eax, 0x2790bd43
or al, 2
add rbx, qword [rbx]
add dh, byte [rdx]
fcom dword [rax + 0x30c1ef9c]
ret 0xc832
cmp eax, 0x3604c42f
and al, 0x83
or al, 0x64
enter 0x5f76, 0x32
enter 0xc90, -0x37
mov edx, ecx
or eax, 0x9b4320c9
int3
movabs dword [0xae08d0178320c832], eax
xor bl, al
nop
or al, 0xd8
mov ch, 0x47
loopne 0x4052fe
leave
in al, 0xd6
nop
xchg eax, ebx
add dword [rax - 0x64], 0x1b
stc
leave
sbb dword [rax + 0x25], esp
and al, byte [rbx]
cmp ecx, esp
movabs al, byte [0x641cf4035f4b7f9c]
nop
mov bl, 0x25
pushfq
nop
jmp 0x40532d
and eax, 0xab5f159d
pop rdi
jg 0x405389
mov ebp, 0x6768ab21
mov ecx, 0xf7ac3717
add byte [rbx], cl
add eax, dword [rip - 0x3a9a8921]
scasb al, byte [rdi]
fadd dword [rdi + 0x67]
loope 0x405371
movsb byte [rdi], byte ptr [rsi]
fst dword [rsp + rsi + 0x17f25f14]
out dx, al
retf -0x5886
add eax, 0x1b7f4704
sbb dword [rbp - 0x38], -0x72
and dh, byte [rdi + 0x1784626e]
xchg eax, ebx
mov word [rbx + 0x17051ab7], ss
test qword ss:[rsp], r11
nop
sub dword [rsi + rax + 0x49], ecx
cmp dword [rcx], edi
enter 0x7983, 0x43
xor eax, 0xc9d839a2
or al, 0x2a
push rsi
mov esi, 0x85ecf205
cmp al, 0x3f
pop rsi
or eax, dword [rsi]
ja 0x405370
xor eax, 0x720e4f21
pushfq
sbb dword [rsp + rdi + 0x5f064b7b], 0x60
push rbx
lahf
pop r14
enter 0x693, 0x57
and dh, byte [rcx]
pushfq
cmp al, 0x7b
and dword [rdi + rax], ebx
out dx, eax
lea esp, [rdi]
sbb al, cl
leave
xchg eax, ebx
sub dword [rax], 7
jmp 0xffffffff9cc3ac0b
cmp al, 0x39
add eax, 0xe424308
cmp eax, r9d
leave
xchg eax, ebx
or byte [rdx], al
jg 0x4053df
xchg eax, ebx
sbb dword [rsp + rdi - 0x1ba18a0e], 8
cmp al, 0x39
enter -0x3c37, 0x75
or qword cs:[rax + rdi*2], r15
in al, dx
test dword [rcx + rcx - 0x3dd7a741], ebp
sbb esp, esp
in al, 0x60
push rax
jbe 0x405462
out dx, eax
in al, 0x20
sbb al, byte [rdx - 0x7cf5d6dd]
or al, 0x72
add ch, byte [rax]
xor bh, byte [rsi + rsi]
sbb eax, 0x60939064
js 0x4053ee
sal byte [rax + 4], cl
jbe 0x40543e
in al, dx
jle 0x405495
movsb byte [rdi], byte ptr [rsi]
or edx, dword [rdi]
sbb byte [rdi + 0x720b9d8f], dl
nop
xchg eax, ebx
pop qword [edx]
push rbx
ror byte [rbx], 0x72
in al, dx
add eax, 0x4bbf0bd3
mov ecx, dword [rcx + 0xe]
and byte [rbx], cl
sbb eax, 0x7b12bb0c
or al, 0x83
pop rbp
enter 0x7f13, -0x4c
rcl byte [rdi], 0xd4
jns 0x4054ca
nop
xchg eax, ebx
xor qword [rax], rcx
or eax, 0x6aec8bcb
cmp dword [rbp + 0x76], ebp
and dword [rdi + 0x20], ecx
movabs al, byte [0x1f0d850f61784f27]
push rax
or r10d, dword [r15]
in al, 0x20
leave
or eax, 0xb3de797c
mov word [rip + 0x584c887], cs
iretd
pop rsi
enter 0x5de0, 0x67
pop rdi
cmp dword [rax], 0x21c67939
out 0x6c, eax
jl 0x405437
cmp byte [rdi], ah
push rbp
pminub mm4, qword [rcx + 0x2720e40f]
imul ecx, dword [rax + rbp - 0x730df031], 0x17
sub al, 0x84
adc bh, bh
cwde
xor dword [rsi - 0x62], ecx
cmp al, 0x79
mov dword [rcx], eax
push rbx
adc byte [rax - 0x1bd017bb], dl
leave
jns 0x4054dd
jle 0x405468
adc byte [rdi], ah
mov esp, 0xb08f6790
push rdi
adc dword [rdi], ebx
push 0x4e
sahf
mov ebp, 0x115e6b90
out 0x93, al
cmp eax, 0x41c9c90e
cdq
adc dword [rcx], esp
not byte [rcx]
leave
xchg eax, ebx
iretd
cmpsd dword [rsi], dword ptr [rdi]
loop 0x405524
mov al, byte [rax]
adc bl, byte [rsi + 0x48e4e41c]
xor dword [rdi + 0x34], ecx
adc al, byte [rsi + 0x53]
or edi, dword [rcx - 0xe]
insb byte [rdi], dx
adc cl, byte [rsi]
in al, 0xc9
adc dl, dh
pop rbx
sub dl, byte [rbx]
fiadd word [rdx - 0x62]
mov ebp, 0x137f9190
in eax, dx
pop rsp
jrcxz 0x4054ab
sbb al, 0xec
pushfq
jne 0x405531
adc al, 0x27
xchg eax, ebx
sbb dword [rsp + rdi + 0x2b3982c6], 0x14
nop
sbb eax, 0x14615d92
fistp qword [rsi + 0x28]
and ecx, ebp
test al, 0xbb
jp 0x40555f
adc byte [rdi - 8], cl
movsb byte [rdi], byte ptr [rsi]
jb 0x4054ff
add dword [rdi + 0x40], 0x7714bd4e
jb 0x40554c
sub al, 0x6b
and byte ds:[rip - 0x30de6bb4], dl
jp 0x405586
sahf
adc eax, 0x1946787f
adc byte [rax - 0x3a], bh
adc eax, 0xcf16a30f
enter 0xe93, -0x37
call qword [rsi]
pop qword [rcx + rcx*2 + 0x5e902f02]
mov edi, 0x85e71766
cmp al, 0xe1
add eax, 0xd44f1792
cmp dword [rcx], edi
fdivr dword [rdi + rbp - 0x1a609d5a]
iretd
pop rsi
enter -0x6bbf, -0x75
sbb byte [rdi + 0x3d185b3a], ah
jns 0x4055cb
jg 0x4055c4
ret 0x4f27
pop rsi
enter 0x5eb3, -0x6d
sbb byte [rdi + 0x3c], bh
nop
call 0xffffffffca088ed5
mov bl, 0x67
jbe 0x4055f6
imul edi, esp, 0x9c839318
cmp al, 0x2d
sbb byte [rcx], r11b
cmp al, 0x39
enter -0x3537, -0x6d
insb byte [rdi], dx
sbb dword [rax], ecx
sahf
jns 0x4055d0
in al, 0x85
jnp 0x4055f7
and al, 0x7e
mov bh, 2
adc ah, byte [rdi]
cmp dword [rsp - 0x6c20e0b5], ebp
sbb eax, ebx
or dword [rcx], ebx
in al, 0xc9
or ebx, dword [rdx]
movsxd rsp, dword [rdi]
sbb ah, byte [rdi]
leave
xchg eax, ebx
leave
push rax
sbb al, byte [rdi - 0x3a]
mov cs, word [rbx]
jns 0x405600
in al, 0x75
add eax, ebp
sbb ch, byte [rdx]
sbb esp, esp
in al, 0xd9
sbb eax, 0x8148171b
jle 0x405604
and byte [rdi], ah
mov dh, 0x76
pop rsp
mov eax, 0x7a4f7394
and eax, 0x1c180780
mov ch, 0x8d
jbe 0x405659
pushfq
xchg eax, esp
sbb dword [rbp + 0x60], -0xf
mov ah, 0x1c
xchg ebx, ebp
xchg eax, esp
jns 0x4056ba
nop
xchg eax, ebx
mov word [rax], fs
adc byte [rip + 0x6a3a54e5], bl
cmp dword [rbx - 0x5f80eed3], edx
sbb dword [rcx + rsi*2 - 0x18e2c3b8], -0x5e
sub eax, dword [rdi - 0x7bdf1b1c]
sbb eax, 0xd61decfa
or edi, dword [rcx + 2]
push rdi
and byte [rax + 0xb4f1e17], cl
mov word [rbx + 0x72], es
mov edx, 0xeff1e7a
xor cl, al
fldenv [rax + 0xedb771e]
or eax, 0x2720e41f
xchg rax, r12
sub al, 0x6e
jb 0x405687
xor al, 0x61
jne 0x405625
sub bh, byte [rdx + 0x42]
jbe 0x4056c1
rcl dword [rdi], 1
sub byte [rsp + rax*8 - 0x78d73c71], bl
shl byte [rax - 0x37a2cb21], 0x93
cmp dword [rax], 0x20
push rsi
pop rbp
pop r13
pop rax
sbb byte [rdx + 0x6587f817], bl
nop
xchg eax, ebx
sub dword [rdi], -0x7b
nop
pop rcx
xchg eax, ebx
sbb dword [rsp + rbx + 0xc2d6940], 0x21
cmp al, 0x39
enter -0x4737, 0x41
mov ebx, dword [rip - 0x539763df]
and dword [rbx + 0x7671d9c], eax
movsb byte [rdi], byte ptr [rsi]
xchg qword [rdi + 0x21e31721], rbx
ja 0x40571d
in al, 0xd9
or esi, dword [rdi]
and bl, byte [rdi - 0x72]
pop rsi
jne 0x40571a
in al, dx
or dword [rdi], eax
adc byte [rax + 0x5f22882f], ah
jle 0x40577e
jb 0x405697
xchg eax, ebx
mov ah, byte [rsi + 0xe]
and edi, dword [rsi + 0x7272429]
cmp dword [rsi + 0x28], ecx
and edx, dword [rax + rdi*2]
and edi, ecx
cmp byte [rbx + 0x23], ah
clc
cwde
out 0x23, al
mov word [rsi - 0x38], ds
xchg eax, ebx
jp 0x405731
and al, 0x1f
or ecx, dword [rdi + rdx + 0x4579a3f2]
and al, 0x3f
fcom dword [rax + 0x2463d49c]
out 0x3a, eax
scasb al, byte [rdi]
pushfq
cmp al, 0xa3
std
and al, 0xaf
jno 0x4057bb
pop rsi
enter -0x7c6d, 0x46
and eax, 0x25c25a2c
jb 0x405747
mov edi, ds
clc
mov edi, 0x679025d7
mov esp, 0x27263c40
mov esp, 0x9e4e436
mov ebp, 0x54a72652
push rbx
js 0x4056f3
sbb al, 0x8f
xlatb
out 0xb7, eax
sahf
jno 0x4057c5
mul dword [rsi]
mov rsi, cr2
or al, 0x5e
cmc
jp 0x4057b2
out dx, eax
or eax, dword [rdi + rdx - 0x5ba88f0e]
in al, dx
sahf
sar dword [rax + 0x560def27], -0x1c
or edi, dword [rcx - 0x2e]
and eax, edi
mov edi, 0x4e4150a5
sahf
xor ch, byte [rax]
outsd dx, dword [rsi]
lodsb al, byte [rsi]
pop r10
and al, 0xe
leave
leave
push 0x28
scasb al, byte [rdi]
shr dword [rax], 1
jg 0x405800
sahf
ror byte [rbx], 1
stc
sub byte [rdi - 0x33], dh
adc bpl, r11b
add eax, 0x93294bf2
adc ecx, eax
mov bl, 0xb7
cwde
sub dword [rcx + 0x179e42f4], eax
not byte [rbp - 0x3688d61a]
xchg eax, ebx
pop rbp
ja 0x405817
and byte [rdx], dl
pop rdi
and ecx, dword [ebp - 0x1f4c4ffe]
in al, 0x35
sub ch, byte [rdi + rax*8]
add al, 0xbf
cmp dword [rcx + 0x72], edi
sub dl, byte [rax + 0x5c]
lodsb al, byte [rsi]
sub dh, byte [rdx - 0x70]
xchg eax, ebx
xchg qword [rbp - 0x3f61d4ca], rbp
or edi, dword [rcx - 0x34]
pop rdx
movabs dword [0x42f19e42963c872b], eax
shr byte [rbx], 0x57
adc bl, byte [rcx - 0xe61bd14]
and dword [rdi + rdi], ebp
add al, 0x4c
in al, dx
test dword [rbx + rdi*2], ebx
imul ecx, dword [rdi + 0x4a47772c], 0x17acf485
hlt
sub al, 7
sbb byte [rdi - 0xd8df189], 0xec
sub eax, 0x4853d6bf
sub rax, 0x4e487081
cwde
pushfq
sub eax, 0x13c85e07
jp 0x405862
lodsd eax, dword [rsi]
xchg byte [rbx], ah
js 0x405883
iretd
and eax, 0xf72e6274
mov eax, 0x7ab02f5d
and dword [rsi + 0x2eab772e], edx
in al, 0x60
sbb byte [rdi + 0x5e735fd6], bl
mov esp, 0x412f2790
mov bl, byte [rdx + 0x7a]
mov al, 0xb
stosd dword [rdi], eax
sahf
mov dl, 0x2f
cmp al, 0x89
jb 0x40585e
scasd eax, dword [rdi]
js 0x405902
test dword [rbx], edi
test dword [rax + rsi], edi
out 0x72, eax
insb byte [rdi], dx
jns 0x40586d
or ebp, esp
fnsave dword [rax]
cmpsd dword [rsi], dword ptr [rdi]
int1
xor byte [rdi - 0x469ba51a], al
or esi, dword [rcx]
xor dword [rdi], edi
adc dword [rdx], eax
movsb byte [rdi], byte ptr [rsi]
sbb byte [rdi - 0x54c0cec2], al
xor dword [rdi - 0xde84c37], edi
je 0x4058a3
xor dword [rdi + 0x27243736], edi
jno 0x40589c
jp 0x405907
mov dword [rdi + rax*4 + 0x213b3c9c], 0x2ab8d732
xor ch, byte [rbx + rax*2 + 0x20bf4272]
xor r8b, byte [rdi]
jb 0x4058e2
outsb dx, byte [rsi]
lea eax, [rdi - 0x3f]
xor ch, byte [rax]
jbe 0x40591c
cld
fcomp dword [r15 - 0xf61bd14]
or eax, 0x87f7df33
push rbp
cmp al, 0xe1
test dword [rbx + rcx*2], ebx
jb 0x405945
xchg eax, edi
int3
pushfq
cmp al, 0xe1
test dword [rax - 0x7cb380cd], ebp
mov byte [0x33fa8393], al
loopne 0x40590e
jmp 0x1735f5bc
xor al, 0x4f
retf 0x3475
test dword [rsp + rbp*8], ebx
add bl, dl
pop rcx
pop rsi
stosd dword [rdi], eax
in al, dx
xor eax, 0xb990fea7
xor eax, 0x85d8388f
cmp al, 0x94
jo 0x40593e
adc bh, byte [rbp + 4]
and al, 0x77
and edx, dword [rsi + 0x36]
js 0x40597b
lahf
ror dword [rbp + rax*8 + 0x21784036], cl
jg 0x4059dd
xchg eax, edi
leave
pop rcx
mov esp, 0x26cf374e
jae 0x4059ae
jns 0x40597f
xor byte [rdi + 0x14bf37bf], bl
test dword [rax + rdi*2], esp
ret 0x480b
cmp bh, al
nop
popfq
ja 0x40599f
pop rsi
pop rbx
cmp byte [rdi - 0x58], al
cmp byte [rdi], dh
sbb dword [rbx], ecx
pop rsi
enter -0x7e76, -6
cmp byte [rdi - 0x68], bh
or edi, dword [rcx - 0x2a]
or esi, dword [rdx]
cmp dword [rdi], esi
in al, dx
xor al, 0xc5
or edi, dword [rcx - 0x3e]
push rax
cmp dword [rdi - 0x1a], esp
push rdx
jae 0x4059ec
xor byte [rdx - 0x7f], bh
push rdi
xchg eax, ebp
cmp dword [rdi + 0x464f39c0], ebp
mov ss, word [rax]
movabs al, byte [0x239193c839e14b34]
cmp dh, byte [rip + 0x5239f73b]
mov al, 0x13
cmp ch, bh
scasd eax, dword [rdi]
cmp al, byte [rdi + 0x5d843a9]
int3
cmp ebp, dword [rdi + 0x78]
xor eax, 0x373b7e02
sar byte [rbx], 1
mov al, 0x13
jb 0x405a1c
jg 0x405a49
xor bh, byte [rdi + rbp*8]
in al, 0x49
pop rbp
cmp al, 0x2f
cdq
cmp al, 0xb0
or edi, dword [rcx + 0x46]
or r15b, byte [r10 - 3]
cmp eax, 0x94721789
cwde
xor eax, 0x1e221f3d
mov esp, 0x37185ec0
cmp eax, 0x13d5cd7
in al, 9
push rdi
xor byte [rbp + 0x719e3dcf], bl
adc dh, byte [rdi + 0x27]
lahf
sub qword [rbx], r10
sbb al, dh
iretd
movsd dword [rdi], dword ptr [rsi]
sbb al, 0xe4
in al, dx
jge 0x4059d3
in eax, dx
enter 0x7a13, -0x7f
out 0x3e, eax
xor byte [rcx + 0x5e], cl
enter 0x5e93, 0x40
and dl, byte [rbp - 0x7b13c029]
iretd
out dx, eax
xor dword [rsi], ebx
out dx, eax
jrcxz 0x405aa4
cmpsd dword [rsi], dword ptr [rdi]
jb 0x405a5c
xor eax, dword ss:[rsi]
mov dl, 0x99
fsubr dword [rbx + 0x21]
pop qword [rdx - 0xe]
test dword [rbx], eax
mov bh, 0xe0
and dword ss:[rbx], 0x894ea7fe
sbb dword [rbp + rbx + 0x217b56c], 0x27
int 0xe4
in al, 0xc9
xchg eax, ebx
movsb byte [rdi], byte ptr [rsi]
cmp eax, dword [rcx]
jmp 0x405aeb
sahf
cmp al, 0x3b
cmpsw word [rsi], word ptr [rdi]
add dword [rdi], ebp
rol byte [r15 - 0x37], 0x33
jp 0x405acc
insd dword [rdi], dx
scasd eax, dword [rdi]
cwde
je 0x405aa6
add bh, byte [rcx]
enter -0x34d, 0x41
xor byte [rsi + 0x20], bl
xchg dword [rdi + 0x42dd0f42], ecx
lodsb al, byte [rsi]
cwde
lodsb al, byte [rsi]
cmp al, byte [rdi]
pop rax
dec dword [rcx]
in al, 4
cmovae esp, dword [rbp + 0x43]
test byte [rbp + 0x60], cl
sal dword [rdx + 0x2fc69743], 0x13
jb 0x405ae2
cmp dl, byte [rsi]
mov ah, 0x98
mov ecx, ebp
xchg eax, esp
add byte [rcx + rax*8 + 0x4464b72f], bh
xor al, ah
test dword [rbx + rdx], edi
jl 0x405a81
jb 0x405ac0
shl dword [rsi], -0x64
mov dh, 0x96
out 0x3b, eax
in al, dx
sahf
sbb al, 0x44
push rsp
hlt
sub dword [rsi + 8], ebx
sbb eax, 0x9677938a
movsxd rax, ecx
or dword [rcx], edi
fild word [r13 + 0x67]
sahf
popfq
nop
insb byte [rdi], dx
cmpsb byte [rsi], byte ptr [rdi]
mov ss, word [rcx]
enter 0x6841, 0x46
mov cl, 0x17
jbe 0x405b41
loope 0x405b19
imul byte [rsi - 0x14]
jg 0x405b81
add byte [rbp + 0x315782c0], bl
jns 0x405b8b
mov esp, 0x64a72790
xchg eax, edi
out dx, eax
and dword [rcx], edi
jmp 0xffffffffbf886459
push rsp
test byte [rdi], dl
jb 0x405b0a
je 0x405b73
push rsi
push rdi
mov eax, 0x893c7f48
bnd call 0x1f896cff
ficom dword [rbx - 0x7a16c6df]
call 0xffffffffc0c185d1
iretq
and r9b, dl
nop
cmp al, 0x3b
jl 0x405bcd
out 0xc0, eax
or eax, dword [rsi + rcx*2 - 0x4d0b636]
sahf
shr byte [rax], cl
inc rcx
add eax, 0x5090bb07
push rdx
in al, dx
test byte [rdi - 0x2e], bh
out dx, eax
test byte [rsi + 0xb], cl
nop
repne movsb byte [rdi], byte ptr [rsi]
cmpsq qword [rsi], qword ptr [rdi]
insb byte [rdi], dx
xchg eax, ebp
movsxd rcx, dword [rbx + 0x39]
adc dword [rip - 0x60b40dd1], 0x7a0c4c4e
sbb eax, 0x89c770ee
scasq rax, qword [rdi]
ror byte [rcx], 0xc9
push rdi
sbb eax, 0xc85e044d
adc edi, dword [rdi + 0x62]
lea ebp, [rbp + 0x4d]
out 0xc9, eax
mov bl, 0x17
idiv byte [rax]
movabs al, byte [0x9c907866ef4d7c17]
jo 0x405bb5
and cl, byte [rbp - 9]
cmp ebp, ecx
test dword [rbx + rbp*8], edi
cmp dword [rsi - 0x39], ecx
cmpsb byte [rsi], byte ptr [rdi]
sub al, 0x4f
cmp al, 0xe1
test dword [rdi + rdi*8], edi
imul ebp, dword [rbx + 0x4e], 0x2786fa37
adc al, ah
test dword [rdx + 0x4f08f74e], edi
mov ss, word [rax - 0x51]
mov esp, 0x4f6e766b
enter 0x4e13, 0x20
xchg eax, ecx
mul qword [rip - 0x73f42e87]
pop rsi
adc dword [rax + 7], edx
jbe 0x405c7d
enter -0x6e6d, 0x23
vmread qword [rbp + 0x7b], rdx
mov ebx, 0x7516e450
adc esp, edx
adc dh, byte [rdi + 0x47]
and cl, byte [rsi + 0x2072391c]
add esi, ebp
push rax
xchg eax, esi
test dword [rdi], edx
add dword [rbx + 0x1d472391], edx
push rcx
jb 0x405cba
in al, 0xc8
jge 0x405cad
add byte [rsi - 0x63adf05b], cl
cmp al, 0x19
cmp dword [rsi + 0x6d], eax
pop rsi
movabs dword [0x52e284ea4f217c52], eax
mov bh, 0x72
test byte fs:[rdx + 0x1b], bh
push rbx
jg 0x405c9f
push rbx
sbb al, 0xe4
in al, 9
enter 0x682b, -0x7e
push rbx
jns 0x405c7c
sahf
in al, 0x57
jmp 0x405ce3
push rcx
ror dword [rbx], 1
or al, 0x54
push rsp
add ebx, dword [rsi - 0x38]
mov bl, 0xf7
insb byte [rdi], dx
xchg dword cs:[rdi + rbp*2 + 0x3c], edx
loope 0x405c2c
sbb al, 0xca
xchg eax, edi
push rbp
scasd eax, dword [rdi]
cli
pop rcx
enter -0x15cf, -0x7b
push rbp
or esp, esp
leave
push rax
mov edx, dword [rbp - 0x16]
push rbp
mov bh, 0x72
or edi, dword [rcx + 0x2e]
jnp 0x405cdf
push rsi
and dh, dh
add al, byte [rbx + 0x77565f43]
lodsd eax, dword [rsi]
push rsi
xlatb
adc esp, 0x475c790b
push rsi
lahf
jns 0x405cd8
add bh, byte [rbx + 0x63]
push rdi
mov edi, 0x3aef57bd
enter 0xe13, 0x39
cmp bl, byte [rax - 0x51]
jl 0x405d3f
enter -0x4c37, 0x5e
pop rax
scasd eax, dword [rdi]
pop rax
out 0xe2, al
test dword [rcx + rdi], edi
fstp dword [rax - 0x30]
sub bh, ah
pop rax
xchg eax, edx
mov bl, 0x18
pop rcx
iretd
int3
in al, 9
sbb al, 0x60
pop rcx
push rdi
push rsi
xchg eax, ecx
out dx, eax
pop rcx
loop 0x405ca3
mov word [rax], es
fistp word [rax + 0x21]
pop rdx
add cl, 0x3f
xchg eax, ebp
jg 0x405d40
mov dl, 0x5a
and byte [rcx], r10b
pop rbx
int1
xlatb
leave
sub al, 0x5e
pop rbx
iretd
mov ds, word [rbx + 0x24]
jp 0x405d64
iretd
xlatb
ficom word [rax - 0x6318a3ec]
jl 0x405d09
or dword [rdi + rdx + 0x5e253327], ebp
enter -0x7c6d, -0x3a
pop rsp
pop rbx
sbb ebx, dword [rbp - 0x62]
mov word [rbx + rax*4], ds
mov esi, 0x5d82785f
add al, 0x16
pushfq
sahf
pop rbp
mov al, 0xe2
pop rsi
outsd dx, dword [rsi]
mov ebx, 0x32b3ef5e
mov esp, 0x5f088390
jg 0x405d58
mov al, 0xb
test byte [rdi], dl
pop rax
pop rdi
scasd eax, dword [rdi]
lodsb al, byte [rsi]
call 0x5ab2cf9c
push rdx
call qword [rax + 0x3f972327]
std
add byte [rsi + 0x60], 0xc0
pop rsi
mov esp, dword [rax - 0x29]
cmpsd dword [rsi], dword ptr [rdi]
ja 0x405dbf
add al, byte [rdi]
mov ebx, 0x820e2fbb
jmp rdi
and dword [rcx], edi
mov esp, dword [rax - 0x79]
ja 0x405e00
enter -0x6e6d, 0x63
xchg eax, edx
jmp 0xfffffffff2b2bf91
movsb byte [rdi], byte ptr [rsi]
adc eax, dword [rbx]
ja 0x405d78
imul edx, dword [rbx + 0xc], 0x621c8178
stosd dword [rdi], eax
lahf
repne movsb byte [rdi], byte ptr [rsi]
adc esi, dword [rdx + 0x38]
sahf
pop rdi
ret 0xf07b
add al, byte [rcx + 0x27631c17]
mov esp, 0x4185ea94
wait
and byte [rdi - 0x50], al
movsxd rsi, dword [rdx + 2]
adc bh, dh
hlt
and dword [rdi - 0x78], eax
lodsd eax, dword [rsi]
out 0x88, eax
enter -0x4c37, 0x3a
jmp 0x6de4a572
xor ebp, 0x65493902
lea esp, [rbp - 0x39]
cmc
jbe 0x405dd4
push rsp
sbb ah, byte [rsi + 0x1c]
movabs dword [0x48163f6673ef605e], eax
mov esp, 0xd084e240
jg 0x405e1a
xor byte [rsi + 0x20], bl
cli
iret
jbe 0x405ea6
test byte [rsi + 0x60], bl
mov dword [rdi + 0x5f], esp
xchg eax, edx
jb 0x405df7
xor ch, byte [rax + 0x52]
jmp 0x405de3
pushfq
jno 0x405ead
push 0x68bd913f
test r8b, r12b
test dword [rsp + rdi*4], edi
mov ecx, esi
push -0x3fdc6f29
or dword [rcx + rbp*2 + 0x3b72aaaf], ecx
adc dword [rax], 0x4769c19c
push 0x17
xor eax, ebp
test dword [rax + rbp*2], edi
xchg eax, esi
cmp al, 0x6a
idiv dword [rcx]
adc bh, byte [rax + rdx*4 - 0x709589fc]
xor byte [rcx + rdi], ch
jnp 0x405e54
or dword [rdx - 0x5f977896], ecx
adc byte [rdi], dl
mov byte [rcx + 6], 0xa6
int3
push rdi
fisttp word [rcx]
popfq
mov bpl, byte [rdx + 0x37]
sbb ch, byte [rbx - 0x29]
add ah, byte [rbx]
leave
imul ebx, dword fs:[rdi + 0x23], 0x5e
and byte [rsp + rbx*4 + 0x6b], dh
pop rdi
add ebp, dword [rdi + 0x42]
sahf
je 0x405ec0
jge 0x405f2c
out dx, eax
scasb al, byte [rdi]
jae 0x405e80
nop
cmc
mov eax, 0x48365f6c
insd dword [rdi], dx
iretd
cmp byte [rcx + 0x6d3c2f10], al
xchg dword [rsi + 0x5b], ebp
int1
add bh, byte [rcx + 0x21]
test byte [rbp - 0x23], ch
insd dword [rdi], dx
xchg eax, edx
xor edi, dword [rax - 0x7f]
mov bh, 0x40
outsb dx, byte [rsi]
leave
sbb rax, 0x12576e5c
lodsd eax, dword [rsi]
outsb dx, byte [rsi]
sub ebx, dword [rsi - 0x38]
adc ecx, dword [rdi - 0x4d]
js 0x405f09
outsd dx, dword [rsi]
movlps qword [rax], xmm3
jno 0x405f03
outsd dx, dword [rsi]
xor dword [r8 + 0x6f833921], 0x77
mov ebx, 0x17810217
jb 0x405ed8
imul dword [rdi + 0xf]
ror byte [rbx], 1
jns 0x405f0d
adc dword [rax + 6], esi
jge 0x405f88
jo 0x405f24
add dword [rax - 0x7f], edi
cmpsd dword [rsi], dword ptr [rdi]
cli
jo 0x405f68
test byte [rbx], dl
pop rax
jne 0x405f8b
jno 0x405f67
outsb dx, byte [rsi]
jno 0x405f52
adc dword [rax], 0x81b0e487
jno 0x405f3a
ror byte [rbx], cl
sbb dword [rcx], edi
lodsb al, byte [rsi]
jno 0x405eeb
jno 0x405fa4
xor al, ah
add eax, 0xb06f7250
jb 0x405f3b
test dword [rax + rax + 0x73391e7f], ecx
pop rdi
xchg eax, ecx
mov byte [rdi], dl
repne insd dword [rdi], dx
imul ebx, dword [rdi + 0x73], 0xbd205e77
nop
xor eax, 0x1fef73fa
je 0x405f07
jno 0x405f6f
mov edx, edi
je 0x405f71
and dword [rbx], ecx
cmp eax, ebx
nop
enter -0x4de9, 0x5a
xchg eax, ebx
xchg eax, ecx
and edx, esp
jne 0x405f19
add byte [rbx - 0x1bd8f7e2], dl
enter 0x75bf, -0x30
mov dword [rsi], ebx
jbe 0x405f57
repne movsb byte [rdi], byte ptr [rsi]
cmp dh, byte [rsi + 0x17]
fidiv word [rdx - 0x2c]
loopne 0x405f30
add dword [rbp + 0x614f2fa6], edi
jbe 0x405f25
add dword [rdi], esp
xor byte [rdi - 0xfd88969], bl
in eax, 0x5f
xchg eax, ebp
ja 0x405fce
sahf
movabs byte [0x13a2c72387778757], al
mov eax, 0x34564777
movabs rbp, 0x7813f87807279190
sbb al, 0xe4
in al, 0x19
fild qword [rsi + 0x2c]
and eax, 0x48624f78
sahf
or al, 0x52
js 0x405fab
xor ch, byte [rbx + rcx - 0x1c]
and byte [rdi], ah
int3
js 0x405f97
jb 0x405fc7
push rax
jns 0x406043
pop rax
lea edi, [rcx + 0xf]
xchg eax, ebx
sbb dword [rsp + rdi - 0x5dabc91e], 0x79
add bh, byte [rcx]
enter -0x3737, 0x2e
fdivr qword [rsi + 0x52321779]
lock sbb byte [rdx + 0x6f], bh
rcr byte [rax + 0x49], cl
sbb al, 0x92
mov bl, 0x7a
enter 0x7ab8, -0x69
enter 0xe13, -0x37
cmp eax, 0x12677b19
mov byte [rcx], cl
cmp dword [rbx - 0x6884aea2], eax
sahf
sbb byte [rdi], al
xor byte [rdx + 0x272017c4], bh
fdivr dword [rbx + 0x3f]
test byte [rdx], 0x83
in al, dx
jnp 0x4060a0
xor dword [rdi + rbp + 0x17], edi
in al, 5
jl 0x405fd1
xchg eax, ebp
scasd eax, dword [rdi]
adc dword [rdi], -0xe
jl 0x4060aa
and al, 0x94
jl 0x4060b7
sahf
shl dword [rcx], 0x39
add al, ch
jl 0x40604f
loop 0x4060d1
or edi, dword [rcx - 0xa]
jge 0x406058
jp 0x40608e
and eax, ecx
cwde
jge 0x406049
push rsi
call 0x2f4665f5
xor byte [rdi], al
add al, 0x7e
out dx, eax
jo 0x4060c7
loopne 0x40609a
jle 0x4060fb
pop rsi
jle 0x406099
add al, 0x12
jg 0x406034
jle 0x406056
nop
pushfq
mov ebp, 0x7edb1590
xlatb
clc
js 0x4060bb
iretd
loopne 0x4060ab
jg 0x40602e
mov ah, 0x8c
xor al, 0x7f
nop
mov esp, 0x7f94f740
outsd dx, dword [rsi]
add al, 0x73
mov esp, 0xe2bc2790
jg 0x4060d3
push rsi
and dword [rax + 0x45813840], eax
scasd eax, dword [rdi]
add al, 0x59
scasd eax, dword [rdi]
test dword [rax + rax*2 + 0x7f8083bc], ecx
mov al, 0x10
xor al, ah
mov esp, 0x8125ff80
or al, 0x4e
lahf
mov byte [rcx - 0x37b08e29], al
leave
mov bl, 0x17
movsd dword [rdi], dword ptr [rsi]
sbb dword [rdi - 0x10], 0x85e2d72a
cmp al, 0x39
mov edi, 0xfd566581
adc dword [rdx + 9], 0x300791e3
add esp, dword [rcx - 0x49]
xchg eax, edi
leave
enter -0x7f4f, -0x61
mov dword fs:[rdi - 0x62], edx
or esp, esp
xchg eax, edx
iretd
pop rdx
or qword [rdx + r12*2 + 0x41cf8348], r13
sahf
rcl byte [rbp - 0x7d], 0xcf
xchg byte [rdx + rax*2 - 0x37e85d40], al
mov eax, dword [rbx - 0x27887c32]
nop
pushfq
popfq
xor al, byte [rdi + rsi*2 + 0x5179b76]
ror byte [rbx], cl
cmp dword [rip - 0x287af67c], ebx
or al, 0xe2
push -0x7b
psubusb mm0, qword [rdx + 0x1784e485]
pop rdi
test dword [rdi], esi
add byte [rdx + rsi*8], al
and al, 0x18
sub byte [rdi - 0x2e], dh
test dword [rdx], esi
jb 0x4060e2
loopne 0x406174
xchg bh, bl
xchg byte [rbx + 0x35], ch
sahf
mov word [rcx + rdi*2], ds
xchg byte [rax], dh
pop rcx
and al, 0xb6
xchg al, cl
xchg eax, ecx
and eax, dword [rdi + 0x6c]
movsxd rax, dword [rsi]
add dl, byte [rip + 0x14232187]
xchg dword [rdi + 0x10274fa], eax
jp 0x40615d
xchg edi, ebp
mov byte [rbx], r10b
pop rsi
enter 0x5748, 0x58
jnp 0x406112
jg 0x40611c
sbb dword [rbp - 0x38], -0x78
pop rbx
test eax, 0x3a581817
add dword [rax - 0x44], 0x367f88d5
mov dword [rdx + rdi*2], ecx
and edi, ecx
cwde
jns 0x406208
mov edi, esi
cmp dword [rcx - 0x3e], edi
or dword [rbp + 0x27a5c789], edx
sbb al, 0xbc
nop
movabs dword [0x17a93c89e95cdf89], eax
sbb byte [rdi - 0x37307605], cl
push -0x7a1db0df
mov al, bh
sbb ecx, dword [rbx + 0x32]
jb 0x40617e
jp 0x406159
mov ch, byte [rdi - 0x3dda6e6e]
or ebx, dword [rcx]
jns 0x4061f4
mov esp, eax
sub dword [rbx + 0xbc279af], ecx
jns 0x40621c
sub byte [rdx], bh
mov edi, dword [rdi + 0x30]
xchg eax, esp
in al, 0xd9
or ecx, dword [rbp + 0x4f63bf8b]
mov eax, dword [rdx]
and byte [rdi + r15*8], r10b
adc dword [rsp + rdi + 0x374e2b19], ecx
movabs eax, dword [0x8138902f8c442f0f]
imul ecx, dword [rdi + rcx*2 - 0x1be37311], -0x1c
sbb edi, edi
mov ch, 0x88
cwde
leave
sahf
pop rsi
ja 0x406202
jg 0x4061b3
add eax, 0x69e42f52
jo 0x406202
lea eax, [rdi - 0x1dee3737]
or al, 0x8b
and byte [rsi + 0x7ee409c0], bl
mov ss, word [rsi]
lahf
xor byte [rdi + 0x42f0817a], bl
xor cl, byte [rdi + 0x248f7c07]
mov ebp, 0x8fbf07c0
out dx, eax
push 0x38ab1c8c
clc
lahf
fnstsw dword [rax + 0x48]
push rbp
pushfq
sahf
jno 0x4061f6
nop
mov esp, 0xe7813ac0
xchg eax, ecx
div dword [rbx - 0x1bd0ba6f]
sbb dword [rdi + 0x2c], eax
mov eax, dword [rdx + rdx*4]
cmp dword [rdx + 0x42], esi
ja 0x406285
pop rbx
xchg eax, edx
mov byte [rax - 0x7b], bh
cmp al, 0x19
sub edi, dword [rbx - 0x6e]
shl byte [rax], 0xf5
add ch, cl
xchg eax, edx
xlatb
fist dword [rdx - 0x3f42fec1]
pop rsi
xchg eax, ebx
mov ch, 0x93
jrcxz 0x406247
cmp byte [rcx + 0x379401f7], al
xor edx, dword [rdi + 0x13]
ror byte [rbx], 0x2d
xchg eax, esp
scasd eax, dword [rdi]
mov dh, 0xec
xchg eax, ebp
insb byte [rdi], dx
adc al, 0x8f
adc bl, al
xchg eax, esp
out dx, eax
mov al, 0x17
mov es, word [rdx + 0x308f94fb]
xchg eax, ebp
jp 0x4062ea
and eax, dword [rdi + rdx]
wait
xchg eax, ebp
cmp eax, ecx
leave
xor ebp, dword [rdi - 0x4ebecf20]
xchg eax, ebp
adc ebx, dword [rax - 0xf]
add ah, dl
xchg eax, ebp
mov bh, 0x1f
pop rsi
enter -0x694d, -0x71
cmpsb byte [rsi], byte ptr [rdi]
in eax, dx
add edi, dword [rdi - 0x44f42ae0]
push rax
add edi, dword [rdi + 0x5ef9674]
pushfq
movabs rsi, 0x6f8c85e084970c96
sub byte [rax], 0x97
pop rdi
adc ebx, dword [rax]
or dword [rbx - 0x69], edx
adc ebx, dword [rsi - 0x38]
mov bl, 0x97
cmpsd dword [rsi], dword ptr [rdi]
xlatb
push rsp
mov esp, 0x83901f97
pop rbp
enter -0x7d8c, -0x17
movabs byte [0x2797febd4604ec29], al
sbb ebx, dword [rax - 0x3b61bd29]
or ebp, dword [rdi]
cwde
hlt
jnp 0x406321
add al, 0x56
hlt
imul ebx, dword [rax + 0x4f98d2f7], 0xbf4f217a
mov eax, 0xef990f91
cmpsb byte [rsi], byte ptr [rdi]
push rsp
add ah, byte [rcx]
js 0x406372
push rbp
cdq
mov r12d, 0x77716790
cdq
out 0xd6, eax
cdq
cmp al, 0xe1
nop
pushfq
or ebx, dword [rdx - 0x37a1cee1]
adc eax, esp
test dword [rdx - 0x66], eax
xchg eax, edi
jle 0x406306
and al, 0x4e
mov ebp, 0x985a679a
sbb bpl, r14b
add al, byte [rcx - 0x642df065]
xchg dword [rsi + 0x22138ce4], eax
pushfq
lahf
sub eax, 0xc9c83270
rcl dword [rdi], -0x44
push rsi
or al, al
nop
and byte [rsi + rsi], dh
fcom qword [rax + 0x8759c83]
xchg edi, ebx
sub eax, 0x81389d2f
add eax, 0x979d792f
retf -0x7363
adc esi, dword [rdx + 4]
sub edi, esp
popfq
out 0x8e, eax
add eax, 0x2a98e487
sahf
scasd eax, dword [rdi]
scasb al, byte [rdi]
adc ebx, dword [r8 + 0x74]
sahf
mov esp, fs
or ecx, dword [rsi + rbx*4 + 0x5f9ea627]
mov edx, 0x4595e868
lock add byte cs:[rax], dl
lahf
nop
nop
iretd
lahf
lahf
mov al, 0x17
sbb byte [rbp - 0x6506024], bh
lahf
and dword [rbx + 0x11], esp
or al, 0xa0
mov word [rdi], gs
and al, 0xe
jbe 0x40646c
sub dl, byte [rdi + 0x4e89a085]
and byte [rax - 0x79], dl
movabs al, byte [0xbfa1010276793987]
lodsb al, byte [rsi]
pop rsi
lea edi, [rbp - 0x5cf8d870]
movabs eax, dword [0x9e42f598a20a8b3d]
out dx, eax
movsd dword [rdi], dword ptr [rsi]
xor byte es:[rdx - 0x78ebdc99], ah
and al, 0x2f
cmp al, 0xa2
ljmp [rax]
or dword [rax + rdi*2], ecx
and dword [rsi - 0x5e], eax
xchg dword [rax - 0x792eb7ed], eax
movabs byte [0x5710274181a2c617], al
sbb ah, byte [rbx + 0x3c9c8337]
cmp edi, dword [rbp - 0x5d]
xlatb
mov al, 0x37
xchg eax, esi
add ebx, dword [rsi - 0x38]
xchg eax, ebx
movabs dword [0x7167243fa3dd56f9], eax
add cl, byte [rax - 0x5c]
ljmp [rax + 6]
mov esp, 0xa47a3840
scasd eax, dword [rdi]
lahf
movsb byte [rdi], byte ptr [rsi]
outsd dx, dword [rsi]
and dword [rdi - 0x16], ecx
add al, 0xc5
movsb byte [rdi], byte ptr [rsi]
out 0x56, eax
xor byte [rax + 0x18], bh
movsd dword [rdi], dword ptr [rsi]
and dword [rbp + 0x604ecf27], 0xffffffc7
mov ebx, 0x9938bfa5
jb 0x406446
and dword [rdi], ebp
js 0x4064e1
sbb eax, dword [rsi + rbx*2 - 0x10594c38]
cmpsb byte [rsi], byte ptr [rdi]
mov edi, 0xbc05813
pop rdi
cmpsb byte [rsi], byte ptr [rdi]
outsd dx, dword [rsi]
retf 0x5c8
retf -0x48f0
lahf
adc byte [rdx - 0x361b52ad], bl
fisub dword gs:[rsi + 0x174523ef]
cmpsq qword [rsi], qword ptr [rdi]
cmpsd dword [rsi], dword ptr [rdi]
cmpsd dword [rsi], dword ptr [rdi]
in al, 0xc8
xchg eax, ebx
xchg eax, ecx
cmp al, 0xcc
cmpsd dword [rsi], dword ptr [rdi]
jae 0x4064b1
add al, 0xf2
push rcx
and ch, byte [rax + 0x204ea85b]
xor byte [rdi + 0x6e], dl
test al, 0xa7
test al, 0x14
xchg esp, esp
and al, 0xaf
test al, 0x64
and al, 0x38
sbb dword [rdi], 0x4847a93b
xchg eax, ecx
and eax, dword [rax]
test rax, -0x5dd91f19
adc ecx, eax
xchg eax, ebx
adc dl, byte [rbp - 0x57]
lahf
test eax, 0xb0274481
xchg eax, edi
leave
test eax, 0xa90275ff
cmp byte [rbp - 0x56], al
xchg eax, ecx
stosb byte [rdi], al
in al, 0x18
out 0x39, eax
pop rdi
test byte [rcx], bl
stosd dword [rdi], eax
xor cl, byte [rip + 0x15bfab52]
jo 0x4064bd
adc edi, dword [rdx]
and ebx, ecx
stosd dword [rdi], eax
sub r15b, byte [r13 + 0x541d6790]
lodsb al, byte [rsi]
push rsi
jns 0x4064db
lodsb al, byte [rsi]
nop
sbb dl, byte [rdx - 0x7b87d0d9]
lodsb al, byte [rsi]
xchg dword [rsi + 0x20], ecx
add al, 0xad
mov ch, byte [rbp - 0x53f43fe0]
lodsd eax, dword [rsi]
scasd eax, dword [rdi]
add byte [rsi - 0x51a6b1f0], 0xdf
scasb al, byte [rdi]
adc dword [rbp - 0x63], 0xae8bef40
cmpsd dword [rsi], dword ptr [rdi]
xchg dword [rsp + rdi - 0x1050dec5], ebx
mov esi, 0x2afec71
sub ebx, dword [rsi + 0x60]
pop rdi
jo 0x406528
push rdi
movabs byte [0xb01347afc9745813], al
add al, 0x46
popfq
ror byte [rdi + 0xb9fb04c], 0x29
loopne 0x40657b
lodsb al, byte [rsi]
mov al, 0x77
xor byte [rdi], bl
test byte fs:[rdx - 0x2e], bh
sahf
add ebx, dword [rdi + 0x16]
or al, 0x3c
loope 0x4065a6
int 0xb0
add esi, dword [rcx + 0x9458297]
mov edx, gs
test dword [rax], edi
mov cl, 0x4f
and byte [rdi], dl
jb 0x406565
pop rdi
in eax, dx
pop rsp
movsb byte [rdi], byte ptr [rsi]
ja 0x4065eb
in al, 0x98
pop rdx
repe cmpsd dword [rsi], dword ptr [rdi]
xchg esp, esp
movsb byte [rdi], byte ptr [rsi]
adc eax, 0x6012e7b2
mov dl, 0x41
loop 0x40661a
enter 0xf9f, 0xf
adc byte [rdx - 0x4d8c37e9], al
mov dl, 0x2f
pop rsi
enter 0x26c1, -1
pop rdi
cmp al, byte [rcx - 0x63df4c98]
shr byte [rdx - 0x384c21d1], 0x42
mov byte [rdx], 0x5e
sub eax, 0xe8e29fb4
add al, 0x12
jae 0x4065b3
xchg eax, edi
mov ebp, 0x642f19b4
add al, 0xbf
movabs eax, dword [0xf2e42f42050fb4d8]
xchg eax, esi
or esi, dword [rbp + 0x2409c1bf]
call 0xffffffffbc801b6d
mov ch, 0x90
call 0xffffffffb88802b3
int 0xb5
iretd
pop rsi
enter 0x26c1, -0xe
cmp al, 0x5d
xor eax, 0xc09c05b6
and cl, byte [rdi + 0x7d]
mov dh, 4
js 0x40665b
pushfq
movabs al, byte [0x7213a4f2afb68f37]
out dx, al
jrcxz 0x4065ff
cmpsd dword [rsi], dword ptr [rdi]
push rsp
pop rcx
jb 0x406640
test byte [rdi], dl
sub byte [rdi + 0x5533747f], dh
jp 0x406679
mov dil, 0xd6
xchg eax, esp
mov bh, 0xe4
enter -0x7bf7, -0x39
stc
mov bh, 0x4c
push -0x18
add al, 0xf2
mov edi, dword [rax - 0x3f9c46e3]
or dword [rdi + 0x7acfb984], ecx
test byte [rdi], ah
popfq
nop
jnp 0x406653
mov ecx, 0x371ea32f
test dword [rcx + rdi*2], edi
pop rdx
add ebx, ebx
mov ecx, 0x90bc6b12
shl eax, 0xe
mov edx, 0xba6f818f
pop rcx
mov ebp, 0xc61f2790
push rsp
mov dh, 0xba
jns 0x4066bc
in al, 0xb4
mov edx, 0x7b99e657
adc ecx, 0x1fbb470b
mov ebx, 0xf0081347
add ch, byte [rbx + 0x38c1f7bb]
and dword [rdi - 0x78], eax
mov ebx, 0xed42f6cf
mov ebx, 0x13c85e00
mov bh, 0xb8
jne 0x406717
mov esp, 0x10274481
not eax
mov esp, 0x93c85e6f
cmp ch, ah
mov esp, 0x6c978a57
mov ebp, 0x13c9c839
fbstp tbyte [rsi]
xchg dword [rbx + rcx*8], edx
mov ebp, 0x2ef54b9
jrcxz 0x40670e
xlatb
xchg eax, ebp
or ebp, dword [rdi]
adc dword [rsi + 0x3c83207d], edi
test eax, 0x6f01ca27
and dword [rsi + 0x78047259], edi
and dword [rbx - 0x42], esi
sar qword [r9 + 0x70], 1
add bh, byte [rcx + 0x32]
cmp byte [rdx + 0x3cbef8be], ch
sbb dword [rcx], edi
push rdx
out 0x86, eax
pop rbp
xor ah, byte [rcx]
mov edi, 0x8e464f20
int3
outsb dx, byte [rsi]
sub dword [rsi + 0x240bc5bf], ecx
and r8, rax
lodsb al, byte [rsi]
rcl byte [rax + 0x57581388], 0xe5
rcl byte [rdi], 0x85
mov word [rdi], ss
shr qword [r15 + 0x3d272142], -0x1f
jg 0x406712
sbb byte [rdx + 0x13a902a7], 0x48
rol ecx, -0x79
adc eax, 0x56049fc2
cmc
add dh, byte [rdi + 0x27058fc2]
mov al, 0xe8
retf
ret 0x1b8f
ret
stosb byte [rdi], al
and byte [rdi + 0x1c57c370], r11b
add al, 2
leave
ret
xchg dword [rdx + 0x21], edi
iretd
loopne 0x4067a4
out dx, eax
push rax
jnp 0x4067df
or bh, byte [rax + 0x21]
pop r15
push rbp
xchg eax, esp
add dword [rip - 0x39d83f64], 0x3810cfc4
or dword [rax], edi
outsd dx, dword [rsi]
jg 0x4067f2
mov es, word [rsp + r15*4 - 0x46]
mov edi, 0xc85e80db
and byte [rcx + 0x38], dh
scasd eax, dword [rdi]
movsxd rcx, dword [rdx + 0x1c8c9ec6]
or esp, dword [rdi + 0x38]
xor ecx, esp
mov byte [rdx + rdx], 0x9c
stc
out dx, eax
xor dh, byte [rdx + 4]
loopne 0x406803
and byte [rsi + 0x20], cl
je 0x4067d7
jns 0x40675b
jmp 0x4067a1
cmp eax, 0x24380c09
bswap eax
iretd
movabs byte [0xc88ce7c82cc14813], al
add al, 2
popfq
xadd al, cl
xlatb
add al, 0x27
adc dl, ch
leave
mov dword [rdi + 0x380240c9], 0xc9d5d781
xlatb
adc byte [rdi], 0x58
popfq
push rbx
retf -0x6eb9
retf -0x2b62
or dword [rdi], eax
dec edx
lcall [rcx]
xchg eax, ecx
nop
cmc
cmpsd dword [rsi], dword ptr [rdi]
retf
iretd
jne 0x4067a2
sbb byte [rsp - 0x33f61035], bh
push rdx
jb 0x4067b2
xchg dword [rdi - 0x6c183372], esi
sbb ah, ah
add eax, 0x9f51cc8b
or edi, dword [rcx + 0x72]
nop
pop rbx
int 0xcc
mov eax, 0x256f9393
imul ecx, ebp, 0x2cd479f
mov dword [rsi - 0x38], ebx
ret 0xe883
int 0xb7
add dword [rbx + 0x72], 0x77ce1476
push rsp
push rsp
outsd dx, dword [rsi]
add al, 0x16
int1
add ah, byte [rbx - 0x32]
scasd eax, dword [rdi]
sbb dword [rsp + rdi + 0x1fced6e1], 0x74
sub dword [rsi], ebp
jmp 0xffffffff9408c745
movsb byte [rdi], byte ptr [rsi]
sbb dword [rdx - 0x31], 0x4834b0cb
xchg dword [rdi + rcx*4 + 0x26d7cf79], eax
hlt
add bh, byte [rbx + 0x21]
ja 0x40680f
iretd
pushfq
iretd
cmp al, 0xe9
add al, 0x56
mov edx, 0x664ed7cf
nop
call 0x40104e27
shl byte [r8], 1
cmp byte [rcx - 0x2f99b8bb], al
cmp dword [rdx], eax
pushfq
rcr bh, 0xa1
sar byte [rdi - 0x4d], 1
push rax
int1
add cl, byte [rbx + 0x670fd00b]
shr dword [rsi], 1
push rax
ja 0x406842
iretd
adc bh, byte [rdi + 0x12041e66]
jno 0x40690e
rol dword [rdi + 0x13], 1
cmp al, byte [rbx]
loopne 0x4068d9
sal byte [rdi + 0x7243ef9e], cl
jb 0x40686c
outsd dx, dword [rsi]
js 0x4068b1
mov dl, byte [rbx - 0x73f44f8e]
shr byte [rdi - 0x59], cl
and dh, byte [rbx]
or esp, esp
jno 0x406942
out 0xcb, eax
rol byte [rbx + 0x5dc5817a], cl
shl dword [rdi], cl
movsd dword [rdi], dword ptr [rsi]
ror dword [rdi + 0x1c8c9e40], cl
push 0x54
cmp al, 0xfb
sar dword [rax], cl
adc dword [rbp - 0x64], 0x2e27d411
mov al, 0xb
sbb dword [rcx], ebp
outsd dx, dword [rsi]
jmp qword [rdx + 0x17]
repne lodsb al, byte [rsi]
jb 0x406963
retfq -0x202c
and esi, dword [rcx - 0x7b]
cmp al, 0x81
outsd dx, dword [rsi]
in al, 0x8a
jo 0x40692f
add eax, esp
jb 0x406909
movsb byte [rdi], byte ptr [rsi]
loop 0x40693b
push rdi
int3
test byte [rbx], cl
jg 0x406933
lahf
popfq
sahf
mov edi, 0x84d6270d
or cl, dh
sahf
mov edi, 0xd6ec6ebe
cmc
add ah, byte [rcx + 0x17d73f13]
xchg eax, esi
xlatb
cmp ecx, ebp
add al, 0x12
scasd eax, dword [rdi]
mov ebx, 0x91e047d7
and edx, esp
and eax, esp
xlatb
or byte [rsi - 1], ch
pop rbx
leave
xchg eax, ebx
mov dh, 0xb
fmul dword [rcx]
movsxd rsi, dword [rdx + 0x74]
jae 0x4069f4
jne 0x40696f
pop rdi
jmp qword [rsi + 0x66]
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
add byte [rbp + 0x72], ah
imul ebx, dword gs:[edx], 0x6ffeef6f
pop rdi
je 0x406a11
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x4069cd
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
fistp qword [rsi - 5]
outsd dx, dword [rsi]
or dword [rdi + rbp*2 + 0x72], esi
jae 0x406a1d
jne 0x406a39
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x406a32
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0xd817f6ff
cmp byte [rip + 0x69665f24], dh
outsb dx, byte [rsi]
imul ecx, dword [rax], 0x79617272
pop rdi
outsb dx, byte gs:[rsi]
fdiv qword [rdi + 0x7274e35b]
jns 0x4069e1
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x406a23
lahf
mov al, 0x6e
ror byte [rip + 0x2a74295f], 0x73
outsd dx, dword [rsi]
jne 0x406a70
mov bh, 0xdb
movsxd rsp, dword [rbp - 0x5f]
jo 0x406a77
sub dword [rdx + 0x53], ebx
je 0x406a58
xor dword [rcx], edi
jo 0x406a79
adc byte gs:[rdi - 0x62], dh
int 0x7d
fistp dword [rdx + 0x32]
jl 0x406a89
movsb byte [rdi], byte ptr [rsi]
jb 0x406a93
movsxd rsi, dword [rdx + rbx + 0x18]
jbe 0x406a8f
xchg eax, edi
mov bh, 0x38
mov ecx, 0x61687467
adc bpl, byte fs:[rcx + 0x76]
punpcklwd mm5, mm6
jo 0x406aae
sbb byte [rcx], bl
xor r14b, byte [r8]
adc eax, 0x6d6325f6
xor rax, 0xffffffffca757165
imul ecx, dword [rdi], -0x14
mov ch, 0x98
xor byte [rbp + 0x75], ch
xlatb
fistp dword [rbx - 0x19]
movsxd rbp, dword [rbx + 0x50]
sub eax, 0x2b741470
cmpsd dword [rsi], dword ptr [rdi]
mov al, 0x47
xor dh, byte [rdx]
jne 0x406ad6
sub eax, 0x8b7e394e
fnsave dword [rsi + 0x2c]
outsb dx, byte [rsi]
jne 0x406a41
js 0x406aed
stosd dword [rdi], eax
movsxd rbp, dword [rax + 0x61]
outsb dx, byte [rsi]
and ebx, edi
mov ebx, 0x9a048fd6
push r8
push rsi
imul ebp, dword [rcx + 0x27], 0xc95f6856
xor dh, byte [rip + 0xd69735f]
mov word [rsi], gs
add byte [rcx + 0x64372db2], bh
jbe 0x406a28
pop rcx
jnp 0x406b14
je 0x406abb
pop rbx
jnp 0x406b14
outsd dx, dword [rsi]
call 0xffffffff815c8b8b
push 0x33
cli
mov ah, 0x61
pop rbx
jnp 0x406a8f
xchg eax, edx
adc al, 0x36
imul edx, dword [rdi + rcx + 0x65], 0x6470d85c
xor ecx, edi
in al, dx
insb byte [rdi], dx
je 0x406add
not byte [rdi]
and dl, byte [rip + 0x696c6f4a]
movsxd rdi, dword [rcx + 0x45]
xor byte [rsi + 0x1bc39ec1], al
sbb qword [rcx], r10
xor ebx, ebx
mov bl, 0xdb
sub dword [rbp - 4], 0x9430126f
outsd dx, dword [rsi]
jo 0x406b31
insb byte [rdi], dx
cwde
out dx, eax
cmovb esi, dword [rbx]
cwde
mov esi, 0x7055237b
test al, 0x3c
push rbp
scasb al, byte [rdi]
push rbx
movsx rbx, r13w
mov ebp, 0x4d3a615a
pop r8
and eax, dword [rbp + 0x4e]
push r12
int1
fstp st(3)
sbb ebx, dword [rbx]
je 0x406b6b
add al, 0x6a
xor dword [r11 + 0x54455250], r12d
push rsp
pop rcx
pop rdi
push rbp
insb byte [rdi], dx
scasd eax, dword [rdi]
std
push r12
adc byte [rdx], r12b
xor dword [rdx], esi
and edx, dword [rax - 0x39]
movsxd rax, dword [rdi + 0x42b6c81]
repne outsb dx, byte [rsi]
sub byte [rsp + rbp*4], dh
cli
push r14
clc
push rdx
imul edx, dword [rbx - 2], 0x76454502
jo 0x406bb4
or eax, 0x305614c3
cmp al, 0x34
adc eax, 0x14630ba0
or bh, byte [rdi]
or edi, edx
imul ecx, dword [rsi + 0x69], 0xb9a1c30c
jp 0x406b8b
outsd dx, dword [rsi]
sub dword [rdi], -0x44
mov ebp, 0xfdf0ffb
xor byte [rdx + 0x424f4c47], al
xor r14b, byte [rbp + 0x62]
pop rdi
outsd dx, dword [rsi]
mov edx, 0x5a06bbb4
cmp byte [rdx + 0x68466957], ah
push 0x24
push rdx
jbe 0x406c23
mov bh, 0x45
push 0x4e
pop rcx
lodsb al, byte [rsi]
or eax, dword [rdi + 0x4e]
push rbp
fcmovnu st(0), st(3)
sub dword [rip + 0x44482048], 0x52
adc al, byte [rcx + rbx*2 + 0x4e]
or ecx, dword [rcx + 0x16]
and dword ss:[rcx + 0x644e1b43], edi
adc byte [rbx - 0x68], bl
lodsb al, byte [rsi]
in al, 0x99
push qword [rbp + 0x4f]
push rcx
push rbx
rcr edi, -0x72
sar byte [rsi + 0x5f], 1
push rsp
xchg eax, r9d
xor esp, dword [rdi + 0x7e]
insd dword [rdi], dx
xor ah, bl
sbb dh, byte [rdi]
inc byte [rbp + 0x49]
push rax
cmp dword [rcx + 0x6e], ecx
jo 0x406ba3
imul r11d, dword [rsi + r10 + 0x31], 0xb53c2234
and eax, ebp
stc
or r11, rbp
push 0x75
lea ecx, [rbx + 0x4e]
sbb esi, dword [rbx]
pop rdi
sbb byte [rcx + 0x6da9b0cd], dh
mov esi, 0x151c5849
xor eax, 0xd8fddb14
ret 0x4949
sub al, 0x54
sub dh, byte [rsp + rsi*2]
jns 0x406c9a
xor byte gs:[rbx + 0x38], dl
push -0x21c79947
int3
push 0x48
imul esp, ecx, 0x53853b6d
add dh, byte [rdx + rsi + 0x33]
jo 0x406c29
pop rsp
mov al, 0x92
cmp dl, byte [rsi]
mov ebp, 0x7526da48
lodsd eax, dword [rsi]
stosd dword [rdi], eax
xor rsi, qword [rsi]
cmp dword [rcx - 0x62], r9d
fiadd dword [rip - 0x2fd37f19]
pop rdi
add ebp, dword [rbp + 0x3d]
xlatb
ljmp [rsi + r8*2 + 0x50]
jbe 0x406c51
add dword [rax], eax
sbb byte [r13 - 0x40], bl
mov eax, 0xaf4c4569
sub al, 0x4c
movsd dword [rdi], dword ptr [rsi]
jnp 0x406c5f
test byte [rip + 0x5432632], 0x52
push rbx
push rcx
push rax
push rbx
xchg eax, r13d
sal ecx, -0x4c
or eax, 0x62a848ac
stc
out dx, al
sbb bl, byte [rsi]
push rax
cmp byte [rdx + rsi*4 + 0x43], dl
xor byte [rax], dh
ret 0x6e1c
xor eax, edx
add dh, byte [rcx]
push -0x3d7912a0
cmp al, byte [rbp + 0x76]
push -0x7f523dca
leave
sti
pop rdi
outsb dx, byte [rsi]
or al, 0xce
movsxd rbp, dword [rdx + 0x63]
sbb dword [rbx], 0x31541d26
iretd
and dh, byte [rdx]
in al, dx
jnp 0x406d17
cmp byte [rsi - 0x50], ch
mov dh, 0xd4
vshufps xmm6, xmm15, xmmword [rdx - 0x27], 0x71
js 0x406cf7
pop rsp
sub al, 0x71
cmc
lodsb al, byte [rsi]
pop rbx
movabs eax, dword [0x34d10ae3073b384]
cmp ebx, dword [rdi]
fcomp qword [rdi + 0x68]
stosd dword [rdi], eax
xchg byte [rdi + rbx*2], dh
in al, dx
xor dl, al
mov dh, 0x44
jbe 0x406cd9
push rdi
enter 0x594c, -0x38
ficomp dword [rcx - 0x3eb57302]
movsd dword [rdi], dword ptr [rsi]
mov al, 0x25
xor cl, byte [rcx - 0x2361f0ba]
movabs eax, dword [0x30544dafed534af0]
xchg eax, ecx
add byte [rcx], bl
xor al, byte [rbx + 0x7242304a]
xchg eax, esp
xor qword [rdx - 0x3f], 0xfffffffffca54216
xor al, 0xe1
cmp byte [rsi - 0x26], ah
sbb ebp, dword [rsi - 0x58]
or esi, dword [rdx]
pop rsp
cmp dword [rsi], edx
mov eax, 0x8d3493f1
imul esp, dword [rsi], 0x3f7c8b6d
fst st(4)
jge 0x406dbe
ret 0x6269
jne 0x406d1d
imul rax, qword [r13 + 0x1f], 0x50a0fa36
push -0x645f5baf
jo 0x406db7
push rdi
fld qword [rcx + 0x15677bf5]
fcomi st(6)
test eax, 0x383631c9
xor byte [rdi], dh
rol dword [r11], 1
xor al, dh
mov ebx, 0x34f68f8c
cmp byte [rbx], dh
add eax, 0x68c34e7f
mov esp, 0x5b6ee1a0
popfq
jb 0x406d52
jae 0x406e0c
test byte [rbx + rdi*8 + 0x7e64a1da], dh
cmp al, 0x5e
insd dword [rdi], dx
jne 0x406e0b
push rdi
mov ebx, 0x525a9ed4
add dh, byte [rip + 0x497931fc]
loopne 0x406d3d
out 0xba, al
cdq
out 0x37, eax
and ch, byte [rcx + rcx*2 - 0x24]
jle 0x406e1c
out 0x35, al
jbe 0x406df0
add dword [rbp - 0x1a], 0x1a
int3
xchg eax, ebx
jl 0x406dc8
push rbx
add eax, 0x6f6ddc58
jbe 0x406d7a
push rdx
push rbp
xlatb
sahf
lodsd eax, dword [rsi]
jne 0x406e16
jne 0x406d77
sbb al, 0x64
cmpsb byte [rsi], byte ptr [rdi]
jbe 0x406dce
pop rdi
jb 0x406db1
pop rcx
jnp 0x406e62
pop rdx
xor sil, byte [r14 + 0x14f7343e]
jno 0x406e66
adc al, 0x52
or dword [rcx - 0x7a0f0e46], edx
push rdi
imul eax, dword [rax + rcx + 0x78], 0x35
ja 0x406e5a
adc edi, dword [rsi - 0x38db8d2c]
test al, 0x4b
movsxd rsp, dword [rbx + 0x49]
adc edx, eax
or bl, byte [rdi]
mov bh, 0x39
je 0x406e83
push rbx
psubq xmm7, xmmword [rip + 0x11a13170]
add eax, 0x271e969a
sbb ebp, esp
mov ebx, fs
imul edx, dword [rbp + 0x653e5f36], 0x443d26f0
enter -0x8f7, -0x26
mov dh, 0xa1
cmp eax, 0x16186073
or al, 0x38
mov dh, 0x97
or eax, 0xa5df3200
sbb al, 0x2e
sbb al, 0xcd
stosb byte [rdi], al
movsxd rbp, dword [r13 + rbp - 0x3f]
imul ebp, dword [rdi + 0x44632dc9], 4
add cl, al
je 0x406e79
jmp 0x406e39
stosd dword [rdi], eax
xor byte [rsi], dh
movabs byte [0x893466d61113860], al
cmpsb byte [rsi], byte ptr [rdi]
scasb al, byte [rdi]
and ecx, ebp
mov bl, 0xfe
fcom st(0), st(4)
pop rsi
insd dword [rdi], dx
insd dword [rdi], dx
xor eax, 0x984bfb82
or al, 0x9d
xor al, 0x73
ja 0x406ef5
jo 0x406f11
or byte [rbp + 0x53437100], al
push -0x4b
mov cs, ebp
movsb byte [rdi], byte ptr [rsi]
jle 0x406eee
imul eax, dword [rbp + 0x57], 0xc4485a56
push rsp
mov cl, 0x26
and byte [rdx + 0x77c08619], dl
je 0x406f00
pop rsp
retf
and bl, bl
ret 0xdce0
xor dword [rbx + rbx + 0x24], edi
sbb byte [rdx - 0x42], bl
mov esp, 0x5901e1cb
mov r13d, 0x634aee52
mov al, 0x23
cmp dword [rdx], esp
rol byte [rcx + 0x441d64c1], 1
xor esp, ecx
push rax
insd dword [rdi], dx
nop
shr dword [rdx + rdx*8 + 0x44c3a15], 6
xchg eax, ebx
xor cl, byte [rbx + 0x6cba5837]
xchg eax, esp
mov al, 0x36
jns 0x406f5c
loope 0x406e98
pop rsi
popfq
cwde
xchg eax, esi
lea eax, [rax - 0x70]
or esi, dword [rcx]
mov dl, 0x43
xchg eax, esi
and byte [rbx + 0x48], ah
sbb ah, ah
sub al, 0x20
vpand ymm10, ymm9, ymmword [rax - 0x77]
test eax, 0xb2738052
outsd dx, dword [rsi]
int1
ret
jae 0x406f67
or eax, 0x6540406d
push r14
add ebp, dword [rax - 0x5f]
pop rax
movsb byte [rdi], byte ptr [rsi]
xor esp, dword [rsi + 0x5960c0f7]
mov esp, 0xde241751
or al, 0x1c
lodsb al, byte [rsi]
and esp, dword [rdx]
xchg eax, esi
adc byte [rbp + 0x31740c0b], 0x45
sub eax, 0xab230b12
in eax, dx
pop rcx
xor byte [rsp + rbp - 0x77], bl
xor al, byte [rdx + rax*4 - 0x1b3edf0d]
fcmovu st(0), st(0)
int3
cmp al, 0xd7
cwde
sbb eax, 0x365336cc
and byte [rcx - 0x1e], 0xf1
sub byte [rax - 0x69cf6133], dh
movabs dword [0x585b02da0e5dcb1f], eax
leave
jnp 0x406f71
sbb dword [rsi + rbx*2], edi
add ebp, dword [rdx + 0x73]
mov ecx, 0xc65270da
jbe 0x406f47
jbe 0x406f85
rol byte [rcx], cl
adc ecx, ecx
adc al, 0xd
mov ebp, 0x84acd83c
pop rbp
push rax
and al, 0x15
xlatb
enter 0x662, -0x4f
jns 0x407021
jmp 0x40700e
adc dword [rax + 0x68], ecx
test al, 0x1c
cmp al, 0x31
adc al, byte [rbx - 0x57e4b68f]
wait
cdq
jno 0x406ff1
mov byte [rdx + 0x44], ah
mov al, byte [rbp + 7]
cld
out dx, eax
outsd dx, dword [rsi]
jns 0x406fdc
and al, 0x30
imul eax, dword [rbx], 0x64
adc ebx, dword [rsi]
pop rdx
or dword [rbp + 0x39], esi
movabs dword [0xb39353345e2639d9], eax
mov dl, 0x7f
movabs byte [0x61615802e595eb20], al
pop rdx
lodsd eax, dword [rsi]
or edi, esi
pop rsi
sbb dh, dh
sbb al, 0xc7
jbe 0x407016
and r15d, 0xd4376f0a
pop rdx
leave
and al, 0x87
jo 0x407068
xor al, 0x37
or bl, byte [rcx + 0x554a9612]
add ecx, eax
add al, 0x9b
mov ah, 0xbe
sbb byte [rcx], cl
xchg dword [rdx + 0x6e], esp
loope 0x407054
sub eax, 0x79cc6163
jns 0x406fe7
mov r14b, bpl
jo 0x40703d
ret
pop rsp
outsd dx, dword [rsi]
xchg eax, ebp
loope 0x4070a2
xlatb
add al, 0x56
cwde
or al, 0x60
imul esi, dword [rcx], 4
jo 0x407063
cmpsb byte [rsi], byte ptr [rdi]
out 0x62, al
and al, 0x2f
jns 0x40704a
and dword [rcx + rcx*2 + 0x51], 0xc3a43431
leave
clc
outsd dx, dword [rsi]
jbe 0x4070c0
xor cl, bl
ja 0x407028
push rcx
and cl, byte [rcx - 0x74b695cf]
mov al, 0x1a
mov edi, 0xec153934
or byte [rax], cl
xchg eax, edx
jl 0x4070a4
pop rax
nop
and al, 0x71
xor cl, byte [rax + 0xd]
movsb byte [rdi], byte ptr [rsi]
jbe 0x407013
lodsb al, byte [rsi]
add dh, dl
sbb cl, al
movsb byte [rdi], byte ptr [rsi]
xchg eax, ebx
test eax, 0x8f9072b4
mov ss, word [rbx - 0x3e]
xchg eax, edx
or esi, dword [rbx]
xor byte [rbx - 0x4f], bh
sbb cl, byte [rbp - 0x7fca309a]
jl 0x4070bf
lea edx, [rbp - 0x7c]
and edi, dword [rcx]
out 0x75, al
movsxd rax, dword [rbx - 0x65728a57]
ja 0x4070be
xchg dword [rax + 0x4281e8c0], esi
push rdx
sub bl, byte [rdx]
cmp r12b, byte [r9 + 0x24]
int3
and dword [rax + rcx*2 + 0x4d], eax
or al, 0xce
cmp al, 0x84
or dword [rcx + 0x72395618], edx
and al, 0xdc
add byte [rsi], 6
nop
jrcxz 0x40706a
or cl, byte [rax + rsi*4 + 0x248ca820]
xor byte [rax], cl
mov word [rbp + 0x830780c], fs
and eax, 0x7bd35445
sub dword [rcx - 0x11cd00dd], esi
sub edx, dword [rcx + 0x38459c46]
insd dword [rdi], dx
js 0x4070f1
pushfq
in al, dx
jns 0x407084
jp 0x4070e0
xor dword [rbx + 0x1e], ecx
cmp byte [rdx - 0x6b], ch
fiadd word [rcx + 0x757e5a46]
or al, 0xc6
ret 0xb66a
cmp eax, 0x6d784018
add byte [rdi], ah
out 0xe, eax
xchg dword [rbp - 0x5f], esp
add al, 0xf5
outsb dx, byte [rsi]
mov dh, 0x8a
test al, bh
jnp 0x4070c7
and bl, byte [rcx]
enter 0x28fd, -0x70
sub dword [rax], esi
imul ebp, dword [rcx - 0x63], 0x64a2e44a
mov cl, byte [rdx + 0x4a]
imul eax, dword [rcx], 0x22098102
lodsb al, byte [rsi]
or byte [rax + rcx], bpl
xor byte [r10 + 8], bl
mov cl, 0xa9
mov byte [rax - 0x6f], dh
scasb al, byte [rdi]
xor bl, byte [rbx + 0x61]
mov ah, 0x39
lea ebp, [rbp - 0x20]
jbe 0x407153
cmpsb byte [rsi], byte ptr [rdi]
adc ah, byte [rdx]
xor r12b, byte [rsi - 0x2bb9e95c]
sti
push r14
jno 0x40716a
and cl, ch
adc ah, byte [rax]
imul dword [rbx]
push rcx
push rdx
mov ebp, 0x61a32863
ret 0x842
test byte [rdx + 0x3a], bh
jg 0x4071e3
mov dl, 0x60
adc dword [rax + 0x72], esi
add eax, 0x4b1c08a9
imul eax, dword [rbp + 0x2624a175], 0x4d2e3378
ret
cmp cl, byte [rbx + 0x7d728fa6]
xchg rax, rcx
adc dword [rip - 0x23f26f79], esp
movabs eax, dword [0x7a705c34ddb0eda3]
movsxd rdx, dword [rbp + 0x4a]
mov ds, esp
mov al, 0x4b
xor ch, byte [rax]
stosb byte [rdi], al
test qword [r8 - 0x6fc673b7], rdx
cmc
push rsi
test byte [rbp - 0x53], bl
cmp byte [rbp + 0x46], ah
mov al, 0x50
sub al, 0x59
add ch, byte [rbx]
mov esp, 0x6928c164
popfq
insb byte [rdi], dx
enter 0x69ea, -0x19
sbb rax, -0x773688cc
or byte [rbx + rcx*8 + 0x2b35426b], bh
out dx, al
adc byte [rdx + 2], ah
or eax, 0xd395642e
pop rax
add cl, byte [rbx + 0x42a6bb92]
rol byte [rbp + 0x7042479f], 0xe0
jnp 0x407259
cmp dword [rsi + 0x6ec30685], ebx
ja 0x407292
jne 0x407281
cmp eax, 0x6804b484
in al, dx
jno 0x4071b3
add al, 0x3a
sub eax, 0x11878e61
lodsb al, byte [rsi]
xor cl, byte [rsi]
xor al, byte [rdi + rbp*2]
and esp, eax
push rbp
cmp byte [rbp + 0x6d], dl
push rbx
or byte [rcx + 0x4b41762c], dh
pop rbp
and ch, byte [rcx]
mov dh, 7
push rdx
mov r11b, 0x4b
xor esp, esp
push rsi
or dword [rcx + 0x71657645], ebx
sub dword [rcx + 0x2b1a22c5], eax
sbb byte [rdx - 0x43], dl
or byte [rbp + 0x39], al
iretd
sbb al, 0x7a
in eax, 0x9e
sub ecx, dword [rdx + 0x5c]
adc ebp, 0x165a240a
mov ah, byte [rdi + 0x50]
adc bl, byte [rax + 0xc493173]
test byte [rcx + 0x3770bf8d], dl
insb byte [rdi], dx
pop rcx
sub eax, 0xc72d511d
xor eax, 0x76a4b364
imul edi, dword [rax + 0x49], 0x5f64854f
jne 0x407315
and al, 0xec
pop rax
xchg eax, ecx
hlt
imul esi, dword [rsi + 0x4e], 0x250ea123
push 0x8416868
jne 0x40731d
sbb cl, byte [rcx - 0x4c]
out 0xcb, eax
leave
mov byte [rax], dl
pop rcx
loopne 0x40725c
insd dword [rdi], dx
jo 0x407318
jge 0x407339
ja 0x40732d
pop rbx
and dword [rax - 0x6b], esp
xchg eax, edx
cmp dword [rbx + 0x6d], ebp
mov ch, 0x22
movabs al, byte [0x20757558300d9158]
mov bh, 0x92
fcmovne st(0), st(5)
mov ecx, 0x4808e034
fbstp tbyte [rbx]
add byte [rsp + rax*2 + 0x2b3cbc12], ah
mov al, 0xe0
rcl esp, 1
sub cl, byte [rax + rdi]
or byte [rbp + 0x8a25354], al
mov ebp, 0x4847c184
insb byte [rdi], dx
mov cl, 0xb2
cmp qword [rsi + 0x33], rax
or eax, dword [rbx - 0x646d34fb]
imul word [rbp - 0x4e]
pop rcx
mov eax, 0x5a96fd0c
jb 0x40732f
mov al, 0x28
test byte [rip + 0x920b015], ah
jle 0x407322
jp 0x407398
fldcw word [rax + rbx]
ror dword [rdi], 1
jle 0x4072fa
sar dword [rbp + 0x2c], cl
or esi, dword [rdx]
stosd dword [rdi], eax
outsb dx, byte [rsi]
or ah, byte [rax + 0x19]
push rsi
stc
cmp eax, 0x4b475e9
cmpsd dword [rsi], dword ptr [rdi]
sbb dword [rcx + 5], esp
push rdx
sub ah, byte [rcx - 0x2bb6ef9b]
mov ah, byte [rsi + rdx*2]
shl byte [rdx + rsi*8], cl
mov cl, 0xe4
xor edx, ecx
test dword [rax - 0x80], ecx
leave
xor dword [rbp + 0x78c10216], esi
in eax, 0x74
lodsd eax, dword [rsi]
mov ah, byte [rip + 0x23be2929]
or dword [rax - 0x48], 0xffffff85
rcl byte [rax - 0x2c7b9470], 0x83
adc byte [0x42ed4bc0], dl
push rcx
add al, 0xc7
cmp bl, bl
out 0x25, eax
add al, 0xe0
out 0x2a, eax
mov ebp, 0x68454a4f
test al, 0x55
adc ah, byte [rsp + rbx*8]
rcr dword [rcx + 0x31f8c865], 1
xor byte [rdi + 0x33411c61], al
mov al, 0x9e
wbinvd
jg 0x4073b7
add eax, 0x4241bfc3
pop r15
xor dword [rsi], ebp
xor esi, dword [rsi + 1]
sbb al, 0x80
adc eax, 0xc1855cd
test dword [rdx + 0x4580854b], esp
test eax, ebx
xor eax, 0x58810622
lodsb al, byte [rsi]
xchg eax, edx
sub cl, byte [rip + 0x4466a193]
int1
sbb al, 0x82
test byte [rcx], bpl
xor eax, 0x6502adb4
mov al, 0x48
jae 0x4073f6
add ebx, dword [rsi + rdx*8 + 0x7c89b93d]
jrcxz 0x40737e
sal dword [rip + 0x32760473], 1
xchg eax, ecx
add byte [rax + rax*8 + 0xd064a57], bl
or eax, dword [rcx]
add byte fs:[rax - 0x5d], ch
cmp al, byte [rax + rsi - 0x4c]
xor byte [rax + rdi*4 + 0x62], ch
xchg eax, esp
jg 0x407411
int 0xb4
adc qword [r10 - 0x43], rax
and eax, 0x12cecc4c
scasd eax, dword [rdi]
add eax, ecx
push 0x56b31210
xchg eax, edi
push 0x49
adc dword [rdx - 0x71ded8d8], edx
rol byte [rdx], 2
fimul dword [rcx + 0x48]
movabs al, byte [0x1c0488e6cdcb4ac7]
movsxd rbp, dword [rsp + 0x3e]
or eax, 0xc60f6d88
outsb dx, byte [rsi]
mov ebp, 0x12e325f
xor eax, 0x7458ee0
pushfq
or al, 0xbe
pop rdi
shl dword [rcx + 0x32], 1
or byte [rsi - 0x40], ah
movabs eax, dword [0xcb40f019c2daca51]
insd dword [rdi], dx
jb 0x4074d4
mov dl, 0x8e
xchg eax, edx
ror dl, 1
push rdi
call 0xffffffff99497ba1
xor al, 0x24
xor ebx, dword [rsi + 0xc]
or byte [rax + 0x32058b63], bl
xchg eax, edx
jl 0x407412
movsxd rdx, dword [rax + rdx*2 + 0x32008c52]
push rax
mov dh, 0x84
leave
xor al, byte [rax]
xor dword [rbp + 0x3da30831], edx
mov ebx, 0x68b2856e
je 0x407427
jae 0x40745e
retf 0x2c98
xor byte [rdi - 0x5e], bl
stosb byte [rdi], al
sub al, 0x56
pop rcx
enter -0x7a3d, 0x16
in al, 0x32
xor eax, 0xef74001f
ret
ret 0xca83
shr dword ss:[rcx], cl
adc bl, ah
imul ebp, dword [rcx + 0x4a], 0x6f
fisub dword [r9]
and dword [rax + 0x60303892], edi
sub edx, dword [rax]
stosd dword [rdi], eax
add r9b, byte [rdx + r8*8 + 0x1b]
lodsb al, byte [rsi]
add al, 0x98
or eax, 0x62e8ee14
adc sil, byte [rbp - 0x7fbdba0f]
in eax, dx
mov word [rip - 0x4ebdfdbd], ds
add dword [rsi + 0x60], eax
mov dh, 8
and esp, dword [rdx + rbp + 0x4a]
clc
and cl, al
sub dword [rdx], eax
movabs eax, dword [0x60083714d4822f79]
xor dword [rax], 0xffffff92
add al, 0x72
sub ecx, dword [rcx]
pop rax
sbb dword [rbx + 0x18], 0x61
and eax, 0xaaab33ac
or byte [rbx], al
mov dword [rcx + 0x58], esp
mov cl, 0xc2
add byte [rsi + 0x25a34274], cl
push rbx
xor al, 0x7e
sbb al, 0x18
retf 0x1120
sal dword [rip - 0x4ef9be74], cl
stc
and byte es:[rbp + rdx*4 + 0x5ced0845], ah
and dl, byte [rax + 0x5474983]
xor bl, byte [rbx - 0x7b]
xor al, 0xc
xor dl, byte [rdx]
int1
or dh, byte [rcx + 0x40]
xchg eax, ebx
push rsi
mov dh, 0x18
outsd dx, dword [rsi]
insd dword [rdi], dx
jns 0x407586
mov al, 0x82
pop rbx
jbe 0x4075b8
adc al, 0x62
in eax, 0x70
adc cl, byte [rdx + 0x635fec57]
add r10b, byte [r14 + 0x52]
lodsb al, byte [rsi]
js 0x407561
rol edx, -0x34
xor byte [rdx], dh
xor byte [rbp + 1], ch
xor dl, byte [rcx]
adc dword [rdi + rbx*2 + 0x6d], ebx
xchg eax, ebp
mov dl, 0xc0
insd dword [rdi], dx
or al, 0x72
xor eax, 0x5851a4a0
imul ebx, dword [rbp + 0x44655b29], 0x4122e38c
mov dl, 4
jns 0x4075fc
nop
pop rax
ret 0xb940
mov r13d, 0x835251a3
out 0xf1, eax
sub al, 0xc5
xchg eax, edx
add esi, dword [rax]
xchg dword [rcx], esi
scasb al, byte [rdi]
xor byte [rsi - 0x7c69cc61], dl
add al, 0x59
ret
xor dword [rcx], ecx
add edi, dword [rcx]
and ah, byte [rbx]
rol dword [rdi + 0x59], cl
adc al, 0x20
clc
clc
and eax, 0xb9180ca5
popfq
sal byte [rsi + 0x14cd5804], 0x73
adc esi, 0x28
or bh, ch
adc ebx, dword [rdx]
in al, 0xa
nop
or ecx, dword [rcx + 0x49]
test dword [rcx], edx
or esi, edx
insb byte [rdi], dx
xor byte [rdx], bh
add al, 0x4a
mov bl, 0x47
xor al, 0xdf
loopne 0x4075af
sbb byte [rax], bh
movabs al, byte [0x13f53505eb0a316e]
jmp 0xffffffffc5a27934
add dword [rax], ebx
push rcx
stosb byte [rdi], al
add dword [rdx + rdx], 0xb18b0bf
mov ch, 0x91
ja 0x407680
movsxd rax, ecx
sbb edi, dword [rcx + rdx*2 - 0x7f3e6ee7]
adc bl, byte [rip - 0x61ef9d8]
fsub qword [rax]
scasb al, byte [rdi]
adc dword [rax - 0x54b9f261], ebx
mov al, 0x88
xchg eax, ecx
push rsp
lodsb al, byte [rsi]
test byte [rsp + rbp - 0x7f5cc79f], al
add al, 0x49
adc al, 0xe0
ficom word [rdx + 0x4714e642]
push rdi
sbb al, 0xb2
xchg eax, esi
movsd dword [rdi], dword ptr [rsi]
mov al, 0x30
mov byte [rsi], ch
test byte [rbx + 0x432d3598], dl
cmp dword [rdi + rbp*2 + 0x4fc6b048], eax
cmp dword [rbx + 0x58], edx
insd dword [rdi], dx
or al, 0x3a
insd dword [rdi], dx
mov dl, 0x38
movsb byte [rdi], byte ptr [rsi]
jbe 0x4076ab
cmp dword [rax], esp
jnp 0x4076b0
sbb cl, dl
test eax, 0x56383b5
movsb byte [rdi], byte ptr [rsi]
sbb cl, byte [rcx + 5]
and al, 0xf7
ret 0xde08
or byte [rsi + 0x4801c87e], dh
movsb byte [rdi], byte ptr [rsi]
in eax, 0x4a
retf 0x55ce
mov cl, 0xac
retf 0x220
xlatb
and eax, 0xa81e2122
fiadd word [rsi]
enter 0x38a, -0x48
push rcx
push -0x2c9ae7ef
mov ebx, dword [rax - 0x7a]
add al, 0xd
push rax
insd dword [rdi], dx
sal byte [rdx], 1
mov dh, byte [rdi]
sub ch, byte [rax + 0x4b3109c6]
fstp st(3)
jle 0x407715
xchg eax, esp
mov dl, 0x60
mov byte [rcx], cl
and dword [rdx + 0x328cb2a3], edx
mov dl, bl
adc dword [rdx], eax
pop rbp
xor bh, byte [rsi - 0x68]
mov cl, byte [rbx]
xchg eax, edx
xor rax, qword [r14 + 0xa]
adc dword [rsi + 0x46], 0x88b036c1
sub al, 0x62
add eax, 0xb704259
and edi, 0xffffffc0
add byte [rbx - 0x7a], bh
cli
pop rcx
call 0x2050fd0a
int 0x87
iretd
movsb byte [rdi], byte ptr [rsi]
mov edi, ecx
mov edx, 0x220683aa
cmp byte [rax], bl
retf -0x2f56
cmp byte [rcx + rbp], bl
frstor dword [rcx]
cdq
and byte [rcx + rcx*2 + 0x5490725b], cl
test al, 0x32
lea esi, [rcx - 0x7c]
or cl, byte [rbx]
and dword [rdx + 0x58bc6f54], eax
adc rax, 0x252eae6a
push rdi
adc byte [rbp - 0x12], 0x4a
js 0x407762
enter 0x958, -0x1b
xor cl, byte [rcx]
ror dl, 6
sahf
enter 0x6652, 0x70
mov ch, 0x63
pop rsp
add dl, byte [rax]
shl byte [rsi - 0x6f], 0x4a
and qword [rdi], rax
or byte [rdx + 2], 0x93
or eax, eax
xor dword [rip + 0x75062095], esi
pop rdi
push 0x41a30351
iretq
mov ecx, 0x8d6ac053
or eax, 0xb9271cee
out 0x36, eax
out dx, eax
jns 0x40774b
movabs al, byte [0xab5c2c900250e879]
or bl, al
sbb dword [rdx + 0x619c124f], eax
or r12d, r12d
push rdi
movabs byte [0xbf000229c09054ec], al
add ah, byte ss:[rcx]
pop rdx
pop rdi
push rcx
xor al, 0x30
je 0x4077b2
nop
mov al, dl
cmp eax, 0x5de713aa
retf
insb byte [rdi], dx
rol dword [rax], 0x34
movabs al, byte [0x6171b6a123022973]
cmovne edx, dword [rbx]
add ch, byte [rdx]
mov ebx, dword [rdx]
xchg eax, edx
adc dword [rcx + rax*8 - 0x16f79bef], 0x19a0acdc
outsb dx, byte [rsi]
xchg dword [rbp + 0x548c2600], r10d
hlt
cmp dword [rax], -0x7c
adc dword [rbx + 0xa253044], eax
stosd dword [rdi], eax
sbb byte [rax], ch
scasb al, byte [rdi]
mov esi, dword [rcx + 0x364ae483]
push rbp
sbb al, byte [rdx]
jno 0x407818
in al, dx
push 0x27
and eax, ecx
push rbp
movsxd r15, dword [r14]
mov ah, byte [rdx + rcx*2]
xchg eax, esp
adc byte [rcx + 0x421584c5], bl
or dword [rsi - 4], 0x899f095
cmp dword [rbx + 0x5f], edx
hlt
push rbp
popfq
and esp, dword [rcx - 0x53e6bc80]
test byte [rdx - 0x1edbe201], dl
lea edx, [rax - 0x5b7fd4a6]
or byte [rcx - 0x61cddd1c], dh
test byte [rax], ch
mov ch, 0x1e
jae 0x4078b8
mov dl, 0xe0
sahf
scasd eax, dword [rdi]
in eax, 0x42
imul ebx, dword [rdi + 0x31], 0x16930b69
adc byte fs:[rbx], ch
mov bh, 0x1e
js 0x407874
adc ebp, ebx
jno 0x4078a8
pop rdi
out dx, eax
adc al, 0xc2
xor byte [rsi + 0x34cae4a8], 0x91
push rcx
cwde
cmp esi, ebx
adc al, 0x30
wait
movabs dword [0x223d9f6520b2094a], eax
and edi, dword [rdx]
adc dword [rbx], ebx
sbb al, byte [rax]
sbb cl, dl
cmpsb byte [rsi], byte ptr [rdi]
mov al, 0x64
or byte [rsp + rbp*2 + 0x4c90432], ah
add ah, al
sub rcx, qword [rbx + 0x6f347407]
sub eax, 0x38b98ad
cmp ch, 0x4d
clc
xor bl, byte [rdx]
clc
fisubr dword [rcx + 0x76]
cmp eax, 0x5fb06c59
cmp eax, dword [rbp + rbp + 0xc]
stosd dword [rdi], eax
sbb byte [rbp + rdx*4 + 0x3b], 0x4a
xor al, 0x21
xchg eax, esp
rcr byte [rsi], 0x84
shr byte [rdx], 1
mul byte [rax]
enter 0x6960, -0x7c
mov word [rdx + 0x6d], es
sub cl, byte [rax]
xchg eax, esp
or al, 0xf7
or al, 0x6a
add al, 4
mov bl, ah
sbb byte [rbp + 0x16], dh
add al, 0xe3
push rbx
ret
xor dword [rcx + 5], esp
cli
push rdx
xor dl, byte [rsp + rsi*8 + 0x329e2152]
jrcxz 0x40792b
sbb eax, 0x10334420
mov ch, byte [rax + rax*4]
jo 0x4078fb
or esp, dword [rax]
and dword [rdx + 0x5266d7a], edi
retf 0x6f00
push rax
fiadd dword [rdx]
pop rcx
je 0x407948
or dword [rcx + 0x2e], ecx
mov byte fs:[rdx + rdx*4 + 0x38754b33], ah
sub byte [rsp + rsi - 0x22], dl
push rbx
or byte [rdx], bl
ror qword [rbx + 0x73], 1
insd dword [rdi], dx
add dword [rax], ebx
wait
xor byte [rax + 0x21], bl
fadd dword [rbp + 0x5b]
imul rcx, qword [rbp + rax*2 + 0x6d], 0x17
pop rcx
lodsb al, byte [rsi]
add al, 0x82
jo 0x4078e5
cqo
and ah, byte [rcx + 0x5231f458]
test byte [rip + 0x382b152c], dl
xor al, 0x40
stosb byte [rdi], al
loopne 0x4079aa
push rbp
xchg eax, edx
sub dword [rcx], esi
rcl byte [rdx], cl
test al, 0x15
enter -0x61cf, 0xc
adc ch, byte [rcx]
sub byte [r9 + r9], bpl
push -0x55
mov ch, 0xdc
or ch, byte [rsi - 0x5939b9ba]
jg 0x407995
push rsi
mov word [rdx], cs
retfq
loopne 0x407981
or ch, byte [rbx - 0x339dd59b]
test al, 0x99
mov dword [rsi], ecx
pop rax
fdivr dword [rax]
add cl, byte [rcx + 0x6fad017a]
xor al, byte [rdi + 0x12]
sub al, 0x6c
xor dword [rbp - 0x53d6bc], edx
mov bh, 0x64
or al, 0x80
movabs byte [0x2a95e35856011031], al
or ebx, dword [rax + 0x59]
and eax, dword [rcx]
cmp dh, byte [rax - 0x3de7c787]
leave
xor al, 0x5f
clc
imul ebp, dword [rbx], 0x9d8cad6a
add dword [rsi + 0x3d], 0x83215920
lodsb al, byte [rsi]
and ecx, dword [rcx + rax*2]
retf -0xce7
xchg eax, ebx
and edi, dword [rax]
add al, 0x21
fld dword ds:[rcx + 0x320b8230]
fadd dword [rsi]
xor edx, dword [rax]
sbb byte [rdx + 0x36], dl
push rcx
leave
cmc
sub al, byte [rdx + rbp]
sub r8b, byte [rbx - 0x6b57dfaa]
retf -0x6a7c
loope 0x407a21
sbb dh, byte [rcx + 0x4a0c4030]
stosb byte [rdi], al
push 0x40
add cl, byte [rdx*4 - 0xa23cd5e]
add byte [rax + rbp], 0x9b
push rsp
push rbx
adc eax, 0xea960c08
retf 0x85c
je 0x407a86
enter -0x36b7, 1
and byte [rcx], dl
xor cl, byte [rcx - 0x7f]
mov ebp, 0x6152ec56
pop rcx
in eax, 0xac
fdiv qword [rax]
movabs al, byte [0x6f73926810221784]
in ax, dx
lodsb al, byte [rsi]
rol qword [r10 - 0x41c9ac28], 1
test byte [rsi], bl
adc byte [rax], cl
push rdx
sub byte [rax], dl
and edx, dword [rcx + rbp]
xor dword [rdx + 0xa], ecx
movabs dword [0x46082b649e9c6015], eax
jrcxz 0x407a83
ror byte [rdx], 0xa
add dword [rax], edi
ror byte [rdx + rax*4], 1
imul ebp, dword [rcx], 0x32
cwde
popfq
push r12
xor eax, 0x1a523f04
movabs eax, dword [0xb4a4a36804c900c]
xchg eax, edx
movabs al, byte [0x6e72b91eaacaae85]
push rdx
mov dh, 0x7c
cdq
cdq
xor dword [rdi], esi
sbb eax, 0x75127604
add byte [rsi + 0x48], al
jns 0x407afb
cdq
add byte [rsi + rdx - 0x3ebeca96], cl
xor dword [rcx + 0x1531fa73], 0x56
mov eax, 0xe3171103
add bl, byte [rcx + 0x49c00a8c]
mov dl, 4
mov al, 0xd2
std
push rbx
adc eax, 0x58416603
rol dword [rcx], 6
mov al, 0x6e
jg 0x407a46
and byte [rbx], al
insd dword [rdi], dx
adc eax, dword [rax + 0x22]
wait
insb byte [rdi], dx
pop rcx
lodsd eax, dword [rsi]
retf -0x4c2a
xor edx, dword [rax]
xor byte [rbp - 0x2c], ah
xor byte [rdx - 0x4c], ah
sub ah, ah
cdq
adc eax, 0x82a4231
add dl, byte [rbx]
in al, 0x10
test al, 9
rcl byte [rsp + rsi*8], 1
imul eax, dword [rcx + 0x725828c0], 0x44572985
pop rbp
test al, ch
adc dword [rbp + rbx*4 + 0x50], esi
and rdx, qword [rdx + 0x52]
mov ah, 0x8a
cli
sbb dword [rdx + rdx + 0x3b], edx
sbb word [rbp + 0x6973a753], di
mov edx, edi
cmp byte [rax - 0x6edd7b6], dh
and byte [rbx + 0xc811632], dil
jl 0x407b5f
sub dword [rdx], edx
or dl, byte [rsi]
push rsp
xchg eax, ecx
add dword [rcx + rbx + 0x446ebf9], ebx
movabs eax, dword [0x1c0489ad80964f18]
push rdi
pop rdi
imul edx, dword [rdx], -0x60
fnstenv [rdx + 0xc4a251]
sub edi, dword [rax - 0x74]
mov fs, word [rcx - 0x51bf52db]
xchg rax, r15
mov word [rbx + 0x4afda212], cs
pop rbx
loopne 0x407b64
adc cl, byte [rbp + 0x741e2d9]
adc ah, byte [rcx + rbp*4]
and al, 0x85
nop
xor dword [rip - 0x19a6ea94], r13d
xchg eax, esp
pop rsi
xlatb
jb 0x407b2c
jae 0x407bdb
imul esi, dword [rax + 0x43], 0x736750fd
mov bh, 0x22
jbe 0x407b70
mov dh, byte [rsi + 0x18697882]
or al, al
enter -0xdc, 0x11
and al, 0x70
je 0x407bc3
movabs eax, dword [0x6116b1eedb58040a]
add al, 0xf0
mov al, 0x46
xchg eax, ebp
push rcx
loope 0x407b3b
mov cl, 0x9b
add dword [rip + 0x3ec23029], 0xc840a8c2
pop rsi
sbb dword [rdx + rcx*2 - 0x72], eax
movabs rax, qword [0x42418125d2152bdc]
shr byte [rcx + 0x11c37a61], 0x72
xor sil, byte [rcx]
push -0x63973fcc
pop rcx
push rcx
sub dh, byte [rax + 0x7018b0b9]
jg 0x407bef
pop rcx
or eax, 0xbb41102b
cmpsb byte [rsi], byte ptr [rdi]
add al, byte [rcx]
push rcx
add dword [rax - 8], 0x11c80292
xor ch, byte [rcx - 0x39be5b7f]
imul edi, dword [rbp - 0x6d26f75c], 0x35
or r12, qword [rcx + rax*2 + 0xe0d2958]
jp 0x407bb2
cmp al, al
std
imul ebx, dword [rdi - 0x30], 0x1584c594
pop rdi
test byte [rcx + rsi*4 - 0x7b], dl
loopne 0x407bd5
xchg eax, ebp
xor byte [rbx], ah
loopne 0x407c71
mov ecx, 0xa9a36d4c
rol dword [rcx + 0x6e], 0x73
mov dword [rcx + 0x52], ebp
push rdx
and eax, 0x415520b4
cmpsb byte [rsi], byte ptr [rdi]
mov al, 0
xor dword [r8 - 0x2b], ecx
ret 0x64e8
insb byte [rdi], dx
push rax
adc byte [rbp + 0x10822f11], bh
enter 0x2aca, 0x46
sbb ecx, esp
insb byte [rdi], dx
sub dword [rcx + rbx*2], edx
lea edi, [rdi + 0x6749aa10]
adc al, 0x80
cmp byte [rdi], cl
adc dword [rcx], 3
adc bl, byte [rax - 0x2ef9c78f]
adc byte [rcx], dh
jp 0x407c95
mov eax, 0x2d10220c
jbe 0x407c3c
or al, 0x83
sub dh, byte [rdi]
mov edi, 0x10788922
sub al, 0x92
xchg eax, edx
adc byte [rbx + 0x34], 0xd1
int 0x29
or byte [rax - 0x695fcaef], dh
xor dword [rdx], ecx
pop rsp
jno 0x407ce0
js 0x407c9b
xor eax, 0x2c4204ab
sub dword [rdx], ecx
or al, 8
or byte [rcx + rcx*2], 2
sub dh, byte fs:[rax + 0x456a4a31]
adc dh, byte [rdi + rbp*2]
test eax, 0x268bb824
movabs dword [0x902421900b7cb10], eax
sub byte fs:[rbp + 0x42428c40], al
test al, 0x89
test byte [rdi], dl
xor bh, byte [rsi]
cmp cl, byte [rdx + rsi*4]
iretd
sbb dword [rcx], esi
or byte [rbx], al
and eax, 0x25588242
lodsb al, byte [rsi]
push 0x25
add ebx, edx
mov ecx, es
or byte [rbx - 0x351a349d], 0xa2
mov r15d, 0x24203296
mov bh, 0x88
adc dh, byte [rbx + 0x65]
mov fs, word [rax]
and dword [rbx + 0x5484804a], esi
jno 0x407d6d
ja 0x407d11
cdq
xchg eax, ebx
sub eax, dword [rcx + rcx*2]
xor esp, dword [rax - 0x18dba97c]
pop rcx
mov al, 0xca
push -0x7a6650b7
ret 0x1828
shl byte [rax + 0x71], cl
or dword [rbx + 2], 0
sub eax, 0x53e0603
enter 0x6101, -0x4c
xchg rax, r12
test eax, 0x313d2004
add al, 0xa0
pop r9
or al, 0x4a
movabs rax, qword [0x472126c89001447b]
xor dword [r13 - 0x56fd43f0], eax
and eax, 0xc561080c
push rsp
xchg eax, ecx
sub al, 0xea
rol byte [rax + 0x19451d27], 0x40
mov byte [rax + 2], dl
xchg eax, ebp
mov dl, 0x88
stosb byte [rdi], al
pop rcx
outsd dx, dword [rsi]
adc al, 0xbc
cld
sub al, 0x48
adc al, 0x72
xor dword [rcx + rdx*4 + 0x54], esi
xchg eax, ecx
mov bl, byte [rsi]
or al, 6
sub ebx, dword [rax - 0x38]
sub byte [r10 + 0x6564209c], r9b
adc dword [rcx], ecx
mov ah, 0x4a
xor al, 6
mov ah, 0xb2
retf
pushfq
mov edx, dword [rcx]
xor dl, byte [rcx + 0x32]
and eax, 0x28d50955
add byte [rbp + 0x5354e210], dl
mov ebp, 0x90812290
lodsb al, byte [rsi]
pop rsi
sub dl, byte [rax]
mov byte [rdx + 0x3aac870], al
sub eax, 0x396dc538
cmpsb byte [rsi], byte ptr [rdi]
nop
or r10b, byte fs:[rip + 0x7005901a]
out 0x41, al
and al, 0x5b
or byte [rax], bh
xor al, 0x7e
pop rdx
and byte [rdi], al
or dword [rax + 0x4aa30431], eax
or esp, edx
or al, 0xe0
lodsd eax, dword [rsi]
add ah, ah
adc al, 0x42
xchg eax, ebp
stosd dword [rdi], eax
or byte cs:[rbx], ah
loop 0x407e20
add dword [rax], edx
mov dl, 0x20
push rax
test al, 0x86
jno 0x407e1e
and byte [rdi + 8], dl
xor qword [rdx], r10
and dword [rax + 0x33], edx
push rax
adc eax, 0xd3a0c285
retf
sub dl, byte [rsi + 0x25]
jo 0x407e17
sbb byte [rcx + 0x2666501], dl
mov spl, byte [rsi]
outsd dx, dword [rsi]
movabs al, byte [0xc80cd43143740604]
mov al, 0x30
rol dword [rbp + 0x6a], cl
jae 0x407e8b
add eax, 0xc944eb02
in al, 0
test eax, 0x299032c7
and al, 0x82
std
adc al, 0x32
sbb byte [rbx - 0x35d3ce89], cl
add bl, byte [rax]
push rdx
pushfq
leave
adc dl, byte fs:[rax + rax]
xchg eax, esp
cdq
stosb byte [rdi], al
movsb byte [rdi], byte ptr [rsi]
test dword [rdi + 0x61], edx
push rbx
movabs byte [0x340b00314970126e], al
mul byte [rax]
xchg byte [rcx - 0x19], dl
and byte [rsi + 0x6a], bl
retf
push rcx
scasb al, byte [rdi]
stosd dword [rdi], eax
clc
imul ecx, edx, 2
sub al, 0xdf
xor al, 0x4f
adc ah, byte [rax + 0x4f931453]
mov al, 0x8a
add ebp, dword [rsi]
wait
adc byte [rdx + 0x50], dl
or bh, byte [rdx + 0xae04485]
add ah, bh
loopne 0x407e33
mov dl, 0x2a
mov al, byte [rbx + 0x24]
adc byte [rsp + rax*4 - 0x55bf69d9], ch
nop
pop rsp
or rbp, qword [r8 + 0x1f305904]
and al, al
in al, 0xad
push r12
pushfq
adc esp, dword [rax*8 + 0x70773f61]
add al, 0x28
nop
adc al, 0x75
cli
xor eax, 0x2e4aa402
and cl, byte [rcx + 0x54884a84]
rcr dword [rdi - 0x5f], -0x20
nop
add al, 0x6b
sub dword [rsi - 0x56], edx
test dword [rcx + rsi], edx
retf 0x188b
and byte [rbx], bl
mov dl, 0x58
mov ebx, dword [r8]
push rsp
movsd dword [rdi], dword ptr [rsi]
mov dh, 0x59
cdq
jae 0x407eec
xor ebx, ebx
test byte [rax - 0x57af27bb], ch
sub al, 0x85
shl dword [rbp + rdx + 0xb968128], cl
add byte [rsi - 0x40], dl
adc al, 8
sal dword [rsi], 1
ret 0xe06b
push 0x4b617261
mov ecx, dword [rdx]
or dword [rdi], edx
add dword [rax + 0x72], esp
outsd dx, dword [rsi]
xor ecx, dword [rdx + 0x393aa8f7]
out dx, al
rol byte [r8], cl
jo 0x407efd
hlt
popfq
push rsp
jbe 0x407ef6
lodsb al, byte [rsi]
push -0x22ba3557
test eax, 0xc5656a66
movabs eax, dword [0x32700908192bf1cf]
push rdx
push rsi
push rsi
jo 0x407fb2
mov eax, dword [rip + 0x26824023]
sahf
sub dword [rax + 0x59], 0x78
adc bh, ah
test al, 0x49
mov eax, 0x2f7394a0
or byte [rcx + 0x61], al
xor dword [rcx], ebx
je 0x407fdd
jne 0x407f96
xor ch, byte [rsi]
cmp byte [rip - 0x56fd53ac], bh
nop
scasb al, byte [rdi]
in eax, dx
xchg eax, esp
movsb byte [rdi], byte ptr [rsi]
push rdx
xchg byte [rbx + 0x1916a408], bl
lodsq rax, qword [rsi]
je 0x407fc4
add edx, eax
push rbx
adc al, ch
add dword [rax], ecx
and ebp, ebp
pop rsp
mov sil, byte [rbx + 0x21]
lea esi, [rdx]
cmp byte [rdx], ah
xchg eax, ecx
and eax, 0xb908a5
movabs eax, dword [0xd6be5052056f4a60]
and ch, byte [rsi + rbx]
add eax, 0x5351647a
pop rcx
retf
retf -0x24f6
xor ah, dl
insb byte [rdi], dx
and al, 0xf4
xor esi, dword [rbx + rdx*8]
xchg eax, ebx
test word [rdx - 0x5d], ax
xor eax, 0x912ecce7
sbb al, byte [r10 + 0x2e]
cwde
cmp edi, dword [rax + 6]
movabs dword [0x686a38985272212e], eax
int3
movabs al, byte [0x833507b56adb7f7c]
je 0x408056
and al, 0x95
sbb byte [rdx], 0xed
mov ch, 0xe7
cmp cl, byte [rsp + rax*2 - 0x6094a94e]
pop rax
cmp eax, 0x92815f8
cmp ah, al
cmp dword [rcx + rax + 0x57], esp
and byte [rbx + 0x61], dl
xor ah, dl
ror byte [rax + 0x4c85e912], 0
adc al, 0x2b
adc dword [rsi - 0x15], 0x8582bc46
sub esp, dword [rax - 9]
cmpsd dword [rsi], dword ptr [rdi]
mov byte [rcx], ah
imul esp, dword [rax + 0x929a439], 0x1b1c164a
xor byte [rdi], dl
and byte [rcx + 0x1a], al
xor cl, byte [rbx - 0x574bef18]
test dword [rax + rbp*4], 0x76352015
pushfq
jrcxz 0x408061
mov word [rbp + 0x4c], ds
mov edi, dword [rcx]
xchg eax, edx
mov dword [rax + 0x214a3f2a], esi
adc dh, byte [rcx]
mov ebp, 0xa292ab37
adc dh, byte [rdx + 0x44eb0214]
test byte [rax - 0x7e], 0x94
or al, 0x6b
and al, 2
jae 0x40806b
xor dword [rbx + rcx], esi
loope 0x408093
sub ch, byte [rcx + 0x41212062]
push rsi
outsb dx, byte [rsi]
xchg eax, edx
and eax, 0x5238e4b1
add byte [rdx], dl
xor dword [rdx + 0x4580705c], 0x49
xor al, 0x43
sub ecx, dword [rax*2 + 0x51bcb009]
or al, 0x68
mov byte [rdx + 0x53], dil
stosd dword [rdi], eax
adc dword [rcx], ecx
test dword [rbp + 0x6280ca2c], edx
adc bh, ah
adc al, 4
movabs al, byte [0xf80aa12393f631e4]
xor eax, 0x424585a0
xor ebx, edi
jo 0x4080b8
mov cl, 0x16
mov ch, 0x6d
mov bh, 0xbc
sub r8, qword [rax - 0x60]
cwde
mov ecx, 0x10d54670
lodsb al, byte [rsi]
insd dword [rdi], dx
mov byte [rdx], cl
xchg eax, ecx
adc eax, 0x1611a085
in al, 0xcf
mov ch, 0x24
xor dword [rdx + 0x1822ffa4], ecx
adc al, 0x46
jne 0x408104
or al, 0x73
and byte [rax - 0x6e], bpl
mov ebp, 0x410250e8
imul ecx, dword [rsi + 0x4b], 8
test eax, 0x2c04518c
xchg eax, esp
adc byte [rdi], ch
sub eax, 0x84032b58
push rax
mov ah, 0xc7
xor dword [rax], edx
add al, byte [rcx + 0x843e024]
nop
adc eax, 0xba22b5c5
loopne 0x408087
jmp 0x408152
je 0x40816e
mov eax, cs
add esp, dword [rcx + 0x50]
rcl byte [rdx], 1
std
nop
shl byte [rdx + 0x10], 0xc8
xor eax, 0xeaa700d9
fcom dword [rbx + 1]
push rsp
and al, 0x32
pushfq
add ch, byte [rbx]
push rsi
add bl, 0x10
push rsi
movsb byte [rdi], byte ptr [rsi]
pop rsi
mov ah, 8
sub al, 0x2e
push rbx
pop rax
push rax
or byte [rax + 0x7c], dl
push rbp
xor byte [rbp + rax*2 + 0x5830b0a0], ah
test ah, dl
movabs qword [0x662ac253350b2152], rax
shl byte [rax], 0x66
mov bh, 0x92
test eax, 0xa9312348
retf
stosb byte [rdi], al
adc al, 0x76
adc eax, 0xdb002421
push rbp
mov ebp, 0x322b4817
xor dl, byte [rdi + 0x10]
adc rax, -0x76b8a369
insb byte [rdi], dx
mov cl, byte [rcx]
push rsp
sbb eax, 0x509969ac
adc al, byte [rax]
sub dword [rcx], eax
adc al, 0x27
cli
and bh, al
jbe 0x40813f
push rbp
jnp 0x40814b
xchg byte [rdx - 0x37adffd0], bh
xor dword [rdx + 0x25456c9], eax
sub eax, 0xc9003b70
adc byte [rcx], dh
push rsp
sub qword [r9], rax
xchg eax, edx
push rbx
or byte [rdx - 0x6e], ch
push rsi
mov spl, 0x5a
push rdi
push rsi
xchg eax, ebx
sub dword [rcx], esi
out dx, eax
xor edx, dword [rcx - 0x6ddefd60]
and eax, 0xdd782ca4
pop rdx
fisttp dword [rax + 0x221632b4]
adc dword ss:[rax + 0x2f], 0x92008b98
and dword [rbx], ecx
or dword [rax], esi
and eax, 0x20c12553
xor ah, byte [rcx + 4]
add rcx, qword [rbx - 0x7b]
adc dword [rax], esp
push rax
or byte [rbx + rcx*2 - 0x5f], al
xor byte [rcx + rbp*4], ah
cld
sahf
add dword [rbx], -0x6f
and ebx, dword [rdx - 0x15]
adc ebp, ebx
fstp qword [rdx + 0x7d3f0f83]
jb 0x408274
movabs byte [0x4053612f5682c287], al
mov cl, byte [rax]
and byte [rdx + 0xc438aa], bl
fild dword [rdi + 0x84885c8]
adc r12b, byte [r8]
sbb byte [rax - 0x27], ah
test byte [rsi], 0x19
adc byte [rbx - 0x4a949fdf], ch
test eax, edi
out dx, al
cmp dword [r10 + 0x208843aa], r10d
call 0xffffffff85951292
fcomp qword [rdi + 0x40]
add al, 0xca
add byte [rbx + 0x53], ch
enter 0x1184, -0x72
push rax
jmp 0x408227
xor byte [rax + 0x3d], ch
mov edx, dword gs:[rdx + rdx]
loopne 0x408253
movsxd rsi, dword [rbp + 0x72]
sub eax, 0x2210cc79
movabs eax, dword [0x4a5200182af91aa8]
push rbp
xchg byte [rax - 0x1a], al
sub qword [rcx], rsp
and al, 0xc9
in al, dx
ret 0x9528
add byte [rsp + rbp*4 + 0x5240351], ch
pcmpeqd mm4, qword [rdx + rbp*4]
adc al, 0x21
adc dword [rbx], ecx
movabs al, byte [0x2c0992b560345640]
lea ecx, [rdx + 0x4a]
or byte [rcx - 0x579d7ebc], al
lodsb al, byte [rsi]
cmp byte [rax + 0x7b], al
mov bl, 0x45
test al, 0xc7
or eax, 0xbe4440d
loop 0x40825f
xlatb
outsb dx, byte ss:[rsi]
and al, 0x13
add dh, byte [rdx + rcx*2 + 0x59580ce8]
push rax
clc
xor byte [rcx], bl
rol byte [rax], 0xdf
xor dword [rbx], eax
adc ah, byte [rdx]
cwde
sbb ecx, ecx
adc al, 9
push rbx
push rsp
xlatb
xor ch, dh
sub byte [rbp + 0x12], dl
sub dh, dl
enter 0x4084, 0x6e
xor dword [rsi], ebx
push rcx
stosd dword [rdi], eax
xor bh, byte [rax + 0x830ea9e]
cmp dword [rcx], 0x77
rol dword [rdx], 1
or esi, dword [rdi - 0x68]
or dword [rax], esi
adc eax, 0x2d91d64b
or dword [rdx + 0x59], esp
jp 0x4082a6
mov word [rax], es
and al, 0x47
xchg eax, ecx
add edx, esp
cmpsb byte [rsi], byte ptr [rdi]
add byte [rbx], al
mov ah, 0x31
mov eax, dword [rbp + 0x19]
outsb dx, byte [rsi]
mov dl, 0xea
add byte [rbx], ah
push rdi
movsxd rdx, dword [rax - 0x50]
jne 0x40836b
or dword [rdi + 7], esp
jns 0x4082f4
mov word [rdi + rax*4 - 0x2d], fs
xor eax, 0x878bf31a
xchg eax, esp
jge 0x4082e8
jp 0x408363
mov esi, 0xadc2a10
int3
mov byte [rbp + 0x4db02c0], dl
sub eax, 0x4a674e4a
movabs al, byte [0x11194491c872014]
and al, 0xa2
pop rcx
adc al, 0x18
adc byte [rdx + 0x460831b8], dh
sbb al, al
out dx, al
jnp 0x4082fe
xchg eax, edx
wait
movsb byte [rdi], byte ptr [rsi]
cli
cmp esp, dword [rbx]
sbb dword [rsi], 0x40
sub al, r11b
push 0x51
add dl, byte [rdi + 0x4848a28a]
adc al, 0xe0
or ch, al
push rdx
fsubrp st(0)
adc eax, 0x1c0158bd
jmp 0x3ac0e0e4
cmp dword [rbp - 0x36158fac], edx
test byte [rcx], al
sub al, 0x53
and spl, byte [r8 - 0x38be99e3]
push -0x37
xor dword gs:[rax], eax
cmp cl, dl
add ah, byte [rbx]
add ecx, dword [rax + 0x26]
ror byte [rax - 0x78], 0x32
loope 0x408397
add dword [rdx], esi
push rdx
jle 0x4083f8
cmp dword [rdx - 0x78], eax
or al, bh
xor edi, dword [rcx]
movabs al, byte [0x4808014770496a84]
or dword [rbx - 0x79737292], edi
add dh, byte [rsi]
xor al, 3
test dword [rcx + 0x37], eax
stosd dword [rdi], eax
adc byte [rdx + 0x4f0889a9], ch
in al, dx
insd dword [rdi], dx
movabs dword [0x678d11403aa2f62], eax
enter 0x1622, 0xa
shr cl, 1
js 0x408415
jo 0x408392
xor al, cl
pop rcx
adc eax, 0x5d3107
sub al, 0xb0
stosb byte [rdi], al
cmpsb byte [rsi], byte ptr [rdi]
sub cl, byte [rbx + 0x63cf6558]
iretd
and eax, 0x39bab000
push rbx
adc byte [rdx], al
outsb dx, byte [rsi]
ja 0x408403
push r14
jno 0x408439
push rbp
nop
mov byte [rax + 0x512c8549], bl
lea edx, [rbx + 0x56]
push 0x385c0b63
push qword [rbx - 0x20]
xor al, 0xc8
mov dword [rax], ebx
or dword [rax - 0x29], edx
jrcxz 0x40841f
xchg eax, esp
adc ah, bl
sub dh, byte [rdx]
sub dword [r10 + r10 - 0x7d], r8d
mov esi, 0x92844c49
movabs byte [0x21056010d9c0555e], al
pop rbp
sub byte [rbx], ch
sbb byte [rbx], 0x32
xchg dword fs:[rdx + 0x216c6309], esi
and byte [rax + rcx*4], ah
xchg eax, esp
xchg eax, ebx
sub ch, byte [rbx]
add al, 0x12
mov eax, 0x212a8c1e
xchg eax, ebp
and al, 0xc2
mov dword [rax + 0x21], edx
mov word [rsi - 0x33], es
add al, 0xd1
pop rdx
shl ebx, 0x63
in eax, 0x14
and byte [rbx - 0x35a31f86], ah
add ah, byte [rax + 0x16]
jge 0x408409
or byte [rcx - 0x1f073e7f], ah
adc byte [rcx], cl
xchg byte [rdi - 0x57], bl
or byte [rip - 0x17f0750], cl
push rax
mov dl, 0xa8
push 0x4a23d788
add ebx, dword [rax]
mov ebp, 0xe4922761
cmp byte [r11], r14b
outsb dx, byte [rsi]
pop rsp
xor rax, 0x1b5b50d4
stosd dword [rdi], eax
adc byte [rax], dl
and cl, byte [rcx]
test al, 0xa1
je 0x4084bb
jae 0x408523
or dword [rcx + rdx*2 + 0x58bea48], 0x2578c090
xchg dl, ah
and dword [rdi + 0x4954317d], eax
xor dword [rdx + 0x40], eax
ret 0xd6d1
push rax
jb 0x408468
cmp dword [r9 - 0x7e], ecx
ret
sub ch, byte [rbx + 0x1b]
insd dword [rdi], dx
sub dword [rcx], ebx
mov byte [rcx + rcx*4 + 0x1854c84a], ah
push rbp
push rsp
and byte [rsi + 0x26], al
jo 0x40855b
add byte [rsi - 0x3797b7d3], 0x81
xchg byte [rdx - 0x49], ah
out dx, eax
lea esp, [rdi + rsi]
mov edi, 0xe4aed26b
stosb byte [rdi], al
movsxd rbx, ecx
push rbx
pop r9
cmp dword [rsi + 0x49], edx
and r15b, byte [r13 - 0x56df4757]
pop rbx
call 0xffffffffe47713d6
xor eax, 0x98528b98
adc al, 2
adc byte [rdx], bl
lodsb al, byte [rsi]
nop
sub al, byte [rbx]
rcl dword [rax + 2], 1
sbb al, 0x60
clc
add byte [rbp - 0x67dfd377], bl
xor dword [rdx + rbx], ebp
and al, 4
movabs al, byte [0x19454f82b04604d3]
add eax, 0x8f79324c
push rdx
adc al, 0x23
add al, 0x2c
retf -0x6a7e
add al, 0x5d
movabs dword [0xa8b20643e5114601], eax
and dword [rbx], eax
xor esi, esp
adc dword gs:[rbp + 0x11680a44], eax
mov bl, 0xc7
add byte [rbp - 0x73], 0x90
or al, 0x8a
add al, 0x57
xor bl, ah
and byte [rsi + rdx*2 - 0x40], al
scasb al, byte [rdi]
sub bh, byte [rax + 0x316c8108]
and eax, 0x62483900
movsq qword [rdi], qword ptr [rsi]
xchg byte [rbp + 0x2f5f7b7f], ch
jae 0x4085ff
sbb al, 0x60
and eax, 0xf422d02c
xor byte [rax + rax - 0x67], bl
add al, byte [rbx + 0x29431c6]
and dword [rax + 0x69], esp
sar byte [rcx + 0x5c284640], 0x2d
xchg eax, esp
push rcx
mov byte [rdx + 0x400b0944], al
movabs al, byte [0x45fc520f000df81]
imul esp, dword [rbp + 0x79], 2
or al, 0x58
and dh, bh
jle 0x4085e6
or al, 0x58
fadd dword [rax + 0x58488882]
push rsp
push rbx
mov fs, word [rip - 0x60cffd2b]
jb 0x408645
and cl, byte [rdx + rbp*2 + 0x62ac089f]
sbb ecx, ebx
jrcxz 0x40860d
sbb byte [rax + rdx - 0x76], ah
mov al, byte [rdx - 0x7bdf3f20]
movabs dword [0x6e8e5622f488510], eax
or byte [rax + 0x6e], al
xor bh, byte [rax]
retf 0x6a00
mov ch, 0x84
mov byte [rax + 0x5e], dl
xor eax, 0x9d212829
lodsd eax, dword [rsi]
add byte [rbx], r10b
and al, 0x81
wait
nop
mov dh, bl
add dword [rbp + 0x70], edx
jo 0x4086a8
and eax, 0x308b8042
cmc
mov al, 0x82
push r10
mov r8b, byte [r14 + rdx*2]
stosd dword [rdi], eax
adc byte [rax], cl
adc al, 3
cmp edx, dword [rsi + rdx*2 + 0x5f]
xor byte [r10 - 0x56], cl
fst dword [rax + 0x16]
sar dword [rcx + 0x21], -0x50
or bl, byte [rcx - 0x7e]
movsd dword [rdi], dword ptr [rsi]
add rax, 0x1c95c103
shr byte [rax + rbp*4], 0x41
fstp xword [rdx + 0x6d]
push rdi
mov ch, 0xf0
xor al, 0x42
push rbp
retf 0x5e0
adc bl, bl
add byte [rax + 0x45604f82], dh
jbe 0x4086e5
mov byte [rax], al
push rsi
xor al, 0x49
add eax, 0x72293980
xor al, 0xa8
leave
nop
cmp dword [rcx], esi
adc dl, cl
mov byte [rdx], dh
mov cs, word [rip + 0x114c8016]
xor dword [rax], eax
cdq
sub al, 8
mov dl, 0x4a
adc byte [rax - 0x7c], 0x8b
jb 0x4086cd
adc al, 0x49
or esp, dword [rax + 0x31]
pushfq
sbb byte [rax - 0x29], 5
ret 0x5881
mov cl, bl
sub dword [rcx + 0x2c], esp
mov eax, 0xde6de05a
mov ch, 0x2a
cmp byte [rax - 0x14c40c39], bh
adc dword [rbx + 0x560d6040], ebp
and eax, 0xc8f45b95
adc ah, byte [rbp - 0xf]
and dh, byte [rcx - 0x4d6e7b60]
test al, 0xba
push rcx
xor al, dh
jbe 0x408709
retf 0x7617
outsd dx, dword [rsi]
imul ecx, dword [rbp - 0x20], -0x75
xchg eax, edx
sub eax, esi
pop rdi
pop rsi
adc dword [rsi], 0x968a634c
xchg eax, esp
push rbp
or al, 0xab
push rsi
sub ah, byte [rcx]
adc byte [rax], cl
test byte [rbp + rbp - 0x60], cl
adc esp, dword [rcx]
movsxd rcx, dword [rbp - 0x5cf8ba1e]
mov edi, fs
lodsd eax, dword [rsi]
mov dl, 0x80
jg 0x408736
mov dl, 0x52
and al, 0x41
jp 0x40876c
mov ah, 0x40
test dword fs:[rbp + rax*2 + 0x5b], eax
mov dl, 0xaa
sub byte [rbx + rdi*4 + 0x5e88430c], dh
push rdi
adc eax, 0xd07754b9
pop rdx
mov byte [rdx + 0x8118864], dh
add eax, 0x4b8861c2
jg 0x40872e
sti
ror byte [rdx + 0x776e55d9], 0xac
push rdx
xlatb
shl byte [rdi - 0x2e92176a], 0x43
in al, dx
xor byte [rsi - 0x4a], dh
ret 0xaa3
call 0x4ae1dff
mov byte [rdi], al
sbb al, 0x6b
movabs byte [0x29b543e4ada831ff], al
xchg eax, edx
add cl, byte [rsi]
push rax
xor al, byte [rdi]
adc byte [rax + 0x16], 0xad
pop rcx
push rax
movsb byte [rdi], byte ptr [rsi]
movsb byte [rdi], byte ptr [rsi]
and dword [rbx], ecx
mov cl, 0x8c
push rsi
or dh, byte ds:[rcx + rbp*4]
and byte [rax], dl
xor bl, byte [rcx]
test al, 0x15
add ch, byte [rsp + rax*4]
mov dl, 0x40
xor r9b, byte [r11 - 0x2c]
xchg byte [rax - 0x76], cl
adc edi, eax
insd dword [rdi], dx
sub ah, byte [rsi]
push rax
int1
mov bl, cl
or al, byte [rcx - 0x6b8e4d3c]
leave
push rdx
cwde
cdq
xchg eax, ebx
leave
in al, 0x9c
xor ecx, dword [rdx]
nop
mov byte [rdx + 0x34], dh
mov eax, gs
adc eax, 0x54802d67
fsub qword [rbp - 0x3f]
or byte [rax + 0x39254749], dh
enter 0x2ca0, 0x30
and byte [rdx + 0x4c], dh
mov spl, 0x66
pop rdi
nop
xchg eax, edx
or ecx, edx
add byte [rdx], dh
add al, cl
adc ecx, dword [rdx - 0x2d]
add byte [rax], cl
shr byte [rdx + rax], cl
or ecx, dword [rax + 0x181523e7]
push rax
pop rbp
ret
or esi, dword [rdx + 0x33de345e]
adc al, 0x12
adc dword [rdx + 0x738a042], eax
test bl, bl
adc byte [rbx], cl
nop
hlt
adc al, 0x69
add dword [rdi], eax
insd dword [rdi], dx
xchg eax, esi
insd dword [rdi], dx
add byte [rbp + 0x684d2b92], ch
leave
add byte [rax + 0x79], cl
xor dword [rax], eax
in al, 0x22
add dword [rcx + rcx*2], edi
adc byte [rsi], cl
push rsp
lodsb al, byte [rsi]
int 0x75
add byte [rdx + rdx*4], cl
cmpsb byte [rsi], byte ptr [rdi]
pop rdx
xchg eax, ecx
in al, 0xf7
push rsp
push rbx
cdq
pushfq
add eax, 0x38013171
stosb byte [rdi], al
lodsb al, byte [rsi]
sub cl, byte [rdx - 0xc55d3fe]
mov cl, 0x39
mov ebx, 0xb105e048
sub ch, bl
and eax, dword [rax]
test byte [r10 - 0x3b], dil
mov word [rdx], ss
and byte [rax], bh
xor dh, byte [rsi]
xor byte [rax + 0x26aa0594], ah
add dword [rax - 0x6e], ebx
movabs dword [0x786978505465fc32], eax
push rbp
hlt
and dword [rax], edx
sub dl, byte [rdx - 0x56]
or cl, byte [r9]
push rbp
jg 0x408847
adc al, 0xf
push rbp
push rsp
xor dword [rbp + rcx + 0x40], eax
and bl, byte [rdx + 0x44]
add dl, byte [rdx + 0x25]
add eax, 0x819c00de
xor byte [rcx], cl
xor dword [rdx - 0x80], eax
pop rsp
shr qword [rdx], 0x30
and dh, cl
lodsb al, byte [rsi]
or al, byte [rsi]
cmp dword [rdx + 0x4f0210c2], ecx
adc eax, 0xb4ca2398
xor dl, byte [rax + 0x3c]
pop rax
xchg eax, ecx
jne 0x40892f
add eax, 0x4a184432
xchg rax, r14
and dword fs:[rax + 0x41e23879], 0x40
rcl eax, 0x75
mov ebp, 0x282242f
xchg eax, esp
or eax, dword [rbx]
or byte [rcx + 0x7b], dh
lodsb al, byte [rsi]
cwde
mov al, 0x46
pop rdi
retf
and dword [rbx + rcx + 0x5a], eax
test edx, ecx
push rdx
adc eax, 0x1036182e
or al, 0xda
push -0x1b39793
insd dword [rdi], dx
xor byte [rdx + 0x4483209], r10b
pop qword [rsi + 0x4062066d]
int 0x68
in al, dx
adc byte [rsi + 0x48092220], cl
sub byte [rax + rcx*4], cl
xchg eax, ebp
sub byte [rdx - 0x80], dh
add dword [rdx + 0xc6135e3], ebx
stosd dword [rdi], eax
add al, byte [rcx]
cmp r12d, dword [r10 + 0x5385dee7]
ja 0x4088f1
wait
cld
push rax
sub edi, dword [rcx + 0x6a4913b2]
mov edi, 0xf321962
jb 0x4089aa
inc dword [rbx]
sub dl, byte [rcx + 0x4e604af1]
jp 0x408972
or byte [rbx], ah
mov ah, 0x5b
or al, byte [rcx - 0x4e6b8feb]
test byte [rax], al
jne 0x4088d7
xchg byte [r9], r8b
movabs dword [0x1954aae76e076725], eax
push rax
sbb byte [rdx + rax*4 - 0x54], dl
in al, dx
xor byte [rdx + 6], ch
xor eax, 0x44bbea34
adc al, byte [rax]
adc dword [rbx + 0x40], 0x50200240
push 0x5598554
push rdx
add byte [rdi + 0x8ba1428], ch
movabs byte [0x842053d1ab606a03], al
adc dword [rbx], esi
mov cl, 0xaf
push rsi
push rbp
enter 0x4d20, 0x38
and dword [rcx], ebp
leave
sbb byte [rcx], al
xchg eax, ebx
xor byte ss:[rdi], cl
xor bl, byte [rcx - 0xa9fdcd8]
sbb al, 2
sub r8b, spl
ret 0x6822
nop
and dword [rax + rcx*2 + 0x60], ebx
xor dl, byte es:[rbp + 0x64]
sub al, 0x5a
or byte [rcx + 0x58], 0x84
add eax, 0x8b906c14
ror byte [rax + 0x61693132], 0x40
adc al, 0xcc
movabs al, byte [0xe922840073023138]
mov bl, 0x53
sub ch, 0x94
mov edx, 0x74f36944
mov edx, 0x6528266
xor dword [rbp + 0x1b], ecx
xchg byte [rip - 0x2b1bd3fd], dl
push rcx
sub esi, dword [rax]
stosb byte [rdi], al
xchg byte [rax], ch
mov edx, dword [rdx - 0x6f]
rcr dword [rbp - 0x3b], 1
nop
add esp, dword [rdx + rcx*2 + 0x4a]
mov eax, dword [rdx + rbx + 0x55234559]
pop rbp
adc eax, 0x7001422e
cmp eax, 0x725292fc
stosd dword [rdi], eax
xor dword [rax + rcx*2 + 0x696408c1], ecx
pop rsi
xchg byte [rdx], al
and ecx, dword [rdx]
mov edi, 0x2108137
or al, 8
xor byte [rdx + 0x79], r15b
add byte [rcx], al
out dx, eax
mov dl, byte [rsp + rax*2 + 0x421689b1]
movabs dword [0xdbc8040728c28992], eax
xor dword [rdx], 0x6aa40183
push rbx
jp 0x408a7d
enter 0x680a, -0x73
sbb dword [rip - 0x7d2ee6cb], eax
nop
and dword [rsi], 0xffffffa4
sbb dl, byte [rbp + 0x51514a0c]
xor al, 0xa
fisubr dword [rcx]
sub bh, byte [rax + rcx*4]
mov bh, 0x3d
adc al, 0xac
add byte fs:[rbp + rax + 0xb], al
cmp dword [rcx - 0x6e], esp
xor dword [rip + 0x19680048], esi
mov edi, dword [rdx + 0x299081fb]
add byte [rsi], bpl
jae 0x408b0e
insd dword [rdi], dx
push -0x28
leave
outsb dx, byte [rsi]
je 0x408b11
push -0x234bcaf7
xor dword ds:[rax + 7], 0x5a2e6f6e
sub eax, 0xcc1771bf
or eax, 0x75622eb3
xchg dword [rbp + rbp + 0x69], esp
add byte fs:[rcx + 0xd62d6b7], bh
cmp byte [rcx], cl
jns 0x408b36
test byte [r9 + 0x45079b59], r8b
sbb ebp, edx
and esi, 0x26
in al, dx
xor eax, 0x901b5f0c
call 0x289f4c4d
or esp, ecx
je 0x408b56
outsb dx, byte [rsi]
jnp 0x408a75
pop rsp
or ch, byte [rdi + rbp*2]
or byte [rdx - 0x80], ah
mov dh, 0x13
cmp dword [rip - 0x3090db44], eax
movabs byte [0x68cf68652ed2afe8], al
add bl, byte fs:[rdx]
fnsave dword [rdx + 0x635d0d72]
add dword [rcx - 0x2ab228de], eax
mov ebp, 0xb18a116c
setnp byte [rip + 0x636a0b43]
jb 0x408abe
mov bl, 0xd9
pop rbx
push 0x68006836
jnp 0x408b85
push rsp
sub edx, dword [rcx - 0x7f]
add al, 0x98
xchg byte [rax], al
jmp 0x408b3c
add byte es:[rax], al
sbb eax, ecx
adc al, byte [rdx - 0x38fefc16]
jb 0x408b25
adc ax, 0x717
sbb al, 0x48
xor esp, dword [rbx + rax*2]
add dword [rbx], esp
leave
and byte [rbx + 0x2054540c], al
or al, 0xc9
nop
or al, 4
xor dword [rbx + rax*2 - 0x37], esi
and byte [rbx + 0x19442474], al
in al, 0xb0
idiv bh
ljmp [rdi + 0x7f]
cwde
cwde
nop
add eax, 0x6901b008
xchg byte [rsi + 0xb], cl
loopne 0x408bba
wait
pushfq
sbb eax, 0x630e064
sti
and ch, cl
or dword [rdi], esp
sbb byte [rax], al
push rsi
add ecx, dword [rax - 0x62]
cmp al, 0x39
adc byte [rcx], cl
adc byte [rcx], cl
loope 0x408b9f
movsb byte [rdi], byte ptr [rsi]
mov ebx, 0xf2ffbf5e
adc dl, dh
and dword [rbx], ebx
xchg eax, edx
xchg eax, ebx
adc byte [rdx + rax + 0x40727907], al
mov edx, 0x78feff6b
adc dword [rax + 0x11], edi
add byte [rcx + 6], ch
cmp eax, edx
add al, 0x93
xchg dword [rax], edx
insb byte [rdi], dx
jp 0x408bd9
adc al, bl
enter 0x48c9, 0x12
inc dword [rsi]
sbb esp, esp
jnp 0x408b71
test al, 0xa8
add byte [rdx - 0x37], dh
jo 0x408be1
sbb dword [rbx], edx
fisttp qword es:[rsi + 0x1817019f]
jmp qword [rbx + rax*2 - 0x37]
leave
sbb byte [rax], bl
sbb cl, byte [rcx + 0xc83903f]
xor al, byte [rax + 0x40]
mov al, 3
sbb al, 0xb2
and dword [rbx + 0x3f940710], edi
sbb ecx, eax
sbb bh, ch
cmovb ebp, dword [rsi]
sub eax, 0x383f9dec
sbb al, 0x40
in al, dx
mov al, 5
jbe 0x408b99
jle 0x408c98
add byte [rbx + 0x279392ff], ah
xchg dword [rdx + rbx*4 + 0x6099a84], eax
sbb edx, dword [rdx - 0x5f40567a]
movabs al, byte [0x842006af41c85c90]
and cl, byte [rax]
leave
mov cl, 0xb7
pop rsp
and al, 0xcf
fadd qword [rdi]
jg 0x408bee
mov edi, 0x908280c3
mov edi, 0x84f245d9
mov al, 0x3f
insb byte [rdi], dx
cmp eax, 0x27927fc9
insb byte [rdi], dx
in eax, dx
insb byte [rdi], dx
in eax, dx
fadd dword [rcx]
sahf
fild dword cs:[rbx + 0x60fd2f0e]
leave
or ecx, eax
mov edi, 0xc9b8e710
xor byte [rdi + rdi + 0xf], 0xe8
leave
and bh, bh
or byte [rax + rdx*4 - 0x10], ah
clc
and al, 0x37
sbb dword [rax - 0x17f807fa], edx
sbb dword [rax + rcx*8 + 0x2e], esp
jg 0x408ca4
cwde
mov esp, esp
leave
and eax, edi
clc
push qword [rbp - 0x14]
add dword [rcx], eax
test eax, 0xec8b9261
test al, ch
add dword [rdi], edi
or al, byte [rdx]
test bh, ch
sbb al, 0xe8
add dword [rdi], eax
add dword [rdi + 0x39], edi
cmp edx, dword [rax + 0x87f106e]
add bh, byte [rdi]
clc
xchg eax, ebx
sbb dword [rdi], eax
push rax
add dword [rdi + 0x1c180115], edi
mov dl, 0x30
xor al, 0xbf
ret 0xc3b2
adc dword [rbx - 0x29], edi
xchg eax, ecx
sbb al, 0x81
sub al, 2
mov edi, 0x6039011e
or dword [rbx - 5], esp
sub dword [rax], esi
add al, byte [rax + 0x203d6734]
push rdx
lcall [rdi]
pop rcx
movabs eax, dword [0x3f0b7f093610]
mov ebp, esp
movabs dword [0x47fd8], eax
add byte [rax + 0xff], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x73f7fdea], ecx
push rdi
pop rax
fstp st(6)
movsxd rsp, dword [rax]
xor al, 1
add byte [rbx + rdi + 0x36180000], dh
add al, byte [rax]
add qword [r8], rax
mov esp, esi
add byte [rax], al
add bh, bh
