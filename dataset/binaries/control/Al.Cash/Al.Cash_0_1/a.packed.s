call 0x4046d0
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x4044e8
add ebx, ebx
je 0x40449e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4044d6
cmp rbp, -4
ja 0x4044d6
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4044be
add ecx, 4
mov dl, byte [rax]
je 0x4044e6
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4044d6
ret
cld
pop r11
cmp r8b, 2
je 0x4044fe
jmp 0x40457b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40450e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x4044f6
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x404526
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x404513
sub eax, 3
jb 0x404544
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40457b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x40456b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x404569
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x404558
cmp rbp, -0xd00
adc ecx, eax
call 0x4044aa
jmp 0x4044fe
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x404654
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x4045f2
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40463e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x404611
push 0x3a707474
jne 0x40466a
js 0x40462a
jae 0x404664
outsb dx, byte cs:[rsi]
je 0x404623
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x404691
jb 0x404683
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4046ae
jb 0x4046c1
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21e074
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21e074
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x40458c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4046b7
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x404665
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add dword [rax], eax
jmp rbp
call 0x706f475f
jb 0x404777
movsxd rbp, dword [rdi]
jae 0x404771
insb byte [rdi], dx
js 0x404777
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x404757
cmp rsi, rcx
jae 0x40475f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x40473e
cmp al, 0x8f
ja 0x40473e
cmp byte [rsi - 2], 0xf
je 0x404744
sub al, 0xe8
jg 0x404741
push rdi
cmp al, 1
ja 0x40472c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40472f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x40475c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4047b3
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c4c31
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x4047f7
mov al, 0xa
jmp 0x4047f7
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4047d3
inc ebx
mov al, 0
jmp 0x4047fb
mov al, 2
jmp 0x4047fb
mov al, 3
jmp 0x4047fb
mov al, 0x3c
jmp 0x4047fb
push rcx
rcr ah, 1
fstp st(7)
jle 0x40483c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40484e
jg 0x404840
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a9fc3
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x40489a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb9a17
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4048a2
cmp esi, 0x21585055
jne 0x4048a6
jge 0x404898
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x40489b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x40489f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40494b
pop rcx
or al, 0x3b
jb 0x404951
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4048c3
jmp 0x4048c5
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3664806
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf56a4e
in eax, dx
jg 0x4048fd
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x404943
mov bh, 0x2a
add edi, 0x10
jmp 0x404940
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40497d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4049b9
jne 0x4049d0
fstpnce st(6), st(0)
jle 0x404999
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4049cf
jrcxz 0x404a03
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1e967
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x404a82
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x404a42
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58299017
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x404ab5
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x404a4f
and ecx, 7
or al, 0xeb
jae 0x404aba
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x404aef
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x404b2d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x404ae6
push rax
call 0xffffffff868d47d3
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x404af0
std
cmp edi, esi
xchg eax, edi
jle 0x404b45
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c990d1
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x404b43
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x404b31
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x404b5a
js 0x404b9a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x404c2c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad5e67
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x404c4d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x404c52
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc24704
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x404be0
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
add dword [rax], r8d
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add al, 0x80
nop
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc bh, bh
add dword [rax], eax
push rdi
cmp al, byte [rax]
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x404d06
je 0x404d0f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x404cd8
mov dh, 0x7d
jbe 0x404cd7
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x404d10
sahf
sahf
add al, 0
cwde
add eax, 0x1cb2e000
and byte [rdi + 0x8500006], bl
stc
add al, 0xf2
add dword [rax], ecx
add al, cl
or dword [rax], eax
cwde
jl 0x404cf2
stc
add byte [rdx], cl
add al, bh
or eax, dword [rax]
test al, 0x14
cmp dword ds:[rax + rax*4 + 0xc], 0xdd000
add byte [rax], bl
lahf
add byte [rax], dl
lldt sp
mov dword [rdx], eax
sub eax, dword [rdi]
or byte [rdi], al
adc byte [rdi], dl
jle 0x404c99
jge 0x404d2c
add byte [rax - 0x70], dh
adc al, byte [rax]
fcomp dword [rsi + 0x3f201cbb]
adc eax, dword [rax]
in al, 0xda
adc al, 0xdd
jns 0x404d33
jns 0x404d33
adc eax, 0x16e800
add bh, byte gs:[rcx + 2]
add al, bh
sbb byte [rax], al
fisttp dword [rsi]
nop
fistp word [rcx]
add al, 0xe0
cmp dword [rax + rax*4 - 4], 0xe1a8001a
sbb eax, dword [rax]
rcl byte [rdx + 0x1c365377], 0x13
add dword [rdi], edx
add al, 0
int1
dec dword [rip + 0xc3b1657]
sbb edi, dword [rdi + 0x32029719]
fcom dword [rax + 0x171b4034]
or byte [rip + 0x2e4320c9], 0xc0
mov al, 0x93
pop rdi
sbb eax, dword [rax]
mov dl, ah
add dword [rdi], edx
push rbx
leave
push rdi
jp 0x404dd4
loopne 0x404d7b
mov byte [rsi + r8*4], cl
xchg eax, edi
movsd dword [rdi], dword ptr [rsi]
xlatb
or ecx, edi
mov cl, 0x21
mov al, 0x77
adc byte [rax], al
add byte [rdx + 0x72760c40], cl
mov al, 0xcb
pop rdi
sbb dword [rsi], edx
in al, 0x72
nop
xchg eax, ebx
or eax, 0xffffff8b
or byte [rip + 0x39064101], dl
jnp 0x404dd6
sbb dword [rdi], edx
and eax, 0x6419062c
nop
pop rax
jo 0x404e15
sahf
jo 0x404e12
xchg byte [rcx], al
lahf
sbb dword [rdx], ebx
in al, 0xe4
leave
scasb al, byte [rdi]
add dword [rcx + 0x4e412a19], edi
sahf
sbb al, 0xdc
add ebx, esp
sbb dword [rbx + 0x67], eax
in al, 0xc9
or al, 2
or bl, ah
sbb eax, dword [rdx]
out dx, eax
add dword [rax + 0x3024360c], edx
add al, byte [rbx + 0x3dd8320c]
add al, 4
or dword fs:[rip + 0x760820c9], 0x5f
or dword [rax - 0x76dbcdf4], edx
or ah, byte [rax + 0x43]
xor cl, al
wait
or al, 0xa3
or dword [rdx + rsi], 0xffffffc8
adc byte [rax], cl
scasb al, byte [rdi]
sbb byte [rax - 0x4adbc9f4], dl
and byte [r8], r12b
xor bl, r8b
and al, 0xd6
sbb esp, esp
in al, 0x70
mov ebx, dword [rbx]
stc
movabs al, byte [0xe003222541907278]
mov ebp, esp
leave
jg 0x404e70
push rax
add edx, dword [rdx]
and dl, byte [rdi]
sbb esp, esp
pushfq
sub byte [rsi - 0x5b5e4e6b], 0x15
pop rdi
pushfq
pop rdi
adc ah, byte [rcx]
lodsb al, byte [rsi]
stosb byte [edi], al
xchg eax, ebp
cmc
mov r14b, 3
add eax, 0xacaec6df
fmul st(1)
shr byte [edi], cl
adc al, 0x94
xor al, 0x9b
xchg eax, edx
pop rdi
jrcxz 0x404e91
sbb r13d, dword [r15 + 0x47f6d8ac]
jg 0x404e8f
add al, 0xb7
and bl, byte [rsp + rbp*8]
add byte ss:[rbp + 0x75], dl
test al, 0x82
pushfq
cmp al, 0x7b
mov bh, 0xb
add eax, 0x293f0617
in al, 0x20
cmp dword [rip + 0x32743bd6], -0x38
leave
out dx, eax
xor eax, 0x4ec1c993
sub ah, byte [rsi]
push rsi
scasd eax, dword [rdi]
add eax, 0xe42ec1c9
rcl dword [rax - 4], 1
ja 0x404ebc
xor dword [rbp + 0x26c8393c], eax
adc byte [rsi], al
xor dh, byte [rsi + rcx + 0x72]
in al, dx
cmp al, 6
pop rdi
xor byte [rdi], bh
push rbx
nop
cmp al, 0x79
and dword [rdi - 0x33], ecx
test dword [rsi], 0xf2722d40
in al, dx
test dword [rip + 0x23abef07], ecx
sbb byte [rax], ah
sbb dword [rdi], eax
out 0x39, eax
pop rax
jb 0x404ee6
in al, 0xf6
mov ecx, 0x8350e35
in al, 0x20
sar byte [r15], cl
jo 0x404f0d
jb 0x404efb
imul ebx, dword es:[rsi - 0x2b], 8
imul dword [rdx - 0xe]
in al, 0x20
cmp eax, 0x5d6d2409
enter 0x17b3, -0x63
or dword [rdi + 0x64b32476], edi
nop
xchg eax, ebx
adc dword [rdi], -0x7c
imul esp, dword [rbp - 0x20], -0x6d
sbb dword [rsp + rbx + 0x1a2373b0], 0xa
xor cl, al
leave
and byte [rdx + rsi], ah
sub eax, 0x907452c8
js 0x404f0d
push rsi
adc byte gs:[rax], bh
fadd dword [rbp + 0x217dd8f]
push -0x61b1bed9
mov ebp, 0x608f0b18
xchg byte [rbx + 0x1c], cl
in al, 0xe4
leave
mov cs, word [rbx]
rol byte [rbp + 0x44], cl
mov cl, 0xb
pushfq
cmp al, 0x7b
add esp, 0x7a93bf0b
add rcx, r8
xchg dword [rbx + r15*4], ecx
adc ch, byte [rcx + rax*8 - 0x7a]
in al, 0x84
or al, 0x7f
test byte [rcx - 0x37cdf1e9], dh
leave
movsb byte [rdi], byte ptr [rsi]
cmp esi, dword [rcx]
stc
adc edi, dword [rbx - 0x33]
jb 0x404f1e
mov bl, 0x4f
insd dword [rdi], dx
or eax, 0x9e44021
mov word [rdi + 0x1f0d760f], cs
cmp r8b, byte [rdx - 0x62]
sbb al, 0xe4
or edi, dword [rdx - 0x13919bf3]
sahf
int1
iretd
or eax, 0xf6765e87
in al, dx
test dword [rdx + rsi*2], ebx
push rax
pop rax
pop rdi
imul esi, dword [rbx + 0x42], -0x62
sbb eax, 0x2f0e3872
push rax
cmp byte [rdi], al
cmp dword [rcx - 0xa], edi
pxor mm6, qword [rbx + 0xf34287b]
mov esp, 0x75c22790
xchg eax, ebx
bswap edi
mov dh, 0xf2
in al, 0xc9
xchg eax, ebx
sub eax, 0xfb80189
mov byte [rsi - 0x38], bl
mov bl, 0x17
adc eax, 0x4a807710
pop rbp
adc byte [rbx + rdi*2], bh
and edi, ecx
out dx, eax
out dx, al
pop rdi
popfq
adc byte [rdi + 0x2e], al
and esp, 0x20
sbb dword [rbp + rdi - 0x6fb60e28], -0x6d
xor eax, 0x2a00a711
mov cl, byte [rdi + 0xe]
jb 0x405088
push rbp
adc dword [rsi + 0x4f], esp
add byte [rbx + 0x11], dh
mov esp, 0x46162790
stosd dword [rdi], eax
adc dword [rdi], ebx
test byte [rax + 0x14243841], dl
adc dl, byte [rdi + 0x7217b4e]
mov ebx, 0x81261769
mov esi, 0xe4f24712
test dword [rbx + rdi*2], edi
add r10, qword [r11]
shr byte [rdx - 0x38], 1
leave
xchg eax, ebx
adc ebx, dword [r12 + r14*2 + 0x39]
jmp 0x404fd4
cmp al, 0x39
push 0x13
jne 0x404ff6
adc ebp, dword [rdi + 0x3c85dd75]
pushfq
and al, 0xb9
adc byte [rip + 0xe04f2b8], ah
sbb dword [rdi], eax
rcl byte [rbx], 0x27
adc byte [rcx - 0x1c], al
in al, 0x49
adc eax, dword [r15 - 0x50]
pop rdi
cmc
sahf
sbb al, 0x5f
adc al, 0x94
sbb ebp, 0x14
xor ebp, 0x764f9e42
cmp dword [rip + 0x4874df15], eax
js 0x405071
adc eax, 0x163e9507
xor esp, 0x545f9e42
cmp al, 0x88
or dword [rdi], ebp
adc byte [rax - 0x5b], bh
mov bh, 0xd1
leave
shr dword [rsi], -0x1c
pop ax
sti
cmp byte [rbp - 0x7b], dl
cmp al, 0x39
enter 0x249f, 0x17
fdivr qword [rdx - 0x6d]
in al, dx
pop rbp
cmpsd dword [rsi], dword ptr [rdi]
enter -0x41b3, 0x17
cmp al, 0xeb
test ecx, edx
loopne 0x4050ef
rcl byte [rdi], cl
test byte [r15 - 0x64], r15b
cmp al, 0xeb
test dword [rdi], esp
sbb byte [rdi], dh
xchg eax, esp
xor dword [rcx - 0x38], ebp
leave
xchg eax, ebx
cmp dword [rbx], 0x18
movabs dword [0x1857393c9c834c36], eax
adc al, byte [rbx + 0x5d83ab0f]
enter 0x1893, 0x28
lea edi, [rdx - 0x61b007d1]
xchg eax, ebx
pop rsp
mov bh, 2
xchg eax, edi
jmp 0x40511b
mov ah, 0x3e
in al, 0x20
sbb dword [rcx - 0x4c37a1dd], eax
cmp ebx, dword [rcx]
out dx, eax
je 0x405132
in al, 0xc9
xchg eax, ebx
jle 0x405196
add dword [rdx + rbx], ecx
jb 0x4050d6
or edi, dword [rcx - 0x42]
push rsp
fidiv word [rdx - 0x6d]
or dword [rdx + rsi*2], 0x42
movabs byte [0xbf5cab072c806bea], al
js 0x4050cc
and byte [rsp], ch
iretd
cmp byte [rbx + rbx], bh
std
jl 0x405160
shl dl, 0x85
sbb al, 0xe4
sbb eax, 0x1b
sahf
mov ebp, 0xdc171c0f
jnp 0x40517c
or al, 0x72
jb 0x4050f0
xor al, 0xb5
xchg eax, r11d
push rcx
and byte [rax + 0x19], dh
rcl byte [rcx], 1
add al, 0x6f
jb 0x405162
in al, 0x60
sbb al, 0xa0
cmp dword [rbx], ebp
test al, 0x1c
jo 0x4051c3
mov word [rax], ss
sbb eax, 0x6724ce27
mov ebp, 0x1d3b7790
pushfq
mov ebp, 0x1d9e38c0
out 0xc4, eax
sbb eax, 0xe4f2d977
and byte [rbx - 0x6de1cef2], al
cmp ah, byte [rdi]
jb 0x4051cf
xchg eax, edx
push rbx
jne 0x4051c0
in al, 0x20
mov al, 0x1e
adc ch, byte [rdi - 0xb]
sbb dword [rdi], ebp
in al, 0x60
adc byte [rip - 0x3690e0dc], ah
loop 0x4051a0
xor al, 0x5c
sahf
sbb al, 0xe4
in al, 0xe4
xor r13, qword [r13 + 0x1f]
xchg eax, esi
je 0x40516d
sbb al, 0xec
mov dword [rdi], edx
int 0x7f
pop rcx
and byte [rbx + 0x575bd2eb], al
hlt
sahf
lock xor byte [rax], ah
xchg eax, edi
xor eax, 0x41c92041
sahf
out dx, eax
pop rbx
sbb eax, 0x302f208b
leave
ret
and bh, bh
and eax, ecx
mov bl, 0x17
pop rdi
pop rbx
and dword [rdi + 0x20], ebx
push rcx
pop rsi
fcom dword [rbx]
pop rsi
cdq
and dword [rdi], eax
xor byte [rdi - 0x1bde53d1], cl
and byte [rdi], ah
iretd
pop rdi
sbb cl, byte [rbx + 0x66]
xor ah, byte [rdx]
jb 0x405216
fsub qword [rip - 0x59ddb3b2]
push rax
and edi, ecx
js 0x405250
xchg dword [rdx], esp
mov al, cl
leave
adc edi, dword [rdx + 0xa]
and edx, edi
outsd dx, dword cs:[rsi]
call 0x397cd825
sub al, 0x23
mov ebp, dword [rsi + 0x69]
and edi, dword [rdi]
nop
pop rbx
add bl, byte [rdi + 0x23]
int3
push rsp
je 0x40525c
mov ebx, 0x24212fd2
jns 0x4052cf
nop
xchg eax, ebx
jae 0x4052cc
and al, 0x7c
sahf
ror dword [rbx], 1
out 0x24, al
xchg eax, edi
sub dh, byte [rsp + rdi*8]
mov word [rdi], ss
enter -0x4bf, 0x24
and eax, 0x17a13c27
fidiv dword [rdx]
jbe 0x4052a5
pop rdi
and al, 0x46
nop
sbb dword [rdx + rax*4 + 0x25fb25b3], 0x19
in al, 0x19
out 0x49, eax
push rsp
sbb esp, dword [rsi]
syscall
push rdx
in al, 0x68
test dword [rdx + 0x26], ecx
iretd
js 0x4052c2
iretd
loopne 0x405242
xlatb
enter -0x1bda, 0x19
mov esp, 0x26dc1f40
xlatb
fisttp qword [rax - 0x6d]
or byte [rdi], ah
mov edi, 0x82b5271c
pop rbp
enter 0x4383, 0x56
fidivr word [rcx + rdi]
enter 0x2749, 0x5a
mov fs, word [rdi]
push rbx
mov ebp, 0xf585e240
sbb eax, 0xe42f2028
or dword [rdi - 0x35], ebx
cmp dword [rdi + 0x28], ebp
or edx, ecx
pop rbp
mov bh, 0x17
adc dword [rdi - 0x50], ebp
or byte [rcx], ah
mov esp, 0xae853e28
mov ebx, 0x290a7a40
ja 0x405351
adc bl, byte [rdi + 0x72]
in al, 0xc9
test dword [rdi], ebx
lea eax, [rdx]
pop rcx
sub esp, ebp
cmp al, 0x39
or al, 4
jg 0x405375
sub esi, ebx
leave
xchg eax, ebx
sbb dword [rdi + rcx*4 + 0x76f829d0], 0x21
cmp dword [rcx], edi
enter 0x5aad, 0x2a
sbb al, 0xf1
sahf
rol bh, 0x2a
xchg dword [rbp + rax*4 - 0xe61d51c], eax
sahf
push rdi
pop rdx
mov byte [rbp + 0x2b], al
test dword ds:[rsp + rbp*8], ebx
mov byte [rdi], dl
or eax, 0xf217ac5c
in al, dx
mov bl, 0x2b
ja 0x405364
cmp eax, 0x4f1f2c18
jb 0x405347
cmp ecx, dword [rdx + 0x37]
sub al, 0xa0
mov cs, word [rsi - 0x62]
or eax, 0x5f2c8f49
cmpsb byte [rsi], byte ptr [rdi]
in al, 0xc9
xchg eax, r8d
sub al, 0xe8
fild qword [rsp + rdi]
movabs eax, dword [0x6a83172d4c1f0817]
in al, 0x59
movabs dword [0x19e42f68a947bf85], eax
movsd dword [rdi], dword ptr [rsi]
sub eax, 0xd9504a0f
sub eax, 0x5605e302
out dx, al
sub eax, 0x790bc9b7
neg byte [rcx]
pop rdi
add eax, 0xea2e8451
or dword [rdi], ebp
in al, 0xda
movabs rbp, 0xc2ec1c858d80072e
pop rdi
cmc
cwde
js 0x4053d7
loop 0x4053ec
or bl, byte [rcx + 0x7f]
add bh, byte [rbx + 0x21]
iretd
push rsi
and byte [rax], dh
cmpsd dword [rsi], dword ptr [rdi]
out dx, al
sahf
int1
xor al, 0x30
lahf
je 0x4053eb
mov word [rbx - 0x4e], es
adc dword [rdx], eax
push rdi
mov al, 0x81
xor byte [rdi + 0xb], dl
jns 0x4053b4
or ebp, esi
xor bh, dl
ret
push -0x261b1bc8
sbb dh, byte [rcx]
mov edi, 0x317a3386
cmp al, 0x7b
and edi, ecx
xor bh, byte [rax + 0x64]
xor edi, edx
jb 0x405443
xchg dword [rdi + rdx + 0x7240bf31], ebx
repne lodsb al, byte [rsi]
xchg eax, r9d
xor dword [rdi], ebx
mov dh, 0x7c
jnp 0x405434
add al, 0x32
sahf
cmp byte [rdi], bh
xor al, byte [rdi + 0x3c]
loope 0x4053a4
cmp al, 0xf8
mov ss, word [rax + 0x32]
fbld tbyte [rbp - 0x27c6f489]
test dword [rax - 0x3d8c1ee9], ebx
or edi, dword [rcx - 0x3e]
mov ch, 0x32
xchg eax, edi
cmp bl, bpl
xor bh, byte [rdi + 0x27]
cmp dword [rcx - 0x1e], edi
je 0x4054a9
cmp eax, 0xb3927033
enter 0x4015, 0x59
xor esp, dword [rdi - 0x66]
test byte [rsi + 0x20], bl
sbb eax, 0x1d4733b8
xor al, 0x2f
nop
xchg esp, esp
jmp 0x4053e1
xor al, 0xa7
add byte [rdx - 0x62], 0x6c
xchg eax, ebp
xor al, 0x18
and eax, ecx
pop rcx
xor al, 0x35
jno 0x4054bb
and edx, dword [rdx + 0x27]
nop
cdq
xor eax, 0x799f35dd
ret 0x790b
sbb edi, dword [rax + rcx + 0x36]
jg 0x40541a
xor ah, dl
add eax, 0x361e0bc2
xchg eax, edi
xchg eax, ecx
sahf
jo 0x4054dd
out 0xbc, eax
mov dh, 0x36
xchg eax, edi
mov al, 0x8c
add eax, 0x2f0909c6
leave
mov bh, 0xe0
test dword [rcx], edi
and byte [rbx + 0x68], dh
mov ebp, 0xb81fb190
movabs al, byte [0x3190bc27900a0737]
mov esi, 0x45b63737
movabs dword [0x38033f37e1bc5817], eax
xchg eax, edi
in al, 0x58
add ch, byte [rsi]
cmp bh, bl
mov esi, 0xf2391930
cmp byte fs:[r8 + 0x31], r11b
cmp eax, dword [rdx]
cmp eax, dword [rcx - 0x2cc79ac4]
cmp bh, ch
movsb byte [rdi], byte ptr [rsi]
pop rsi
and ch, dh
sbb eax, 0x393a6f39
loopne 0x4054fb
ret 0xa20b
cmp dword [rdi], ebx
hlt
cmp eax, eax
enter 0x7b1, 0x4f
push r14
cmp dl, bh
sbb dl, byte [rdx + 0x3a81bd67]
scasd eax, dword [rdi]
mov eax, 0x5ecf3a53
enter 0x1f33, -0xe
outsb dx, byte [rsi]
and dword [rbx], edi
fadd qword [rdi + 0x217353d1]
pop rcx
adc ch, bh
sbb al, al
or ebp, esp
test dword [rdi], eax
cmp ebp, edi
cmp byte [rbx], 8
sahf
push rax
cmp esi, edi
in al, 0x19
in al, 0x54
cmp al, 0x57
insb byte [rdi], dx
and eax, 0x2f018136
push 0x17c9873c
enter -0x31bf, 0xe
test byte [rcx - 0x71], dh
in eax, dx
clc
cmp al, 0x85
cmp al, 0x8b
or edi, dword [rip - 0x13c3ff01]
test dword [rcx + rbp*8], edi
cmp eax, 0xfb846a47
cmp eax, 0x84ea4ef
hlt
sbb sil, byte [r15 + 7]
cmp dword [rbx + 0x3224f217], esp
sub bh, byte [rsi]
cli
mov edx, dword [rdi]
fsub dword [rcx]
outsb dx, byte [rsi]
xchg dword ds:[rbx], esp
shl dword [rcx], 0x39
movabs al, byte [0x909b0727fc5f3ea0]
js 0x405572
and byte [rbx], ah
cmp al, 0x3b
enter -0xee0, -0x3e
sub esp, dword [rdi + 0x2793013b]
sahf
pop rcx
add dword [rsi + 0x2f], eax
in al, 0xc9
push rbx
mov esi, 0x673f913a
mov esp, 0xd905ea40
and al, 0x40
test eax, 0xf681603a
and dword [rdi - 0x7f], esi
cmp al, 0x2b
pop rax
outsd dx, dword [rsi]
movsb byte [rdi], byte ptr [rsi]
fmul dword [rcx]
sub al, 0x38
cli
pop r15
and edi, eax
mov dl, byte [rdi]
pop rsi
out 0xfc, eax
xchg dword [rsi + 9], ecx
sar byte [rbx], 0x9d
mov eax, 0x41ac0f2f
add dword [rsi - 0x38], ebx
xor edi, edi
sti
jo 0x4055cc
mov dword [r10 - 0x62], 0x41e40274
out dx, eax
inc byte [rbp - 0xe61bd14]
mov dil, 0xee
cmp al, 0x17
or ebx, dword [rsi + 0x58]
sbb al, 0xd2
fiadd word [rdx + 0x4f]
movsxd rax, ecx
or ebx, dword [rcx]
sub eax, 0x6e074327
sahf
popfq
nop
xchg dword [rbx + 0x47], eax
out dx, al
jge 0x40563e
mov byte [rdi], dl
enter -0x4fbf, 0x43
stc
int3
and byte [rbx], ah
jp 0x40569f
in al, dx
adc r9d, dword [rax - 0x10]
retf 0x7900
mov edi, 0xf21780c1
movsb byte [rdi], byte ptr [rsi]
ja 0x4055fa
xchg byte [rdi], dh
and al, 0x27
popfq
push rcx
loop 0x40561c
mov esp, 0xe04a2617
test dword [rcx], edi
sar byte [rdi + 0x30], 1
test dword [rcx + 0x46], ebx
jp 0x405690
iretd
cmpsd dword [rsi], dword ptr [rdi]
and al, byte [rbx - 0x57e8b971]
pop rsi
and byte [rax + 0x48], dh
xchg eax, esi
xchg dword [rsi + r8*2 + 0x33c85e89], r13d
mov bh, 0x23
jno 0x40565f
pop rsi
jno 0x405690
adc al, byte [rdi - 0x49]
add al, 0x5e
enter -0x84d, -0x10
and al, 0x91
mov r15b, 0xe4
xchg eax, ecx
scasb al, byte [rdi]
cmp dword [rip + 0x70e41907], eax
test byte [rbp + rax*4 + 0x3c], 0xe1
test byte [rdi], dh
xor dword [rax + 7], ecx
push rsp
loop 0x405640
cmp al, 0xe1
push 0x48
mov ah, 0x84
ret 0x9d48
mov al, 0x27
fbld tbyte [r13 + 9]
or al, 0x7a
xchg eax, edi
pop rcx
adc ecx, dword [rsi + 0x20]
rcr byte [rcx + 0x49edf749], 0x7f
test byte [rsi + rbx*2], 0xc8
stosb byte [rdi], al
jl 0x405723
mov dil, 0x58
jb 0x4056df
test byte [rdi], dl
test qword [rsi + 0x6d], 0x4e487522
movabs byte [0x9e42f49e4b090b4a], al
xchg eax, edi
sub byte [rdi], bl
xchg eax, r9d
pop rsp
sahf
cmp ecx, dword [rbx + 0x1f]
test eax, 0x813a876
mov cl, byte [rbx - 0x69]
fmul dword [rbx - 0x70]
and eax, dword [rdi + 7]
jbe 0x405763
test qword [rbp + rsi*8 + 0x26], r15
out dx, eax
outsb dx, byte [rsi]
mov ebp, 0x4ce1e840
pop qword [rsi + 0x4d]
xchg eax, edi
cmp dword [rcx + rbx], 0x7b484839
mov ecx, dword [rbp + 6]
fld dword [rcx + 0x37]
mov dl, 0x17
adc al, byte [rdi + 0x62]
add dword [rdi - 0x72], eax
sbb al, 0xb
movabs r14, 0x91c8c90117696c4d
and ebp, ebp
add al, 0x58
jns 0x405794
jb 0x405748
jge 0x40570e
fisttp word [rsi - 0xe]
in al, dx
test byte [rdx + rcx*8], bl
jae 0x4057c2
mov edi, 0x3c857109
test eax, 0x3f4fb217
call 0xffffffff91d113b9
jmp 0x4057d4
mov edi, 0x72503599
nop
xchg eax, ebx
out 0x27, al
push -0x361bafae
or edi, dword [rcx - 0x4c]
movabs rbx, 0xdc2f45813a35c750
push rax
xor dword [rcx + 4], edx
js 0x4057ca
iretd
test dword [rdx - 0x8aea8d6], 0x721384f2
adc al, byte [rdi + 0x4aaf51d7]
and r8, qword [rdi - 0x58]
xor dword [rdx - 0x69], edx
pop rax
push rax
sbb dword [rdi], esp
nop
pop rbx
push rdx
mov edx, 0x59c9b752
in al, 0x16
jo 0x4057ba
push rdx
scasb al, byte [rdi]
jp 0x4057fb
iretd
push rbx
mov edi, 0x53723a5a
pop rsi
nop
pmulhw mm2, qword [rbx - 0x59]
push rsp
cmp eax, ecx
leave
adc edx, dword [rdi - 0x76c5cda8]
push rsp
cmp al, 0xeb
test dword [rsp + rcx*2], edi
cmp eax, 0xee7f54c6
mov ebp, 0xe985e240
push rsp
add edx, dword [rbp + 9]
sahf
mov edi, 0x554d8914
enter -0x6c38, -0x19
add byte [rax + 0x3b], 0xdc
push rbp
js 0x4057d3
cmp al, byte [rbx]
pop rsi
push rsi
jne 0x72464202
nop
adc al, 0x9f
push rsi
push rsi
cmpsd dword [rsi], dword ptr [rdi]
shl dl, 0x85
cmp al, 0xc1
cmp eax, 0xec6f5737
add al, 0x16
mov esp, 0x9a37577b
push rdi
out dx, eax
movabs byte [0x906f58208026f217], al
xchg eax, ebx
pushfq
mov eax, 0x30180f58
and eax, 0x72790bc0
rcr byte [rax - 0x80], cl
pop rcx
sbb dword [rsi - 0x38], 0x8e506f08
pop rcx
cmpsd dword [rsi], dword ptr [rdi]
adc ecx, dword [rax + 0x70]
add ch, byte [rdx - 0x1eb488a7]
nop
mov r11b, byte [rdx - 9]
pop rdx
xchg eax, ecx
loopne 0x405804
cmp al, 0x49
jne 0x405897
pop rbx
out dx, eax
pop rsi
and byte [rax + rdx*4 - 0x38a49b5a], bh
mov eax, 0xc9c8395b
mov bl, 0x4f
sub al, byte [rbp - 0x74]
or ebx, dword [rcx + rdi*2 + 0x32]
cmp eax, 0x80c71c10
push rdx
pop rsp
in al, dx
add eax, 0x5c970276
xlatb
mov bl, 0x5c
ja 0x4058cf
jo 0x405860
or eax, edi
movsb byte [rdi], byte ptr [rsi]
jae 0x40589d
sbb al, 0x92
mov bl, 0x78
pop rsp
outsd dx, dword [rsi]
push r11
pop rbp
cmp al, 0x19
cmp dword [rdx - 0x39], edx
pop rsi
sub ecx, 0x33c85dd7
cmp byte [rcx + 0x3e775e0f], al
pop rsp
test byte [rbx + rax], bl
pop rsi
imul ebx, dword [rsi + 0x27], 0x58
jmp 0x405863
cmp al, 0xe9
xchg dword [rsi + 0x47], ebx
stosb byte [rdi], al
jo 0x4058c2
pop rsi
test dword [rsi], 0x7c02f083
mov ds, word [rdi]
sbb byte [rdi], dl
popfq
test al, 0x17
jo 0x405956
or ah, byte [eax - 0x78]
xor dl, byte [rsi - 0x39]
push 0x6d
xchg eax, ebx
cmp ah, byte [rcx]
sbb dl, byte [rbp - 0x57]
out 2, eax
cmp eax, ecx
leave
sub byte [rdx + 0x64], ah
or dword [rcx + 0xe], esp
jbe 0x405899
cmc
xchg eax, edi
ja 0x40594d
out 0x54, al
pop rsi
cmc
fisub dword [rcx - 0x71]
xor esp, dword [rdx + 5]
ret 0x240b
and esp, ebp
add ah, bl
pop rbp
lahf
fldcw word [rdi]
sahf
shr ah, 1
test eax, 0xc9c90e33
xchg eax, ebp
movsxd rax, dword [rax]
mov edx, 0x67900f63
sbb eax, 0x64206192
push 0x79
cmp al, byte [rcx + 0x6454bc05]
out 0xef, eax
add bl, byte fs:[rsi - 0x38]
xchg eax, ebx
outsd dx, dword [rsi]
and al, 0x65
and dword [rdi], eax
wait
rcl byte [rdi + 0x69], 0x17
mov al, 0x85
jb 0x40591a
js 0x405917
fstp st(4), st(0)
jno 0x4059c1
mov es, word [rdi + rdx]
sub bpl, r13b
cmp al, 0x19
and dword [rsi - 0x707791], ebx
adc byte [rcx], cl
js 0x4059f5
pushfq
ja 0x40592b
pushfq
vhsubpd xmm12, xmm14, xmmword [rsi + 0x27]
pop rax
adc dl, ah
lahf
jmp qword [rsi + 0x17]
adc dl, ah
add eax, 0xe0e76766
sbb dword [edi], ebp
in al, 0x49
mov edi, 0x681b6832
pop rsi
and byte [rdi], ch
in al, 0xfc
movsxd r13, dword [r8 - 0x44]
push 0x302f0272
outsd dx, dword [rsi]
imul edi, edi, 0xa33c8560
cmp ebp, dword [r9 - 0x21]
loop 0x405962
cmp al, 0xe1
mov word [rcx + 0x1f], gs
wait
insd dword [rdi], dx
in eax, dx
imul eax, dword [rcx + 0x1f902710], 0x76876a3f
and dword [rdi + 0x38], ecx
push -0x51
out dx, eax
cmp al, 0x9a
xor ebp, 0x7c0d0e42
push -0x51
call 0xfffffffff0b9968c
push 0x54
jno 0x405a52
imul eax, dword [rsi + rdx*2], -0x43
fldcw word [rbx + 0x67]
or dword [rdi], esp
nop
cmp al, 0x6c
pop rdi
insb byte [rdi], dx
add ah, byte [rcx]
leave
shl byte [rax + 0x6c], 1
push rdi
xor al, byte [rdx]
jo 0x4059b6
insb byte [rdi], dx
cmp ecx, ecx
and al, al
or esp, dword [rsp + rbp*2 - 0x892d0d1]
jnp 0x405a5b
iretd
insd dword [rdi], dx
xlatb
sbb byte [rsi + 0x5f], ch
or al, 0xe2
test dword [rdi + rdi*8], edi
pop rbx
outsb dx, byte ds:[rsi]
push rdi
jge 0x405a2c
outsb dx, byte [rsi]
mov edi, 0x409d59fe
movabs byte [0xe891c5f6f41ff6e], al
leave
scasd eax, dword [rdi]
cmpsd dword [rsi], dword ptr [rdi]
outsd dx, dword [rsi]
push rdi
add cl, byte [rbp + 0x32]
jb 0x405a50
test byte [rsi], cl
jo 0x405ab8
sahf
mov word [rcx + rdi*2], ds
sahf
jo 0x405af7
jns 0x405a28
std
jo 0x405a9f
iretd
mov eax, 0x62e77140
or rax, r10
jnp 0x405acb
movabs al, byte [0x302700871402f2f]
jbe 0x405b07
scasd eax, dword [rdi]
in al, 0x60
adc eax, esp
pop rdi
mov es, word [rbp + rbx - 0x1bd0fe8e]
or dword [rdi + 0x72], ecx
jb 0x405a3f
push -0x68f07eca
sbb dword [r9 - 0x1948a7a2], r9d
jb 0x405b11
mov eax, 0xbc108e4
bnd jb 0x405ab1
mov word [rax], gs
or edi, dword [rcx]
add al, 0x73
fadd qword [rbx + rax*4 - 0x64]
cmp al, 0x89
jae 0x405b3a
mov dh, 0x60
stosd dword [rdi], eax
add dword [rcx], 0x2f73902f
je 0x405b4e
insb byte [rdi], dx
cmp byte [rsi + 0x74], r8b
fadd qword [r11 - 0x3731bee9]
shr byte [rax - 0x39], 0x86
sbb al, 0xe4
in al, 0xc9
cwde
je 0x405add
sub bl, ah
mov ah, 0x74
sbb dword [rbx], esp
js 0x405a80
jne 0x405a99
movabs byte [0x182f754e0bd9c90e], al
scasb al, byte [rdi]
jne 0x405b17
xchg esp, esp
lodsb al, byte [rsi]
pop rdi
mov bl, 0xf
jbe 0x405b95
and eax, dword [rdi + rbp]
in al, 0xc0
ja 0x405b64
jbe 0x405af6
mov eax, 0x242e8c01
and byte [rdi], bh
shl al, 5
jbe 0x405b85
loop 0x405ba6
cmp al, 0x79
cmp dword [rbp + 0x3a2f7727], 0x2184ce77
cmp ebx, esp
test dword [rbp - 0x1f939089], esp
nop
pushfq
ror ebx, 0x77
and r14b, r11b
ja 0x405b8b
jnp 0x405b72
iretd
xlatb
js 0x405b47
cmp dl, byte [rax - 0x717a1f6f]
js 0x405bd8
sahf
adc dword [rdi], 8
mov ebp, 0xfabf78de
js 0x405b43
and al, 0x67
add cl, byte [rsi]
jns 0x405bd2
jbe 0x405b78
add edi, dword [rax]
push rsp
jns 0x405b3a
popfq
jns 0x405b0d
in al, 0xd9
or edi, dword [rcx - 0x75]
sar dword [rcx - 0x29], 1
sbb byte [rax + 0x2f118e42], dl
add al, 0x7a
cld
jnp 0x405bcf
jns 0x405b16
jo 0x405bc1
jp 0x405b90
mov bh, byte [rdx - 0x78]
in al, 0x20
push rsp
fdivr dword [rdx - 0x6a]
nop
mov byte [rdi], dl
jnp 0x405b55
int1
pop rax
shl dword [rcx], -0x54
out dx, eax
jns 0x405c31
cmpsd dword [rsi], dword ptr [rdi]
add al, byte [rbx]
pop rsi
enter -0x4d08, 0x7b
lahf
loopne 0x405bc5
add dh, byte [rcx + 0x1b]
jl 0x405b8d
jle 0x405c44
adc dh, byte [rcx + 0x48]
out dx, eax
wait
jl 0x405c30
cmp al, 0x19
cmp dword [rsi], ecx
xlatb
mov ch, 0x7c
xor eax, 0x85e23193
jl 0x405b89
in al, 0xc8
xchg eax, ebx
sbb byte [rax], 0xdf
add al, 0x7d
adc bh, byte [rcx - 0x1e]
add al, 0xf2
push rdi
mov byte [rbp - 0x3b], bh
jge 0x405c4b
mov esp, 0x2a173190
jge 0x405bc8
adc edi, dword [rax]
add edi, 0x1ce77e4b
jbe 0x405bfd
add bh, byte [rcx]
enter -0x7ebe, 0x7e
jle 0x405ba4
mov bl, 0x13
out 0x28, eax
jg 0x405c90
jp 0x405c3d
sbb edx, dword [rcx - 0x8a4ce9]
jg 0x405bb1
mov esp, 0x8060d740
div r8b
add ch, cl
test dword [rax - 0x80], edi
mov ebp, 0x83049e80
pushfq
shr byte [rax], 0x2f
enter 0x4e80, -0x62
popfq
adc al, byte [rcx + 0x35600a5f]
jb 0x405c3e
mov word [rbx - 0x7f], es
push rdi
or byte [rbx + 0x24], 0x93
lodsb al, byte [rsi]
cmp esi, 0xb1020655
mov byte [rdi], dl
enter -0x7df5, 0x59
scasd eax, dword [rdi]
adc dword [rbp - 0x44], 0x82d54290
out 0x13, eax
jb 0x405c7d
cmp bh, byte [rbx + rax*4]
fistp word [rax]
loop 0x405ce9
test byte [rbx - 0x60b1e981], al
add eax, 0x4ae8e42f
retf
cmp dword [rdi + 0x4eb3c85e], 0x2c
test byte [rdi], bl
sub byte [rsi + 0x58], 0x84
sahf
jo 0x405c9b
adc dword [rdi - 0x3c387b75], 0x23
in al, 0xc9
sbb al, 0x99
test byte [rbp + 0x4f], ch
add eax, 0x84df2f06
cmpsd dword [rsi], dword ptr [rdi]
int1
test byte [rbx - 0x48b0de88], dl
pop rdx
pop rbx
pop rax
test edi, ebx
sbb al, 1
pop rsi
enter 0x3deb, 0x7b
test edi, ebx
fiadd dword [rax - 0x7361b9be]
and eax, 0xf000860c
sahf
xchg byte [rdi - 0x79cfdbae], ch
cmc
sahf
jg 0x405d58
add dword [rbx + 0x233e786], -0x5f
cmp byte [rdi*4 + 0x71482786], ah
jo 0x405cf8
xchg dword [rdi - 0x70], ebx
scasd eax, dword [rdi]
or esp, esp
leave
cmp al, byte [rdi - 0x30d8789f]
js 0x405c83
in eax, 0x87
jmp qword [rbx + 0x78]
cwde
jb 0x405cfd
in al, 0x20
mov byte [r14 + 0x6c], al
fidivr word [rdx + 0x21]
jne 0x405ca0
in eax, dx
retf
mov byte [rbx + 0x11], ah
nop
lahf
and al, 0x89
push rsp
or esp, dword [rax + rdx*4 - 0x6f]
jp 0x405d4b
mov ecx, esp
test dword [rcx + rax*4], edi
mov bl, byte [rdi - 0x75d771b0]
jp 0x405cba
cmc
add dh, byte [rdx - 0x76]
mov ch, 0x8a
push rdx
jno 0x405d8b
out dx, eax
cmp dh, ch
mov al, bh
cmp dword [rcx + rbx], 0x486dc539
mov esi, dword [ebp + 2]
stosd dword [rdi], eax
cmp byte [rbx + rcx*4 - 0x3773daf1], bh
xor edi, dword [rax - 0x7f]
imul dword [rcx + 0x7a74478c]
mov word [rcx + rcx*4], ds
pop rsi
cli
push qword [rax + 0x6d]
sub esi, ebp
sahf
adc byte [rbp + 0x2f8d2480], cl
nop
pop rsi
and byte [rdi], ah
lodsd eax, dword [rsi]
xlatb
dec byte [rbp + 0x40204e90]
xlatb
mov cs, word [rdi + 0x630b8a16]
jbe 0x405d19
adc byte [rax - 0x7cb50a99], dl
mov fs, word [rdi + 0x30127424]
test byte [rbx + rdi*4 + 0x3cf78e8e], bh
movabs dword [0x2cfe7f8f5b313217], eax
nop
sbb dword [rcx + rax*2 - 0x705d708f], 0x3c
cmp eax, dword [rcx - 0x7020d8eb]
jbe 0x405dfc
out dx, eax
test esi, ebx
add edi, dword [rdi - 0x1cefffe5]
xor al, 0x81
pushfq
stosb byte [rdi], al
nop
jle 0x405d65
or ebx, dword [rcx]
or dword [rax], edi
int3
nop
jg 0x405d7d
mov dl, byte [rbx]
pop rax
shr al, 0x90
adc edx, dword [rcx + 0x10276790]
xchg eax, ecx
cmpsd dword [rsi], dword ptr [rdi]
cmpsd dword [rsi], dword ptr [rdi]
mov r11d, 0x7cbc2790
xchg eax, ecx
or dh, byte [rcx + rbp*4 + 0x47]
or byte [rbp + 0x48], dh
sar byte [rsi + 0x2f067f91], 0xb0
adc ebx, ebx
xchg eax, ecx
xlatb
out dx, eax
xchg eax, ecx
out dx, eax
ror qword [rbx], 1
jns 0x405dee
jo 0x405e3d
xchg eax, edx
cmpsd dword [rsi], dword ptr [rdi]
test eax, edx
adc edx, dword [rdx - 0x1f887ee9]
test dword [rcx + rbp*8], edi
iretd
xchg eax, edx
cmpsd dword [rsi], dword ptr [rdi]
jbe 0x405e6e
adc eax, 0x9d9e493
sub al, 0x57
xchg eax, ebx
mov edi, 0x63903da6
add eax, 0xa793852f
xlatb
loopne 0x405dc3
mov word [rbx + rcx*8 - 0x6bfd3c6d], ds
and al, 0x4e
enter 0x6711, -0x3a
cmp dword [rbp - 0x6c], 0x1f
or ebp, dword [rdi + rdx + 0xe87a2f2]
xchg eax, ebp
iretd
and spl, r10b
xchg eax, edx
xchg eax, ebp
loop 0x405df6
std
cmp al, 0x9c
cmp al, 0x7b
and dword [rax], esi
xchg eax, esi
mov word [rcx + 0xa], cs
in al, 0xe4
and byte [rbx + 0x36303e80], al
enter 0x759, 0x19
pushfq
mov bh, 0x76
xchg eax, edi
sub eax, 0x3902f058
out dx, eax
xchg eax, esi
cmp dword [rdi - 0x7fb8de99], edx
adc ecx, dword [rdx + 0x252c0797]
je 0x405edb
cmp byte [rdi - 0x15971869], ah
xchg eax, edi
in al, 0x48
mov bh, 0x24
or dword [eax + 0x4e302f0], ebx
cdqe
cbw
mov ebx, dword [rbp - 0x38]
pop rdi
mov al, 0x17
add byte [rsi + 0x20], cl
shr dword [rbx], 1
rcr byte [rax + 0x30995f57], 1
jp 0x405ee4
iretd
rcr byte [r8 - 0x64], cl
cdq
and bl, byte [esi + 0x60]
mov ecx, 0x99cc8f99
int1
mov edi, 0xf9a2ad4
lodsb al, byte [rsi]
call 0x4f672367
ror byte [rcx], 1
pop rdx
test ecx, 0x2720e49a
iretd
mov edi, 0x638d513e
wait
enter 0x17b3, -0xe
test dword [rdx - 0x36], edi
wait
out dx, eax
ret
and dl, byte [rax - 0xfa14cff]
wait
ljmp [edi]
sub al, 0xe2
cld
wait
imul eax
pushfq
and dword [rdx], edi
add dword [rcx], 0xf79c463f
adc ebx, dword [rax + 0x75]
add al, byte [rsi - 0x61255064]
popfq
movabs al, byte [0xe43400d79d3dbf9c]
leave
sub qword [rsi - 0x63], r10
leave
cmp byte [r9 - 0x6262d100], al
test dword [rax], 0x190bc89e
sub edi, dword [rdi - 0x6361c578]
rol byte [rax + 0x279e5f13], 0x85
sahf
adc byte [rax - 0xf00f7e9], ah
sahf
cmpsd dword [rsi], dword ptr [rdi]
in al, 0xe4
sbb dword [rdi], esp
sub byte [rdi + 0x468880cf], bl
loopne 0x405ef7
pushfq
sbb al, 0x4a
lahf
jbe 0x405ef5
lahf
and byte [rsp], dh
iretd
lahf
pop rdi
cwde
add bl, byte [rsi - 0x34]
lahf
scasd eax, dword [rdi]
outsb dx, byte [rsi]
xchg byte [r15 + 0x67], r13b
mov dword [rbp - 0x57], esp
and byte [rdi + 0x47], r9b
movabs al, byte [0xcc027446392fa082]
movabs al, byte [0x51193c8138685857]
and ah, byte [rcx - 0x37ec5ea5]
or dword [rdi + rbx*8], eax
outsb dx, byte [rsi]
movabs eax, dword [0xd8bfa18891c8c9a7]
cmp bh, byte [rax]
adc dword [rdi], edx
jb 0x405f9c
mov ebp, 0xa173fca1
and al, 0x38
adc edi, 0x68bfa251
xchg eax, ecx
and eax, dword [rax]
movsxd rsp, dword [rdx - 0x5ddd01d9]
adc ecx, eax
xchg eax, ebx
adc ch, byte [rbx - 0x5e]
mov ch, 0xa2
add dword [rdi - 0x70], 0x87a2df5f
jne 0x405fe4
movabs eax, dword [0x64f2a3a7e7a35b38]
in al, 0x48
pop rdi
retf
push rcx
test byte [rdi], ch
movsb byte [rdi], byte ptr [rsi]
xor bl, ch
push 0x64995fa4
xchg eax, edx
adc edi, dword [rdx]
and ecx, esp
movsb byte [rdi], byte ptr [rsi]
jb 0x405fc2
nop
sbb eax, 0x3e4fa56a
outsb dx, byte [rsi]
mov ch, 0xa5
test dword [rsp + rax - 0x5a0cf199], ecx
add dword [rdi*4 - 0x59e5d8c0], 0x902f00e7
cmp ah, byte [rax - 0x590c485a]
mov esp, 0x4f813840
outsd dx, dword [rsi]
cmpsd dword [rsi], dword ptr [rdi]
test dword [rdi + 0x55813aa9], 0x3fa7a1cf
cmp dword [rcx + 0x76], edi
add dh, byte [rdi]
test al, 0xef
in al, dx
push rsi
mov esp, 0x5fa80ec0
xchg byte [rax - 0x176fd8f1], ch
add al, 0xdf
test al, 0xcf
sub dword [rcx + 0x45813a8c], ebp
test eax, 0xd9f2130f
or edx, eax
test eax, 0x40176077
leave
pop rax
hlt
movsb byte [rdi], byte ptr [rsi]
add ebx, dword [rdi + 0x26]
sbb dl, bh
or al, 0x18
vpmulhuw xmm12, xmm14, xmm3
test eax, 0xc08faa19
movabs byte [0x813ae7aa4ef8c85e], al
popfq
jne 0x406035
movabs r10, 0xab095f01027336aa
cmpsd dword [rsi], dword ptr [rdi]
jo 0x4060a3
jns 0x406110
sub rbp, qword [rbx - 0x6fb25f89]
xchg eax, ebx
js 0x406076
jbe 0x406051
call 0x2c50583a
loopne 0x4060b3
jb 0x406039
stosd dword [rdi], eax
fsubr qword [rbx - 0x261bd091]
or dword [rip + 0x72d05fac], edx
jle 0x40606b
movsb byte [rdi], byte ptr [rsi]
push rsp
hlt
lodsb al, byte [rsi]
wrmsr
adc byte [rdi], 0xf2
js 0x406143
cmp ch, byte [rbp + 0x156321ef]
test byte [rbp + 0x190bbf6f], ch
sub edi, dword [rax - 0x61]
lodsd eax, dword [rsi]
xlatb
cmp al, byte [rcx]
jp 0x406064
rcl dl, 1
lodsd eax, dword [rsi]
sbb byte [rsi + 0x706724ef], ch
add al, byte [rbx - 0x3b27e852]
or dword [rdx + rdi], esp
xchg eax, esp
scasb al, byte [rdi]
outsd dx, dword [rsi]
mov ecx, 0xe42720ae
pop rdi
retf -0x3b1
scasb al, byte [rdi]
mov byte [rsi + 2], cl
scasd eax, dword [rdi]
xchg eax, edi
or al, 0xe2
scasd eax, dword [rdi]
leave
stosb byte [rdi], al
scasd eax, dword [rdi]
movsb byte [rdi], byte ptr [rsi]
out dx, eax
scasd eax, dword [rdi]
cmp eax, ecx
leave
adc esp, dword [rdi - 0x6e]
push rbp
or dword [rax + 0x3c85e902], esi
test byte [rax + rsi*4 + 0x813a22f], bl
cmc
sal byte [rax - 0x714eadb1], 1
adc byte [rdi + 0x623fb1b9], dl
jo 0x406158
sahf
jno 0x40618a
mov dl, 0xff
mov bl, 0x1a
in al, 0xc9
pop rbp
add dword [rax], edx
mov dl, 0xdd
pop rsp
or dword [r15], ebp
in al, 0x60
mov dh, 0x72
movsb byte [rdi], byte ptr [rsi]
mov dl, 7
jns 0x4061b7
in al, 0x96
jmp 0x40611d
out 0x84, eax
cmp esp, esp
in al, 0xd9
or esi, dword [rbx + rsi*4]
mov dword cs:[rdi], esp
mov al, 0x57
sbb dword [rax + rax - 0x69], edi
mov bl, 0x47
cmp byte [rcx - 0x4c1fd100], al
scasd eax, dword [rdi]
div byte [rbx - 0x7b8dec7f]
insb byte [rdi], dx
and dh, byte ss:[rdi + rax*4 + 0x3c85e830]
in al, dx
push 0x79
mov ah, 0xc7
or edi, dword [rcx + 0x46]
xchg eax, ebp
mov ah, 0xf7
rol byte [rsi - 0x3d86c6f9], cl
adc eax, 0x76e4afb5
adc al, 0x74
mov ch, 0xe
call 0x17cc8215
neg dword [rcx]
ret 0x8c2e
sbb bh, byte [rdi]
movabs al, byte [0x1c9007416391ba2f]
xlatb
rol byte [rcx], cl
and al, 0x5e
enter -0x3538, -0x4b
or bl, byte [rsi + rsi*4]
jg 0x4061d8
stosd dword [rdi], eax
mov ecx, 0xefb6536e
nop
xchg eax, ebx
hlt
movabs eax, dword [0x790bc1325018a7b6]
jb 0x4061b7
mov dh, 0x50
movsxd rsi, dword [rdi]
mov bh, 2
test eax, 0xc0bf8178
mov bh, 7
jmp 0x406200
add dh, byte [rcx - 7]
mov bh, 0xf7
pop rdi
mov eax, 0x42ee9e67
xchg rax, rbx
adc cl, byte [rcx + 0x8c64f20]
jg 0x406215
movabs dword [0x27b9294ea40bd5b8], eax
retf
mov ecx, 0x1813a240
neg edi
mov ecx, 0x11813acf
pushfq
mov edx, 0xd5ba8497
or ebx, dword [rcx]
movabs eax, dword [0x604e0cf2badd64d7]
fbstp tbyte [rbx + rdi*4]
cmp byte [rax + 0x17], dh
repne movsb byte [rdi], byte ptr [rsi]
push -0x45
ret
test al, 0xc0
or dword [rax + rax*4 - 0x4425a045], ecx
xor eax, dword [rax - 0x7c08b7ed]
mov esp, 0x2f0279a7
lodsb al, byte [rsi]
fxch st(0), st(6)
mov esp, 0x90727157
cmp dword [rbp + 0x4c], eax
mov ebp, 0x391955d8
adc bh, byte [rsi + rbx*4 + 0x7b80efbd]
xor esp, dword [rax + rdi]
cmp dword [rax], 0x77be0dbd
xchg eax, ecx
movsxd rdx, ebp
or dword [rdx - 0x42], ecx
xchg eax, edi
movabs dword [0xbeffbe982093c813], eax
shl byte [rcx], 0x39
shl dword [rbx], cl
mov edi, 0x8c09d57
mov edi, 0x10bfa0df
call 0xffffffffd48f68b0
mov edi, 0x50813817
cmp eax, eax
wait
rol byte [rsi], 0xc0
or dword [rdi + rbx*2], esp
jmp 0x40fda281
add al, 0x67
shl edi, -0x5b
rcl dword [rbx - 0x18ab7ec6], 0x13
ret 0xf29f
movsb byte [rdi], byte ptr [rsi]
pop rsi
enter -0x7f9f, -0x45
ret 0x1b87
imul esi, eax, 0xf8178302
ret 0x1da7
ret
in al, 0x85
jne 0x4062ee
pop rdi
jge 0x406322
add bl, 0x76
jb 0x4062a0
or ebx, dword [rdi + 0x5b44802f]
and ebp, esp
cwde
or al, 0xe1
repne lodsd eax, dword [rsi]
test byte [rax + 0x7d], bh
ror byte [rbx], 1
jns 0x406364
jne 0x40630a
div dword [rax + 0x48]
sub bpl, r8b
ja 0x40633c
push 0x5e2240c5
and byte [rdi + 0x77], dl
cmpsd dword [rsi], dword ptr [rdi]
nop
xchg eax, ebx
pushfq
xchg eax, edx
and eax, 0x790bd92e
jb 0x40632e
cmp dh, byte [rbx + 0x6e]
retf
xor esp, edx
nop
rcl al, 1
out dx, eax
or bl, cl
or esp, dword [rcx - 0x3969e8dd]
cmp al, byte [rcx - 0x4f48dcc4]
or al, 0x7a
and dword [rdi - 0x29], ecx
loopne 0x4063b1
stc
jg 0x4063ab
and cl, dl
or dword [rdi - 0x39], edx
xchg dword [rdx - 0x39], edi
adc byte [rdi], ah
adc byte [rax], cl
mov ch, 0xc7
loop 0x4062f4
adc cl, ch
fstp st(4), st(0)
pop rbp
mov esp, 0xdbcfc87b
adc al, byte [rcx - 0x64]
nop
or ebp, dword [rdi]
jbe 0x4063a0
in eax, dx
enter 0x4e, 0x38
cmp dword [rdi], 0x8d37c919
pushfq
sbb al, 0xe4
test byte [rdi - 0x57367391], ah
int1
add ah, bl
nop
cmpsd dword [rsi], dword ptr [rdi]
leave
outsd dx, dword [rsi]
mov ebx, 0x939072c9
fild word [rax + 0x2f]
push rdx
fxch st(0), st(1)
jb 0x40635b
call 0xffffffffe00a8ab9
cmp al, byte [rdi + 0x71]
add bh, byte [rcx + 0x32]
cmp al, 0x7d
retf -0x356d
adc eax, esp
add al, 0x46
out dx, eax
mov al, 0xca
jg 0x4063e9
mov ebx, 0x17e4cf90
loop 0x406412
js 0x4063f3
iretd
jp 0x406421
retf
cmpsd dword [rsi], dword ptr [rdi]
insb byte [rdi], dx
retf
stosb byte [rdi], al
pop rsi
enter 0x5713, 0x2b
jp 0x4063a8
retf
add dword [rsp + rbx*4], 0xcbf49f40
jg 0x406435
add dword [rdi + 0x38], ecx
int3
adc byte [r15 - 0x1bf62609], r9b
leave
or eax, 0xccbccc5f
cmpsd dword [rsi], dword ptr [rdi]
add eax, 0x42e42f16
movsxd rsp, dword [rcx*8 + 0x409c69f]
jnp 0x4063dc
iretd
movabs al, byte [0xc5f07243a2c7ffcd]
int 0xbf
mov word [rdx + 0xd], fs
nop
and esi, dword [rsi + 0x7fedcdf0]
stc
mov edi, 0x747263b3
jae 0x4064a2
jne 0x406496
movsxd rbx, dword cs:[rdi + 0x4a]
push r10
pop rdi
push r11
push rsp
or edi, edi
lodsd eax, dword [rsi]
std
adc al, byte [rax]
jb 0x4064aa
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
in eax, dx
in eax, dx
frstor dword [rbp + 0x73]
and dword [rdi + rbp*2 + 0x5f], esp
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x4064c5
jne 0x4064e1
add bh, bl
fld xword [rdi + 0x42]
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x4064de
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x10243538
cld
pop rdi
imul bp, word [rsi + 0x69], 0x7208
jb 0x4064e9
jns 0x4064e9
outsb dx, byte gs:[rsi]
je 0x406500
jns 0x406493
out 0xbe, al
mov ebp, 0x656d61d9
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x4064cf
or eax, 0x84fedd5f
jne 0x4064cd
je 0x4064d0
jae 0x406517
jne 0x40651c
movsxd rsp, dword [rbp - 0x5f]
jo 0x40651f
idiv byte [rdi + 0x74535a29]
xor qword [rcx], r15
jo 0x406525
adc byte gs:[rdi - 0x62], dh
xor bh, byte [rsp + rdi*4 + 0x6d]
out dx, al
fld xword [rsi - 0x5c]
jb 0x40653f
movsxd rsi, dword [rdx + rbx + 0x18]
cmp byte [rcx + 0x73687467], bh
mov bh, 0x5b
mov ebx, 0x12406461
imul esi, dword [rsi + 0x1f], 0x19187670
imul ebp, dword [rbx], 0x7b
or byte [rbp + 0x32], al
xor byte [rip - 0x4a50b6b4], dl
sbb dword [rip - 0x358a8e9b], esi
cwde
ficomp word [rdx + 0x7b]
xor byte [rbp + 0x75], ch
xlatb
out 0x63, eax
imul edx, dword [rax - 0x6e], -0x4f
or ebx, ebx
sub eax, 0x2b741470
xor dh, byte [rsi + 0x753d853b]
outsb dx, byte [rsi]
sub eax, 0x6e2c394e
jne 0x4064e9
mov ch, 0xf6
pop rbx
in al, dx
js 0x406599
stosd dword [rdi], eax
movsxd rbp, dword [rax + 0x61]
outsb dx, byte [rsi]
pop qword [edx + ecx*2]
fstpnce st(7), st(0)
push r8
push rsi
imul ebp, dword [rcx + 0x27], 0xb5953532
sti
pop rdi
jae 0x4065a9
or eax, 0xda2d2e8c
or eax, dword [rbx]
enter 0x6437, 0x42
jo 0x4065ae
je 0x406563
loope 0x406501
cmp ecx, esp
pop rbx
jnp 0x4065c0
outsd dx, dword [rsi]
sub dword [rdx + 6], 0x3306d743
cli
mov ah, 0x61
xchg eax, edx
and ebx, ebx
fidiv dword [rbx + 0x69361467]
push rsp
pcmpgtw mm4, qword [rax + 0x10]
loope 0x406535
xchg byte [rcx], dh
stc
in al, dx
insb byte [rdi], dx
je 0x406591
sbb al, 0x6e
mov al, 0xbf
outsd dx, dword [rsi]
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x1b304845
insb byte [rdi], dx
xor ecx, dword [rsi + rsi*8]
sbb dword [rcx], edx
xor ebx, ebx
cld
outsd dx, dword [rsi]
adc bh, byte [rdi - 0x68]
fisttp qword [rsi]
xor byte [rdi + rbp*2 + 0x33423e70], dl
sbb r12d, dword [rcx - 0x3d]
jl 0x4065b0
cwde
push rbp
jo 0x406557
out dx, al
mov ebp, 0x423cddf1
push rbp
scasb al, byte [rdi]
push rbx
pop r10
cmp bl, dh
js 0x4065ba
in eax, dx
pop r8
and eax, dword [rbp + 0x4e]
push r12
int1
sbb esi, dword [rdx + rax*2 + 0x61]
in eax, dx
out dx, eax
fiadd word [rdx + rbp*2]
xor dword [r11 + 0x54455250], r12d
push rsp
pop rcx
pop rdi
push rbp
push r12
adc byte [rbx + 0x61], r11b
jmp 0x40666d
and dh, byte [rcx]
xor ah, byte [rbx]
push rax
movsxd rax, dword [rdx + rsi*8]
outsb dx, byte [rsi]
ret 0xc3f
sub byte fs:[rsp + rbp*4], dh
push rdx
imul edx, dword [rbx - 2], 0xfe958530
jbe 0x406652
jo 0x40665f
and dword [rip + 0x42b46334], ebp
ret
xchg eax, ecx
xor dl, bh
enter -0x3c97, -0x5f
mov ecx, 0x7a693f0b
or eax, 0xfb207460
pandn mm1, qword [rbp*4 + 0x4773300f]
xor r15b, byte [rdx + 0x75bdbbb4]
pop rdi
pop rdx
cmp byte [rbx + 0x68376957], dl
push 0x76
jp 0x406602
outsd dx, dword [rsi]
adc eax, 0x4d415246
push 0x4e
pop rcx
popfq
or ebx, ebx
sub dword [rip + 0x554e474f], 0x48
and byte [rax + 0x44], cl
push rdx
adc al, byte [rsi + rsi + 0x21]
mov ecx, 0xb4e59db
sbb edi, dword [r15]
adc byte fs:[rax - 0x66e91b54], bl
jne 0x4066ca
mov ss, eax
jle 0x4066da
push rbx
rcr dword [rdi + 0x54], 0x41
xor esp, dword [rdi + 0x1a]
fistp qword [rsi + 0x49]
insd dword [rdi], dx
xor byte [rbp + 0x49], al
push rax
cmp dword [rcx + 0x6e], ecx
jo 0x40663b
imul r9d, dword [rbp + 0x3c], 0x16dc21b5
xor dword [rcx + rbx*8], esi
push 0x75
and cl, byte [rcx]
jle 0x4066fc
sbb r14, qword [rbx]
int 0xb0
test eax, 0x185fff6b
insd dword [rdi], dx
scasd eax, dword [rdi]
pop r8
sbb al, 0x15
std
fadd st(2)
mov cl, 0x35
adc al, 0x49
sub al, 0x54
sub dh, byte [rsp + rsi*2]
jns 0x406741
cmp dh, bl
xor byte [rbx + 0x38], dl
push -0x1ea442ca
insd dword [rdi], dx
cmp edi, dword [rcx + 0x61537639]
add dh, byte [rdx + rsi + 0x33]
rcr byte [rax + rsi*4 - 0x6e], cl
imul esi, dword [rax - 0x2b], 0x26bd162b
jne 0x4066a3
pushfq
xor rsi, qword [rsi]
fiadd dword [rip + 0x4939dae7]
jno 0x406731
rcr dword [rdi + 0x42], 0x1e
xlatb
hlt
insd dword [rdi], dx
insb byte [rdi], dx
push rax
jbe 0x4066e9
add dword [rax], eax
pop rbp
sar byte [rax + 0x45694b3d], 0x4c
movabs al, byte [0x3296180df6e14c2c]
add eax, 0xf1515352
mov ah, 0xd
jnp 0x406783
push rbx
xchg eax, r13d
lodsb al, byte [rsi]
cqo
out dx, al
sbb bl, byte [rsi]
sar dword [rdx], 7
push rax
cmp byte [rdx + rsi*4 + 0x43], dl
xor dl, al
sbb al, 0x6e
stc
xor byte [rcx + 0x31], cl
rol byte [rdx], 1
xor ebp, ebp
xchg dl, al
push 0x443a374f
jbe 0x4067c7
lodsd eax, dword [rsi]
or byte [rbx + 0x60], 0x36
leave
psubq mm1, qword [rsi + rcx*8]
ret 0x6e5f
movsxd rbp, dword gs:[rdx + 0x63]
sbb dword [rbx], 0x22342226
sbb eax, 0x7bdd3154
mov dh, 0xd4
iretq
cmp byte [rsi - 0x4a], bpl
xor byte [rdi + 0x1178d972], 0x5c
mov al, 0x71
sub al, 0x71
cmc
movabs eax, dword [0x3bae3073ac4db384]
fcomp qword [rbx + 1]
pop r15
push 0x5f3486ab
xor dl, al
mov dh, 3
jbe 0x406780
pop rcx
enter -0x1326, 0x57
enter -0x167, -0x74
movsd dword [rdi], dword ptr [rsi]
mov al, 0x25
xor cl, byte [rcx - 0x3e0f5e24]
cmovp r10d, dword [rbx - 0x13]
scasd eax, dword [rdi]
add byte [r9], r11b
xor bl, byte [rsi + 0x4a833054]
jb 0x406768
xchg eax, ecx
rcl qword [rsi], 0x42
xor byte [rcx + 0x6638fca5], al
fidiv dword [rdx + 0x34]
or al, 0x6e
test al, 0xb
xor al, 0x62
fdivr dword [rdx - 0x6ca31e0f]
xor al, 0x8d
imul esp, dword [rsi - 0xf], 0x5374fd6d
out 0x8b, eax
jge 0x406865
ret 0x6269
jne 0x4067c4
imul rax, qword [r13 - 0x7d], 0x1ff1a142
push rcx
movsb byte [rdi], byte ptr [rsi]
movabs al, byte [0x81dd67e95c99358c]
cmc
jnp 0x40687f
sti
pop rbx
ret
adc eax, 0x3631c9a9
cmp byte [rax], dh
rol dword [r11], 1
xor dh, byte [rdx]
fisubr dword ds:[rdi - 0x3a]
xor al, 0x38
xor esi, dword [rsi]
add eax, 0x86c34e7f
mov ebx, 0xbc68ed6d
popfq
jb 0x4067f9
jae 0x4068b3
test byte [rbx + rbp*2 + 0x6f819287], dh
cmp al, 0x5e
insd dword [rdi], dx
jne 0x40689f
jnp 0x4068b9
in eax, dx
push rdi
push rdx
add dh, byte [rip - 0x1465ce04]
out dx, al
jns 0x4068a6
loopne 0x40682d
out 0x37, eax
and ch, byte [rbx + rbx*2 - 5]
insd dword [rdi], dx
and eax, 0xe6412e3a
xor eax, 0x45832976
xor byte [rdi + 0x7ce6724d], al
clc
insd dword [rdi], dx
lahf
adc eax, 0x49536568
fsubr qword [rbp + 0x6f]
jbe 0x406821
push rdx
jnp 0x40683d
and eax, 0x91753255
cdq
fiadd dword [rcx + 0x725f1c5f]
mov cl, 0x59
jnp 0x4068a8
leave
fcom dword [rdx - 0x8cbc192]
adc al, 0x71
and rax, 0xffffffffba686a44
int1
pop rsi
or dword [rsi + 0x844f051], ebp
js 0x4068e9
ja 0x4068ae
push rdx
retf
adc eax, 0xa8c7244b
movsxd rsp, dword [r11 + 0x49]
sub edi, dword [rsp + rbx*8 + 0x4e]
adc edi, dword [rcx]
je 0x40692a
push rbx
psubq xmm0, xmm0
test byte [rdx + 0x11], al
add eax, 0xb06c9c8b
test dword [rdi - 0x6a961c74], 0x9bc15f36
hlt
js 0x406923
fsubr qword [rbx - 0x25]
xchg eax, esi
mov ecx, 0x733d61a1
sbb al, ah
fcomp dword [rsi + 0x26]
or eax, 0x71df3200
mov eax, 0xcda53070
stosb byte [rdi], al
movsxd rbp, dword [r15 + rbp*4 - 0x43]
xor ebx, dword es:[rsi]
sub eax, 0x44463
sal dword [rip - 0x5443f854], cl
xor byte [rsi], dh
loope 0x40695e
test byte [rip - 0x7bb9925e], al
or byte [rsi - 0x167f7947], al
mov bl, 0xfe
jnp 0x406947
nop
cdq
fsubr qword [rbp + 0x6d]
xor eax, 0x52612fee
or al, 0x9d
xor al, 0x73
ja 0x40699c
jo 0x4069b8
and edx, dword [rdx + rax]
or byte [rdx + 0x71], al
push r11
cmp dh, byte [rsi]
adc edx, dword [rbp + 0x69fe497e]
imul r12d, dword [r9], 0x5457ab11
movabs byte [0x7477205b02186626], al
pop rsp
mov ebp, dword [rbx + rcx + 0x4b]
loopne 0x406942
xor dword [rax + rdx*4 + 0x60], edi
push -0x439d41d3
or eax, 0x52bdcb6d
out dx, al
mov fs, rsp
mov byte [rbx + 0x66144f2], al
xchg eax, ebx
jne 0x406944
rol byte [rcx + rsi - 0x34], 1
push rax
mov bl, 6
rcl byte [rip - 0x49b3e7ef], cl
cmp dh, byte [rdx]
mov ebp, ecx
mov dl, 0x51
xor dh, byte [rdi]
mov al, 0x36
jns 0x406a17
jp 0x4069ab
movsxd rbx, dword [rbp + 0x298433f]
test byte cs:[rsi - 0x737d4dcf], dl
and dword [rip - 0x7f1bf6bd], esi
rcl byte [rdi], 0x5b
xor eax, 0xa58950db
add qword [rdx - 0x3a5c8cba], rsi
sbb ecx, dword [rip + 0xd427317]
insd dword [rdi], dx
lodsd eax, dword [rsi]
mov al, byte [rbp + 0x424965be]
pop r8
xchg eax, ebp
xor eax, dword [rdi + 0x5af16583]
not dword [rcx + 0x17]
and al, 0x33
jo 0x406997
add ah, byte [rbx]
and dl, byte [rsi + 0x2e]
xor byte [rax - 0x6a], bh
je 0x406a22
sub al, 0x8c
add byte [rbx + 0x24b170ed], ch
mov dh, 0x59
xor al, byte [rdx + rax*4 - 0x3c946cfc]
fmul st(4)
cmp al, 0xd7
jbe 0x406a3b
fild dword [rax + 0x44823653]
xchg byte [rcx - 0x4fd79c39], cl
int 0x9e
pop rax
lea eax, [rdx]
retf
push 0x5dc16c0b
pop rax
leave
jnp 0x406a1a
js 0x406a39
cmp dh, ch
push 0x73
mov ecx, 0x1c5f19da
jo 0x406aae
mov ch, 0x76
int1
and al, 0x4b
adc al, 0xd
mov ebp, 0x497612b3
cmp al, 0x50
and al, 0x15
mov ebx, dword [rcx]
xlatb
jns 0x406ac8
jmp 0x406a98
and byte [rcx - 0xf0db6df], ah
mov byte [rax + 0x6e497183], bpl
cmp dh, byte [rax + 0x1b]
jno 0x406a98
mov byte [rdx + 0x16], ah
sbb eax, 0xef44a3f0
outsd dx, dword [rsi]
jns 0x406a74
nop
shr byte [rcx + rbp + 0x1e136403], 0x64
shl ebp, 1
pop rax
movabs dword [0xa0a10a1707d39d9], eax
mov ah, 0x1b
adc byte [rsp + rax*2 + 0xf], cl
stosb byte [rdi], al
sub byte [rdx - 0x1e], ah
mov bl, 0x2f
ret 0x5548
jns 0x406ae8
retf
pop rax
or ch, ch
xchg dword ss:[rax + 0x373d6231], edi
ror dword [esi + 0x6f], 0x3c
rcr dword [rbx + 0x65], cl
add al, 0xca
adc dword [rsi], esp
add ecx, dword [rax]
fbstp tbyte [rcx]
sbb bh, al
jns 0x406a93
pop rdx
lahf
xor dword [0xffffffff8c226f62], esi
ret
imul esi, dword [rax], 0xcd1ec527
push rax
xlatb
xor dword [rax - 0x74f7f2b7], edi
nop
sbb cl, byte [rsi]
cmp dword [rbx + 0x6c], esp
in al, dx
or byte [rsi + 0x33], dl
pop rax
nop
jb 0x406aac
xor dl, byte [rsi]
sbb byte [rip - 0x1e89ea5c], cl
mov cl, 0xa4
add dh, dl
sbb cl, al
xchg eax, esi
or ecx, dword [rdi + rax*4 - 0x22213f5d]
fadd qword [rbx + 0x3392c253]
movabs eax, dword [0xf46a45ec89b6630]
jl 0x406b34
movsxd rsp, dword [rbx]
adc eax, 0xc3c039e1
movsxd rbx, dword [rdx + 0x6ad87537]
fdiv qword [r15 + 0xd]
jo 0x406b7a
xchg eax, esi
pop rdx
and ah, dh
nop
push rdx
js 0x406ae0
mov word [rsi - 0x7319e510], fs
adc byte [rdx], ah
movsb byte [rdi], byte ptr [rsi]
sbb al, 0x3c
push rsi
ret 0x1884
xchg dword [rdx - 0x3c], esi
loope 0x406b0a
imul ebx, dword [rsi - 0x7b4f6fac], -0xf
add rax, 0x1810a820
leave
sbb bl, dl
movsd dword [rdi], dword ptr [rsi]
push rdx
or byte [rax + 0x60], dh
jae 0x406af3
and ah, byte [rbx + 0x23b1f7a6]
fnstenv [rdx]
xchg eax, esp
add al, 0xdd
pop rdi
push rsi
jbe 0x406bb4
cmp byte [rbp + 0x61], ch
js 0x406b67
jp 0x406afb
cmp cl, bl
sub dh, byte [rcx]
cmp byte [rdx - 0x67], ch
insb byte [rdi], dx
sub edi, dword [rbp + 0xc752543]
add byte [rbp + rax*4 + 0x42188bd4], cl
xor eax, 0xe74227da
or dword [rip + 0x44acb0e], ebx
cmc
xor r11b, spl
insb byte [rdi], dx
adc eax, 0xc0c87b47
xchg eax, ecx
sub byte [r9 + 0x69], bpl
adc al, 0x21
push rbx
and bl, ch
add cl, cl
leave
pop rax
rol byte [rdx], cl
add al, 9
and ah, byte [rax + 0x59]
adc dword [rax], 0x215c4908
mov ah, 0xb0
not esi
xor dh, byte [rcx]
sub al, byte [rcx + 0x416d6702]
ret 0x7368
loopne 0x406be0
jbe 0x406c17
mov word [rax + 0x3294654c], ss
loop 0x406c31
sub rax, 0x2b104349
adc byte [rdx], dl
and bl, dh
out 0x62, al
or dword [rbp + 5], eax
push rcx
movsxd rbp, dword [rax]
js 0x406ba5
mov al, 0xa3
jp 0x406c09
and dword [rdx + rdi], eax
jg 0x406c15
sub dword [rcx - 0x50], ecx
mov esi, 0x82934b72
push rcx
add al, 0x69
sar dword [rax - 0x3b], cl
mov edx, 0x2e331250
cmpsb byte [rsi], byte ptr [rdi]
ret
js 0x406bbd
jb 0x406ca0
nop
fmul st(0)
mov byte [rdx - 0x1122d5f3], dl
rcl al, 1
jbe 0x406c66
pop rsp
jo 0x406bfd
movsxd rdx, dword [rbp - 0x50]
cdq
xor dh, byte [rsi + 0x23]
movsd dword [rdi], dword ptr [rsi]
cmp dword [rbx + 0x56], eax
and dword [rax + rdi + 0x46d6ae81], eax
mov al, 0x50
sub esi, dword [rdx]
xchg eax, esi
sub al, 0x41
or ah, byte [rbp + rax*2 - 0xb]
xchg eax, esp
mov ah, 7
imul esi, dword [rsp + rsi], 0x21356522
adc esp, dword [rsp + rbp + 0x42]
mov byte [rcx], cl
jp 0x406c7a
or ah, byte [rcx + 9]
ja 0x406c1a
test ch, dh
cwde
or al, byte [rcx]
sub al, 0x42
sub al, 0xbb
rol dword [rcx + 0x39e426ef], -0x7d
pop rsp
imul esp, dword [rbp + 0x75], -0x56
adc eax, 0x223c0c1a
rol dword [rsp + rax + 0x66a4c2d2], 1
jae 0x406cd5
mov al, 0xe2
mov ah, 0x6c
xor r10b, byte [rdi + 0x21]
mov cl, 0x4a
jmp 0x4701a500
xchg dword [rip + 0x76eb6d88], eax
nop
je 0x406d03
pop rbp
push rdx
mov cl, byte fs:[rax + rbx*8 + 0x45664bb3]
mov edx, dword [rax + 0x6535255b]
jno 0x406ced
movsb byte [rdi], byte ptr [rsi]
add al, 0x12
call qword [rax]
jnp 0x406d34
sbb ch, dh
cmp r11d, r14d
adc byte [rdx + 0x5c], cl
jo 0x406cc5
xchg eax, ebp
mov edx, 0x3029cebd
push 0x3649319a
sbb dword [rax + 0x3f], esp
mov edi, 0x11894470
insb byte [rdi], dx
adc bh, byte [rbx - 0x5cb4af7]
xor eax, 0x49411664
mov r12b, r10b
or eax, 0x755f6485
je 0x406d30
sbb dword [rip - 0xbcc6dd5], 0xce0a7669
imul esp, dword [rcx + rdx*8 - 0x65], 0x82d0868
mov ebx, dword [rdx - 0x7cdcbd34]
push rsi
pop rcx
sbb eax, 0x50c54411
adc dl, byte [rbx + 0x6f7d0dba]
ja 0x406d97
pop rbx
and al, 4
lodsb al, byte [rsi]
push rdx
push rax
insd dword [rdi], dx
or byte [rsi + rdx*2 + 0x2b125885], ch
mov dl, 1
jne 0x406d0b
movabs dword [0x68281eccd56e15e], eax
sbb al, 1
faddp st(4)
xor ebx, dword [rax]
adc byte [rax + rcx*2 + 0x5613c7b], 0x12
cmp al, 0xb9
rol byte [rbp + 0x701855b], 0x54
push rbx
xchg dword [rsi - 0x7c], esp
ror byte [rbx - 0x3a], 1
cmpsd dword [rsi], dword ptr [rdi]
int3
sub ebp, dword [rbx - 0x4fccd4e2]
xor byte [rax - 0x50], bl
xchg eax, edx
wait
imul word [rbp + 0x28]
wait
test ebx, ecx
std
xchg eax, esi
jb 0x406d55
add byte [rcx - 0xa05dabe], cl
or eax, 0x45e0920b
jp 0x406de8
cmovge edx, dword [rbx - 0x4eef7d33]
ret 0x43d3
mov dl, 0x20
stosd dword [rdi], eax
outsb dx, byte [rsi]
mov al, byte [rax]
xchg eax, esi
sar dword [rbx], -7
cmp eax, 0xcb435e91
add eax, 0x5a12ad52
movabs r9, 0x1c31d724256248ae
add al, 0x16
scasq rax, qword [rdi]
xor dword [rdi - 0x78], edx
add al, 0x98
in eax, 0x68
and dword [rax], edx
je 0x406d88
loope 0x406df5
retf -0x6950
push rdx
imul eax, dword [rdi + 0x32], 0xd0818038
shr byte [rbx + 0x72], cl
out dx, eax
add eax, 0xaf1c801a
jbe 0x406e14
and dword [rbx - 0x48], edx
push rdx
lodsd eax, dword [rsi]
shr byte [rip + 0x418724c8], 0xf5
xor al, 0x23
sbb al, 0xb
pop rbx
test eax, eax
xchg eax, edx
pop rsi
test byte [rbx + rax*4 + 0x10], bl
in eax, dx
cmp byte [rsi + 0x38270328], ah
fist dword [rdi + 0x21]
mov dword [rdx], esp
out 0x58, eax
movabs byte [0x9b454a4f3f558482], al
or al, 0x19
mov ch, 0x4a
shr dword [rbx], 0x31
cmp dh, byte ss:[rbx - 0x619e78d0]
push fs
and byte [rcx], 0x68
or dword [rdx - 0x3d], esi
mov al, 0xc2
loopne 0x406eb4
mov edi, 0x5f494241
xor dword [rsi], ebp
xor esi, dword [rsi + 0x11]
adc byte [rbp + 2], 0
push rdi
xor byte [rax], ah
test qword [rip + 0x62151200], rsi
and al, byte [rsi]
mov ah, 0x61
mov cl, 0xca
test al, 0x40
xchg eax, ebx
sub al, 0x9a
adc dword [rip + 0x94fd6c6], ebp
or dl, byte [rcx]
cmpsb byte [rsi], byte ptr [rdi]
xor eax, 0xa67adb4
xchg eax, esp
shl dword [rdx], -0x3c
ret 0xc1d
jo 0x406e57
and bh, byte [rcx + 0x6078d889]
int 0x94
mov ch, 0x35
jae 0x406e91
jbe 0x406ec1
xchg eax, ecx
push rbp
cmpsd dword [rsi], dword ptr [rdi]
movsd dword [rdi], dword ptr [rsi]
mov cl, byte [rdx + 2]
or eax, 0xbf64010b
push 0x443a84a3
xor bh, ah
xor byte [rax + rdi*4 + 0x62], ch
xchg eax, esp
jg 0x406ea0
int 0xb4
adc qword [r10 - 0x43], rax
and eax, 0x1201534c
scasd eax, dword [rdi]
add eax, ecx
push 0x56b31210
xchg eax, edi
push 0x49
adc dword [rdx], esi
sub dh, ah
mov es, eax
add al, byte [rdx]
or eax, 0xc7a04849
retfq
mov dl, 0xe6
mov byte [rcx], al
sbb al, 0x63
insb byte [rdi], dx
push rdi
or eax, 0xc60f6d88
outsb dx, byte [rsi]
mov ebp, 0x12e325f
xor eax, 0x7458ee0
pushfq
or al, 0xa3
pop rdi
shl dword [rcx + 0x32], 1
or byte [rsi - 0x40], ah
mov eax, dword [rdi + rbp*4 + 0x7019c2da]
jae 0x406ead
insd dword [rdi], dx
jb 0x406f63
mov dl, 0x8e
xchg eax, edx
ror dl, 1
push rdi
call 0xffffffff99497630
xor al, 0x24
xor ebx, dword [rsi + 0xc]
or byte [rax + 0x32058b63], bl
xchg eax, edx
jl 0x406ea1
movsxd rdx, dword [rax + rdx*2 + 0x17008c52]
push rax
mov dh, 0x84
leave
xor al, byte [rax]
xor dword [rbp + 0x3da30831], edx
mov ebx, 0x68b2856e
pop rcx
and byte [rdi + 0x73], 0xb4
retf 0x2c98
xor byte [rdi - 0x5e], bl
stosb byte [rdi], al
sub al, 0x56
pop rcx
xor eax, ecx
ret
test dword [rsi], edx
in al, 0x32
xor eax, 0xef74001f
ret
ret 0xca83
shr dword ss:[rcx], cl
adc bl, ah
imul ebp, dword [rcx + 0x4a], 0x6f
fisub dword [r9]
or edi, dword [rax - 0x6ccfc76e]
sub edx, dword [rax]
test eax, 0xc27f024e
sbb ebp, dword [rsp + rax - 0x11ebf268]
call 0xffffffffb552afdc
int1
sub bpl, 0x8c
add al, byte [rbx + 2]
mov cl, 1
sbb al, 0xb6
or byte [rbx], ah
sub cl, byte fs:[rdx - 8]
and cl, al
sub dword [rdx], eax
xchg byte [rcx + 0x2f], bh
adc al, 0x37
or byte [rax - 0x7d], ah
xor byte [rdx + 0x2bd57204], dl
add ebx, dword [rax + 0x46]
or dword [rsi - 0x53da9ee8], 0x33
stosd dword [rdi], eax
stosb byte [rdi], al
or byte [rcx], al
mov esp, 0x42b15861
add cl, al
pop rcx
xchg eax, ecx
sub al, 0x20
push rbx
xor al, 0xaa
shl dword [rbx + rax*4 + 0x644aaf83], 1
sub dword [rcx + 0x65], -0x70
or cl, ah
popfq
cmp esi, edx
and byte [rbx + 0x18350d08], al
sub byte [rsi + r8*8], al
or al, 0x11
enter -0x2dbf, 0x7b
add bl, byte [r9 + 0x34d76225]
adc byte [rdi + 0x51a38578], ah
jne 0x407053
pop rbx
or dword [rdx + 0x22984c6d], esi
ret
sub eax, 0x4dea2b3b
adc al, 0x62
add al, 0xc4
sub esi, dword [rsi + 0x58]
jo 0x40706c
movsxd rbp, ebp
sub ebp, dword [rcx]
push rsi
pop rcx
cdq
xchg eax, edi
mov al, 0x60
add dword [rsi], ebx
push r13
cwde
or byte [rdx + 0x32], dh
xor byte [rax], dh
pop rcx
loopne 0x406fdb
mov dh, 0x9f
pop rdi
insd dword [rdi], dx
or al, 0x72
mov ss, word [rdx + rdx*8 + 0x28]
lodsb al, byte [rsi]
insd dword [rdi], dx
mov esp, 0x502232ad
stosd dword [rdi], eax
and byte [rcx - 0x7e], bl
xchg eax, esp
jrcxz 0x406fd6
push rsi
sub al, 0x61
and byte [rcx - 0x54d7b828], dl
fadd qword [rsi]
leave
adc esp, 0x18573010
xchg rax, r14
cmpsb byte [rsi], byte ptr [rdi]
xor dword [rdi - 0x537dbecd], ebx
xor dl, ah
in al, 0x88
mov ebx, ss
push rax
xor dl, bl
sub cl, byte [rcx + 0x32949017]
and al, 0x17
fcomp st(3)
adc ah, byte [rax - 0x6b]
popfq
in al, dx
adc al, 0x73
pop rdx
movabs eax, dword [0x2e402b1a65010068]
or al, 0x26
sbb byte [rip - 0x17eeb670], r13b
adc byte [rax], ch
adc eax, 0x3466b36c
ret
sbb ebx, eax
sbb byte [rax], bh
movabs al, byte [0x5614825413ac316e]
jmp 0x2b55f8b6
and byte [rdi], dh
test eax, 0x318c1206
ret
sub al, 0xd4
xchg eax, ecx
ja 0x40711d
movsxd rax, ecx
ret 0xe01b
hlt
movabs al, byte [0x46b980180080f048]
sti
cwde
lahf
sbb byte [rbp - 0x4f587d3e], ch
adc dword [rdx], edx
push rsp
sub al, 0x61
cmp byte [rdx], dl
and al, 0x51
nop
cmc
dec dword [rbx + 0xa]
cdq
add esi, dword [rbx]
push r15
pop rdx
xchg eax, esi
ret 0x1c7a
xor byte [rax - 0x37299db2], cl
sub eax, 0x21be6262
rcl dword [rdx], 0x39
in eax, 0x4f
cmp dword [rbp + 0x53103121], esi
pop rcx
insd dword [rdi], dx
push rsp
xchg eax, ebx
fisub dword [rcx - 0x4e]
cmp dword ss:[rax], esp
and byte [rdi - 0x1e], al
jg 0x40711d
push 0x24
adc eax, 0x160563dc
and al, 0x23
js 0x407145
nop
sti
mov dh, 0x82
xchg eax, ecx
or al, byte [rdx + rcx*2]
sub byte [rbx], bh
push rdi
and dword [rdx + 0x64], ecx
sub al, byte [rbx + 0x29b1d808]
mov byte [rax + rdi*2 + 0x20fda8b0], al
sub ecx, dword [rsi]
xchg eax, esp
xlatb
jo 0x40718a
xchg eax, esp
sbb dword [rbx - 0xe], eax
sbb dword [rdx + 0x6d505f8a], esi
sub dh, bl
test al, 0x2c
and ch, byte [rax - 0x3726d33c]
sbb ch, bl
fist dword [rcx - 0x36]
and eax, 0x8e48a79d
retf 0x283a
xor cl, byte [rsi + 0x47]
or byte [rbp + rbx*2 + 0x58a37e32], al
fsub dword [rax + rdi*8]
scasb al, byte [rdi]
scasb al, byte [rdi]
leave
nop
and byte [rip + 0x80402c8], ah
hlt
cmp dword [rdi], edx
mov dl, 0xfa
add rcx, qword [rip + 0x6c6d05a4]
movabs al, byte [0x608b384662385535]
test dword [rbx], ecx
and eax, 0xc8d6dd54
test al, 0x90
test dword [rbp - 0x72cdc6d3], eax
and esp, ebp
cmp byte [rsi], dl
lodsd eax, dword [rsi]
push rsp
outsd dx, dword [rsi]
pop rdi
push -0x52
sub cl, byte [rsi - 0x54]
pop rcx
imul esp, dword [rsp + rbp*4 - 0x6e], 0x2b
or qword [rdx + 0x65], rbp
mov esp, 0x56061012
movsd dword [rdi], dword ptr [rsi]
mov dl, 0xe8
xchg rax, rcx
enter 0x2001, 3
in al, 2
xor byte [rdx - 0x75], dl
xor dword [rax], esp
push rsi
je 0x4071b9
pop rdi
add esp, dword [rbx - 0x7d97caeb]
test dword [rax + rsi], edx
push 0x50
sal byte [rdi], 0x76
in al, 0x5c
sub byte [rsi - 0x5f34869e], bl
or ebx, edx
sbb dword [rcx - 0x73afcb87], edi
sbb byte [rcx - 0x3bdaa980], bh
or r12, r12
or bl, al
adc dl, byte [rdx + 0x4a]
retf
movabs al, byte [0x44610223ec8a4461]
xchg dword [rax], eax
and al, 0x68
movabs al, byte [0xa2365108d811c592]
push rax
sal byte [rcx + 0x69], 0xc8
adc eax, 0x81f7554c
retf
insb byte [rdi], dx
pop rax
movabs al, byte [0x150f720cb1a35a2c]
and dh, byte es:[rdx]
push 0x65fbc98d
xor eax, 0x6473d585
sub dword [rax + 0x3e], ebx
sub ah, byte [rbx]
push bx
adc byte [rbp + 0x6d463703], 0x35
and esp, eax
and esp, esi
add dword [rax + rsi + 0x2a], 6
and byte [rdx], cl
in al, dx
and byte [rcx + 0x364a9342], bh
sbb al, 2
shl dword [rax + 0x55], 1
sti
shr dword [rdx + 0x70], 1
push rsp
xchg eax, ebx
adc eax, 0x1262630c
ror dword gs:[rax - 0x76], 0x7a
test dword [rbp + 0x20], eax
add ebp, 0x2f
jl 0x4072bb
add ah, byte [rcx - 4]
cmp dword [rbx + 0x5f], edx
out 0xc8, eax
and eax, 0x2b4361f4
mov dword [rdx*2 - 0x73dc01dd], esp
push rsi
add bl, dl
or al, 0x2c
mov ecx, 0xa4807848
xor cl, byte [rdx - 0x53]
jg 0x40732e
jns 0x40726f
loopne 0x407278
adc byte [rax], bl
or edi, dword [rdi + 0x69]
jl 0x4072f7
add eax, 0x696bc409
or ebp, dword [rbx]
sbb ah, al
movsb byte [rdi], byte ptr [rsi]
mov bh, 0xc2
jno 0x40725b
adc byte [rax - 0x64a0b0f9], ah
and al, 0xd4
cmp ebp, dword [rax + 0x53998e4]
add eax, 0x9bde3284
and al, 0x48
or ebp, esi
lahf
movabs eax, dword [0x392d56dd1c82441e]
sub byte [rdx], dh
push rcx
jno 0x407304
leave
add al, 0x4a
xor al, 0x5e
sub ecx, dword [rcx - 0xeab3aa9]
imul esi, dword [rdi + 0x4d242e62], 0x69
imul esi, dword [rsi + 0x3d], 0x68498059
loopne 0x407387
and dword [rdi - 0x54], ebx
push r13
push rsi
mov ah, 0x10
sbb al, 0xdf
or al, 0x2c
push rsi
jb 0x407374
stosb byte [rdi], al
sub ch, byte [rcx + rcx - 0x14]
call 0x4ecc9c4d
cdq
push rsp
movabs al, byte [0x8d81ad15801b60ac]
or al, byte [rbp + rdx - 0x75]
sub al, 0x53
out 0xc, eax
mov eax, fs
fidiv dword [rsi + 0x32]
ret 0x9286
pop rsi
sub dh, byte [rdx]
xor eax, dword [rsi]
movabs al, byte fs:[0xdec70012285657e2]
push 0x10
add byte [rdx], dl
shr dword [rbp - 0x63], 1
xor qword [r10 - 0x495efc6d], 0x9470640
mov r14b, 0x88
or ebx, dword [rcx]
and dh, byte [rbx]
adc bl, byte [rip + 0x3478920e]
ficomp word [rdi]
mov byte [rcx], 0xd9
adc al, 0x4a
ror dword [rbx - 0x65], 1
fcomp dword [rbx + rbx*2]
xor byte [rax + 0x21], bl
add al, 0x3c
xchg eax, edx
int1
outsb dx, byte [rsi]
insd dword [rdi], dx
jo 0x407367
imul dword gs:[rbp + 0x6a]
leave
adc al, 0x59
sbb byte [rcx], dh
js 0x4073c1
mov al, byte [rax + rbp*4 + 0x239254ce]
sub dword [rcx + rsi], eax
movabs byte [0x29060631f661c815], al
xchg eax, edx
cmpsd dword [rsi], dword ptr [rdi]
add dword [edx - 0x55], ebp
add al, 0xdb
mov ch, 0xe5
cmpsb byte [rsi], byte ptr [rdi]
sub al, 0xcb
retf 0x5682
test byte [rdx], cl
jg 0x407407
adc qword [rdx], r9
test eax, 0x4e65130d
movabs byte [0x8102585662e02b99], al
jp 0x4073b8
fld qword [rcx]
mov dh, 0x47
cmp byte [rdi + 0x2c], r13b
xor dword [rax + 0x29], r8d
movsb byte [rdi], byte ptr [rsi]
xor ah, byte [rbx]
or dword [rdx - 0x6436a56], edx
mov bl, 0x5a
xchg eax, ecx
xor ebx, esp
mov ecx, 0x4958032
xchg byte [rdx], dh
add ch, byte [rbx - 0x4fea8c87]
nop
in eax, 0x49
xor al, 0xb
or al, 0x22
or byte [rdx + 0x32b5a818], 0x88
imul edx, dword [rdx], 0x85648098
mov word [rsi - 0x66], fs
xor byte [rcx + rbp], al
ja 0x40741a
sbb dword [rsi], ebp
cmp byte [r9], r8b
and dword [rbx - 0x7def86f8], eax
or esp, dword [rcx]
adc al, 0x32
adc esi, dword [rbx]
adc byte [rax], bl
sub dword [rcx + 0x36], 0x51e88c8
push 0x408adf68
pop rax
add eax, 0xbb948454
retf 0x3321
mov ebx, dword [rbp + 0xc]
retf -0x355e
xor bl, bh
pop rcx
or eax, 0x324e1495
mov byte [rbx], al
xchg eax, edx
mov al, byte [rcx]
or r14b, byte [r8]
pop rax
push rsp
push rbx
jb 0x4074c9
and dword [rax + 0x49], esi
add eax, 0x80075076
adc eax, 0x49114970
hlt
pop rdx
and eax, 0x9565e374
mov bl, 6
xor byte fs:[rbx + 0x78], ah
and dword [rsi - 0x7c], edx
movabs al, byte [0x2d10da666f7392f0]
in eax, dx
test byte [rbx + 0x36], dl
mov edx, dword [rdi - 0x7f]
rol byte [rsi - 2], 0xb0
rcr dword [rax], -0x3c
or bl, ch
ret 0x568
pop rax
or byte [rdx + 0x328fc791], al
xor byte [rdx + 0x7c380042], al
and eax, 0x5a
or dh, byte [rdx]
cwde
popfq
xchg eax, r9d
jae 0x4074ec
add byte [rsi], bl
push rdx
sbb ah, byte [rcx + 0x60132403]
ret
add al, 0x68
and dword [rdx + 0x32], ebx
stosb byte [rdi], al
out dx, al
jb 0x407554
fiadd dword [rdi + 0x5f]
cmpsb byte [rsi], byte ptr [rdi]
cmpsb byte [rsi], byte ptr [rdi]
xor dword [rdi], esi
sbb eax, 0x1d407604
add byte [rip + 0x2679f4], 0xa1
test dword [rcx], eax
xor eax, 0x60d13050
mov cl, 0x73
xor dword [rbp - 0xfef11ec], eax
pop qword [rax + 0x26]
mov eax, dword [rdx + 0x4d]
sub al, 0x81
add al, 0xac
pop rdi
std
adc al, 0x19
vmovlps xmm3, xmm15, qword [rcx]
and ecx, dword [rax - 0x38]
or al, 0x6e
push rax
or byte [rax + rax + 0x4e], ah
jo 0x40752c
test bpl, sil
sub al, 0x2d
stosd dword [rdi], eax
push rbp
pop rcx
adc dword [rbx], edi
add byte [rsi - 0x6dcc65d4], ah
test dword [rbx + rsi], edi
cmpsb byte [rsi], byte ptr [rdi]
xor dword [rax + 4], ebx
shr dword [rax], -0x41
ret
push rdx
xor al, 0xa3
pop rax
shl byte [rax + 0x518102d], 0x58
jo 0x40753a
sub byte [rdx - 1], dh
in eax, 1
popfq
and byte [rsi + 0x4ad75049], 0x88
push rsi
xchg eax, ecx
iretd
cmpsb byte [rsi], byte ptr [rdi]
sub byte [rbx], ch
cmp edx, dword [rdx]
movabs dword [0x76b89f17314e8f7], eax
push rsi
or dword [rip + 0x40c9f912], esp
add qword [rsi], rsp
xor ah, byte [rdx]
nop
rol dword [rbx + rcx*2], 0x7c
rol edx, 0x42
xor eax, dword [rdi]
sub dword [rbx], ecx
and byte [rbx], ch
mov bl, 0x25
add bl, bl
push rdi
adc dword [rbx - 0x70], ebp
push rsp
lock sbb byte [rip - 0x7ebfddeb], ah
pop rsp
add dword [rdx - 0x20], eax
and rax, 0x495a4b41
pop rbx
or al, 0x1a
sbb dword [rdi], edx
or rax, 0xffffffffc0482537
and eax, 0x80c75be2
add al, 0x7a
xor al, 0x6a
outsd dx, dword [rsi]
movsd dword [rdi], dword ptr [rsi]
add al, 0x80
retf 0x6b17
imul esi, dword [rax - 0xc], 0x43b9281a
push 0x2273406d
push rsi
mov al, 0xa9
jg 0x40757b
js 0x407647
add ebp, dword [rcx + 0x2c69c846]
mov byte [rbx], al
mov dl, 0x91
xlatb
add eax, 0x48a2b702
mov esi, dword [rax]
pop rbx
push rbx
pop rax
movabs qword [0x4529203008b9aaca], rax
in al, 0xc0
adc byte [rsp + rcx*8], 0x36
push rcx
and byte [rdi], ah
xchg byte [r10 + 0x1496225], spl
and eax, 0x81174b05
jb 0x4075cd
pop rsp
and eax, 0x326561f8
shr byte [rbx + 0x72116831], 0x40
nop
sub byte [rax + rax*2], dh
fsub dword [rbx + 0x510942f5]
sub bl, byte [rax + 0x2af00810]
or rax, 0x40f7602b
cmpsb byte [rsi], byte ptr [rdi]
add ah, byte [rbx + 0x2411492a]
push rax
and eax, 0xc80292c6
xor cl, al
imul edx, dword [rdx - 0x23be5b7f], 0x35
sub dword [rax + rcx - 0x3fb8b327], ecx
movsb byte [rdi], byte ptr [rsi]
pop r8
sub al, 0xe
and al, 0x7a
movabs byte [0x94d085d95f843938], al
vmaxps ymm11, ymm14, ymmword [rdx + rdx*2]
test byte [rcx - 0x4f], dl
mov ebx, 0x23302a59
loopne 0x40763d
imul ebp, dword [rbp + 0x20], -0x5d
movabs dword [0x5269c5736e4168cf], eax
add byte [rdx + 0x65], dl
mov cl, 0xdf
cmpsb byte [rsi], byte ptr [rdi]
adc byte [rcx], ch
xor dword [rsp + rbp*2 + 0x50], esp
add al, 0x16
xchg eax, ebp
mov al, 0x57
movsd dword [rdi], dword ptr [rsi]
and dword [rax], 0x12a3fc95
mov dl, byte [rcx + 0x35]
or r8b, byte [r13 + 0x52]
sti
adc byte [rdx + rbp*2], cl
rcr byte [rcx], cl
or bh, byte [rax]
jo 0xffffffff81049783
lodsd eax, dword [rsi]
cmp byte [rbp + rdx + 0x7a1959b4], al
or ch, byte [rsi]
sub ecx, dword [rax]
adc eax, 0x5738176
ret
adc bl, byte [rdi]
mov edi, 0xc224d584
mov r12b, 1
or dword [rbx - 0x2ddaddd0], esp
movsb byte [rdi], byte ptr [rsi]
push -0x3eca05ec
adc al, dl
adc al, 0x9b
cli
add eax, ecx
and spl, dil
cmpsb byte [rsi], byte ptr [rdi]
add ch, byte [rbx]
int 0x4a
and al, 0x15
and eax, dword [rax - 0x14]
ror byte cs:[rdx + 0x164b5456], 0x34
or cl, byte [rbx]
mov ebx, 0x4219034
and dword [rdx + rdx*2 + 0x18], 0x2cde08c1
adc byte [rdx + rsi + 0x6b20c32e], 0x22
or dword [rsi], 0x10
add eax, -0x76
xchg eax, ebx
and ah, byte [rdx + rax*4 - 0x7659116b]
push rsi
push rdx
movabs byte [0x5166d1237c40b929], al
jae 0x4077a7
add al, 9
add byte [rcx], ah
or al, 0x8a
push rbx
jb 0x407796
outsb dx, byte [rsi]
ja 0x4076d1
jb 0x4076d6
push rax
and eax, 0x8ad03788
and al, 0x73
xor ecx, dword [rdx - 0x6bf2e6aa]
add al, 0x23
or dword [rdx + 0x11], edi
test al, 0x50
and rax, 0x592400c0
mov ah, 0x39
and byte [rdx + rcx*4 + 0x52544926], cl
movsd dword [rdi], dword ptr [rsi]
add al, dl
xor r9b, byte [r10]
retf -0x7bcf
and eax, 0x4ab71607
push rax
or ah, byte [rax + rdi*8]
call 0xffffffffd042095d
xor dword [rcx], esp
add dword [rdi + 0x1404c40], ebp
jno 0x4077f7
sub eax, -0x54
call 0x3e0a97e0
push rbp
mov bl, ah
or byte [rcx - 0x36], dl
and byte [rdx - 0x42fe9a36], ah
push rcx
mov esp, 0x5120926e
enter -0x34cf, 0x28
add ah, byte [rbx + rax*4]
js 0x4077cc
adc dword [rdx + 0x4119e342], 0x6291a488
cdq
sub byte [rcx + 0x68325758], ch
xchg eax, esp
or byte [rax + rbx*2 - 0x10], al
stosb byte [rdi], al
lodsb al, byte [rsi]
pushfq
push rsp
push rbx
nop
push rsi
enter 0x1682, 0x1d
fiadd dword [rax + 0x33]
and al, byte [rbp + 0x10]
add eax, 0xb6581574
cmp byte [rbx + 0x48], dl
xor dword [rbx + 0x2249016d], 0x49241c85
test eax, 0x792253a
ffree st(2)
xor dh, byte [rax]
push rbx
cli
in al, 0x20
sub ebx, ecx
pop rdx
cld
xor dword [rcx], ebp
and dword [rdx], edi
or al, 4
mov ebp, 0xbb502055
in al, 0x81
push r14
stc
test byte [r9], r8b
xor dword [rdx], ecx
popfq
or bl, byte [rcx + 5]
xor cl, byte [rbx]
xchg eax, ebp
or eax, 0x40960da3
scasb al, byte [rdi]
xor byte [rdx - 0x773dcef7], ah
nop
or ecx, dword [rdx]
test dword [0xffffffffcaac518e], edx
and byte [rdi], dh
xor eax, 0x7960122
test byte [rax - 0x7a86fafb], al
sub cl, byte [rcx]
lodsb al, byte [rsi]
loop 0x407864
xor dword [r11 - 0x7b], ebp
adc eax, 0xac0456a
add al, 0x58
add ebx, ebp
leave
add dword [rdx - 0x19], edx
xor dl, byte [r11 + 0x48]
add dword [rbx + 0x30644ab8], edx
and dword [rdi + 0x31], esi
push rcx
push rdx
xor eax, 0x264cee28
xor esp, dword [rax + 0x33]
nop
mov cl, ah
in al, 0x98
adc byte [rsp + rdi*4], ch
add ah, byte [rcx + 0x53]
movabs byte [0x572acd600188cb6e], al
xor byte [rdx + rax*4], cl
xor al, 0xa2
pop rbx
xchg byte [rdx - 0x4b], dh
pop rsi
popfq
clc
imul eax, dword [rsi], 0x70
and dword [rax - 0x66], edx
xor al, 0x5e
push rcx
mov esp, 0x51dd50a0
cmp al, 0x18
nop
out 0x2e, al
nop
adc byte [rdx - 0x80], 0x32
pop rdx
movsb byte [rdi], byte ptr [rsi]
add byte [rdi - 0x80], dl
add byte [rax + 0x2954952f], bl
jl 0x407916
and dword [rax + 0x25], esp
add dword [rsi], esi
xor al, byte [rdx - 0x7b]
in al, 0x22
fisub word [rip - 0x64fe7db8]
add dword [rsi], esp
cmp edx, dword [r13 + rcx*2 + 0x43]
sbb byte [rax], ah
and ecx, dword [rsi]
add edi, dword [rdi]
xchg eax, esi
adc eax, 0x70988c81
xchg eax, esp
xchg eax, edx
test al, 0x11
and byte [rdx + 0x5f], bh
jb 0x407912
sbb dword [rdi + rdx*2], esi
sub al, byte [rsi - 0x80]
push rbp
add al, cl
adc al, byte [rbx]
sbb dword [rcx + 0x9303d84], 0x80121503
cmc
movsxd rdx, dword [rax]
add eax, dword [rcx + rbx*2 + 0x230054d8]
push -0x6f2334f0
scasb al, byte [rdi]
xor edx, esi
pop rax
int 0x2a
sbb bl, ch
or dword [rbp + 0x22a452ca], eax
xor dword [r10 + 0x1663662], 0x36bb814c
jne 0x4078ff
mov ss, word [rsi]
jb 0x4079af
movabs byte [0x6ff9a845c24e720a], al
cmp qword [rbp - 0x1b57e21e], rbx
jb 0x407970
rcl byte [r9 - 0x3a], cl
jbe 0x4079ab
popfq
iretd
movabs byte [0x669f3eca83688143], al
xchg byte [rbx - 0x7b3a9a98], ah
jne 0x4079d5
sub ebx, dword [rcx]
or byte [rdx], dh
xchg dword [rax + 0x70c41652], eax
pop rbp
pop rcx
add al, 0x23
sub r12, qword [rdx]
sahf
and dword [rax - 0x37], ebp
cld
retf
add al, 0x90
xchg eax, edx
cmp al, byte [rax + 0x1f]
sub ch, ah
fadd qword [rcx + 0x61]
jmp 0x407931
xor esi, dword [rdx]
sbb eax, 0x5454382e
scasb al, byte [rdi]
adc al, 0xab
shr byte [rdx], 4
add ah, byte [rip - 0x4de66e57]
fidiv word [rax]
add ch, byte [rcx + 0x1d18c445]
push rdx
adc byte [rbx + 0x12], 4
and ebp, eax
stosd dword [rdi], eax
and byte [rip + 0x327388c8], r12b
retf
and dword [rdx], 0x32531491
push rax
or byte [rcx + 0x6f1e4a00], bh
add eax, 0x5d69012
sbb esp, edx
and ch, byte [rcx + rdx*4]
jl 0x4079f7
push rax
push rbx
jns 0x4079e7
retf 0x32db
xor esi, dword [rcx]
loop 0x407a69
and al, 0xea
xchg eax, ebx
mov word [rsi + 0x28], ss
xor al, 0x5a
int3
xchg eax, ecx
cdqe
movabs al, byte [0xea10688f3b02e421]
xchg eax, edx
cwde
push rdx
cmp byte [rdx + 0x2aacc686], ah
jg 0x4079fb
push 0x5e
jnp 0x407a69
mov bl, 0x22
and al, 0x24
mov ch, 0x56
test eax, 0x3ae7d1a2
pop rsi
lahf
and al, 0x6b
mov ch, 0x58
cmp eax, 0x8152dbf8
xor al, byte [rax + 0x12416a23]
jo 0x407a48
sbb dl, byte [rcx + 0x550f2884]
enter 0x6004, 6
mov cl, 0x12
push -0x3a7ebd82
sub dword [rax + 0x4a], ebx
push rsp
jno 0x4079e0
mov eax, 0x5739e98c
xchg eax, esp
adc ah, byte [rax + 0xb411c64]
jae 0x407a6d
add al, byte [rax + 0x32]
test al, 0x52
mov cl, 0x5f
loope 0x407ab8
xor eax, 0x80428dc8
pop rdx
add esi, ebp
mov eax, edx
cmp dword [rsi + 0x11398b4c], ebp
adc byte [rbx], ah
cdq
or byte [rdx + 0x2a], cl
adc dword [rdx + 0x60], esi
mov spl, 0x2a
or dword [rbx - 0x7d], eax
and dword [r8 - 0x7f18210a], esi
and al, 0x48
xor dword [rbx + 0x6300ac2], esp
mov ch, 0x10
test eax, 0xe4b8562
adc dl, byte [rdx]
xchg eax, edx
cmp byte [rax], ch
sub dword [rax + 0x12], ebx
push rdx
add r12d, dword [rax]
xor dword [rax + 0x43], esi
add byte [rcx], cl
pop rax
xchg eax, esp
and al, 0xc8
xchg eax, esp
and esp, dword [rax + 0x262ac850]
push rbx
xchg eax, edx
mov cl, 0x1a
xchg eax, ecx
xchg eax, ebp
sub al, 0xe7
scasb al, byte [rdi]
lodsb al, byte [rsi]
and cl, byte [rax + 0x6040a831]
or eax, 0x393424f6
mov dl, 0x1e
xor eax, 0x58ab6b31
pop rax
sti
jo 0x407ab1
insd dword [rdi], dx
mov bh, 0xa4
call 0xffffffffbece8c4b
or eax, 0xb902b4e1
or word [rcx], ax
push rax
mov cl, 0x6d
out 1, al
test al, 0x10
xchg byte [rdx + 2], cl
pop rdx
or esi, esp
rcl dword [rcx + 0x47], 1
adc cl, byte [rbx]
and dh, byte [rax]
mov word [rax - 0x36cd9ebf], es
add al, 0x34
sub al, 0xa9
mov ebp, 0x650e82ca
int3
ja 0x407b1f
push rbp
xchg eax, ecx
sub eax, 0x942cb44
outsd dx, dword [rsi]
sub ecx, dword [rax + 0x32]
or byte [rcx + 0x21011931], bl
adc al, ah
jae 0x407acc
cmp byte [rax + rax - 0x77fdc84b], al
movsb byte [rdi], byte ptr [rsi]
movabs al, byte [0x64612dd564744a0b]
js 0x407b57
or dword [0x5e356200], 0xd9062c0c
fcom dword [rbp + 0x79a87109]
xor al, 0xa7
add byte [rip - 0x6a7bd4d3], 0x8c
add dword [rax + 0x56], eax
mov byte [rdx], 1
loopne 0x407bad
movsb byte [rdi], byte ptr [rsi]
mov dl, 0x80
sub eax, 0x1169e36a
adc dl, byte [rax*4 + 0x142116a0]
or al, 0xa6
enter 0x2c02, 0xc
xor rax, 0xffffffffa8c83053
push rsp
fldcw word [rdx]
xor cl, byte [rdx - 0x4df299e7]
lodsd eax, dword [rsi]
xor dword fs:[rcx + 0x45aa8c2b], ebp
fdiv dword [rsi - 0x20]
sbb byte [rcx], dl
fidiv word [rdx]
adc al, 0x97
push rcx
mov ebp, 0x47825732
push rcx
add rax, 0x7e6c3c4f
imul edx, dword [rbp + 7], 0xdc50098a
call 0x659bc53
jbe 0x407be3
in eax, dx
push rax
pushfq
enter -0x7912, 0x4a
and dword [rdi + 0x65], edx
lock xor dword [rcx + 0x25], eax
add byte [rbx - 0x6ef36f58], ch
sub al, 0xff
jo 0x407c1c
and al, 0x85
mov al, 3
push rsp
sub qword [r10 + 1], rbp
lodsd eax, dword [rsi]
test byte [rdx - 0x4c], al
and dword [rdx + rax*2 + 0x2f02c20], 0xef565321
xor ebp, dword [rax + rdi*2]
xchg eax, ecx
mov ah, byte [rbp + rbx*8 + 0x5a]
xor dl, byte [rsi]
and eax, 0x5022dba4
mov byte [rsi + rsi + 0x460b2198], dh
and dword [rdx + 0xc12509], 0x48203092
add esp, dword [rip - 0x7ab4cdad]
sbb byte [rdx + 0x61], al
add al, 0x11
cmp eax, 0x8b5a2190
mov ch, 0x8a
mov dl, 0xdd
add dword [rbx + 0x5c], 0x721c3cae
jb 0x407c54
add ch, cl
mov edi, 0x62136
out dx, al
push rax
and al, 0x22
sti
add dword [rbx], ecx
movsb byte [rdi], byte ptr [rsi]
movsb byte [rdi], byte ptr [rsi]
test eax, 0x4e165560
and ch, byte [rbp + 0x4b0ad0b6]
push 0x48
add eax, 0x6939476c
mov r11b, byte [rsi - 0x67]
xor eax, 0x84c8407
add byte [rdi], cl
push rax
scasb al, byte [rdi]
mov ebx, 0x3056080c
stc
test dword [rdi], 0x75631004
jb 0x407cb9
jns 0x407ce4
push rax
stosd dword [rdi], eax
xchg eax, ecx
xchg eax, esi
not dword [rbp + 0x44208c00]
sub ecx, dword [rcx + rax*4]
xor byte [r14 + 0x4a], r11b
or al, 0xc8
test al, 0x90
xchg eax, ebx
stosd dword [rdi], eax
lodsb al, byte [rsi]
push rdx
mov dh, 0x76
and byte [rbx], ah
adc byte [rdx + 0x76], al
xchg byte [rbp + 0x761a2b08], ah
xor ah, byte [rdx + 0x60a74421]
and byte [rbp + 4], r10b
or cl, byte [rdx + 8]
mov word [rax - 0x50ebe26b], gs
push rdx
hlt
xchg rax, rbp
jge 0x407ce0
xlatb
cmp al, 0x40
pushfq
or byte [rdi + 0x36], 0x64
ret 0x8828
sub al, 0x4a
sub esp, dword [rbx - 0x2d177238]
add dword [rax], ebx
add byte [rax], 0xc2
test eax, 0x26130152
xor dword [rbx], ebx
cwde
and cl, byte [rbx + 0xcef4062]
mov byte [rdx + 0x4aa57361], bl
sub byte [rdx], ch
xor ah, al
cdq
mov al, 0xa0
movabs al, byte [0x6b808c6556a310a]
and eax, edx
add dword [rdx], edi
add ebx, dword [rdx + 0x20]
adc eax, 0xac13771d
cmpsb byte [rsi], byte ptr [rdi]
or byte [rip + 0x5496a04b], dl
nop
movabs al, byte [0x8ee67ac8a35559ba]
and al, byte [rcx]
push rsi
lodsb al, byte [rsi]
add qword [rdx - 0x3f], rdx
movsb byte [rdi], byte ptr [rsi]
mov edx, dword [rdx]
ror byte [rcx + rsi + 0x16], 0x55
lodsb al, byte [rsi]
adc r12b, bpl
and dword [rax - 0x15], esp
mov ah, byte [rbp + 0x790767d3]
sbb ecx, ecx
add ebx, 0x35
sbb dh, bl
movaps xmmword [rbx - 0x58], xmm7
xchg byte [rdi], dh
jp 0x407d93
push rax
mov eax, 0x4d351615
sub eax, dword [rcx - 0x2408dffb]
pop rdx
xchg eax, esp
pushfq
add eax, 0x40294a31
add ebp, edi
and qword [r10], rax
adc rax, 0x2ac0233e
sub dword fs:[rax + 0x4230fb], edi
scasb al, byte [rdi]
pandn mm1, qword ss:[rbx]
xchg eax, ebp
adc eax, 0x61faa4d9
pop rcx
jno 0x407d3d
jo 0x407dd2
hlt
adc dword [rbx + 0x2c971812], ecx
lodsb al, byte [rsi]
mov byte [rcx - 1], bl
pop rax
xor ch, byte [rcx + 0x45]
push rsi
pop rsi
lodsb al, byte [rsi]
add byte [rcx + rax*8], ch
sbb al, 0xb0
ror byte cs:[rax + 0x42953997], 0
xchg eax, esi
je 0x407e0f
jo 0x407da7
sbb eax, 0x648ef046
xchg ax, r9w
in al, 0xb2
sbb byte [rcx], dl
add byte [rax], bh
adc dword [rcx + 0x26c5b445], 0x68391564
stosd dword [rdi], eax
imul edi, dword [rcx], 0
and dword [rax + 0x32], esp
test byte [rax], al
call 0x1cf59038
xor ecx, dword [rcx - 0x33]
add eax, 0x471c84a4
mov ebx, 0x56050d19
cmp byte [rsi], dh
mov es, word [rdx + 0x37411b0b]
wait
stosb byte [rdi], al
or al, byte [rdi - 0x39]
popfq
xor cl, byte [rsi]
shl byte [rdx - 0x649d79d1], 1
js 0x407e67
sub byte [rdx], bh
movabs byte [0xf7832299c078e9d0], al
xor dl, byte [rcx + 0x1c]
xchg eax, esp
push rax
xor eax, eax
test al, 0x12
cmpsb byte [rsi], byte ptr [rdi]
mov byte [rbp + 0x56], dl
mov ch, 0xcf
pop rcx
push rsp
stosd dword [rdi], eax
xchg eax, edx
sub eax, 0xd2d55656
jae 0x407e71
push rbx
outsb dx, byte [rsi]
ja 0x407dce
push rdx
jno 0x407e67
adc dh, cl
xor byte [rax + 0x442c6241], cl
lea esp, [rcx + rcx*2 - 0x30]
push rsi
movsxd rcx, dword [rbx]
pop rsp
test dword [rax], edi
push qword [rbx - 0x20]
xor al, 0x18
or dword [rax + 0x68], edx
enter -0x1c29, -0x60
pop rsi
sub al, byte [rbx + 0x46032b9]
and dword [rdx], esi
add edx, esp
sub byte [rbx], al
adc byte [rax], 0x64
xchg dword fs:[rdx + 0x63b63260], edx
insb byte [rdi], dx
and dword [rdx + rax*4 + 0x4037c494], ebp
adc eax, 0x20d44204
loop 0x407eaf
and dword [rcx + rbp + 0x21509bcb], edx
mov word [rsp + rcx*8], gs
rcl byte [rsi - 0x3e8576a6], 1
fisub word [rbx - 0x1b]
xchg eax, edx
and byte [rax + 0x55], bh
pop rsp
test eax, 0x21a02ca2
xor dh, al
push rcx
int1
push rdx
shr byte [rsi], cl
loop 0x407ea1
xchg eax, esi
and byte [rax + rbx*2], ah
imul ebx, eax, -0x77
add al, 0xee
cmp byte [r11], r14b
xchg eax, ebx
not dword [rcx - 0x2d]
adc al, 0x50
wait
push rbx
xor al, 0x68
fadd dword [rsi + 0x64]
fsub dword [rsi - 0x76]
jae 0x407f30
adc al, 0xb6
mov dl, 0x9d
ficom dword [r9 - 0x32]
adc eax, 0xab733407
jmp 0x59c08f86
push rsi
int1
add dword [rax + 0x2f3b88c0], edx
loop 0x407f2b
and dword [rdi + 0x49543130], eax
cmp byte [rdx], dl
ret 0x8927
push rax
jbe 0x407ecf
add dh, byte [rax]
add bl, ah
add al, 0x87
adc dword [rax - 0x13], ecx
adc dword [rdx + 0x32], 0x10
pop rcx
xchg eax, ebx
nop
test eax, 0x4a27a2b0
add eax, 0x90468c14
and byte [rax], bh
mov cl, 0
push 0x40e43424
nop
or eax, 0x1b8491bd
mov edi, 0x91cd2a6
jne 0x407f19
scasb al, byte [rdi]
fst dword [rbx + 0x45]
jns 0x407f6c
sub ah, byte [rcx + 0x14dd8448]
and al, 0xd4
jnp 0x407f74
rol dword [rsi - 0x67caf784], 1
mov edx, dword [rdx - 0x6d]
add byte [rdx], dl
push rcx
ret 0x4aac
xchg eax, ebp
push rbp
hlt
int1
xor dword [rdx + 0x564ec03a], 0xffffffe0
add byte fs:[rax - 0x37e6ddcf], bh
or ch, byte [rbp + 0x4a]
add eax, dword [rcx + 0x326f0c05]
push rcx
push rsi
add byte [rbx - 0x40], ch
movabs dword [0x6092b9f34c04c510], eax
mov bl, 0xf9
adc byte [rsp + rax*2], 0x2b
movabs eax, dword [0x59582c1d31c86a24]
adc bl, byte [rip - 0x3be5ff54]
push -2
adc eax, 0xc1235060
xor byte [rcx - 0x31cd3fac], dl
or cl, byte [rax]
xchg eax, ecx
adc dword [rcx - 0x4e], esp
or byte [rsi], ch
xor dword [rax + 0xe40096b], edi
jg 0x40802f
xor al, 0x53
test eax, 0x732f5f61
pop rdx
sbb al, 0x22
or bl, byte [rax + 9]
or esi, esp
xor byte [rax + rbx + 0x40], bl
cmpsb byte [rsi], byte ptr [rdi]
sar byte [rcx + 0x31], 0x69
add eax, 0x770240a5
or esi, dword [rax + 0x2e]
nop
pop rsp
sub eax, 0x14205802
and ch, ch
jno 0x408022
stosb byte [rdi], al
lodsb al, byte [rsi]
xlatb
fistp word [rdi + 0x20]
push rcx
cmp eax, 0x656b5a18
jns 0x407fbf
fadd dword [rdx]
add al, 0x58
add ch, 9
add al, 0x58
fcom dword [rbx + rdx*2 - 0x70]
or byte [rax + 0x18], 0xae
push 0x65
add cl, al
or dword [rbp + 0x22], edx
sub al, 0xd6
adc byte [rax], dl
or byte [rdx + 0x18122003], ah
mov cl, byte fs:[rdx - 0x3eadb2ab]
jl 0x408055
movabs eax, dword [0x1808a2685295880c]
adc byte [rbp + 0x64], ah
or byte [rdx + rax*8 + 0x36], ah
push rdi
push rdx
lodsb al, byte [rsi]
pop rcx
push rbp
jo 0x4080a7
mov edx, dword [rax]
mov dl, byte [rdi + 0x1f]
and eax, 0x4f308042
stosq qword [rdi], rax
xor byte [rdx + 0x443b5b41], al
add al, byte [rax]
xchg eax, esp
push rsp
push rsi
pop rdi
or byte [rcx], dl
add edi, esp
cmp dword [rax], esi
test al, 0xaa
shl byte [rax + 0x50], cl
rcr dword [rax + 0x28590a94], 0x48
add al, 3
ror ebp, -0x40
lodsb al, byte [rsi]
push rsp
xchg eax, esp
or byte [rcx - 0x13], bl
mov ch, byte [rsi + rdx*4 + 0x4234a1f9]
sbb qword [rax + r12*4], rbx
jrcxz 0x40800d
add byte [rsi - 0x10], al
movabs eax, dword [0x688c010e4764531]
sbb ah, byte [rcx]
xor byte [rdi + 0x55], ah
cli
xor al, 0xcf
sub cl, byte [rax + 0x5723123]
sub al, 0
cmp dword [rcx], esi
or byte [rcx], al
xor cl, byte [rcx]
ret
xchg rax, rdx
nop
add byte [rbx - 0x1b42f436], al
retf -0x60e0
xor dword [rdi + rsi*2], esi
and dword [rdx + 0x736b11b0], eax
int1
call 0x3ff427cd
pop rdx
pop rax
loopne 0x4080e6
cmpsd dword [rsi], dword ptr [rdi]
or byte [rbx + 0x61], 0x3b
sub dh, byte [rax - 0x4975a3f8]
in eax, 0x96
add al, 0xc4
add esi, esp
sbb al, 0x88
push rbp
sbb dword [rip + 0x44a8a4f0], edi
movabs r15, 0x62e951a461083d5a
jo 0x4080ad
jbe 0x408162
imul edi, dword [rbx + 0x304a29b1], -0x15
mov dword [rbp + 0x5f], esp
shr dword [rcx + 0x57a8c31], 1
add al, 0x94
retf
and byte [rax + 0x6b5f4478], dh
enter 0x160a, 0x56
wait
test al, al
sub cl, byte [rcx]
push -0x1ff3d0ce
adc eax, 0xf46275d1
adc byte [rcx], bl
stosd dword [rdi], eax
fild qword [rax + rbp + 0x28e28d0a]
adc eax, 0x430c96c5
push rsp
test dword [rax], ebp
sub eax, ebp
adc bh, byte [rip - 0x52fde27f]
mov byte [rcx], dl
push 0x4b
adc byte ds:[rdx], ah
push rbp
outsb dx, byte [rsi]
ja 0x408141
movabs dword [0x43646d2452acfa0d], eax
ret 0xa23
xlatb
xor byte [rsi - 0x6f], dh
xchg eax, edx
add edi, dword [rsi + rsi*4]
xchg eax, esi
insd dword [rdi], dx
fidiv dword [rip - 0x731b525e]
leave
mov r13b, 0
pop rsi
mov cl, 0xd2
or edx, dword [rax + 6]
lodsd eax, dword [rsi]
xchg eax, edx
mov edx, 0x24a44488
adc ah, 0xb0
test byte [rsi + 0x49], dl
ret
and byte [rax + 0x20], al
add eax, 0x1b349d5f
xchg eax, ebp
and al, 0xaa
push rax
and al, 0x23
or bh, dh
mov word [rax], ds
and dword [rbx], ecx
pop rdx
add dl, byte [rdi + rbp*2]
mov byte [rbp - 0x76], ch
xchg eax, ecx
or al, 0x8b
pop rdx
sub eax, 0x4a7406
sub bpl, byte [r11 + 0x60204168]
add al, 8
popfq
sbb al, 0x64
xor al, byte [rbp + 0x2a]
xor byte [rcx], bl
mov edx, dword es:[rdx - 0x363599a5]
add eax, 0x32080425
and byte fs:[rbx], al
adc qword [eax + 5], 0x16046600
add eax, 0x2ad73da7
xor byte [rax + 0x3d243258], cl
push -0x61233cba
sub dword [rax], esp
jb 0x408263
or byte [rbx + 0xa43ba42], al
and byte [rcx], dl
leave
cmp al, 0
sub al, 4
insd dword [rdi], dx
mov ah, 0x58
and eax, 0x4d6dd257
xchg eax, edx
add dword [rax], esi
test al, 0x9c
xor eax, ecx
in eax, dx
sbb al, 0xa0
pop rax
add dword [rax + rbx + 0x24], edi
and qword [r13 + 0x62], r14
pop rdx
or eax, 0xffffffef
sub edi, dword [rdi + 0x4153f354]
add al, 0x39
stosd dword [rdi], eax
loopne 0x408252
xor dword [rsi], esi
cmp byte [rcx + rcx*2 + 0x51], dl
add al, 0xad
sbb byte [rcx - 0x19], dl
sbb dword [rcx + rdi], -1
shr byte [rbx + 0x555d0560], 0x26
or byte [rcx + 0x4094c7dd], dl
rcr byte [rcx - 0x6f], 0x32
fcom qword [rdx + 0x11]
mov dl, 0x6a
and dword [rdx], edi
jb 0x408270
xor bh, ah
mov word [rax], cs
or ch, byte [rdi]
imul edi, dword [rax + 0x55], 0x450204e4
stosb byte [rdi], al
fisttp word [rcx + 0x21]
sub dword [rdx], ebp
ret
shl dword [rdx], 0x29
push -0x68
xor dword [rax + 0x2b411801], ebx
stosb byte [rdi], al
and al, 0xa0
xor ch, byte [rdx + 0x27061033]
xor dword [rcx], esp
xor ah, dl
adc eax, 0x56ec0518
add al, 3
adc dword [rax], 0xa
adc eax, 0x4f010861
or ah, cl
adc dword [rbp - 0x77], esp
xor ah, byte [rdx]
lodsb al, byte [rsi]
enter 0x701c, 2
sbb dword [rdx], esp
or al, 0x3a
mov r10b, 0
rcr byte [rax + rdi + 0x60a002e2], 1
push 0x62fbd75
add dword [rdx - 0x29], ecx
sub al, 0xb8
cmp eax, 0x46b09856
pop rdi
stosb byte [rdi], al
mov al, 0xa0
add byte [rip + 0xa23a9d9], ch
adc ecx, dword [rbp + rdx - 0x4b93a91b]
push 0x636dfe4c
or bl, byte [rax]
leave
add al, 0x32
movsb byte [rdi], byte ptr [rsi]
add byte [rdi + 0x43], 0x8b
or byte [rax - 0x13dfcb9a], 2
add eax, 0x143811b1
ror edx, 7
nop
rol byte [rax], 0xcd
jno 0x408338
or al, 0x16
add eax, dword [rcx + 0x3b650300]
sal dword [rbx - 0x11], 1
push rbx
ja 0x4082db
wait
cld
movabs byte [0xb11fb54967095c95], al
test byte [rdx], bh
out dx, al
jb 0x408394
call qword [rax - 0x6c]
enter 0x4a78, 0x60
mov ebp, 0x56918416
mov ah, 0x5b
test eax, eax
add bh, byte [rax]
xchg eax, esp
iretd
add byte [rdx + r15 - 0x7d79b47e], 0xb0
rcl dword [rdx], 1
outsb dx, byte [rsi]
out 0x55, eax
stosb byte [rdi], al
or al, 0x22
lodsb al, byte [rsi]
sub byte [rcx + 0x12], al
or al, byte [rax + 0x21]
sub ebx, dword [rdx]
xor al, 0x3e
or byte [rcx], ah
adc ch, byte [rdx + 0x8039712]
or byte [rbp - 0x6c], dl
add eax, dword [rdx]
and eax, 0xa63630aa
mov edx, 0x8511eab0
or dh, dh
test eax, 0x3450c144
fldcw word [rcx + 0x62230840]
sbb al, 0x1a
or al, 0xaa
nop
add eax, 0x422b7c19
nop
movsxd rdx, dword [rip + 0x26003192]
xor byte [rip + 0x12513232], ch
rcl byte [rbx], 0x4a
cmp dword [rax + rax*4 - 0x7bb601b0], eax
add al, 0xd0
and byte [rcx + rdi*4 - 0x70], al
ror byte [rdx + rsi + 0x55], 0x64
add al, 0x49
mov ah, 0
sub byte [rcx - 0x5edd54f8], dh
and byte [rdi], dl
add dword [rcx], 0x42d23150
and byte [rax], ch
loopne 0x4083b1
adc dword [rcx + 0x62], esi
add al, 0x73
lodsb al, byte [rsi]
or al, byte [rbp - 0x2e]
rcl dword [rbx + 7], 1
push rsi
insd dword [rdi], dx
cmpsd dword [rsi], dword ptr [rdi]
imul r14d, ebx, 0x4d660774
add eax, 0x1b20ca50
push rcx
mov bl, 0x62
add byte [rdi], 0x3f
nop
and dword [rax], esi
call 0x4e8b2ecd
or byte [rbx + 0xe], al
cmp qword [rsi + 0x65], rbp
and eax, eax
sub byte [rcx + 0x745fb470], cl
adc byte [rbp - 0x7e4e54bc], 0x95
cmc
cmp al, byte [rdx + 0x3d]
push 0x25
pop rbp
xor dword [rax + rax*2 + 0x69fa2326], ecx
nop
movabs al, byte [0x2864958481ca0580]
jge 0x408480
xor byte [rbx], ch
jp 0x40840d
mov word [rdx + 0x40], gs
pop rax
out 0xb1, eax
pop rax
push rsp
out 2, eax
xchg eax, esp
jb 0x408439
xor dh, byte [rdx + rdx*2]
adc eax, 0x869e0993
or spl, byte [rax]
popfq
test byte [rip - 0x7afe5afc], al
add ah, byte [rcx + 0x60a76a01]
xchg eax, esp
push rdx
xchg dl, ch
lodsb al, byte [rsi]
add byte fs:[rcx], cl
or r15d, dword gs:[rcx]
and dword [rax], edx
xor dword [rcx], 0x9628a35
add al, 0x7a
adc dword [rax + 0x4a7bc829], 0xfb6ec9d8
add byte [rsi], ch
jae 0x4084ec
insd dword [rdi], dx
je 0x4084eb
push -0x41234ef7
push 0x6e0770bd
outsd dx, dword [rsi]
jno 0x40849e
int3
jne 0x4084b5
sub eax, 0x2eb30d3e
jne 0x408449
mov edi, 0x692d6434
add byte fs:[rip + 0x64093860], cl
jns 0x40842a
pop rcx
wait
mov ecx, 0x45074f6e
sbb dword [rsi - 0x3e], ebp
mov ah, 0x77
or al, 0x5f
sbb edx, dword [rsi]
in al, dx
adc eax, 0x28d09068
or esp, ecx
mov dh, 0xd7
sbb dh, 0x74
jb 0x408497
or ch, byte [rdi + rbp*2]
jnp 0x408458
xor esp, esp
or byte [rbx], dh
add eax, 0x7e88248d
stosb byte [rdi], al
outsd dx, dword [rsi]
js 0x408504
push 0xcfb2dd1
mov ah, 0x68
jb 0x4084ee
pop rbp
movsxd rsi, dword [rdx - 0x23]
add al, 0xa0
add dword [rbp - 0x4fee9343], eax
pop rcx
xchg eax, edx
or bh, byte [rsi + 0x43]
or edi, dword [rbp + 0x6afb1685]
movsxd rsi, dword [rdx - 0x5f]
push 0x52b56800
xor al, 0x9b
jnp 0x408563
cmpsb byte [rsi], byte ptr [rdi]
add al, 0xb2
xchg byte [rax + 0x44bd14], ah
add byte [rdx + rcx*4], ah
mov edx, 0x1031bab
pop rdi
mov ecx, 0xe7b04049
or al, 0xc9
nop
pushfq
sbb al, 1
and ecx, eax
and byte [rbx], al
rol byte [rdi], cl
push rsp
push rsp
xor ah, byte [rbx + rax*2]
xor ah, byte [rax]
add al, 0x31
xor cl, al
and byte [rbx + 0x74], al
je 0x40855e
cmp esp, ebp
int 0x50
idiv dil
ljmp [rdi + 0x7f]
cwde
nop
cwde
add eax, 0x19219a40
or byte [rsi + 0xb], cl
sbb dword [rax + 0x3f], ebp
loopne 0x4085cb
add eax, 0x841906fb
leave
sbb byte [rdi], bh
push rsi
xchg eax, ebx
movsb byte [rdi], byte ptr [rsi]
add edx, dword [rax + 8]
push rax
or byte [rcx], al
jnp 0x408589
leave
inc dword [rip - 0x7940dca2]
in al, 0xe4
leave
push rax
push rax
je 0x408584
sbb dword [rax + 0x6b07c86e], edx
dec al
nop
xor esi, dword [rdi]
call rax
or ecx, eax
nop
add al, 0x7a
test byte [rsp + rcx + 0x600f0f32], bl
cmp ebp, dword [rdi + rdi*8]
test byte [rdi], bh
xchg eax, edi
sbb al, 0x64
nop
clc
clc
mov al, 4
sbb dword [rax], ecx
ror byte [rip + 0x19f8e20], cl
sahf
jl 0x4085be
test al, 0x14
test al, 0x14
sbb ah, byte [rax + rdx*4 + 0x21]
sbb ecx, dword [rcx + 0xdd0d03f]
fld dword [rbp + 0x1003301c]
xchg eax, esp
or ebx, ecx
mov dh, 0x90
cwde
movabs al, byte [0x3f9d0f5b29b2192f]
adc byte [rsi], dl
enter 0x3733, 7
jg 0x4085af
jno 0x40858d
sbb al, 0xb2
ret
add byte [rbx - 0x2b762b01], ah
mov dword [rax + 0x1a], ecx
or qword [rcx + 0x190721bf], r13
insb byte [rdi], dx
loopne 0x408645
loopne 0x408597
and byte [rbx + rax*2], ah
jb 0x40862e
mov cl, 0x3c
jae 0x408625
add byte [rdi + 0xe647f07], 8
jb 0x4085ad
mov edi, 0x233704f2
pop qword [rdi]
or al, 0x3c
fld dword [rbp - 0x37]
jg 0x408611
in al, 0xda
xor al, 0x27
xchg eax, edx
mov al, 1
add bl, bl
or ecx, eax
rol byte [rbx], cl
frstor dword [rax + 7]
mov edi, 0xc9437480
adc bh, ah
movhps qword [rax], xmm4
mov eax, 0xff07e8c9
nop
leave
lock sbb dword [rax + 0x6f80866], edx
clc
enter 0x242e, 0x37
call 0x220a0570
sbb dword [rax + rdx - 0x68], esp
clc
fucomip st(4)
mov esp, esp
clc
fild word [rdi]
add dword [rcx], eax
leave
xchg eax, ebx
add al, ah
add al, ah
test al, 1
sub byte [rdx], 0x24
or bh, byte [rbx - 0x78b23f00]
jg 0x4086a1
mov byte [rcx + 6], 0xa4
or al, al
mov eax, 0xf276bfe1
and bh, byte [rcx + 0x50]
add dword [rip + 0x8173001], edx
add ebx, 0x42
xor al, 0xbf
cmpsb byte [rsi], byte ptr [rdi]
insb byte [rdi], dx
jbe 0x408708
adc dword [rbx], edi
mov byte [rax + 0x24], bl
jo 0x4086c9
js 0x4086d9
add dword [rdi - 0x326a278b], edi
mov ebx, 0x50fff000
fadd dword [rax]
rcr byte [rdi + rdi*8 + 0x7f094a1f], cl
xchg eax, ecx
cmp eax, 0x326916d9
mov dh, cl
jg 0x4086d9
add byte [rax], al
add byte [rax + 0xff0000], dl
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip + 0x6d080216], ecx
outsb dx, byte [rsi]
jle 0x4086f2
shr ebp, -0x45
add dword [rax], eax
push rdi
cmp al, byte [rax]
add byte [rax + 0x49000209], ch
add dword [rax], eax
fdivr st(4), st(0)
add byte [rax], al
add bh, bh
