call 0x405860
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x405678
add ebx, ebx
je 0x40562e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x405666
cmp rbp, -4
ja 0x405666
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x40564e
add ecx, 4
mov dl, byte [rax]
je 0x405676
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x405666
ret
cld
pop r11
cmp r8b, 2
je 0x40568e
jmp 0x40570b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40569e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x405686
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x4056b6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x4056a3
sub eax, 3
jb 0x4056d4
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40570b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x4056fb
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x4056f9
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4056e8
cmp rbp, -0xd00
adc ecx, eax
call 0x40563a
jmp 0x40568e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4057e4
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x405782
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x4057ce
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x4057a1
push 0x3a707474
jne 0x4057fa
js 0x4057ba
jae 0x4057f4
outsb dx, byte cs:[rsi]
je 0x4057b3
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x405821
jb 0x405813
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x40583e
jb 0x405851
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x222564
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x222564
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x40571c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x405847
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4057f5
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add al, 0
jmp rbp
call 0x706f58ef
jb 0x405907
movsxd rbp, dword [rdi]
jae 0x405901
insb byte [rdi], dx
js 0x405907
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x4058e7
cmp rsi, rcx
jae 0x4058ef
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x4058ce
cmp al, 0x8f
ja 0x4058ce
cmp byte [rsi - 2], 0xf
je 0x4058d4
sub al, 0xe8
jg 0x4058d1
push rdi
cmp al, 1
ja 0x4058bc
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x4058bf
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x4058ec
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x405943
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c5dc1
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x405987
mov al, 0xa
jmp 0x405987
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x405963
inc ebx
mov al, 0
jmp 0x40598b
mov al, 2
jmp 0x40598b
mov al, 3
jmp 0x40598b
mov al, 0x3c
jmp 0x40598b
push rcx
rcr ah, 1
fstp st(7)
jle 0x4059cc
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x4059de
jg 0x4059d0
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296ab153
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x405a2a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cbaba7
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x405a32
cmp esi, 0x21585055
jne 0x405a36
jge 0x405a28
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x405a2b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x405a2f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x405adb
pop rcx
or al, 0x3b
jb 0x405ae1
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x405a53
jmp 0x405a55
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3665996
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf57bde
in eax, dx
jg 0x405a8d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x405ad3
mov bh, 0x2a
add edi, 0x10
jmp 0x405ad0
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x405b0d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x405b49
jne 0x405b60
fstpnce st(6), st(0)
jle 0x405b29
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x405b5f
jrcxz 0x405b93
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1faf7
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x405c12
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x405bd2
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x5829a1a7
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x405c45
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x405bdf
and ecx, 7
or al, 0xeb
jae 0x405c4a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x405c7f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x405cbd
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x405c76
push rax
call 0xffffffff868d5963
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x405c80
std
cmp edi, esi
xchg eax, edi
jle 0x405cd5
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c9a261
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x405cd3
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x405cc1
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x405cea
js 0x405d2a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x405dbc
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad6ff7
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x405ddd
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x405de2
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc25894
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x405d70
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
push rsp
or al, 0
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], dl
and byte [rdx], al
xchg eax, edx
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
call qword [rax + 0x63]
add dword [rax], eax
popfq
add byte [rax], r8b
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x405e96
je 0x405e9f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x405e68
mov dh, 0x7d
jbe 0x405e67
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x405ea0
sahf
sahf
add al, 0
cwde
add eax, 0x1cb2e000
and byte [rdi + 0x8500006], bl
stc
add al, 0xf2
add dword [rax], ecx
add al, cl
or dword [rax], eax
cwde
jl 0x405e82
stc
add byte [rdx], cl
add al, bh
or eax, dword [rax]
test al, 0x14
cmp dword ds:[rax + rax*4 + 0xc], 0xdd000
add byte [rax], bl
lahf
add byte [rax], dl
lldt sp
mov dh, 2
sub eax, dword [rdi]
or byte [rdi], al
adc byte [rdi], dl
jle 0x405e29
jl 0x405ebc
add byte [rax - 0x77ffed43], dh
shl ah, 1
nop
adc eax, dword [rax]
xor al, 0x1f
adc al, 0
fsubr dword [rip - 0x1bf61b9f]
add dword [rip + 0x16e800], edx
xchg eax, esi
or esp, esp
or dword [rdi], edx
add al, bh
sbb byte [rdi], ch
and byte [rdi], bh
sbb dword [rax], eax
add byte [rax], dh
sbb al, byte [rax]
test al, 0x26
nop
seto byte [rcx]
sbb eax, dword [rax]
rcr byte [rdi + rax*2], 0xf2
outsb dx, byte [rsi]
retf 0x113
add al, 0
int1
dec dword [rsi]
loope 0x405ec0
sbb edi, dword [rdi + 0x48029719]
sbb edx, dword [rdx - 0x7fe8e4c0]
mov ebp, 0x2e641921
rol byte [rdi + rbx*2 + 0x44], 6
cmp ebx, ebx
xor eax, 0x15f3288
push rbx
nop
or al, 0x76
and eax, 0xe0477a4f
ret 0x84ae
enter -0x687a, -0x5b
xlatb
wait
nop
sbb esi, dword [rax + 0x1077]
mov bh, 0x40
retf
pop rdi
enter 0x2760, 7
sbb dword [rsi], edx
in al, 0x27
cmp dword [rcx], edi
enter 0x8b8, 0x15
add dword [rcx + rbx], ebx
nop
mov bl, 0x19
and eax, 0x9064412c
pop rax
jo 0x405f3c
in al, 9
xchg dword [rsi + 0x199f4f01], eax
sbb al, byte [rcx + 0x4e]
sahf
sbb al, 0xae
add dword [rcx - 0x1be3d5e7], edi
in al, 0xc9
fadd qword [rcx]
jrcxz 0x405f8b
or al, 2
jb 0x405f6d
sahf
or byte [rbx], dh
sbb eax, dword [rdx]
out dx, eax
add dword [rip + 0x304360c9], ecx
add bh, byte [rip - 0x7cdf37ce]
add al, 4
xor bl, al
nop
or al, 8
jbe 0x405ff5
or dword [rcx + rcx*8], ecx
and byte [rbx - 0x77], al
or bl, byte [rbx - 0x7cdbc9f4]
or al, 0xa3
adc byte [rdx], dh
enter -0x7ce0, 8
scasb al, byte [rdi]
sbb byte [rip - 0x4abc9f37], cl
and r14b, r8b
xor ah, byte [rbx + rax*4]
and al, 0xd6
jo 0x405f76
nop
sbb r15, rcx
movabs al, byte [0x2003222519072793]
mov ecx, 0x90641c27
sub eax, 0x97b8e050
jb 0x405fd0
in al, 0x20
add edx, dword [rdx]
and dl, byte [rdi]
pushfq
shl byte [rax], cl
or dword [rdx + rsi*4], 0xffffffae
adc eax, 0xdebab277
push rax
pop rdi
xchg eax, edi
xor byte [rdi - 0x50], bh
adc dh, dl
sbb ebx, esp
in al, dx
retf 0xf7a
call 0xfffffffffc376507
ror byte [r8], cl
push rdi
push rsi
jg 0x40600f
sub byte [rdi + rsi*2], dl
popfq
xchg eax, edx
push bx
adc eax, 0x4285f17
in al, dx
mov edx, 0x9747eb2b
and ch, bh
mov word [rax - 0x1d], es
and byte [rbx + 0x59176e9d], al
ret 0xe765
test dword [rcx - 0x50], esi
or eax, edx
test al, 0xaf
out 0xc, eax
jb 0x40602b
in al, dx
pop rax
add eax, 0x29495c17
mov al, byte [rdi]
mov ecx, 0x462c8390
sal edi, 0x3d
in al, 0x60
xor eax, 0x2a05e08f
and dword es:[rdi + 0xe], ecx
jb 0x4060af
cld
add eax, 0x9c836193
cmp al, 0x7b
ja 0x406073
xor ah, byte [rsi]
pop rbp
pop r14
enter 0x693, -0x12
wait
mov dword [rsi], eax
xchg eax, ecx
je 0x40609b
iretd
pop rsi
hlt
ja 0x406002
push r11
in al, 0x20
scasd eax, dword [rdi]
adc ebx, dword [rsi - 0x38]
xchg eax, ebx
push rax
sub eax, 0x3c3707c5
cmp eax, ecx
leave
ja 0x4060d4
or byte [rbp + 0x5d], ah
leave
xchg eax, ebx
sbb dword [rsi + rsi*2 + 0x23ab0888], -0x64
cmp al, 0x39
enter -0x6be8, 8
imul eax, dword [rcx + 0x58], -0x38
leave
xchg eax, ebx
xor dword [rcx + 9], 0xffffffc1
cmp al, 0xe
sbb dword [rsp + rdi + 0x2809b039], 0x4a
jmp 0x4060fc
enter -0x6c37, 9
mov ds, word [rsi + 0x50]
or dl, byte [rbx - 0x60c3637d]
mov gs, word [rsi]
mov eax, 0x5ecf210a
enter -0x6f34, 0x18
or ebp, edi
jbe 0x406104
jbe 0x406113
movsd dword [rdi], dword ptr [rsi]
lodsd eax, dword [rsi]
or al, 0x72
jb 0x40607d
sub al, 0x8f
mov esp, 0x83939064
insb byte [rdi], dx
wait
and esi, esi
xchg eax, ebx
sbb dword [rsp + rbx + 0x9322420], 0xc
xor cl, al
leave
fmul dword [rbp + rbx + 0x75638a56]
nop
js 0x406104
and al, byte [rcx - 0x7a1ef9fc]
or eax, 0x90cf8307
xchg eax, ebx
or eax, 0x4bb360a7
cmp dword [rcx + 0x72], edi
mov bh, 0xd
push rax
fimul dword [rip + 0x205d8393]
in eax, dx
jne 0x4060e2
sub byte [rdi + rax], 0xa3
movsxd rax, dword [r11 + 0xe]
adc dh, byte [rsi + 0x21]
cmp byte [r13 + 0x49daaf0e], r10b
ficom dword [rdi]
leave
cli
xor dword [r10], r12d
bts dword [rcx], ebx
in al, 0xe4
cmc
cmpsb byte [rsi], byte ptr [rdi]
insd dword [rdi], dx
nop
and edi, ebx
cmp al, 0xe1
test dword [rcx - 0x60c04380], esi
rol byte [rcx - 0x38], cl
xchg eax, ebx
sbb dword [rbx + rcx - 0x6df3f01d], -0x6d
xor al, 0x5a
call qword [rsi - 0x79]
or edi, dword [rcx + 0x72]
nop
adc byte [r10], bl
sahf
movsb byte [rdi], byte ptr [rsi]
jb 0x40613d
push -0x359ecbe9
adc byte [rdi + 0x27], dh
sbb esp, esp
cmp byte [rcx + rdx], ch
jns 0x406211
nop
xchg eax, ebx
pop rdx
push rbp
adc dword [rsi - 0x261bd08a], ebx
or edi, dword [rdi + 0x11]
pop rdi
pop rax
retf
adc dword [rsp], ebx
in al, 9
xchg eax, ebp
cmpsd dword [rsi], dword ptr [rdi]
sub cl, bh
adc dword [rcx - 0xa], edi
sahf
jle 0x40615f
pop rax
adc dl, byte [rdi]
sub eax, 0x3c9c8748
mov dword [rcx], eax
jge 0x406184
jp 0x4061f3
iretd
pop rsi
ficom dword [rdx]
ja 0x4061bc
push rsp
and dl, byte [rbx]
js 0x4061ff
mov dword [rbp - 0x45b0ecab], 0x7b3c9c7b
and dword [rbp - 0x4fd1a0ed], edx
cmp eax, 0x8393921d
rcl byte [rbx], 1
push rbp
sub eax, 0x93907214
cmpsd dword [rsi], dword ptr [rdi]
adc byte [rdx], ch
mov cl, byte [rbp + 0x14]
cmp dword [rcx + 0x76], edi
sub eax, 0xe6146b4f
sahf
mov ebp, 0x14929890
xlatb
jp 0x406268
in al, dx
nop
pushfq
retf 0x4f14
xor edx, dword [rip + 0x1761c8bf]
pop rdi
mov byte [rdi], dl
scasb al, byte [rdi]
jns 0x40624f
iretd
pop rsi
fst qword [rip + 0x22603d47]
in al, 0x85
cmp al, 0x78
mov fs, word [rdx + 0x16]
sbb byte [rcx + 0x39720e4f], bl
mov dword [rsi], edx
scasd eax, dword [rdi]
popfq
ja 0x40626d
iretd
js 0x40620e
setl byte [rax + rbx*8]
mov word [rbx + 0x52], es
pop rbp
adc byte [rip + 0x16df27b8], ah
outsd dx, dword [rsi]
enter 0x17b3, -0xe
pop rax
mov word [rbp + 0x17], ds
pop rdi
enter -0x6c37, 0x5e
cdq
xlatb
jl 0x4062ef
loope 0x4061fc
cmp al, 0x39
cld
xchg eax, esp
mov al, 0x7a
sbb byte [rdi + 0x40], ah
loopne 0x406208
cmp al, 0xfa
movabs byte [0x197fbc27243a9f18], al
push rdi
fistp dword [rcx]
adc edi, dword [rax + 0x21]
out dx, eax
stosb byte [rdi], al
and eax, 0xb024571a
pop rsi
enter -0x69a4, 0x40
sbb dh, byte [rdi]
or al, 0x21
sbb edx, edi
sbb bl, byte [rdx]
jg 0x4062d7
sahf
mov ebp, 0x1ab36990
cmpsd dword [rsi], dword ptr [rdi]
cli
lahf
in al, 0xc9
fcomp qword [r10]
sub al, 0x1b
sahf
mov ebp, 0xbe476790
cmpsb byte [rsi], byte ptr [rdi]
sbb ebp, dword gs:[rdi]
mov bl, byte [rsi + 0x48]
sbb eax, 0xe0c642e4
and eax, dword [rdi + 0x5e04f217]
ficomp dword [rbx]
je 0x724e9290
mov bl, 0x1c
movsb byte [rdi], byte ptr [rsi]
xor dword [rdi + 0x131c4369], ebp
js 0x406312
push r10
xchg byte [rcx + 0x1c], dh
cmp al, 0x39
enter -0x5437, 0x3d
lea r11, [rdx + rdx]
mov al, 0xc8
xchg eax, ebx
sbb dword [rdi + rcx - 0x4587e31f], -0x6d
iretd
pop rsi
sbb al, 0xef
js 0x4062cc
add bh, byte [rdx]
in al, 0xe4
leave
and dword [rip + 0x1d1f490a], ebx
cmp al, 0x7b
and dword [rdi - 0x71], ecx
rol byte [rbx - 0x48], 1
sbb eax, 0x219fa277
call 0x175e4db8
and dword [rbx], 0x78ce4874
neg byte [rip + 0x1e2f2c87]
xchg eax, ebx
sahf
mov edi, 0x175ab0e
xchg eax, ebx
sbb dword [rbp - 0x38], -0x80
cld
in al, 0xc9
add byte [rbp + 0x1f], bl
ficomp word [rcx - 0x64]
cmp eax, ecx
leave
xchg eax, ebx
xchg eax, edx
pop rsp
and byte ss:[rax - 0x44c37a1b], al
test al, 0x1f
stosb byte [rdi], al
and byte [rdx - 0x62], al
hlt
retf 0x749f
and byte [rdi - 0x7a17564f], bh
sbb al, 0xec
movabs byte [0xbc67932110b0e417], al
out dx, eax
and dword [r15], r12d
mov esi, 0x72790ba7
nop
and byte [rcx - 0x2c], ch
je 0x406401
in al, 0xd9
and dword [rdi + 0x22079fcc], esp
sbb dword [rsp], ebx
nop
xchg eax, ebx
push rdx
xchg eax, ebx
and al, 0x1d
jne 0x4063dc
push 0x1809e4e
mov ecx, 0x27936711
mov ebx, 0x22c8bf04
and al, 0x41
and dword [rdi - 0x18], ecx
nop
sub esp, dword [rbx]
mov edi, 0x921c55e4
xor edi, dword [rax - 0x77]
and ebp, edi
int1
and eax, dword [rdx]
in al, 0x19
ja 0x406367
movabs eax, dword [0xa7243a40b57241c]
jg 0x40640a
xlatb
in al, 0xd9
movsd dword [rdi], dword ptr [rsi]
and al, 0xef
pop rbp
adc spl, byte [rip + 0x727305f]
mov ebx, 0x17699890
sub al, 0xb3
cmp al, cl
and dl, cl
mov byte [rdi + rcx + 0x39], ah
jns 0x40647b
nop
jne 0x4063f4
and eax, 0x36678a3c
and al, 0x27
xor ah, byte [rsi]
mov edx, 0xf49e1777
adc byte [rip + 0x205f26a6], ah
mov ebp, 0x93907279
xlatb
xor al, 0xde
cmpsb byte es:[rsi], byte ptr [rdi]
nop
cmp dword [rbx], esi
out dx, eax
sub al, 0x96
mov ebx, 0x1dbd6790
not dword [rdx - 0x64]
cmp dword [rdi], edx
enter 0x2720, 7
int 0xac
pop rcx
wait
sbb dword [rdi], esp
add al, 0x38
xchg eax, esp
insb byte [rdi], dx
fnstsw ax
vmwrite rax, qword [rsi + 0x2f]
in al, 0x2e
cmp al, 0xf1
imul edx, dword [rax + 0x3b0bc09c], 0x28
or al, 0x81
cmc
add ch, bl
jae 0x406495
mov bh, 0x28
loope 0x4063f8
cmp al, 0x7b
or ebp, dword [rcx]
pop rdi
loop 0x4064db
sub qword [r15], rbx
cmp ecx, eax
test dword [rip + 0x5c2fbc70], edi
jle 0x4064dc
rol byte [rcx + 6], 0x39
loop 0x4064c5
xchg byte [rcx], bh
jns 0x406509
out 0x29, eax
ja 0x406474
and eax, 0x2724384e
adc ebp, dword [rdx]
push 0x21c52a4e
cld
xchg eax, esp
movsd dword [rdi], dword ptr [rsi]
sub ah, ah
and byte [rbx + 0x1a40e79c], al
cli
sub cl, byte [rdi + 0xe]
jb 0x4064ab
xchg eax, edx
call 0xffffffff92738fdc
mov esp, 0x592178c0
sub esi, dword [rdi + 0x42c22b77]
xor al, byte [rsi]
mov gs, word [rdi]
in al, 0xe4
pop rcx
sbb eax, 0x9aa72c11
xor dword [rbx - 0xb], 0x5a1c9e42
sub al, 0x1c
push rdi
sub al, 0x32
enter 0x6793, -0x29
add dh, byte [rip + 0x212c072b]
movsxd rax, eax
adc byte [rip - 0x363715f1], ch
xchg eax, ebx
jp 0x406560
sub eax, 0x8250886f
sahf
hlt
add bh, byte [rcx]
movabs dword [0x9e42650b472deb2d], eax
or ebp, dword [rsi]
scasd eax, dword [rdi]
push 0x18138bb2
cmp ch, byte [rsi]
mov gs, word [rsi]
push rdi
add ah, cl
test dword [rsp], edi
push rsp
mov eax, 0x90bb1f2e
int1
int3
push rdi
push r11
clc
nop
jo 0x40653d
or al, 0x2f
sub byte [rdi - 0x42986f45], bl
cmp ch, byte [rdi]
je 0x40655c
cmp al, 0x7b
and dword [rdi], eax
mov eax, es
xlatb
out 0x34, al
pushfq
cmp al, 0xe3
test dword [rbx], ecx
xor byte [rdi + 0x5a4ad2], dh
nop
add dword [rbx + 0x30], 0x5a
xor byte [rax], ah
je 0x4065a7
mov ss, word [rdi + 0x30c16402]
sbb eax, 0xe95eb392
xor bh, dh
cmp r14, qword [r9]
and byte [rdi], ch
in al, 0x49
lahf
pop rdx
jo 0x4065b0
pop rbx
rcr dword [rbp - 0x48], 1
adc dword [rdi + 0x4f2108b0], ebx
adc dl, byte [rdi - 0x4dc1ce43]
sar dword [rbx + 0x320b7ac0], 1
push rbp
in al, dx
call 0x430857e3
adc ah, byte [rdi]
test dword [rdi], ebx
nop
sahf
lea eax, [rdx]
xor dl, byte [eax - 0x637cfb6a]
mov ebp, 0xec8f3286
add al, 0x27
and eax, dword [rdi - 0x62]
xchg eax, r8d
xor ah, byte [rax - 0x300270a1]
enter 0x3291, -0x4a
movabs al, byte [0x7b3c8557bcef3387]
and esp, esi
xor esp, dword [rdi + 0x217a5956]
iretd
loopne 0x40660c
xor al, 0xd7
test byte [rdx + 0x78cf344b], dh
and dword [rdi + 0x17], ecx
pop rdx
mov ch, 0xac
xor al, 0xff
sub cl, byte [rcx + 0x4f]
jbe 0x406615
out dx, eax
mov ah, 0x70
adc eax, 0x93c85e01
jnp 0x406635
iretd
insb byte [rdi], dx
cmpsb byte [rsi], byte ptr [rdi]
xor eax, 0xcf217b3c
cmpsd dword [rsi], dword ptr [rdi]
insd dword [rdi], dx
or r14d, dword [r14]
mov cl, 0x9f
pop rax
loopne 0x406599
loopne 0x4065d4
test byte [ebx + eax], bl
pop rsi
jne 0x406656
or dl, byte [rcx - 0x50]
or edi, dword [rcx]
fcomp dword [rdi + rax*2 + 0x17daa4e6]
or eax, dword [rdi + rdx + 0x29578872]
test byte [edx - 0x62], 0xd4
xchg eax, esi
xchg dword [rbx], ebp
mov al, 0x37
jns 0x40661a
or edi, dword [rcx + 0x75]
test bh, ch
sub byte [eax + 0x4e], bl
sahf
ror dword [rbx], 0x14
cmp byte [rdi + 0x2f54869a], ah
in al, 0xc9
push r9
cmp bh, bh
xchg eax, ebp
cmp byte [rdi + rbp], al
in al, 0x19
iretd
or al, 0x61
cmp byte [rax + rax*2 - 0x1c707ec6], bh
cmp bh, ch
cmp dword [rcx], eax
leave
pop rcx
xchg edi, eax
jns 0x4066b5
idiv dword [rax - 0x3e]
or dword [rcx], edi
push rdi
mov dl, 0x39
sar byte [edx + 0x2c64f239], 1
fistp qword [rax]
cmp eax, edi
mov dword [rbx - 0x7f], edi
or dword [rdx], ecx
cmp ah, byte [rdi]
push rsp
cmp bl, byte [rdi - 0x31]
call 0x492ea326
xchg eax, edx
cmp al, byte [rdi]
int3
imul ecx, ecx, 0xde2178b3
cmp bh, bh
ret 0xe97c
add eax, 0x3b78c872
xchg eax, ebx
cmp ecx, dword [rdi + 0x3c85dda3]
push rdi
rcl dword [rdi], cl
adc dword [rdx], eax
xchg eax, edi
xchg qword [rax + rsi*4 - 0x20], rsp
cmp edx, dword [rdi]
in al, dx
test dword [rcx + rax*4], edi
cmp al, 0x3f
pop qword [rcx + rdi*2 - 0x5ec3d0c4]
sbb al, 0xa0
movabs byte [0x9c8393923442d73c], al
jp 0x4066a3
cmp al, 0xf0
in al, 0xe4
pop rcx
sbb eax, 0xd6773cec
loopne 0x406686
pushfq
sbb al, 7
cmp eax, 0xe43d1990
and byte [rdi], ah
push r15
push -0x57
cmp eax, 0xf21760e4
cmpsb byte [rsi], byte ptr [rdi]
mov dword [rdi + 0x38], 0x12790bbc
fdivr dword [rip - 0x3a5c1551]
or edi, dword [rcx - 0x3a]
or bh, byte [rsi]
movsxd rsp, dword [rcx - 0x64f8c1ae]
nop
and esp, dword [rdi - 0x24]
xchg eax, ebp
popfq
wait
and edi, ecx
jp 0x406755
lahf
sbb byte [rdi + 0x78], ch
and dword [rdi + 0x78], ecx
mov bh, 0x3e
test dword [rdx + 0x3f], 0x784f3eed
and edi, ecx
sahf
pushfq
fbstp tbyte [rax + 0x15]
leave
or dword [rax + rdx*4 - 0x48c0a4c0], ebx
dec byte [rsi]
sub al, 0xb0
mov edx, 0xbf66373f
out 0xad, eax
mov edi, 0xe42ad46
jbe 0x406790
or al, 0x58
in al, 0x48
sub al, 0x41
out dx, eax
in al, 0x80
adc al, 0x2f
in al, 9
sbb al, 0x99
leave
and dword [r15 + 0x3a], ecx
xor dword [rdi], 0x7e2f420d
pop r14
enter 0x7ab3, 0x32
mov edi, 0x425da7fd
xor byte [rsi - 0x38], bl
adc esi, edi
movabs byte [0x2f5272430f427332], al
out 0x42, al
vmread qword [rbx], rcx
ret 0xc288
mov word [rbx + 0xf], es
sub bh, ch
js 0x40673b
je 0x4067da
imul r8d, dword [r11 + 0x37], -0x24
js 0x4067e8
mov ebp, 0xf0f85743
sahf
jo 0x4067c5
sbb al, byte [r14 + r9 - 0x45]
nop
sbb dh, byte [rcx]
cmp byte [rdi], dl
push rax
pop rsi
hlt
ret 0x5b2f
jge 0x40682e
pop rax
jno 0x4067ef
add dword [rdi], ebx
test al, 0x44
cmp edx, esi
in al, 0xce
xor byte [rbx - 0x37], cl
push 0x3c813831
sbb dword [rbx], edi
fild word [rbp + rcx*2 + 0x45]
add al, 6
mov esp, 0x45970740
or byte [rdi], ah
adc al, ah
mov ah, 0x45
sbb al, 0x46
and dword [rdi - 0x76], eax
outsb dx, byte [rsi]
mov bl, 0x53
fiadd word [rip - 0x428b98a]
xchg esp, esp
pop rcx
mov ebp, 0x47376490
pop rdi
xchg eax, edx
pop rsp
enter 0x2ec1, -0x65
fdiv qword [rbx + rdx*8 - 0x2c953d0a]
adc dh, byte [rdx]
sbb al, byte [rdi - 0x21]
out dx, eax
in al, dx
add eax, 0x4bf47fa
loop 0x4067d9
cmp al, 0x81
jmp qword [rax + 0x3348bbb9]
enter 0x5711, 0x16
pop rsi
adc ecx, dword [rcx - 0x79]
add ah, byte [rcx]
pop rsi
enter 0x256c, 0x30
inc qword [r11 - 0x6e93e264]
cdq
cmpsd dword [rsi], dword ptr [rdi]
in eax, dx
sar byte [rcx + 0x52], 0x2f
nop
ror qword [r9 + 0x27], cl
push rsi
or r15d, dword [rcx - 0x2e]
or ebp, dword [rdx + rcx*2]
push -0x4f
or al, 0x78
ret 0x4ac3
sbb bpl, byte [r15 + 0x35]
or dword [rcx], edi
iretd
xor al, 0x32
or rbp, rsp
nop
pushfq
out dx, eax
cli
loop 0x40683d
pushfq
shl dword [rdx + 0x4b], 1
movabs al, byte [0xbad731c84d834b68]
movabs byte [0x23937a3f272017a1], al
xor eax, 0xd24bb967
in al, 0xc9
xchg eax, ebx
sub edi, dword [rbx]
add edi, edx
push 0x7b
cmp dword [rcx + rdi*2], 0x4c1b01ea
sub byte [rdi + rdi*4 - 0x6f], cl
loop 0x406867
cmp al, 0x42
leave
or dword [rax + rcx*8 - 0x70], ebx
pop rdx
mov dil, 0xcd
ror byte [rbx], 0xac
scasd eax, dword [rdi]
xlatb
test dword [rbx + rbx*4 + 0x40], 0x42af204e
xchg rax, r8
sub al, 0xba
sub al, 0xa0
and dword [rdi - 0x1d6f10a8], ebx
add al, 0xf2
ret 0x184d
fild word [rsi + r11*2]
sub al, 0x4e
pop rdi
jl 0x40696b
push rdi
adc dword [rdi + rdx - 0x154b030e], edi
test dword [rcx + rbp*8], edi
xchg eax, esp
retf 0x5f4e
movabs dword [0x7f4ef1e0b0275994], eax
add cl, byte [rdi + 0x4f]
in al, 9
in al, 0xfe
mov dl, 0x35
push r10
push rcx
test ecx, edx
shr dword [rsi], 0x5a
shr byte [rdi + 0x3c85e297], cl
loope 0x406950
or dword [rdx + 0x45], 0x50
adc ecx, dword [rsi - 0x38]
xchg eax, ecx
cmp bh, byte [ebp - 0x5b]
push rax
fist word [rbx + 0x7cc85d83]
outsd dx, dword [rsi]
mov esp, 0x85a8aa17
sbb al, 0x64
nop
adc esp, esp
fsubr qword [rdx - 0x13f44f8e]
or eax, 0x17567751
sahf
xchg eax, ebx
or dword [rdx + rsi*2], 0xffffffc1
add dword [rsi + 0x7f], 0x9064595e
in al, dx
fild word [rax]
add dword [rdx - 0x62], edx
jno 0x406997
sub dword [rdi], eax
push r10
push rdi
lodsb al, byte [rsi]
mov bl, 0x13
pop rax
mov edi, 0x19d99752
xchg esp, esp
lodsb al, byte [rsi]
push rdx
movsb byte [rdi], byte ptr [rsi]
push rbx
xchg edx, esi
cmc
in al, 0x36
movabs al, byte [0x1784f217544f178c]
rcl byte [rbx - 0x21], 1
xor byte [rdx + 0x3c85e929], dh
mov dword [rdi + rdx*4 + 0x22], edx
mov al, 0x5f
push rsp
mov edi, 0x3921c181
test al, 0x66
push rsp
call 0x7cbba65f
push rsp
retf
xchg eax, esp
cmpsd dword [rsi], dword ptr [rdi]
push rsp
lodsb al, byte [rsi]
js 0x406a04
iretd
jg 0x406a34
jo 0x4069db
push rsp
cmovle esp, dword [rax - 0x2b]
or dword [rbp + rdx*2 + 0x4f], ebp
cmpsd dword [rsi], dword ptr [rdi]
push rbp
loopne 0x4069a5
or ecx, dword [rdi + rsi - 0x6fdbe828]
out 0x26, eax
push rsi
cmpsd dword [rsi], dword ptr [rdi]
cmc
and byte [r15], r12b
mov ebx, 0x400e1743
jo 0x406993
adc al, 0x8e
leave
pop rdx
cmpsd dword [rsi], dword ptr [rdi]
jg 0x4069ee
test dword [rcx], edi
push rsi
stosb byte [rdi], al
inc qword [r15 + 0x4f]
js 0x406a84
jo 0x406a4c
push rdi
jg 0x4069de
mov cl, 9
sub al, 0x7a
and dword [rdi + 0x57], ebp
mov edi, 0xb070217a
retf
add dword ds:[rdi - 0x3bdfa7fa], 0x46ff8c09
pop rax
divps xmm1, xmm0
adc ecx, dword [rsi - 0x66]
pop rax
pop rsi
test eax, 0x178c58ea
test byte [rdi], 0x98
mov esp, 0x3f58f917
jb 0x406a51
not byte [rax + 0x6f594f22]
nop
jo 0x406ab1
mov dh, 0x59
xchg esp, edx
sub byte [rbp - 0x3342d870], bh
pop rcx
out dx, eax
push rbx
insd dword [rdi], dx
call 0xffffffff90fc91d5
imul esi, dword [rax + 0x45], 0x5a
xor dl, byte [edx]
mov esp, 0x5a94a090
ja 0x406aff
pushfq
rol byte [rdx + 0x675ac017], 0xe
pop rbx
mov es, word [rcx]
pop rdi
or al, 0x7c
jbe 0x406b13
pop rbx
enter 0x4e33, 0x20
xchg eax, edi
pop rbx
mov ch, 0x91
or esp, dword [rsi + rbx*2 + 0x7c0f5c17]
pop rsp
enter -0x6e6d, 0x23
ja 0x406a64
push rdx
jnp 0x406a7c
pop rsp
pushfq
rol byte [rax - 0x48a317ed], 0x25
pop rbp
enter -0x1d4f, 0x49
xchg dword [rbx], esp
add dword [rcx + rdi], ebx
jb 0x406ab7
xor dword [rbp + 0x14], ebx
lea edx, [rdi]
add dword [rax + 0x5d], esp
and ecx, dword [rdi + 0x46]
mov es, esi
push 0x365dc045
nop
pushfq
nop
stosb byte [rdi], al
push rdx
pop rsi
xchg dword [rbx + 0x16391986], ecx
mov esp, 0x96375e8b
jge 0x406b57
loopne 0x406a7f
pushfq
cmp al, 0x1f
pop rdi
xchg eax, esp
pop rsi
pop rdi
mov bl, 0x4e
enter 0x3711, -0x10
xchg eax, edi
pop rdi
cmp al, 0x39
enter -0x6b37, 0x42
push -0x48
pop rdi
popfq
js 0x406b60
loopne 0x406aa0
neg dword [rdi + 0x6f]
out dx, al
xor al, byte [rdx + 0x70]
and ah, byte [rax - 0x11]
movabs eax, dword [0xf6af6084f2720e6c]
push 0x793c6089
and dword [rdi + 0x16], ecx
pop rdx
mov cl, 0x60
sbb byte [rbp + 0x17], dl
in al, 0x85
sbb ah, byte [rcx - 0x31]
cmp al, 0x3b
adc byte [rdi], 0xf2
movsb byte [rdi], byte ptr [rsi]
xlatb
call 0x79a212d5
adc byte [rdi - 0x65889e04], bl
sub cl, byte [rbx]
jmp 0x62627729
hlt
push rdi
js 0x406bc6
jne 0x406b17
push rsp
test al, 0x47
jbe 0x406bd0
mov bl, 0x13
jb 0x406af6
adc dh, byte [rsi + rsi*8 + 0x247d762]
pop rsi
enter 0x56ea, 0x50
movsxd rdi, dword [rdi + 0x44]
imul esp, dword [rdi], 0x50232790
jp 0x406bed
fldenv [rbx + 6]
in al, 0x49
mov edi, 0x640493be
enter 0x43b3, 0x72
jo 0x406bea
out dx, eax
fiadd word [rcx + 0x76]
add al, byte [rcx]
pop rsi
xchg eax, ecx
add al, 0x65
cmpsd dword [rsi], dword ptr [rdi]
pushfq
cmp al, 0xe3
add eax, 0x683f655e
xor bh, byte [rdx]
pop rsi
enter -0x7c6d, -0x58
movabs byte gs:[0xb704f2720e65e547], al
leave
jno 0x406c18
xor ah, byte [rsi - 0x50]
js 0x406bec
out dx, al
push rbp
iret
mov esp, 0x6f2f6790
xlatb
adc al, 0xb6
mov ecx, 0xe42f0066
sbb dword [rdi + 0x6748ad9e], ecx
cmp byte [rdx + 0x42], dh
mov ss, word [rdi + 0x677abbb8]
cwde
cmp edx, esi
movsb byte [rdi], byte ptr fs:[rsi]
cdq
pop rax
jo 0x406bad
or edi, eax
sbb al, 0xb2
ja 0x406bc8
or esp, esp
leave
adc al, 0x58
push 0x7a3068b7
and dword [rbx], esp
iretd
push 0x9e42faf
xor al, 0x69
lodsd eax, dword es:[rsi]
mov edx, 0x813a8469
push rbp
push rdx
push -9
cmp dword [rcx - 0x3a], edi
or dword [rax + 0x3028576a], eax
and eax, 0x72790bc
push 0x42
pop rdi
out dx, eax
push -0x16
test dword [rsp + rdx + 0x6b5612e7], ecx
adc dword [rcx], 0x723f3027
imul esi, dword [rdi - 0x2a], 9
sub al, 0x3a
adc ebp, dword [rdi + rbx*2 - 0x71]
insb byte [rdi], dx
sahf
ror dword [rbx], 1
jns 0x406bdd
ja 0x406c36
insb byte [rdi], dx
add eax, 0xf2790b9d
insd dword [rdi], dx
nop
mov ecx, dword [rbx + rax*2 + 0x6d5dc272]
cld
lodsd eax, dword [rsi]
insd dword [rdi], dx
sahf
ror byte [rbx], 1
outsb dx, byte [rsi]
inc byte [rdx - 0x7d]
pushfq
sbb al, 0xec
sbb dl, byte [rdi]
mov cs, word [rdi - 0x74]
insd dword [rdi], dx
in al, 0x52
xor eax, 0x1c10bf12
add byte [rdx], 0xe1
add al, 0xf2
mov ah, 0x6e
stc
outsb dx, byte [rsi]
add bh, byte [rbx - 0x7f]
int1
adc eax, 0x6f62e76f
cmpsd dword [rsi], dword ptr [rdi]
in al, dx
sahf
jbe 0x406d18
xchg qword [rdx - 0x7a1731e9], rdi
sbb al, 0x60
wait
out 0x6f, al
scasd eax, dword [rdi]
popfq
in al, 0x58
je 0x406d04
jo 0x406d1e
pop rsi
scasb al, byte [rdi]
loop 0x406cc7
bnd jmp 0x7142dd94
iretd
js 0x406cee
iretd
add byte [rbp + 0x5e], ch
jno 0x406d13
sbb al, 0x72
in al, 0xc9
xchg eax, ebx
inc byte [rcx]
movabs dword [0xcf2f12790b598e71], eax
jno 0x406cde
add dh, byte [rax + 0x7a]
and dword [rbx], esp
jno 0x406d47
test al, 0x1a
jb 0x406d27
jp 0x406d17
iretd
fcomp qword [rbp + 0x46]
jb 0x406d34
sbb byte [rdx + rdx*4], bl
push rdx
wait
jb 0x406cc4
test byte [rdi], dl
test byte [rbx + 0x1f], dh
mov word [rbx], fs
stosb byte [rdi], al
mov dword [rsp + rdi*4], 0x271818b0
jb 0x406d8c
sbb al, 0x29
cmp byte [rcx - 0x308bf351], al
je 0x406d68
sahf
mov word [rdx + 0x2c], cs
je 0x406d9d
mov esp, 0x8ff46790
je 0x406cf9
fsub qword [rbp - 0x35]
je 0x406d73
sbb dword [rcx], edi
adc ch, byte [rdi]
hlt
jge 0x406da2
sub esi, dword [rbp + 0x2e]
adc byte [rax], bh
sub dword [rdi + 0x75], 0x5e0999e7
enter 0x2fc1, -0x58
cld
jne 0x406d29
pop rsi
and byte [rdx + rax + 0x55], dh
jbe 0x406ce8
imul esi, dword [rsi + 0x17], 0x48
xor byte [rdi + 0x7f], ch
jbe 0x406d0a
sti
repne movsb byte [rdi], byte ptr [rsi]
ja 0x406cf3
mov eax, 0xe4e484b
jb 0x406d1c
mov bh, 0x77
mov esi, 0x719c90e0
fdiv qword [rdi - 0x61]
mov bh, 0x42
js 0x406d0c
js 0x406da4
sub byte [rbx + 0x42677876], ah
sahf
jne 0x406d90
adc dword [rcx + 0x1f], edi
pushfq
test al, 0xc4
or edi, dword [rcx - 0xe]
jns 0x406d94
insb byte [rdi], dx
jns 0x406d82
adc ecx, dword [rax - 0x11]
mov cl, 0x17
mov al, 0xb2
pop rsi
enter 0x2ec1, -0x19
pop rdi
sub cl, byte [rbp + 0x21]
jp 0x406d3d
js 0x406dd4
iretd
rep outsd dx, dword [rsi]
jp 0x406d61
test byte [rbx + rdx + 0x75285e72], 0x7a
out 0xc8, eax
mov esp, 0xc838c2f
jb 0x406ddb
xchg eax, ecx
cmp rax, 0x41813a87
retf -0x6886
add eax, 0x921d027b
xor edi, dword [rdi + 0x1a]
jnp 0x406e40
add al, 0x87
jnp 0x406d9f
and r8b, dl
or esp, esp
and byte [rax - 0x3783f885], ah
mov bl, 0x4e
and bh, dl
cmp dword [rdi + rax*8 - 2], 0x89027583
pop rsi
mov esp, 0x7ce5cf7c
push rsi
mov ebp, 0xecf2790
outsb dx, byte [rsi]
jge 0x406e07
mov word [rdi], ss
xor dh, dh
jge 0x406de7
mov esi, 0x902f185e
lodsb al, byte [rsi]
jge 0x406e26
jle 0x406e22
and dword [rcx], edi
mov dword [rdi], edx
push 0x78a0c77e
and dword [rbx], esp
rol byte [rsi + rdi*2 + 0x7ed546df], 0x24
jp 0x406e59
jg 0x406e7e
xchg eax, ecx
jg 0x406e96
and al, r10b
or dword [rax + 0x7fab777f], ecx
sub dword [rax + 0x21], edi
iretd
xlatb
jrcxz 0x406ed0
out 5, eax
rol byte [rbp - 0x7f5810e4], cl
test dword [rbx + rbp*8], edi
cmp dword [rax - 0x6f66ef51], eax
add byte [rcx - 0x30bf43ef], 0x22
sbb edi, 0x38210274
test dword [rcx - 0x7e7e6971], eax
pop rsi
enter 0x7f18, 0x10
test eax, 0x32174781
jb 0x406e85
cmp ebp, 0xbc42012
movsb byte [rdi], byte ptr [rsi]
mov edi, 0x7a878278
and edi, ecx
fadd dword [rdx + 0x61af66d7]
adc eax, 9
cmp dword [rcx], eax
insb byte [rdi], dx
xchg dword [rbx + 0x18c85eb0], eax
fistp qword [rbp + 0x22]
test byte [rdi + 0x4e], cl
and byte [rax], al
test byte [r15], r15b
mov al, byte [rsp + rax*8 + 0x4709190b]
jno 0x406eac
test byte [rsp + rcx*4 + 0x7a], ah
or dword [rdi + 0x34], 0x46a2cf85
mov es, word [rax]
wait
test dword [rdi + 0x48], ecx
scasd eax, dword [rdi]
pushfq
nop
and ecx, dword [rdi + 0x2b]
xchg byte [rcx*4 - 0x6f8d7999], al
xchg eax, ebx
idiv dword [rbx]
lodsd eax, dword [rsi]
mov byte [rsi + 0x5e00c09], 0xe2
xchg byte [rdi - 0x43], al
jb 0x406ec1
sbb al, 0x87
ja 0x406f21
int 0xc0
adc r10b, r12b
xchg eax, esp
xchg dword [r15 + 0x27048138], ebx
jns 0x406e8b
movsd dword [rdi], dword ptr [rsi]
xchg dword [rbx - 0x40], esp
or dword [rdi + rcx - 0x5f60780d], eax
sahf
popfq
nop
insd dword [rdi], dx
mov byte [r15 - 0x6f434e72], r9b
cmpsb byte [rsi], byte ptr [rdi]
mov byte [rdi - 0x7739a77a], ah
push rax
mov esp, 0xd6df2790
push rsp
jns 0xffffffff817b2fee
outsd dx, dword [rsi]
sub cl, byte [rcx + 0x4f895c37]
loop 0x406f3f
iretd
lea ecx, [rcx + 0x72308497]
lodsb al, byte [rsi]
jp 0x406f67
fmul qword [rcx + 0xb8aa4c7]
sbb dword [rcx + 0x32], edi
in al, dx
adc dword [rdx + 0x793907b8], ecx
sbb eax, 0x289c0f8a
mov cl, byte [rcx]
mov ebp, 0x4f402790
imul ecx, dword [rdx - 0x1be37ea1], 0x3f7c82e4
mov al, dl
or dword [rax + rdi*2 + 0x71478b5a], ecx
mov ebx, edi
add byte [r11 + 0x72], 0xa8
scasb al, byte [rdi]
mov edi, dword [rdi + 0x10]
xor esp, esp
enter 0x2391, 0x31
add ebx, eax
mov esi, esi
sub ah, dl
add al, 0xf2
fcomp st(0), st(7)
mov edi, dword [rcx]
mov word [rdi + 0x2f], fs
mov edi, gs
clc
jns 0x406f2c
mov eax, 0x24382464
ja 0x406f65
in al, 9
cmp cl, byte [rbp + 0x72a17ec7]
lea esi, [rbx + rax*2 + 0x72]
add ch, byte [rdi + 8]
in eax, 0x17
and byte [rdi], ch
xor byte [rsi], cl
out 0xf9, eax
dec dword [rip + 0x5ec0b8e]
adc dl, byte [rdi - 0x73d071ae]
jb 0x406f64
mov cl, 0xd0
push qword [rdx + 0x12]
xchg esp, esp
insb byte [rdi], dx
test byte [rsi + 0x3c85607f], 0x8b
or dword [r15 + 0x2f803227], ecx
movsb byte [rdi], byte ptr fs:[rsi]
loopne 0x40705a
movnti dword [rcx - 0x737a1571], edi
adc al, 0x37
push rdx
or dword [rax + 0x40bd5604], edx
out 0x25, eax
nop
scasd eax, dword [rdi]
mov esp, 0x904ae2c0
pop rsi
nop
scasd eax, dword [rdi]
adc byte [rax - 0x5bcdcde9], cl
nop
scasd eax, dword [rdi]
and dword [rcx + 0x16], edi
in eax, dx
nop
lahf
xchg eax, ebx
add dword ds:[rsi - 0x38], ebx
mov bl, 0x91
out dx, eax
pop rax
mov ebp, 0x2679154
jrcxz 0x406fb3
sbb al, 0xde
cmpsd dword [rsi], dword ptr [rdi]
jp 0x406fc5
cmovno ecx, dword [rsi - 0x62]
cmc
ficom dword [rcx - 0x25a426e1]
hlt
in al, 0xc9
xchg eax, r10d
push rsp
adc dword [rbx - 0x7a17d3e9], 0x3c
ja 0x4070a2
rcl byte [rdx - 0x7dbf4259], cl
or dword [rbp - 0x41], ebx
xor al, 0x93
add dh, ah
sahf
xchg eax, r12d
test dword [rdi - 0x6d], ebx
mov byte [r15], r10b
xor bl, dl
cwde
xchg eax, ebx
call 0x27d09808
and ecx, dword [rax - 0x18]
xchg eax, ebx
push rcx
xchg eax, esp
sub cl, byte [rsi + 0x60]
jg 0x407031
xchg eax, esp
in al, 0x49
pushfq
rcl byte [rdi - 0x1a], 0x94
xchg rax, r15
test qword [rsp + rdx + 0x4f95032f], r9
mov bl, 0x17
in al, dx
xor dl, byte [rbp + 0x6c6f3e5f]
xchg eax, ebp
cmpsd dword [rsi], dword ptr [rdi]
cmp al, 0x39
enter 0x1ec9, 0x27
xlatb
xchg byte [rbp - 0x6e6cac67], dl
call 0x57d63533
in al, 0xc8
xchg eax, ebx
mov byte [rax], bl
pop rdi
xchg eax, ebp
shl byte [rdx + 0x64f204e8], 1
push rdi
pop rcx
xchg eax, esi
xchg eax, esi
xchg eax, esi
mov ebp, 0x80973190
iretd
xchg eax, esi
leave
xchg eax, ebx
cmp byte [rcx + 0x67971ccf], al
fcomp dword [rbp - 0x37c6fd10]
push rdx
xchg eax, edi
xchg eax, ebp
xchg eax, edi
in al, 0xec
add al, 2
push rdi
stc
xchg eax, edi
ja 0x407082
test dword [rsp + rax - 0x28679d79], ecx
outsd dx, dword [rsi]
cmc
add ch, bl
rcr byte [rax - 0x5866ce81], 1
sbb byte [rsi - 0x38], 0x5c
cdq
out dx, eax
idiv byte [rax - 0x7f]
cmc
push rsi
cdq
wait
cdq
iretd
mov byte [rcx + 0x4e], al
shr byte [r8], 0xa7
cmpsb byte [rsi], byte ptr [rdi]
cdq
ror byte [rdx - 0x660fdfb2], 0xf7
or dword [rcx], edi
adc bl, byte [rbp - 0x297865c3]
jnp 0x40712c
cmp dword [rcx - 0x3a], edi
movabs dword [0xe49ad7245620ff9a], eax
leave
xchg eax, ebx
shl byte [rsi + 6], 2
wait
enter -0x2ef8, 0xb
test byte [rbx + 0x120442f7], bl
push rbp
pop rax
enter -0x154f, 0x67
pushfq
sbb byte [rdx], dh
pushfq
pushfq
jns 0x4071cb
add al, byte [rcx - 0x10633be9]
shl byte [rax + rdx*4 + 0x14390d83], cl
fcomp dword [rsi - 0x19]
sahf
mov ebp, 0x4c179d1e
push rbp
add qword [rdx + 0x21], rdi
xchg eax, ebp
jb 0x407114
nop
jo 0x40717e
rcr dword [rbp - 0x1c6dd7c1], cl
add al, 0x56
mov ebp, 0x321f9dff
sahf
xchg eax, ebx
sbb dword [rsp + rdi + 0x401c23c3], -0x62
repne lodsb al, byte [rsi]
pop rsi
enter 0x602f, -0x7a
sahf
out dx, eax
jl 0x407147
add cl, byte [rcx - 0x206152e9]
mov edi, 0xe427429e
sbb byte [rdi + 0x1c], dl
insb byte [rdi], dx
lahf
mov edi, 0x790bc163
lahf
fcmove st(0), st(0)
enter -0x6e6d, -0x53
and eax, 0x5e509fda
enter 0x5e33, -0x13
lahf
rsqrtps xmm4, xmmword [rsi + rdi*8]
lahf
jbe 0x407214
add byte [rdi - 0x50], dh
push rcx
movabs al, byte [0x8b4c89790bd118d7]
movabs al, byte [0x77a0d513a833a2b7]
mov ebp, 0xc64f204e
ja 0x40721f
or byte [rcx - 0x4cb35ed1], ah
or ebp, dword [rdi + rbx*4]
mov bl, 0x17
in al, 0x49
test byte [rdi + 0x26], dh
movabs byte [0x98e41c9e4ea2218f], al
test byte [rdx + 0x2fde8fee], ah
in al, 0xc9
mov r14b, 0xa2
mov ecx, 0x4fa30c80
cmp byte [rcx - 0x5c9a3900], al
scasd eax, dword [rdi]
cmpsb byte ss:[rsi], byte ptr [rdi]
test dword [rbx + rdi*2], edi
and dword [rbp + 0x59ec47a3], esi
mov al, 0xe2
loop 0x4071d6
out 0x7a, eax
movsb byte [rdi], byte ptr [rsi]
out dx, eax
add eax, 0x90790bc2
mov ebx, 0x9c37a496
cmc
add ch, bl
loopne 0x4071ea
and esp, dword [rbp - 0x30de7151]
loopne 0x4071df
pop rsp
movsd dword [rdi], dword ptr [rsi]
pop rdi
insd dword [rdi], dx
xchg eax, ecx
pop rsi
enter 0x7893, -0x2b
movsd dword [rdi], dword ptr [rsi]
imul dword [rsi - 0x7b]
in eax, 0xa5
popfq
movabs al, byte [0x178e464f20a63ab7]
pop rax
outsb dx, byte [rsi]
pop rcx
imul esp, dword [rsi + 0x4e040bd1], -0x2c
cmpsb byte [rsi], byte ptr [rdi]
out 0x58, eax
cmpsd dword [rsi], dword ptr [rdi]
cmp al, 0x89
adc ecx, dword [rax - 0x59]
xchg byte [rdi + 0x72a656df], ah
add al, 0xe0
test edi, edx
cmpsd dword [rsi], dword ptr [rdi]
mov bh, 0x18
xchg eax, ecx
or ebx, dword [rcx]
jns 0x4072c2
sub ebp, ebp
cmpsd dword [rsi], dword ptr [rdi]
adc byte [rbx], 0x4e
and al, al
add dword [rax + 0x1fa88aaf], ebp
enter 0x5e13, -0x38
ret 0xd843
test al, 0x4f
out 0x6e, eax
add dword [rdi], ebp
mov al, 0x5e
adc ebp, dword [rcx - 0x3f569b21]
movabs byte [0x185e6fa97b97204e], al
wait
clc
out 0xf3, eax
test eax, 0x8a472327
mov r12b, 0x5c
sbb eax, 0x2c95e0cf
adc byte [rdx], ch
stosb byte [rdi], al
loopne 0x407273
nop
xor dword [edx + ebp*4], esp
iretd
bnd jbe 0x40726a
js 0x407264
mov ebp, 0xbfbfaa8a
stosb byte [rdi], al
enter 0x956, 0x19
xchg dword [rdi + 0x720e40ab], edi
xor ch, byte [rip - 0x1354bfbf]
add al, 0x42
mov ebp, 0xae07ab71
stosd dword [rdi], eax
cmpsd dword [rsi], dword ptr [rdi]
scasb al, byte [rdi]
mov esi, 0x45ccf217
adc byte [rdi + rdx*8], al
sbb edx, dword [rdi]
add ah, byte [rcx]
js 0x407373
xlatb
add ebp, dword [rdi + rdx*8 + 0x7204e0b1]
lodsb al, byte [rsi]
wait
lodsb al, byte [rsi]
in al, 0xc9
enter -0x68fa, 0x4c
sbb dword [rbp + 0x11204ee0], ebp
xor eax, 0xad605fad
add bl, byte [rbp - 0x70607740]
lodsd eax, dword [rsi]
out dx, eax
or dword [rax], esp
add al, 0xbe
lodsd eax, dword [rsi]
fisttp word [rcx]
in al, 0xd9
or ch, byte [rsi + 0x44520bef]
scasb al, byte [rdi]
jns 0x407361
in al, 0xc6
wait
jno 0x407303
jg 0x4072ef
outsd dx, dword [rsi]
cmp dword [rcx - 0x2e], edi
or ebp, dword [rsi + 0x4468a7ae]
or esi, 0xc07205e
scasd eax, dword [rdi]
sbb al, 0xaf
mov edi, 0x701604c0
xor qword [rdi - 0x53f474f1], rbp
loopne 0x4073c6
scasd eax, dword [rdi]
mov edi, 0xe009ffaf
test dword [rsp + rax*4], edi
xchg eax, esp
pushfq
scasd eax, dword [rdi]
mov edi, 0x2715204
add eax, 0x85e0f7b0
mov ecx, 0xc81725d9
cmpsd dword [rsi], dword ptr [rdi]
mov al, 0x89
js 0x4073ba
ficom dword [rcx - 0x58]
mov al, 0xef
or edi, dword [rcx + 0x76]
add cl, dl
mov al, 0xd7
cld
jp 0x4073cc
and eax, ebp
sbb byte [rcx - 0x4ea1c409], dh
ror dword [rbx], 0x19
add dword [rdi], edx
test dword [rbp - 0x6f62f64f], edx
movsxd rsi, edi
mov al, 0x10
mov dl, 0x2f
add eax, 0xa2e42f06
mov ah, 0xa1
mov dl, 0x5f
or dword [rax], ebp
and eax, 0xb3756fb3
nop
in al, 0x53
ret
mov bl, 0x82
xchg eax, esi
jb 0x4073d6
lodsb al, byte [rsi]
mov ah, 0xe8
push rbx
or dl, byte [rax + 0x500c8393]
xor byte [rsi], r14b
enter 0x1c19, 0x64
insb byte [rdi], dx
jne 0x40739a
sub eax, 0x3902f158
mov edi, 0x27b509b4
and dword [rdi - 0x7e], eax
adc ebx, dword [rdx - 0x4b]
out dx, eax
sub al, 0x25
jns 0x407431
iretd
cmp dh, byte [rdi - 0x4b]
movabs r14, 0xea3c85e004b5ba45
mov ecx, dword [rdx]
mov dh, 0x6f
add bh, byte [rcx + 0x32]
jb 0x407453
sub dword ds:[esi + 0x7458138c], esi
insb byte [rdi], dx
mov dh, 0xbf
scasd eax, dword [rdi]
mov dh, 0x87
and dword [rbx], esp
or ecx, ecx
mov dh, 0x4f
insb byte [rdi], dx
add al, byte [rbx]
js 0x407455
mov bh, 0x8f
add byte [rsi + 0x59], bl
add byte [rdi - 0x49], dl
in al, 0x59
popfq
out 0xb7, al
fcomp qword [rdx + 0x51]
mov eax, 0x6790bc02
ja 0x4073f3
imul ecx, dword [rsi + 0x102707b8], 0xb8c804e0
in eax, 0xb8
mov byte [rsi + 0x60], r11b
xlatb
clc
mov eax, 0x4232d437
cmc
push rsi
mov ecx, 0x409cea17
stosb byte [rdi], al
xchg byte [rcx - 0x2f466029], bh
or dword [rcx], edi
push rsi
lahf
out dx, al
xchg al, ch
mov ecx, 0x9e42f009
xlatb
rcr dword [rax + 0xb37ba07], -0x20
test eax, edx
xlatb
and bh, byte [rdx + 0x700204df]
add dh, byte [rdi]
mov edx, 0xa6046327
fstp dword [rsi - 0x722037e9]
pushfq
nop
xchg eax, ebx
mov ebx, 0x67bba7a6
mov esp, 0xc37f2790
and cl, ch
mov ebx, 0x198818b7
mov esp, 0xbbf75d90
xor al, byte [rsi + 0x74]
enter 0x3d7, -0x44
call 0x17c93577
or eax, 0xbc4d17bc
or cl, byte [rsi + 0x60]
add byte [rdi], bh
lea edi, [rsp + rax + 0x47c09d46]
loope 0x4074aa
dec ecx
enter -0x1d4f, 0x44
mov ebp, 0x2934bc0f
int3
in al, 0x5d
mov ebp, 0x9c17a42d
mov al, 0x8a
push rsi
nop
xchg dword [rdx], ecx
mov esi, 0x4204e0cf
out 0x75, eax
mov esi, 0xc9b9d8a7
xor ebx, dword [rsi + 8]
xchg eax, edi
cmpsd dword [rsi], dword ptr [rdi]
mov esi, 0xf19f6a57
add bh, byte [rcx]
enter -0x39c8, -0x42
jmp 0x4074e5
add cl, byte [rcx + 0x112f1813]
mov edi, 0x1604d8df
cmc
jl 0x4074f4
mov bh, 0xb4
cmp dword [rcx], edi
xor byte [rbp + 0x13c8d646], 0x5e
enter 0x41fa, 0x14
rol byte [rdi], 0x75
or ebp, dword [rsi + rbx*2 + 0x582fc047]
rol al, 0x41
adc ecx, dword [rax - 0x29]
ret
jns 0x40758f
jb 0x40756a
mul dword [rax - 0x4a]
rol eax, cl
add al, 0x42
jo 0x40756b
shr edi, 0x78
and dword [rax + 0x81758d9], edi
jl 0x407537
and eax, edi
add byte [rdi - 0x2dae7bdc], bl
or byte [rdi], ah
nop
ror dword [rbx], -0x3e
pushfq
mov dl, al
mov bh, 0x57
ret 0x7e07
mov ebx, 0x2f914090
nop
mov word [rdi + 0xb], es
cmp eax, ecx
and byte [rdi + 0x4e299bb8], ah
and cl, dl
ret 0x3be7
ret
neg dword [rax - 0x3f]
or ebx, dword [rcx]
test al, 0x4d
ret
ja 0x4075ba
in al, 0xfe
and dl, byte [rdx]
push rbp
ret
jo 0x4075c2
or eax, esp
lahf
ret
xlatb
leave
ret
movsb byte [rdi], byte ptr [rsi]
call 0x456777d1
sahf
ror dword [rcx], -0x6f
lea r12d, [r10 - 0x7c]
in al, 0xc9
sbb r13d, eax
xor ecx, dword [rax + 0x52]
pop rax
mov esp, 0x80652790
retf
out 0x21, eax
cmp dword [rcx - 0x4839d6e9], ebp
jb 0x4075e6
sahf
sal byte [rdx - 0x6e19c03a], 0xfd
mov byte [rbx], 0x5e
enter -0x78f8, -0x36
cmp eax, edi
add al, 0x52
jne 0x40760e
add eax, 0xe8e03027
iretd
cmp ecx, eax
add ah, byte [rcx - 0x48387ec6]
enter -0x3e89, 9
and al, 0xea
enter -0x16c9, -0x38
xchg eax, ecx
loopne 0x40762f
out dx, eax
jg 0x4075f8
cmpsd dword [rsi], dword ptr [rdi]
test al, 0x4e
enter 0x5b1e, -0x43
leave
mov edi, 0x902e820e
and ebp, esp
leave
retf 0x7542
add cl, byte [rbx - 0x28359a29]
adc byte [rax - 0x6225cde9], al
retf 0x3887
adc dword [rcx], 0xa7cae727
hlt
retf 0x7016
add al, byte [rcx]
out 0x2d, eax
retf
wbinvd
stc
in al, dx
add al, 0x8d
retf
cmpsd dword [rsi], dword ptr [rdi]
sbb dword [rbx], eax
js 0x407644
rol dword [rbx], -0x11
sbb bh, byte es:[rdi - 0x7ec5b1f4]
cmp al, 0xae
retf
in al, 0xcb
pop rdi
add byte [rcx + 0x19487041], al
int3
in al, 0x42
cmp eax, 0xcee98560
test dword [rax + rcx*4], ebx
push rdi
cmpsd dword [rsi], dword ptr [rdi]
jo 0x4076cc
in al, 0xd9
and esi, esi
int3
ja 0x407706
pop rsi
int 0x80
adc ebx, dword [rax]
add eax, 0x42cd5ce7
add al, 0xaf
sub byte [rdi - 0x33], ch
mov edi, 0x5e22c09
ret 0x7fcd
or al, 0xe0
mov al, 0xfb
pop rdi
pop rdi
add byte [rdi], ah
mov al, 8
pop rdi
fcmove st(0), st(6)
jno 0x407713
mov ss, word [rdi - 0x30df61cc]
or dword [rax - 0x83095fc], ecx
pop rsi
enter -0x2be8, -0x51
iretd
mov edi, 0x719ecfca
add ch, byte [rcx]
iretd
movsx edx, byte [rdi + 0x42f40232]
sub dl, al
out dx, eax
cmp dh, ch
add ch, byte [rcx - 0x482fa2e9]
movabs dword [0xd10e871604e231d0], eax
pop qword [rcx + 0x2890bc00]
sar dword [rdi], 1
jno 0x40775e
cmp byte [rcx + r10*8 - 9], r8b
mov word [rdi + 0x4e82cd1], es
iretd
test al, 0xd1
xlatb
enter -0x4cfe, 9
ja 0x4076cc
mov esp, 0x5e284642
add dl, dl
out 0x24, eax
sahf
cmc
push rsi
ror byte [rdi + 0x44], cl
push rsi
wait
ror cl, cl
sahf
movabs byte [0xe42f158ed2b5552f], al
mov cl, 0x48
ror edi, cl
movsq qword [rdi], qword ptr [rsi]
js 0x4076d9
je 0x40779c
jle 0x40772f
out dx, eax
movabs byte [0xd4344f09027558d3], al
or dword [rax + rax*4], eax
adc edx, dword [rsp + rdx*8 + 0x4f]
popfq
nop
movsxd rax, esp
mov ebx, 0x940a17d4
or ebp, edx
enter -0x5d4f, 0x27
cmpsd dword [rsi], dword ptr [rdi]
mov bl, 0x1a
neg dword [rbp + 1]
xchg eax, ecx
adc esi, dword [rdx - 0x1c]
adc dl, ch
hlt
insd dword [rdi], dx
nop
mov esp, 0xd5a67290
cli
push rcx
or dword [rcx], edi
mov esp, 0xda6fd5ed
sbb r12d, r12d
in al, 0xd9
mov dh, 0x27
jle 0x4077db
mov al, 0x57
add byte [rcx - 0x291db82a], bl
adc ebx, dword [rax]
add byte [rdi - 0x71bd28d3], al
pushfq
rcr bh, 0x43
xlatb
cmc
test dword [rsi - 0x38], ecx
adc eax, ebp
xlatb
ja 0x407840
cmp eax, 0x17aad79d
or al, 0xa7
xchg eax, esp
hlt
xlatb
cmp dword [rdx], eax
pushfq
sal byte [rdi], 0x10
fcom dword [rdi + 0x472187b8]
mov ds, word [rdi + rdi]
add ch, byte [rax + 0x78b3d2d8]
and edi, ecx
cmp byte [rax], ch
cpuid
movabs al, byte [0xb39f83027181d987]
fldenv [rdi]
ja 0x407822
jp 0x4077cf
pop rsp
mov esi, esp
sub ebx, dword [rsi + 0x18]
mov ebx, 0xe71aa517
or dl, bl
mov bh, 0x17
fmul dword [rbx]
sbb dword [rcx + rbp], ebp
ficomp dword [rdi + 0x43]
in al, 0xe4
leave
mov bl, 0xda
xchg eax, r8d
sbb al, 0xd2
add dword [rbx - 0x6f], edx
loopne 0x4077b1
sbb eax, 0xa55f56aa
out dx, eax
adc ecx, eax
xchg eax, ebx
xchg eax, ebx
cmp ah, bl
fisubr dword [rdx]
movsb byte [rdi], byte ptr [rsi]
pop rsi
enter -0x244d, 0x47
pop rcx
pop rbp
mov bh, 0x4f
jb 0x40783d
fisub dword [rax + 0x32]
xchg bl, bl
sbb al, 0x7f
mov word [rsi], cs
jbe 0x407877
sbb dh, byte [rdi - 0x16]
add eax, 0xdc3c2f16
outsd dx, dword [rsi]
fmul qword [rax - 0x30]
or dword [rdi + rsi*4], eax
fadd qword [rdi + 0x13b3c85e]
frstor dword fs:[rdi - 0x2267a06e]
and eax, edi
mov dl, byte [rdi - 0x1fdf886c]
and byte [rdi], ah
mov bh, 0x38
sal byte [rsi + 0xbc46302], 1
in al, 0xf0
fisubr word cs:[rdi]
mov dl, 0x81
push rsp
pushfq
nop
outsb dx, byte [rsi]
pop rbp
fimul word [rdi - 0x3f]
or dword [rax + rdi], eax
jrcxz 0x40787e
scasd eax, dword [rdi]
test edi, ebx
or al, 0xe0
add al, 0x42
cdq
fild qword [rdi]
add bh, byte [rcx + 0x32]
jb 0x40784c
xchg eax, edi
and al, dh
fstp st(6), st(0)
add al, 0x52
jno 0x4078cf
loopne 0x407922
imul edx, dword [rdi], 0x15
mov esp, 0xa9778790
loopne 0x4078e7
iretd
cmp byte [rcx + 0x6fe11b17], al
loopne 0x407862
push rbp
nop
jp 0x407925
loope 0x4078a5
jne 0x4078b9
and esp, edx
test dword [rdi + 0x37e1b327], ecx
add al, 0x12
jno 0x4078e7
in eax, 0xe1
xlatb
or al, 6
jrcxz 0x40787b
loop 0x407876
pop rdi
loop 0x407891
nop
movsxd rax, dword [rcx - 0x71]
sub eax, 0x52e3579a
mov esp, 0x9a472790
test ax, 0xf7e3
cmp dword [rcx + rbx], 0x33a76239
jmp 0x4078f2
or dword [rax + rdi + 0x551fe418], esp
in al, 0x27
ror qword [rbx], 0x79
movabs qword [0xe50a13ab3921cfe4], rax
sub cl, byte [rsi + 0x20]
in eax, 0xe7
in eax, 4
push rdx
popfq
stosq qword [rdi], rax
in eax, 0xef
or edi, dword [rcx]
fcomp st(7)
pop rdi
retf
pop rbx
sbb esp, esi
add cl, byte [rsi + 0x60]
outsd dx, dword [rsi]
out 0x7f, al
in al, 0x49
pushfq
loop 0x407939
out 0x80, eax
cmp byte [rcx - 0x1882c8ec], al
add al, 6
pushfq
sti
out 0x87, eax
jo 0x40796b
movabs dword [0x64f2e8a73fe839e0], eax
in al, 0x18
punpcklwd mm5, qword [rbp - 0x7e16b0c3]
or dword [rcx], edi
sbb al, 0x85
mov ecx, gs
push rdi
js 0x4079a6
js 0x407939
jmp 0x14eb7894
or byte [rcx], al
adc byte [rdi], cl
xor ebp, edx
inc dword [rdx + rsi*8]
in al, 0xe4
pop rbx
jne 0x407989
or al, dl
sub al, bl
clc
or byte [rax], al
jmp 0x4079e6
xchg eax, esi
or esp, esp
leave
and esi, dword [rdx - 0x15]
xchg eax, edi
jmp 0x4079c2
hlt
sahf
xor byte [eax - 0x15], 0x5f
pop rsi
enter 0x13b3, 2
in al, dx
cmpsd dword [rsi], dword ptr [rdi]
adc al, 0x9d
pop rdi
in al, dx
jb 0x407a46
add ch, byte [rbx - 0x28137421]
mov al, dh
add al, byte [rbx - 0x101334bd]
in al, dx
and dword [rdx], edi
add dword [rdi + rax*2], 0x4e7fed08
sahf
jo 0x4079ee
jnp 0x4079db
xchg eax, edi
xchg eax, edx
and eax, 0xc9e42f2e
mov gs, r13d
neg byte [rdx - 0x6f171201]
or dword [rbx], ebp
sal byte [rdi + 0x7b02ee1e], 1
and edi, ecx
scasd eax, dword [rdi]
adc byte [rbx], ah
out dx, al
cmpsd dword [rsi], dword ptr [rdi]
cmp al, byte [rcx - 0x11be0fff]
lahf
pop rdi
out dx, al
lodsb al, byte [rsi]
jp 0x407a3c
iretd
xchg eax, edi
movabs byte [0x9c008134fee8a69], al
call 0x324bea19
jb 0x407a31
mov ch, bh
leave
test al, 0x4f
jno 0x407a38
jns 0x407a70
out dx, eax
jae 0x407a2a
mov bh, 0x17
in al, dx
add al, 0xcd
out dx, eax
mov cl, 0x95
sti
mov ebp, 0xef8a9190
out 0x2f, eax
or esp, dword [rdi + rdx - 0xf3ee0e8]
cmpsd dword [rsi], dword ptr [rdi]
sahf
shl dword [rcx], -0xf
jbe 0x407a7a
lahf
ror byte [rsi + 0x20], 0x4f
xor esi, ecx
pop rdi
int1
xlatb
or dword [rdi], esp
adc eax, 0xd7f18cbc
mov ebx, 0x756724af
enter -0xe91, 0x5f
test al, 1
mov ebp, 0xf21a3a40
and edi, ecx
cmp byte [rcx + 0x27f24eaf], al
pop rbp
xchg al, cl
leave
xor edi, dword [rdx - 0x73]
push r8
push rdx
add al, 0xf1
add bh, byte [rcx]
mov cl, 0xf2
stc
sbb dword [rcx], eax
cmp al, byte [rcx - 0x700cb369]
cmp dword [rdx - 0x40], r8d
or esi, dword [rdx - 0xd]
lahf
sahf
push rcx
cmp al, byte [rcx - 0x37c3e6c4]
fdivrp st(3)
movntps xmmword [rcx + 0x25f3afe7], xmm0
sbb byte [rdx + 0x38c7f448], r10b
mov ss, word [rax + r14*2]
xchg eax, edi
hlt
jae 0x407a56
js 0x407af8
iretd
loopne 0x407ace
mov edi, 0xf510a60d
pushfq
shr byte [rax], 0x57
cmc
cmp byte [rcx], cl
cmp byte [rcx - 0x80a66a1], al
mov esp, 0x8ac64f20
pop rdi
or eax, 0x217af5aa
iretd
mul byte [rdi - 0x99080f2]
sbb byte [rcx], al
nop
shufps xmm6, xmm6, 0x8f
xchg esp, esp
movsb byte [rdi], byte ptr [rsi]
adc ebp, ebx
idiv byte [rdi - 0x6c08ef10]
xchg eax, ecx
and eax, dword [rcx]
mov r12b, 0x77
jmp 0xffffffffc924e012
sahf
neg dword [rax + 0x7e]
mov dh, 0xc9
test ebx, 0xab018dff
movsxd rsi, dword [rdx + 0x74]
jae 0x407ba5
jne 0x407b99
movsxd rbx, dword cs:[rdi - 0x13]
push -1
push r10
pop rdi
push r11
push rsp
or dword [rax + 0x67657265], ebp
imul ebx, dword [rdx], 0x6ffeef6f
pop rdi
je 0x407bc0
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x407b7c
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
fistp qword [rsi - 5]
outsd dx, dword [rsi]
or dword [rdi + rbp*2 + 0x72], esi
jae 0x407bcc
jne 0x407be8
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x407be1
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0xd817f6ff
cmp byte [rip + 0x69665f24], dh
outsb dx, byte [rsi]
imul ecx, dword [rax], 0x79617272
pop rdi
outsb dx, byte gs:[rsi]
cwde
sti
jbe 0x407b8e
je 0x407c07
jns 0x407b97
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x407bd3
or eax, 0xdd613fb
pop rdi
sub dword [rdx + rbp + 0x73], esi
outsd dx, dword [rsi]
jne 0x407c20
movsxd rsp, dword [rbp - 0x5f]
imul ebx, ebx, -1
jbe 0x407c26
jo 0x407be1
pop rdx
push rbx
je 0x407c08
xor dword [rcx], edi
jo 0x407c29
adc byte gs:[rdi - 0x62], dh
xor dh, byte [rsi + 0x7c5b6fb9]
outsb dx, byte [rsi]
movsb byte [rdi], byte ptr [rsi]
jb 0x407c43
movsxd rsi, dword [rdx + rbx + 0x18]
cmp byte [rcx - 0xd129123], bh
je 0x407c43
adc bpl, byte fs:[rcx + 0x76]
jo 0x407c5a
lodsd eax, dword [rsi]
in al, dx
and esp, ecx
sbb byte [rcx], bl
xor r14b, byte [r8]
adc eax, 0xac64bed6
xor rax, 0xffffffffca757165
cwde
imul ebp, ebp, -0x7f
mov ebp, 0x756d3016
xlatb
out 0xc6, eax
insb byte [rdi], dx
jnp 0x407c6d
imul edx, dword [rax + 0x2d], 0x70
adc al, 0x74
sub esi, dword [rdx]
out dx, al
adc al, 0xf6
jne 0x407c86
sub eax, 0xda2c394e
outsd dx, dword [rsi]
mov cl, 0xdb
outsb dx, byte [rsi]
jne 0x407bf1
js 0x407c9d
stosd dword [rdi], eax
movsxd rbp, dword [rax + 0x61]
outsb dx, byte [rsi]
cmp dword [rdi + rdi*2 - 0x29], esp
add al, 0x9a
push r8
push rsi
imul ebp, dword [rcx + 0x27], 0xad63532
in eax, dx
sub ebx, dword [rdi + 0x73]
imul ecx, dword [rip + 0x2f2d2e8c], 0x3757200c
jo 0x407cb2
je 0x407c16
out dx, al
xor byte [rbx + 0x14], ch
pop rbx
jnp 0x407cc4
outsd dx, dword [rsi]
or dword [rbx*2 + 0x336a841b], 0xc761b4fa
insb byte [rdi], dx
imul ecx, edi, 0x1a
xchg eax, edx
adc al, 0x36
imul edx, dword [rdi + rcx + 0x65], 0x1b0b8460
xor ecx, edi
in al, dx
insb byte [rdi], dx
je 0x407c95
mov eax, 0x4a42fec1
outsd dx, dword [rsi]
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x1b304845
int 0x30
fdiv dword [rbx + 0x4c]
sbb dword [rcx], edx
xor ebx, ebx
cld
jbe 0x407cd6
mov al, 0x6f
adc dh, byte [rax]
xchg eax, esp
outsd dx, dword [rsi]
jo 0x407ce1
test byte [rip + 0x4933fdf3], cl
cwde
push rbp
test esi, 0xa8706f77
cmp al, 0x42
push rbp
scasb al, byte [rdi]
push rbx
pop r10
jrcxz 0x407ca5
mov bh, 0xbb
cmp cl, byte [rbp + 0x41]
pop rax
and eax, dword [rbp + 0x4e]
push r12
int1
sbb edi, edi
mov edi, 0x42747b7b
add al, 0x6a
xor dword [r11 + 0x54455250], r12d
push rsp
pop rcx
pop rdi
push rbp
push r12
test qword [r13 + 0x104eb5fb], r13
and dh, byte [rcx]
xor ah, byte [rbx]
push rax
movsxd rax, dword [rdi + rdi*8]
xor byte [rax + 0x286ef26d], dl
xor al, 0xac
push rdx
imul edx, dword [rbx + 0x55], 0xfe0bfa56
jbe 0x407d56
jo 0x407d63
and dword [rip - 0x25e929ac], ebp
movabs dword [0xc30d0a1431347811], eax
xor al, 0x38
ret
sub al, 0xa1
mov ecx, 0x69fa630b
jno 0x407d9a
jp 0x407d40
xchg eax, edx
cmpsb byte [rsi], byte ptr [rdi]
pandn mm1, qword [rbx + rax*8]
push rdx
fisttp word [rdi]
xor byte [rbp - 0x42444bb9], ah
sti
xor r14b, byte [rbp + 0x62]
pop rdi
pop rdx
cmp ch, al
push rdi
imul ebp, edi, 0x69ba6b76
push 0x7646476a
push 0x4e
pop rcx
mov al, 0xe5
leave
iretq
or eax, dword [rdi + 0x4e]
push rbp
and byte [rdi + rsi*2], spl
jnp 0x407ded
push rdx
adc al, byte [rcx + rbx*2 + 0x4e]
or ecx, dword [rcx + 0x43]
sbb esi, dword [rcx - 0x4b]
fadd st(2), st(0)
adc byte fs:[rcx + 0xb6f8522], bl
xchg eax, ebx
jne 0x407ddb
je 0x407de1
rcr dword [rdi + 0x54], 0x41
push 8
sub dword [rcx], edi
jnp 0x407d54
in al, dx
iretq
jno 0x407d81
in eax, dx
xor esp, dword [rdi - 0x67]
insd dword [rdi], dx
xor byte [rbp + 0x49], al
push rax
cmp dword [rcx + 0x6e], ecx
jo 0x407d9b
imul r10d, dword [rdi + 0x1b], 0x169aadc6
xor dword [rsi], esi
push rsi
ja 0x407de0
ret 0x5649
retf
sbb r14, qword [rbx]
mov word [rbx + rbx*4], cs
mov edx, 0x185f4cae
insd dword [rdi], dx
cld
pop r8
mov dh, 0x16
fist dword [rip + 0x5a661435]
push rsp
sub dh, byte [rsp + rsi*2]
ret
hlt
fsubp st(6)
jns 0x407e57
xor byte gs:[rbx + 0x38], dl
push 0x6fa80a36
fcmovne st(0), st(1)
xor eax, 0x6153c386
add dh, byte [rdx + rsi + 0x33]
xchg eax, ebp
pop rsp
sbb ebx, dword [rdi]
jo 0x407e24
js 0x407e1a
test eax, 0xd8e6a56b
jmp 0xffffffff8476b159
outsb dx, byte [rsi]
cmp bh, dl
cmp dword ss:[rcx - 0x42], ecx
sub al, 0xe
pop rdi
cli
not esp
insd dword [rdi], dx
insb byte [rdi], dx
push rax
jbe 0x407e48
add dword [rdx], eax
in eax, dx
mov ecx, 0x45694b00
in eax, dx
mov bh, 0x6f
shr al, 0x2c
jrcxz 0x407e6c
add eax, 0x6da75352
fmul dword [rbx]
insb byte [rdi], dx
push rax
push rbx
xchg eax, r13d
lodsb al, byte [rsi]
out 0xd7, al
lock or byte [rsi + 0x50078762], cl
cmp byte [rbp + rcx*8 + 0x43], dl
jbe 0x407eca
retf
ja 0x407ea9
xor byte [rax], dh
xor r8, rdx
xor byte [rcx], dh
adc al, 0xb6
adc byte [rax + 0x4f], ch
cmp al, byte [rbp + 0x76]
add eax, 0x686b025c
leave
pop rsp
jo 0x407e00
outsb dx, byte [rsi]
sti
pop rdi
outsb dx, byte [rsi]
movsxd rbp, dword gs:[rdx + 0x63]
pushfq
sbb esp, dword [rcx + 0x2660b910]
sbb eax, 0x7b983154
lodsd eax, dword [rsi]
jp 0x407ea9
cmp byte [rsi + 3], bpl
add byte [rbx + rcx*4], 0xe0
mov ch, 0x72
fnstenv [rcx + 0x2c]
jno 0x407e98
and eax, 0xacc26d9c
jae 0x407eda
scasb al, byte [rdi]
stc
loopne 0x407e8c
or cl, byte [rsi + 0x4d]
pop rdi
push 0x5f3486ab
adc dword [rsi + 0x4436d81d], esi
jbe 0x407e92
xchg word [rdi - 0x38], dx
cdq
mov dh, 0xb6
not byte [rdx]
pop rbp
insd dword [rdi], dx
imul eax, dword [rcx + rdi - 0x549665cc], 0xc8156dd4
movabs byte [0x143b4382a576e145], al
jbe 0x407e72
add eax, 0x5cba0e6f
mov bh, 0x5c
pop rdi
xor esp, edx
mov ch, byte [rbp + 0x6a]
loope 0x407f11
scasd eax, dword [rdi]
sub dword [rcx - 0x56], 0x61
and ebx, dword [rbp - 0x51e52760]
lodsd eax, dword [rsi]
adc dword [rax], edi
jo 0x407f4a
hlt
pop rdi
xor bl, al
ret
pop r15
lahf
test dword [rdx - 0x20], 0x9d12d852
hlt
mov cl, 0x1f
out dx, al
sar eax, 1
jp 0x407f69
push rbx
pop rax
sbb bh, byte [rax - 0x7fb7cf13]
or al, 0x19
out dx, al
sbb byte [rcx], spl
cmp edx, ecx
in eax, dx
in al, dx
adc byte [rsi], cl
or esp, dword [rbx]
adc byte [rdi + 0x3b], ah
je 0x407ed0
mov al, 0xbc
jno 0x407f8b
cmp al, 0x62
pop rbx
and cl, ah
outsb dx, byte [rsi]
cmp byte [rsi], dl
mov al, 0xf
sbb esp, edx
jo 0x407f3b
jo 0x407f9e
and edx, dword [rdi]
fadd dword [rcx]
push rax
je 0x407f91
xor esp, dword [rdi - 0x32]
mov ah, 0x3b
jae 0x407f99
adc dword [rsi + 0x16], esi
sbb byte [rbx], bh
sbb eax, 0x356942ac
xchg dword [rsi + 0x3d], ebp
cdq
mov ecx, 0x62340bf1
mov al, cl
xor al, 0x81
push rdi
sub byte [rbx + 0x74b969c7], bh
or ebx, dword [rdi + 0x7b]
loopne 0x407ff3
imul ebp, dword [rcx + 0x62], 0x65490c75
jnp 0x407f4a
mov ch, 0x6c
sbb byte [rcx + 0x72], dl
pop rdx
jne 0x407fe6
scasb al, byte [rdi]
retf
cmp byte [rsi], 0xc4
adc eax, 0xf0ed85d7
xor dword [rsi], esi
cmp byte [rax], dh
xchg eax, r12d
add esi, dword [rdx]
mov dword [rip + 0x37fb4669], esp
xor al, 0x38
xor esi, dword [rsi]
add eax, 0x9a0ef13d
mov ebx, 0x706cddbb
xchg eax, edx
pop rax
jae 0x408043
test al, bl
mov ch, 0xaf
cmp eax, 0x6d216a5a
jne 0x408042
push rdi
or dh, byte [rsi + rax*8 + 0x513052ab]
rcl byte [rax], cl
int 0xbd
and byte [rax], bl
xchg eax, ecx
and ch, byte [rbp + rbp*4 + 0x7d]
mov dh, 0x16
mov ch, 0xe0
xor eax, 0x39832976
test byte [rcx - 0x7a], bl
test eax, 0x514fbbaa
clc
xchg dword fs:[rax], ebp
push rbx
xor al, 0x6d
outsd dx, dword [rsi]
sbb eax, 0xab2e056c
xor qword [rdx], 0xffffffffffffffbe
xchg eax, ecx
sar dword [rsi + 0x1c0e36f6], 1
pop rdi
mov ebx, 0xcb6d6486
outsb dx, byte [rsi]
xor al, 0x25
adc al, 0xa4
xor ah, byte [rdx - 0x4b]
jno 0x40809a
call 0x574d2feb
push -0x4d
jb 0x408043
cmp esi, dword [rip + 0x305f077]
xchg byte [rdx - 0x44], dh
mov ebx, 0x63634bd7
push r14
js 0x408007
popfq
adc edi, dword [rcx]
je 0x4080b3
psubq xmm6, xmmword [rsi + 0x1185098c]
add eax, 0xa74ee31b
xchg eax, ebx
sbb eax, 0x5f369569
add dword [rdi], eax
fidiv dword [rdx - 0x3a904c88]
xor al, 0xa1
ja 0x408014
xor eax, 0x188e4612
xor eax, 0x1edae070
cmp al, 0
xor cl, byte [rip - 0x478e8c12]
jo 0x408055
stosb byte [rdi], al
movsxd rbp, dword [r9 + rbx*4 + 0x2d]
imul eax, dword [rdi], 0x26
movsxd rsi, dword [rdx + 4]
add byte [rbx + rax + 0x43], cl
loopne 0x4080d2
fstp dword [rsi + 0x36]
xchg byte [rdi], dl
adc dword [rsi], edx
movabs byte [0x1218198608ff466d], al
xor ah, cl
dec byte [rsi + 0xa066407]
insd dword [rdi], dx
insd dword [rdi], dx
sbb bl, byte [rdi + 0x42]
nop
popfq
xor al, 0x73
ja 0x4080be
xor dword [rdx + 0x157be66d], edx
jbe 0x4080f9
lodsb al, byte [rsi]
adc al, 0xab
mov cl, 0x7b
jo 0x4080e6
rcl eax, 1
sbb esp, dword [rbx + rax*8 - 0x1debc997]
iretd
and eax, 0xbb9ae75
retf 0x6e04
jbe 0x40811d
adc dword [rdx], ecx
sub esp, ecx
jns 0x40808e
shl byte [rax + 0x53a19b5c], cl
jno 0x40815c
and sil, byte [rip + 0x2811485b]
out 0xe3, al
mul byte [rdi - 0x67]
sbb edx, dword [rdx]
pop rbx
and byte [rdi + 3], dh
mov ebp, 0x210b0b22
cmp eax, 0x759a431
retf
fnsave dword [rbp + 0x38deda4f]
push rsi
pop rcx
movabs eax, dword [0x6a0c1e320c286954]
jns 0x40813f
cmovs ebp, eax
imul edx, dword [rdx - 0x64], 0x4a
movsxd rsp, dword [rax + 0x11c91c20]
sbb eax, 0x383262c0
xor dword [rax - 0x6df2d3ca], r13d
cwde
shr dword [rsi + 0x62c089f1], -0x4e
cmp dh, byte [rdx]
adc dl, byte [esi - 0x4fc86d73]
outsd dx, dword [rsi]
pop rax
int1
cwde
and r9b, al
test ebx, esp
xor dword [rsi + 0x5241243], ecx
add dword [rdx], esi
xchg eax, edx
add eax, 0xb9059e0c
xor eax, 0xd85afa50
or dl, byte [rax - 0x648fdeba]
outsb dx, byte [rsi]
cli
outsd dx, dword [rsi]
mov eax, 0x406d0dd6
pop rsp
pop r8
or dh, byte [rax + 0x3833be96]
movsd dword [rdi], dword ptr [rsi]
add cl, byte [rcx - 0xcae0bdb]
xchg eax, ebp
js 0x40812c
jo 0x40814b
push rdx
xchg eax, ebx
xchg eax, esi
add byte [rsi + 0x2e], dl
nop
in eax, 0x31
mov word [rax], cs
sub eax, 0xd1c9ab8c
and dword [rip + 0x5e98c59a], edi
leave
mov ch, 0xd8
int3
mov edi, edx
xor dword [rbx], edi
cwde
insd dword [rdi], dx
push rbx
or eax, 0x28e3d28c
mov al, 0x33
sahf
mov cl, 0x2c
pop rdx
cmp al, 0x5d
jo 0x4081a5
fcomp dword ss:[rax + 0x4d]
ja 0x40823c
jnp 0x40823b
loop 0x4081d0
cmp bl, byte [rax]
jae 0x40819c
ficomp dword [rsi]
xchg eax, esi
xor bh, byte [rsi]
cmp dh, byte [rsi - 0x6f]
jbe 0x4081de
adc al, 0xa4
add al, 0x49
sbb al, 0x4b
out dx, al
xchg eax, ebp
xor eax, 0x45e505bb
insb byte [rdi], dx
movabs eax, dword [0x20ab6db0359845e4]
push r10
xchg eax, ebx
mov dl, al
outsb dx, byte [rsi]
adc byte [rcx + 0x10], cl
movabs dword [0x91a1eb84cd175640], eax
int3
sub ecx, dword [rcx + 0x6c]
add esi, dword [rbx + rsi - 0x2d]
push 0x44628831
mov edx, 0x6f60b809
jns 0x4082a0
xchg eax, ebx
out 0x64, al
mov eax, dword [rip + 0x1513cc19]
cmpsb byte [rsi], byte ptr [rdi]
and eax, 0x4536a48c
je 0x40825a
mov eax, 0x10867c28
xor eax, 0x295276a2
mov al, 0x20
pop rsp
sub dword [rdx + 0x1c85181], eax
je 0x4082ae
mov esi, dword [rsi]
sub ah, dh
jnp 0x408256
push -0x641ce3db
int3
mov word [rbp + 0x48d28931], es
adc dword [rax - 0x48], edi
and edx, ebx
add ebx, dword [rbp - 0x15]
lodsd eax, dword [rsi]
xor bl, ah
outsd dx, dword [rsi]
out 4, eax
xchg ax, bx
add dword [rsi + rbx*4], ecx
enter 0x4f31, 0x60
movsb byte [rdi], byte ptr [rsi]
or byte [rbp - 0xa], ch
cmp esi, dword [rcx]
xor al, 0x74
cmp byte [rcx], bl
outsd dx, dword [rsi]
imul esi, dword [rax], 0x4abab928
test byte [rcx + 0x4f], ah
xor dword [rcx + rdx + 0x52], edx
ret
movabs dword [0x1085cff390e6049], eax
insb byte [rdi], dx
push rsi
xor edx, dword [rbx + 0x16]
adc ebx, dword [rcx - 0x2f]
sahf
xor byte [rax], ah
mov ecx, dword [rcx + 0x2c]
pop rsi
out dx, eax
xchg rax, rcx
insb byte [rdi], dx
mov al, 0x8e
xor ch, byte [rbp + rbp + 0x76e41a90]
sbb ah, dh
push rbx
imul ebx, dword [rcx + 1], 0x25644665
movsxd rsp, dword [rdx + 0x33]
lea edx, [rdx]
cmpsd dword [rsi], dword ptr [rdi]
test ah, dl
xor byte [rsi + 0x6a], ah
ret 0xbd91
pop rax
popfq
jl 0x408309
cmp ebx, esi
push rsi
xchg eax, ebx
and byte ds:[rsi + 0x63], ch
adc eax, 0x103c5e00
pop rdx
movsxd rbp, dword [rax + rdi + 0x68]
pop rbp
xchg ecx, edx
movsxd rax, esi
sal byte [rdi + 0x34], cl
push rdx
nop dword [rsi]
push dx
loope 0x408294
push rdx
sbb al, 0x60
adc ch, byte [rdi + 0x4e68805]
cwde
adc al, 0x12
add dword [rax - 0x7d], 0x20b08d22
movsxd rdx, dword [rsi - 0x22]
scasd eax, dword [rdi]
add dword [rcx], ecx
adc ebx, dword [rcx + 0x48150ceb]
xchg dword [rbx], edx
mov dil, 0xa
adc dl, dl
and eax, dword [rdi + 2]
enter 0x1958, 0x49
xchg edi, edi
int3
or cl, byte [rbx]
lodsb al, byte [rsi]
imul esp, dword [rbp - 0x6f], 0xb15ef5d4
and esi, dword [rbx]
xor ah, byte [rsi - 0x24]
sub edx, eax
cmp byte [r10 - 0x73270c88], r12b
sbb dword [rbp + 0x1e532f74], esp
mov ebp, 0x3878ad47
push -0x48
sbb esi, dword [rbp - 0x40]
ret 0x2b68
xor eax, dword [rbp + 0x61]
nop
sbb dword [rdx], 0x36
fidiv dword [rax + 0x73]
sbb byte [rip + 0x2a5fb575], bl
xchg rax, r11
pop rbx
and cl, dl
cmp dword [rbp + rsi*8 + 0x22431a5f], edx
iretd
loope 0x4083c7
xor al, 0x80
mov r14b, 0xf8
push rdx
insd dword [rdi], dx
add dh, al
lodsd eax, dword [rsi]
xchg eax, esi
movabs eax, dword gs:[0x1e8c8a4a65c078c0]
xchg dword [rdx + 0x4922ba73], eax
outsb dx, byte [rsi]
mov dh, 0x47
jnp 0x4083ff
mov al, 0x60
xchg eax, edi
enter 0x28bf, 0x69
imul ecx, dword [rip + 0x29908a64], 0x81024a4a
in al, 0xa2
scasb al, byte [rdi]
or byte [rcx + rbp*2], ch
add dword [rax - 0x534ea753], esp
mov dword [rdi + 0x42], 0x4a5a90ae
xor dl, byte [rdx + 0x611a425a]
sbb al, 0x26
and byte [rsi + 0x6a], 0x2a
xchg eax, ecx
insd dword [rdi], dx
jns 0x4083f7
mov al, byte [rsp + r10*8 + 0x6affca76]
sub al, 0x99
xor ch, bh
nop
adc eax, 0x43d8cae7
ror byte [rbx - 0x7e], cl
pop rax
add eax, 0x19be2122
xor al, 0x17
clc
push rcx
jo 0x4083fc
jo 0x4083bc
and al, 0x6f
xchg dword [rdx], edx
test byte [rdx], ah
sbb byte [rbp + 1], ch
xlatb
xor dword [rax], ebx
movabs eax, dword [0x21565ac0f8df581]
mov bl, 0x56
pop rbp
cmp al, 0x78
mov word [rax + rax*2 - 0x1a4ed0f8], es
movsd dword [rdi], dword ptr [rsi]
and edx, dword [rsi]
and dword [rdx + rbp*8], ebp
lodsb al, byte [rsi]
cmp esp, dword es:[rip - 0x4da00223]
test dword [rdx + 0x43e31498], esi
ret
loope 0x408480
cmpsb byte cs:[rsi], byte ptr [rdi]
jb 0x408440
fild word [rdx]
xchg eax, ebp
sbb al, 0xe
mov ch, 0xfb
js 0x408449
pop rcx
fld qword [rsi + 0x32d82e10]
xor al, 0x2d
adc al, cl
pop rax
jo 0x40846d
sbb edx, dword [rax + 0x63]
sar ebp, cl
xor ah, byte [rbp - 0x2f9ab7be]
ja 0x40840d
and eax, 0x39bad00f
push rax
push rsi
ret 0x1b5a
mov ebp, dword [rbx]
cmp byte [rbx + 0x2c656646], ah
add dword [rsi], 0x49
push rax
xchg eax, esp
mov ah, 0x32
xchg eax, esi
ret
movabs al, byte [0x534e42806270185c]
int3
push rsi
xchg edx, edx
insd dword [rdi], dx
and al, byte [rip + 0x742521c2]
or eax, 0x9311a043
xor esp, dword [rcx - 0x3a]
mov esi, dword fs:[rax + 0x46980662]
test edx, eax
pop rax
xchg eax, ebp
push rbx
cmp al, 0xae
ret 0xb7a0
fist word [rdx]
mov edx, 0x39294408
movabs eax, dword [0x75656bec312c1680]
fsub dword [rdi + 0x7e]
pop rax
imul eax, eax, 0xf812d7a2
outsd dx, dword [rsi]
mov dl, 0x85
sub ah, bl
xor ch, byte [rsi - 0x10]
push 0x385d5935
or ch, byte [rbp - 0x1f]
push rsi
sub al, 0x90
ret
or eax, 0xe49ecb53
loopne 0x408582
push rsp
jo 0x408491
and byte [rbx], r11b
mov al, byte [rbp + 0x4b]
pushfq
adc al, 9
mov ah, 0x3d
push rdx
mov byte [r11 - 0x1b], cl
fld dword [rdx + 0x6a]
leave
movabs dword [0x7165a96a420701d1], eax
and eax, 0xa8844a30
sbb byte [rax + 0x12611780], dh
cmp dword [r11], r13d
int1
stosd dword [rdi], eax
lea rbx, [rbx]
mov bpl, 0x8c
cmp bl, dl
int3
test dword [rax + rsi + 0x493114e7], eax
add eax, 0xa14b268c
cmp al, 0x70
mov word [rdx], ss
movsd dword [rdi], dword ptr [rsi]
imul ecx, dword [rbp + 0x19a8ca6b], 0x54bb95b5
int3
call 0x37aaeeaa
sbb ch, byte [rax + 0x6c5b18d0]
movsb byte [rdi], byte ptr [rsi]
xor eax, 0x58010307
retf 0x307f
stosb byte [rdi], al
add byte [rip - 0x6ff6152e], ah
jp 0x4085fb
or byte [rdi + rax - 0x2f], ch
xchg eax, ebx
call 0x3041ece8
jbe 0x40852f
jmp 0x33a25a96
jg 0x4085f4
mov esp, 0x64f34f49
xchg eax, ecx
push rax
lodsb al, byte [rsi]
insd dword [rdi], dx
pop rdi
xchg eax, ebp
sar esi, 1
add byte [rsi - 0x14], cl
pop rdx
movabs eax, dword [0x2f4a4018fa6a7669]
fist word [rax + 0x78]
imul ecx, dword [rdx - 0x4b], 0x384af214
sbb byte [rdx + rdx*4], bl
sbb ebx, dword [rcx]
xor dword [rsp + rdx*2 - 0x505b3f9e], edi
cmp byte [rdi], dh
push rdx
loopne 0x4085f5
sbb byte [rcx + 0x2f], cl
mov cs, word [rax]
mov al, 0x20
and al, 0x2e
mov ss, word [rsi + 0x4b]
add byte [rdx - 0x6e], dl
sbb edx, dword [rsi]
pop rsp
adc al, 0x44
scasb al, byte [rdi]
push rax
ror dword [rsi + rbp*2 + 0x776f2693], 1
xchg eax, ebp
and al, 0x24
lodsb al, byte [rsi]
xchg eax, esp
outsb dx, byte [rsi]
out 0x50, al
and esi, dword [rax - 0x4abd62ba]
add byte [rdx - 0x3064cd1e], dh
or eax, 0xe2518e8b
xor dl, bl
lodsb al, byte [rsi]
scasb al, byte [rdi]
imul ebx, dword [rsi - 0xb], 0x52
cld
movabs dword [0x1040cc216456a458], eax
cmp al, 0xca
lodsd eax, dword [rsi]
mov bh, 0xa9
pop rax
je 0x4085dc
sub byte [rsi + rbx*8 - 0x77], 0x33
push 3
add dword [rax + 0x24], 0x219124ca
fmul dword [rsp]
shr esi, cl
and byte [rax - 0x79c79d4e], dh
adc dword [rip + 0x7d05468f], 0x58c1c521
push rsp
push rbx
adc esp, esi
xchg eax, edx
hlt
push rsi
leave
add ah, byte [rcx]
movsd dword [rdi], dword ptr ss:[rsi]
mov bl, 0x31
mov dl, 0x60
scasd eax, dword [rdi]
xor ebp, dword es:[rsp + rcx + 0x16]
sub al, 0xf
leave
insd dword [rdi], dx
retf 0x6526
jb 0x408645
clc
out 0xa0, eax
xor al, 0x40
stosb byte [rdi], al
adc byte [rbp - 0x537d3c5e], bl
clc
jp 0x40868f
cmp eax, 0x5060b309
out dx, eax
ret 0xb001
xor al, byte [rbx - 0x44]
or dword [rdx + r8*4 + 0x69509588], r9d
add dword [rdx], eax
or al, 0x32
mov cl, 0xf3
jb 0x4086ee
push rdx
sub edx, dword [rcx + 0x31]
in al, 0x20
mov al, 0x5a
sub dword [rcx], esi
and al, 0xc4
lodsd eax, dword [rsi]
mov ah, 0xc1
ret 0x1822
movabs byte [0x474f4b8429434125], al
push 0x1a884d80
pop rdx
lodsd eax, dword [rsi]
leave
mov ebp, 0x769f1c80
and eax, 0xe11cad06
je 0x408686
push rsi
lodsb al, byte [rsi]
stosd dword [rdi], eax
xor al, 0xc8
sub eax, 0x9cdb656c
adc al, 0x24
enter -0x6a36, -0x6c
sbb al, 0x93
stosd dword [rdi], eax
and al, 0x38
add al, 0x9a
js 0x408748
xchg eax, r12d
adc dword [rdx + 0x38], edi
sbb esi, dword [rsp]
add byte [rcx], dh
xor cl, byte [rcx - 0x3f]
mov dword [rax], ebx
imul esp, esp, 0xb2ac05d3
xchg eax, edx
mov ch, 0x33
retf
xchg eax, ecx
movabs al, byte [0xd143035f61873031]
out 9, eax
ror byte [rcx - 0x31be22f5], cl
xor eax, dword cs:[rbp + 0xac15e20]
cmp byte [rdx], ch
and al, 0x86
js 0x408789
xchg eax, esp
adc byte [rax + 0x2235ec42], al
jnp 0x4087a8
xchg eax, ebp
add eax, 0x13065404
pop rdx
ret 0xc626
cmp eax, 0xc2214527
add byte [rip - 0x6d7e524c], dh
pop rax
and al, 0xba
rcl dword [rcx + 0x165e8c1b], cl
and ecx, dword [rdi - 0x77]
mov ah, 0xf1
mov dl, 0x86
mov cl, 0xf5
xor eax, 0x99760473
enter 0x5e08, -0x63
dec dword [rdx - 0x5d]
xchg byte [rbp + 0x6dea6400], al
xchg eax, esp
add al, 0x1c
xor byte [rsi - 0x5c3f3cd0], r13b
adc dword [rcx - 9], esp
or eax, 0x2de00cb4
push rbx
enter 0x303, -0x70
and ecx, dword [rcx + 0x33]
pop rcx
sub ecx, dword [rbx - 0x7be528e0]
push rbp
retf
and dl, byte [rcx]
and byte [rcx], dl
and dword [rdi + rdx*8], 0x2563d445
retfq
add eax, 0xaa640a8d
sub dword [rdi], ecx
out 0x78, al
int3
or eax, 0x325fbd6e
je 0x4087ad
insd dword [rdi], dx
add dword [rip - 0x7754b320], esi
jo 0x408759
movsd dword [rdi], dword ptr [rsi]
xor al, byte [rdx]
xor esp, edx
push rax
int3
imul edx, dword [rsi], 0xb5918c6a
test dword [rbp + 0x72], ebp
movsxd rsi, dword [rdx + 0x4a51fa3f]
and dword [rsp + rbx*8 + 0x46], 0x949601a5
xor esi, dword [rcx]
and al, 0x60
leave
xor edi, dword [r11 - 0x74]
sbb cl, ah
stosb byte [rdi], al
xor al, 0x89
jbe 0x408860
and dword [rip - 0x96cff4c], 0x8b660ca
and dword [rdx + 0x22], eax
jmp 0x336af64b
lea eax, [rax]
imul esp, dword [rbx + 0x70], 0xc984b646
push rax
xor ch, byte [rsi - 0x54fd4ecf]
push rax
sub byte [rsi + 0x97641c], dl
xor al, 0x31
add byte fs:[rcx + 0x3495cc90], al
or ebp, ebx
or byte [rcx + 0x5f817367], cl
adc al, 0x4a
and dl, byte [rbp - 0x369fe24d]
adc byte [rax + 0x19], ah
xor ch, byte [rdx]
mov ah, 0x18
sbb eax, 0xce61421e
sbb bl, cl
jnp 0x408838
jp 0x408894
enter -0xe88, 0x58
je 0x4088cd
xor eax, 0x18ec0ee1
xor al, 0x69
lodsb al, byte [rsi]
insd dword [rdi], dx
mov byte [rbp + 0x383b914c], dl
test dword [rcx + rcx*4], eax
xchg eax, edx
adc byte [rax], bh
mov dword fs:[rax - 9], ebx
cmp dword [rbx + 0x2a], eax
and dword [rcx - 0x6a02fe57], eax
add eax, 0x2ac1023
retf 0x1488
xor cl, byte [rdx + 0x2b]
ror byte [rax], 0x21
xchg eax, ebp
mov edx, 0x78a4025e
adc al, 0x51
test al, 0xe2
push rax
mov al, 0xba
mov edi, 0x52106bd7
xchg eax, edx
movabs eax, dword [0x41cc244095b9b93b]
and eax, eax
mov byte [rdi], al
retfq 0x25bc
xchg eax, edi
adc esi, eax
xor eax, 0x4a05042
rcl byte [rsi + rbp*4 + 0x62042133], 0x84
lodsd eax, dword [rsi]
cmp eax, 0x1858810a
xchg eax, esi
xor al, 0x60
or qword [r14 + rbp*8 + 0x253ab8b3], 0xfffffffff9ed8324
movabs eax, dword [0x25b3870ee0211284]
adc byte [rsi*8 - 0x7313b592], bl
sbb dword [rsi + 0x4e035450], esp
adc ebp, dword [rax + 8]
add eax, 0xb046c6b7
sub dword [rsi + rbx*2], ebp
and al, 0xea
xchg eax, esi
lahf
sub ebp, dword [rcx + 0x665c4810]
and byte [r15], r8b
pop rcx
cwde
movabs byte [0xabae51e8bc2434d4], al
mov esi, ebp
or ecx, eax
and al, 0x13
insd dword [rdi], dx
jle 0x40894c
imul esp, dword [rax*4 - 0x5ccb2f4], 0x2c3c18d
js 0x4089a9
add ebp, dword [rbp + 0x21]
or byte [rcx - 0x38cfe08c], dl
movabs byte [0x3304e9983f031494], al
movabs eax, dword [0x162c3102b91d26c8]
xor al, 0x81
sub dword [rdx - 0x4e], ebx
adc dword [rcx + 0x25624133], edi
sub dl, cl
push rsi
and al, 0x2c
movsxd rsi, dword [rdx]
xor byte [rsi + 0x35414728], dl
xchg eax, esp
pop rdi
mov dl, 0xc2
mov al, 0x15
sbb byte [rdx + rsi*2], cl
cmp dword [rax + 0x60], ebp
adc al, 0x56
nop
push r13
or eax, 0x2468844a
xor qword [r10 - 0x5da9f41d], rsi
adc byte [rax], dl
scasb al, byte [rdi]
sub edx, dword [rsi - 0x1b2563fc]
and dword [rdx + 0x2b], eax
mov ecx, 0x81184a20
adc dl, byte [rdx]
mov cl, 0x1d
add dword [rbx - 0x98ab7dc], ebp
push -0x37
cmp byte [rdi + 0x30], 0x57
mov dword [rbp - 0x4ba5bd47], edx
xor ebx, dword [rbp + 0x4724122e]
xor ch, byte [rdx + 0x20]
and al, 0xe8
sub dword [r11 - 0x42791aee], r13d
xchg byte [rbx - 0x78ee6e54], ch
mov dl, 0x83
fcom dword [rsi + 0x73148410]
ror dword [rdx + 0x51], 1
sbb bl, byte [r8 - 0x7f]
pop rsp
add dword [rdx + 0x49], esi
sub al, byte [r8 + rdx + 0x656c8060]
mov ch, 0x61
ror al, 1
shl byte [rax], cl
mov ecx, ecx
adc al, 0x48
movabs byte [0x410464db78d3bc4c], al
cmp cl, cl
outsb dx, byte [rsi]
sub dh, byte [rax]
js 0x408a68
in al, dx
fisub word [rbp + 0x12]
and dl, byte [rsi]
lodsd eax, dword [rsi]
iretd
sub dword [rax], ebx
sbb byte [rcx], dh
popfq
scasb al, byte [rdi]
loop 0x408a7a
and al, 0x77
wait
push rsp
push rax
ret 0xe61b
stosb byte [rdi], al
sbb cl, dh
sbb byte [rax + 0x11ae6068], 6
enter -0x6014, 0
stosd dword [rdi], eax
mov al, 0x22
jg 0x4089d7
mov dl, 0x84
popfq
adc dword [rsp + rbp - 0x15], 0x20
jmp 0x55f91b80
xor ecx, dword [rbx - 0x3dd2a5cc]
sbb al, 0x9b
add byte [rip - 0x146dac58], bl
xor eax, 0x3d82a120
out 0x19, eax
push rcx
sub bl, ch
add eax, dword [rdi - 0x73]
movsb byte [rdi], byte ptr [rsi]
nop
adc eax, 0xe277f708
mov dword [rsi], edx
mov dl, 0xb7
sbb al, 0x2e
or ecx, dword [rbx + 0x58]
and dword [rax], esi
cmp eax, 0x46334202
add bh, byte [rbx]
jno 0x408a9d
sub dword [rsi - 0x84c9d90], edx
or eax, 0x4ff081a1
cmp ebp, ecx
push -0x5fbc4ada
jo 0x408a63
cmp ebx, eax
add byte [rbx + 0x70], 0xa
jns 0x408a33
adc qword [r10], rbx
add al, 0xc8
movsxd rsp, esp
add ch, byte [rcx]
sbb ch, dh
mov dh, 0x46
test eax, 0x138c8a90
jae 0x408ad8
jb 0x408ac5
movabs al, byte [0xab13a0b164b28d80]
xchg eax, edx
mov ecx, 0x8951e8b5
enter 0x570f, 0x1a
xor eax, 0x38fd0e48
and bpl, byte [r8 + rsi*8]
pop rax
and dword [rbp + 0x44672302], esp
test al, 0x8c
test al, 0x6b
pop rdi
insd dword [rdi], dx
sub dword [rax], esi
retf 0x5e82
test al, 0xe0
and al, 0xa4
lodsb al, byte [rsi]
call 0xffffffff8142cf05
xchg eax, esi
test byte [rax], al
or byte [rdx + rcx*2], cl
loopne 0x408b5d
sub edi, ebx
pop rcx
sbb byte [rax + rcx*2 - 0x27d5cd72], al
test byte [rsi + 0x47], cl
xor dl, cl
pop rax
scasb al, byte [rdi]
nop
and byte [rbx], ch
pop rdx
fimul dword [rax]
and cl, dl
retf
sbb rbx, qword [rcx + 0x39]
add ch, byte [rdi + rdi]
mov dl, 0xfa
adc dl, byte [rdx + 0x24]
or cl, byte [rcx - 0x19]
sbb al, byte [r14 + 5]
and ch, ah
pop rdx
push rcx
cmp byte [rsi + rax*2 + 0x5d], dh
movsxd rdx, dword [rcx - 0x3d82db00]
xchg rax, r8
pop rsp
or dword [rip + 0xe4b4960], esi
mov dl, 0x80
mov esi, dword [rdx]
mov ss, word [rax + 0x61]
lea eax, [rsi - 0x38]
push rsp
outsd dx, dword [rsi]
sub edi, dword [rbx]
sub ecx, 0x6a
scasb al, byte [rdi]
je 0x408b4c
or dl, byte [rax]
test al, 0xbc
cmpsq qword [rsi], qword ptr [rdi]
add al, 0x19
stosd dword [rdi], eax
push rsp
sub dword es:[rax + 0x19], ebx
sub ecx, dword [rdi - 0x3ee68db6]
sub cl, byte [rdx + 0x23]
test dword [rax + rax], ebx
mov al, 0x66
add byte cs:[rcx], dh
cmp ebp, dword [rax + 0x5b]
xor byte [rcx], al
imul bh
push 0x1d
nop
sub al, ah
shr byte [rdx - 0x1ac9b067], 0x5c
adc eax, 0x62501cf2
jns 0x408b78
movabs r9, 0xa2b1504f79a0cbe7
adc byte [rcx + rcx], ah
nop
cmp edx, eax
jo 0x408be6
adc dl, byte [rdx + 0x4a]
sbb al, byte [rdx]
add cl, byte [rcx - 0x5b4fff7c]
jbe 0x408b4d
add eax, 0x790a0759
and edx, dword [rax]
stosb byte [rdi], al
jrcxz 0x408c24
add dword [rdi], r10d
jmp 0xb37cd6b
cmp byte [rsi], dh
sti
retf
insb byte [rdi], dx
adc ch, byte [rbp + rax + 0x13]
shl byte [rax + 0x1668720c], cl
lodsd eax, dword [rsi]
lodsb al, byte [rsi]
fisub dword [rcx + 0xf]
cmp bl, byte [rcx + rdx*8 + 0x1f335576]
jo 0x408b7b
push rsi
adc byte [rax + 0x11], ah
rcr r12, 1
and eax, dword [rcx]
mov fs, word [rax + rbx*4 + 0x6e]
push rdx
mov cl, 0x3c
cmp esi, dword [rdi]
in ax, 0x46
add byte [rbx], dl
add eax, 0x1d00429e
ret 0xe48a
xor byte [rbp - 0x356bf2c0], r8b
movsxd rbp, dword [rcx + 0x4a7241d8]
mov edx, 0x2455b24c
sahf
push 0x63
xor byte [rcx], dl
sub bl, al
and byte [rcx - 0x62079afa], ch
add ah, byte [rcx - 0x7b]
cld
and eax, 0x5339267c
pop rdi
hlt
add al, 0xe7
enter 0x43f9, -0x15
xchg eax, ebp
ror edx, 0x22
jno 0x408c84
adc bl, dh
or byte [rbx - 0x7e5b7f2e], ah
adc dword [rbx + 0x2e], ecx
xor dl, byte [rdx + 2]
movsxd rax, esp
div byte [rbx + 0x79]
jae 0x408cd2
insd dword [rdi], dx
push rdx
imul ecx, edx, 0x172d7a01
xor dword [rcx + 0x59], ebp
cmp byte [rcx], cl
mov ch, 0x20
add eax, 0xc0f51282
add esp, dword [rbp + 0x71]
popfq
pop rdi
imul edx, dword [rdx - 0x9ef5888], -0x1c
sahf
or al, 0xe0
push rcx
and al, 5
jae 0x408ca0
push rsp
add eax, 0xb774a2c
pop rsi
cmpsd dword [rsi], dword ptr [rdi]
push rsi
or cl, byte [rsp + rdx*4 + 0x229d1800]
jo 0x408d21
pop rax
and al, 0x40
sal byte [rbx], 0xa
jbe 0x408ca3
pop rsi
xor dword [rax], esi
sub ch, byte [rcx]
sbb al, 4
and eax, 0x390b024a
adc al, byte [rdx + 0x4a7f9191]
mov dword [rsi - 0x33bfcbe0], ecx
adc dword [rbp + 0x4dc847f8], 0x56ed7c0d
mov edi, 0x593d7669
insb byte [rdi], dx
pop rdi
xor byte [rcx], r11b
add al, byte [rbp + 0x4a]
xchg eax, edx
stosd dword [rdi], eax
xchg eax, edx
add ah, dl
or rax, 0x4eb42063
add esi, dword [rbp + 0xa]
sbb byte [rax - 0x3cebc318], dl
and qword [rax], rdx
adc eax, 0x6502ac0d
pop rax
push rsi
add al, 0x24
push 0x60
sbb byte [rsp + rax*4], al
and eax, dword [rdx]
jo 0x408d66
add al, 0x6b
push rsp
pop rax
adc dh, byte [rdx]
cmc
or byte [rip - 0x33a2cd43], ah
xor cl, byte [rdx]
adc cl, byte [rcx + 0xe]
cwde
test byte [rax + 0x28], al
xor al, 0x28
and dword [rax], ebx
mov word [rdx - 0x2bdb3e93], fs
cdq
adc al, 3
sbb ecx, dword [rcx + rdx*4 + 5]
or eax, 0xe336e69
and dword [rcx + 0x4b86c241], edx
enter 0x22da, 0x2b
mov r12b, 0x27
or byte [r10 - 0x7bb397d0], al
adc dword [rcx], ebx
add eax, 0x3901018
push rdx
lodsb al, byte [rsi]
jge 0x408d93
xor eax, 0xb1480802
jbe 0x408dab
and eax, 0x5e2bcb40
or dword [rbx + 0x2183d6b6], 0xcae46b48
fcomp dword [rsp]
pop rbp
jo 0x408dfe
xchg eax, edx
movabs al, byte [0x2992c102382dc595]
xor dword [rdi], eax
add byte [rbp + 0xc], 0x45
xor ch, al
or dword [rax + 0x32], ecx
xor dword [rcx + 0x31], edx
add byte fs:[rax + rax*2 - 0x17f4d4f0], ch
adc dh, byte [rax + rdi]
add ecx, dword [r10 + 0x65]
sub eax, 0x4095832a
add edi, edi
lea ecx, [rbx - 0x5e]
fisubr dword [rdx]
std
lodsd eax, dword [rsi]
push rdi
adc byte [rcx - 0x70df94ef], 3
add cl, byte [rdi]
jae 0x408dc3
jne 0x408dd2
mov bh, al
and al, byte [rdi + rax*4]
xor dword [rbx + 0x58268e66], ebp
movsxd rdi, dword [rax]
add cl, byte [rbx]
loopne 0x408e20
mov gs, word [rdi + 0x30]
adc r8b, byte [r12 + r14*2 - 0x64]
xor dword [rax + 0x51], esp
or cl, byte [rcx]
add byte [rip + 0x18812a10], ch
xor dword [rip - 0x62b9cbbe], edx
xor esp, edx
mov esp, dword [rax + 0x54]
enter 0x6549, 0x64
test byte [rcx], bh
and byte [rcx], dh
rcl byte [rsi + 0x42], 0x1c
pop r10
lodsb al, byte [rsi]
retf 0x1a0a
imul ebp, dword [rsp], 0x341e8ac8
or byte [rcx + 0x25], ah
push dx
add spl, cl
imul esp, dword [rdx + 0x49], 0x103b8082
cmp dword fs:[rcx], ebx
cmp byte [rdi], al
and ah, byte [rsp + rbx*4]
xor dword [rcx + 0xd], esp
adc dh, byte [rcx + 0x21]
adc dword [rbx - 0x52df75ce], ecx
sub al, 0x10
movsb byte [rdi], byte ptr [rsi]
cmp byte [rip - 0x7fc9ab34], r10b
add al, 0x48
add bh, ch
cmp dword [rsi - 0x61fa97ce], ebp
xor eax, dword [rax + 0x1b]
or al, ah
mov eax, dword [rdx + 0x15]
mov word [rdx], fs
push rcx
push rsi
mov al, 0xb
add dword [rdx], esi
test al, 0x32
insd dword [rdi], dx
add dword [rdi], 0x54724464
push rbx
and byte [r8], r10b
sub al, 0x77
mov eax, 0xfa49830
jbe 0x408ee8
xchg rax, r10
add eax, eax
mov byte [rsi], al
adc byte [r8], al
lodsb al, byte [rsi]
push rcx
pop rdx
adc byte [rax], ch
xor byte [rcx + 0x30], al
xchg eax, esi
pushfq
and eax, 0x1645367b
cmc
or ch, byte [rsi - 0x4dcae984]
fnstsw dword [rbp - 0x7b]
sbb byte [rax + rcx*2 - 3], al
sub ch, bh
push rbx
mov ch, 0x20
jrcxz 0x408f18
outsd dx, dword [rsi]
rcl qword [rax], cl
sbb byte [rcx - 0x3180f5f7], al
adc eax, 0xe7f3bd60
movsxd rax, dword [r8 + 0x29]
mov eax, cs
and ecx, dword [rdx - 0x55]
adc eax, 0x3eb21460
xor byte [rax - 0x7baff5ad], ch
xchg byte [rcx + rcx], al
movabs dword [0x269870c196a0ba6f], eax
cmp dword [r10 - 0x6b], esi
push rsp
retf
lodsd eax, dword [rsi]
test dword [rdx - 0x76], 0x4a403216
cmp ch, ah
enter 0x72e0, 0x6e
mov bl, 0xc1
cdq
retf 0x5e20
xor dword [rcx - 0x4e], ebp
add eax, 0x373cd359
jrcxz 0x408f01
and ch, al
xchg eax, edi
retf -0x608a
jns 0x408e92
pop rdx
pop rax
add byte [rsi], bh
fld qword [rbx + 0xd]
add dh, byte [rip - 0x1bda8c12]
adc byte [rip - 0x4ae8c592], r8b
and byte [rax + rbx - 0x78], ah
and dl, byte [rdx + rsi]
imul rcx, qword [r9 - 0x6b], -0x70
or dword [rcx], eax
xchg dword [rcx], esi
sub dword [rax - 0x78], ebp
test byte [rbp - 0x25], bl
xor eax, 0xc24068ac
or dh, byte [rsi]
and al, 0x64
mov al, byte [rsi + rcx*8 - 0x737fcdbf]
outsb dx, byte [rsi]
outsb dx, byte [rsi]
mov al, 0xa
test eax, 0x8903d155
pop rcx
movabs al, byte [0x46aca364889c5081]
test eax, 0x32314a18
or dword [rsi + 0x49], edx
jo 0x408f99
adc al, 0x60
add dword [rax + 0x31], ecx
sub ch, byte [rcx]
stosd dword [rdi], eax
xchg ax, bx
adc eax, 0x94e14f33
retf 0x62aa
xchg eax, ebx
mov edx, dword [rdx + 0x42]
sahf
push rbx
shl esi, 0x31
mov ah, byte [rax + 0x40]
mov esi, dword [rdx + 0x242d149a]
cmpsd dword [rsi], dword ptr [rdi]
and dword [rdx - 0x7a], eax
xor al, ah
js 0x408fec
adc dword [rax + 5], ebx
jae 0x409001
movabs byte [0x89a207db4fedc091], al
or ah, al
push rax
sbb ah, byte [rcx - 0x42fe9ba8]
add dword [rbx], ecx
movabs dword [0xd3084705913f182d], eax
sub al, 0x50
stosb byte [rdi], al
push rsi
adc eax, 0x96a0ca0c
pop rdi
jl 0x408f87
cmp eax, 0x899e1f0a
cmc
mov dword [rbp + 0x52], edx
test dl, ah
xor dl, byte [r8]
xor byte [rdx], 0x30
or ah, byte [rcx + rsi + 0x4b]
mov ah, 0x48
xchg eax, ecx
mov cl, 0x29
mov byte [rbx], bpl
mov bh, 0x57
adc ecx, edx
insb byte [rdi], dx
sbb ecx, eax
imul edi, dword [rdi + 0x54], 0x44
cmp al, 0x46
jne 0x408f86
and dword [rdi - 0x80], edx
ja 0x409041
pop r9
mov al, 9
mov cl, byte [rcx]
movabs dword [0x3209078e0d4ac646], eax
jo 0x408fec
js 0x40901a
test al, 0x7e
push 0x20
adc eax, 0xd92c3029
adc al, 0x33
xor sil, byte [rcx]
xor al, 0xe4
jle 0x40902c
and dword [rbp + 0x77], eax
jae 0x409091
imul esi, dword [rax + 0x43], 0xaf547ab5
test eax, 0x6f73e6ba
sti
adc al, 0xbb
js 0x4090a3
fist dword [rdx]
cmp byte [rsp + rbp], cl
mov edx, 0x84029eb6
movabs al, byte [0xa10401608cf63603]
test al, 0x43
and edx, eax
and cl, byte [rdx]
lodsb al, byte [rsi]
js 0x40905f
push -0x79d67e3e
jnp 0x409012
mov dl, 0x38
xor al, 0xd
add dword [rcx + 0x1d], ebx
add dl, bl
cmp byte [rbx], bh
adc eax, 0x62c545e0
adc edx, dword [rdx - 0x7b]
xor eax, 0x539b04aa
add eax, 0xfc88b203
test byte [rax - 0x7f], cl
jmp 0x409071
test dword ss:[rax], eax
add al, 0x42
sbb al, cl
sbb byte [rcx + rcx*2], 0xc0
pop rbp
int1
pop rsi
mov ebx, dword [rbx + 0x25]
ret
movsb byte [rdi], byte ptr [rsi]
add esp, eax
mov ah, byte [rdx]
in al, 0x80
xor dword fs:[rdx + 0x60], ecx
add al, 0x56
rcr dword [rcx - 0x6f72b5d4], 0x71
mov edi, 0x953aa3f2
or dl, byte [rdi - 0x6c]
or dword [rsi + 0x51], ecx
and dh, al
loope 0x40903a
add eax, 0x5814bc02
push rax
retf -0x6c77
add cl, byte [rax]
add al, 0x72
nop
and ecx, dword [rax - 0x48]
xor cl, byte [rbx + 0x54]
movabs dword [0xf49acb19068680b2], eax
and ebx, esp
rol dword [rdx + 6], -0x4e
xor eax, 0x5d700035
cmp eax, 0x28103e31
leave
and eax, 0x693e383
movsd dword [rdi], dword ptr [rsi]
mov esp, 0xe8a1eabd
add eax, 0x465f9b0f
push rbx
mov bl, 0xc5
pop rdi
xchg eax, ecx
add al, 0xc4
test al, ah
int3
and byte [rdi + 0x7e], ah
or al, 0x5c
or dh, byte [rax - 0x3aeb2d47]
pop rcx
adc eax, 0x41056d66
sub eax, 0x66aae8c8
pop rsp
imul ebp, esp, 0x1954b2d2
and bl, dh
movabs byte [0xf8a02f490c95a120], al
or byte [rcx], bl
insb byte [rdi], dx
push rax
push rdi
sbb byte [rcx], cl
test rax, -0x73bf7fb8
cld
xor dword [rdx], eax
sub dword [rax + 0x928fd35], ebp
call 0xffffffff80be116b
push rcx
pop rcx
shl byte [rsi], 1
test eax, 0xcf488b58
cmp ebx, esi
add esp, ecx
cmp bh, byte [rax]
cmp bh, byte [rsi + 0x70561a1]
xor dword [rsi + rdx*2 - 0x7f], esi
xor byte [rdx + 0x188f7a36], cl
vunpcklpd ymm9, ymm3, ymmword [rsi + 0x72af8b76]
mov fs, word [rdx - 0x68]
mov edi, 0x9462c06a
add eax, 0x80c86fd4
and al, 0xb5
js 0x4091e1
mov al, 0x10
adc dl, byte [rsp + rbx*4]
sub esp, dword [rax]
or edx, esi
sub byte [rbp - 0x448acfd3], dl
or al, byte [rbx - 0x4ce85c22]
scasb al, byte [rdi]
stosb byte [rdi], al
xchg eax, esi
mov cl, 0x9e
loopne 0x409131
pop rsp
je 0x4091b7
xor dword [rip + 0x40c83ad], 0x56
sub al, 0xf
mov r10b, 0x2a
or byte [rdi - 0x76], 0x38
and rsi, qword [r15 + 0x3900231]
sub al, 9
sbb dl, byte [rdx + rcx*4 - 0x716cba9b]
mov byte [rcx + 0xc], ch
or esi, dword [rax]
add byte [rsi], dl
add dword [rbp - 0x73], 0x42
movabs al, byte [0x85f7982b0864314b]
adc al, 0x46
xor dword [rdx], eax
cmp byte [rax], al
adc ch, byte es:[rax + 0x48332b4]
movabs dword es:[0x7f0e0ea1020db244], eax
mov al, 0x2a
push rsi
add bl, cl
sub ebx, dword [rdx + 0x49]
push rax
mov dword [rsi + rdx*2], ecx
int1
lea ebp, [rsi + rbx*4 + 0x64ab66d1]
adc al, 0x84
in al, 0x73
and al, 0x88
leave
adc dword [rdx + 0x6e], ecx
ja 0x4091ab
adc eax, 0x7d7bb090
mov ah, byte [rbx + rsi*2]
jb 0x409267
xor ebp, dword [rdx - 0x2b6bf2a7]
movabs dword [0x327d562323116049], eax
adc byte [rax + 0x58], 0x52
mov esi, dword [rax]
add byte [rbx + 0x8884b0b], cl
stosd dword [rdi], eax
push 0x1f1d59
and dword [rax + 0xe], eax
rol byte [r8 + 0x20], 0x64
retf
movsd dword [rdi], dword ptr [rsi]
rol byte [rdx - 0x36041490], 0x28
pop rcx
add eax, 0x4a928342
movabs qword [0x2b45ac26e82245a0], rax
nop
and esi, dword [rcx]
and r12d, dword [r11 + 0x42fe2521]
and rax, 0xffffffff91f43529
jl 0x4092fa
and al, bh
jbe 0x4092d6
add eax, 0xd620b08b
or edx, dword [rdx]
add byte [rsi], bl
mov esi, 0x6516803d
add al, 0xbe
push rcx
sbb byte [rbp - 0x36], dl
or al, 0x22
jp 0x4092c1
stosb byte [rdi], al
out dx, eax
imul edi, dword [rax + 0x33], 0x8ac990a2
push rdi
xor dword [rdx - 0x2dbb9bac], esp
mov ch, byte [rbx + rbp*8]
cld
scasb al, byte [rdi]
mov dl, 0
xor bpl, byte [rdx + r12]
add eax, 0xc023e652
add dh, byte [rax - 0x7378cfa0]
movabs byte [0xdb5095a292bb4109], al
fcomp dword [rcx - 0x74]
nop
mov dword [rdx], esi
imul ebp, dword [rbx - 0x1cb9ffee], -0x75
pop rdx
push rsp
push rbx
in al, dx
and byte [rbp + 6], al
and dword [rcx], eax
adc eax, 0x31135158
test al, al
adc dword [rip + 0x6d813875], 0x1614c907
mov qword [r10 + rcx*2], rcx
and dword [rdi + 0x5e083203], edx
and esi, dword [rcx]
xchg eax, esi
sub eax, 0xfbfd1981
pop rdx
sub dword [rax], esi
and byte [rsi - 0x373ff9fc], ch
test al, 0xa4
sbb ecx, eax
pop rbx
add eax, 0x1068cfe4
xor al, byte [rip + 0x2832414a]
add dword [rip - 0x3abdbdfe], eax
xor ah, byte [rbp + rax*2 - 0x316f2a9a]
cmp byte [rdx + rsi*2], al
xchg eax, esp
push rcx
fdiv dword [rcx]
adc dword [rsi + 0x35], eax
mov dword [rbx], eax
ficom dword [rbp + 0x28]
lodsb al, byte [rsi]
sub bl, byte [rbp - 0x74]
push 0x32c84655
adc byte [rcx], 0x19
mov al, 0xcb
add byte [rdx + rbp*2], ch
lodsb al, byte [rsi]
stosd dword [rdi], eax
mov dl, 0xa2
and eax, 0x43a296e0
push rsi
mov ah, 0x95
xor byte [rdi - 0x7f], bl
adc eax, 0xeb2cb008
xchg eax, ebx
add ebp, dword [rsi + rcx*8 - 0x59cd95bc]
nop
and byte [rsi], ah
enter 0x2c60, 0x42
ja 0x4093b9
sub edx, dword [rdx]
sub byte [rcx + 0x79], dl
and eax, 0x79319c10
xor cl, byte fs:[rcx]
sahf
rol byte [rdx], 0xc0
fmul dword [rax - 0x4b]
or ah, byte [rcx + 0x53]
out 0x6e, al
fsubr dword [rdx + 0x32]
mov byte [rbx + rsi*2], dl
xor al, byte [rax]
push rdx
sub al, 0x54
cmp byte [rdx + 0x3458ac38], cl
xor al, 0x54
jnp 0x4093cf
ret 0x5e
or ebx, dword [rax]
xor byte [rcx], cl
call 0x50d0ff41
pop rsp
sbb cl, ch
xor al, 0xf9
xchg eax, esp
adc al, 0x1c
xchg rax, rsi
and al, 0x45
xchg dword [rdx], ebp
ret 0x419
push rsi
int1
pop rsp
in al, 0x9d
or byte [rdx + rsi], al
xor al, dh
xchg eax, edx
test byte [rcx], dl
jmp qword [rip - 0x4fdea5dd]
jbe 0x4093d2
sub eax, 0x2a340189
and al, 0xa0
add eax, 0x386a4894
rcl byte [rsi + 0x52844890], 0xe
movsxd rax, dword [rbp + 0x2b]
and ebp, dword [rdx]
in al, dx
pop r8
pop rbp
xor dword [rax + rbp - 0x55], eax
leave
xor dword [rax + 0x64840480], esp
or al, 0x54
sub dword [rdx - 0x5d35d896], edx
adc bl, byte [rcx - 0x7a]
xor eax, esp
mov esp, 0x5434c041
movabs al, byte [0x26812002bb909557]
lahf
jo 0x4093e0
add al, 0x58
push rcx
adc byte [rcx - 0x3ddedcaf], dl
pop qword [rdx + rbp*2]
and al, 0x17
mov word gs:[r9 + rcx*2 - 0x22], fs
and dh, bl
adc bl, byte [rax + 0x42]
cmp bh, byte [rdx - 0x2a4cbb7b]
movabs eax, dword [0x90591025018d75cd]
push rsp
add ch, byte [rdx]
add dword [rbx + 0x2b0190e8], eax
mov ecx, 0x3346d431
add cl, byte [rax]
iretd
push rdx
movabs dword [0x5a24a05504a411b2], eax
add rax, 0x36f36053
jo 0x409441
test dword [rbx + 0x44617285], ebp
test byte [rdx], cl
xor dword [rsp + rbp*4 - 0x80], ebx
jb 0x4094fe
outsd dx, dword [rsi]
jp 0x7036d527
jnp 0x4094fd
and al, 0xd
add al, 0x29
jo 0x4094b6
add al, 0xed
jbe 0x409488
int 0x43
push rax
jne 0x409481
add eax, 0x6600424b
add dword [rax - 0x7246176e], esi
jno 0x4094f0
add esp, dword [rcx]
ja 0x409501
push sp
add bpl, byte [rdx]
mov esi, 0x4602498
or dl, cl
jb 0x409521
iretd
mov bpl, 0x57
cld
add dword [rbp + rbx*2 + 0x59], -0x63
xor eax, 0xc74473ae
pcmpeqd mm4, qword [rcx + 0x61]
xor esi, dword [rdx]
cmp byte cs:[rax + rcx], al
sbb dword [rbx - 0x1951abb0], edx
push rsi
nop
or cl, byte [rbx]
pop rcx
xor al, 1
xchg eax, esp
out 0x14, eax
adc eax, 0x10a60102
push rdx
add eax, dword [rcx + 0x65e6762b]
sbb al, 0x82
movhps qword [rbx], xmm6
and eax, edx
call 0x4865ea57
movabs al, byte [0x4692d391282b0093]
push rsp
or byte [rcx + 0x1e84254a], bh
outsd dx, dword [rsi]
add eax, 0x54de2afb
shl byte [rdx], 0x6f
add al, 2
or ecx, edx
push rdi
add byte [rax + 0x32a2642e], ah
cmp dword [rax], eax
or dword [rip + 0x77bcb29c], eax
xchg eax, edx
jp 0x40958a
xor al, 0xdc
push 0x28
adc al, 0x1a
add eax, 0xb4fcbe37
xor eax, 0x3405ca4
cmpsb byte [rsi], byte ptr [rdi]
or al, 0x42
pop rbp
cmpsb byte [rsi], byte ptr [rdi]
push rdx
cmp dword [rax], 0x669474
adc eax, 0x866a460f
mul dword [rsi]
or eax, 0xa020916b
push rsp
push 0x2b69cab4
xchg eax, esi
rcl dword [rsi + 0x2f], 1
pop rax
jae 0x409531
add byte [r8 + 0x19], 0xc1
jmp 0x4095af
sbb byte [rip - 0x4df667be], al
sub esp, dword [rcx + 0x239e61f2]
pop rsi
or dword [r14 - 0x69], r11d
test byte [rax], dl
push rsi
ret 0xb649
xor eax, 0x72642164
pop rsi
xor ah, byte [rax + rax]
cwde
sbb eax, 0x990aad
adc byte [r8 - 0x3bd3bdaa], spl
or al, 0x3a
add eax, 0x48618781
call 0xffffffff922b1a25
add al, 0x17
sbb dword [rax + rsi*4 + 0x64], edx
sub dword [rdx + 0x498259a8], esi
add spl, byte [r9]
cmp esi, ebx
jb 0x40956b
add esp, esi
or eax, 0xd11363e9
push -0x7eafb1fb
adc eax, 0x3542e114
movsxd rdx, dword [rdi]
mov es, edx
mov byte [rdx], al
jns 0x40964f
and bh, byte [rdx + 0x44]
sbb byte [rbx], ah
movsxd rdx, eax
ret 0x4af2
test byte [rax + rcx], bl
fidiv word [rdi]
push rsp
stosd dword [rdi], eax
adc cl, byte [rax]
push r9
test eax, eax
loopne 0x4095eb
ja 0x409622
xchg eax, edx
and eax, 0x90a80af4
enter 0x319c, 4
add dword [rcx], esp
loope 0x409674
scasb al, byte [rdi]
and byte [rbx], al
sbb byte [rax + 0x14254060], dl
add esp, dword [rax + rdi - 0x4b]
push 0
test byte [rdx], al
mov esi, dword [r10]
retf 0xe25
sbb ah, dl
adc byte [rcx - 9], ah
jno 0x4095ff
push 0x531fa2c2
push rcx
adc byte [rcx], 0x49
test dword [rax - 0x36], ecx
mov ah, byte [rdx + 0x71]
fbstp tbyte [rbp + 0x47]
add byte [rcx - 0x76], al
in al, 0x31
loopne 0x4096b9
xchg eax, ebp
out 0x32, al
jmp 0x40968e
sbb dword [rcx], eax
add dword [rbp + rsi - 0x656dd395], ebx
xor dword [rbp - 0x50], edx
movabs eax, dword [0x5aed061a525ad1e8]
add dword [rdx], eax
sal byte [rsi - 0x54], 2
xchg al, dh
adc esi, dword [rbx + 0x12210b3]
loop 0x409704
xor byte [rax + 5], 0x92
pop rax
push rax
or al, 0x32
sal byte [rdx - 0x3dcf4f99], 0x80
sbb byte [rsi + rdx*8], dl
jae 0x409683
or edi, dword [rbp - 0x554dd127]
push rax
adc dh, byte [rdx]
push r14
jo 0x409642
sub cl, byte [rbx + 0x4b79b23a]
xlatb
or eax, dword [rsi]
push rsp
sub eax, 0x650b0164
sub r8d, dword [r13 + rax*2 + 0x4718acb5]
or al, byte [rdx]
test byte [rax], cl
adc byte [r11], spl
xor byte [rax], bh
mov dh, 0x38
mov word [rax], es
sbb esp, edi
xor dword [rdi], esi
add al, 0xaa
or esp, dword [rsi + 0x6474c67e]
int3
and byte [rip - 0x7b897730], ah
mov qword [rcx + r9*8 - 0x6bcabf87], rax
adc al, 0x8d
iretd
xor eax, 0x181068c
movabs byte [0x14e65160ef3e0d18], al
xlatb
movsxd rax, ecx
sub dword [rax], edx
jrcxz 0x409776
add al, 0xf
and eax, 0x713144ed
adc al, 0x58
out 0x12, al
movabs byte [0x2d618a0c9a690646], al
lodsb al, byte [rsi]
test esp, eax
and bh, byte [rcx]
push rcx
xchg eax, ecx
or bl, byte [rcx - 0x4d]
push rbx
add eax, 0x3791221d
or dword [rax + 0x25], esp
push rdi
xchg eax, ecx
call 0xffffffffc2439b84
add al, byte [rsi - 0x3b]
sub dword [rdx], edx
loop 0x4097bb
fcom dword [rdx]
or dword [rbx], edx
jmp 0x45c2ba6e
clc
lodsb al, byte [rsi]
movabs al, byte [0x87204c4ab515559]
push 0x50
cmp eax, 0xe0904b40
mov bh, 0xd1
and eax, 0x7005ee40
xchg byte [rdi], cl
and cl, byte [rax + 0x21]
push rdi
xor dword [rdx - 0x4cbfdefd], ecx
sbb dword [rbx + 0x2b], esi
and al, 0x27
jle 0x40976a
xor edx, dword [rbx]
xchg eax, ecx
push rcx
add eax, 0xb0854927
adc esp, dword [rcx]
push rsp
sub qword [r11], rax
movsb byte [rdi], byte ptr [rsi]
or al, byte fs:[rcx + rcx*8 + 0x10]
pop rcx
push rax
xor esi, dword [rcx]
or ah, byte [rdx + rcx*8 - 0x80]
xor ecx, eax
pop rax
and eax, 0x2508c3c4
push rdi
test spl, bpl
add byte ss:[rsp - 0x55], bl
movabs dword [0x483b9740a9440973], eax
fst qword [rdx]
adc al, 0x41
movabs byte [0x823031190060ca81], al
adc dword [rdx + 0x32feb2a9], 0x11804801
movabs dword [0xe68e212d6005aa56], eax
call 0xfffffffff6749527
mov eax, 0x5383da01
add dword [rdi - 0x43], ebx
cmp al, 0x50
fstp qword fs:[rdx + r14*2]
jb 0x4097a3
sub dword [rsi], eax
add byte [rdx], al
or ch, byte [rcx - 0xad83e9b]
mov edx, 0x925382ca
add al, 0x8d
or al, 0x92
xor cl, byte [rax + 0x7761a82e]
jo 0x40988c
add cl, byte cs:[rcx]
sub dword [rdx], ebp
xor byte [rax - 0x60], ah
adc dword [rcx], ecx
hlt
add byte [rcx], al
pop rsi
shr dword [rcx + 0x4414df6d], 1
add ah, cl
hlt
test al, 0x58
xchg eax, ebp
jle 0x4097c8
push rsi
movabs al, byte [0x247500e36d4312d]
xchg byte [rcx - 0x3c], al
cmp esi, esp
mov al, 0xca
lock adc byte [rbx - 0x4ea03f8e], ch
adc byte gs:[rdx], dh
and dword [rax - 0x69], edx
push rax
push rsp
add dl, al
sub al, 0x6e
cld
loope 0x40984d
mov byte [r15 + 0x30], al
push 0x7b826965
adc al, 0xdf
movsxd rsi, dword [rbp + 0x72]
push rbp
xchg eax, ecx
pop rdx
and al, 0x51
mov ch, 0x16
add eax, eax
and al, byte [rdx - 0x4f]
leave
adc byte [rax], cl
adc al, 0x98
xor qword [rax], rsp
or dword [rax], ecx
test eax, 0xb449480c
and byte [rbx], ah
adc byte [rdx + 0x77], dl
out dx, eax
sub eax, dword [rdx]
sbb dh, byte [rsi - 0x30]
adc dword [rdx - 0x5563a878], 0x32
add al, byte [rip + 0x61044bc]
ret
sub al, byte [rbx + 0x34]
xchg eax, edx
sub esp, dword [rdx + 0x60424a02]
adc byte [rax - 0x3dfbbf18], dh
and byte [rip + 0x38a84009], dl
or al, 0x16
rcl dword [rax - 0x47ce6d00], 1
xor eax, 0x25529c00
je 0x4098e6
adc eax, 0x4f94b009
loope 0x4098f3
movabs byte [0x68b316b2310a94c9], al
stosb byte [rdi], al
jnp 0x409930
or byte [rbp + 0x36688004], ah
cmp al, 0
or eax, 0x3a3532c8
test al, 0x88
or cl, byte [rdx - 0x50]
add byte [rax - 0x74], dh
push rbp
or dword [rdx], esp
sbb dword [rcx + 0x222ca80b], ecx
sbb al, 0x21
push r11
push rcx
sub al, 0x4a
sub dword es:[rdx + 0x1a], 0x31
int3
test rcx, rdx
sub byte [rdi - 0x57], dl
xor al, byte [rax]
sub bl, bh
push rsi
or dword [rcx - 0x520da880], eax
add dword [rax - 0x73], esp
nop
xor dword [rax + rdx*4 + 8], edi
add edx, esp
xor dword [r11], edx
mov ch, 0x12
and byte [rsi + 0xc160f97], dl
test dword [rcx], edx
cmpsb byte [rsi], byte ptr [rdi]
retf
test al, 0x18
push rax
movabs al, byte [0x2451717a64518283]
sub dh, byte [rcx + 0x32]
sub al, byte [rdx]
leave
mov dl, byte [rcx + 0x16]
cwde
mov esi, dword [rcx]
push 0x6848d109
sti
out dx, al
adc dword [rax + 0x2d], 0x249ec629
add al, 0x27
sbb byte [rbx - 0x127753be], al
sub dword [rbp + 0x67], 0xf4e77907
and eax, 0x301a353b
movabs dword [0x3088452fc6aca419], eax
mov byte [rdx + rcx + 0x4d], bl
test eax, 0x2c4958a
pop rsi
sub eax, 0x4a33ce4a
movabs byte [0x140944984872014], al
lodsb al, byte [rsi]
and eax, 0xb2112046
mov eax, 0x40a44975
or dh, byte [rdi + rbx - 0x5c]
and byte [rax + rsi*2], 0x32
push rdi
jb 0x4099dd
sbb al, 0x52
mov al, 0x76
sub ah, byte ss:[rcx]
test byte [rdx + rbx*8 + 0x50], dh
push rdx
sbb byte [rcx], 0x31
cmp al, 0x72
mov byte [rbx], dh
xor bl, byte [rcx + 0x7e]
or al, 0x19
jne 0x409a0f
js 0x409a13
sbb al, 0xaa
sbb dword [r15 - 0x52], r12d
test al, 0x5c
xor cl, byte [rdx]
or dword [rcx + 0x21005557], r8d
movabs rbx, 0xc2ab39372b564c01
and byte [rsi], bl
or ecx, dword [rdx]
push rsi
or dword [rax], eax
add dword [rcx], esp
add eax, 0x5bf12c2b
mov al, 0x32
push rsi
movabs eax, dword [0x927b66e1521378a3]
jb 0x409a2e
lea ecx, [rax]
mov ecx, 0x8a242238
jno 0x409a3f
or dword [rbx + 0x52], eax
rol dword [rdx + rsi - 0x5f63aef0], 0x11
pop rsp
jo 0x4099fa
mov esi, 0x18006724
insd dword [rdi], dx
or al, 0x40
sbb edx, dword [rdx]
sbb dl, byte [rbx + 0x22]
or dword [rcx - 0x5c], eax
add al, 0x28
xor byte [rax], dl
and byte [rbx], al
and byte [rdi + 0x49], al
xchg eax, esi
and esp, dword [rax]
xor ecx, dword [rcx - 0x20]
adc byte [rdx + 0x52478802], 0x30
stosb byte [rdi], al
or dword [rdx + rax*2 + 2], eax
or al, 5
mov dword [rsi - 0x20], esi
ret 0x3741
xor eax, 0x42555c10
xor al, 0x10
fsubr dword [rbp - 0x27]
int1
mov r12b, 0xa5
or dword [rdi - 0x1c], ebp
fldenv [rdx + 0x73]
jae 0x409aac
add eax, 0x74d809c7
mov esi, 0x3a78c4fa
push rbx
and al, 0x41
sal dword [rdx], cl
add rax, 0x74460aca
in al, 0xa0
add al, 0x2a
cwde
xor ch, byte [rbx + 0x3001822c]
mov ah, 8
push rsi
or dword gs:[r8 - 0x15], ebp
mov ecx, 0x53396d2c
ja 0x409aa9
push rbp
and byte [rsi + rdx*4 - 0x7eabb7be], ch
lodsb al, byte [rsi]
xchg eax, esp
xor eax, 0x58ae0559
mov ebp, 0xf4532da7
adc ah, byte [rsi]
shr byte [rdx + rax*4 - 0x39d9ad72], 1
xor dword [rbx - 0x455db451], ebp
push rsp
cmp byte [rsi], dh
add dword [rax], ecx
or dword [rdx + 0x10], edi
in eax, dx
movsb byte [rdi], byte ptr [rsi]
adc al, ch
cmpsb byte [rsi], byte ptr [rdi]
sub al, 0x41
rcl byte [rax + rcx*8 + 0x56], 0x36
movsd dword [rdi], dword ptr [rsi]
sub al, 0x2a
xchg eax, esi
sub al, 0xe5
sbb eax, 0x11528b61
imul esi, dword [rbx + 0x65], 0x34
and esp, dword [r11]
or al, 0x10
movabs al, byte [0xa900321a654bc014]
or byte [rcx + 0x49432a30], dl
adc al, 0x84
xor spl, byte [rsi]
cmp edx, dword [rbp + rdx + 0x216c6373]
and dword [rbp - 0x5c], edx
test byte [rdx + rax*4 + 0x6022408], ch
jns 0x409ba8
leave
mov cl, 0xb9
movabs dword [0xda2a314642642a34], eax
push rsi
sub edi, dword [rdi - 0x3f]
movsxd rsp, dword [rbx - 0x1b]
adc byte [rcx], cl
push rax
sbb al, 0x16
cmp eax, 0xd00214c9
xor cl, byte [rcx]
shl byte [r8], 0xa3
add dword [rbp + 1], eax
push 0x60
add byte [rcx], bl
shr bl, 1
push rsp
or eax, dword [rcx]
jrcxz 0x409b56
sal byte [rax + 0x33384513], 0x3c
push rdi
ja 0x409b20
add dword [rax], 0x6a34f29d
fadd dword [rsi + 0x24]
lodsb al, byte [rsi]
mov fs, word [rsi - 0x52]
jae 0x409bef
adc al, 0xb6
xor al, dh
add byte [rdx + rsi + 0x30601ca8], dl
add cl, byte [rbx - 0x71ee47d2]
lodsd eax, dword [rsi]
sub bh, byte [rcx + 0x4f]
sbb cl, byte [rsp + rcx*4 - 0x72b6e9af]
push rax
enter 0x1461, -8
xor dword [rbp - 0x70], edx
adc byte [rdx], bh
push rsp
xor al, 0x1c
and dword [rip + 0x3250518d], eax
mov r8b, 0xca
sbb dl, byte [rax - 0x76ddf9de]
loop 0x409b81
mov ch, 0x4a
test dword [rax - 0x40], edx
mov dl, 0x71
push -0x7c
sbb al, 0x4a
cmp bh, byte [rax + rbx*2 + 0x4b871480]
sbb dh, byte [rdx + 0x20]
xchg dword [r10 - 0x38], r12d
ret 0x320d
sbb bh, byte [rdi - 0x536e5777]
fcomp st(0), st(2)
fidiv word [rax + rax*8 + 0x50]
xor al, 0x92
sub byte fs:[r8 - 0xde45b69], r10b
add al, 7
sal byte ss:[rip + 0x2744898], 0x47
mov eax, eax
sbb al, 1
jb 0x409c1b
int3
add byte [rax + 0x50], cl
pop rdx
cmovs edx, dword [rbp + 0x32aefb14]
add dl, byte [rcx]
xor eax, 0x10614cac
movabs eax, dword [0x4a05e200c8193132]
add dword [rsp + rcx + 0x22], 0x141651e9
add esi, dword [rdx]
test eax, 0x448c554
imul edx, dword [rcx - 0x6e], 0x74c42562
jno 0x409bc2
adc eax, 0x2643b950
or ebp, edx
in al, 0x40
xor dword [rbp + 0x59], eax
lea ebp, [rdx + rcx + 0x23201a52]
and al, 0x93
movabs al, byte [0x128803de4012048a]
jno 0x409bf9
add dword [rdx - 0x40], eax
or byte [rsi + 0x5c982902], bh
xor cl, byte [rax + rcx*4]
push rbp
push rdx
xor al, 0x4a
push rsp
or dword [rdx + 0x134a9725], edx
pushfq
fidiv dword [rsi + 0x62]
xor dword [rax], esp
sbb dword [rcx], edx
mov al, 0xb5
add al, 0x7f
jnp 0x409cef
je 0x409d05
sub esp, ecx
add ebp, dword [rbp + 0x76c327dd]
xor byte [rcx + 0x110814c8], ah
cld
xor dword [rax + rcx*2], edx
add eax, 0xe6f96903
and byte [rcx - 0x5bce2876], ch
and al, 0x11
pop rdi
sub al, 0x58
add byte [rdx - 0x5b], al
jb 0xffffffffec8f1dc5
pop rdi
sahf
imul esp, dword [rbp + 0x79], 0x20
rol dword [rdx], 1
cwde
and cl, al
ret 0x8016
pushfq
test byte [rax], dl
or cl, byte [rdx - 0x11]
test al, 0x91
xor al, 0x15
push rbx
push rsp
scasb al, byte [rdi]
add cl, byte [rcx + 0xc]
and dl, byte [rsi + rax]
movsxd rsi, dword [rax + rbx*2 + 1]
push rdx
mov ah, 0xbe
adc byte [rcx], bl
or al, 0x92
sub byte [rax], ch
test byte [rbp + rsi*8 + 0x60], dl
and dl, byte [rbp + 0x58aacb50]
sub al, 0xa2
sbb byte [rcx], 0xb0
adc al, 0x42
xchg byte [rax + 0x49], al
xchg eax, ecx
sbb al, 0x85
add dword [rbx], ecx
out 0x21, eax
and eax, dword [rdx + 0x707055c2]
call 0x7f850227
xor dl, byte [rbp - 0x70]
add cl, byte [rbx]
fcomp qword [rax]
shr dword [rbx], 1
xchg eax, esi
pop rsp
sub dl, byte [rdx]
and ecx, eax
xor byte [r14 + 0x46], r9b
xor dword [rax + 2], ecx
enter 0x608a, 0x15
shl byte [rbx], 0x68
xchg dword [rsi + rdx*2 + 0x5f], edx
and eax, 0x2c10251
or dl, byte [rsi]
sub al, byte [rbx + 0x1299e29f]
movabs byte [0xcdce808ca232ef56], al
add esp, ebx
mov ch, 0x64
xor dword [rbx + 0x6041aa41], edx
adc al, 0x7b
xchg rax, r9
add dword [rbx + 0x42], ecx
movsxd rsi, dword [rcx + rax]
and al, 0x5a
test eax, 0x6dfaaa42
xor byte [rdx + 0x45b2015f], cl
jbe 0x409d2d
jno 0x409de1
xor dword [rax], eax
stosb byte [rdi], al
xchg rax, r10
movabs al, byte [0x1155673079e36042]
mov ebp, 0x23aa0434
mov esp, edx
xor ecx, esp
xor al, 0x22
cmp dword [rdx], ebp
xor dword [rdx], edx
mov dl, byte [rsi + 2]
stc
lea eax, fs:[rax]
pop rcx
xchg byte [rsp], dh
add byte [rsi + rbx*2], 0x2b
pop rsi
jb 0x409dd2
xor esi, dword [r9]
xor al, 0x77
mov cl, 0x14
fcom dword [r9]
imul edx, dword [rbx + 0x74786460], -0x7b
push rbx
cmp byte [rdi + 0x5a], bl
scasb al, byte [rdi]
movabs al, byte [0x245b779a2c0538f]
test byte [rcx - 0xf], al
xchg byte [rdi], ch
mov bh, 0x24
and byte [rdx - 0xc], ah
js 0x409e1a
stosd dword [rdi], eax
xor bl, ah
adc eax, 0xb2890142
idiv byte [rsi]
test byte [rax], dh
push rdx
jno 0x409db1
mov cl, 7
ficom word [rdi]
jbe 0x409e60
imul esi, dword [rdx], -0x47
sub dword [rcx], esp
push rcx
pop rdi
rol qword [rax - 0x2f], -0x51
jnp 0x409d97
add byte [rax + 5], dh
add ah, byte [rcx - 0x545d9e80]
adc ah, byte [rdx + 0x61]
int1
mov edx, dword [rax]
push rdx
ljmp [rax + 0x32]
xor byte [rdx + rcx], ch
push 0x442518aa
lodsd eax, dword [rsi]
sub bh, byte ds:[rsi + 0x62653a82]
mov al, 0x54
imul edx, dword [rsi], 0xc6a02c20
pop rbx
and eax, 0xa142a289
fistp qword [rdx]
xor eax, 0x430cb451
fst qword [rbx + rcx*4 - 0x5e]
insd dword [rdi], dx
mov byte [rax], 0xfe
xor ebp, dword [rdx + 0x75]
sbb al, 0x10
or eax, dword [rdx - 0x60]
in eax, dx
movabs al, byte [0x4b54194426520122]
out dx, al
xor dword [rax], edi
or al, 0x5a
and byte [rcx], dl
ror dword [rbx + 0x52], 1
movabs eax, dword [0xe38892ae6e088b40]
xor dl, byte [rbp + 0x6e]
ja 0x409e63
stosd dword [rdi], eax
test edx, edi
fcom dword [rdx - 0x29]
insd dword [rdi], dx
fadd dword [rbx + 0x43]
xchg eax, ebp
add byte [rbx + rbp + 0x30], dh
std
xor al, 0x6c
imul edi, dword [rax + rbp], 0x4a
stc
jg 0x409e78
sub bh, byte [rax - 0x3f]
insd dword [rdi], dx
jle 0x409eab
in al, 0x83
mov edx, 0x46646890
xor dword [rax + rdx*4], eax
and eax, 0x400057b8
sub al, 0x2a
sub ebp, dword [rbx - 0x1dfed52c]
and dword [rax], ebx
or byte [rax], 0x65
test dword [rdx], esi
push -0x25afaf6b
adc al, 0xdf
xor ch, byte [rcx - 0x46]
xor al, 0x11
pop rcx
rol dword [rax + 0x32], 1
out dx, eax
sub ebp, dword [rax + rdi*8 - 0x6d77f7b5]
add dword [rax], esi
cmp eax, dword [rsi]
lea edx, [rax + 0x2c37cd2d]
or esp, dword [rdx - 0x4292bbc9]
shl byte [rdx], cl
xchg eax, esi
push rax
xor al, 0x57
movsd dword [rdi], dword ptr [rsi]
stosb byte [rdi], al
lodsb al, byte [rsi]
jle 0x409f23
sar dword [rbp - 0x79bdffee], cl
rol byte [rdx], 1
pop rax
nop
loop 0x409e79
adc dword [rdx + rdx + 0x2e21c5ef], esp
and dword [rsi + 0x7f], eax
movsxd rdi, dword [rsi + 0x25]
add al, 0x64
and byte [rax], dh
movabs dword [0x661ce16d53780126], eax
sub byte [rsi + rdx*2], dl
cmp byte [rbx + 0x70], bl
push -0x7554d52e
add ebp, dword [rax - 0x4fdb5be6]
cli
movsb byte [rdi], byte ptr [rsi]
in al, 0x82
adc ch, byte [rax]
xor al, byte [rax]
xor dl, byte [rax + 0x354a4415]
xor byte [rax], cl
add al, byte [rdx + 0x64]
mov al, 0x4a
loopne 0x409fa9
int 0x3e
sub eax, dword [rax - 0x5e]
and cl, byte [rsi]
nop
or al, byte [rdx + rbp*4]
jbe 0x409fc3
or esi, dword [rdx - 0x36d3bb6e]
or dword [rbp + 0x21], ecx
adc dword [rip - 0x4d52d9be], edi
adc eax, 0x54884b8d
push rsi
sub byte es:[rcx], cl
js 0x409fa8
movabs byte [0x6dee3260a92e4af8], al
push rsi
stosd dword [rdi], eax
in al, 0x4d
pop rdx
sub byte [rdx + 0x32], bl
add byte [rcx], dh
sub eax, dword [rax]
mov ecx, 0x2949d6c8
test byte [rdi], dl
add byte [rdi - 0x67], al
and dword [rdx + r12*2 - 0xcabce55], 0x71
xchg eax, ecx
in al, 0x53
push r11
xor dword [rdx + 0x78559c82], ecx
cmp bl, dh
stosb byte [rdi], al
sub al, 0x3d
imul edi, dword [rcx], -0x53
add byte [rbx + 0x20b15d80], ah
or dword [rcx], 0xffffffb4
jrcxz 0x409f73
add al, 0xa
jle 0x409fb8
sub dl, byte [rax + 0x47a61000]
and dword [rbp + 0x21], eax
xor dl, cl
add dh, byte [rax + 0x32afc24]
mov al, byte [rbx + 2]
cld
or al, byte [rcx + 0x1aa13441]
push rdx
sub dil, al
in eax, 0xa
or dword [rdx + 0x2a], edi
div byte [rcx]
shl dword [rax], cl
add dl, ch
push rsp
mov al, 0x2a
stosd dword [rdi], eax
jns 0x409f73
call 0x31482148
sbb ebp, dword [rax]
adc dword [rsi - 0x6c], eax
sbb al, byte [rax + rbx*4 + 0x35c4a848]
mov byte [rcx + 0x8083151], 0x8c
lodsb al, byte [rsi]
push rsi
pop rax
push rcx
sbb dword [rax - 0x1a], eax
jo 0x409f9a
add ch, byte [rax + rbp]
push rsp
and dword [rdx - 0x7e], ecx
call 0xffffffff91992077
cwde
xor ah, byte [rsp + rax*2]
add al, 0x9d
sbb eax, 0x5a82996
xor cl, byte [rcx - 0x1d]
rcl esp, -0x6a
cmp dl, ah
jne 0x40a07a
add dl, byte [rax + rdx*2 - 0x5383b2bf]
lodsb al, byte [rsi]
movabs al, byte [0xac168ac2d452e56d]
cmp al, 0xc4
or byte [rbx], ch
sbb bl, dl
cmp ebp, dword [rbx + 0x33]
sub byte [rdx - 0x59], dh
mov ah, 0x68
rcl dword [rdx + 0x4b], 1
insd dword [rdi], dx
insb byte [rdi], dx
xor bh, byte [rax - 0x6c]
movsb byte [rdi], byte ptr [rsi]
xchg eax, ecx
shl eax, 1
push rsi
add eax, dword [rdx - 0x78]
xor edx, dword [r9 + 0x11]
stosd dword [rdi], eax
push 0x5c
push rsp
lodsb al, byte [rsi]
movsb byte [rdi], byte ptr [rsi]
xor byte [rsi + 0x471cd099], bh
and esp, edx
xor eax, 0x8c830c61
sub byte [rsi], bl
out dx, al
test dword [rax + rcx*2], eax
add eax, 0x7b503291
sbb cl, byte [rax]
jmp 0x77a1ccde
jmp 0x40a04d
or ch, byte [rax]
sal byte [r8 - 0x56], 1
test dword [rip + 0x4a2a47ae], eax
adc al, 0xe8
stosd dword [rdi], eax
xchg eax, edx
sahf
mov al, 0x92
or esp, dword [rdi + rsi + 0x65a27d49]
add byte [rdi + rcx*2 + 0x72], dl
outsd dx, dword [rsi]
add byte [rbp + 0x52], 0x33
out dx, al
xlatb
sub eax, 0x70032318
sbb dword [rbx - 0x2c], 0x2a
and dword [rax + 0x61], edi
stc
xor byte [rax - 0x377bfb6b], al
sbb byte [r9 + 0x40d66755], cl
or cl, byte [rdx]
outsb dx, byte [rsi]
mov dh, 0xaf
adc dword [rax], ebx
lodsb al, byte [rsi]
xchg eax, esp
sub eax, 0x766022c2
xor byte [rax], al
xor al, 0xb3
add al, 0x8b
mov byte [rax], spl
out dx, eax
sbb ch, byte [rbp + rax*4 + 0x59]
popfq
pop rdi
mov bh, 0x30
adc edx, dword [rip + 0x546f8536]
jo 0x40a108
xor byte [rbx - 0x5f3f4e29], bh
sbb byte [rdx], dh
xor byte [rsi], dl
xor ah, byte [rcx + 0x14]
xor dword es:[rcx], esp
or dword [rbx], eax
sub edx, dword [rsi + 0x52]
mov esp, 0xc574960a
xor al, byte [rdx + rdx*4 + 0x4a63b289]
enter 0x4121, -0x3f
xchg rax, r10
xor al, 0x12
add dl, ch
out 0x10, eax
cmp al, 0x8a
in eax, dx
jne 0x40a16f
add dl, byte [r9 - 0x79]
xor ah, byte [rax + rcx - 0x77]
sub byte [rdi + 0x4a], bh
and byte [rbp + 0x6593aac4], al
mov ecx, 0x9630a930
enter 0x11aa, -0x38
mov word fs:[rax - 0x7d], es
nop
or dword [rdx + 2], ecx
xor dl, byte [rax + rcx*2]
xor dword [rax + 0x2d], r12d
or al, 0xa8
rol dword es:[rsi], cl
xor ah, byte [rdx]
push r11
leave
push rsi
ror byte [rax + 0x19], 1
push rbx
cmpsd dword [rsi], dword ptr [rdi]
mov word [rax], fs
adc al, 0x4f
imul r12d, dword [rdx], 0x200b046d
je 0x40a1d5
sbb dword [rax], eax
movsb byte [rdi], byte ptr [rsi]
and al, 0xfa
and eax, eax
or byte [rsi - 0x3fa4b6f4], dl
mov word [rsi], ss
push rdx
test byte [rcx - 0x2c], al
sub esi, ebx
std
pop rax
cmc
mov al, 0x68
test eax, 0x217a7645
enter 0x4a11, 0x4a
add byte cs:[rcx + 0x5c3193a2], al
push r8
add byte fs:[rdi], ch
adc byte [rdx - 0x756d9a92], 0x1a
and eax, 0x8401a9b9
sub byte [rsi + 0x18106a42], ch
sbb dword [rax + 0x71], eax
or ah, ah
mov edx, 0x8b69ff62
or bl, byte [rax - 0x3c]
out dx, eax
xchg byte [r10], al
xor dword [rbx + 0x60283410], eax
pop rax
sar qword [r9 + 0x43af8900], 0x24
add byte [rip - 0x7e57cdc6], 0x44
imul ecx, dword [rax + rbx*2], 0
xchg eax, ecx
and byte [rcx], ah
fld st(2)
and al, byte [rdx]
cmp ecx, dword gs:[rdx]
add dword [rax + 0xb], 0x4a9050aa
movabs byte [0x44242c96a2c86411], al
movabs al, byte [0x5017023c2ad2206]
sub ah, byte [rbx]
sub al, byte [rbx + 0x47221988]
xchg eax, ecx
push rax
shl dword [rdx + rbp*2 - 0x67], 1
test byte [rbx], 0x21
add ecx, dword [rdx]
jae 0x40a2b9
insd dword [rdi], dx
sal byte [rax + 0x762dd93], 0x74
jb 0x40a2b3
or dword [rdx], edi
pop rdx
outsb dx, byte [rsi]
or eax, 0x6f6e0770
jae 0x40a285
fistp qword [rax + 0xd3ee60b]
mov bl, 0x2e
jne 0x40a225
sub eax, 0x5bdc6469
imul esi, dword [rcx + 0x38600d00], 9
jns 0x40a2e1
or r10b, r9b
lodsb al, byte [rsi]
int 7
sbb dword [r8], r9d
xor al, 0x37
cdq
or al, 0x5f
sbb edx, dword [rax + 0x4af60b6f]
sub byte ss:[rcx], cl
int3
je 0x40a301
jb 0x40a26c
imul edx, dword [rcx + 0x21], 0xa
sub al, 0x6f
or byte [rbp + 0x7b99ca9d], dh
add eax, 0x166f2419
push rbp
jg 0x40a2a9
xor ch, byte [rsi]
push -0x69172f73
jge 0x40a317
jb 0x40a2bf
pop rbp
movsxd rcx, dword [rdi + 0x566eb954]
pop rsp
mov ebp, 0xd87d116c
sub al, 9
and eax, 0x636a0b43
jb 0x40a295
fiadd word [rdx - 0x75]
movabs eax, dword [0x568e7b68006836]
cwde
pop rsi
js 0x40a2dc
add dword [rbp - 0x6b], ecx
jne 0x40a2ee
xchg eax, edx
add byte [rax], al
sbb ebp, dword [rdx + 0xed34988]
add dword [rdx], eax
xchg ah, ah
in al, dx
sbb al, 1
sbb dword [rax + 0x7234866], edx
push rsp
sbb dword [rdx + 0x20540641], edx
add al, 6
sbb dword [rdx + 0x74743121], edx
out dx, eax
xchg byte [rdx + 0x7f442441], dl
idiv bh
ljmp [rdi + 0xc]
xor cl, al
and dword [rax - 0x36f3bb68], ebx
and byte [rbx - 0x37b1f7fb], al
add edx, edx
or esp, eax
loopne 0x40a374
cmp dword ss:[rbx], edi
jo 0x40a332
sti
sbb byte [rcx], bh
and ch, cl
and byte [rdi], bh
push rsi
add edx, dword [rax + 8]
mov ebx, 0x503c9e48
or bh, bh
add eax, 0x4f27235e
fdivr dword [rdi + 0xe500e50]
je 0x40a3c3
and al, 2
imul edi, dword [rdi], -2
pushfq
mov ecx, 0x7c880c9
call rax
xor byte ss:[rbx + rax*4], 6
add al, 0x7a
nop
or byte [r15], dil
psubusb mm4, qword [rcx + 0x21]
in al, 0x60
inc dword [rdi + rdi + 0x320c8320]
clc
clc
outsb dx, byte [rsi]
add byte [rcx + 0x1904b0e4], bh
mov ds, word [rdi - 0x6fbc1b0e]
add edi, edi
test al, 0x14
test al, 0x14
or al, 0xd9
push rax
jb 0x40a3af
mov dword [rdi], edi
shr byte [rsi], 1
in al, 0x20
adc eax, 0x30
add edx, dword [rax]
mov dh, 0x85
insb byte [rdi], dx
enter -0x6bf9, 0x3f
cwde
movabs al, byte [0x9e9d0f2f584ad94d]
mov ecx, 0x103f90c9
jg 0x40a37c
sahf
nop
sbb eax, 0xa30040b6
call qword [rax + 0x72]
in al, 0xd4
mov dh, 0xd4
mov dh, 9
enter 0x4360, -0x2e
test eax, 0xe03fe0bf
sbb dword [rdx + 0x6cf390b], edx
and byte [rcx + 0x2111459b], dh
iretd
xchg eax, edx
mov esp, esp
cdq
jg 0x40a3bc
adc bh, byte [rdi + 0x114009b8]
out dx, eax
enter -0x6dd2, 0x27
lodsb al, byte [rsi]
leave
jmp 0x40a461
add byte [rbp + 0x17], al
add dword [rdi + 0x4d], edi
ja 0x40a395
sbb al, 0x50
add bl, bl
add esi, dword [rdi]
movabs eax, dword [0xb384a1ba07472622]
adc byte [rdi + 0x300f3fe7], bh
sbb dword [rax + rax*2 - 0x18], esp
call 0xffffffff957310be
push rbx
jmp 0xfffffffff046e4b4
clc
jg 0x40a437
sbb al, 0x64
nop
add eax, edi
clc
add byte [rdx], al
xor cl, al
nop
pushfq
adc byte [rax + 0x4393c916], bl
clc
clc
pop r14
fadd st(3)
add dword [rcx], eax
add byte [rax], dh
add byte [rax], dh
xchg eax, edx
test al, 1
or ah, al
add byte es:[rcx + 0x47], al
add edx, edx
pop rbp
cmp byte [rdi + 0x10], 0x3f
or al, al
enter -0x37c8, 0x20
mov eax, 0xb0bf0150
nop
popfq
mov esp, 0x17300115
sbb eax, 0x34e0c216
mov edi, 0xe0471107
sub dword [rbx - 0x7416ff85], ebx
add bh, byte [rdi - 0x349efee2]
pop rax
and al, 0xbb
jg 0x40a430
mov bl, 0xe
jb 0x40a48a
cwde
lcall [rdi]
jns 0x40a4a9
sbb eax, dword [rax + 9]
jg 0x40a42e
xchg eax, ebx
add dword [rax], eax
xchg eax, ecx
sbb al, 0x61
clc
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xff], dl
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x22f7fdea], ecx
and byte [rax], bl
mov ecx, 0xc785738d
push rax
movsxd rax, dword [rcx]
add byte [rbp + 0x8000046], bl
xchg eax, ebp
add al, byte [rax]
add al, 0
call 0x40a5dc
