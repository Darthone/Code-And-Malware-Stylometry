xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6020bf
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400cd0
mov eax, 0
test rax, rax
je 0x400cd0
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400d18
mov eax, 0
test rax, rax
je 0x400d18
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x2015c9], 0
jne 0x400d3a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x2015b6], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400d50
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400d4b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
sub rsp, 0x20
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
lea rax, [rbp - 0x10]
mov rsi, rax
mov edi, obj.std::cin
call sym.std::istream::operator__
mov dword [rbp - 0xc], 1
mov eax, dword [rbp - 0x10]
cmp dword [rbp - 0xc], eax
jg 0x400ddb
mov esi, str.Case__
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
mov rdx, rax
mov eax, dword [rbp - 0xc]
mov esi, eax
mov rdi, rdx
call 0x400b40
mov esi, 0x401373
mov rdi, rax
call sym.std::operator___std::char_traits_char__
lea rax, [rbp - 0x11]
mov rdi, rax
call sym.Problem::solve
add dword [rbp - 0xc], 1
jmp 0x400d95
mov eax, 0
mov rcx, qword [rbp - 8]
xor rcx, qword fs:[0x28]
je 0x400df4
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
cmp dword [rbp - 4], 1
jne 0x400e31
cmp dword [rbp - 8], 0xffff
jne 0x400e31
mov edi, obj.std::__ioinit
call sym.std::ios_base::Init::Init
mov edx, obj.__dso_handle
mov esi, obj.std::__ioinit
mov edi, sym.std::ios_base::Init::_Init
call sym.imp.__cxa_atexit
nop
leave
ret
push rbp
mov rbp, rsp
mov esi, 0xffff
mov edi, 1
call sym.__static_initialization_and_destruction_0
pop rbp
ret
nop
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x88
mov qword [rbp - 0x88], rdi
mov rax, qword fs:[0x28]
mov qword [rbp - 0x18], rax
xor eax, eax
lea rax, [rbp - 0x74]
mov rsi, rax
mov edi, obj.std::cin
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0x70]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0x6c]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0x68]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0x64]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0x60]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0x5c]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
lea rdx, [rbp - 0x60]
lea rax, [rbp - 0x68]
mov rsi, rdx
mov rdi, rax
call sym.std::max_int_
mov rdx, rax
lea rax, [rbp - 0x70]
mov rsi, rdx
mov rdi, rax
call sym.std::max_int_
mov eax, dword [rax]
mov dword [rbp - 0x54], eax
mov edx, dword [rbp - 0x70]
mov eax, dword [rbp - 0x68]
add edx, eax
mov eax, dword [rbp - 0x60]
add eax, edx
sub eax, dword [rbp - 0x54]
cmp eax, dword [rbp - 0x54]
jge 0x400f49
mov esi, str.IMPOSSIBLE
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
mov esi, sym.std::endl_char_std::char_traits_char__
mov rdi, rax
call sym.std::ostream::operator__
jmp 0x4010df
mov eax, dword [rbp - 0x70]
mov dword [rbp - 0x50], eax
mov eax, dword [rbp - 0x68]
mov dword [rbp - 0x4c], eax
mov eax, dword [rbp - 0x60]
mov dword [rbp - 0x48], eax
mov byte [rbp - 0x20], 0x52
mov byte [rbp - 0x1f], 0x59
mov byte [rbp - 0x1e], 0x42
mov eax, dword [rbp - 0x70]
cmp eax, dword [rbp - 0x54]
je 0x400fdd
mov eax, dword [rbp - 0x68]
cmp eax, dword [rbp - 0x54]
jne 0x400fa7
lea rax, [rbp - 0x20]
lea rdx, [rax + 1]
lea rax, [rbp - 0x20]
mov rsi, rdx
mov rdi, rax
call sym.std::swap_char_
lea rax, [rbp - 0x50]
lea rdx, [rax + 4]
lea rax, [rbp - 0x50]
mov rsi, rdx
mov rdi, rax
call sym.std::swap_int_
jmp 0x400fdd
mov eax, dword [rbp - 0x60]
cmp eax, dword [rbp - 0x54]
jne 0x400fdd
lea rax, [rbp - 0x20]
lea rdx, [rax + 2]
lea rax, [rbp - 0x20]
mov rsi, rdx
mov rdi, rax
call sym.std::swap_char_
lea rax, [rbp - 0x50]
lea rdx, [rax + 8]
lea rax, [rbp - 0x50]
mov rsi, rdx
mov rdi, rax
call sym.std::swap_int_
mov dword [rbp - 0x58], 0
mov eax, dword [rbp - 0x50]
cmp eax, dword [rbp - 0x58]
jle 0x40109a
lea rax, [rbp - 0x75]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rdx, [rbp - 0x75]
lea rax, [rbp - 0x40]
mov esi, 0x40136b
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rax, [rbp - 0x75]
mov rdi, rax
call sym.std::allocator_char_::_allocator
movzx eax, byte [rbp - 0x20]
movsx edx, al
lea rax, [rbp - 0x40]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
mov eax, dword [rbp - 0x4c]
cmp eax, dword [rbp - 0x58]
jle 0x40104f
movzx eax, byte [rbp - 0x1f]
movsx edx, al
lea rax, [rbp - 0x40]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
mov eax, dword [rbp - 0x50]
sub eax, dword [rbp - 0x58]
lea edx, [rax - 1]
mov eax, dword [rbp - 0x48]
cmp edx, eax
jge 0x401074
movzx eax, byte [rbp - 0x1e]
movsx edx, al
lea rax, [rbp - 0x40]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
lea rax, [rbp - 0x40]
mov rsi, rax
mov edi, obj.std::cout
call sym.std::operator___char_std::char_traits_char__std::allocator_char__
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
add dword [rbp - 0x58], 1
jmp 0x400fe4
mov esi, sym.std::endl_char_std::char_traits_char__
mov edi, obj.std::cout
call sym.std::ostream::operator__
jmp 0x4010df
mov rbx, rax
lea rax, [rbp - 0x75]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
mov rbx, rax
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
mov rax, qword [rbp - 0x18]
xor rax, qword fs:[0x28]
je 0x4010f3
call sym.imp.__stack_chk_fail
add rsp, 0x88
pop rbx
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rax, qword [rbp - 8]
mov edx, dword [rax]
mov rax, qword [rbp - 0x10]
mov eax, dword [rax]
cmp edx, eax
jge 0x40111f
mov rax, qword [rbp - 0x10]
jmp 0x401123
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
mov rax, qword [rbp - 0x18]
mov rdi, rax
call sym.std::move_char__
movzx eax, byte [rax]
mov byte [rbp - 9], al
mov rax, qword [rbp - 0x20]
mov rdi, rax
call sym.std::move_char__
movzx edx, byte [rax]
mov rax, qword [rbp - 0x18]
mov byte [rax], dl
lea rax, [rbp - 9]
mov rdi, rax
call sym.std::move_char__
movzx edx, byte [rax]
mov rax, qword [rbp - 0x20]
mov byte [rax], dl
nop
mov rax, qword [rbp - 8]
xor rax, qword fs:[0x28]
je 0x4011a3
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
mov rax, qword [rbp - 0x18]
mov rdi, rax
call sym.std::move_int__
mov eax, dword [rax]
mov dword [rbp - 0xc], eax
mov rax, qword [rbp - 0x20]
mov rdi, rax
call sym.std::move_int__
mov edx, dword [rax]
mov rax, qword [rbp - 0x18]
mov dword [rax], edx
lea rax, [rbp - 0xc]
mov rdi, rax
call sym.std::move_int__
mov edx, dword [rax]
mov rax, qword [rbp - 0x20]
mov dword [rax], edx
nop
mov rax, qword [rbp - 8]
xor rax, qword fs:[0x28]
je 0x401220
call sym.imp.__stack_chk_fail
leave
ret
nop word cs:[rax + rax]
nop dword [rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200ba6]
push rbp
lea rbp, [rip + 0x200bae]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401286
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401270
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, 0
add byte [rax], al
add eax, 0x6000000
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], cl
or byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
or al, byte [rax]
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
dec dword [rcx + 0x4d]
push r8
push r11
push rbx
add byte [r8], r8b
jae 0x4013d5
and byte [rbx], ah
add byte [rdx], bh
and byte [rax], al
add byte [rax], al
add dword [rbx], ebx
add edi, dword [rbx]
je 0x40137e
add byte [rax], al
or eax, 0xb8000000
idiv edi
inc eax
add byte [rax], al
add al, bh
clc
call qword [rax - 0x12000000]
stc
push qword [rax]
add dword [rax], eax
add byte [rsi - 6], bh
push rax
add dword [rax], eax
add byte [rdx + rdi*8 + 0x210ffff], bh
add byte [rax], al
sar dl, cl
dec dword [rax]
add dword [rax], eax
add byte [rbp + 0x50fffffd], al
add dword [rax], eax
add byte [rbp + 0x70fffffd], ch
add dword [rax], eax
add byte [rbx - 0x6f000003], bh
add dword [rax], eax
add byte [rip - 0x4f000002], ch
add dword [rax], eax
add byte [rbx], bh
call rax
add dword [rax], eax
add byte [rax + 0x30fffffe], bh
add al, byte [rax]
add byte [rax], ch
js section_end.GNU_EH_FRAME
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40140f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
clc
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40143f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
idiv bh
push qword [rax]
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x401481
add esp, dword [rax]
or al, 0x40
add byte [rbx], al
sbb ecx, dword [rdi + rax]
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
ret 0xfff9
push qword [rbx + 0x4000002]
or al, 0x16
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add qword [rbx], 3
cmpsb byte [rsi], byte ptr [rdi]
add cl, byte [rdi + rax]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
mov word [rax], es
add byte [rax], al
mov dh, 0xf8
call qword [rax]
adc byte [rsi + 0x60d4302], al
add cl, byte [rbx + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
lodsb al, byte [rsi]
add byte [rax], al
add byte [rip + 0x28fffffc], ch
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
movsxd rcx, dword [rdi + rax]
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
int3
add byte [rax], al
add byte [rip + 0xefffffc], dh
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
in al, dx
add byte [rax], al
add byte [rbx], ah
cld
push qword [rdx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add ch, byte [rbp + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
or al, 1
add byte [rax], al
jne 0x40152e
dec dword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
sub al, 1
add byte [rax], al
movsxd rdi, esp
ljmp [rdi]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add ch, byte [rdx + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add qword [rax], r8
add byte [rsi + 0x3efffff8], al
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
jns 0x40158f
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
insb byte [rdi], dx
add dword [rax], eax
add byte [rax + rdi*8 + 0x15ffff], ah
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
push rax
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx + rax - 0x3800000], cl
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x4015ea
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
add dword [rax], eax
add byte [rax + 0x2fffffc], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
int3
add dword [rax], eax
add dl, al
add eax, dword [rip - 0x1cfffb1f]
add ebx, dword [rax - 5]
add al, 0
fiadd dword [rbx + rdi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, 0x40
add byte [rax], al
xor al, 0xe
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea eax, [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
stosb byte [rdi], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rdx + rdx + 0x40], ah
add byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x407e82
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], ch
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 9], ah
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4008], cl
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rax + 8], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xb], dl
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xb], ah
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xb], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400b], al
add byte [rax], al
add byte [rsi + 0x400b], dl
add byte [rax], al
add byte [rsi + 0x400b], ah
add byte [rax], al
add byte [rsi + 0x400b], dh
add byte [rax], al
add dh, al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
out 0xb, al
add byte [rax], al
add byte [rax], al
add dh, dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402130
je 0x402139
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x402147
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x402144
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002d000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax], ch
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax + 8], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax + 0x4008], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax], bl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, byte [rax]
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or eax, dword [rax]
adc byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
xor byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400c6000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rdx + rdx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc byte [rax], al
mov al, 0x12
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rax + 0x13], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add al, dh
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
or al, 0x16
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], dl
call 0x4082fa
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
test al, 0x20
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400c], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], ah
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rbx], bl
add al, dh
and ah, byte [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xd], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
call 0x408492
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], dl
add byte [rax + 0x4012], bh
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x4012], bh
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, ah
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x4012], bh
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, ch
add byte [rax], al
add byte [rcx], al
add byte [rbx], bl
add cl, dh
and ah, byte [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
std
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rdx + rdx + 0x40], bh
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, 1
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
rcl byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add cl, al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add qword [r8], rax
add byte [rcx], al
add byte [rax], dl
add dl, al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rbx
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add ah, al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jp 0x402573
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
enter 0x4012, 0
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add ah, cl
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov esp, 0x1000001
add byte [rax], dl
add al, dl
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
fld qword [rcx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rdx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
fcom dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and dword [rdx], eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
fcom qword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [r8]
add byte [rcx], al
add byte [rax], dl
add al, ah
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add ah, ah
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jle 0x402634
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
call 0x40664f
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add ah, ch
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add al, dh
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
in eax, dx
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add ah, dh
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x1000003
add byte [rax], dl
add al, bh
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp eax, 0x1000003
add byte [rax], dl
add ah, bh
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword gs:[rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax], al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rbx], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
add al, 0x13
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 3
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
or byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd qword [rbx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
or al, 0x13
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax], dl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax + rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rbx + rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax], bl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jle 0x40276e
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb al, 0x13
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
stosb byte [rdi], al
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax], ah
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rax + rax], cl
add byte [rcx], al
add byte [rax], dl
add byte [rbx + rdx], ah
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax], ch
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
sub al, 0x13
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
xor byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
insd dword [rdi], dx
add eax, 0x10000
adc byte [rax], al
xor al, 0x13
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, ebx
add eax, 0x10000
adc byte [rax], al
cmp byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ecx, 0x1000005
add byte [rax], dl
add byte [rbx + rdx], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loop 0x402847
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rsi], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc r8d, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc rax, qword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc r8, qword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rsi], 0
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x13], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000006
add byte [rax], dl
add byte [rax + 0x13], bl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, cl
add byte [rax], al
add al, byte [rax]
add dh, dh
or eax, 0x40
add byte [rax], al
add byte ds:[rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
add byte [rax], al
add al, byte [rax]
add byte [rsi + rcx], dh
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add dword [rax], eax
adc al, byte [rax]
or byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], ah
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 7], ch
add byte [rcx], dl
add byte [rax + 0x13], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 7], al
add byte [rax], al
add dword [rax], eax
sbb dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], dl
add byte [rax], al
add byte [rax], al
adc al, 0
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x4089d2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 7], bh
add byte [rax], al
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
or dword [rax], eax
add byte [rax], ah
add byte [rdx], bl
add byte [rax + 0x6020], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x11000007], al
add byte [rbx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
sbb byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cdq
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 7
add byte [rax], al
and al, byte [rax]
add byte [rbx], dh
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
jb 0x402a32
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x4012], ah
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
or dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jrcxz 0x402a89
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
verr word [rdx + rdx + 0x40]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rdi], 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 8
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp ecx, dword [rax]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0x400b], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 8], bh
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esi
or byte [rax], al
add byte [rdx], ah
add byte [rsi], cl
add byte [rdx + 0xe], cl
add byte [rax], al
add byte [rax], al
add byte [rbx + 2], dh
add byte [rax], al
add byte [rdx + 0x12000008], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ch
or byte [rax], al
add byte [rcx], dl
add byte [rax], dl
add byte [rax + 0x4012], dh
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
dec byte [rax]
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rcx], cl
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
test al, 0x20
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x12000009], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 9], ch
add byte [rax], al
adc dword [rdx], eax
sbb al, byte [rax]
mov eax, 0x6020
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 9], bh
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
loopne 0x402bfb
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x11000009], dl
add bl, byte [rdx]
add byte [rax + 0x6020], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x12000009], bl
add byte [rsi], cl
add byte [rax], dh
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte gs:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x10000009], ch
add byte [rbx], bl
add byte [rax + 0x6020], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x22000009], bh
add byte [rsi], cl
add ch, bh
adc byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ror dword [rcx], 1
add byte [rax], al
and al, byte [rax]
add byte [rip + 0x4011], ah
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
or al, byte [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rbp + 0x4011], ah
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0xa], dl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
imul ecx, dword [rdx], 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 7], ah
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
clc
and ah, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rdx], 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1200000a], ah
add byte [rax], al
add al, dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jmp 0x12402d17
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
or eax, dword [rax]
add byte [rax], dl
add byte [rdx], bl
add byte [rax + 0x6020], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0xb], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rbx
or eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rcx], bh
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
or eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
or al, 0
add byte [rdx], ah
add byte [rsi], cl
add byte [rbx + 0x4011], dh
add byte [rax], al
add byte [rdi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0xc
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rsi + 0xd], ah
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rcx + 0x12000009], ch
add byte [rbx], cl
add byte [rax], dl
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x72], ah
je 0x402e70
je 0x402e74
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402e26
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402ea4
jb 0x402eaa
pop rdi
jne 0x402eb3
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402ead
je 0x402ea9
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402ec9
jb 0x402ecf
pop rdi
jne 0x402ed8
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402edb
jns 0x402ecb
outsb dx, byte gs:[rsi]
je 0x402ee2
jns 0x402e72
jb 0x402ed6
insd dword [rdi], dx
pop rdi
jne 0x402ee8
insd dword [rdi], dx
jns 0x402e7e
pop rdi
pop rdi
jb 0x402ee4
insd dword [rdi], dx
pop rdi
jne 0x402ef6
insd dword [rdi], dx
jns 0x402eeb
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402ef6
jns 0x402ef6
outsb dx, byte gs:[rsi]
je 0x402f0d
jns 0x402e9d
sub eax, 0x6c616d73
insb byte [rdi], dx
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x5a], bl
push rbx
je 0x402efa
xor dword [rcx], edi
jo 0x402f1b
movsxd rsp, dword gs:[rbp + 0x77]
imul esi, dword [rbx + 0x65], 0x6e6f635f
jae 0x402f33
jb 0x402f36
movsxd rsi, dword [rax + rax + 0x5f]
pop rdx
push rbx
je 0x402f15
xor dword [rbx], esi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x402f34
jb 0x402f3f
add byte [rdi + 0x5a], bl
push rbx
je 0x402f2a
imul esp, dword ss:[rdi + 0x6e], 0x65726f
pop rdi
pop rdx
push rbx
je 0x402f37
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x402f5e
movsxd rdi, dword [rax + 0x78]
xor r14b, byte [rcx]
pop rdi
pop rdi
jne 0x402f79
je 0x402f6e
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x5f]
jo 0x402f85
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x5a5f0045
push rbx
je 0x402f6d
xor dword [rax], esi
jb 0x402f88
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402f7f
xor dword [rcx], esi
je 0x402fa9
jns 0x402f98
je 0x402faa
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402f92
xor dword [rax], esi
outsd dx, dword fs:[rsi]
jo 0x402fc1
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402f8a
xor eax, 0x65676572
js 0x402fbf
movsxd rbp, dword [rdi + 0x6e]
jae 0x402fd9
outsb dx, byte [rsi]
je 0x402fdc
xor rax, 0x73616369
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x402fa9
xor eax, 0x65676572
js 0x402fde
movsxd rbp, dword [rdi + 0x6e]
jae 0x402ff8
outsb dx, byte [rsi]
je 0x402ffb
outsb dx, byte ss:[rsi]
outsd dx, dword [rsi]
jae 0x403003
jae 0x402fd6
add byte [rdi + 0x5a], bl
push rbx
je 0x402fc9
xor eax, 0x65676572
js 0x402ffe
movsxd rbp, dword [rdi + 0x6e]
jae 0x403018
outsb dx, byte [rsi]
je 0x40301b
cmp byte [rdi + 0x70], r13b
je 0x403017
insd dword [rdi], dx
imul edi, dword [rdx + 0x65], 0x5a5f0045
push rbx
je 0x402feb
xor eax, 0x65676572
js 0x403020
movsxd rbp, dword [rdi + 0x6e]
jae 0x40303a
outsb dx, byte [rsi]
je 0x40303d
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x403038
add byte [r15 + 0x5a], r11b
push rbx
je 0x40300c
xor eax, 0x65676572
js 0x403041
movsxd rbp, dword [rdi + 0x6e]
jae 0x40305b
outsb dx, byte [rsi]
je 0x40305e
xor qword [rax], r14
push r11
movsxd rsi, dword [rdx + 0x69]
jo 0x40306c
add byte [r15 + 0x5a], r11b
push rbx
je 0x403031
xor eax, 0x65676572
js 0x403066
movsxd rbp, dword [rdi + 0x6e]
jae 0x403080
outsb dx, byte [rsi]
je 0x403083
xor rax, 0x69736162
movsxd rax, dword [rbp]
pop rdi
pop rdx
push rbx
je 0x403050
xor eax, 0x65676572
js 0x403085
movsxd rbp, dword [rdi + 0x6e]
jae 0x40309f
outsb dx, byte [rsi]
je 0x4030a2
cmp byte [rbp + 0x78], r12b
je 0x40309a
outsb dx, byte [rsi]
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x403072
xor eax, 0x65676572
js 0x4030a7
movsxd rbp, dword [rdi + 0x6e]
jae 0x4030c1
outsb dx, byte [rsi]
je 0x4030c4
xor r12, qword [rcx + 0x77]
imul eax, dword [rbp], 0x5f
pop rdx
push rbx
je 0x40308f
xor eax, 0x65676572
js 0x4030c4
movsxd rbp, dword [rdi + 0x6e]
jae 0x4030de
outsb dx, byte [rsi]
je 0x4030e1
xor al, 0x67
jb 0x4030d8
jo 0x4030ba
add byte [rdi + 0x5a], bl
push rbx
je 0x4030ad
xor eax, 0x65676572
js 0x4030e2
movsxd rbp, dword [rdi + 0x6e]
jae 0x4030fc
outsb dx, byte [rsi]
je 0x4030ff
xor rax, 0x65726765
jo 0x4030d9
add byte [rdi + 0x5a], bl
push rbx
je 0x4030cc
xor eax, 0x65676572
js 0x403101
movsxd rbp, dword [rdi + 0x6e]
jae 0x40311b
outsb dx, byte [rsi]
je 0x40311e
xor qword [rbx], r14
insd dword [rdi], dx
je 0x403115
push 0x6665645f
jne 0x403126
je 0x403101
add byte [rdi + 0x5a], bl
push rbx
je 0x4030f4
xor eax, 0x65676572
js 0x403129
movsxd rbp, dword [rdi + 0x6e]
jae 0x403143
outsb dx, byte [rsi]
je 0x403146
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40313d
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x40311c
xor eax, 0x65676572
js 0x403151
movsxd rbp, dword [rdi + 0x6e]
jae 0x40316b
outsb dx, byte [rsi]
je 0x40316e
xor qword [rbx], r14
insd dword [rdi], dx
je 0x403165
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x403144
xor eax, 0x65676572
js 0x403179
movsxd rbp, dword [rdi + 0x6e]
jae 0x403193
outsb dx, byte [rsi]
je 0x403196
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40318d
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
ja 0x403179
add byte [rdi + 0x5a], bl
push rbx
je 0x40316c
xor eax, 0x65676572
js 0x4031a1
movsxd rbp, dword [rdi + 0x6e]
jae 0x4031bb
outsb dx, byte [rsi]
je 0x4031be
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4031b5
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
ja 0x4031a1
add byte [rdi + 0x5a], bl
push rbx
je 0x403194
xor eax, 0x65676572
js 0x4031c9
movsxd rbp, dword [rdi + 0x6e]
jae 0x4031e3
outsb dx, byte [rsi]
je 0x4031e6
cmp qword [rbp + 0x61], r13
je 0x4031dc
push 0x796e615f
add byte [r15 + 0x5a], r11b
push rbx
je 0x4031b7
xor eax, 0x65676572
js 0x4031ec
movsxd rbp, dword [rdi + 0x6e]
jae 0x403206
outsb dx, byte [rsi]
je 0x403209
xor qword [rbp*2 + 0x68637461], r14
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
je 0x403202
outsb dx, byte [rsi]
jne 0x403212
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x4031e0
xor eax, 0x65676572
js 0x403215
movsxd rbp, dword [rdi + 0x6e]
jae 0x40322f
outsb dx, byte [rsi]
je 0x403232
xor qword [rsi], r14
insd dword [rdi], dx
je 0x403229
push 0x6e6f635f
je 0x403236
outsb dx, byte [rsi]
jne 0x40323f
jne 0x403245
add byte [r15 + 0x5a], r11b
push rbx
je 0x40320b
xor eax, 0x65676572
js 0x403240
movsxd rbp, dword [rdi + 0x6e]
jae 0x40325a
outsb dx, byte [rsi]
je 0x40325d
xor qword [rsi], r14
insd dword [rdi], dx
je 0x403254
push 0x6572705f
jbe 0x403257
jbe 0x40325c
imul ebp, dword [rbp + rax*2], 0x534e5a5f
je 0x403236
xor eax, 0x65676572
js 0x40326b
movsxd rbp, dword [rdi + 0x6e]
jae 0x403285
outsb dx, byte [rsi]
je 0x403288
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x403289
je 0x40327e
jne 0x403291
je 0x40326c
add byte [rdi + 0x5a], bl
push rbx
je 0x40325f
xor eax, 0x65676572
js 0x403294
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032ae
outsb dx, byte [rsi]
je 0x4032b1
xor qword [rax], r14
outsw dx, word [rsi]
jb 0x4032b2
je 0x4032a7
jae 0x4032af
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x403284
xor eax, 0x65676572
js 0x4032b9
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032d3
outsb dx, byte [rsi]
je 0x4032d6
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x4032d7
je 0x4032cc
outsb dx, byte [rsi]
outsd dx, dword [rsi]
pop rdi
movsxd rbp, dword [rdi + 0x70]
jns 0x4032ba
add byte [rdi + 0x5a], bl
push rbx
je 0x4032ad
xor eax, 0x65676572
js 0x4032e2
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032fc
outsb dx, byte [rsi]
je 0x4032ff
xor qword [rdi], r14
outsw dx, word [rsi]
jb 0x403300
je 0x4032f5
imul si, word [rdx + 0x73], 0x5f74
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
jns 0x4032e6
add byte [rdi + 0x5a], bl
push rbx
je 0x4032d9
xor eax, 0x65676572
js 0x40330e
movsxd rbp, dword [rdi + 0x6e]
jae 0x403328
outsb dx, byte [rsi]
je 0x40332b
xor qword [rbx], r14
jb 0x403330
outsd dx, dword [rsi]
jb 0x403320
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x40332d
add byte [r15 + 0x5a], r11b
push rbx
je 0x403301
xor eax, 0x65676572
js 0x403336
movsxd rbp, dword [rdi + 0x6e]
jae 0x403350
outsb dx, byte [rsi]
je 0x403353
xor qword [rcx], r14
jb 0x403358
outsd dx, dword [rsi]
jb 0x403348
movsxd rsi, dword [rcx + rdi*2 + 0x70]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x403327
xor eax, 0x65676572
js 0x40335c
movsxd rbp, dword [rdi + 0x6e]
jae 0x403376
outsb dx, byte [rsi]
je 0x403379
xor qword [rdx], r14
jb 0x40337e
outsd dx, dword [rsi]
jb 0x40336e
jae 0x403375
jo 0x40337a
add byte [r15 + 0x5a], r11b
push rbx
je 0x40334e
xor eax, 0x65676572
js 0x403383
movsxd rbp, dword [rdi + 0x6e]
jae 0x40339d
outsb dx, byte [rsi]
je 0x4033a0
xor qword [rbx], r14
jb 0x4033a5
outsd dx, dword [rsi]
jb 0x403395
movsxd rbp, dword [rbx + 0x72]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x403376
xor eax, 0x65676572
js 0x4033ab
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033c5
outsb dx, byte [rsi]
je 0x4033c8
xor qword [rcx], r14
jb 0x4033cd
outsd dx, dword [rsi]
jb 0x4033bd
jb 0x4033c2
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40339c
xor eax, 0x65676572
js 0x4033d1
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033eb
outsb dx, byte [rsi]
je 0x4033ee
xor qword [rcx], r14
jb 0x4033f3
outsd dx, dword [rsi]
jb 0x4033e3
jo 0x4033e7
jb 0x4033ed
outsb dx, byte [rsi]
add byte [r15 + 0x5a], r11b
push rbx
je 0x4033c2
xor eax, 0x65676572
js 0x4033f7
movsxd rbp, dword [rdi + 0x6e]
jae 0x403411
outsb dx, byte [rsi]
je 0x403414
xor qword [rcx], r14
jb 0x403419
outsd dx, dword [rsi]
jb 0x403409
jb 0x40340e
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4033e8
xor eax, 0x65676572
js 0x40341d
movsxd rbp, dword [rdi + 0x6e]
jae 0x403437
outsb dx, byte [rsi]
je 0x40343a
xor qword [0x726f7272], r14
pop rdi
jb 0x403437
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x403411
xor eax, 0x65676572
js 0x403446
movsxd rbp, dword [rdi + 0x6e]
jae 0x403460
outsb dx, byte [rsi]
je 0x403463
xor qword [rcx], r14
jb 0x403468
outsd dx, dword [rsi]
jb 0x403458
jb 0x40345c
outsb dx, byte [rsi]
add byte gs:[r15d + 0x5a], r11b
push rbx
je 0x403437
xor eax, 0x65676572
js 0x40346c
movsxd rbp, dword [rdi + 0x6e]
jae 0x403486
outsb dx, byte [rsi]
je 0x403489
xor qword [rcx], r14
jb 0x40348e
outsd dx, dword [rsi]
jb 0x40347e
jae 0x403491
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40345d
xor eax, 0x65676572
js 0x403492
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034ac
outsb dx, byte [rsi]
je 0x4034af
xor qword [rip + 0x6f727265], r14
jb 0x4034a4
jb 0x4034af
jo 0x4034b1
je 0x403494
add byte [rdi + 0x5a], bl
push rbx
je 0x403487
xor eax, 0x65676572
js 0x4034bc
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034d6
outsb dx, byte [rsi]
je 0x4034d9
xor qword [rsi], r14
jb 0x4034de
outsd dx, dword [rsi]
jb 0x4034ce
movsxd rbp, dword [rdi + 0x6d]
jo 0x4034e0
js 0x4034e0
je 0x4034f2
add byte [r15 + 0x5a], r11b
push rbx
je 0x4034b2
xor eax, 0x65676572
js 0x4034e7
movsxd rbp, dword [rdi + 0x6e]
jae 0x403501
outsb dx, byte [rsi]
je 0x403504
xor qword [rcx], r14
jb 0x403509
outsd dx, dword [rsi]
jb 0x4034f9
jae 0x403510
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4034df
pop rdi
pop rdi
je 0x40350e
imul ebp, dword [rsp + rcx*2 + 0x31], 0x5f535f39
imul ebp, dword [rsi + 0x76], 0x64696c61
pop rdi
jae 0x403533
je 0x403527
pop rdi
imul esp, dword [rbp + rax*2], 0x31345a5f
pop rdi
pop rdi
jae 0x403543
je 0x40353b
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x403549
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x40355f
jb 0x403562
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x403577
pop rdi
pop r15
insd dword [rdi], dx
imul ebp, dword [rsi], 0x52465f5f
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4035ba
jns 0x4035ba
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4035cb
jns 0x4035cb
jae 0x4035e2
jb 0x4035e5
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
push rbx
je 0x4035b3
movsxd rbp, dword [rcx + 0x6e]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x4035de
imul eax, dword [rax + 0x40], 0x42494c47
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x4035e1
jae 0x403626
jo 0x4035fb
movsxd rax, dword [rbp + 0x76]
push rdx
push rsp
pop rdi
push rbx
xor dword [rdi], ebx
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x403649
jb 0x40364c
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x40363e
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x40365f
jae 0x4035ef
pop rdi
pop rdx
push rbx
je 0x40362d
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x403694
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x403699
pop rdi
je 0x4036a1
js 0x4036a7
je 0x403680
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x40368b
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x4036e0
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5a], bl
push rax
jb 0x403704
insb byte [rdi], dx
insd dword [rdi], dx
xor eax, 0x766c6f73
jbe 0x4036a2
pop rdi
pop rdx
push rbx
je 0x403713
jae 0x4036f2
push rbx
je 0x4036dd
xor dword [rbx + 0x68], esp
jb 0x403711
je 0x403726
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x4036f1
xor esp, dword [rdx + 0x61]
jae 0x40372e
movsxd rbx, dword [rdi + 0x6f]
jae 0x40373e
jb 0x403731
insd dword [rdi], dx
movsxd rdx, dword [r15 + rbx*2 + 0x45]
push rbx
xor eax, 0x634b505f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop r15
jae 0x403761
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x403762
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403777
pop rdi
jae 0x40378d
jb 0x403790
add byte [rdi + 0x5a], bl
push rbx
je 0x40375a
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403799
movsxd rbx, dword [rdi + 0x73]
je 0x4037a7
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4037a2
je 0x4037b7
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rbp + 0x76], r8d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5f], bl
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x4037ac
movsxd rbp, dword [rdi + 0x75]
je 0x4037bd
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
jae 0x4037fe
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5f5f0074
jae 0x40381f
pop rdi
jae 0x403823
jb 0x403826
add byte [rdi + 0x5a], bl
push rbx
je 0x4037eb
insd dword [rdi], dx
js 0x403805
imul eax, dword [rbp + 0x52], 0x535f544b
xor bl, byte [rdi + 0x53]
xor bl, byte [rdi]
pop rdi
pop rdx
push rbx
je 0x403802
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x403837
push r10
movsxd rax, dword [rbp + 0x4f]
push rbx
je 0x40380c
jb 0x403843
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x403847
pop rdi
jb 0x40384a
jb 0x40384e
outsb dx, byte [rsi]
movsxd rsp, dword [rbp + 0x49]
push rsp
pop rdi
xor al, 0x74
jns 0x403864
push r11
xor bl, byte [rdi]
pop rdi
pop rdi
jae 0x403873
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403850
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x403885
push r10
imul eax, dword [rbp + 0x4f], 0x3174534e
jb 0x403891
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x403895
pop rdi
jb 0x403898
jb 0x40389c
outsb dx, byte [rsi]
movsxd rsp, dword [rbp + 0x49]
push rsp
pop rdi
xor al, 0x74
jns 0x4038b2
push r11
xor bl, byte [rdi]
pop rdi
pop rdx
push rbx
movsxd rax, dword [r13 + 0x44]
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
imul esi, dword [rdx + 0x73], 0x40695245
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x4038c8
push rax
push rdx
push rbx
outsd dx, dword [rsi]
push rbx
pop rdi
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x4038d2
outsb dx, byte gs:[rsi]
insb byte [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40390c
je 0x403921
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x4038ec
xor esp, dword [rdx + 0x61]
jae 0x403929
movsxd rbx, dword [rdi + 0x6f]
jae 0x403939
jb 0x40392c
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x40391e
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x40395d
movsxd rbx, dword [rdi + 0x73]
je 0x40396b
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403966
je 0x40397b
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [r13 + 0x50], eax
movsxd rdx, dword [r10 + 0x4b]
push rbx
xor ebx, dword [rdi + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x403999
add byte [rdi + 0x5a], bl
push rbx
movsxd rax, dword [r13 + 0x43]
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
js 0x4039d0
pop rdi
jo 0x4039c0
jb 0x4039d0
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
push rbx
je 0x4039e5
jae 0x4039c4
movsxd rdx, dword [rbx + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4039e4
je 0x4039f9
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
push rdx
push rbx
je 0x4039c9
xor esp, dword [rdx + 0x61]
jae 0x403a06
movsxd rbx, dword [rdi + 0x6f]
jae 0x403a16
jb 0x403a09
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
push rdx
push rbx
je 0x4039ed
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403a2c
movsxd rbx, dword [rdi + 0x73]
je 0x403a3a
imul ebp, dword [rsi + 0x67], 0x5f345349
push rbx
xor eax, 0x5f31545f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x55], bl
outsb dx, byte [rsi]
ja 0x403a56
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x403a69
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
pop rdi
pop rdx
push rbx
je 0x403a39
jae 0x403a7e
jo 0x403a53
imul eax, dword [rbp + 0x76], 0x535f5452
xor dword [rdi], ebx
pop rdi
pop rdx
push rbx
je 0x403a51
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403a90
movsxd rbx, dword [rdi + 0x73]
je 0x403a9e
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403a99
je 0x403aae
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
jo 0x403a97
movsxd r8, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rax], al
jae 0x403adb
insd dword [rdi], dx
je 0x403ac6
add byte [rsi], ch
jae 0x403ade
jb 0x403ae0
add byte [rsi], ch
jae 0x403ada
jae 0x403ae8
jb 0x403aea
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x403aeb
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x403af9
outsb dx, byte cs:[esi]
jne 0x403ac7
jne 0x403b05
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x403ad5
push 0x687361
jns 0x403b1e
jae 0x403b2b
insd dword [rdi], dx
add byte [rsi], ch
jns 0x403b26
jae 0x403b2e
jb 0x403abc
outsb dx, byte cs:[esi]
jne 0x403aef
jbe 0x403b28
jb 0x403b38
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x403afc
jbe 0x403b35
jb 0x403b45
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x403b40
insb byte [rdi], dx
jns 0x403b4f
add byte [rsi], ch
jb 0x403b4a
insb byte [rdi], dx
jo 0x403b56
je 0x403aec
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x403b25
outsd dx, dword [esi]
je 0x403afb
je 0x403b63
js 0x403b74
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x403b79
je 0x403b6f
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x403b92
jo 0x403ba6
pop rdi
je 0x403b96
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403ba4
jns 0x403b45
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x403bc0
jns 0x403b51
push 0x63
jb 0x403b56
jns 0x403bc8
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x403bd2
je 0x403b68
je 0x403bce
add byte [rsi], ch
jae 0x403be5
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x403b7c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 1
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rip + 0x40], al
add byte [rax], al
sub byte [rip], al
add byte [rax], al
sub byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
add byte [rax], al
add bh, bh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], dl
add byte [rax], al
add byte [rax], al
add byte [rax + 8], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4008], cl
add byte [rax], al
add byte [rax + 8], cl
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], bl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 9], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 9], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x19000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
adc byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
xor byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, byte [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x600000001000000], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rdx + 0x40], ah
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4012], dh
add byte [rax], al
add byte [rax + 0x12], dh
add byte [rax], al
add dh, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x13], bh
add byte [rax], al
add byte [rax], al
add byte [rax + 0x13], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
je 0x403fe2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rsi + rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
call 0x4040ba
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], ch
add byte [rax], al
add byte [rax + 0x20], ch
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
mov eax, 0x20
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], bh
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
cmp al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
or eax, 0
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sub eax, 0
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
