xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x60209f
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400a80
mov eax, 0
test rax, rax
je 0x400a80
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400ac8
mov eax, 0
test rax, rax
je 0x400ac8
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x2017f9], 0
jne 0x400aea
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x2017e6], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400b00
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400afb
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
push rbx
sub rsp, 0xeb2a8
mov rax, qword fs:[0x28]
mov qword [rbp - 0x18], rax
xor eax, eax
mov edi, 0x14
call sym.std::setprecision
mov ebx, eax
mov esi, sym.std::fixed
mov edi, obj.std::cout
call sym.std::ostream::operator__
mov esi, ebx
mov rdi, rax
call sym.std::operator___char_std::char_traits_char__
lea rax, [rbp - 0xeb2a8]
mov rsi, rax
mov edi, obj.std::cin
call 0x4009c0
mov dword [rbp - 0xeb2a4], 1
mov eax, dword [rbp - 0xeb2a8]
cmp dword [rbp - 0xeb2a4], eax
jg 0x400bc9
mov esi, str.Case__
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
mov rdx, rax
mov eax, dword [rbp - 0xeb2a4]
mov esi, eax
mov rdi, rdx
call 0x400930
mov esi, 0x401581
mov rdi, rax
call sym.std::operator___std::char_traits_char__
lea rax, [rbp - 0xeb2a0]
mov rdi, rax
call sym.Problem::solve
add dword [rbp - 0xeb2a4], 1
jmp 0x400b74
mov eax, 0
mov rcx, qword [rbp - 0x18]
xor rcx, qword fs:[0x28]
je 0x400be2
call sym.imp.__stack_chk_fail
add rsp, 0xeb2a8
pop rbx
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
cmp dword [rbp - 4], 1
jne 0x400c27
cmp dword [rbp - 8], 0xffff
jne 0x400c27
mov edi, obj.std::__ioinit
call sym.std::ios_base::Init::Init
mov edx, obj.__dso_handle
mov esi, obj.std::__ioinit
mov edi, sym.std::ios_base::Init::_Init
call sym.imp.__cxa_atexit
nop
leave
ret
push rbp
mov rbp, rsp
mov esi, 0xffff
mov edi, 1
call sym.__static_initialization_and_destruction_0
pop rbp
ret
push rbp
mov rbp, rsp
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
mov eax, dword [rbp - 4]
and eax, dword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
mov eax, dword [rbp - 4]
or eax, dword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
mov dword [rbp - 4], edi
mov eax, dword [rbp - 4]
not eax
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov dword [rbp - 0xc], esi
mov rax, qword [rbp - 8]
mov eax, dword [rax]
mov edx, dword [rbp - 0xc]
mov esi, edx
mov edi, eax
call 0x400c51
mov edx, eax
mov rax, qword [rbp - 8]
mov dword [rax], edx
mov rax, qword [rbp - 8]
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov dword [rbp - 0xc], esi
mov rax, qword [rbp - 8]
mov eax, dword [rax]
mov edx, dword [rbp - 0xc]
mov esi, edx
mov edi, eax
call sym.std::operator_
mov edx, eax
mov rax, qword [rbp - 8]
mov dword [rax], edx
mov rax, qword [rbp - 8]
leave
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov dword [rbp - 0x1c], esi
mov dword [rbp - 0x20], edx
mov rax, qword [rbp - 0x18]
mov eax, dword [rax + 0x18]
mov dword [rbp - 4], eax
mov eax, dword [rbp - 0x20]
mov edi, eax
call 0x400c63
mov edx, eax
mov rax, qword [rbp - 0x18]
add rax, 0x18
mov esi, edx
mov rdi, rax
call sym.std::operator__
mov edx, dword [rbp - 0x20]
mov eax, dword [rbp - 0x1c]
mov esi, edx
mov edi, eax
call sym.std::operator_
mov edx, eax
mov rax, qword [rbp - 0x18]
add rax, 0x18
mov esi, edx
mov rdi, rax
call 0x400c71
mov eax, dword [rbp - 4]
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov edx, 0x104
mov esi, 4
mov rdi, rax
call sym.std::ios_base::setf
mov rax, qword [rbp - 8]
leave
ret
push rbp
mov rbp, rsp
mov dword [rbp - 4], edi
mov eax, dword [rbp - 4]
pop rbp
ret
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x78
mov qword [rbp - 0x78], rdi
mov rax, qword fs:[0x28]
mov qword [rbp - 0x18], rax
xor eax, eax
lea rax, [rbp - 0x6c]
mov rsi, rax
mov edi, obj.std::cin
call 0x4009c0
mov rdx, rax
lea rax, [rbp - 0x68]
mov rsi, rax
mov rdi, rdx
call 0x4009c0
mov dword [rbp - 0x60], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x60], eax
jge 0x400e01
mov eax, dword [rbp - 0x60]
cdqe
add rax, 0xc8
lea rdx, [rax*8]
mov rax, qword [rbp - 0x78]
lea rbx, [rdx + rax]
mov eax, dword [rbp - 0x60]
cdqe
lea rdx, [rax*8]
mov rax, qword [rbp - 0x78]
add rax, rdx
mov rsi, rax
mov edi, obj.std::cin
call sym.std::istream::operator__
mov rsi, rbx
mov rdi, rax
call sym.std::istream::operator__
add dword [rbp - 0x60], 1
jmp 0x400dac
mov dword [rbp - 0x5c], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x5c], eax
jge 0x400eff
mov dword [rbp - 0x58], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x58], eax
jge 0x400ef6
mov eax, dword [rbp - 0x58]
movsxd rcx, eax
mov eax, dword [rbp - 0x5c]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rcx
add rax, 0x190
lea rdx, [rax*8]
mov rax, qword [rbp - 0x78]
add rax, rdx
mov rsi, rax
mov edi, obj.std::cin
call sym.std::istream::operator__
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x58]
movsxd rsi, eax
mov eax, dword [rbp - 0x5c]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rsi
add rax, 0x190
mov rax, qword [rcx + rax*8]
cmp rax, -1
jne 0x400eed
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x58]
movsxd rsi, eax
mov eax, dword [rbp - 0x5c]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rsi
add rax, 0x190
movabs rbx, 0x16345785d8a0000
mov qword [rcx + rax*8], rbx
add dword [rbp - 0x58], 1
jmp 0x400e1b
add dword [rbp - 0x5c], 1
jmp 0x400e08
mov dword [rbp - 0x54], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x54], eax
jge 0x40104b
mov dword [rbp - 0x50], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x50], eax
jge 0x401042
mov dword [rbp - 0x4c], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x4c], eax
jge 0x401039
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x54]
movsxd rsi, eax
mov eax, dword [rbp - 0x50]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rsi
add rax, 0x190
mov rsi, qword [rcx + rax*8]
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x4c]
movsxd rdi, eax
mov eax, dword [rbp - 0x54]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rdi
add rax, 0x190
mov rax, qword [rcx + rax*8]
add rax, rsi
mov qword [rbp - 0x30], rax
mov eax, dword [rbp - 0x4c]
movsxd rcx, eax
mov eax, dword [rbp - 0x50]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rcx
add rax, 0x190
lea rdx, [rax*8]
mov rax, qword [rbp - 0x78]
add rdx, rax
lea rax, [rbp - 0x30]
mov rsi, rax
mov rdi, rdx
call sym.std::min_longlong_
mov rsi, qword [rax]
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x4c]
movsxd rdi, eax
mov eax, dword [rbp - 0x50]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rdi
add rax, 0x190
mov qword [rcx + rax*8], rsi
add dword [rbp - 0x4c], 1
jmp 0x400f2c
add dword [rbp - 0x50], 1
jmp 0x400f19
add dword [rbp - 0x54], 1
jmp 0x400f06
mov dword [rbp - 0x48], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x48], eax
jge 0x4011a9
mov dword [rbp - 0x44], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x44], eax
jge 0x4011a0
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x44]
movsxd rsi, eax
mov eax, dword [rbp - 0x48]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rsi
add rax, 0x190
mov rcx, qword [rcx + rax*8]
mov rax, qword [rbp - 0x78]
mov edx, dword [rbp - 0x48]
movsxd rdx, edx
mov rax, qword [rax + rdx*8]
cmp rcx, rax
jg 0x401156
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x44]
movsxd rsi, eax
mov eax, dword [rbp - 0x48]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rsi
add rax, 0x190
mov rax, qword [rcx + rax*8]
mov qword [rbp - 0x80], rax
fild qword [rbp - 0x80]
mov rax, qword [rbp - 0x78]
mov edx, dword [rbp - 0x48]
movsxd rdx, edx
add rdx, 0xc8
mov rax, qword [rax + rdx*8]
mov qword [rbp - 0x80], rax
fild qword [rbp - 0x80]
fdivp st(1)
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x44]
movsxd rsi, eax
mov eax, dword [rbp - 0x48]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rsi
add rax, 0x4ee8
shl rax, 4
add rax, rcx
fstp xword [rax]
jmp 0x401197
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x44]
movsxd rsi, eax
mov eax, dword [rbp - 0x48]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rsi
add rax, 0x4ee8
shl rax, 4
add rax, rcx
fld xword [rip + 0x3fb]
fstp xword [rax]
add dword [rbp - 0x44], 1
jmp 0x401065
add dword [rbp - 0x48], 1
jmp 0x401052
mov dword [rbp - 0x40], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x40], eax
jge 0x401300
mov dword [rbp - 0x3c], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x3c], eax
jge 0x4012f7
mov dword [rbp - 0x38], 0
mov eax, dword [rbp - 0x6c]
cmp dword [rbp - 0x38], eax
jge 0x4012ee
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x40]
movsxd rsi, eax
mov eax, dword [rbp - 0x3c]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rsi
add rax, 0x4ee8
shl rax, 4
add rax, rcx
fld xword [rax]
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x38]
movsxd rsi, eax
mov eax, dword [rbp - 0x40]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rsi
add rax, 0x4ee8
shl rax, 4
add rax, rcx
fld xword [rax]
faddp st(1)
fstp xword [rbp - 0x30]
mov eax, dword [rbp - 0x38]
movsxd rcx, eax
mov eax, dword [rbp - 0x3c]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rcx
add rax, 0x4ee8
shl rax, 4
mov rdx, rax
mov rax, qword [rbp - 0x78]
add rdx, rax
lea rax, [rbp - 0x30]
mov rsi, rax
mov rdi, rdx
call sym.std::min_longdouble_
fld xword [rax]
mov rcx, qword [rbp - 0x78]
mov eax, dword [rbp - 0x38]
movsxd rsi, eax
mov eax, dword [rbp - 0x3c]
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rsi
add rax, 0x4ee8
shl rax, 4
add rax, rcx
fstp xword [rax]
add dword [rbp - 0x38], 1
jmp 0x4011d6
add dword [rbp - 0x3c], 1
jmp 0x4011c3
add dword [rbp - 0x40], 1
jmp 0x4011b0
mov dword [rbp - 0x34], 0
mov eax, dword [rbp - 0x68]
cmp dword [rbp - 0x34], eax
jge 0x4013af
lea rax, [rbp - 0x64]
mov rsi, rax
mov edi, obj.std::cin
call 0x4009c0
mov rdx, rax
lea rax, [rbp - 0x30]
mov rsi, rax
mov rdi, rdx
call 0x4009c0
mov eax, dword [rbp - 0x64]
sub eax, 1
mov dword [rbp - 0x64], eax
mov eax, dword [rbp - 0x30]
sub eax, 1
mov dword [rbp - 0x30], eax
mov eax, dword [rbp - 0x64]
mov edx, dword [rbp - 0x30]
mov rcx, qword [rbp - 0x78]
movsxd rsi, edx
movsxd rdx, eax
mov rax, rdx
shl rax, 2
add rax, rdx
lea rdx, [rax*4]
add rax, rdx
shl rax, 3
add rax, rsi
add rax, 0x4ee8
shl rax, 4
add rax, rcx
fld xword [rax]
lea rsp, [rsp - 0x10]
fstp xword [rsp]
mov edi, obj.std::cout
call 0x400980
add rsp, 0x10
mov esi, 0x401578
mov rdi, rax
call sym.std::operator___std::char_traits_char__
add dword [rbp - 0x34], 1
jmp 0x401307
mov esi, sym.std::endl_char_std::char_traits_char__
mov edi, obj.std::cout
call 0x4009d0
nop
mov rax, qword [rbp - 0x18]
xor rax, qword fs:[0x28]
je 0x4013d3
call sym.imp.__stack_chk_fail
mov rbx, qword [rbp - 8]
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rax, qword [rbp - 0x10]
mov rdx, qword [rax]
mov rax, qword [rbp - 8]
mov rax, qword [rax]
cmp rdx, rax
jge 0x4013fe
mov rax, qword [rbp - 0x10]
jmp 0x401402
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rax, qword [rbp - 0x10]
fld xword [rax]
mov rax, qword [rbp - 8]
fld xword [rax]
fucomip st(1)
fstp st(0)
jbe 0x401428
mov rax, qword [rbp - 0x10]
jmp 0x40142c
mov rax, qword [rbp - 8]
pop rbp
ret
nop
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x2009b6]
push rbp
lea rbp, [rip + 0x2009be]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401486
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401470
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, 0
add byte [rax], al
add eax, 0x6000000
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], cl
or byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
or al, byte [rax]
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
dec eax
enter 0, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov bl, byte [rbp + 0x78]
pop rbp
js 0x4015bb
movsxd rax, dword [rcx]
and byte [rax], al
jae 0x4015e3
and byte [rbx], ah
add byte [rdx], bh
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, al
mov esp, 0x4037b1a2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rbx], ebx
add edi, dword [rbx]
pushfq
add byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax - 0x1700000d], al
add byte [rax], al
add byte [rax - 0x4700000c], al
add byte [rax], al
add byte [rsi - 0xb], dh
cmp byte [rdx], al
add byte [rax], al
idiv dil
jmp qword [rax - 0x75fffffe]
idiv bh
inc eax
add al, byte [rax]
add byte [rdi + 0x10fffff6], bl
add dword [rax], eax
add byte [rcx + 0x30fffff6], dh
add dword [rax], eax
add bl, al
idiv bh
call qword [rax + 1]
add byte [rax], al
sal esi, 1
push qword [rax + 1]
add byte [rax], al
add bh, dh
call qword [rax + 0x30000001]
idiv edi
push qword [rax - 0x6dffffff]
idiv edi
call rax
add dword [rax], eax
add byte [rdx - 0xf000009], bh
add dword [rax], eax
add dh, al
idiv edi
call qword [rax]
add al, byte [rax]
add byte [rcx], bh
jmp qword [rax + 2]
add byte [rax], al
inc dword [rax - 0x6ffffffe]
jmp rax
add al, byte [rax]
add byte [rax], al
ljmp [rax]
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40165f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sal bl, 0xff
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40168f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
nop
push rax
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rdi + 0x12fffff5], al
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte fs:[rax], al
add byte [rcx - 0xb], bh
call qword [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
test byte [rax], al
add byte [rax], al
imul esi, ebp, -1
dec dword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add byte [rax], al
add byte [rcx - 0xb], bl
ljmp [rdi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push 0xc
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax - 0xb], ch
ljmp [rdi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push 0xc
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
in al, 0
add byte [rax], al
js 0x40174f
jmp qword [rdx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add bl, byte [rbp + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add al, 1
add byte [rax], al
mov edx, 0x28fffff5
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
movsxd rcx, dword [rdi + rax]
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
and al, 1
add byte [rax], al
ret 0xfff5
dec dword [rax + rax]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
and al, 0
add byte [rax], al
add dword [rax], r8d
add byte [rsi + 0x73fffff5], ch
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add dword [r11], 3
imul eax, dword [rsi], 0x8070c
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
insb byte [rdi], dx
add dword [rax], eax
add byte [rsi], dh
call rsi
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add qword [rbx], 2
leave
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
xchg eax, esp
add dword [rax], eax
add cl, dl
sti
ljmp [rbx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
mov ah, 1
add byte [rax], al
fdiv st(3), st(0)
ljmp [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add dword [rax], eax
add byte [rbx + rsi*8 + 0x3effff], ah
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
jns 0x401867
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
hlt
add dword [rax], eax
add dl, al
call qword [rip]
adc byte [rsi + 0x60d4302], al
push rax
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rdx + rax], dl
add byte [rax], al
test al, 0xfb
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x4018c2
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
pop rsp
add al, byte [rax]
add al, dl
sti
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
sub cl, byte [rax + rax*2]
add byte [rax], al
add byte [rax], al
add al, dl
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov esi, 1
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
or byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, 0
add byte [rax], al
add byte [rsp + rdx + 0x40], ah
add byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sbb eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add al, cl
add al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rax
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4007], ch
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 7], ah
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add dl, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or dword [rax], r8d
add byte [rax], al
add byte [rax], al
push rsi
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or word [rax], ax
add byte [rax], al
add byte [rax], al
jbe 0x402043
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x4009], al
add byte [rax], al
add byte [rsi + 0x4009], dl
add byte [rax], al
add byte [rsi + 0x4009], ah
add byte [rax], al
add byte [rsi + 0x4009], dh
add byte [rax], al
add dh, al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
out 9, al
add byte [rax], al
add byte [rax], al
add dh, dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402110
je 0x402119
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x402127
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x402124
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002d000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add al, cl
add al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add dl, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax + 7], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add byte [rax + 0x4007], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add al, bh
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, 0
and byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400a1000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax], ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
verr word [rsp + rdx + 0x40]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc byte [rax], al
mov al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rax + 0x4015], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add byte [rax + 0x16], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], dl
add al, bh
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601e1000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb dword [rax], eax
mov byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], bl
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
adc eax, 0x601e1000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0xa], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400a], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, dl
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rdx], bl
add al, dl
and ah, byte [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rax + rax], dl
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add al, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg byte [rax], al
add byte [rax], al
add dword [rax], eax
adc eax, dword [rax]
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsd dword [rdi], dword ptr [rsi]
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ch
add byte [rax], dl
add al, al
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, al
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add cl, al
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add dl, al
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
add byte [rax], al
add byte [rcx], al
add byte [rdx], bl
add cl, dl
and ah, byte [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rax], 0x10000
adc byte [rax], al
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add al, cl
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add cl, cl
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 1], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
retf 0x4014
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 1], dl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
int3
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
je 0x40253b
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
rcl byte [rax + rax*2], 1
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add ah, dl
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dh, 1
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
fcom dword [rax + rax*2]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xlatb
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add ah, bl
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cld
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add al, ah
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rdx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
in al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp eax, 0x1000002
add byte [rax], dl
add al, ch
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdx
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add ah, ch
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x4025fc
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edi
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add ah, dh
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000002
add byte [rax], dl
add al, bh
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 2, eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
cld
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lsl eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax], al
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x40], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdi
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax], cl
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x40], cl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
stosd dword [rdi], eax
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax], dl
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x40], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax + rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rax], bl
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax + rax]
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x40], bl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax], ah
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x402736
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
and al, 0x15
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax], ch
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
int3
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x40], ch
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax], dh
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb dword [rip + 0x10000], eax
adc byte [rax], al
xor al, 0x15
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
cmp byte [rip + 0x40], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
cmp al, 0x15
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea eax, [rip + 0x10000]
adc byte [rax], al
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov bl, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd qword [rip + 0x10000]
adc byte [rax], al
adc rax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rsi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc rax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rsi], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
push rax
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
push rsp
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jge 0x402870
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
pop rax
adc eax, 0x40
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x6000100001000006], eax
adc eax, 0x40
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
push 0x4015
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rsi], cl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
jo 0x4028cf
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, bl
add byte [rax], al
add al, byte [rax]
add ah, ch
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte ds:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add byte [rax], al
add al, byte [rax]
add byte [rdx], ch
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
add dword [rax], eax
adc al, byte [rax]
loopne 0x402932
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rax], ch
add byte [rax], al
add dword [rax], eax
adc eax, 0x601e1000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
movabs al, byte [0x4015]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 7], cl
add byte [rax], al
add dword [rax], eax
sbb byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 7], ah
add byte [rax], al
add byte [rax], al
adc eax, dword [rax]
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 7], dh
add byte [rax], al
add byte [rax], al
adc eax, dword [rax]
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rdi], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, dh
or dword [rax], eax
add byte [rax], ah
add byte [rcx], bl
add byte [rax + 0x6020], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x11000007], cl
add byte [rdx], bl
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rax], bl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdi + rax + 0x220000], ah
add al, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rdx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
int 7
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, 7
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x4014], ah
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, dh
or dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
hlt
add byte [rax], al
and al, byte [rax]
add byte [rcx + 0xc], dl
add byte [rax], al
add byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rcx], ah
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 8], dh
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, al
add byte [rax], al
adc al, byte [rax]
verr word [rsp + rdx + 0x40]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg dword [rax], ecx
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lodsb al, byte [rsi]
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, cl
or byte [rax], al
add byte [rdx], ah
add byte [rsi], cl
add byte [rdx], dh
or eax, 0x40
add byte [rax], al
sub byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loop 0x402b2a
add byte [rax], al
and al, byte [rax]
add byte [rcx + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rdi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, bh
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
or dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
or dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0x4009], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 9], dl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
outsd dx, dword [rsi]
or dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add byte [rsi + 0xd], ah
add byte [rax], al
add byte [rax], al
add byte [rbx + 6], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rcx], 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
or dword [rax], eax
add byte [rcx], dl
add byte [rax], dl
add byte [rax + 0x4014], dh
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xlatb
or dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dh
or dword [rax], eax
add byte [rax], dl
add byte [rcx], bl
add byte [rax + 0x6020], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
or dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add byte [rdx + 0xd], bl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc cl, byte [rdx]
add byte [rax], al
and al, byte [rax]
add byte [rbx + 0xc], ah
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
or al, byte [rax]
add byte [rdx], ah
add byte [rsi], cl
add cl, bl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
sub eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rcx], dl
add bl, byte [rcx]
add byte [rax + 0x6020], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rcx], cl
add byte [rcx], dl
add byte [rdx], bl
add al, al
and dword [rax], esp
add byte [rax], al
add byte [rax], al
adc byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rcx, dword [rdx]
add byte [rax], al
adc dword [rdx], eax
sbb dword [rax], eax
nop
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jo 0x402cac
add byte [rax], al
and al, byte [rax]
add byte [rax + 0x400c], ah
add byte [rax], al
add byte [rdi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1200000a], cl
add byte [rsi], cl
add byte [rax], dh
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
wait
or al, byte [rax]
add byte [rax], dl
add byte [rdx], bl
add byte [rax + 0x6020], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x1200000a], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, al
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
or al, byte [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rsp + rdx], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 7], ch
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
fsub dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dh
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
or eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], ah
or eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add al, dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
outsd dx, dword [rsi]
or eax, dword [rax]
add byte [rax], dl
add byte [rcx], bl
add byte [rax + 0x6020], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xb], dh
add byte [rax], al
and al, byte [rax]
add byte [rdi], bh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1200000b], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
adc al, byte [rax]
add byte [rsi], dl
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1200000a], dl
add byte [rbx], cl
add al, bh
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x72], ah
je 0x402e80
je 0x402e84
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402e36
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402eb4
jb 0x402eba
pop rdi
jne 0x402ec3
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402ebd
je 0x402eb9
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402ed9
jb 0x402edf
pop rdi
jne 0x402ee8
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402eeb
jns 0x402edb
outsb dx, byte gs:[rsi]
je 0x402ef2
jns 0x402e82
jb 0x402ee6
insd dword [rdi], dx
pop rdi
jne 0x402ef8
insd dword [rdi], dx
jns 0x402e8e
pop rdi
pop rdi
jb 0x402ef4
insd dword [rdi], dx
pop rdi
jne 0x402f06
insd dword [rdi], dx
jns 0x402efb
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402f06
jns 0x402f06
outsb dx, byte gs:[rsi]
je 0x402f1d
jns 0x402ead
movsxd rbp, dword [rsi]
movsxd rsi, dword [rax + 0x70]
add byte [rdi + 0x5a], bl
push rbx
je 0x402f04
xor dword [rcx], edi
jo 0x402f25
movsxd rsp, dword gs:[rbp + 0x77]
imul esi, dword [rbx + 0x65], 0x6e6f635f
jae 0x402f3d
jb 0x402f40
movsxd rsi, dword [rax + rax + 0x5f]
pop rdx
push rbx
je 0x402f1f
xor dword [rbx], esi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x402f3e
jb 0x402f49
add byte [rdi + 0x5a], bl
push rbx
je 0x402f34
imul esp, dword ss:[rdi + 0x6e], 0x65726f
pop rdi
pop rdx
push rbx
je 0x402f41
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x402f68
movsxd rdi, dword [rax + 0x78]
xor r14b, byte [rcx]
pop rdi
pop rdi
jne 0x402f83
je 0x402f78
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x5f]
jo 0x402f8f
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x5a5f0045
push rbx
je 0x402f77
xor dword [rax], esi
jb 0x402f92
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402f89
xor dword [rcx], esi
je 0x402fb3
jns 0x402fa2
je 0x402fb4
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402f9c
xor dword [rax], esi
outsd dx, dword fs:[rsi]
jo 0x402fcb
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402f94
xor eax, 0x65676572
js 0x402fc9
movsxd rbp, dword [rdi + 0x6e]
jae 0x402fe3
outsb dx, byte [rsi]
je 0x402fe6
xor rax, 0x73616369
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x402fb3
xor eax, 0x65676572
js 0x402fe8
movsxd rbp, dword [rdi + 0x6e]
jae 0x403002
outsb dx, byte [rsi]
je 0x403005
outsb dx, byte ss:[rsi]
outsd dx, dword [rsi]
jae 0x40300d
jae 0x402fe0
add byte [rdi + 0x5a], bl
push rbx
je 0x402fd3
xor eax, 0x65676572
js 0x403008
movsxd rbp, dword [rdi + 0x6e]
jae 0x403022
outsb dx, byte [rsi]
je 0x403025
cmp byte [rdi + 0x70], r13b
je 0x403021
insd dword [rdi], dx
imul edi, dword [rdx + 0x65], 0x5a5f0045
push rbx
je 0x402ff5
xor eax, 0x65676572
js 0x40302a
movsxd rbp, dword [rdi + 0x6e]
jae 0x403044
outsb dx, byte [rsi]
je 0x403047
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x403042
add byte [r15 + 0x5a], r11b
push rbx
je 0x403016
xor eax, 0x65676572
js 0x40304b
movsxd rbp, dword [rdi + 0x6e]
jae 0x403065
outsb dx, byte [rsi]
je 0x403068
xor qword [rax], r14
push r11
movsxd rsi, dword [rdx + 0x69]
jo 0x403076
add byte [r15 + 0x5a], r11b
push rbx
je 0x40303b
xor eax, 0x65676572
js 0x403070
movsxd rbp, dword [rdi + 0x6e]
jae 0x40308a
outsb dx, byte [rsi]
je 0x40308d
xor rax, 0x69736162
movsxd rax, dword [rbp]
pop rdi
pop rdx
push rbx
je 0x40305a
xor eax, 0x65676572
js 0x40308f
movsxd rbp, dword [rdi + 0x6e]
jae 0x4030a9
outsb dx, byte [rsi]
je 0x4030ac
cmp byte [rbp + 0x78], r12b
je 0x4030a4
outsb dx, byte [rsi]
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x40307c
xor eax, 0x65676572
js 0x4030b1
movsxd rbp, dword [rdi + 0x6e]
jae 0x4030cb
outsb dx, byte [rsi]
je 0x4030ce
xor r12, qword [rcx + 0x77]
imul eax, dword [rbp], 0x5f
pop rdx
push rbx
je 0x403099
xor eax, 0x65676572
js 0x4030ce
movsxd rbp, dword [rdi + 0x6e]
jae 0x4030e8
outsb dx, byte [rsi]
je 0x4030eb
xor al, 0x67
jb 0x4030e2
jo 0x4030c4
add byte [rdi + 0x5a], bl
push rbx
je 0x4030b7
xor eax, 0x65676572
js 0x4030ec
movsxd rbp, dword [rdi + 0x6e]
jae 0x403106
outsb dx, byte [rsi]
je 0x403109
xor rax, 0x65726765
jo 0x4030e3
add byte [rdi + 0x5a], bl
push rbx
je 0x4030d6
xor eax, 0x65676572
js 0x40310b
movsxd rbp, dword [rdi + 0x6e]
jae 0x403125
outsb dx, byte [rsi]
je 0x403128
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40311f
push 0x6665645f
jne 0x403130
je 0x40310b
add byte [rdi + 0x5a], bl
push rbx
je 0x4030fe
xor eax, 0x65676572
js 0x403133
movsxd rbp, dword [rdi + 0x6e]
jae 0x40314d
outsb dx, byte [rsi]
je 0x403150
xor qword [rbx], r14
insd dword [rdi], dx
je 0x403147
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x403126
xor eax, 0x65676572
js 0x40315b
movsxd rbp, dword [rdi + 0x6e]
jae 0x403175
outsb dx, byte [rsi]
je 0x403178
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40316f
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x40314e
xor eax, 0x65676572
js 0x403183
movsxd rbp, dword [rdi + 0x6e]
jae 0x40319d
outsb dx, byte [rsi]
je 0x4031a0
xor qword [rbx], r14
insd dword [rdi], dx
je 0x403197
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
ja 0x403183
add byte [rdi + 0x5a], bl
push rbx
je 0x403176
xor eax, 0x65676572
js 0x4031ab
movsxd rbp, dword [rdi + 0x6e]
jae 0x4031c5
outsb dx, byte [rsi]
je 0x4031c8
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4031bf
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
ja 0x4031ab
add byte [rdi + 0x5a], bl
push rbx
je 0x40319e
xor eax, 0x65676572
js 0x4031d3
movsxd rbp, dword [rdi + 0x6e]
jae 0x4031ed
outsb dx, byte [rsi]
je 0x4031f0
cmp qword [rbp + 0x61], r13
je 0x4031e6
push 0x796e615f
add byte [r15 + 0x5a], r11b
push rbx
je 0x4031c1
xor eax, 0x65676572
js 0x4031f6
movsxd rbp, dword [rdi + 0x6e]
jae 0x403210
outsb dx, byte [rsi]
je 0x403213
xor qword [rbp*2 + 0x68637461], r14
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
je 0x40320c
outsb dx, byte [rsi]
jne 0x40321c
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x4031ea
xor eax, 0x65676572
js 0x40321f
movsxd rbp, dword [rdi + 0x6e]
jae 0x403239
outsb dx, byte [rsi]
je 0x40323c
xor qword [rsi], r14
insd dword [rdi], dx
je 0x403233
push 0x6e6f635f
je 0x403240
outsb dx, byte [rsi]
jne 0x403249
jne 0x40324f
add byte [r15 + 0x5a], r11b
push rbx
je 0x403215
xor eax, 0x65676572
js 0x40324a
movsxd rbp, dword [rdi + 0x6e]
jae 0x403264
outsb dx, byte [rsi]
je 0x403267
xor qword [rsi], r14
insd dword [rdi], dx
je 0x40325e
push 0x6572705f
jbe 0x403261
jbe 0x403266
imul ebp, dword [rbp + rax*2], 0x534e5a5f
je 0x403240
xor eax, 0x65676572
js 0x403275
movsxd rbp, dword [rdi + 0x6e]
jae 0x40328f
outsb dx, byte [rsi]
je 0x403292
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x403293
je 0x403288
jne 0x40329b
je 0x403276
add byte [rdi + 0x5a], bl
push rbx
je 0x403269
xor eax, 0x65676572
js 0x40329e
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032b8
outsb dx, byte [rsi]
je 0x4032bb
xor qword [rax], r14
outsw dx, word [rsi]
jb 0x4032bc
je 0x4032b1
jae 0x4032b9
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x40328e
xor eax, 0x65676572
js 0x4032c3
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032dd
outsb dx, byte [rsi]
je 0x4032e0
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x4032e1
je 0x4032d6
outsb dx, byte [rsi]
outsd dx, dword [rsi]
pop rdi
movsxd rbp, dword [rdi + 0x70]
jns 0x4032c4
add byte [rdi + 0x5a], bl
push rbx
je 0x4032b7
xor eax, 0x65676572
js 0x4032ec
movsxd rbp, dword [rdi + 0x6e]
jae 0x403306
outsb dx, byte [rsi]
je 0x403309
xor qword [rdi], r14
outsw dx, word [rsi]
jb 0x40330a
je 0x4032ff
imul si, word [rdx + 0x73], 0x5f74
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
jns 0x4032f0
add byte [rdi + 0x5a], bl
push rbx
je 0x4032e3
xor eax, 0x65676572
js 0x403318
movsxd rbp, dword [rdi + 0x6e]
jae 0x403332
outsb dx, byte [rsi]
je 0x403335
xor qword [rbx], r14
jb 0x40333a
outsd dx, dword [rsi]
jb 0x40332a
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x403337
add byte [r15 + 0x5a], r11b
push rbx
je 0x40330b
xor eax, 0x65676572
js 0x403340
movsxd rbp, dword [rdi + 0x6e]
jae 0x40335a
outsb dx, byte [rsi]
je 0x40335d
xor qword [rcx], r14
jb 0x403362
outsd dx, dword [rsi]
jb 0x403352
movsxd rsi, dword [rcx + rdi*2 + 0x70]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x403331
xor eax, 0x65676572
js 0x403366
movsxd rbp, dword [rdi + 0x6e]
jae 0x403380
outsb dx, byte [rsi]
je 0x403383
xor qword [rdx], r14
jb 0x403388
outsd dx, dword [rsi]
jb 0x403378
jae 0x40337f
jo 0x403384
add byte [r15 + 0x5a], r11b
push rbx
je 0x403358
xor eax, 0x65676572
js 0x40338d
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033a7
outsb dx, byte [rsi]
je 0x4033aa
xor qword [rbx], r14
jb 0x4033af
outsd dx, dword [rsi]
jb 0x40339f
movsxd rbp, dword [rbx + 0x72]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x403380
xor eax, 0x65676572
js 0x4033b5
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033cf
outsb dx, byte [rsi]
je 0x4033d2
xor qword [rcx], r14
jb 0x4033d7
outsd dx, dword [rsi]
jb 0x4033c7
jb 0x4033cc
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4033a6
xor eax, 0x65676572
js 0x4033db
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033f5
outsb dx, byte [rsi]
je 0x4033f8
xor qword [rcx], r14
jb 0x4033fd
outsd dx, dword [rsi]
jb 0x4033ed
jo 0x4033f1
jb 0x4033f7
outsb dx, byte [rsi]
add byte [r15 + 0x5a], r11b
push rbx
je 0x4033cc
xor eax, 0x65676572
js 0x403401
movsxd rbp, dword [rdi + 0x6e]
jae 0x40341b
outsb dx, byte [rsi]
je 0x40341e
xor qword [rcx], r14
jb 0x403423
outsd dx, dword [rsi]
jb 0x403413
jb 0x403418
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4033f2
xor eax, 0x65676572
js 0x403427
movsxd rbp, dword [rdi + 0x6e]
jae 0x403441
outsb dx, byte [rsi]
je 0x403444
xor qword [0x726f7272], r14
pop rdi
jb 0x403441
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40341b
xor eax, 0x65676572
js 0x403450
movsxd rbp, dword [rdi + 0x6e]
jae 0x40346a
outsb dx, byte [rsi]
je 0x40346d
xor qword [rcx], r14
jb 0x403472
outsd dx, dword [rsi]
jb 0x403462
jb 0x403466
outsb dx, byte [rsi]
add byte gs:[r15d + 0x5a], r11b
push rbx
je 0x403441
xor eax, 0x65676572
js 0x403476
movsxd rbp, dword [rdi + 0x6e]
jae 0x403490
outsb dx, byte [rsi]
je 0x403493
xor qword [rcx], r14
jb 0x403498
outsd dx, dword [rsi]
jb 0x403488
jae 0x40349b
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x403467
xor eax, 0x65676572
js 0x40349c
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034b6
outsb dx, byte [rsi]
je 0x4034b9
xor qword [rip + 0x6f727265], r14
jb 0x4034ae
jb 0x4034b9
jo 0x4034bb
je 0x40349e
add byte [rdi + 0x5a], bl
push rbx
je 0x403491
xor eax, 0x65676572
js 0x4034c6
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034e0
outsb dx, byte [rsi]
je 0x4034e3
xor qword [rsi], r14
jb 0x4034e8
outsd dx, dword [rsi]
jb 0x4034d8
movsxd rbp, dword [rdi + 0x6d]
jo 0x4034ea
js 0x4034ea
je 0x4034fc
add byte [r15 + 0x5a], r11b
push rbx
je 0x4034bc
xor eax, 0x65676572
js 0x4034f1
movsxd rbp, dword [rdi + 0x6e]
jae 0x40350b
outsb dx, byte [rsi]
je 0x40350e
xor qword [rcx], r14
jb 0x403513
outsd dx, dword [rsi]
jb 0x403503
jae 0x40351a
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4034e9
pop rdi
pop rdi
je 0x403518
imul ebp, dword [rsp + rcx*2 + 0x31], 0x5f535f39
imul ebp, dword [rsi + 0x76], 0x64696c61
pop rdi
jae 0x40353d
je 0x403531
pop rdi
imul esp, dword [rbp + rax*2], 0x344c5a5f
insd dword [rdi], dx
js 0x403527
add byte [rdi + 0x5a], bl
xor r13, qword [rcx + 0x6e]
add byte [rdi + 0x5a], bl
xor al, 0x31
pop rdi
pop rdi
jae 0x40355e
je 0x403556
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x403564
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x40357a
jb 0x40357d
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x403592
pop rdi
pop r15
insd dword [rdi], dx
imul ebp, dword [rsi], 0x52465f5f
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4035d5
jns 0x4035d5
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4035e6
jns 0x4035e6
jae 0x4035fd
jb 0x403600
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
push rbx
je 0x4035ce
movsxd rbp, dword [rcx + 0x6e]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x4035ea
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x73
je 0x403625
push r11
je 0x4035f4
xor ebx, dword [rdi + 0x49]
outsd dx, dword [rsi]
jae 0x403628
insd dword [rdi], dx
je 0x403633
insb byte [rdi], dx
jae 0x403625
xor byte [rdi], bl
pop rdi
pop rdx
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x403622
imul eax, dword [rax + 0x40], 0x42494c47
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdx
push rbx
je 0x403670
jb 0x403656
je 0x403636
xor ebx, dword [rdi + 0x49]
outsd dx, dword [rsi]
jae 0x40366a
insd dword [rdi], dx
je 0x403675
insb byte [rdi], dx
jae 0x403667
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x403687
jae 0x403666
movsxd rdx, dword [rbx + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403686
je 0x40369b
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x403666
xor esp, dword [rdx + 0x61]
jae 0x4036a3
movsxd rbx, dword [rdi + 0x6f]
jae 0x4036b3
jb 0x4036a6
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
push rbx
je 0x403681
xor ebx, dword [rdi + 0x53]
je 0x4036c6
jb 0x4036bd
movsxd rbp, dword [rcx + 0x73]
imul ebp, dword [rdi + 0x6e], 0x4c474040
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x4036e9
jb 0x4036ec
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x4036de
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x4036ff
jae 0x40368f
pop rdi
pop rdx
push rbx
je 0x4036cd
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x403734
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x535a5f00
je 0x40370d
imul di, word [rax + 0x65], 0x5264
push rbx
je 0x403719
imul ebp, dword [rdi + 0x73], 0x7361625f
add byte gs:[rdi + 0x5a], bl
push rbx
je 0x40375e
push rdx
push rdx
push rbx
je 0x403725
xor ebx, dword [rdi + 0x49]
outsd dx, dword [rsi]
jae 0x403759
insd dword [rdi], dx
je 0x403764
insb byte [rdi], dx
jae 0x403756
pop rdi
add byte [rdi + 0x5f], bl
movsxd rdi, dword [rax + 0x61]
pop rdi
je 0x403773
js 0x403779
je 0x403752
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x40376c
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403774
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x4037c9
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5a], bl
push rax
jb 0x4037ed
insb byte [rdi], dx
insd dword [rdi], dx
xor eax, 0x766c6f73
jbe 0x40378b
pop rdi
pop rdx
push rbx
je 0x4037fc
jae 0x4037db
push rbx
je 0x4037c6
xor dword [rbx + 0x68], esp
jb 0x4037fa
je 0x40380f
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x4037da
xor esp, dword [rdx + 0x61]
jae 0x403817
movsxd rbx, dword [rdi + 0x6f]
jae 0x403827
jb 0x40381a
insd dword [rdi], dx
movsxd rdx, dword [r15 + rbx*2 + 0x45]
push rbx
xor eax, 0x634b505f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop r15
jae 0x40384a
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x40384b
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403860
pop rdi
jae 0x403876
jb 0x403879
add byte [rdi + 0x5a], bl
push rbx
je 0x40383c
xor dh, byte [rbx + 0x65]
je 0x403880
jb 0x403877
movsxd rbp, dword [rcx + 0x73]
imul ebp, dword [rdi + 0x6e], 0x5a5f0069
push rbx
je 0x403882
outsd dx, dword [rsi]
push rbx
je 0x403854
xor ebx, dword [rdi + 0x49]
outsd dx, dword [rsi]
jae 0x403888
insd dword [rdi], dx
je 0x403893
insb byte [rdi], dx
jae 0x403832
pop rdi
pop rdx
push rbx
je 0x40386a
insd dword [rdi], dx
imul ebp, dword [rsi + 0x49], 0x4b524578
push rsp
pop rdi
push rbx
xor bl, byte [rdi + 0x53]
xor bl, byte [rdi]
pop rdi
pop rdi
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x40388d
movsxd rbp, dword [rdi + 0x75]
je 0x40389e
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
jae 0x4038df
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5a], bl
push rbx
je 0x4038de
push rdx
push rbx
je 0x4038b3
xor ebx, dword [rdi + 0x49]
outsd dx, dword [rsi]
jae 0x4038e7
insd dword [rdi], dx
je 0x4038f2
insb byte [rdi], dx
jae 0x4038e4
pop rdi
add byte [rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5f5f0074
jae 0x40391b
pop rdi
jae 0x40391f
jb 0x403922
add byte [rdi + 0x5f], bl
jae 0x403927
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
imul esi, dword [rdx + 0x73], 0x40695245
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x40391b
insd dword [rdi], dx
imul ebp, dword [rsi + 0x49], 0x4b524565
push rsp
pop rdi
push rbx
xor bl, byte [rdi + 0x53]
xor bl, byte [rdi]
pop rdi
pop rdx
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x403946
push rax
push rdx
push rbx
outsd dx, dword [rsi]
push rbx
pop rdi
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
imul esi, dword [rdx + 0x73], 0x40785245
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403968
outsb dx, byte gs:[rsi]
insb byte [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4039a2
je 0x4039b7
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x403982
xor esp, dword [rdx + 0x61]
jae 0x4039bf
movsxd rbx, dword [rdi + 0x6f]
jae 0x4039cf
jb 0x4039c2
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
je 0x4039de
add byte [rdi + 0x5a], bl
push rbx
je 0x4039e4
outsb dx, byte [rsi]
push rbx
je 0x4039b8
xor ebx, dword [rdi + 0x49]
outsd dx, dword [rsi]
jae 0x4039ec
insd dword [rdi], dx
je 0x4039f7
insb byte [rdi], dx
jae 0x4039e9
pop rdi
add byte [rdi + 0x5a], bl
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x4039e5
push rax
push rdx
push rbx
je 0x4039de
imul ebp, dword [rdi + 0x73], 0x7361625f
push rbx
xor byte [rdi + 0x45], bl
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
add byte [rsi], ch
jae 0x403a3d
insd dword [rdi], dx
je 0x403a28
add byte [rsi], ch
jae 0x403a40
jb 0x403a42
add byte [rsi], ch
jae 0x403a3c
jae 0x403a4a
jb 0x403a4c
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x403a4d
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x403a5b
outsb dx, byte cs:[esi]
jne 0x403a29
jne 0x403a67
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x403a37
push 0x687361
jns 0x403a80
jae 0x403a8d
insd dword [rdi], dx
add byte [rsi], ch
jns 0x403a88
jae 0x403a90
jb 0x403a1e
outsb dx, byte cs:[esi]
jne 0x403a51
jbe 0x403a8a
jb 0x403a9a
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x403a5e
jbe 0x403a97
jb 0x403aa7
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x403aa2
insb byte [rdi], dx
jns 0x403ab1
add byte [rsi], ch
jb 0x403aac
insb byte [rdi], dx
jo 0x403ab8
je 0x403a4e
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x403a87
outsd dx, dword [esi]
je 0x403a5d
je 0x403ac5
js 0x403ad6
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x403adb
je 0x403ad1
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403af4
jns 0x403a95
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x403b10
jns 0x403aa1
push 0x63
jb 0x403aa6
jns 0x403b18
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x403b22
je 0x403ab8
je 0x403b1e
add byte [rsi], ch
jae 0x403b35
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x403acc
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 1
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, bh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 0x4004, 0
add byte [rax], al
add byte [rax], al
enter 4, 0
add byte [rax], al
add byte [rax], al
sbb al, byte [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
add byte [rax], al
add bh, bh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, ah
add byte [rax], al
add byte [rax], al
add dl, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 7], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4007], ch
add byte [rax], al
add byte [rax + 7], ch
add byte [rax], al
add byte [rax + 1], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x18000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
or byte [rax], al
add byte [rax], al
add byte [rax], al
clc
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or dword [rax], eax
add byte [rax], al
add byte [rax], al
and byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
or al, byte [rax]
add byte [rax], al
add byte [rax], al
adc byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
and byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsp + rdx + 0x40], ah
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4014], dh
add byte [rax], al
add byte [rax + 0x14], dh
add byte [rax], al
add al, dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4015], ah
add byte [rax], al
add byte [rax + 0x15], ah
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x16], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x16], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loope 0x404012
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 0, al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x404073
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, eax
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], cl
add byte [rax], al
add byte [rax + 0x20], cl
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rax + 0x20], bl
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], bl
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sar byte [rcx], 0
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
shl byte [rax], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rip], cl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rsi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, 0xb
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
