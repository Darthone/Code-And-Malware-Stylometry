xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6030df
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400ed0
mov eax, 0
test rax, rax
je 0x400ed0
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400f18
mov eax, 0
test rax, rax
je 0x400f18
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x2023e9], 0
jne 0x400f3a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x2023d6], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400f50
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400f4b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
sub rsp, 0x20
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
lea rax, [rbp - 0x10]
mov rsi, rax
mov edi, obj.std::cin
call sym.std::istream::operator__
mov dword [rbp - 0xc], 1
mov eax, dword [rbp - 0x10]
cmp dword [rbp - 0xc], eax
jg 0x400fdb
mov esi, str.Case__
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
mov rdx, rax
mov eax, dword [rbp - 0xc]
mov esi, eax
mov rdi, rdx
call 0x400d00
mov esi, 0x401d05
mov rdi, rax
call sym.std::operator___std::char_traits_char__
lea rax, [rbp - 0x11]
mov rdi, rax
call sym.Problem::solve
add dword [rbp - 0xc], 1
jmp 0x400f95
mov eax, 0
mov rcx, qword [rbp - 8]
xor rcx, qword fs:[0x28]
je 0x400ff4
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
cmp dword [rbp - 4], 1
jne 0x401031
cmp dword [rbp - 8], 0xffff
jne 0x401031
mov edi, obj.std::__ioinit
call sym.std::ios_base::Init::Init
mov edx, obj.__dso_handle
mov esi, obj.std::__ioinit
mov edi, sym.std::ios_base::Init::_Init
call sym.imp.__cxa_atexit
nop
leave
ret
push rbp
mov rbp, rsp
mov esi, 0xffff
mov edi, 1
call sym.__static_initialization_and_destruction_0
pop rbp
ret
nop
push rbp
mov rbp, rsp
push r13
push r12
push rbx
sub rsp, 0xf8
mov qword [rbp - 0x108], rdi
mov rax, qword fs:[0x28]
mov qword [rbp - 0x28], rax
xor eax, eax
lea rax, [rbp - 0xfc]
mov rsi, rax
mov edi, obj.std::cin
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0xf8]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0xf4]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0xf0]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0xec]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0xe8]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
mov rdx, rax
lea rax, [rbp - 0xe4]
mov rsi, rax
mov rdi, rdx
call sym.std::istream::operator__
mov edx, dword [rbp - 0xec]
mov eax, dword [rbp - 0xf8]
cmp edx, eax
jne 0x40116e
mov edx, dword [rbp - 0xf8]
mov eax, dword [rbp - 0xec]
add edx, eax
mov eax, dword [rbp - 0xfc]
cmp edx, eax
jne 0x40116e
mov dword [rbp - 0xe0], 0
mov eax, dword [rbp - 0xf8]
cmp dword [rbp - 0xe0], eax
jge 0x40115a
mov esi, 0x401ce0
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
add dword [rbp - 0xe0], 1
jmp 0x401134
mov esi, sym.std::endl_char_std::char_traits_char__
mov edi, obj.std::cout
call sym.std::ostream::operator__
jmp 0x401a43
mov edx, dword [rbp - 0xe4]
mov eax, dword [rbp - 0xf0]
cmp edx, eax
jne 0x4011da
mov edx, dword [rbp - 0xe4]
mov eax, dword [rbp - 0xf0]
add edx, eax
mov eax, dword [rbp - 0xfc]
cmp edx, eax
jne 0x4011da
mov dword [rbp - 0xdc], 0
mov eax, dword [rbp - 0xe4]
cmp dword [rbp - 0xdc], eax
jge 0x4011c6
mov esi, 0x401ce3
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
add dword [rbp - 0xdc], 1
jmp 0x4011a0
mov esi, sym.std::endl_char_std::char_traits_char__
mov edi, obj.std::cout
call sym.std::ostream::operator__
jmp 0x401a43
mov edx, dword [rbp - 0xf4]
mov eax, dword [rbp - 0xe8]
cmp edx, eax
jne 0x401246
mov edx, dword [rbp - 0xf4]
mov eax, dword [rbp - 0xe8]
add edx, eax
mov eax, dword [rbp - 0xfc]
cmp edx, eax
jne 0x401246
mov dword [rbp - 0xd8], 0
mov eax, dword [rbp - 0xf4]
cmp dword [rbp - 0xd8], eax
jge 0x401232
mov esi, 0x401ce6
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
add dword [rbp - 0xd8], 1
jmp 0x40120c
mov esi, sym.std::endl_char_std::char_traits_char__
mov edi, obj.std::cout
call sym.std::ostream::operator__
jmp 0x401a43
mov eax, dword [rbp - 0xec]
test eax, eax
je 0x401263
mov eax, dword [rbp - 0xec]
lea edx, [rax + 1]
mov eax, dword [rbp - 0xf8]
cmp edx, eax
jg 0x40129d
mov eax, dword [rbp - 0xe4]
test eax, eax
je 0x401280
mov eax, dword [rbp - 0xe4]
lea edx, [rax + 1]
mov eax, dword [rbp - 0xf0]
cmp edx, eax
jg 0x40129d
mov eax, dword [rbp - 0xf4]
test eax, eax
je 0x4012be
mov eax, dword [rbp - 0xf4]
lea edx, [rax + 1]
mov eax, dword [rbp - 0xe8]
cmp edx, eax
jle 0x4012be
mov esi, str.IMPOSSIBLE
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
mov esi, sym.std::endl_char_std::char_traits_char__
mov rdi, rax
call sym.std::ostream::operator__
jmp 0x401a43
lea rbx, [rbp - 0x90]
mov r12d, 2
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rax, [rbp - 0xfd]
mov rdx, rax
mov esi, str.RYB___
mov rdi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
lea r13, [rbx + 0x20]
sub r12, 1
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rax, [rbp - 0xfd]
mov rdx, rax
mov esi, 0x401cf6
mov rdi, r13
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
add r13, 0x20
sub r12, 1
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rax, [rbp - 0xfd]
mov rdx, rax
mov esi, 0x401cf8
mov rdi, r13
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov eax, dword [rbp - 0xec]
test eax, eax
je 0x401434
mov edx, dword [rbp - 0xf8]
mov eax, dword [rbp - 0xec]
sub edx, eax
mov eax, edx
mov dword [rbp - 0xf8], eax
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rdx, [rbp - 0xfd]
lea rax, [rbp - 0xb0]
mov esi, str.RYB___
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov dword [rbp - 0xd4], 0
mov eax, dword [rbp - 0xec]
cmp dword [rbp - 0xd4], eax
jge 0x40140c
lea rax, [rbp - 0xb0]
mov esi, 0x401cfa
mov rdi, rax
call 0x400d50
add dword [rbp - 0xd4], 1
jmp 0x4013e1
lea rdx, [rbp - 0xb0]
lea rax, [rbp - 0x90]
mov rsi, rdx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator_
lea rax, [rbp - 0xb0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov eax, dword [rbp - 0xe4]
test eax, eax
je 0x4014f2
mov edx, dword [rbp - 0xf0]
mov eax, dword [rbp - 0xe4]
sub edx, eax
mov eax, edx
mov dword [rbp - 0xf0], eax
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rdx, [rbp - 0xfd]
lea rax, [rbp - 0xb0]
mov esi, 0x401cf6
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov dword [rbp - 0xd0], 0
mov eax, dword [rbp - 0xe4]
cmp dword [rbp - 0xd0], eax
jge 0x4014c6
lea rax, [rbp - 0xb0]
mov esi, 0x401ce3
mov rdi, rax
call 0x400d50
add dword [rbp - 0xd0], 1
jmp 0x40149b
lea rax, [rbp - 0xb0]
lea rdx, [rbp - 0x90]
add rdx, 0x20
mov rsi, rax
mov rdi, rdx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator_
lea rax, [rbp - 0xb0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov eax, dword [rbp - 0xf4]
test eax, eax
je 0x4015b0
mov edx, dword [rbp - 0xe8]
mov eax, dword [rbp - 0xf4]
sub edx, eax
mov eax, edx
mov dword [rbp - 0xe8], eax
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rdx, [rbp - 0xfd]
lea rax, [rbp - 0xb0]
mov esi, 0x401cf8
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov dword [rbp - 0xcc], 0
mov eax, dword [rbp - 0xf4]
cmp dword [rbp - 0xcc], eax
jge 0x401584
lea rax, [rbp - 0xb0]
mov esi, 0x401ce6
mov rdi, rax
call 0x400d50
add dword [rbp - 0xcc], 1
jmp 0x401559
lea rax, [rbp - 0xb0]
lea rdx, [rbp - 0x90]
add rdx, 0x40
mov rsi, rax
mov rdi, rdx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator_
lea rax, [rbp - 0xb0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
lea rdx, [rbp - 0xe8]
lea rax, [rbp - 0xf0]
mov rsi, rdx
mov rdi, rax
call sym.std::max_int_
mov rdx, rax
lea rax, [rbp - 0xf8]
mov rsi, rdx
mov rdi, rax
call sym.std::max_int_
mov eax, dword [rax]
mov dword [rbp - 0xc4], eax
mov edx, dword [rbp - 0xf8]
mov eax, dword [rbp - 0xf0]
add edx, eax
mov eax, dword [rbp - 0xe8]
add eax, edx
sub eax, dword [rbp - 0xc4]
cmp eax, dword [rbp - 0xc4]
jge 0x401631
mov esi, str.IMPOSSIBLE
mov edi, obj.std::cout
call sym.std::operator___std::char_traits_char__
mov esi, sym.std::endl_char_std::char_traits_char__
mov rdi, rax
call sym.std::ostream::operator__
mov r12d, 0
jmp 0x4018b7
mov byte [rbp - 0x30], 0x52
mov byte [rbp - 0x2f], 0x59
mov byte [rbp - 0x2e], 0x42
mov eax, dword [rbp - 0xf8]
mov dword [rbp - 0xc0], eax
mov eax, dword [rbp - 0xf0]
mov dword [rbp - 0xbc], eax
mov eax, dword [rbp - 0xe8]
mov dword [rbp - 0xb8], eax
mov eax, dword [rbp - 0xf8]
cmp eax, dword [rbp - 0xc4]
je 0x401733
mov eax, dword [rbp - 0xf0]
cmp eax, dword [rbp - 0xc4]
jne 0x4016d4
lea rax, [rbp - 0x30]
lea rdx, [rax + 1]
lea rax, [rbp - 0x30]
mov rsi, rdx
mov rdi, rax
call sym.std::swap_char_
lea rax, [rbp - 0xc0]
lea rdx, [rax + 4]
lea rax, [rbp - 0xc0]
mov rsi, rdx
mov rdi, rax
call sym.std::swap_int_
lea rax, [rbp - 0x90]
lea rdx, [rax + 0x20]
lea rax, [rbp - 0x90]
mov rsi, rdx
mov rdi, rax
call sym.std::swap_char_std::char_traits_char__std::allocator_char__
jmp 0x401733
mov eax, dword [rbp - 0xe8]
cmp eax, dword [rbp - 0xc4]
jne 0x401733
lea rax, [rbp - 0x30]
lea rdx, [rax + 2]
lea rax, [rbp - 0x30]
mov rsi, rdx
mov rdi, rax
call sym.std::swap_char_
lea rax, [rbp - 0xc0]
lea rdx, [rax + 8]
lea rax, [rbp - 0xc0]
mov rsi, rdx
mov rdi, rax
call sym.std::swap_int_
lea rax, [rbp - 0x90]
lea rdx, [rax + 0x40]
lea rax, [rbp - 0x90]
mov rsi, rdx
mov rdi, rax
call sym.std::swap_char_std::char_traits_char__std::allocator_char__
mov dword [rbp - 0xc8], 0
mov eax, dword [rbp - 0xc0]
cmp eax, dword [rbp - 0xc8]
jle 0x4018a2
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::allocator
lea rdx, [rbp - 0xfd]
lea rax, [rbp - 0xb0]
mov esi, 0x401cfd
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
cmp dword [rbp - 0xc8], 0
jne 0x4017ac
lea rdx, [rbp - 0x90]
lea rax, [rbp - 0xb0]
mov rsi, rdx
mov rdi, rax
call 0x400d40
jmp 0x4017c4
movzx eax, byte [rbp - 0x30]
movsx edx, al
lea rax, [rbp - 0xb0]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
mov eax, dword [rbp - 0xbc]
cmp eax, dword [rbp - 0xc8]
jle 0x401812
cmp dword [rbp - 0xc8], 0
jne 0x4017fa
lea rax, [rbp - 0x90]
lea rdx, [rax + 0x20]
lea rax, [rbp - 0xb0]
mov rsi, rdx
mov rdi, rax
call 0x400d40
jmp 0x401812
movzx eax, byte [rbp - 0x2f]
movsx edx, al
lea rax, [rbp - 0xb0]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
mov eax, dword [rbp - 0xc0]
sub eax, dword [rbp - 0xc8]
lea edx, [rax - 1]
mov eax, dword [rbp - 0xb8]
cmp edx, eax
jge 0x401873
mov eax, dword [rbp - 0xc0]
sub eax, 1
cmp eax, dword [rbp - 0xc8]
jne 0x40185b
lea rax, [rbp - 0x90]
lea rdx, [rax + 0x40]
lea rax, [rbp - 0xb0]
mov rsi, rdx
mov rdi, rax
call 0x400d40
jmp 0x401873
movzx eax, byte [rbp - 0x2e]
movsx edx, al
lea rax, [rbp - 0xb0]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
lea rax, [rbp - 0xb0]
mov rsi, rax
mov edi, obj.std::cout
call sym.std::operator___char_std::char_traits_char__std::allocator_char__
lea rax, [rbp - 0xb0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
add dword [rbp - 0xc8], 1
jmp 0x40173d
mov esi, sym.std::endl_char_std::char_traits_char__
mov edi, obj.std::cout
call sym.std::ostream::operator__
mov r12d, 1
lea rbx, [rbp - 0x90]
add rbx, 0x60
lea rax, [rbp - 0x90]
cmp rbx, rax
je 0x4018dc
sub rbx, 0x20
mov rdi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
jmp 0x4018c2
cmp r12d, 1
jmp 0x401a43
mov r13, rax
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
jmp 0x40191f
mov r13, rax
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
jmp 0x40191f
mov r13, rax
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
test rbx, rbx
je 0x401947
mov eax, 2
sub rax, r12
shl rax, 5
lea r12, [rbx + rax]
cmp r12, rbx
je 0x401947
sub r12, 0x20
mov rdi, r12
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
jmp 0x401934
mov rax, r13
mov rdi, rax
call sym.imp._Unwind_Resume
mov rbx, rax
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov r12, rbx
jmp 0x401a13
mov rbx, rax
lea rax, [rbp - 0xb0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov r12, rbx
jmp 0x401a13
mov rbx, rax
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov r12, rbx
jmp 0x401a13
mov rbx, rax
lea rax, [rbp - 0xb0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov r12, rbx
jmp 0x401a13
mov rbx, rax
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov r12, rbx
jmp 0x401a13
mov rbx, rax
lea rax, [rbp - 0xb0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov r12, rbx
jmp 0x401a13
mov rbx, rax
lea rax, [rbp - 0xfd]
mov rdi, rax
call sym.std::allocator_char_::_allocator
mov r12, rbx
jmp 0x401a13
mov rbx, rax
lea rax, [rbp - 0xb0]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov r12, rbx
jmp 0x401a13
mov r12, rax
lea rbx, [rbp - 0x90]
add rbx, 0x60
lea rax, [rbp - 0x90]
cmp rbx, rax
je 0x401a38
sub rbx, 0x20
mov rdi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
jmp 0x401a1e
mov rax, r12
mov rdi, rax
call sym.imp._Unwind_Resume
mov rax, qword [rbp - 0x28]
xor rax, qword fs:[0x28]
je 0x401a57
call sym.imp.__stack_chk_fail
add rsp, 0xf8
pop rbx
pop r12
pop r13
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rax, qword [rbp - 8]
mov edx, dword [rax]
mov rax, qword [rbp - 0x10]
mov eax, dword [rax]
cmp edx, eax
jge 0x401a87
mov rax, qword [rbp - 0x10]
jmp 0x401a8b
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
mov rax, qword [rbp - 0x18]
mov rdi, rax
call sym.std::move_char__
movzx eax, byte [rax]
mov byte [rbp - 9], al
mov rax, qword [rbp - 0x20]
mov rdi, rax
call sym.std::move_char__
movzx edx, byte [rax]
mov rax, qword [rbp - 0x18]
mov byte [rax], dl
lea rax, [rbp - 9]
mov rdi, rax
call sym.std::move_char__
movzx edx, byte [rax]
mov rax, qword [rbp - 0x20]
mov byte [rax], dl
nop
mov rax, qword [rbp - 8]
xor rax, qword fs:[0x28]
je 0x401b0b
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
mov rax, qword [rbp - 0x18]
mov rdi, rax
call sym.std::move_int__
mov eax, dword [rax]
mov dword [rbp - 0xc], eax
mov rax, qword [rbp - 0x20]
mov rdi, rax
call sym.std::move_int__
mov edx, dword [rax]
mov rax, qword [rbp - 0x18]
mov dword [rax], edx
lea rax, [rbp - 0xc]
mov rdi, rax
call sym.std::move_int__
mov edx, dword [rax]
mov rax, qword [rbp - 0x20]
mov dword [rax], edx
nop
mov rax, qword [rbp - 8]
xor rax, qword fs:[0x28]
je 0x401b88
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::swap
nop
leave
ret
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x201226]
push rbp
lea rbp, [rip + 0x20122e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401c06
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401bf0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, 0
add byte [rax], al
add eax, 0x6000000
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], cl
or byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
or al, byte [rax]
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
call qword [rdx + 0x47]
add byte [rsi + 0x59], dl
add byte [rdi + 0x42], cl
add byte [rcx + 0x4d], cl
push r8
push r11
push rbx
add byte [r10], r10b
push rdx
add byte [rcx], bl
add byte [rdi + 0x52], al
add byte [rax], al
jae 0x401d67
and byte [rbx], ah
add byte [rdx], bh
and byte [rax], al
add dword [rbx], ebx
add edi, dword [rbx]
jl 0x401d0e
add byte [rax], al
add byte [rax], al
add al, ch
out dx, eax
dec eax
add byte [rax], al
add byte [rax - 0xf], ch
lcall [rax + 0x5e000000]
inc dword [rax + 1]
add byte [rax], al
out dx, al
jmp qword [rax]
add al, byte [rax]
add byte [rbx + rsi*8], ch
inc dword [rax + 2]
add byte [rax], al
call qword [rax]
add dword [rax], eax
add byte [rbp - 3], bl
jmp qword [rax + 1]
add byte [rax], al
test ebp, edi
inc dword [rax - 0x6cffffff]
std
jmp qword [rax + 0x5000001]
inc eax
add dword [rax], eax
add byte [rbx], dl
jmp rax
add dword [rax], eax
add byte [rdx + 0xfffffe], al
add al, byte [rax]
add byte [rax + 0x60fffffe], ch
add al, byte [rax]
add byte [rax], bl
ljmp [rax + 2]
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401da7
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
enter -0x10, -1
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401dd7
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sbb bh, ch
push qword [rax + 1]
add byte [rax], al
add byte [rsi], cl
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x401e19
add esp, dword [rax]
add byte [rbx], al
sbb ecx, dword [rdi + rax]
or byte [rax + 0x2c000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
sub dh, dl
lcall [rbx]
or al, byte [rax]
add byte [rsp + rcx*8], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
lea r8, [rbx]
mov word [rbx + rax*4], es
add eax, 0xc0a0a03
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rsi], dl
int1
call qword [rax]
adc byte [rsi + 0x60d4302], al
add cl, byte [rbx + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
mov ah, 0
add byte [rax], al
cmc
sti
ljmp [rax]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
movsxd rcx, dword [rdi + rax]
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add ch, bh
sti
dec dword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
hlt
add byte [rax], al
add bl, ch
sti
push qword [rdx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add ch, byte [rbp + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
adc al, 1
add byte [rax], al
cmp eax, 0xefffffc
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
xor al, 1
add byte [rax], al
sub edi, esp
ljmp [rdi]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add ch, byte [rdx + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
push rsp
add dword [rax], eax
add byte [rdx - 4], bh
jmp qword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
je 0x401f2f
add byte [rax], al
add byte ds:[rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
jns 0x401f4f
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
xchg eax, esp
add dword [rax], eax
add ah, ah
call qword [rip]
adc byte [rsi + 0x60d4302], al
push rax
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx + rax - 0x3c00000], dh
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x401faa
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
cld
add dword [rax], eax
add byte [rax - 4], ch
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
pop rdx
xor eax, 0x4ba
movabs byte [0x505df00119b0505], al
scasd eax, dword [rdi]
adc dword [rax], eax
pushfq
add eax, 0xf90011c3
add eax, 0xb4001288
movabs byte [0x12bc0508b30012], al
out dx, al
or byte [rbx], ch
rcl dword [rdx], cl
add cl, dh
or dword [rip - 0x53ffed16], eax
or ch, byte [rbx]
adc dword [rbx], 0x120bca00
adc eax, dword [rax]
stosb byte [rdi], al
add eax, 0xdb001398
loop 0x40201c
scasd eax, dword [rdi]
adc eax, dword [rax]
loop 0x402030
add eax, 0x830013c6
adc dh, dh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
xor al, 0x10
add byte [rax], al
add byte [rax], al
add byte [rax], ah
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rbx], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs byte [0xc00000000000003], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rsp + rbx], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sub eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 0x4005], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xa], bh
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add al, ch
or dword [rax], eax
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4009], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
push rsi
or eax, 0x40
add byte [rax], al
or ax, 0x40
add byte [rax], al
add byte [rax], al
jbe 0x40305f
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400d], al
add byte [rax], al
add byte [rsi + 0x400d], dl
add byte [rax], al
add byte [rsi + 0x400d], ah
add byte [rax], al
add byte [rsi + 0x400d], dh
add byte [rax], al
add dh, al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
out 0xd, al
add byte [rax], al
add byte [rax], al
add dh, dh
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xe], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xe], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x403150
je 0x403159
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x403167
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x403164
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002d000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 0x4005], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rax + 0x4009], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add al, ch
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or dword [rax], eax
js 0x4031fc
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add al, al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or eax, dword [rax]
ror byte [rax + rax*2], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400e6000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0xe], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rsp + rbx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax], dh
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rax], cl
sbb eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, byte [rax]
mov byte [rip + 0x40], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
int3
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], dl
call 0x40932a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
enter 0x6030, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb eax, dword [rax]
loopne 0x4033d2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400e], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], ah
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rbx], bl
add byte [rax], dl
xor esp, dword [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xf], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
call 0x4094c2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ch
add byte [rax], dl
add byte [rax], bh
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, al
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rcx], bh
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rdx], bh
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
add byte [rax], al
add byte [rcx], al
add byte [rbx], bl
add byte [rcx], dl
xor esp, dword [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rax], 0x10000
adc byte [rax], al
cmp al, 0x1c
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x1c], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x1c], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 1], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 1], dl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
je 0x403593
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], cl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dh, 1
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
push rax
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xlatb
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cld
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x1c], bl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rdx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
pop rsp
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp eax, 0x1000002
add byte [rax], dl
add byte [rax + 0x1c], ah
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdx
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x403654
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
push 0x401c
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edi
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], ch
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000002
add byte [rax], dl
add byte [rax + 0x1c], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 2, eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
je 0x4036be
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lsl eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x1c], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdi
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x401c], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
stosd dword [rdi], eax
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x401c], cl
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], cl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax + rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x401c], dl
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax + rax]
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x401c], bl
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x40378e
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
pushfq
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x401c], ah
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
int3
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rbx + 0x40], ah
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x401c], ch
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb dword [rip + 0x10000], eax
adc byte [rax], al
lodsb al, byte [rsi]
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
mov al, 0x1c
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
mov ah, 0x1c
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea eax, [rip + 0x10000]
adc byte [rax], al
mov eax, 0x401c
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov bl, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov esp, 0x401c
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd qword [rip + 0x10000]
adc byte [rax], al
rcr byte [rax + rax*2], 0
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rsi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rsi], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
enter 0x401c, 0
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
int3
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jge 0x4038c8
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
rcr byte [rax + rax*2], 1
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0xd800100001000006], eax
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add al, byte [rax]
add dh, dh
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte ds:[rax], al
add byte [rax], al
add byte [rax], al
add cl, bh
add byte [rax], al
add al, byte [rax]
add byte [rax + rdx], dh
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000007], cl
add byte [rdx], dl
add al, cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], ah
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
or byte [rip + 0x40], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp al, byte [rdi]
add byte [rax], al
add dword [rax], eax
sbb dword [rax], eax
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 7], dl
add byte [rax], al
add byte [rax], al
adc al, 0
clc
sub eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x409a02
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rax], dh
add byte [rcx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bh
or dword [rax], eax
add byte [rax], ah
add byte [rdx], bl
add al, cl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jge 0x403a19
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
loopne 0x403a4a
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x22000007], dl
add byte [rsi], cl
add byte [rdx + 0x401b], cl
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rdi], 0x220000
add byte [rbx + 0x401a], bl
add byte [rax], al
add byte [rdx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or ecx, dword [rax]
add byte [rax], al
adc al, byte [rax]
add byte [rax], ah
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
or dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xe], dh
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
or byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
or byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x12000008], dl
add byte [rdi], cl
add byte [rsp + rbx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bh
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 8], ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rcx + 0x120000], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0xd], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 9], bl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ja 0x403b9b
add byte [rax], al
and al, byte [rax]
add byte [rdx + 0x10], cl
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x12000009], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
or dword [rax], eax
add byte [rcx], dl
add byte [rax], dl
add byte [rax], dh
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fisttp word [rcx]
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
stc
or dword [rax], eax
add byte [rax], dl
add byte [rdx], bl
add al, cl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xa], dl
add byte [rax], al
adc dword [rdx], eax
sbb al, byte [rax]
fdiv dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rcx], bl
add byte [rcx], dl
add byte [rbx], bl
add byte [rax], al
xor ah, byte [rax]
add byte [rax], al
add byte [rax], al
adc byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jae 0x403c5c
add byte [rax], al
adc dword [rdx], eax
sbb al, byte [rax]
sal byte [rax], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1200000a], al
add byte [rsi], cl
add byte [rax + 0x401b], dh
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
or al, byte [rax]
add byte [rax], dl
add byte [rbx], bl
add al, bl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, dx
or al, byte [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rbp + 0x1a], ah
add byte [rax], al
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
or eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rbp + 0x401a], cl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rcx], dh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rax
or eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rip + 0x401b], cl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x1200000b], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rcx + 0x120000], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsp
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
sbb byte [rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rcx + 0x120000], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ror byte [rbx], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax + rax], cl
add byte [rdx], dl
add byte [rax], al
add al, dh
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push 0x1200000c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000c], bh
add byte [rdx], bl
add al, bl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ror byte [rax + rax], 0
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fimul dword [rax + rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bh
or al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0xd], ch
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg dword [rip + 0x220000], ecx
add byte [rbx], bl
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
outsd dx, dword [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1200000d], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
adc al, byte [rax]
add byte [rsi + 0xf], ah
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rdx + 0x1200000a], cl
add byte [rbx], cl
add al, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x403f0a
jne 0x403efe
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x403ebe
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403f3c
jb 0x403f42
pop rdi
jne 0x403f4b
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x403f45
je 0x403f41
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403f61
jb 0x403f67
pop rdi
jne 0x403f70
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x403f73
jns 0x403f63
outsb dx, byte gs:[rsi]
je 0x403f7a
jns 0x403f0a
jb 0x403f6e
insd dword [rdi], dx
pop rdi
jne 0x403f80
insd dword [rdi], dx
jns 0x403f16
pop rdi
pop rdi
jb 0x403f7c
insd dword [rdi], dx
pop rdi
jne 0x403f8e
insd dword [rdi], dx
jns 0x403f83
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403f8e
jns 0x403f8e
outsb dx, byte gs:[rsi]
je 0x403fa5
jns 0x403f35
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x5a], bl
push rbx
je 0x403f8c
xor dword [rcx], edi
jo 0x403fad
movsxd rsp, dword gs:[rbp + 0x77]
imul esi, dword [rbx + 0x65], 0x6e6f635f
jae 0x403fc5
jb 0x403fc8
movsxd rsi, dword [rax + rax + 0x5f]
pop rdx
push rbx
je 0x403fa7
xor dword [rbx], esi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x403fc6
jb 0x403fd1
add byte [rdi + 0x5a], bl
push rbx
je 0x403fbc
imul esp, dword ss:[rdi + 0x6e], 0x65726f
pop rdi
pop rdx
push rbx
je 0x403fc9
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x403ff0
movsxd rdi, dword [rax + 0x78]
xor r14b, byte [rcx]
pop rdi
pop rdi
jne 0x40400b
je 0x404000
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x5f]
jo 0x404017
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x5a5f0045
push rbx
je 0x403fff
xor dword [rax], esi
jb 0x40401a
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x404011
xor dword [rcx], esi
je 0x40403b
jns 0x40402a
je 0x40403c
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x404024
xor dword [rax], esi
outsd dx, dword fs:[rsi]
jo 0x404053
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x40401c
xor eax, 0x65676572
js 0x404051
movsxd rbp, dword [rdi + 0x6e]
jae 0x40406b
outsb dx, byte [rsi]
je 0x40406e
xor rax, 0x73616369
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x40403b
xor eax, 0x65676572
js 0x404070
movsxd rbp, dword [rdi + 0x6e]
jae 0x40408a
outsb dx, byte [rsi]
je 0x40408d
outsb dx, byte ss:[rsi]
outsd dx, dword [rsi]
jae 0x404095
jae 0x404068
add byte [rdi + 0x5a], bl
push rbx
je 0x40405b
xor eax, 0x65676572
js 0x404090
movsxd rbp, dword [rdi + 0x6e]
jae 0x4040aa
outsb dx, byte [rsi]
je 0x4040ad
cmp byte [rdi + 0x70], r13b
je 0x4040a9
insd dword [rdi], dx
imul edi, dword [rdx + 0x65], 0x5a5f0045
push rbx
je 0x40407d
xor eax, 0x65676572
js 0x4040b2
movsxd rbp, dword [rdi + 0x6e]
jae 0x4040cc
outsb dx, byte [rsi]
je 0x4040cf
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x4040ca
add byte [r15 + 0x5a], r11b
push rbx
je 0x40409e
xor eax, 0x65676572
js 0x4040d3
movsxd rbp, dword [rdi + 0x6e]
jae 0x4040ed
outsb dx, byte [rsi]
je 0x4040f0
xor qword [rax], r14
push r11
movsxd rsi, dword [rdx + 0x69]
jo 0x4040fe
add byte [r15 + 0x5a], r11b
push rbx
je 0x4040c3
xor eax, 0x65676572
js 0x4040f8
movsxd rbp, dword [rdi + 0x6e]
jae 0x404112
outsb dx, byte [rsi]
je 0x404115
xor rax, 0x69736162
movsxd rax, dword [rbp]
pop rdi
pop rdx
push rbx
je 0x4040e2
xor eax, 0x65676572
js 0x404117
movsxd rbp, dword [rdi + 0x6e]
jae 0x404131
outsb dx, byte [rsi]
je 0x404134
cmp byte [rbp + 0x78], r12b
je 0x40412c
outsb dx, byte [rsi]
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x404104
xor eax, 0x65676572
js 0x404139
movsxd rbp, dword [rdi + 0x6e]
jae 0x404153
outsb dx, byte [rsi]
je 0x404156
xor r12, qword [rcx + 0x77]
imul eax, dword [rbp], 0x5f
pop rdx
push rbx
je 0x404121
xor eax, 0x65676572
js 0x404156
movsxd rbp, dword [rdi + 0x6e]
jae 0x404170
outsb dx, byte [rsi]
je 0x404173
xor al, 0x67
jb 0x40416a
jo 0x40414c
add byte [rdi + 0x5a], bl
push rbx
je 0x40413f
xor eax, 0x65676572
js 0x404174
movsxd rbp, dword [rdi + 0x6e]
jae 0x40418e
outsb dx, byte [rsi]
je 0x404191
xor rax, 0x65726765
jo 0x40416b
add byte [rdi + 0x5a], bl
push rbx
je 0x40415e
xor eax, 0x65676572
js 0x404193
movsxd rbp, dword [rdi + 0x6e]
jae 0x4041ad
outsb dx, byte [rsi]
je 0x4041b0
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4041a7
push 0x6665645f
jne 0x4041b8
je 0x404193
add byte [rdi + 0x5a], bl
push rbx
je 0x404186
xor eax, 0x65676572
js 0x4041bb
movsxd rbp, dword [rdi + 0x6e]
jae 0x4041d5
outsb dx, byte [rsi]
je 0x4041d8
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4041cf
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x4041ae
xor eax, 0x65676572
js 0x4041e3
movsxd rbp, dword [rdi + 0x6e]
jae 0x4041fd
outsb dx, byte [rsi]
je 0x404200
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4041f7
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x4041d6
xor eax, 0x65676572
js 0x40420b
movsxd rbp, dword [rdi + 0x6e]
jae 0x404225
outsb dx, byte [rsi]
je 0x404228
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40421f
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
ja 0x40420b
add byte [rdi + 0x5a], bl
push rbx
je 0x4041fe
xor eax, 0x65676572
js 0x404233
movsxd rbp, dword [rdi + 0x6e]
jae 0x40424d
outsb dx, byte [rsi]
je 0x404250
xor qword [rbx], r14
insd dword [rdi], dx
je 0x404247
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
ja 0x404233
add byte [rdi + 0x5a], bl
push rbx
je 0x404226
xor eax, 0x65676572
js 0x40425b
movsxd rbp, dword [rdi + 0x6e]
jae 0x404275
outsb dx, byte [rsi]
je 0x404278
cmp qword [rbp + 0x61], r13
je 0x40426e
push 0x796e615f
add byte [r15 + 0x5a], r11b
push rbx
je 0x404249
xor eax, 0x65676572
js 0x40427e
movsxd rbp, dword [rdi + 0x6e]
jae 0x404298
outsb dx, byte [rsi]
je 0x40429b
xor qword [rbp*2 + 0x68637461], r14
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
je 0x404294
outsb dx, byte [rsi]
jne 0x4042a4
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x404272
xor eax, 0x65676572
js 0x4042a7
movsxd rbp, dword [rdi + 0x6e]
jae 0x4042c1
outsb dx, byte [rsi]
je 0x4042c4
xor qword [rsi], r14
insd dword [rdi], dx
je 0x4042bb
push 0x6e6f635f
je 0x4042c8
outsb dx, byte [rsi]
jne 0x4042d1
jne 0x4042d7
add byte [r15 + 0x5a], r11b
push rbx
je 0x40429d
xor eax, 0x65676572
js 0x4042d2
movsxd rbp, dword [rdi + 0x6e]
jae 0x4042ec
outsb dx, byte [rsi]
je 0x4042ef
xor qword [rsi], r14
insd dword [rdi], dx
je 0x4042e6
push 0x6572705f
jbe 0x4042e9
jbe 0x4042ee
imul ebp, dword [rbp + rax*2], 0x534e5a5f
je 0x4042c8
xor eax, 0x65676572
js 0x4042fd
movsxd rbp, dword [rdi + 0x6e]
jae 0x404317
outsb dx, byte [rsi]
je 0x40431a
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x40431b
je 0x404310
jne 0x404323
je 0x4042fe
add byte [rdi + 0x5a], bl
push rbx
je 0x4042f1
xor eax, 0x65676572
js 0x404326
movsxd rbp, dword [rdi + 0x6e]
jae 0x404340
outsb dx, byte [rsi]
je 0x404343
xor qword [rax], r14
outsw dx, word [rsi]
jb 0x404344
je 0x404339
jae 0x404341
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x404316
xor eax, 0x65676572
js 0x40434b
movsxd rbp, dword [rdi + 0x6e]
jae 0x404365
outsb dx, byte [rsi]
je 0x404368
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x404369
je 0x40435e
outsb dx, byte [rsi]
outsd dx, dword [rsi]
pop rdi
movsxd rbp, dword [rdi + 0x70]
jns 0x40434c
add byte [rdi + 0x5a], bl
push rbx
je 0x40433f
xor eax, 0x65676572
js 0x404374
movsxd rbp, dword [rdi + 0x6e]
jae 0x40438e
outsb dx, byte [rsi]
je 0x404391
xor qword [rdi], r14
outsw dx, word [rsi]
jb 0x404392
je 0x404387
imul si, word [rdx + 0x73], 0x5f74
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
jns 0x404378
add byte [rdi + 0x5a], bl
push rbx
je 0x40436b
xor eax, 0x65676572
js 0x4043a0
movsxd rbp, dword [rdi + 0x6e]
jae 0x4043ba
outsb dx, byte [rsi]
je 0x4043bd
xor qword [rbx], r14
jb 0x4043c2
outsd dx, dword [rsi]
jb 0x4043b2
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x4043bf
add byte [r15 + 0x5a], r11b
push rbx
je 0x404393
xor eax, 0x65676572
js 0x4043c8
movsxd rbp, dword [rdi + 0x6e]
jae 0x4043e2
outsb dx, byte [rsi]
je 0x4043e5
xor qword [rcx], r14
jb 0x4043ea
outsd dx, dword [rsi]
jb 0x4043da
movsxd rsi, dword [rcx + rdi*2 + 0x70]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x4043b9
xor eax, 0x65676572
js 0x4043ee
movsxd rbp, dword [rdi + 0x6e]
jae 0x404408
outsb dx, byte [rsi]
je 0x40440b
xor qword [rdx], r14
jb 0x404410
outsd dx, dword [rsi]
jb 0x404400
jae 0x404407
jo 0x40440c
add byte [r15 + 0x5a], r11b
push rbx
je 0x4043e0
xor eax, 0x65676572
js 0x404415
movsxd rbp, dword [rdi + 0x6e]
jae 0x40442f
outsb dx, byte [rsi]
je 0x404432
xor qword [rbx], r14
jb 0x404437
outsd dx, dword [rsi]
jb 0x404427
movsxd rbp, dword [rbx + 0x72]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x404408
xor eax, 0x65676572
js 0x40443d
movsxd rbp, dword [rdi + 0x6e]
jae 0x404457
outsb dx, byte [rsi]
je 0x40445a
xor qword [rcx], r14
jb 0x40445f
outsd dx, dword [rsi]
jb 0x40444f
jb 0x404454
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40442e
xor eax, 0x65676572
js 0x404463
movsxd rbp, dword [rdi + 0x6e]
jae 0x40447d
outsb dx, byte [rsi]
je 0x404480
xor qword [rcx], r14
jb 0x404485
outsd dx, dword [rsi]
jb 0x404475
jo 0x404479
jb 0x40447f
outsb dx, byte [rsi]
add byte [r15 + 0x5a], r11b
push rbx
je 0x404454
xor eax, 0x65676572
js 0x404489
movsxd rbp, dword [rdi + 0x6e]
jae 0x4044a3
outsb dx, byte [rsi]
je 0x4044a6
xor qword [rcx], r14
jb 0x4044ab
outsd dx, dword [rsi]
jb 0x40449b
jb 0x4044a0
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40447a
xor eax, 0x65676572
js 0x4044af
movsxd rbp, dword [rdi + 0x6e]
jae 0x4044c9
outsb dx, byte [rsi]
je 0x4044cc
xor qword [0x726f7272], r14
pop rdi
jb 0x4044c9
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4044a3
xor eax, 0x65676572
js 0x4044d8
movsxd rbp, dword [rdi + 0x6e]
jae 0x4044f2
outsb dx, byte [rsi]
je 0x4044f5
xor qword [rcx], r14
jb 0x4044fa
outsd dx, dword [rsi]
jb 0x4044ea
jb 0x4044ee
outsb dx, byte [rsi]
add byte gs:[r15d + 0x5a], r11b
push rbx
je 0x4044c9
xor eax, 0x65676572
js 0x4044fe
movsxd rbp, dword [rdi + 0x6e]
jae 0x404518
outsb dx, byte [rsi]
je 0x40451b
xor qword [rcx], r14
jb 0x404520
outsd dx, dword [rsi]
jb 0x404510
jae 0x404523
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4044ef
xor eax, 0x65676572
js 0x404524
movsxd rbp, dword [rdi + 0x6e]
jae 0x40453e
outsb dx, byte [rsi]
je 0x404541
xor qword [rip + 0x6f727265], r14
jb 0x404536
jb 0x404541
jo 0x404543
je 0x404526
add byte [rdi + 0x5a], bl
push rbx
je 0x404519
xor eax, 0x65676572
js 0x40454e
movsxd rbp, dword [rdi + 0x6e]
jae 0x404568
outsb dx, byte [rsi]
je 0x40456b
xor qword [rsi], r14
jb 0x404570
outsd dx, dword [rsi]
jb 0x404560
movsxd rbp, dword [rdi + 0x6d]
jo 0x404572
js 0x404572
je 0x404584
add byte [r15 + 0x5a], r11b
push rbx
je 0x404544
xor eax, 0x65676572
js 0x404579
movsxd rbp, dword [rdi + 0x6e]
jae 0x404593
outsb dx, byte [rsi]
je 0x404596
xor qword [rcx], r14
jb 0x40459b
outsd dx, dword [rsi]
jb 0x40458b
jae 0x4045a2
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x404571
pop rdi
pop rdi
je 0x4045a0
imul ebp, dword [rsp + rcx*2 + 0x31], 0x5f535f39
imul ebp, dword [rsi + 0x76], 0x64696c61
pop rdi
jae 0x4045c5
je 0x4045b9
pop rdi
imul esp, dword [rbp + rax*2], 0x31345a5f
pop rdi
pop rdi
jae 0x4045d5
je 0x4045cd
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x4045db
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x4045f1
jb 0x4045f4
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x404609
pop rdi
pop r15
insd dword [rdi], dx
imul ebp, dword [rsi], 0x52465f5f
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x40464c
jns 0x40464c
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x40465d
jns 0x40465d
jae 0x404674
jb 0x404677
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
push rbx
je 0x404645
movsxd rbp, dword [rcx + 0x6e]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x40465c
jae 0x4046a1
jo 0x404676
movsxd rdx, dword [rbx + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404696
je 0x4046ab
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
jbe 0x40469a
push rbx
je 0x404683
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x4046c2
movsxd rbx, dword [rdi + 0x73]
je 0x4046d0
imul ebp, dword [rsi + 0x67], 0x545f5449
xor byte [rdi + 0x54], bl
xor dword [rdi + 0x45], ebx
push r11
cmp dword [rdi], ebx
pop rdi
pop rdx
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x4046bd
imul eax, dword [rax + 0x40], 0x42494c47
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x4046c0
jae 0x404705
jo 0x4046da
movsxd rax, dword [rbp + 0x76]
push rdx
push rsp
pop rdi
push rbx
xor dword [rdi], ebx
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x404728
jb 0x40472b
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x40471d
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x40473e
jae 0x4046ce
pop rdi
pop rdx
push rbx
je 0x40470c
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x404773
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x404778
pop rdi
je 0x404780
js 0x404786
je 0x40475f
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x404769
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x4047a8
movsxd rbx, dword [rdi + 0x73]
je 0x4047b6
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4047b1
je 0x4047c6
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
jo 0x4047af
push r10
push r11
xor al, 0x5f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x4047b7
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x4047f6
movsxd rbx, dword [rdi + 0x73]
je 0x404804
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4047ff
je 0x404814
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
jo 0x4047fd
push r8
movsxd rax, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x404804
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x404859
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5a], bl
push rax
jb 0x40487d
insb byte [rdi], dx
insd dword [rdi], dx
xor eax, 0x766c6f73
jbe 0x40481b
pop rdi
pop rdx
push rbx
je 0x40488c
jae 0x40486b
push rbx
je 0x404856
xor dword [rbx + 0x68], esp
jb 0x40488a
je 0x40489f
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x40486a
xor esp, dword [rdx + 0x61]
jae 0x4048a7
movsxd rbx, dword [rdi + 0x6f]
jae 0x4048b7
jb 0x4048aa
insd dword [rdi], dx
movsxd rdx, dword [r15 + rbx*2 + 0x45]
push rbx
xor eax, 0x634b505f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop r15
jae 0x4048da
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x4048db
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x4048f0
pop rdi
jae 0x404906
jb 0x404909
add byte [rdi + 0x5a], bl
push rbx
je 0x4048d3
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404912
movsxd rbx, dword [rdi + 0x73]
je 0x404920
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40491b
je 0x404930
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rbp + 0x76], r8d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5f], bl
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x404925
movsxd rbp, dword [rdi + 0x75]
je 0x404936
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
jae 0x404977
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x40495d
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x40499c
movsxd rbx, dword [rdi + 0x73]
je 0x4049aa
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4049a5
je 0x4049ba
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor al, 0x73
ja 0x4049ba
jo 0x4049a0
push rdx
push rbx
xor al, 0x5f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5f], bl
jae 0x4049e8
pop rdi
jae 0x4049ec
jb 0x4049ef
add byte [rdi + 0x5a], bl
push rbx
je 0x4049b4
insd dword [rdi], dx
js 0x4049ce
imul eax, dword [rbp + 0x52], 0x535f544b
xor bl, byte [rdi + 0x53]
xor bl, byte [rdi]
pop rdi
pop rdx
push rbx
je 0x4049cb
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x404a00
push r10
movsxd rax, dword [rbp + 0x4f]
push rbx
je 0x4049d5
jb 0x404a0c
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x404a10
pop rdi
jb 0x404a13
jb 0x404a17
outsb dx, byte [rsi]
movsxd rsp, dword [rbp + 0x49]
push rsp
pop rdi
xor al, 0x74
jns 0x404a2d
push r11
xor bl, byte [rdi]
pop rdi
pop rdi
jae 0x404a3c
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404a19
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x404a4e
push r10
imul eax, dword [rbp + 0x4f], 0x3174534e
jb 0x404a5a
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x404a5e
pop rdi
jb 0x404a61
jb 0x404a65
outsb dx, byte [rsi]
movsxd rsp, dword [rbp + 0x49]
push rsp
pop rdi
xor al, 0x74
jns 0x404a7b
push r11
xor bl, byte [rdi]
pop rdi
pop rdx
push rbx
movsxd rax, dword [r13 + 0x44]
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
imul esi, dword [rdx + 0x73], 0x40695245
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x404a91
push rax
push rdx
push rbx
outsd dx, dword [rsi]
push rbx
pop rdi
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404a9f
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404ade
movsxd rbx, dword [rdi + 0x73]
je 0x404aec
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404ae7
je 0x404afc
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
push rbx
push r10
push r11
xor al, 0x5f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x404ae9
outsb dx, byte gs:[rsi]
insb byte [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404b23
je 0x404b38
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x404b03
xor esp, dword [rdx + 0x61]
jae 0x404b40
movsxd rbx, dword [rdi + 0x6f]
jae 0x404b50
jb 0x404b43
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404b35
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404b74
movsxd rbx, dword [rdi + 0x73]
je 0x404b82
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404b7d
je 0x404b92
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [r13 + 0x50], eax
movsxd rdx, dword [r10 + 0x4b]
push rbx
xor ebx, dword [rdi + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x404bb0
add byte [rdi + 0x5a], bl
push rbx
movsxd rax, dword [r13 + 0x43]
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
js 0x404be7
pop rdi
jo 0x404bd7
jb 0x404be7
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
push rbx
je 0x404bfc
jae 0x404bdb
movsxd rdx, dword [rbx + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404bfb
je 0x404c10
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
push rdx
push rbx
je 0x404be0
xor esp, dword [rdx + 0x61]
jae 0x404c1d
movsxd rbx, dword [rdi + 0x6f]
jae 0x404c2d
jb 0x404c20
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
push rdx
push rbx
je 0x404c04
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404c43
movsxd rbx, dword [rdi + 0x73]
je 0x404c51
imul ebp, dword [rsi + 0x67], 0x5f345349
push rbx
xor eax, 0x5f31545f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x55], bl
outsb dx, byte [rsi]
ja 0x404c6d
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x404c80
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
pop rdi
pop rdx
push rbx
je 0x404c50
jae 0x404c95
jo 0x404c6a
imul eax, dword [rbp + 0x76], 0x535f5452
xor dword [rdi], ebx
pop rdi
pop rdx
push rbx
je 0x404c68
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404ca7
movsxd rbx, dword [rdi + 0x73]
je 0x404cb5
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404cb0
je 0x404cc5
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
jo 0x404cae
movsxd r8, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rax], al
jae 0x404cf2
insd dword [rdi], dx
je 0x404cdd
add byte [rsi], ch
jae 0x404cf5
jb 0x404cf7
add byte [rsi], ch
jae 0x404cf1
jae 0x404cff
jb 0x404d01
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x404d02
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x404d10
outsb dx, byte cs:[esi]
jne 0x404cde
jne 0x404d1c
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x404cec
push 0x687361
jns 0x404d35
jae 0x404d42
insd dword [rdi], dx
add byte [rsi], ch
jns 0x404d3d
jae 0x404d45
jb 0x404cd3
outsb dx, byte cs:[esi]
jne 0x404d06
jbe 0x404d3f
jb 0x404d4f
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x404d13
jbe 0x404d4c
jb 0x404d5c
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x404d57
insb byte [rdi], dx
jns 0x404d66
add byte [rsi], ch
jb 0x404d61
insb byte [rdi], dx
jo 0x404d6d
je 0x404d03
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x404d3c
outsd dx, dword [esi]
je 0x404d12
je 0x404d7a
js 0x404d8b
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x404d90
je 0x404d86
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x404da9
jo 0x404dbd
pop rdi
je 0x404dad
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404dbb
jns 0x404d5c
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x404dd7
jns 0x404d68
push 0x63
jb 0x404d6d
jns 0x404ddf
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x404de9
je 0x404d7f
je 0x404de5
add byte [rsi], ch
jae 0x404dfc
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x404d93
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 1
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 2], bh
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rip + 0x40], al
add byte [rax], al
mov byte [rip], al
add byte [rax], al
and byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4009], ch
add byte [rax], al
add byte [rax + 9], ch
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
or dword [rax], eax
add byte [rax], al
add byte [rax], al
call 0x404fbe
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x404ff4
add byte [rax], al
add byte [rax], al
add byte [rax + 0xa], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
ror byte [rdx], 0
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rip + 0x19000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add al, dl
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add al, dh
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax + 1], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xe], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 0xe], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xe], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0xe], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dl, 0xd
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x600000001000000], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsp + rbx], ah
add byte [rax], al
add byte [rax], al
add byte [rsp + rbx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], dh
sbb al, 0
add byte [rax], al
add byte [rax], al
add al, bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
sbb eax, 0x40
add byte [rax], al
or byte [rip], bl
add byte [rax], al
jl 0x4051fa
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x401d], cl
add byte [rax], al
add byte [rax + 0x1d], cl
add byte [rax], al
add byte [rdx + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, cl
add byte [rax], al
add byte [rax], al
add ah, cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
call 0x4052e2
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sub eax, 0x60
add byte [rax], al
clc
sub eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
enter 0x30, 0
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rcx], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x40549a
add byte [rax], al
add byte [rax], al
add al, bl
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jne 0x40553e
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
add byte ds:[rax], al
add byte [rax], al
add byte [rax], al
in eax, 0xd
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
