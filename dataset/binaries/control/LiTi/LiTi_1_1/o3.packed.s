call 0x401100
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x400f18
add ebx, ebx
je 0x400ece
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x400f06
cmp rbp, -4
ja 0x400f06
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x400eee
add ecx, 4
mov dl, byte [rax]
je 0x400f16
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x400f06
ret
cld
pop r11
cmp r8b, 2
je 0x400f2e
jmp 0x400fab
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x400f3e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x400f26
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x400f56
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x400f43
sub eax, 3
jb 0x400f74
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x400fab
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x400f9b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x400f99
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x400f88
cmp rbp, -0xd00
adc ecx, eax
call 0x400eda
jmp 0x400f2e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401084
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401022
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40106e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401041
push 0x3a707474
jne 0x40109a
js 0x40105a
jae 0x401094
outsb dx, byte cs:[rsi]
je 0x401053
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4010c1
jb 0x4010b3
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4010de
jb 0x4010f1
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x211e84
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x211e84
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x400fbc
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4010e7
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401095
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add dword [rax], eax
jmp rbp
call 0x706f118f
jb 0x4011a7
movsxd rbp, dword [rdi]
jae 0x4011a1
insb byte [rdi], dx
js 0x4011a7
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401187
cmp rsi, rcx
jae 0x40118f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x40116e
cmp al, 0x8f
ja 0x40116e
cmp byte [rsi - 2], 0xf
je 0x401174
sub al, 0xe8
jg 0x401171
push rdi
cmp al, 1
ja 0x40115c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40115f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x40118c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4011e3
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1661
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401227
mov al, 0xa
jmp 0x401227
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401203
inc ebx
mov al, 0
jmp 0x40122b
mov al, 2
jmp 0x40122b
mov al, 3
jmp 0x40122b
mov al, 0x3c
jmp 0x40122b
push rcx
rcr ah, 1
fstp st(7)
jle 0x40126c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40127e
jg 0x401270
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a69f3
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4012ca
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6447
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4012d2
cmp esi, 0x21585055
jne 0x4012d6
jge 0x4012c8
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4012cb
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4012cf
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40137b
pop rcx
or al, 0x3b
jb 0x401381
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4012f3
jmp 0x4012f5
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661236
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5347e
in eax, dx
jg 0x40132d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401373
mov bh, 0x2a
add edi, 0x10
jmp 0x401370
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4013ad
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4013e9
jne 0x401400
fstpnce st(6), st(0)
jle 0x4013c9
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4013ff
jrcxz 0x401433
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b397
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4014b2
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401472
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295a47
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4014e5
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40147f
and ecx, 7
or al, 0xeb
jae 0x4014ea
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x40151f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40155d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401516
push rax
call 0xffffffff868d1203
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401520
std
cmp edi, esi
xchg eax, edi
jle 0x401575
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95b01
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401573
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401561
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40158a
js 0x4015ca
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40165c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2897
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40167d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401682
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21134
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401610
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
add r8b, byte [rax]
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add dword [rax], esp
nop
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x17d0ff04], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401736
je 0x40173f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401708
mov dh, 0x7d
jbe 0x401707
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401740
sahf
sahf
add al, 0
cwde
add eax, 0x1f90d000
and byte [rdi + 0x5700006], bl
add dl, dh
or al, cl
enter 0x80f, 0
xor byte [rcx], cl
or dword [rax], eax
loopne 0x401713
add ebp, esp
adc ecx, dword [rdx]
add byte [rax], ch
or bl, byte [rdi + 0xb]
add byte [rax], cl
or al, 0x9f
ror dl, 1
or al, 0x17
or eax, 0x4f0d8000
and byte [rdi], bl
and byte [rsi], cl
add byte [rax + 0x2704000f], dl
nop
seto byte [rcx]
adc byte [rax], al
adc byte [rcx], dl
add byte [rdi], ah
nop
nop
adc r8b, byte [rax]
cwde
adc eax, dword [rax]
add dl, dh
enter 0x1b3c, 0x14
add al, ch
sbb eax, 0x4f90060
adc eax, 0x16f800
add byte [rsi], bl
cmp byte [rdx + rax - 7], 0x17
add byte [rax], cl
sbb byte [rax], al
clc
jle 0x401794
add byte [rax], al
and byte [rdx], bl
add byte [rax - 0x61bf64d7], bh
sbb eax, dword [rax]
loopne 0x4017a5
adc ecx, dword [rbx + 0x1bbc91d]
add al, 0
int1
dec dword [rbx + rbx]
mov edi, 0x2b869f61
sbb dword [rdi + 0x17400e02], edx
enter 0xc90, 0x32
sbb edx, eax
fstp xword cs:[rbp + 0xf10390b]
pop rdi
xor eax, 0x255f2310
cmp eax, dword [rcx]
push rbx
enter 0xc90, 0x76
jp 0x401809
xor byte [rsi - 0x7b513de5], al
xchg eax, edi
movsd dword [rdi], dword ptr [rsi]
xlatb
stosd dword [rdi], eax
xchg eax, r8d
mov edi, 0x67384a19
adc dword [rdi], ebx
adc byte [rsi], ch
cmp byte [rbx], bl
fdiv qword [rdi]
adc dword [rbx], ebx
ret 0x86
call 0xffffffffd8c4c5f5
xchg eax, ebp
lahf
sti
not dword [r9]
xor byte [rbx + 0x1498c612], bl
and dl, byte [rdi]
pop rsi
sbb edi, ebp
xchg eax, esp
xor eax, 0x116f4701
add eax, esi
cmp eax, dword [rax + 0x3e3f5ae1]
add dword [rbp + 0x20ccd63f], ecx
pop rsp
sbb byte [rax], cl
push rsp
in eax, dx
add cl, ah
or al, 0x61
push rdi
jg 0x40183a
xchg eax, esi
jbe 0x4017db
add byte [rcx], bl
add dl, byte [rdi]
adc eax, 0x430e6003
enter 0x2760, 0x2a
cmpsb byte [rsi], byte ptr [rdi]
retf
adc byte [rdx], dh
xor byte [rdi + rdx + 0x20], 0xda
mov al, 0x43
fsubr st(6)
add r8b, byte [r10]
movabs al, byte [0x2f334f3acaec2101]
sbb dword [rdx - 0x7a], eax
mov al, 0x58
ja 0x4017eb
movsb byte [rdi], byte ptr [rsi]
sbb esi, dword [rdx - 0x49083ffa]
and byte [rcx + 0x3a], al
add edx, edx
and ah, bh
jo 0x401879
pop rax
int 0xd9
or dword [rdi], edx
out 0x11, al
fild word [rsp + rsi]
or al, 0x21
add dword [rdi - 0xb], 0xf
fist word [rax]
jrcxz 0x401883
cmp eax, dword [rax + 0x72a7031c]
cmovg ecx, dword [rsi]
leave
mov dl, 0x11
add cl, al
jle 0x401894
add byte [rdx], ah
nop
mov bl, 0x27
adc byte [rcx], al
xchg eax, ebp
sal byte [rax + 0x72], 0x10
xchg byte [rdx + 0x651890df], ah
xchg byte [rax + 0x3b29783], dl
add al, 0x61
push rbx
idiv byte [rbp + 0x1bbf045f]
imul ebp, dword [rdi], 0x10
xor al, byte [rbp + rcx - 0x375de87a]
xchg eax, ebx
fdivr dword [r10 + 0x18011d77]
and esi, edx
mov esp, 0x50f5ec0
cmpsd dword [rsi], dword ptr [rdi]
add ax, 0x211a
adc dword [rbx + 0x50056d53], -0x41
sbb al, 0xc2
xchg byte [rax + 0x17a6478e], dh
mov edi, 0x20d87005
punpcklbw mm0, qword [ebx]
mov edi, 0x2720ce00
and dword [rdi + 0xd], 0xffffff9a
lodsb al, byte [rsi]
outsd dx, dword [rsi]
int1
add esp, dword [rdi + rdi*2]
movsxd rsi, dword [rdx + 0x74]
jae 0x4018c4
sti
mov bh, 0xff
test dword [rbx + 0x5b], esp
pop rdi
push r10
pop rdi
push r11
push rsp
or dword [rax], eax
jb 0x40197d
imul ebx, dword [edx], 0x5bffbbdb
pop rdi
je 0x401990
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x40194c
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx - 0x49]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x40199c
jne 0x4019b8
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x4019b1
sub dword gs:[rsi + rbp - 0x41], esp
std
add eax, 0x383537f6
xor eax, 0x69665f24
outsb dx, byte [rsi]
imul ecx, dword [rax], 0x79617272
pop rdi
fld xword [rbp + 0x3565a170]
jb 0x4019de
and dword [rdx], ecx
insd dword [rdi], dx
and byte gs:[rbp + 0x58], dh
out dx, al
insd dword [rdi], dx
insd dword [rdi], dx
jns 0x4019a5
or eax, 0x2a74295f
insd dword [rdi], dx
jg 0x401936
pushfq
jo 0x4019f0
and al, 0x47
sub r14, qword [rbx - 0x13]
mov bh, 0xf6
or edi, dword [rax + 0x5f]
pop r15
insd dword [rdi], dx
adc ebx, dword [rdx + 0x53]
je 0x4019e5
cmp byte [rdx], dl
cdq
sti
out dx, eax
fisubr word [rcx + 0x6f]
xor al, 0x47
push rdx
pop r15
ret 0x1ecf
insb byte [rdi], dx
stc
mov al, 0xb
push rbp
and byte [rax + 0x44], cl
push rdx
idiv byte [rsi - 5]
leave
push rbx
push rsp
sub byte [r14 + 0x5a], r15b
adc esp, dword [rax + rdx + 0xf]
fisttp qword [rsi + 0x4466ee5d]
pop rcx
jle 0x401a14
movsxd rbx, dword [rdi]
push rcx
lodsb al, byte [rsi]
sar dword [rdi + 0x4342494b], 1
pop rax
pop rax
pop rdi
xor eax, dword [rdx]
adc eax, 0xadfedb5a
add al, 0x37
je 0x401a63
jb 0x401a6c
ja 0x401a5e
insb byte [rdi], dx
or dword [edx - 1], ecx
xchg eax, ecx
mov ebp, 0x500a3fd0
movsxd rbp, dword [r10]
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x401a59
imul ebx, dword [rdx - 0x1f], 0x3516642d
imul esp, dword [rdx + 0x63], 0x90c2e975
movsxd rdx, dword [rcx]
push rcx
xor dword [rsi], esi
pop rax
loope 0x4019bc
insd dword [rdi], dx
sbb ah, byte fs:[rcx - 0x76]
jbe 0x401a67
insd dword [edi], dx
movsd dword [rdi], dword ptr [rsi]
ret 0x59bf
movabs byte [0x6c43c2525f764af1], al
wait
mov dl, 0x7f
fsubr dword [rsi]
jae 0x401a09
pop rdx
insb byte [rdi], dx
push rax
jbe 0x4019d2
pop r13
movsxd rbp, ebp
jg 0x401a8c
movsxd rsi, dword [rcx + rdi*2 + 0x70]
movsxd rax, dword gs:[r13 + 0x31]
xor ebx, dword [rdi + 0x4d]
pop rdi
ja 0x401acf
mov ch, 0xf7
jge 0x401acf
sub eax, 0xb331312e
je 0x401aad
jno 0x401aea
mov dl, 0xd9
out dx, al
out 0x88, al
push rsp
xor al, 0x49
and eax, 0xc1273143
cmp eax, 0x8c9661d8
stosb byte [rdi], al
pop rdi
xor ch, byte [rsi]
ficom dword [rsi - 8]
movabs dword [0x789a536178632301], eax
cmp al, 0x95
pop rsp
pop rcx
enter 0x5d19, 0x44
insd dword [rdi], dx
sbb ebp, ebp
push r12
movsb byte [rdi], byte ptr [rsi]
movabs eax, dword [0x54e15f85779f430c]
insb byte [rdi], dx
push rax
or ch, byte es:[rbp + 0x35]
jae 0x401b19
xlatb
mov ch, 0xb
pop rbx
jbe 0x401b29
cmp al, 0x2f
mov r12b, byte [r13 + r8*4 + 0x5f]
insd dword [rdi], dx
or ebp, 0x645375b6
cmp al, 0x55
in eax, dx
cmp ebx, dword [rbx - 0x499e6b93]
mov dh, byte [rdi]
stosb byte [rdi], al
js 0x401ad7
movabs eax, dword [0xd1698f3231dd7db0]
jb 0x401b32
sub byte [eax - 0x42cf293d], dl
xor dword [rbx + 0x68], esp
sbb eax, 0x3973a217
clc
mov bl, 0x61
push rbx
cmp dword ds:[r9 + rbp*2 + 0x67], r13d
outsb dx, byte [rsi]
push r10
pushfq
jnp 0x401b2f
pop rsp
push rdi
xor al, 0x5f
xor dh, byte ds:[rcx]
jno 0x401af9
push rdx
ret
xor byte [rbp + 0x753e34d7], dl
je 0x401b5e
scasd eax, dword [rdi]
sal dword [rsi + 0x5fb96423], 1
pop rsp
jge 0x401abe
add eax, 0xb1961d9
nop
xchg eax, ebp
sbb byte [rcx], cl
lodsb al, byte [rsi]
std
xor al, 0x73
ja 0x401b9c
jo 0x401acd
pop rbx
sub edi, dword [rax + 0x436f3752]
test byte gs:[rdx - 4], ah
out 6, al
pop rax
adc esi, dword [rbx]
jo 0x401b09
xchg byte [rcx - 0x50], ch
sub eax, 0x64e93749
out dx, al
ret 0xb6da
push rax
in al, dx
xor ebp, dword [rcx - 0x7a43c6a3]
invd
test dword [rdx + 0xb], esp
outsd dx, dword [rsi]
xor eax, 0xdc826c66
fsubr dword [rbp + 0x222d688c]
movsxd rbp, dword [rbx - 0x10]
push -0x734b6295
lodsd eax, dword [rsi]
insd dword [rdi], dx
insb byte [rdi], dx
adc ah, byte [rdx]
imul edx, dword [rdx], 0x446b5246
jl 0x401bb3
popfq
pop rdx
sub dword [rbx - 0x29], ecx
mov r13d, dword [r13 + 0x70]
mov sil, 0x12
or al, 0x54
insd dword [rdi], dx
pop rax
stosd dword [rdi], eax
movabs dword [0xb6b46556be45cdc3], eax
popfq
push rsi
movabs eax, dword [0x6815ab76cd7d5f57]
jo 0x401bd7
jbe 0x401bef
sub ebx, ebp
fisubr word [rdx - 0x47]
jp 0x401b96
xor dword [rsi], ebp
xor esp, dword [rax]
push rbp
outsb dx, byte [rsi]
add al, byte [rip - 0x6485d4ad]
mov bh, 0xed
mov bh, 0x27
je 0x401b95
xor byte [rdx], dil
xor esi, dword [rax + 0x63]
movsxd r12, dword [r11 + rax]
adc ecx, dword [rcx - 0x44]
cmp byte [rcx - 0x45], bh
mov ebx, 0x275aa6ed
jae 0x401c6e
insd dword [rdi], dx
je 0x401c5a
je 0x401c6d
jne 0x401bb1
push 0x70f86309
sal dword [rsi + 0x6e07b96e], 0x6f
jl 0x401c3b
adc eax, 0x76d80d67
loope 0x401c30
mov bh, 0x75
jne 0x401b9d
sub eax, 0x660d0047
out dx, al
lodsd eax, dword [rsi]
mov ch, 0xf1
cmp byte [rcx], cl
jns 0x401c98
ret 0x775a
sbb dword [r14 - 0x37], r14d
imul ecx, edx, 0x1ab5ec0c
outsb dx, byte [rsi]
pop rdi
sbb ebx, dword [rcx]
outsd dx, dword [rsi]
sub byte [rcx], cl
sahf
jrcxz 0x401cb1
adc byte [rsp + rsi*2], bl
jb 0x401c04
or bh, byte [rbx + 0x39]
xchg eax, ebx
fld xword [rdi + rbp*2]
or cl, bh
add eax, 0xc1e24dc
movabs eax, dword [0x64680668652e1d6f]
jb 0x401cdd
sub esi, dword [rbx + rcx*8 + 0xd]
pop rbp
movsxd rax, dword [rbx + 0x7065632e]
mov dh, 4
pop rsp
xlatb
movabs r13, 0x6c38358b4391116c
or ebp, dword [rdx - 0x33]
movabs eax, dword [0x6800b642decd9836]
jnp 0x401ce8
fistp dword [rdx + 0x489e683]
stosd dword [rdi], eax
push rdx
std
add byte [rax], al
sbb dword [rbp + 0x35], edi
sub dl, bh
add dword [rdi + 0x60937b39], edi
mov dword [rdi], 0x19a41c3f
xchg eax, edx
and dword [rcx], eax
and eax, dword [rdi]
nop
push rsp
push rsp
and byte [rsi + 0x4864864], al
xor dword [rcx + 0x64], esi
nop
je 0x401ce3
or al, 0x72
enter 0x44bb, 0x7f
idiv bh
ljmp [rdi - 0x68]
cwde
xor cl, al
and byte [rbx - 0x27f7fac8], al
xor byte [rbx + rax*2], 0x4e
or edx, eax
xor dl, al
movabs al, byte [0x3f9320cd2506fb02]
sbb byte [rsi + 3], dl
cmp al, 0xe1
int 0x82
pop qword [rdi]
add dword [rbx], 0x91774960
pop rsi
mov edi, 0x7b02ecff
mov bl, 0xb7
mov edi, 0x2c160702
jmp 0xfffffffffe7f8891
fxch st(0), st(1)
and byte [rdi + 0x6f], ah
cmpsd dword [rsi], dword ptr [rdi]
mov al, 6
cwde
mov dl, 0xff
jp 0x401d6e
and dword [rdi], esp
mov eax, 0x3f07e0c9
xchg rax, rbx
ror dword [rsi], 0xb
inc dword [rdi + rdi - 0x64261bbe]
adc byte [rdi], ch
loopne 0x401d36
nop
outsb dx, byte [rsi]
add byte [rcx + 0x19f8e19], bh
adc ebx, esi
test byte [rsi], bl
xlatb
jmp qword [rax + rcx*8 - 0x7a]
xchg eax, edx
sbb cl, byte [rcx + 0x2176303f]
sbb dword [rax], esi
push rax
add dword [rax], edx
adc esp, dword [rdx]
xchg eax, r12d
cmpsd dword [rsi], dword ptr [rdi]
mov r14b, 0xc0
jo 0x401d69
setge byte [rdi + 0x6e]
xor ah, byte [rdi + rdi - 0x70]
jg 0x401de0
and al, 0x87
sub eax, 0xa33f0b90
cmp dword [rbx + 0x13], esi
and byte [rdi - 0x4ff600f9], ah
and dword [rcx + 0x28], ebp
test eax, 0x643f10bf
sub byte [rcx], bl
adc byte fs:[rdx], bh
mov cl, 0x64
nop
xchg byte [r12 + rcx*2 + 0x4c], cl
sbb dword [rdx + 0x798bfa1], edx
fld dword [rbp - 0xe]
add al, 0x3f
movsb byte [rdi], byte ptr [rsi]
add ecx, ecx
mov bl, 0xdc
mov word [rax], cs
xchg eax, edi
jg 0x401d5d
push -0x7a
xchg eax, edx
push -0x63c8f125
rcr word [rdi], 7
mov edi, 0x37480c10
xchg eax, esp
out 0x3f, eax
psubb mm6, qword [rbx + 1]
wait
push rbx
fsub dword [rsp + rax*8]
mov dl, 0x3f
pop rbx
rol byte [rip + 0x3f1f9bf8], cl
xchg eax, edx
xchg eax, ebx
outsb dx, byte [esi]
jg 0x401dd0
add dword [rsi], eax
fild dword [rdx + 6]
sbb dword [rax], edx
cwde
mov edi, 0xc917201f
and byte [rdi], bl
or byte [rip + 0x1e48402], cl
add edi, esp
and byte [rbx + 0x32], al
xchg eax, esp
pushfq
mov eax, 0x805db80a
loopne 0x401e2a
jg 0x401e17
enter 0x320, -0x2e
or al, ah
enter -0x6de5, 0xb
cmp dword [rax], edi
add ah, byte [rax]
adc eax, 0xc858717f
xor byte [rdi], dl
xor al, 0x2c
cmp ebp, dword [rsp + rax*4]
adc dword [rbx - 0x6e], edi
pop rsp
or byte [rdi], dl
jg 0x401e4e
add dword [rdx], ebx
mov dl, 0x65
sub al, 0xbb
add byte [rcx], ah
xor byte [rdi], 0xcf
jmp qword [rax - 0xdcde0f8]
in al, 0x10
or dword ss:[rdi - 0x60], edi
sub edx, ebx
add eax, 0x45800000
add al, byte [rax]
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip + 0x63080216], ecx
mov edi, 0x76b4c5d8
xchg eax, ebx
rcl byte [rdi], 1
add byte [rax], al
add byte [rax], al
cwde
cmp byte [rax], al
add byte [rcx + 1], cl
add byte [rsi + 0xf4], ch
