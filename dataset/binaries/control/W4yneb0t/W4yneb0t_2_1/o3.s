xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6030e7
push rbp
sub rax, obj.std::cin
cmp rax, 0xe
mov rbp, rsp
jbe 0x400f90
mov eax, 0
test rax, rax
je 0x400f90
pop rbp
mov edi, obj.std::cin
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.std::cin
push rbp
sub rsi, obj.std::cin
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400fd8
mov eax, 0
test rax, rax
je 0x400fd8
pop rbp
mov edi, obj.std::cin
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x202329], 0
jne 0x400ffa
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x202316], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x401010
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x40100b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
push r15
push r14
mov edi, obj.std::cin
push r13
push r12
push rbp
push rbx
sub rsp, 0x48
lea rsi, [rsp + 0x10]
mov rax, qword fs:[0x28]
mov qword [rsp + 0x38], rax
xor eax, eax
call sym.std::istream::_M_extract_longlong_
lea rsi, [rsp + 0x18]
mov rdi, rax
call sym.std::istream::_M_extract_longlong_
mov rbx, qword [rsp + 0x10]
test rbx, rbx
je 0x4019c5
movabs rax, 0x1fffffffffffffff
cmp rbx, rax
ja 0x401a16
lea r13, [rbx*8]
mov rdi, r13
call sym.operatornew
mov rbp, rax
shl rax, 0x3c
shr rax, 0x3f
cmp rax, rbx
cmova rax, rbx
cmp rbx, 6
ja 0x4013dd
movabs rax, 0xde0b6b3a7640000
cmp rbx, 1
lea rcx, [rbp + 8]
mov qword [rbp], rax
je 0x4019a7
cmp rbx, 2
mov qword [rbp + 8], rax
lea rcx, [rbp + 0x10]
je 0x40198b
cmp rbx, 3
mov qword [rbp + 0x10], rax
lea rcx, [rbp + 0x18]
je 0x401981
cmp rbx, 4
mov qword [rbp + 0x18], rax
lea rcx, [rbp + 0x20]
je 0x401977
cmp rbx, 5
mov qword [rbp + 0x20], rax
lea rcx, [rbp + 0x28]
je 0x40196d
lea rcx, [rbp + 0x30]
mov qword [rbp + 0x28], rax
mov rax, rbx
cmp rbx, rax
je 0x401154
sub rbx, rax
lea rdx, [rbx - 2]
shr rdx, 1
add rdx, 1
cmp rbx, 1
lea rdi, [rdx + rdx]
jne 0x4013f8
movabs rax, 0xde0b6b3a7640000
mov qword [rcx], rax
mov r12, qword [rsp + 0x10]
test r12, r12
je 0x401433
movabs rax, 0xaaaaaaaaaaaaaaa
cmp r12, rax
ja 0x4019fe
lea r15, [r12 + r12*2]
shl r15, 3
mov rdi, r15
call sym.operatornew
mov r14, rax
lea rax, [rax + r15]
mov qword [rsp + 8], rax
mov rax, r13
sar rax, 3
test rax, rax
jne 0x401440
mov rax, r14
test rax, rax
je 0x4011b8
mov qword [rax], 0
mov qword [rax + 0x10], r13
mov qword [rax + 8], r13
add rax, 0x18
sub r12, 1
jne 0x4011a4
mov rbx, qword [rsp + 8]
mov r15, rbx
mov r13, qword [rip + 0x20216f]
mov r12, qword [rip + 0x202170]
mov qword [rip + 0x202161], r14
mov qword [rip + 0x202162], rbx
mov qword [rip + 0x202163], r15
cmp r13, r12
mov rbx, r13
je 0x40120b
mov rdi, qword [rbx]
test rdi, rdi
je 0x401202
call sym.operatordelete
add rbx, 0x18
cmp r12, rbx
jne 0x4011f5
test r13, r13
je 0x401218
mov rdi, r13
call sym.operatordelete
test rbp, rbp
je 0x401225
mov rdi, rbp
call sym.operatordelete
mov rbx, qword [rsp + 0x10]
test rbx, rbx
je 0x401954
movabs rax, 0x1fffffffffffffff
cmp rbx, rax
ja 0x401a16
lea r13, [rbx*8]
mov rdi, r13
call sym.operatornew
mov rbp, rax
shl rax, 0x3c
shr rax, 0x3f
cmp rax, rbx
cmova rax, rbx
cmp rbx, 6
ja 0x401390
movsd xmm1, qword [rip + 0xce6]
cmp rbx, 1
lea rcx, [rbp + 8]
movsd qword [rbp], xmm1
je 0x4019ef
cmp rbx, 2
movsd qword [rbp + 8], xmm1
lea rcx, [rbp + 0x10]
je 0x4019d4
cmp rbx, 3
movsd qword [rbp + 0x10], xmm1
lea rcx, [rbp + 0x18]
je 0x4019bb
cmp rbx, 4
movsd qword [rbp + 0x18], xmm1
lea rcx, [rbp + 0x20]
je 0x4019b1
cmp rbx, 5
movsd qword [rbp + 0x20], xmm1
lea rcx, [rbp + 0x28]
je 0x401963
movsd qword [rbp + 0x28], xmm1
lea rcx, [rbp + 0x30]
mov rax, rbx
cmp rbx, rax
je 0x401312
sub rbx, rax
lea rdx, [rbx - 2]
shr rdx, 1
add rdx, 1
cmp rbx, 1
lea rdi, [rdx + rdx]
jne 0x4013ab
movsd xmm7, qword [rip + 0xc52]
movsd qword [rcx], xmm7
mov r12, qword [rsp + 0x10]
test r12, r12
je 0x401956
movabs rax, 0xaaaaaaaaaaaaaaa
cmp r12, rax
ja 0x4019f9
lea r15, [r12 + r12*2]
shl r15, 3
mov rdi, r15
call sym.operatornew
mov r14, rax
lea rax, [rax + r15]
mov qword [rsp + 8], rax
mov rax, r13
sar rax, 3
test rax, rax
jne 0x4014e0
mov rax, r14
test rax, rax
je 0x401376
mov qword [rax], 0
mov qword [rax + 0x10], r13
mov qword [rax + 8], r13
add rax, 0x18
sub r12, 1
jne 0x401362
mov rbx, qword [rsp + 8]
mov r15, rbx
jmp 0x40154f
nop dword [rax]
test rax, rax
jne 0x4019de
lea rdx, [rbx - 2]
mov rcx, rbp
shr rdx, 1
add rdx, 1
lea rdi, [rdx + rdx]
movapd xmm0, xmmword [rip + 0xb9d]
lea rsi, [rbp + rax*8]
xor eax, eax
add rax, 1
add rsi, 0x10
movaps xmmword [rsi - 0x10], xmm0
cmp rax, rdx
jb 0x4013ba
cmp rbx, rdi
lea rcx, [rcx + rdi*8]
jne 0x401306
jmp 0x401312
test rax, rax
jne 0x401995
lea rdx, [rbx - 2]
mov rcx, rbp
shr rdx, 1
add rdx, 1
lea rdi, [rdx + rdx]
movdqa xmm0, xmmword [rip + 0xb40]
lea rsi, [rbp + rax*8]
xor eax, eax
add rax, 1
add rsi, 0x10
movaps xmmword [rsi - 0x10], xmm0
cmp rdx, rax
ja 0x401407
cmp rdi, rbx
lea rcx, [rcx + rdi*8]
jne 0x401147
mov r12, qword [rsp + 0x10]
test r12, r12
jne 0x401162
xor r14d, r14d
xor r15d, r15d
xor ebx, ebx
jmp 0x4011ca
movabs rdx, 0x1fffffffffffffff
cmp rax, rdx
ja 0x401ac6
test rax, rax
mov rbx, r14
je 0x4014b0
test rbx, rbx
je 0x40149c
mov qword [rbx], 0
mov qword [rbx + 8], 0
mov rdi, r13
mov qword [rbx + 0x10], 0
call sym.operatornew
lea r15, [rax + r13]
mov qword [rbx], rax
mov rdx, r13
mov rsi, rbp
mov rdi, rax
mov qword [rbx + 0x10], r15
call sym.imp.memcpy
mov qword [rbx + 8], r15
add rbx, 0x18
sub r12, 1
jne 0x40145b
mov r15, qword [rsp + 8]
jmp 0x4011ca
test rbx, rbx
je 0x4014d1
mov qword [rbx], 0
mov qword [rbx + 0x10], r13
mov rdx, r13
mov rsi, rbp
xor edi, edi
call sym.imp.memcpy
mov qword [rbx + 8], r13
add rbx, 0x18
sub r12, 1
jne 0x4014b0
jmp 0x4011c2
movabs rdx, 0x1fffffffffffffff
cmp rax, rdx
ja 0x401a4c
test rax, rax
mov rbx, r14
je 0x4018ed
test rbx, rbx
je 0x401540
mov qword [rbx], 0
mov qword [rbx + 8], 0
mov rdi, r13
mov qword [rbx + 0x10], 0
call sym.operatornew
lea r15, [rax + r13]
mov qword [rbx], rax
mov rdx, r13
mov rsi, rbp
mov rdi, rax
mov qword [rbx + 0x10], r15
call sym.imp.memcpy
mov qword [rbx + 8], r15
add rbx, 0x18
sub r12, 1
jne 0x4014ff
mov r15, qword [rsp + 8]
mov r13, qword [rip + 0x201dca]
mov r12, qword [rip + 0x201dcb]
mov qword [rip + 0x201dbc], r14
mov qword [rip + 0x201dbd], rbx
mov qword [rip + 0x201dbe], r15
cmp r13, r12
mov rbx, r13
je 0x401590
mov rdi, qword [rbx]
test rdi, rdi
je 0x401587
call sym.operatordelete
add rbx, 0x18
cmp r12, rbx
jne 0x40157a
test r13, r13
je 0x40159d
mov rdi, r13
call sym.operatordelete
test rbp, rbp
je 0x4015aa
mov rdi, rbp
call sym.operatordelete
mov rcx, qword [rip + 0x201dcf]
mov rdx, qword [rip + 0x201dd0]
mov rax, qword [rsp + 0x10]
sub rdx, rcx
sar rdx, 3
cmp rax, rdx
ja 0x40193a
jae 0x4015da
lea rdx, [rcx + rax*8]
mov qword [rip + 0x201dae], rdx
mov rcx, qword [rip + 0x201d7f]
mov rdx, qword [rip + 0x201d80]
sub rdx, rcx
sar rdx, 3
cmp rdx, rax
jb 0x401920
jbe 0x401605
lea rdx, [rcx + rax*8]
mov qword [rip + 0x201d63], rdx
test rax, rax
jle 0x401846
xor ebx, ebx
lea rax, [rbx*8]
mov edi, obj.std::cin
add rbx, 1
mov rbp, rax
add rax, qword [rip + 0x201d55]
add rbp, qword [rip + 0x201d2e]
mov rsi, rax
call sym.std::istream::_M_extract_longlong_
mov rsi, rbp
mov rdi, rax
call sym.std::istream::_M_extract_double_
mov rax, qword [rsp + 0x10]
cmp rax, rbx
jg 0x401610
test rax, rax
jle 0x401846
mov rdi, qword [rip + 0x201ce1]
mov rsi, qword [rip + 0x201cba]
xor edx, edx
xor eax, eax
mov rcx, qword [rsi + rdx]
mov qword [rcx + rax*8], 0
mov rcx, qword [rdi + rdx]
add rdx, 0x18
mov qword [rcx + rax*8], 0
mov rcx, qword [rsp + 0x10]
add rax, 1
cmp rcx, rax
jg 0x40166a
test rcx, rcx
jle 0x401846
xor r12d, r12d
test rcx, rcx
jle 0x4016e6
lea rbp, [r12 + r12*2]
xor ebx, ebx
shl rbp, 3
nop
lea rsi, [rsp + 0x20]
mov edi, obj.std::cin
call sym.std::istream::_M_extract_longlong_
mov rax, qword [rsp + 0x20]
test rax, rax
js 0x4016d8
mov rdx, qword [rip + 0x201c70]
mov rdx, qword [rdx + rbp]
mov qword [rdx + rbx*8], rax
mov rcx, qword [rsp + 0x10]
add rbx, 1
cmp rcx, rbx
jg 0x4016b0
add r12, 1
cmp r12, rcx
jl 0x4016a0
test rcx, rcx
jle 0x401846
xor r11d, r11d
xor ebp, ebp
test rcx, rcx
jle 0x401761
lea rbx, [rbp*8]
xor r10d, r10d
xor r9d, r9d
test rcx, rcx
jle 0x401754
mov rax, qword [rip + 0x201c24]
xor edx, edx
mov rsi, qword [rax + r10]
mov r8, qword [rax + r11]
lea rdi, [rsi + rbx]
nop word [rax + rax]
mov rax, qword [r8 + rdx*8]
add rax, qword [rdi]
mov rcx, qword [rsi + rdx*8]
cmp rax, rcx
cmovg rax, rcx
mov qword [rsi + rdx*8], rax
mov rcx, qword [rsp + 0x10]
add rdx, 1
cmp rcx, rdx
jg 0x401730
add r9, 1
add r10, 0x18
cmp r9, rcx
jl 0x401710
add rbp, 1
add r11, 0x18
cmp rbp, rcx
jl 0x4016fd
test rcx, rcx
jle 0x401846
mov r13, qword [rip + 0x201c02]
mov r12, qword [rip + 0x201bbb]
lea r8, [rcx*8]
mov r11, qword [rip + 0x201b8c]
mov rbp, qword [rip + 0x201bc5]
xor ebx, ebx
xor r10d, r10d
mov rdi, qword [r13 + r10*8]
mov rsi, qword [r12 + rbx]
xor eax, eax
nop dword [rax + rax]
mov rdx, qword [rsi + rax]
cmp rdx, rdi
jg 0x4017d3
pxor xmm0, xmm0
mov r9, qword [r11 + rbx]
cvtsi2sd xmm0, rdx
divsd xmm0, qword [rbp + r10*8]
movsd qword [r9 + rax], xmm0
add rax, 8
cmp r8, rax
jne 0x4017b0
add r10, 1
add rbx, 0x18
cmp r10, rcx
jne 0x4017a0
mov rbp, r11
xor ebx, ebx
mov rdi, qword [rbp]
lea r10, [rbx*8]
mov r9, r11
xor r8d, r8d
mov rdx, qword [r9]
xor eax, eax
lea rsi, [rdx + r10]
nop dword [rax]
movsd xmm0, qword [rsi]
addsd xmm0, qword [rdi + rax*8]
minsd xmm0, qword [rdx + rax*8]
movsd qword [rdx + rax*8], xmm0
add rax, 1
cmp rax, rcx
jl 0x401810
add r8, 1
add r9, 0x18
cmp r8, rcx
jl 0x401800
add rbx, 1
add rbp, 0x18
cmp rbx, rcx
jl 0x4017ee
xor ebx, ebx
cmp qword [rsp + 0x18], 0
jle 0x4018b6
lea rsi, [rsp + 0x28]
mov edi, obj.std::cin
add rbx, 1
call sym.std::istream::_M_extract_longlong_
lea rsi, [rsp + 0x30]
mov rdi, rax
call sym.std::istream::_M_extract_longlong_
mov rax, qword [rsp + 0x28]
mov rdx, qword [rip + 0x201aa4]
mov edi, obj.std::cout
lea rax, [rax + rax*2 - 3]
lea rax, [rdx + rax*8]
mov rdx, qword [rsp + 0x30]
mov rax, qword [rax]
movsd xmm0, qword [rax + rdx*8 - 8]
call sym.std::ostream::_M_insert_double_
mov edx, 1
mov esi, 0x401f38
mov rdi, rax
call sym.std::__ostream_insert_char_std::char_traits_char__
cmp qword [rsp + 0x18], rbx
jg 0x401850
mov edx, 1
mov esi, 0x401f2e
mov edi, obj.std::cout
call sym.std::__ostream_insert_char_std::char_traits_char__
mov rax, qword [rsp + 0x38]
xor rax, qword fs:[0x28]
jne 0x401a1b
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
test rbx, rbx
je 0x40190e
mov qword [rbx], 0
mov qword [rbx + 0x10], r13
mov rdx, r13
mov rsi, rbp
xor edi, edi
call sym.imp.memcpy
mov qword [rbx + 8], r13
add rbx, 0x18
sub r12, 1
jne 0x4018ed
jmp 0x401380
nop dword [rax]
sub rax, rdx
mov edi, obj.spd
mov rsi, rax
call sym.std::vector_double_std::allocator_double__::_M_default_append
mov rax, qword [rsp + 0x10]
jmp 0x401605
sub rax, rdx
mov edi, obj.mdist
mov rsi, rax
call sym.std::vector_longlong_std::allocator_longlong__::_M_default_append
mov rax, qword [rsp + 0x10]
jmp 0x4015da
xor ebp, ebp
xor r14d, r14d
xor r15d, r15d
xor ebx, ebx
jmp 0x40154f
mov eax, 5
jmp 0x4012e5
mov eax, 5
jmp 0x401126
mov eax, 4
jmp 0x401126
mov eax, 3
jmp 0x401126
mov eax, 2
jmp 0x401126
movabs rax, 0xde0b6b3a7640000
lea rcx, [rbp + 8]
mov qword [rbp], rax
mov eax, 1
jmp 0x401126
mov eax, 4
jmp 0x4012e5
mov eax, 3
jmp 0x4012e5
xor ebp, ebp
xor r14d, r14d
xor r15d, r15d
xor ebx, ebx
jmp 0x4011ca
mov eax, 2
jmp 0x4012e5
movsd xmm1, qword [rip + 0x57a]
lea rcx, [rbp + 8]
movsd qword [rbp], xmm1
mov eax, 1
jmp 0x4012e5
call sym.std::__throw_bad_alloc
call sym.std::__throw_bad_alloc
mov rbx, rax
mov rdi, rbp
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
call sym.std::__throw_bad_alloc
call sym.imp.__stack_chk_fail
mov rdi, rax
mov r12, r14
call sym.imp.__cxa_begin_catch
cmp r14, rbx
je 0x401a47
mov rdi, qword [r12]
test rdi, rdi
je 0x401a3e
call sym.operatordelete
add r12, 0x18
cmp r12, rbx
jne 0x401a30
call sym.imp.__cxa_rethrow
mov qword [r14], 0
mov qword [r14 + 8], 0
mov qword [r14 + 0x10], 0
call sym.std::__throw_bad_alloc
mov rdi, rax
mov r12, r14
call sym.imp.__cxa_begin_catch
cmp r14, rbx
je 0x401a8f
mov rdi, qword [r12]
test rdi, rdi
je 0x401a86
call sym.operatordelete
add r12, 0x18
cmp r12, rbx
jne 0x401a78
call sym.imp.__cxa_rethrow
mov rbx, rax
call sym.imp.__cxa_end_catch
mov rdi, r14
call sym.operatordelete
jmp 0x401a06
mov rbx, r14
jmp 0x401a20
mov rbx, rax
call sym.imp.__cxa_end_catch
mov rdi, r14
call sym.operatordelete
jmp 0x401a06
mov qword [r14], 0
mov qword [r14 + 8], 0
mov qword [r14 + 0x10], 0
call sym.std::__throw_bad_alloc
mov rbx, r14
jmp 0x401a68
jmp 0x401a03
nop dword [rax]
mov rdi, qword [rdi]
test rdi, rdi
je 0x401b00
jmp sym.operatordelete
nop dword [rax]
ret
nop word cs:[rax + rax]
nop dword [rax]
mov rdi, qword [rdi]
test rdi, rdi
je 0x401b20
jmp sym.operatordelete
nop dword [rax]
ret
nop word cs:[rax + rax]
nop dword [rax]
push r12
push rbp
push rbx
mov rbp, qword [rdi + 8]
mov rbx, qword [rdi]
cmp rbp, rbx
je 0x401b62
mov r12, rdi
nop dword [rax + rax]
mov rdi, qword [rbx]
test rdi, rdi
je 0x401b55
call sym.operatordelete
add rbx, 0x18
cmp rbp, rbx
jne 0x401b48
mov rbp, qword [r12]
test rbp, rbp
je 0x401b78
pop rbx
mov rdi, rbp
pop rbp
pop r12
jmp sym.operatordelete
nop dword [rax + rax]
pop rbx
pop rbp
pop r12
ret
nop dword [rax]
push r12
push rbp
push rbx
mov rbp, qword [rdi + 8]
mov rbx, qword [rdi]
cmp rbp, rbx
je 0x401bb2
mov r12, rdi
nop dword [rax + rax]
mov rdi, qword [rbx]
test rdi, rdi
je 0x401ba5
call sym.operatordelete
add rbx, 0x18
cmp rbp, rbx
jne 0x401b98
mov rbp, qword [r12]
test rbp, rbp
je 0x401bc8
pop rbx
mov rdi, rbp
pop rbp
pop r12
jmp sym.operatordelete
nop dword [rax + rax]
pop rbx
pop rbp
pop r12
ret
nop dword [rax]
test rsi, rsi
je 0x401c24
push r15
push r14
push r13
push r12
mov r12, rdi
push rbp
push rbx
mov rbx, rsi
sub rsp, 8
mov rbp, qword [rdi + 8]
mov rax, qword [rdi + 0x10]
sub rax, rbp
sar rax, 3
cmp rsi, rax
ja 0x401c30
shl rbx, 3
xor esi, esi
mov rdi, rbp
mov rdx, rbx
add rbx, rbp
call sym.imp.memset
mov qword [r12 + 8], rbx
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word cs:[rax + rax]
mov r15, qword [rdi]
movabs rsi, 0x1fffffffffffffff
mov rdx, rsi
sub rbp, r15
mov rax, rbp
sar rax, 3
sub rdx, rax
mov rcx, rax
cmp rbx, rdx
ja 0x401d21
cmp rbx, rax
mov rdx, rax
cmovae rdx, rbx
add rax, rdx
jb 0x401cc0
cmp rax, rsi
ja 0x401cc0
xor r13d, r13d
xor r14d, r14d
test rax, rax
jne 0x401d17
nop dword [rax]
test rcx, rcx
jne 0x401cf0
add rbp, r14
shl rbx, 3
xor esi, esi
mov rdx, rbx
mov rdi, rbp
add rbx, rbp
call sym.imp.memset
test r15, r15
je 0x401ca9
mov rdi, r15
call sym.operatordelete
mov qword [r12], r14
mov qword [r12 + 8], rbx
mov qword [r12 + 0x10], r13
jmp 0x401c16
nop dword [rax]
mov r13, -8
mov rdi, r13
call sym.operatornew
mov r15, qword [r12]
mov rbp, qword [r12 + 8]
mov r14, rax
add r13, rax
sub rbp, r15
mov rcx, rbp
sar rcx, 3
jmp 0x401c80
nop word [rax + rax]
mov rdx, rbp
mov rsi, r15
mov rdi, r14
add rbp, r14
shl rbx, 3
call sym.imp.memmove
mov rdx, rbx
xor esi, esi
mov rdi, rbp
call sym.imp.memset
add rbx, rbp
jmp 0x401ca1
lea r13, [rax*8]
jmp 0x401cc7
mov edi, str.vector::_M_default_append
call sym.std::__throw_length_error
nop dword [rax + rax]
test rsi, rsi
je 0x401d84
push r15
push r14
push r13
push r12
mov r12, rdi
push rbp
push rbx
mov rbx, rsi
sub rsp, 8
mov rbp, qword [rdi + 8]
mov rax, qword [rdi + 0x10]
sub rax, rbp
sar rax, 3
cmp rsi, rax
ja 0x401d90
shl rbx, 3
xor esi, esi
mov rdi, rbp
mov rdx, rbx
add rbx, rbp
call sym.imp.memset
mov qword [r12 + 8], rbx
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word cs:[rax + rax]
mov r15, qword [rdi]
movabs rsi, 0x1fffffffffffffff
mov rdx, rsi
sub rbp, r15
mov rax, rbp
sar rax, 3
sub rdx, rax
mov rcx, rax
cmp rbx, rdx
ja 0x401e81
cmp rbx, rax
mov rdx, rax
cmovae rdx, rbx
add rax, rdx
jb 0x401e20
cmp rax, rsi
ja 0x401e20
xor r13d, r13d
xor r14d, r14d
test rax, rax
jne 0x401e77
nop dword [rax]
test rcx, rcx
jne 0x401e50
add rbp, r14
shl rbx, 3
xor esi, esi
mov rdx, rbx
mov rdi, rbp
add rbx, rbp
call sym.imp.memset
test r15, r15
je 0x401e09
mov rdi, r15
call sym.operatordelete
mov qword [r12], r14
mov qword [r12 + 8], rbx
mov qword [r12 + 0x10], r13
jmp 0x401d76
nop dword [rax]
mov r13, -8
mov rdi, r13
call sym.operatornew
mov r15, qword [r12]
mov rbp, qword [r12 + 8]
mov r14, rax
add r13, rax
sub rbp, r15
mov rcx, rbp
sar rcx, 3
jmp 0x401de0
nop word [rax + rax]
mov rdx, rbp
mov rsi, r15
mov rdi, r14
add rbp, r14
shl rbx, 3
call sym.imp.memmove
mov rdx, rbx
xor esi, esi
mov rdi, rbp
call sym.imp.memset
add rbx, rbp
jmp 0x401e01
lea r13, [rax*8]
jmp 0x401e27
mov edi, str.vector::_M_default_append
call sym.std::__throw_length_error
nop dword [rax + rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200f46]
push rbp
lea rbp, [rip + 0x200f4e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401ee6
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401ed0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
jbe 0x401f7b
movsxd rsi, dword [rdi + rbp*2 + 0x72]
cmp bh, byte [rdx]
pop rdi
pop r15
jne 0x401f91
je 0x401f86
jo 0x401f9a
outsb dx, byte gs:[rsi]
add byte fs:[rdx], cl
add byte [rbx + 0x61], al
jae 0x401f99
and byte [rbx], ah
add byte [rdx], bh
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsd dword fs:[rsi], dword ptr [rdi]
mov bl, 0xb6
loopne 0x401f55
add byte [rax], al
cmpsd dword fs:[rsi], dword ptr [rdi]
mov bl, 0xb6
loopne 0x401f5d
add al, cl
insd dword [edi], dx
shr dword [rbx + 0x4ec80043], 0x67
insd dword [rdi], dx
shr dword [rbx + 0x4ec80043], 0x67
insd dword [edi], dx
shr dword [rbx + 0x31b0143], 0x3b
add dword [rbx], ebx
add edi, dword [rbx]
je 0x401f6e
add byte [rax], al
or eax, 0x78000000
in al, dx
inc eax
add byte [rax], al
add byte [rax], cl
out dx, al
inc eax
add al, byte [rax]
add al, cl
out dx, al
call 0xffffffffc8401f8f
out dx, eax
call qword [rax - 0x38000000]
ljmp [rax + 2]
add byte [rax], al
mov bl, bh
call 0xffffffffa8401fa5
sti
inc dword [rax]
add dword [rax], eax
add al, cl
sti
lcall [rax]
add dword [rax], eax
add byte [rax], bl
cld
call qword [rax + 1]
add byte [rax], al
push -0x77000004
add dword [rax], eax
add al, cl
std
call 0x28401fce
inc dword [rax]
add eax, dword [rax]
add byte [rax + 0x48ffffff], bl
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401fff
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
xor bh, ch
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40202f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
mov al, 0xeb
inc dword [rax + 1]
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rax + 0x12fffffa], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
pop rsp
add byte [rax], al
add byte [rax + 0x12fffffa], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
je 0x402086
add byte [rax], al
test al, 0xfa
dec dword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdx + rax - 0x79e7f1bf], cl
add eax, dword [rcx + 0xe]
and byte [rbx + 0xe0a7404], al
sbb byte [rsi + rcx + 0x10], al
or byte [rdx + 0xb], cl
sbb byte [rcx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
add byte [rax], al
xor al, 0
add byte [rax], al
lodsb al, byte [rsi]
add byte [rax], al
add al, al
cli
dec dword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdx + rax - 0x79e7f1bf], cl
add eax, dword [rcx + 0xe]
and byte [rbx + 0xe0a7404], al
sbb byte [rsi + rcx + 0x10], al
or byte [rdx + 0xb], cl
sbb byte [rcx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
add byte [rax], al
pop rsp
add byte [rax], al
add ah, ah
add byte [rax], al
add al, bl
cli
lcall [rbx + 1]
add byte [rax], al
add byte [rdi + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx + 0x400e4707], al
jno 0x402132
cmp byte [rcx - 0x3d], al
xor byte [rcx - 0x3a], al
sub byte [rdx - 0x34], al
and byte [rdx - 0x33], al
sbb byte [rdx - 0x32], al
adc byte [rdx - 0x31], al
or byte [rsi + rcx + 0x40], cl
add dword [rdi], -0x7a
mov word [rip + 0x38e048d], es
pop qword [rdx]
add byte [rax], al
add byte [rax], al
pop rsp
add byte [rax], al
add byte [rcx + rax], al
add al, bl
sti
lcall [rbx + 1]
add byte [rax], al
add byte [rdi + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx + 0x400e4707], al
jno 0x402192
cmp byte [rcx - 0x3d], al
xor byte [rcx - 0x3a], al
sub byte [rdx - 0x34], al
and byte [rdx - 0x33], al
sbb byte [rdx - 0x32], al
adc byte [rdx - 0x31], al
or byte [rsi + rcx + 0x40], cl
add dword [rdi], -0x7a
mov word [rip + 0x38e048d], es
pop qword [rdx]
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x4021d1
add eax, dword [rax]
or eax, 0x1b030040
or al, 7
or byte [rax + 0x54000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
pop rax
out dx, al
mov esp, 0x400000a
int3
and al, byte [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx - 0x7ff1bbf9], al
add dword [rbx], eax
lahf
or byte [rdx], cl
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
sbb al, 2
add byte [rax], al
jmp 0x402232
push qword [rdi]
adc byte [rbx + 0x200e4802], al
add ah, byte [rdi + 0x41100e0a]
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add r8b, byte [rax]
add al, bl
jmp 0x40225a
cli
add byte [rax], al
add byte [rax], al
adc byte [rdx], al
int1
or byte [rax + rax], al
add byte [rdx + rax], bl
add byte [rax], ah
cld
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x4022aa
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add al, byte [rax]
add byte [rax - 4], cl
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rbx]
pop rcx
add dword [rax + 0x28], edx
add byte [r8], al
rol byte [rdx], 1
add eax, 0xa10013d3
add al, 5
add byte [rax], al
mov es, word [rsi]
add eax, 0xca0015b7
or byte [rip - 0x11feeb48], al
or dword [rip - 0x7afeec10], eax
or al, 0x95
add byte [rax], al
leave
adc eax, dword [rip - 0x31ffea49]
adc eax, dword [rip - 0x1effec2d]
adc ecx, dword [rdx]
add byte [rax], al
xchg eax, edi
adc al, 5
in al, 0x14
add byte [rbx + 0x14f90514], dh
add edi, ebx
adc al, 5
adc dword [rip + 0x515ad00], 0x10115b2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add al, ah
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
lar eax, word [rax]
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, 0x400b
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rdi + rbx], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sub eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 0x4005], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
retf 2
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4009], dl
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 9], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4008], ch
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rdx + 8], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dl
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], ah
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400c], al
add byte [rax], al
add byte [rsi + 0x400c], dl
add byte [rax], al
add byte [rsi + 0x400c], ah
add byte [rax], al
add byte [rsi + 0x400c], dh
add byte [rax], al
add dh, al
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
push rsi
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x403158
je 0x403161
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x40316f
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x40316c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002d000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 0x4005], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rdx + 8], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax + 0x4008], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax + 9], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add byte [rax + 0x4009], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add byte [rax + 0x400b], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
loopne 0x40324d
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400d6000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rdi + rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rax + 0x1f], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], dl
add ah, cl
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
call 0x409332
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
sal byte [rax], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0xf], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400f], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, ah
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rbx], bl
add byte [rax], dl
xor esp, dword [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg byte [rax], al
add byte [rax], al
add dword [rax], eax
adc al, 0
call 0x4094ca
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x2000000], ch
add byte [rsi], cl
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add dl, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add byte [rax], al
add byte [rcx], al
add byte [rbx], bl
add byte [rax + 0x6033], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, cl
add byte [rax], al
add byte [rcx], al
add byte [rdx], dl
add al, cl
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fld qword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, ch
add byte [rax], al
add byte [rax], al
add byte [rcx], dl
add byte [rax + 0x1f], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bh
add byte [rax], al
add byte [rcx], al
add byte [rcx], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rcx]
add byte [rax], al
add byte [rax], al
adc al, 0
clc
sub eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rcx]
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x4095d2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
add dword [rax], eax
add byte [rcx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add eax, dword [rax]
add byte [rax], ah
add byte [rdx], bl
add al, dl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rcx], dl
add byte [rbx], bl
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
sbb byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x12000001], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax + 0x120000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], dh
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x20000001], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, al
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x12000001], bl
add byte [rdi], cl
add byte [rdi + rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, dh
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 2], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
in eax, dx
add al, byte [rax]
add byte [rcx], dl
add byte [rbx], bl
add byte [rax + 0x33], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 2], ch
add byte [rax], al
and al, byte [rax]
add byte [rax], dl
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx], 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
wait
add al, byte [rax]
add byte [rcx], dl
add byte [rbx], bl
add byte [rax], ah
xor esp, dword [rax]
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lahf
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, al
add al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add al, byte [rax]
add byte [rcx], dl
add byte [rax], dl
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, eax
add al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add eax, dword [rax]
add byte [rax], dl
add byte [rdx], bl
add al, dl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 3], al
add byte [rax], al
and al, byte [rax]
add al, dh
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdx
add eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rax], dh
sbb eax, 0x40
add byte [rax], al
pop rbx
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbx + rax + 0x2110000], al
sbb al, byte [rax]
loopne 0x403872
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x11000003], dl
add byte [rbx], bl
add byte [rax], al
xor ah, byte [rax]
add byte [rax], al
add byte [rax], al
adc byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsd dword [rsi], dword ptr [rdi]
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], dh
adc byte [rax], al
add byte [rax], al
add byte [rax], al
mov esp, 0xa
add byte [rax], al
add byte [rdi + 0x11000003], ch
add bl, byte [rdx]
add al, bl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov esp, 0x12000003
add byte [rsi], cl
add byte [rax + 0x401e], dl
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
int3
add eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rax], dh
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [r8], r8b
add byte [rax], al
add byte [rax], al
add al, dh
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 4], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rcx], dl
add byte [rbx], bl
add byte [rax + 0x33], ah
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 4], ah
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
loopne 0x40394a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 4], dh
add byte [rax], al
and al, byte [rax]
add al, dl
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
pop rbx
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsp + rax + 0x120000], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, 0x22000004
add byte [rsi], cl
add byte [rax + 0x401b], al
add byte [rax], al
add byte [rbp], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd qword [rax + rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rax], dl
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
add al, 0
add byte [rdx], ah
add byte [rsi], cl
add byte [rax + 0x401b], al
add byte [rax], al
add byte [rbp], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], dl
add byte [rbx], bl
add byte [rax + 0x6033], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add eax, 0x220000
add al, dh
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, byte [rip + 0x120000]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdx
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jbe 0x403a07
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edx, 0x11000000
add byte [rbx], bl
add byte [rax + 0x6033], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + rax + 0x120000], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edx, 0x10000005
add byte [rdx], bl
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol dword [rip + 0x220000], 0xe
add byte [rax], dh
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [r8], r8b
add byte [rax], al
add byte [rax], al
add ch, ah
add eax, 0x120000
add byte [rax], al
add byte [rip + 0x40], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb dword [rsi], eax
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rsi], eax
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
insb byte [rdi], dx
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rdi], dh
add byte [rax], al
add dh, al
add eax, dword [rax]
add byte [rdx], dl
add byte [rbx], cl
add byte [rax + 0x400b], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 6], dh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x72], ah
je 0x403bb0
je 0x403bb4
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x403b66
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403be4
jb 0x403bea
pop rdi
jne 0x403bf3
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x403bed
je 0x403be9
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403c09
jb 0x403c0f
pop rdi
jne 0x403c18
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x403c1b
jns 0x403c0b
outsb dx, byte gs:[rsi]
je 0x403c22
jns 0x403bb2
jb 0x403c16
insd dword [rdi], dx
pop rdi
jne 0x403c28
insd dword [rdi], dx
jns 0x403bbe
pop rdi
pop rdi
jb 0x403c24
insd dword [rdi], dx
pop rdi
jne 0x403c36
insd dword [rdi], dx
jns 0x403c2b
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403c36
jns 0x403c36
outsb dx, byte gs:[rsi]
je 0x403c4d
jns 0x403bdd
movsxd rbp, dword [rsi]
movsxd rsi, dword [rax + 0x70]
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x403c63
pop rdi
pop r15
insd dword [rdi], dx
imul esi, dword fs:[rbx + 0x74], 0x535a5f00
je 0x403c49
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdi
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403cb6
jns 0x403cb6
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403cc7
jns 0x403cc7
jae 0x403cde
jb 0x403ce1
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
push rbx
je 0x403caf
movsxd rbp, dword [rcx + 0x6e]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403cc4
xor byte [rdi + 0x5f], bl
je 0x403cff
jb 0x403d08
ja 0x403cfa
insb byte [rdi], dx
outsb dx, byte gs:[rsi]
je 0x403d09
pop rdi
jb 0x403d17
outsd dx, dword [rsi]
jb 0x403cf8
movsxd rax, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
insd dword [rdi], dx
insd dword [rdi], dx
jae 0x403d22
je 0x403cff
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x6c5f5f00
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x403d59
jb 0x403d5c
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x403d4e
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x403d6f
jae 0x403cff
pop rdi
pop rdx
insb byte [rdi], dx
push rax
jbe 0x403d46
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x61]
pop rdi
jb 0x403d80
je 0x403d85
jb 0x403d8e
ja 0x403d61
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
push rbx
je 0x403d6b
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403d90
imul ebp, dword [rdi + 0x73], 0x7361625f
xor dword gs:[rip + 0x636e7973], esi
pop rdi
ja 0x403dd2
je 0x403dd3
pop rdi
jae 0x403de2
imul ebp, dword fs:[rdi + 0x45], 0x47404062
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x403e01
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x403ddc
jbe 0x403e0d
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push rbx
xor r8b, byte fs:[rbp + 0x76]
add byte [rdi + 0x5f], bl
movsxd rdi, dword [rax + 0x61]
pop rdi
je 0x403e27
js 0x403e2d
je 0x403e06
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x646c7200
add byte [rdi + 0x5a], bl
push rbx
je 0x403e15
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x403e6a
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x403e92
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x403e93
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403ea8
pop rdi
jae 0x403ebe
jb 0x403ec1
add byte [rdi + 0x5a], bl
push rbx
imul esi, dword [rcx], 0x5f4d5f30
js 0x403ecf
jb 0x403ebe
movsxd rsi, dword [rcx + rcx*2 + 0x64]
push r10
push rbx
imul edx, dword [rdx + 0x54], 0x4740405f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
pop rdi
pop rdx
push rbx
je 0x403eb5
jbe 0x403ee6
movsxd rsi, dword [rdi + rbp*2 + 0x72]
js 0x403edb
js 0x403ed1
xor r8b, byte [rbp + 0x76]
add byte [rdi + 0x5a], bl
push rbx
je 0x403ece
jbe 0x403eff
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push rbx
xor dword fs:[r15], r14d
pop rdi
pop r15
jne 0x403f1d
je 0x403f12
jo 0x403f26
outsb dx, byte gs:[rsi]
insd dword [rdi], dx
add byte [rdi + 0x5f], bl
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x403f01
movsxd rbp, dword [rdi + 0x75]
je 0x403f12
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
xor esp, dword [rdi + rbp*2 + 0x74]
jbe 0x403ee7
pop rdi
pop rdi
jae 0x403f5b
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x403f40
jbe 0x403f71
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push r11
pop rdi
js 0x403f69
js 0x403f5f
push r11
push r11
xor dword [rdi + 0x45], ebx
xor dword [rbp + 0x76], r8d
add byte [rdi + 0x5a], bl
push rbx
je 0x403f5e
pop rdi
pop rdi
outsd dx, dword [rsi]
jae 0x403fa7
jb 0x403f9a
insd dword [rdi], dx
pop rdi
imul ebp, dword [rsi + 0x73], 0x49747265
movsxd rdx, dword [rbx + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403fa8
je 0x403fbd
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x403f88
xor esp, dword [rdx + 0x61]
jae 0x403fc5
movsxd rbx, dword [rdi + 0x6f]
jae 0x403fd5
jb 0x403fc8
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
push rax
push r11
xor ebx, dword [rdi + 0x6c]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
insd dword [rdi], dx
insd dword [rdi], dx
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x403ff1
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x64707300
add byte [rdi + 0x5f], bl
jae 0x404016
pop rdi
jae 0x40401a
jb 0x40401d
add byte [rdi + 0x5a], bl
push rbx
je 0x403fe6
jbe 0x404017
movsxd rsi, dword [rdi + rbp*2 + 0x72]
js 0x40400c
js 0x404002
xor dword [r15], r14d
pop rdi
pop r15
jne 0x404035
je 0x40402a
jo 0x40403e
outsb dx, byte gs:[rsi]
insd dword [rdi], dx
add byte [rdi + 0x5f], bl
jae 0x40404c
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x40402c
jbe 0x40405d
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push r11
pop rdi
push rbx
push r11
push r11
xor dword [rdi + 0x45], ebx
xor dword [rbp + 0x76], r8d
add byte [rdi + 0x5a], bl
push rbx
je 0x404050
jbe 0x404081
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push rbx
xor dword fs:[rbp + 0x76], r8d
add byte [rdi + 0x5a], bl
push rbx
je 0x404069
jbe 0x40409a
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push r11
pop rdi
push rbx
push r11
push r11
xor dword [rdi + 0x45], ebx
xor r8b, byte [rbp + 0x76]
add byte [rdi + 0x5a], bl
push rbx
je 0x40408d
jbe 0x4040be
movsxd rsi, dword [rdi + rbp*2 + 0x72]
js 0x4040b3
js 0x4040a9
xor dword [rbp + 0x76], r8d
add byte [rdi + 0x5a], bl
push rbx
outsd dx, dword [rsi]
cmp dword [rdi + 0x4d], ebx
pop rdi
imul ebp, dword [rsi + 0x73], 0x49747265
push r10
push rbx
outsd dx, dword [rsi]
push rsp
pop rdi
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x61]
pop rdi
outsb dx, byte gs:[rsi]
pop rdi
movsxd rsp, dword [rcx + 0x74]
movsxd rbp, dword [rax + 0x40]
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
push rbx
je 0x4040e4
pop rdi
pop rdi
je 0x404120
jb 0x404129
ja 0x40411b
pop rdi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsi, dword [rsi + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x61]
pop rdi
imul ebp, dword gs:[esi + 0x5f], 0x63746163
push 0x58434040
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
je 0x404159
add byte [rdi + 0x5a], bl
push rbx
je 0x404135
jbe 0x404166
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push r11
pop rdi
js 0x40415e
js 0x404154
push r11
push r11
xor dword [rdi + 0x45], ebx
xor r8b, byte [rbp + 0x76]
add byte [rdi + 0x5f], bl
js 0x40419a
pop rdi
jo 0x40418a
jb 0x40419a
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
outsb dx, byte [rsi]
ja 0x4041b0
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x4041bf
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x4041d2
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
insd dword [rdi], dx
insd dword [rdi], dx
movsxd rsi, dword [rax + 0x79]
pop r15
xor ch, byte [rsi]
xor dword [rax + rax], esi
pop rdi
pop rdx
push rbx
outsd dx, dword [rsi]
cmp dword [rdi + 0x4d], ebx
pop rdi
imul ebp, dword [rsi + 0x73], 0x49747265
js 0x4041d3
push r10
push rbx
outsd dx, dword [rsi]
push rsp
pop rdi
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
insd dword [rdi], dx
imul ebp, dword [rsi], 0x534e5a5f
imul esi, dword [rcx], 0x5f4d5f30
js 0x40422a
jb 0x404219
movsxd rsi, dword [rcx + rcx*2 + 0x78]
push r10
push rbx
imul edx, dword [rdx + 0x54], 0x4740405f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
add byte [rsi], ch
jae 0x404251
insd dword [rdi], dx
je 0x40423c
add byte [rsi], ch
jae 0x404254
jb 0x404256
add byte [rsi], ch
jae 0x404250
jae 0x40425e
jb 0x404260
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x404261
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x40426f
outsb dx, byte cs:[esi]
jne 0x40423d
jne 0x40427b
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x40424b
push 0x687361
jns 0x404294
jae 0x4042a1
insd dword [rdi], dx
add byte [rsi], ch
jns 0x40429c
jae 0x4042a4
jb 0x404232
outsb dx, byte cs:[esi]
jne 0x404265
jbe 0x40429e
jb 0x4042ae
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x404272
jbe 0x4042ab
jb 0x4042bb
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x4042b6
insb byte [rdi], dx
jns 0x4042c5
add byte [rsi], ch
jb 0x4042c0
insb byte [rdi], dx
jo 0x4042cc
je 0x404262
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x40429b
outsd dx, dword [esi]
je 0x404271
je 0x4042d9
js 0x4042ea
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x4042ef
je 0x4042e5
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x404308
jo 0x40431c
pop rdi
je 0x40430c
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x40431a
jns 0x4042bb
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x404336
jns 0x4042c7
push 0x63
jb 0x4042cc
jns 0x40433e
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x404348
je 0x4042de
je 0x404344
add byte [rsi], ch
jae 0x40435b
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x4042f2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 1
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0xa000000000004005]
add eax, 0
add byte [rax], al
retf 2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 8], ch
add byte [rax], al
add byte [rax], al
add byte [rdx + 8], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4008], ch
add byte [rax], al
add byte [rax + 8], ch
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or qword [rax], rax
add byte [rax], al
add byte [rax], al
or qword [rax], rax
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4009], dl
add byte [rax], al
add byte [rax + 9], dl
add byte [rax], al
add byte [rax], ch
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rip + 0x19000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x400b], bh
add byte [rax], al
add byte [rax + 0xb], bh
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
loopne 0x40461d
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edx
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rbx], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1f], ch
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1f], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
je 0x40475a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, dx
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, cl
and al, byte [rax]
add byte [rax], al
add byte [rax], al
int3
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
call 0x404842
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sub eax, 0x60
add byte [rax], al
clc
sub eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
sal byte [rax], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rcx], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x4049fa
add byte [rax], al
add byte [rax], al
add al, ah
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [r8], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rdx], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
cmp eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rsi + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
