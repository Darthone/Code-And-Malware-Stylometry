call 0x401568
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401380
add ebx, ebx
je 0x401336
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x40136e
cmp rbp, -4
ja 0x40136e
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x401356
add ecx, 4
mov dl, byte [rax]
je 0x40137e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x40136e
ret
cld
pop r11
cmp r8b, 2
je 0x401396
jmp 0x401413
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x4013a6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x40138e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x4013be
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x4013ab
sub eax, 3
jb 0x4013dc
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x401413
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x401403
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401401
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4013f0
cmp rbp, -0xd00
adc ecx, eax
call 0x401342
jmp 0x401396
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4014ec
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40148a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x4014d6
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x4014a9
push 0x3a707474
jne 0x401502
js 0x4014c2
jae 0x4014fc
outsb dx, byte cs:[rsi]
je 0x4014bb
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x401529
jb 0x40151b
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x401546
jb 0x401559
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x2125c7
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x2125c7
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x401424
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x40154f
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4014fd
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f15f7
jb 0x40160f
movsxd rbp, dword [rdi]
jae 0x401609
insb byte [rdi], dx
js 0x40160f
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x4015ef
cmp rsi, rcx
jae 0x4015f7
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x4015d6
cmp al, 0x8f
ja 0x4015d6
cmp byte [rsi - 2], 0xf
je 0x4015dc
sub al, 0xe8
jg 0x4015d9
push rdi
cmp al, 1
ja 0x4015c4
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x4015c7
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x4015f4
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x40164b
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1ac9
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40168f
mov al, 0xa
jmp 0x40168f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x40166b
inc ebx
mov al, 0
jmp 0x401693
mov al, 2
jmp 0x401693
mov al, 3
jmp 0x401693
mov al, 0x3c
jmp 0x401693
push rcx
rcr ah, 1
fstp st(7)
jle 0x4016d4
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x4016e6
jg 0x4016d8
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6e5b
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x401732
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb68af
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x40173a
cmp esi, 0x21585055
jne 0x40173e
jge 0x401730
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x401733
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x401737
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x4017e3
pop rcx
or al, 0x3b
jb 0x4017e9
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x40175b
jmp 0x40175d
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x366169e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf538e6
in eax, dx
jg 0x401795
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x4017db
mov bh, 0x2a
add edi, 0x10
jmp 0x4017d8
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x401815
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401851
jne 0x401868
fstpnce st(6), st(0)
jle 0x401831
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x401867
jrcxz 0x40189b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b7ff
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x40191a
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x4018da
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295eaf
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x40194d
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x4018e7
and ecx, 7
or al, 0xeb
jae 0x401952
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x401987
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x4019c5
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x40197e
push rax
call 0xffffffff868d166b
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401988
std
cmp edi, esi
xchg eax, edi
jle 0x4019dd
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95f69
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x4019db
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x4019c9
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x4019f2
js 0x401a32
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x401ac4
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2cff
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x401ae5
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401aea
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc2159c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401a78
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
or dword [rbx], ecx
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], dh
add ah, byte [rax + 0x90]
add byte [rax], al
add byte [rax], al
add dil, dil
add byte [rbx], bl
add byte [rax], al
or byte gs:[rax], al
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401b9e
je 0x401ba7
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401b70
mov dh, 0x7d
jbe 0x401b6f
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401ba8
sahf
sahf
add al, 0
cwde
add eax, 0x1f90d000
and byte [rdi + 0x5700006], bl
add byte [rsi - 0x6fd837f8], bh
invd
add al, bh
or dword [rax], eax
test al, 9
in al, dx
adc ecx, eax
or al, byte [rax]
or eax, dword [rax]
call 0x20bc2a1
add ecx, dword [rax + rax]
adc byte [rcx + 0x1f204c0d], cl
add byte [rax - 0x7f8d4ff1], al
sub eax, 0x102f1f1f
or ah, byte [rdi]
nop
adc dword [rax], eax
rcl byte [rdx], 1
add dh, al
sbb al, 0x20
rcl bh, 0x13
add byte [rdx + 0x40195814], al
mov eax, 0x1537602d
in al, 3
in al, 0x13
add byte [rax], al
add byte [rax], cl
cmp dword [rax - 0x4a], eax
or dword [rax], ebx
sbb dword [rcx], ecx
in al, 3
insb byte [rdi], dx
xor byte [rdi], dl
sbb al, byte [rax]
rcr byte [rbx + 0x1be409b2], 0
loopne 0x401c0d
adc eax, dword [rcx]
mov dl, 0xd8
xchg eax, ecx
mov esp, 0xfff10004
or al, 0x1b
mov edi, 0xb869bb09
sbb dword [rdi + 0x400f2002], edx
xchg byte [r8 + rdx*4 + 0x1b], spl
mov bl, 0xdd
sbb edx, dword [rdx + 0x355f44a0]
adc byte [rbx], dh
pop rdi
push rdi
mov al, 1
push rbx
jp 0x401bae
or al, 0xc9
rol byte [r14 + 0x4aec21b0], 0x97
movsd dword [rdi], dword ptr [rsi]
xlatb
stosd dword [rdi], eax
mov edi, 0xece41906
pop rbp
mov eax, 0x7384a19c
or cl, ah
jbe 0x401c88
and byte [rdx], 0xe4
sbb dword [rcx + 0x47006c21], esi
add eax, 0xf095d89f
pop rsi
add eax, dword [rcx]
neg dword [r9]
cwde
adc ah, byte [rsi + 0x53]
ret 0x1f14
sub dl, byte [rdi]
jrcxz 0x401c00
adc dword [rbx + 0x766f473d], ebx
add al, 0x3f
xor bl, dh
add dword [rax + 0x46], esp
add dword [rbp + 0x6686c3f], ecx
loope 0x401c99
or byte [rdx + 0x37], bl
rcr byte [rbx], 1
mov dl, 0x69
sahf
push rbp
add byte [rdi], dl
stosb byte [rdi], al
adc dh, byte [rax + 0x1f]
jb 0x401c99
jp 0x401c9d
sub dh, byte [rsi + 0x65]
out 0x60, eax
ja 0x401c5c
add dword [rax], eax
leave
mov ebx, 0xdd10d8b2
pop rdi
add cl, dh
cmpsd dword [rsi], dword ptr [rdi]
mov al, 0x20
xor ebp, dword [rdi]
pop rsi
pop rcx
mov cl, 0x21
mov ah, 0x17
push rdx
add ah, byte [rax + rcx - 0x45]
shr byte [rdi], 0x6c
xchg eax, ecx
in al, dx
add eax, 0x2c021c2
add ebp, dword [rdi]
jo 0x401c5a
mov al, 0xb
sub eax, 0x39064717
jnp 0x401ccf
fxsave [rdi]
wait
nop
add cl, ch
xchg byte [rdi + rdi], al
rol byte [rdi + 0x20], 0xb0
add dword [rcx + 0xf11dc66], eax
add al, 0xa7
sahf
cmp al, 0x7b
jb 0x401ce5
add esi, dword [rax]
sbb al, 0x47
vcvtss2sd xmm8, xmm15, dword [rax + rax]
jmp 0x27b45dc0
adc byte [rcx], bh
loope 0x401d11
jbe 0x401c8f
add al, 0x47
add al, 0x97
and byte [rcx], 0xd9
mov esi, 0x217fd21
sar byte [r9 - 0xa], 1
in al, 0xd9
or dword [rip + 0x1032002f], eax
add dword [rdi - 0x7c], eax
add byte [rdx + 0x10], dh
cmp dword [rax], edi
or byte [rdi], bl
and byte [rip + 0x793d9e4e], al
movabs al, byte [0x4ec805285f042c17]
sahf
jno 0x401d8c
xor eax, 0x1f008705
sbb edx, dword gs:[rdx - 0x58ffbc4d]
movabs al, byte [0xa2071095e7b22f45]
add eax, 0x7672bf1b
or byte [rbx + 0x5ca2fae], bl
mov edi, 0x610e4e28
int3
jae 0x401d75
push rax
jb 0x401de8
test byte [rip - 0x6157b7e9], 0x1d
xchg eax, edx
xchg eax, ebx
add dword [rax], esp
and eax, 0x33c0a701
fsub dword [rcx]
in al, 0x42
clc
test byte [rcx], cl
imul ecx, dword [rcx + 0x3bc25760], -0x20
ja 0x401d78
out 0x47, eax
nop
adc esi, edx
adc byte [rip + 0x1b070840], cl
or byte fs:[rcx], bl
ret 0x3317
and dword [rcx], r11d
test byte [rcx], ah
outsb dx, byte [rsi]
xor byte [r8], r12b
pop rsp
mov cl, 0x70
push rdi
lahf
mov al, 0x2b
mov ecx, eax
mov bh, 0x75
pop rdi
mov dh, 0x90
xchg byte [r8 - 0x340f6c0], spl
jmp qword [rbx + 0x72]
je 0x401e46
je 0x401e4a
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
add byte [rbp + 0x72], ah
fdivp st(5)
fstp st(2), st(0)
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401e1d
outsd dx, dword fs:[rsi]
pop rdi
std
neg bh
fimul word [rbx]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x401e6d
jne 0x401e89
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x401e82
in eax, dx
mov al, 0xbf
sub dword [rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bp, word [rsi + 0x69], 0xdb08
in eax, dx
sbb edi, ebp
jb 0x401ea1
jns 0x401e91
popfq
jb 0x401eaf
add byte [rsi + 0xa], ah
insd dword [rdi], dx
and byte gs:[rbp + 0x58], dh
out dx, al
insd dword [rdi], dx
insd dword [rdi], dx
jns 0x401e77
or eax, 0x2a74295f
insd dword [rdi], dx
jg 0x401e08
pushfq
jo 0x401ec2
and al, 0x47
sub r14, qword [rbx - 0x49]
push qword [rdi + 0x495fe01b]
pop rdx
xor ah, byte [rdx + 0x73]
xor eax, 0x31787863
xor dword [rbx], ebx
pop rdx
push rbx
sti
out dx, eax
fsubp st(5)
je 0x401ec3
cmp byte [rbx], dl
imul ebp, dword [rdi + 0x3c], 0x4152464f
pop r15
retf -0x694
mov al, 0x99
xlatb
or eax, dword [rdi + 0x4e]
push rbp
and byte [rsi - 5], dil
leave
push rdx
push rdi
push rbx
cli
push rsp
adc esi, esi
sub byte [rsi - 0x71e8ef9c], al
pop rbp
out dx, al
pop rdx
pop cx
jle 0x401eee
movsxd rbp, dword [rsi + 0x1fddbfd4]
pop r8
pop rax
pop rdi
xor esi, dword [rdx + 0x15]
imul ebx, dword [rbp - 0x3d], -0x49
jbe 0x401f3b
movsxd rax, dword [rcx + rcx*2]
or dh, byte [rdi]
lodsd eax, dword [rsi]
not dh
jge 0x401efc
xor dword [rax + 0x63697361], edi
jb 0x401f1c
movsxd rbx, dword [r9d]
insd dword [rdi], dx
imul eax, dword [rsi + 0x686312b7], 0x61
push 0x1073615a
outsd dx, dword [rsi]
mov edi, 0x615345ee
add al, 0x45
push rbx
xor eax, 0x314445ac
jbe 0x401f8d
insb byte [rdi], dx
fadd dword [rbp + 0x68]
fld xword [rcx + 0x62]
xor al, 0x63
std
packuswb mm5, qword [r13 - 0x7d]
outsd dx, dword [rsi]
push rsi
xchg eax, esp
mov eax, ebx
jbe 0x401f85
push rdx
mov cl, 0x43
test ah, ch
mov dh, 0x6c
pop rdi
jae 0x401edf
pop rdx
insb byte [rdi], dx
push rax
jbe 0x401ecb
add dword [rdx + 0x79362c80], esi
xchg eax, esi
adc eax, 0x39ed1b6e
pop rdi
xor byte [r9], r11b
push -0x2051adbb
jbe 0x401f3d
test byte [rbp + 0x2e], bl
xor dl, byte [rbx + 0x4d]
pop rdi
je 0x401fc2
jb 0x401fcb
test byte [rdx - 0x3f], 0xb5
ja 0x401f7f
sbb dword [rax - 0x53], edx
xor dword [rsi], ebp
xor ebp, dword [rbp - 0x3d]
pop rbp
movabs dword [0x4934656810a23870], eax
pop rdi
mov dh, 0x12
pop rsp
fnstenv [r12 + r12]
xor dword [rip + 0x6dd6e173], esi
fstp xword [rcx + 0x6e]
xchg eax, edx
ja 0x401fb2
push 0x45166497
movsxd rcx, dword [rcx]
mov cs, word [r8]
xor dl, byte [rbx - 0x3f]
outsb dx, byte [rsi]
loope 0x402008
rcr byte [rdi + 0x32], 1
fldcw word [rsi]
xor eax, 0xac87fcda
jne 0x401fa0
js 0x401fec
sbb dword [rdx + 0x33], ebx
insd dword [rdi], dx
jb 0x402017
push rdx
js 0x402006
mov al, 0xb9
sub ch, byte [rbx]
or dword [rsi - 0x7a9c9cca], 0x57
jb 0x401f40
push r12
jmp 0xffffffffab898d71
or al, 0x43
test eax, 0x90626154
mov dh, 0x8d
or byte [rbp + 0x1b], bl
xor al, 0x24
jne 0x40201a
jmp 0x2a502ac4
xor dword [rcx], eax
mov ah, 0xbb
movsxd rsp, dword [rbp - 0x65]
movsxd rbp, dword [rbx - 0x20]
push r10
sbb rax, -0x42d4c9fb
movabs eax, dword [0x26c29799464f7044]
sub al, 0xb4
mov al, 0x43
xchg eax, ebp
mov dl, 0x31
xchg eax, edx
movabs dword [0x5f5dcb0d3572fe4a], eax
xchg eax, edi
sbb dl, al
xor al, 0xdd
cmp dh, byte [rdx]
outsb dx, byte [rsi]
leave
jne 0x402094
pop rdi
xor ecx, ebp
je 0x40209b
hlt
pop rdx
lodsd eax, dword [rsi]
cmc
mov bl, 0x73
jg 0x402036
rcr bl, 0x76
mov bl, 0x96
mov ch, byte [rsi + 0x3b]
xor dword [rsi], esi
adc eax, 0x15acac6f
fcom qword [rdx + 0x6f146d17]
fidiv dword [rbx + 0x34aeb36]
xor dword [rbx], edx
xor ebx, ecx
sub eax, 0xd75a1ad
jb 0x402085
test ch, dh
push rax
stosb byte [rdi], al
sub eax, 0x33b52177
pop rcx
push rax
cmp dword [rsi - 0x53], ebp
mov ecx, 0x2c738437
fst dword [rbx + rax + 0x67]
xor dh, byte [rsi - 0x7b93ad9a]
test eax, 0x9a398662
mov ebx, 0x48792a45
outsd dx, dword [rsi]
xchg dword fs:[edx + 0xbdb6c2e], edx
jb 0x4020e2
movsxd rdx, ebp
jb 0x402087
scasb al, byte [rdi]
jo 0x4020fb
or esp, dword [rdi]
cli
or cl, bpl
test dword [rbp - 0x51], esi
insd dword [rdi], dx
movsxd rdi, esp
test esp, edx
or cl, ch
loop 0x4020ea
mov ch, 0xb2
mov cl, 0x1b
adc dword [rsi + 0x1d], ebp
xlatb
cmp bl, byte [rdi - 0x6f]
mov ch, byte [rbp + 0x75]
je 0x402044
in eax, 3
pop qword [rcx]
sub al, 0x8d
imul ebp, dword gs:[rsi + 0x57b70b68], 0x5f
jo 0x4020d9
jae 0x40208b
xchg eax, esi
in al, dx
nop
pop rbp
movabs al, byte [0x3d776e7e3076c142]
mov dh, 0xb2
sub eax, 0x647d5512
push rbp
in eax, dx
jbe 0x4020f4
or ah, bh
wait
sbb eax, dword [rbx + 0x43]
xor byte [rax], al
pop rbp
ret 0xbad
clc
jo 0x402171
jp 0x40212b
test dword [rdi - 0x7b], ebp
xchg dword [rcx + 0x78], eax
stc
js 0x4020ec
outsd dx, dword [rsi]
fmul dword [rdi - 0x34f6e143]
add byte [esi + ebp + 0x69], dl
xor dword [rax], esi
mov dl, 0x83
jne 0x402135
scasd eax, dword [rdi]
js 0x4020ea
movsxd rsi, dword [rax]
imul edx, dword [rdx + 0x31], 0xb80502db
outsd dx, dword [rsi]
cdq
add ch, byte [rbp - 0x3e]
insb byte [rdi], dx
ret
jbe 0x402134
je 0x4021a1
push -0x248b91f7
mov edx, 0x770b6e5
outsb dx, byte [rsi]
outsd dx, dword [rsi]
retf 0x152d
or eax, 0x7f1bd2b
outsb dx, byte [esi]
jne 0x402177
jne 0x40216e
sub eax, 0xa0dfa69
insb byte [rdi], dx
lodsd eax, dword [rsi]
adc byte [rdi], bh
cmp byte [rcx], cl
or al, 0x67
insd dword [rdi], dx
out 0x4f, al
sbb dword [r14 + 0x17], r14d
sbb ch, byte [rsi - 0x3e]
mov dh, 0x67
outsb dx, byte [rsi]
or al, 0x5f
sbb ebx, dword [rsi - 0x6a13eb49]
sub byte [rcx], r9b
pop rdx
je 0x4021ea
add ebp, dword [rsi + 0x7b]
or ch, byte [rdi + rbp*2]
or byte [rbx], cl
call 0xffffffff904559a6
and al, 0x6f
imul ebp, dword [rsi], 0x65
fdiv qword [rdx - 0x319776f9]
push 0x5d0d7264
stosd dword [rdi], eax
jo 0x402164
mov ch, 0xd4
popfq
jo 0x402215
or byte [rax + 0x2e1892d9], dh
push rcx
or ebx, dword [r11]
sub eax, 0x5f6ae0d6
movabs eax, dword [0x687b36699a000436]
jnp 0x40221a
add al, 0xa8
insb byte [rdi], dx
imul ebp, dword [rsi], 0x73
push rdx
std
add byte [rax], al
pop rax
je 0x40218c
add dword [rdi], eax
fmul qword [rdi + rsi*8 + 0x11c3f07]
imul eax, dword [rsi + 0x7230164], 0x90641921
push rsp
push rsp
and byte [rax + 0x4921921], dl
xor dword [rsi + rbp*2 + 0x28], esi
sbb dword [rsp + rsi*2 + 0x24], esp
jg 0x402214
sbb dword [rdx + rsi*8], -0xa
ljmp [rdi - 0x68]
cwde
nop
or al, 0x32
enter 0x534, 8
or al, 0x36
and ch, cl
or r10, rax
shl byte [rbx + rdx*4 - 0x4d], 1
and dword [rax + 0x3f06fb02], 0x62
xor rcx, r8
sbb byte [rsi + 3], dl
and al, 0x4f
js 0x4021b4
mov edi, 0x34d3f07
movsb byte [rdi], byte ptr [rsi]
pop rax
rcr byte [rbp + 0x5e], cl
mov edi, 0x486ce7ff
fiadd word [rdi]
mov edi, 0x93070238
add ecx, ebp
xchg byte [rbx + 0x3f], ch
clc
cmp dword [rbx + 7], esi
cmpsd dword [rsi], dword ptr [rdi]
mov al, 6
mov ah, byte [rip + 0x7aff94dd]
add al, 8
cmp ecx, esp
int 0x37
or qword [rsi + rsi*2], 0x58
inc dword [rdi + rdi + 0x392ef042]
enter -0xfe0, -8
add dword [rcx], ebx
nop
sbb byte [r8 - 0x72], al
adc eax, dword [rsi]
jb 0x402233
wait
push rsp
iretd
lcall [rdx]
lodsb al, byte [rsi]
or cl, bl
push rax
mov dword [rdi], edi
scasd eax, dword [rdi]
sbb edx, dword [rdx + 0x7007dc13]
adc byte [rdi], al
pop rcx
adc dword [rdx - 0x28c06bdf], esi
and ebx, dword [rbx + 0x60]
mov eax, 0x330f2f07
sbb dword [rdx + 0x7803f9d], esi
jg 0x402231
ret
enter 0x11f2, 0x3f
movabs dword [0x9ff07ef1059b99c], eax
nop
xor al, 0x94
test eax, 0xcce4a1bf
int 0x3f
mov edi, 0x1b06414e
mov dl, 0xb1
sar byte [rdi - 0x30], 1
push rax
xchg byte [rdx - 0x793740a4], dl
in eax, 0x26
lahf
movq qword [rbx - 0x3646dec0], mm3
mov dword [rdi], 0x99c94374
jg 0x40233b
fisttp dword [rsi]
jnp 0x402278
rol byte [rbx], cl
call qword [rax + 0x1039286e]
out 0x3f, eax
lar eax, word [rdi + rsi]
sbb eax, edi
dec ecx
mov ah, byte [rbp - 0x19]
mov r14b, 0xa4
or esi, dword [rax - 0x6407c0d2]
iretd
fsubr qword [rdi + rdi + 7]
jg 0x402302
add dword [rsi], eax
test dword [rdx + rsi], ecx
and al, 0x10
cwde
xchg eax, edx
mov r14b, 0xbf
or byte [rax + rcx], ch
leave
add dword [r9], eax
pcmpgtb mm5, qword [rax]
cmp dword [rbx], ebx
xor byte [rdi], bh
ror byte [rdx], 0
ror dword [rbp - 0x7a], -0x40
jg 0x40237a
movsb byte [rdi], byte ptr [rsi]
mov ebx, 0xe0083f10
and al, 0x17
jb 0x4022d4
shl al, 1
add ah, byte [rax]
mov al, 0x90
or eax, 0x307f1536
sbb eax, 0x34e0c216
mov edi, 0xc09e1107
sub dword [rbx + 0x42b2007b], ebx
mov edi, 0x96c8011e
mov cl, 0x48
mov ebx, 0x3c9cd2e7
imul esi, dword [rcx], -1
or byte [rdx], cl
xor dl, byte [rbx + 0x900d843]
jg 0x40238b
cmp eax, dword [rax]
add byte [rsi], dl
leave
movabs byte [0xff0000000907], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x10f7fdea], ecx
sub edx, edi
jne 0x40237c
ret 0x2e17
add byte [rbx], bl
add byte [rax], al
or byte gs:[rax], al
add al, dl
add byte [r8], al
add byte [r8], al
jg 0x4023a9
add byte [rax], al
add bh, bh
