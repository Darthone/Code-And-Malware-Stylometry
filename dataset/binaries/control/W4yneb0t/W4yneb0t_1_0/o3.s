xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6030d7
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400f50
mov eax, 0
test rax, rax
je 0x400f50
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400f98
mov eax, 0
test rax, rax
je 0x400f98
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x202369], 0
jne 0x400fba
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x202356], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400fd0
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400fcb
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
push r15
push r14
push r13
push r12
mov r12, rdx
push rbp
push rbx
mov r13, rsi
sub rsp, 0x98
mov rdx, qword [rdi]
mov rax, qword fs:[0x28]
mov qword [rsp + 0x88], rax
xor eax, eax
mov rax, qword [rsi]
mov byte [rsp + 8], cl
mov rsi, rdx
mov byte [rsp + 0x10], r8b
add rsi, rax
je 0x401144
cmp rdx, rax
mov r14, rdi
je 0x4014f8
jle 0x401501
movsx eax, cl
lea rbx, [rsp + 0x50]
lea rdi, [rsp + 0x40]
mov edx, eax
mov esi, 1
mov dword [rsp + 0x1c], eax
mov qword [rsp + 0x40], rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_construct
mov rax, qword [r13]
test rax, rax
jle 0x4011c0
xor ebp, ebp
mov qword [rsp], rbx
jmp 0x4010e7
nop
movzx esi, byte [rsp + 0x10]
mov byte [rax + rbx], sil
mov rax, qword [rsp + 0x40]
mov qword [rsp + 0x48], r15
mov byte [rax + rbx + 1], 0
mov rax, qword [rsp + 0x40]
cmp rax, qword [rsp]
mov rbx, qword [rsp + 0x48]
lea r15, [rbx + 1]
je 0x4011a0
mov rdx, qword [rsp + 0x50]
cmp r15, rdx
ja 0x401178
movzx esi, byte [rsp + 8]
add rbp, 1
mov byte [rax + rbx], sil
mov rax, qword [rsp + 0x40]
mov qword [rsp + 0x48], r15
mov byte [rax + rbx + 1], 0
mov rax, qword [r13]
cmp rax, rbp
jle 0x4011c0
mov rax, qword [rsp + 0x40]
cmp rax, qword [rsp]
mov rbx, qword [rsp + 0x48]
lea r15, [rbx + 1]
je 0x4011b0
mov rdx, qword [rsp + 0x50]
cmp r15, rdx
jbe 0x401080
lea rdi, [rsp + 0x40]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x40]
jmp 0x401080
nop
mov rdi, qword [rsp + 0x40]
lea rax, [rsp + 0x50]
cmp rdi, rax
je 0x401144
call sym.operatordelete
mov eax, 1
mov rcx, qword [rsp + 0x88]
xor rcx, qword fs:[0x28]
jne 0x401788
add rsp, 0x98
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word [rax + rax]
lea rdi, [rsp + 0x40]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x40]
jmp 0x4010be
nop dword [rax]
mov edx, 0xf
jmp 0x4010b5
nop word [rax + rax]
mov edx, 0xf
jmp 0x401104
nop word [rax + rax]
mov rbx, qword [r12 + 8]
cmp rbx, qword [r12 + 0x10]
je 0x4016f2
test rbx, rbx
je 0x401233
lea rax, [rbx + 0x10]
mov rbp, qword [rsp + 0x48]
mov qword [rbx], rax
mov r15, qword [rsp + 0x40]
mov rcx, r15
add rcx, rbp
je 0x4011fd
test r15, r15
jne 0x4011fd
mov edi, str.basic_string::_M_construct_null_not_valid
call sym.std::__throw_logic_error
cmp rbp, 0xf
mov qword [rsp + 0x38], rbp
ja 0x40151c
cmp rbp, 1
je 0x401569
test rbp, rbp
mov rdx, rax
jne 0x401537
mov qword [rbx + 8], rbp
mov byte [rdx + rbp], 0
mov rbx, qword [r12 + 8]
mov rax, qword [r13]
add rbx, 0x20
mov qword [r12 + 8], rbx
mov rcx, qword [r14]
xor ebp, ebp
lea rbx, [rsp + 0x70]
sub rcx, rax
mov rax, rcx
lea rcx, [rsp + 0x60]
cmp rax, 1
mov qword [rsp], rcx
jg 0x4012bb
jmp 0x401130
mov qword [r15], rdx
mov rdx, qword [rsp + 0x70]
mov qword [r15 + 0x10], rdx
mov rdx, qword [rsp + 0x68]
mov rdi, rbx
mov qword [r15 + 8], rdx
mov r15, qword [r12 + 8]
mov qword [rsp + 0x60], rbx
mov qword [rsp + 0x68], 0
mov byte [rsp + 0x70], 0
lea rax, [r15 + 0x20]
mov qword [r12 + 8], rax
cmp rdi, rbx
je 0x4012a3
call sym.operatordelete
mov rax, qword [r14]
sub rax, qword [r13]
add rbp, 1
sub rax, 1
cmp rax, rbp
jle 0x401130
mov edx, dword [rsp + 0x1c]
mov rdi, qword [rsp]
mov esi, 1
mov qword [rsp + 0x60], rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_construct
mov r15, qword [r12 + 8]
cmp r15, qword [r12 + 0x10]
je 0x401318
test r15, r15
mov rdi, qword [rsp + 0x60]
je 0x401290
lea rdx, [r15 + 0x10]
mov qword [r15], rdx
mov rdx, qword [rsp + 0x60]
cmp rdx, rbx
jne 0x401260
mov rsi, qword [rsp + 0x70]
mov rdi, qword [rsp + 0x78]
mov qword [r15 + 0x10], rsi
mov qword [r15 + 0x18], rdi
jmp 0x40126c
nop dword [rax]
mov rcx, qword [r12]
mov rdx, r15
sub rdx, rcx
mov rax, rdx
sar rax, 5
test rax, rax
je 0x4014e0
lea rsi, [rax + rax]
cmp rax, rsi
jbe 0x40172d
mov qword [rsp + 0x10], -0x20
mov rdi, qword [rsp + 0x10]
call sym.operatornew
mov rdi, qword [rsp + 0x10]
mov r15, qword [r12 + 8]
mov rcx, qword [r12]
mov qword [rsp + 8], rax
add rdi, rax
mov rdx, r15
add rax, 0x20
sub rdx, rcx
mov qword [rsp + 0x20], rdi
mov qword [rsp + 0x10], rax
add rdx, qword [rsp + 8]
je 0x4013c0
lea rsi, [rdx + 0x10]
mov qword [rdx], rsi
mov rsi, qword [rsp + 0x60]
cmp rsi, rbx
je 0x401552
mov qword [rdx], rsi
mov rsi, qword [rsp + 0x70]
mov qword [rdx + 0x10], rsi
mov rsi, qword [rsp + 0x68]
mov qword [rsp + 0x60], rbx
mov qword [rsp + 0x68], 0
mov byte [rsp + 0x70], 0
mov qword [rdx + 8], rsi
cmp rcx, r15
je 0x4014a3
lea rsi, [rcx + 0x20]
mov rax, r15
lea rdx, [rcx + 0x10]
mov r8, rbx
sub rax, rsi
mov rdi, rax
lea rsi, [rcx + rax + 0x30]
mov rax, qword [rsp + 8]
shr rdi, 5
jmp 0x40141e
nop dword [rax]
mov qword [rax], rcx
mov rcx, qword [rdx]
mov qword [rax + 0x10], rcx
mov rcx, qword [rdx - 8]
mov qword [rax + 8], rcx
mov qword [rdx - 0x10], rdx
mov qword [rdx - 8], 0
mov byte [rdx], 0
add rdx, 0x20
add rax, 0x20
cmp rsi, rdx
je 0x401448
test rax, rax
je 0x401411
lea rcx, [rax + 0x10]
mov qword [rax], rcx
mov rcx, qword [rdx - 0x10]
cmp rdx, rcx
jne 0x4013f0
mov rcx, qword [rdx]
mov rbx, qword [rdx + 8]
mov qword [rax + 0x10], rcx
mov qword [rax + 0x18], rbx
jmp 0x4013fa
nop dword [rax]
mov rcx, qword [rsp + 8]
mov rax, rdi
mov r15, qword [r12 + 8]
mov rdx, qword [r12]
shl rax, 5
mov rbx, r8
lea rax, [rcx + rax + 0x40]
cmp r15, rdx
mov qword [rsp + 0x10], rax
je 0x4014a3
mov qword [rsp + 0x28], r8
mov rbx, rdx
nop word [rax + rax]
mov rdi, qword [rbx]
lea rax, [rbx + 0x10]
cmp rdi, rax
je 0x401491
call sym.operatordelete
add rbx, 0x20
cmp r15, rbx
jne 0x401480
mov rbx, qword [rsp + 0x28]
mov r15, qword [r12]
test r15, r15
je 0x4014b0
mov rdi, r15
call sym.operatordelete
mov rax, qword [rsp + 8]
mov rdi, qword [rsp + 0x60]
mov qword [r12], rax
mov rax, qword [rsp + 0x10]
mov qword [r12 + 8], rax
mov rax, qword [rsp + 0x20]
mov qword [r12 + 0x10], rax
jmp 0x401299
nop word [rax + rax]
mov qword [rsp + 0x10], 0x20
mov rdi, qword [rsp + 0x10]
jmp 0x40134d
nop dword [rax + rax]
cmp rsi, qword [rip + 0x201e51]
je 0x401578
mov edx, 0xb
mov esi, str.IMPOSSIBLE_n
mov edi, obj.std::cout
call sym.std::__ostream_insert_char_std::char_traits_char__
xor eax, eax
jmp 0x401149
lea rsi, [rsp + 0x38]
xor edx, edx
mov rdi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_create
mov rdx, qword [rsp + 0x38]
mov qword [rbx], rax
mov qword [rbx + 0x10], rdx
mov rdx, rbp
mov rsi, r15
mov rdi, rax
call sym.imp.memcpy
mov rbp, qword [rsp + 0x38]
mov rdx, qword [rbx]
jmp 0x401222
mov rsi, qword [rsp + 0x70]
mov rdi, qword [rsp + 0x78]
mov qword [rdx + 0x10], rsi
mov qword [rdx + 0x18], rdi
jmp 0x4013a4
movzx edx, byte [r15]
mov byte [rbx + 0x10], dl
mov rdx, rax
jmp 0x401222
lea rax, [rsp + 0x60]
test rdx, rdx
mov qword [rsp + 0x68], 0
mov byte [rsp + 0x70], 0
mov qword [rsp], rax
lea rax, [rsp + 0x70]
mov qword [rsp + 0x60], rax
jle 0x401708
xor r12d, r12d
xor ebp, ebp
mov r13, rax
jmp 0x40161a
nop dword [rax]
movzx ecx, byte [rsp + 8]
mov byte [rax + r12], cl
mov rax, qword [rsp + 0x60]
mov qword [rsp + 0x68], rbx
mov byte [rax + rbx], 0
mov rax, qword [rsp + 0x60]
mov rbx, qword [rsp + 0x68]
cmp rax, r13
lea r12, [rbx + 1]
je 0x401690
mov rdx, qword [rsp + 0x70]
cmp r12, rdx
ja 0x401670
movzx ecx, byte [rsp + 0x10]
add rbp, 1
mov byte [rax + rbx], cl
mov rax, qword [rsp + 0x60]
mov qword [rsp + 0x68], r12
mov byte [rax + rbx + 1], 0
cmp qword [r14], rbp
jle 0x4016aa
mov r12, qword [rsp + 0x68]
mov rax, qword [rsp + 0x60]
cmp rax, r13
lea rbx, [r12 + 1]
je 0x4016a0
mov rdx, qword [rsp + 0x70]
cmp rbx, rdx
jbe 0x4015b0
mov rdi, qword [rsp]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r12
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x60]
jmp 0x4015b0
mov rbx, rax
mov rdi, qword [rsp + 0x40]
lea rax, [rsp + 0x50]
cmp rdi, rax
je 0x401665
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
nop dword [rax]
mov rdi, qword [rsp]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x60]
jmp 0x4015ec
mov edx, 0xf
jmp 0x4015e3
nop word [rax + rax]
mov edx, 0xf
jmp 0x401629
mov rsi, qword [rsp + 0x60]
mov rdx, qword [rsp + 0x68]
mov edi, obj.std::cout
call sym.std::__ostream_insert_char_std::char_traits_char__
mov edx, 1
mov esi, 0x401fc2
mov rdi, rax
call sym.std::__ostream_insert_char_std::char_traits_char__
mov rax, qword [rsp]
mov rdi, qword [rsp + 0x60]
add rax, 0x10
cmp rdi, rax
je 0x401515
call sym.operatordelete
xor eax, eax
jmp 0x401149
lea rsi, [rsp + 0x40]
mov rdi, r12
call sym.std::vector_std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char___std::allocator_std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char____::_M_emplace_back_aux_std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__const__
mov rax, qword [r13]
jmp 0x40123c
xor edx, edx
mov rsi, rax
jmp 0x4016b4
mov rbx, rax
mov rax, qword [rsp]
mov rdi, qword [rsp + 0x60]
add rax, 0x10
cmp rdi, rax
jne 0x401660
jmp 0x401665
movabs rdi, 0x7ffffffffffffff
cmp rsi, rdi
ja 0x40133f
test rsi, rsi
jne 0x40178d
mov qword [rsp + 0x20], 0
mov qword [rsp + 0x10], 0x20
mov qword [rsp + 8], 0
jmp 0x40137c
mov rbx, rax
mov rax, qword [rsp]
mov rdi, qword [rsp + 0x60]
add rax, 0x10
cmp rdi, rax
je 0x401651
call sym.operatordelete
jmp 0x401651
call sym.imp.__stack_chk_fail
shl rax, 6
mov qword [rsp + 0x10], rax
mov rdi, rax
jmp 0x40134d
nop
push r12
push rbp
mov esi, obj.n
push rbx
mov edi, obj.std::cin
call sym.std::istream::_M_extract_longlong_
mov esi, obj.r
mov rdi, rax
call sym.std::istream::_M_extract_longlong_
mov esi, obj.o
mov rdi, rax
call sym.std::istream::_M_extract_longlong_
mov esi, obj.y
mov rdi, rax
call sym.std::istream::_M_extract_longlong_
mov esi, obj.g
mov rdi, rax
call sym.std::istream::_M_extract_longlong_
mov esi, obj.b
mov rdi, rax
call sym.std::istream::_M_extract_longlong_
mov esi, obj.v
mov rdi, rax
call sym.std::istream::_M_extract_longlong_
mov r12, qword [rip + 0x201b98]
mov rbp, qword [rip + 0x201b99]
cmp r12, rbp
mov rbx, r12
je 0x40183a
nop word [rax + rax]
mov rdi, qword [rbx]
lea rax, [rbx + 0x10]
cmp rdi, rax
je 0x401831
call sym.operatordelete
add rbx, 0x20
cmp rbp, rbx
jne 0x401820
mov qword [rip + 0x201b67], r12
mov rbp, qword [rip + 0x201b40]
mov r12, qword [rip + 0x201b31]
cmp r12, rbp
je 0x40187a
mov rbx, r12
nop word [rax + rax]
mov rdi, qword [rbx]
lea rax, [rbx + 0x10]
cmp rdi, rax
je 0x401871
call sym.operatordelete
add rbx, 0x20
cmp rbp, rbx
jne 0x401860
mov qword [rip + 0x201b07], r12
mov rbp, qword [rip + 0x201ae0]
mov r12, qword [rip + 0x201ad1]
cmp r12, rbp
je 0x4018ba
mov rbx, r12
nop word [rax + rax]
mov rdi, qword [rbx]
lea rax, [rbx + 0x10]
cmp rdi, rax
je 0x4018b1
call sym.operatordelete
add rbx, 0x20
cmp rbp, rbx
jne 0x4018a0
mov r8d, 0x47
mov ecx, 0x52
mov edx, obj.rs_abi:cxx11_
mov esi, obj.g
mov edi, obj.r
mov qword [rip + 0x201a8d], r12
call sym.mrg
test al, al
jne 0x4018f0
pop rbx
pop rbp
pop r12
ret
nop dword [rax]
mov r8d, 0x56
mov ecx, 0x59
mov edx, obj.ys_abi:cxx11_
mov esi, obj.v
mov edi, obj.y
call sym.mrg
test al, al
je 0x4018e4
mov r8d, 0x4f
mov ecx, 0x42
mov edx, obj.bs_abi:cxx11_
mov esi, obj.o
mov edi, obj.b
call sym.mrg
test al, al
je 0x4018e4
mov rdi, qword [rip + 0x201a2b]
mov rax, qword [rip + 0x201a44]
mov r9, qword [rip + 0x201a15]
mov r8, qword [rip + 0x201a2e]
mov rdx, rdi
mov rsi, rax
sub rdx, r9
sub rsi, r8
sar rsi, 5
sar rdx, 5
cmp rsi, rdx
mov rcx, rsi
jge 0x4019b2
mov rcx, qword [rip + 0x201a1b]
mov qword [rip + 0x2019ec], rax
mov rax, qword [rip + 0x2019ed]
mov qword [rip + 0x2019d6], r8
mov r8, r9
mov qword [rip + 0x2019ec], r9
mov qword [rip + 0x2019ed], rdi
mov qword [rip + 0x2019ce], rcx
mov rcx, rdx
mov rdx, rsi
mov qword [rip + 0x2019e1], rax
mov rax, rdi
mov r9, qword [rip + 0x2019ef]
mov r10, qword [rip + 0x2019e0]
mov rdi, r9
sub rdi, r10
sar rdi, 5
cmp rdi, rcx
mov rsi, rdi
jg 0x401b2e
lea rdi, [rdx + rsi]
mov qword [rip + 0x201967], rcx
mov qword [rip + 0x201950], rdx
mov qword [rip + 0x201939], rsi
cmp rdi, rcx
jl 0x401b16
lea rdi, [rdx + rcx]
cmp rdi, rsi
jl 0x401b16
add rsi, rcx
cmp rsi, rdx
jl 0x401b16
test rcx, rcx
jle 0x401bbd
xor ebx, ebx
jmp 0x401a92
nop
mov rax, qword [rip + 0x201981]
mov edi, obj.std::cout
mov rdx, qword [rax - 0x18]
mov rsi, qword [rax - 0x20]
call sym.std::__ostream_insert_char_std::char_traits_char__
mov rdx, qword [rip + 0x201968]
lea rax, [rdx - 0x20]
mov qword [rip + 0x20195d], rax
mov rdi, qword [rdx - 0x20]
add rax, 0x10
cmp rdi, rax
je 0x401a5d
call sym.operatordelete
mov rax, qword [rip + 0x2018d4]
add rax, qword [rip + 0x2018bd]
mov rdx, qword [rip + 0x2018d6]
sub rax, rdx
cmp rax, rbx
jg 0x401b74
add rbx, 1
cmp rbx, rdx
jge 0x401bbd
mov rax, qword [rip + 0x2018f6]
mov rdx, qword [rax - 0x18]
mov rsi, qword [rax - 0x20]
mov edi, obj.std::cout
call sym.std::__ostream_insert_char_std::char_traits_char__
mov rdx, qword [rip + 0x2018dd]
lea rax, [rdx - 0x20]
mov qword [rip + 0x2018d2], rax
mov rdi, qword [rdx - 0x20]
add rax, 0x10
cmp rdi, rax
je 0x401ac8
call sym.operatordelete
cmp qword [rip + 0x201859], rbx
jg 0x401a20
mov rax, qword [rip + 0x20188c]
mov edi, obj.std::cout
mov rdx, qword [rax - 0x18]
mov rsi, qword [rax - 0x20]
call sym.std::__ostream_insert_char_std::char_traits_char__
mov rdx, qword [rip + 0x201873]
lea rax, [rdx - 0x20]
mov qword [rip + 0x201868], rax
mov rdi, qword [rdx - 0x20]
add rax, 0x10
cmp rdi, rax
jne 0x401a58
jmp 0x401a5d
mov edx, 0xb
mov esi, str.IMPOSSIBLE_n
pop rbx
pop rbp
pop r12
mov edi, obj.std::cout
jmp sym.std::__ostream_insert_char_std::char_traits_char__
mov rsi, qword [rip + 0x20185b]
mov qword [rip + 0x20186c], rax
mov rax, qword [rip + 0x20186d]
mov qword [rip + 0x201856], r8
mov qword [rip + 0x20182f], r10
mov qword [rip + 0x201830], r9
mov qword [rip + 0x201851], rsi
mov rsi, rcx
mov rcx, rdi
mov qword [rip + 0x201824], rax
mov rax, r9
jmp 0x4019d6
mov rax, qword [rip + 0x2017ed]
mov edi, obj.std::cout
mov rdx, qword [rax - 0x18]
mov rsi, qword [rax - 0x20]
call sym.std::__ostream_insert_char_std::char_traits_char__
mov rdx, qword [rip + 0x2017d4]
lea rax, [rdx - 0x20]
mov qword [rip + 0x2017c9], rax
mov rdi, qword [rdx - 0x20]
add rax, 0x10
cmp rdi, rax
je 0x401bb1
call sym.operatordelete
mov rdx, qword [rip + 0x201790]
jmp 0x401a7e
mov edx, 1
mov esi, 0x401fc2
jmp 0x401b20
nop dword [rax]
push r12
push rbp
push rbx
mov rbp, qword [rdi + 8]
mov rbx, qword [rdi]
cmp rbp, rbx
je 0x401c06
mov r12, rdi
nop dword [rax + rax]
mov rdi, qword [rbx]
lea rax, [rbx + 0x10]
cmp rdi, rax
je 0x401bf9
call sym.operatordelete
add rbx, 0x20
cmp rbp, rbx
jne 0x401be8
mov rbp, qword [r12]
test rbp, rbp
je 0x401c20
pop rbx
mov rdi, rbp
pop rbp
pop r12
jmp sym.operatordelete
nop word [rax + rax]
pop rbx
pop rbp
pop r12
ret
nop word cs:[rax + rax]
nop
push r15
push r14
mov r14, rsi
push r13
push r12
push rbp
push rbx
mov rbp, rdi
sub rsp, 0x18
mov rdx, qword [rdi + 8]
mov r15, qword [rdi]
mov rax, qword fs:[0x28]
mov qword [rsp + 8], rax
xor eax, eax
mov rbx, rdx
sub rbx, r15
mov r13, rbx
sar r13, 5
test r13, r13
je 0x401e08
lea rax, [r13 + r13]
cmp r13, rax
jbe 0x401e7d
mov r13, -0x20
mov rdi, r13
call sym.operatornew
mov rdx, qword [rbp + 8]
mov r15, qword [rbp]
mov r12, rax
mov rbx, rdx
sub rbx, r15
add rbx, r12
je 0x401d05
mov r15, qword [r14]
mov r14, qword [r14 + 8]
lea rax, [rbx + 0x10]
mov qword [rbx], rax
mov rsi, r15
add rsi, r14
je 0x401cd0
test r15, r15
jne 0x401cd0
mov edi, str.basic_string::_M_construct_null_not_valid
call sym.std::__throw_logic_error
nop dword [rax]
cmp r14, 0xf
mov qword [rsp], r14
ja 0x401e18
cmp r14, 1
je 0x401e50
test r14, r14
mov rdx, rax
jne 0x401e78
mov qword [rbx + 8], r14
mov byte [rdx + r14], 0
mov rdx, qword [rbp + 8]
mov r15, qword [rbp]
cmp r15, rdx
je 0x401e5f
lea rcx, [r15 + 0x20]
lea rax, [r15 + 0x10]
sub rdx, rcx
mov rdi, rdx
lea rsi, [r15 + rdx + 0x30]
mov rdx, r12
shr rdi, 5
jmp 0x401d5e
nop word [rax + rax]
mov qword [rdx], rcx
mov rcx, qword [rax]
mov qword [rdx + 0x10], rcx
mov rcx, qword [rax - 8]
mov qword [rdx + 8], rcx
mov qword [rax - 0x10], rax
mov qword [rax - 8], 0
mov byte [rax], 0
add rax, 0x20
add rdx, 0x20
cmp rsi, rax
je 0x401d88
test rdx, rdx
je 0x401d51
lea rcx, [rdx + 0x10]
mov qword [rdx], rcx
mov rcx, qword [rax - 0x10]
cmp rax, rcx
jne 0x401d30
mov rcx, qword [rax]
mov rbx, qword [rax + 8]
mov qword [rdx + 0x10], rcx
mov qword [rdx + 0x18], rbx
jmp 0x401d3a
nop dword [rax]
mov r15, qword [rbp + 8]
mov rbx, qword [rbp]
mov rax, rdi
shl rax, 5
lea r14, [r12 + rax + 0x40]
cmp r15, rbx
je 0x401dc6
nop dword [rax]
mov rdi, qword [rbx]
lea rax, [rbx + 0x10]
cmp rdi, rax
je 0x401db9
call sym.operatordelete
add rbx, 0x20
cmp r15, rbx
jne 0x401da8
mov r15, qword [rbp]
test r15, r15
je 0x401dd3
mov rdi, r15
call sym.operatordelete
mov qword [rbp], r12
add r12, r13
mov qword [rbp + 8], r14
mov rax, qword [rsp + 8]
xor rax, qword fs:[0x28]
mov qword [rbp + 0x10], r12
jne 0x401ea0
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax]
mov r13d, 0x20
jmp 0x401c86
nop dword [rax + rax]
xor edx, edx
mov rsi, rsp
mov rdi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_create
mov rdi, rax
mov qword [rbx], rax
mov rax, qword [rsp]
mov qword [rbx + 0x10], rax
mov rdx, r14
mov rsi, r15
call sym.imp.memcpy
mov r14, qword [rsp]
mov rdx, qword [rbx]
jmp 0x401cf4
nop word [rax + rax]
movzx edx, byte [r15]
mov byte [rbx + 0x10], dl
mov rdx, rax
jmp 0x401cf4
lea r14, [r12 + 0x20]
jmp 0x401dc6
nop dword [rax]
jmp 0x401ea5
nop word [rax + rax]
mov rdi, rax
jmp 0x401e33
movabs rcx, 0x7ffffffffffffff
cmp rax, rcx
ja 0x401c7f
test rax, rax
jne 0x401ebf
xor r13d, r13d
xor r12d, r12d
jmp 0x401c9f
call sym.imp.__stack_chk_fail
mov rdi, rax
call sym.imp.__cxa_begin_catch
test r12, r12
je 0x401ecd
mov rdi, r12
call sym.operatordelete
call sym.imp.__cxa_rethrow
shl r13, 6
jmp 0x401c86
mov rbx, rax
jmp 0x401ee8
mov rax, qword [rbp + 8]
sub rax, qword [rbp]
mov rdi, qword [rax]
add rax, 0x10
cmp rdi, rax
je 0x401eba
call sym.operatordelete
jmp 0x401eba
call sym.imp.__cxa_end_catch
mov rdi, rbx
call sym.imp._Unwind_Resume
nop word cs:[rax + rax]
nop
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200ed6]
push rbp
lea rbp, [rip + 0x200ede]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401f56
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401f40
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
jae 0x401ff5
movsxd rbx, dword [rdi + 0x73]
je 0x402003
imul ebp, dword [rsi + 0x67], 0x4d5f3a3a
pop rdi
movsxd rbp, dword [rdi + 0x6e]
jae 0x402012
jb 0x402015
movsxd rsi, dword [rax + 0x6e]
jne 0x402012
insb byte [rdi], dx
and byte [rsi + 0x6f], ch
je 0x401fcc
jbe 0x40200f
insb byte [rdi], dx
imul esp, dword [rax + rax], 0
add byte [rcx + 0x4d], cl
push r8
push r11
push rbx
or r8b, byte [r8]
jae 0x40202d
and byte [rbx], ah
add byte [rdx], bh
and byte [rax], al
add byte [rax], al
add dword [rbx], ebx
add edi, dword [rbx]
pop rsp
add byte [rax], al
add byte [rdx], cl
add byte [rax], al
add byte [rax - 0x14], al
ljmp [rax - 0x50000000]
in eax, dx
call qword [rax]
add al, byte [rax]
add byte [rax - 0x12], dl
cmp byte [rdx], al
add byte [rax], al
and bh, ch
js 0x401ffa
add byte [rax], al
and al, dh
js 0x402003
add byte [rax], al
sal bh, 1
call rax
add dword [rax], eax
add byte [rax], al
cld
call rax
add byte [rax], al
add byte [rax - 4], ah
ljmp [rax]
add dword [rax], eax
add byte [rax], dh
call qword [rax + 2]
add byte [rax], al
movabs al, byte [0x298ffffff]
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40204f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
movabs al, byte [0x2affffee]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40207f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
nop
jmp 0x402082
jmp qword [rax + 1]
add byte [rax], al
add byte [rsi], cl
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
xor al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rax], ch
sti
call qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdx + rax - 0x79e7f1bf], cl
add eax, dword [rcx + 0xe]
and byte [rbx + 0xe0a7804], al
sbb byte [rsi + rcx + 0x10], al
or byte [rsi + 0xb], cl
sbb byte [rcx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x4020f9
add edx, dword [rax]
or eax, 0x1b030040
or al, 7
or byte [rax + 0x4c000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
xor bl, bh
inc ebp
add al, byte [rax]
add byte [rsp + rax*4], al
and al, byte [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx + 0x500e4707], al
add esi, dword [rsi + 0x380e0a01]
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rbx + rcx + 0x54], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax - 0x51000012], ah
add byte [rax], al
add al, 0xa8
and al, byte [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx - 0x2ff1b5f9], al
add dword [rbx], eax
add dword [rdx], ecx
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rdi + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bh
add byte [rax], al
add dword [rax], r8d
add al, bh
cmc
ljmp [rsp + rax]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdx + rax - 0x79e7f1bf], cl
add eax, dword [rsi + 0xe]
and byte [rbx + 0x13c0304], al
or cl, byte [rsi]
sbb byte [rcx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax + 0xb], cl
add esi, dword [rcx]
add cl, byte [rdx]
sbb byte [rcx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rdx + 0xb], cl
add byte [rax], al
add byte [rax], al
and al, 0
add byte [rax], al
test byte [rcx], al
add byte [rax], al
cwde
jmp 0x4021ea
lcall [rdi]
adc byte [rbx + 0x200e4802], al
add cl, byte [rdi + 0x41100e0a]
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
lodsb al, byte [rsi]
add dword [rax], eax
add byte [rax], dl
in al, dx
inc ebp
add byte [rax], al
add byte [rax], al
adc byte [rdx], al
mov esp, 0x44080e
add byte [rax], al
add dword [rax], eax
add al, bl
cld
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x402262
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
or al, 2
add byte [rax], al
add ch, bh
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rbx]
and dword [rcx], eax
pop rcx
add eax, 0x1940000
loope 0x402293
rol byte [rcx + rax], 0x8a
add eax, 0x59805
rol byte [rip + 0x1000005], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
inc dword [rcx]
xor esi, dword [rbp + rax]
add byte [rdi - 0x21fc4cfe], ch
or al, 0
fld qword [rsi]
add eax, 0xa0000ef5
or al, byte [rip + 0xab60000]
add eax, 0xcf000cde
or al, 5
lahf
add al, bh
or al, 5
add byte [rax], al
xchg eax, ecx
or eax, 0xe9f4f
mov cl, byte [rsi]
add eax, 0xcde
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
and byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax + 0x400f], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 2], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 2], ch
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x406e50
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rdi + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sub eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 5], dh
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add r8, qword [r8]
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4009], ch
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add al, bh
or byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rsi + 0x4008], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dl
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], ah
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400c], al
add byte [rax], al
add byte [rsi + 0x400c], dl
add byte [rax], al
add byte [rsi + 0x400c], ah
add byte [rax], al
add byte [rsi + 0x400c], dh
add byte [rax], al
add dh, al
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
push rsi
or eax, 0x40
add byte [rax], al
or ax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x403148
je 0x403151
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x40315f
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x40315c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002d000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 5], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rsi + 0x4008], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add al, bh
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or dword [rax], eax
test al, 9
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add al, dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or eax, dword [rax]
call 0x407228
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
adc byte [rax + rax*2], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400d7000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0x400d], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rdi + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax + 0x401f], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add al, dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add byte [rax], dh
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
test byte [rdx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], dl
call 0x409322
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
sal byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], ah
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xf], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400f], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rbx], bl
add byte [rax], dl
xor esp, dword [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add al, al
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg byte [rax], al
add byte [rax], al
add dword [rax], eax
adc al, 0
call 0x4094ba
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x2000000], ch
add byte [rsi], cl
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add ch, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, al
add byte [rax], al
add byte [rcx], al
add byte [rbx], bl
add byte [rax + 0x6033], bh
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, dl
add byte [rax], al
add byte [rcx], al
add byte [rdx], dl
add byte [rax + 0x4022], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ah
add byte [rax], al
add byte [rcx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
add byte [rax], al
add byte [rax], al
add byte [rcx], dl
add al, dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add dword [rax], eax
add byte [rcx], al
add byte [rcx], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb dword [rcx], eax
add byte [rax], al
add byte [rax], al
adc al, 0
clc
sub eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rcx]
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x4095c2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], bh
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 4], dh
add byte [rax], al
and byte [rax], al
sbb al, byte [rax]
sal byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 1], al
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
loopne 0x40360a
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], bl
add byte [rdx], ah
add byte [rsi], cl
add al, dl
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
push rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000001], ch
add byte [rsi], cl
add byte [rax + 0x1f], dh
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 4], bh
add byte [rax], al
adc al, byte [rax]
add al, dh
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x20000001], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, bl
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dh
add dword [rax], eax
add byte [rcx], dl
add byte [rbx], bl
add byte [rax + 0x33], ah
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax + 0x120000], dh
add byte [rdi + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 2], dl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
insb byte [rdi], dx
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x12000002], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rdx], ah
add byte [rsi], cl
add al, dl
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
push rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x12000003], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 3], al
add byte [rax], al
adc al, byte [rax]
add al, dh
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
wait
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0x400c], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add eax, dword [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bl
add eax, dword [rax]
add byte [rcx], dl
add byte [rax], dl
add byte [rax + 0x401f], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jmp 0x4037b5
add byte [rax], al
and al, byte [rax]
add byte [rax], dh
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add ch, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx + 4], bl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
je 0x4037e6
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
sal byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x22000004], al
add byte [rsi], cl
add byte [rax], dh
sbb al, 0x40
add byte [rax], al
add byte [rax], al
add ch, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add al, dh
add al, 0
add byte [rcx], dl
add byte [rbx], bl
add byte [rax + 0x6033], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, bh
add al, 0
add byte [rcx], dl
add bl, byte [rdx]
add al, dl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rip + 0x110000], eax
sbb eax, dword [rax]
add byte [rdx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x110000], al
sbb eax, dword [rax]
cmp byte [rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add eax, 0x120000
add byte [rax + 0x4017], ah
add byte [rax], al
add byte [rsp + rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rip + 0x2110000], al
sbb al, byte [rax]
enter 0x6030, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor eax, 0x12000005
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edx, 0x11000000
add byte [rbx], bl
add byte [rax + 0x6033], ah
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 5], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs byte [0xd0001b0010000005], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
retf 5
add byte [rcx], dl
add byte [rbx], bl
add byte [rax], ch
xor esp, dword [rax]
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
int3
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jae 0x403951
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
push rax
xor esp, dword [rax]
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test byte [rip + 0x110000], 0x1b
add byte [rax + 0x33], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x11000001], ch
add byte [rbx], bl
add byte [rax], ah
xor esp, dword [rax]
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, 0x10000001
add byte [rbx], bl
add al, al
xor esp, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
imul eax, dword [rsi], 0
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x12000006], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
sal byte [rax], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
adc byte [rip + 0x40], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rdi], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rdi]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor eax, dword [rdi]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
outsb dx, byte [rsi]
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
xor byte [rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 7], dh
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x400d], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rdi], bh
add eax, 0x120000
or eax, dword [rax]
call 0x407ae0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 7], dh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0x40001b0011000007]
xor esp, dword [rax]
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x72], ah
je 0x403b88
je 0x403b8c
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x403b3e
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403bbc
jb 0x403bc2
pop rdi
jne 0x403bcb
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x403bc5
je 0x403bc1
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403be1
jb 0x403be7
pop rdi
jne 0x403bf0
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x403bf3
jns 0x403be3
outsb dx, byte gs:[rsi]
je 0x403bfa
jns 0x403b8a
jb 0x403bee
insd dword [rdi], dx
pop rdi
jne 0x403c00
insd dword [rdi], dx
jns 0x403b96
pop rdi
pop rdi
jb 0x403bfc
insd dword [rdi], dx
pop rdi
jne 0x403c0e
insd dword [rdi], dx
jns 0x403c03
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403c0e
jns 0x403c0e
outsb dx, byte gs:[rsi]
je 0x403c25
jns 0x403bb5
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x403c3b
pop rdi
pop r15
pop rdi
pop rdx
xor ah, byte [rdx + 0x73]
xor eax, 0x31787863
xor dword [rax], eax
pop rdi
pop rdx
push rbx
je 0x403c28
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdi
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403c95
jns 0x403c95
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403ca6
jns 0x403ca6
jae 0x403cbd
jb 0x403cc0
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
push rbx
je 0x403c8e
movsxd rbp, dword [rcx + 0x6e]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403ca8
jbe 0x403cd9
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push rbx
je 0x403cb4
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403cf3
movsxd rbx, dword [rdi + 0x73]
je 0x403d01
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403cfc
je 0x403d11
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
push r11
push r11
xor eax, 0x4445455f
xor dword [rbp + 0x76], eax
add byte [rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x403d47
jb 0x403d4a
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x403d3c
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x403d5d
jae 0x403ced
pop rdi
pop rdx
insb byte [rdi], dx
push rax
jbe 0x403d34
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
xor bh, byte [rcx + 0x73]
xor eax, 0x31787863
xor dword [rax], eax
pop rdi
pop rdx
push rbx
je 0x403d4b
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403d8a
movsxd rbx, dword [rdi + 0x73]
je 0x403d98
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403d93
je 0x403da8
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
movsxd rsi, dword [rdx + 0x65]
je 0x403db2
push r10
insd dword [rdi], dx
insd dword [rdi], dx
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5f], bl
movsxd rdi, dword [rax + 0x61]
pop rdi
jb 0x403dcf
je 0x403dd4
jb 0x403ddd
ja 0x403db0
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
push rbx
je 0x403dba
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403ddf
imul ebp, dword [rdi + 0x73], 0x7361625f
xor dword gs:[rip + 0x636e7973], esi
pop rdi
ja 0x403e21
je 0x403e22
pop rdi
jae 0x403e31
imul ebp, dword fs:[rdi + 0x45], 0x47404062
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403e0c
jbe 0x403e3d
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push rbx
je 0x403e18
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403e57
movsxd rbx, dword [rdi + 0x73]
je 0x403e65
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403e60
je 0x403e75
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
push r11
push r11
xor eax, 0x4445455f
xor al, byte [rbp + 0x76]
add byte [rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x403e9e
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x403ea3
pop rdi
je 0x403eab
js 0x403eb1
je 0x403e8a
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x335a5f00
insd dword [rdi], dx
jb 0x403ec4
push rdx
js 0x403eb3
pop rdi
push rdx
push rbx
je 0x403e9b
jbe 0x403ecc
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push rbx
je 0x403ea7
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403ee6
movsxd rbx, dword [rdi + 0x73]
je 0x403ef4
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403eef
je 0x403f04
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
push r11
push r11
pop rdi
movsxd r12, dword [r11]
pop rdi
pop rdx
push rbx
je 0x403ee9
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x403f3e
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x403f66
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x5a], bl
push rbx
je 0x403f37
jbe 0x403f68
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push rbx
je 0x403f43
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403f82
movsxd rbx, dword [rdi + 0x73]
je 0x403f90
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403f8b
je 0x403fa0
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
push r11
push r11
xor eax, 0x3145455f
cmp dword [rdi + 0x4d], ebx
pop rdi
insd dword [rdi], dx
jo 0x403fb9
movsxd rsp, dword [rbp + 0x5f]
movsxd rbp, dword [rbx + 0x5f]
jne 0x403fd1
push r10
push r11
xor eax, 0x4545455f
jbe 0x403fa9
jo 0x403fb6
push rsp
pop rdi
add byte [rdi + 0x49], bl
push rsp
pop r15
jb 0x403fd6
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403feb
pop rdi
jae 0x404001
jb 0x404004
add byte [rdi + 0x5a], bl
push rbx
je 0x403fcd
jbe 0x403ffe
movsxd rsi, dword [rdi + rbp*2 + 0x72]
push rbx
je 0x403fd9
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404018
movsxd rbx, dword [rdi + 0x73]
je 0x404026
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404021
je 0x404036
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
push r11
push r11
xor eax, 0x3145455f
cmp dword [rdi + 0x4d], ebx
pop rdi
insd dword [rdi], dx
jo 0x40404f
movsxd rsp, dword [rbp + 0x5f]
movsxd rbp, dword [rbx + 0x5f]
jne 0x404067
push rdx
push r11
xor eax, 0x4545455f
jbe 0x40403f
jo 0x40404c
push rsp
pop rdi
add byte [rdi + 0x5a], bl
xor dh, byte [rdx + 0x73]
xor eax, 0x31787863
xor dword [rax], eax
pop rdi
pop rdi
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x404052
movsxd rbp, dword [rdi + 0x75]
je 0x404063
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
xor esp, dword [rdi + rbp*2 + 0x74]
jbe 0x404038
pop rdi
pop rdi
jae 0x4040ac
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x40408b
pop rdi
pop rdi
outsd dx, dword [rsi]
jae 0x4040d4
jb 0x4040c7
insd dword [rdi], dx
pop rdi
imul ebp, dword [rsi + 0x73], 0x49747265
movsxd rdx, dword [rbx + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4040d5
je 0x4040ea
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x4040b5
xor esp, dword [rdx + 0x61]
jae 0x4040f2
movsxd rbx, dword [rdi + 0x6f]
jae 0x404102
jb 0x4040f5
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
push rax
push r11
xor ebx, dword [rdi + 0x6c]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
pop rdi
pop rdi
jae 0x40412a
pop rdi
jae 0x40412e
jb 0x404131
add byte [rdi + 0x5f], bl
jae 0x404136
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
add byte [rdi + 0x5a], bl
push rbx
je 0x404112
cmp dword [rdi + 0x5f], ebx
je 0x40414e
jb 0x404157
ja 0x404149
insb byte [rdi], dx
outsd dx, dword [rsi]
imul esp, dword [ebx + 0x5f], 0x6f727265
jb 0x404146
movsxd rax, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
jb 0x404108
pop rdi
pop rdx
push rbx
je 0x404145
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404184
movsxd rbx, dword [rdi + 0x73]
je 0x404192
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40418d
je 0x4041a2
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rdx], esi
pop rdi
pop r15
movsxd rbp, dword [rdi + 0x6e]
jae 0x4041bb
jb 0x4041be
movsxd rsi, dword [rbp + rax*2 + 0x6d]
movsxd rax, dword [rax + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5f], bl
movsxd rdi, dword [rax + 0x61]
pop rdi
outsb dx, byte gs:[rsi]
pop rdi
movsxd rsp, dword [rcx + 0x74]
movsxd rbp, dword [rax + 0x40]
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x61]
pop rdi
imul ebp, dword gs:[esi + 0x5f], 0x63746163
push 0x58434040
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
push rbx
je 0x4041d6
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404215
movsxd rbx, dword [rdi + 0x73]
je 0x404223
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40421e
je 0x404233
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
insd dword [rdi], dx
jne 0x404249
je 0x40423d
insd dword [rdi], dx
insd dword [rdi], dx
push rax
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x404257
add byte [rdi + 0x5f], bl
js 0x404274
pop rdi
jo 0x404264
jb 0x404274
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
outsb dx, byte [rsi]
ja 0x40428a
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x404299
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x4042ac
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
insd dword [rdi], dx
insd dword [rdi], dx
movsxd rsi, dword [rax + 0x79]
pop r15
xor ch, byte [rsi]
xor dword [rax + rax], esi
pop rdi
pop rdx
push rbx
outsd dx, dword [rsi]
cmp dword [rdi + 0x4d], ebx
pop rdi
imul ebp, dword [rsi + 0x73], 0x49747265
js 0x4042ad
push r10
push rbx
outsd dx, dword [rsi]
push rsp
pop rdi
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
add byte [ebp + 0x61], ch
imul ebp, dword [rsi], 0x534e5a5f
imul esi, dword [rcx], 0x5f4d5f30
js 0x404306
jb 0x4042f5
movsxd rsi, dword [rcx + rcx*2 + 0x78]
push r10
push rbx
imul edx, dword [rdx + 0x54], 0x4740405f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
outsd dx, dword [rsi]
add byte [rax], al
jae 0x40432f
insd dword [rdi], dx
je 0x40431a
add byte [rsi], ch
jae 0x404332
jb 0x404334
add byte [rsi], ch
jae 0x40432e
jae 0x40433c
jb 0x40433e
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x40433f
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x40434d
outsb dx, byte cs:[esi]
jne 0x40431b
jne 0x404359
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x404329
push 0x687361
jns 0x404372
jae 0x40437f
insd dword [rdi], dx
add byte [rsi], ch
jns 0x40437a
jae 0x404382
jb 0x404310
outsb dx, byte cs:[esi]
jne 0x404343
jbe 0x40437c
jb 0x40438c
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x404350
jbe 0x404389
jb 0x404399
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x404394
insb byte [rdi], dx
jns 0x4043a3
add byte [rsi], ch
jb 0x40439e
insb byte [rdi], dx
jo 0x4043aa
je 0x404340
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x404379
outsd dx, dword [esi]
je 0x40434f
je 0x4043b7
js 0x4043c8
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x4043cd
je 0x4043c3
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x4043e6
jo 0x4043fa
pop rdi
je 0x4043ea
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4043f8
jns 0x404399
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x404414
jns 0x4043a5
push 0x63
jb 0x4043aa
jns 0x40441c
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x404426
je 0x4043bc
je 0x404422
add byte [rsi], ch
jae 0x404439
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x4043d0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 1
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 2], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
jo 0x404567
add byte [rax], al
add byte [rax], al
add byte [rax + 5], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add r8, qword [r8]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x4008], bh
add byte [rax], al
add byte [rsi + 8], bh
add byte [rax], al
add byte [rax], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
or byte [rax], al
add byte [rax], al
add byte [rax], al
clc
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
test al, 9
add byte [rax], al
add byte [rax], al
add byte [rax + 9], ch
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
lock or dword [rax], eax
add byte [rax], al
add byte [rax], al
add al, bh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rip + 0x19000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
call 0x4046b8
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], dl
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax + 1], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x400d], al
add byte [rax], al
add byte [rax + 0xd], al
add byte [rax], al
add dl, dh
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdi + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x401f], al
add byte [rax], al
add byte [rax + 0x1f], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rcr byte [rdi], 1
add byte [rax], al
add byte [rax], al
add al, dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
and byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x40], al
add byte [rax], al
test byte [rdx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rbx
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
call 0x40491a
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sub eax, 0x60
add byte [rax], al
clc
sub eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
sal byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
sal byte [rax], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x404ab4
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x1000001
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dl, 0x42
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], cl
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rdx], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
cmp eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx + 7], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
