call 0x401228
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401040
add ebx, ebx
je 0x400ff6
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x40102e
cmp rbp, -4
ja 0x40102e
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x401016
add ecx, 4
mov dl, byte [rax]
je 0x40103e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x40102e
ret
cld
pop r11
cmp r8b, 2
je 0x401056
jmp 0x4010d3
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x401066
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x40104e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x40107e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x40106b
sub eax, 3
jb 0x40109c
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x4010d3
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x4010c3
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x4010c1
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4010b0
cmp rbp, -0xd00
adc ecx, eax
call 0x401002
jmp 0x401056
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4011ac
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40114a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x401196
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401169
push 0x3a707474
jne 0x4011c2
js 0x401182
jae 0x4011bc
outsb dx, byte cs:[rsi]
je 0x40117b
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4011e9
jb 0x4011db
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x401206
jb 0x401219
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x211f0c
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x211f0c
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x4010e4
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x40120f
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4011bd
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add dword [rax], eax
jmp rbp
call 0x706f12b7
jb 0x4012cf
movsxd rbp, dword [rdi]
jae 0x4012c9
insb byte [rdi], dx
js 0x4012cf
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x4012af
cmp rsi, rcx
jae 0x4012b7
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x401296
cmp al, 0x8f
ja 0x401296
cmp byte [rsi - 2], 0xf
je 0x40129c
sub al, 0xe8
jg 0x401299
push rdi
cmp al, 1
ja 0x401284
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x401287
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x4012b4
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x40130b
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1789
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40134f
mov al, 0xa
jmp 0x40134f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x40132b
inc ebx
mov al, 0
jmp 0x401353
mov al, 2
jmp 0x401353
mov al, 3
jmp 0x401353
mov al, 0x3c
jmp 0x401353
push rcx
rcr ah, 1
fstp st(7)
jle 0x401394
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x4013a6
jg 0x401398
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6b1b
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4013f2
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb656f
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4013fa
cmp esi, 0x21585055
jne 0x4013fe
jge 0x4013f0
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4013f3
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4013f7
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x4014a3
pop rcx
or al, 0x3b
jb 0x4014a9
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x40141b
jmp 0x40141d
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x366135e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf535a6
in eax, dx
jg 0x401455
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x40149b
mov bh, 0x2a
add edi, 0x10
jmp 0x401498
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4014d5
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401511
jne 0x401528
fstpnce st(6), st(0)
jle 0x4014f1
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x401527
jrcxz 0x40155b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b4bf
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4015da
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x40159a
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295b6f
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x40160d
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x4015a7
and ecx, 7
or al, 0xeb
jae 0x401612
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x401647
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x401685
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x40163e
push rax
call 0xffffffff868d132b
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401648
std
cmp edi, esi
xchg eax, edi
jle 0x40169d
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95c29
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x40169b
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401689
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x4016b2
js 0x4016f2
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x401784
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad29bf
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x4017a5
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x4017aa
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc2125c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401738
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
je 0x4017bf
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add al, 0xa8
nop
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc bh, bh
test al, 0x15
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x40185e
je 0x401867
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401830
mov dh, 0x7d
jbe 0x40182f
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401868
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c800
and byte [rdi + 0x4780006], bl
add byte [rsi - 0x6fd837fb], bh
invd
add al, ch
or dword [rax], eax
in al, 0x13
enter 0xa07, 0
nop
or eax, dword [rax]
cwde
test byte [rcx], 0xe4
add ecx, dword [rax + rax]
ror byte [rip + 0x5f088000], 0x9f
ror dl, 1
verr word [rax + rbx + 0x201f204f]
adc byte [rax], al
mov al, 0x11
add byte [rax + 0x27], dh
nop
seto byte [rcx]
adc al, byte [rax]
fcom dword [rbx]
add byte [rcx], al
add esp, esp
clc
sbb eax, 0x8001460
add al, 0xf2
add al, 0xf2
adc eax, 0x161000
sbb byte [rax + 0x17f900fc], al
add al, bh
sbb byte [rax], al
add byte [rax], ah
cmp dword [rcx + rax*4], 0x7000197c
sbb al, byte [rax]
adc byte [rdx + 0x1b365377], 0x13
add dword [rdi], edx
add al, 0
int1
dec dword [rip + 0xc3b1657]
sbb edi, dword [rdi + 0xc027f19]
xor ah, byte [rcx + 0x37]
mov al, 9
sbb esi, eax
or edi, dword [rcx]
enter 0x2e90, 0x30
or al, byte [rbx + 0x44bdd20d]
pop rdi
cmpsd dword [rsi], dword ptr [rdi]
nop
add dword [rdi], edx
push rbx
mov ebx, 0x7a4f2212
push r8
push rdi
xchg byte fs:[rdi + 0xce3a1a5], dl
xlatb
lodsd eax, dword [rsi]
movaps xmm3, xmm7
in al, dx
nop
out dx, eax
add eax, 0x9cd5fe7
cmpsd dword [rsi], dword ptr [rdi]
and eax, 0x26e41907
fidiv word [rax - 0x7c6389dc]
test byte [rdi], dh
in eax, dx
sbb byte [rsp + rbp*2], 8
loope 0x401952
sti
add byte [r15 + 0x5e], r8b
sbb dword [rcx - 0x6097f8df], esi
sbb al, byte [rcx]
ret 0x95d8
int1
wrmsr
adc esi, dword [rdi]
wait
adc ah, byte [rsi + 0x53]
push rsp
sbb r14b, r13b
xchg eax, ebp
adc dword [rdi + 0x575a02e7], eax
pop rbp
pop rcx
jae 0x401940
pop rbp
add byte [rcx + 0xc], dh
jb 0x40193b
rcl byte [rdi], 1
adc edi, eax
and al, 0x2f
add al, 0x75
jbe 0x401902
loope 0x4019a1
movabs al, byte [0x2760cd02eb170218]
or byte [r9], 0x2a
pop rdi
test dword [rax], esp
test byte ss:[rip - 0x57e86be0], cl
pop rdi
nop
ror dword [rsi + 0xe], -0x70
or eax, 0x15b2a763
sbb edx, eax
xchg ch, cl
jg 0x4019db
fcom dword [r13 + 0xc2fe737]
mov edi, 0xe4f6793c
xor byte [rdi + rdx*2], cl
add edi, ebp
sbb al, byte [rdx]
loopne 0x40199a
mov bl, 0x43
sahf
add qword [r11], r12
or bl, byte [rdi - 0x28]
add eax, 0x2f519072
add cl, byte [rsi + 0x17]
and byte [rbx + 0x68], al
xor bh, dh
lea edx, [rsi + 0x33]
xor byte [rdi + rbp + 0x20], 0xa9
adc edi, esi
xchg byte [rax - 0x4768a7b7], dh
pop rdi
retf
add cl, ch
sbb dl, al
in eax, 0xf
adc al, bl
nop
pushfq
jo 0x4019ba
add dh, bh
movabs al, byte [0x20803939073617f4]
or byte [rdi], al
add eax, dword [rdx]
sbb dword [rax + 6], ecx
wait
mov dl, 0x97
adc edx, dword [rdi]
js 0x401a41
xor dword [rax + 0x20], 3
sbb byte [ebp + 0x17], ah
jmp 0x4019a8
mov dl, 0xc8
xor byte [rdi + 0xdf70345], ah
leave
fldcw word [rbx]
push rcx
add esp, dword [rdi + 0xc905398]
test byte ss:[rdi + 0x6f], al
xchg eax, esp
xchg esp, esp
in al, dx
sbb byte [rcx], al
test al, 0xdc
add byte [rbp + rax*4 + 0x3c243b3c], ch
add dword [rdi + 0x232524b8], ecx
fdiv dword [r9 - 0x41]
xchg byte [rcx], bl
fcom dword [rax - 0x7072c9f4]
pushfq
movabs al, byte ss:[0x921841c99303ed2f]
movsb byte [rdi], byte ptr [rsi]
xchg eax, ebp
add byte [r14], r9b
cmp dword [rcx + 0x42], edi
or dword [rdi - 0x77fc6151], 0x21b3124d
mov dl, 0x2f
ror byte [edi], 0x90
cmp byte [rbx + 0x63c72a17], al
jb 0x401a54
mov ebp, 0xc7374d0
mov word cs:[rdi + 0x5f], bx
push r10
pop rdi
push r11
push rsp
outsd dx, dword [rsi]
in eax, dx
fisttp word [rcx]
add byte [rbp + 0x72], ah
imul ebx, dword gs:[edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401a7e
outsd dx, dword [rsi]
outsd dx, dword [rsi]
out dx, eax
and dword [rdi + rbp*2 + 0x5f], esp
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x401af4
jne 0x401b10
fcomp st(7)
jle 0x401b0d
insd dword [rdi], dx
jo 0x401b0d
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
test byte [rbp + 0x6966f6fe], 0x6e
imul ecx, dword [rax], 0x79617272
pop rdi
jge 0x401b2e
jns 0x401abe
or bl, byte [rbx]
xor bh, dh
in eax, dx
insd dword [rdi], dx
and byte gs:[rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x401afe
or eax, 0xb76f295f
lodsb al, byte [rsi]
je 0x401aff
movsxd rbp, dword [edx - 0x62]
jo 0x401b4b
pop rdx
pop rdx
xor al, 0xfe
in eax, dx
fisttp dword [rbp + 0x61]
jbe 0x401b2d
xor dword [rcx], edi
xor dl, byte [rax + 0x52]
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
jge 0x401a9d
in eax, dx
out dx, eax
mov bl, 0x5f
or qword [rbx - 0x1e], r14
pop rdi
pop r15
outsb dx, byte [rsi]
out dx, al
fstp st(6)
xor byte [rbx + 0x74], dl
cmp byte [rdi], r9b
imul ebp, dword [rdi + 0x53], 0x41524666
pop r15
pop rbx
sahf
in al, dx
mov ebp, 0xbee2d44
push rbp
and byte [rdi + 0x4807b27d], dil
push rdx
push rbx
push 0x4241545f
pop rax
fadd dword [rbp + rdi*4 + 0x649d2845]
adc byte [rdi + 0x2e56bb97], dh
pop cx
add r9b, dl
insd dword [rdi], dx
jae 0x401ae1
div byte [rdi + 0x4040170b]
pop r15
xor ch, byte [rsi]
add dword [rip - 0x4a21ea5f], ebx
insb byte [rdi], dx
xor al, 0x33
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0xbf16a654
pop rcx
packuswb mm5, qword [rbp + 0x5f]
cmp eax, 0xff764a8c
ret
cmpps xmm3, xmmword [rdi + 0x52], 0x7c
insb byte [rdi], dx
jae 0x401c04
jns 0x401bed
xor eax, 0x63656863
imul esi, dword [rax + 0x76b9ee85], 0x2c
adc dword [rax], ebp
or word [rbx + rbx*2 - 0x4e], bp
fucomi st(5)
mov dh, 0x1a
jo 0x401c1e
je 0x401c15
pop rcx
push 0x42c2196b
xlatb
call 0x4e7ef8ee
or dword [rax], edi
fisttp qword [rdx]
test dword [rbx + 0x49343c95], ecx
mov dl, 0x43
xor dword [rbp + 0x76], eax
insd dword [rdi], dx
loope 0x401bb3
shl dword [rax + rbx*2], 0x58
pop rdi
jo 0x401c48
pop rsi
sti
mov esi, 0x696563fb
movsxd rsp, dword [rbx + 0xd]
xor esp, dword [rcx + 0x64]
imul ecx, dword fs:[rax], 0x92715436
in eax, dx
insb byte [rdi], dx
test byte [rbx], 0xb9
test eax, 0x856e806d
in al, dx
movsxd rdi, dword ds:[rax + 0x61]
lahf
mov bh, 0x78
imul esi, esi, 0x803257e3
add byte [rcx + rcx*2 + 0x54], 0x4d
pop rdi
js 0x401c38
cld
mov cl, 0x2d
or al, 0x43
jbe 0x401c68
xor al, 0x1b
pop rbx
push -0x7089b052
jne 0x401c61
jbe 0x401ba5
mov ebp, 0x6373fd90
outsb dx, byte [rsi]
cmp eax, 0x6c20ef3b
insd dword [rdi], dx
push rsp
xchg eax, ebx
popfq
pop rcx
add byte [rsi + 0x38], al
sbb dword [rsi], ebp
mov eax, 0x73640b30
or dword [rdi - 0x25], ebp
shr byte [rax + 0x5f], 0x64
cmp ch, byte [rdx - 0x7a26e319]
ret
shr byte [rdx + 0x623d6576], cl
add eax, 0x922b06e7
pop rsi
or eax, 0x16c7a909
adc cl, byte [rsi]
test byte [rbx - 0x4b09a91f], ah
mov edi, 0x6f657b23
jo 0x401cd8
jle 0x401cda
movabs al, byte [0x2c30cdf874004700]
sub al, 0xe6
test eax, 0xa1bb756f
jne 0x401c2b
jae 0x401d07
insd dword [rdi], dx
xor dword [rbp - 0x28], ebp
leave
outsb dx, byte [rsi]
je 0x401d0a
push 0x63761e09
mov ecx, 0x770ff75
outsb dx, byte [rsi]
outsd dx, dword [rsi]
mov ch, 0x49
sub eax, 0x3ead6f15
fsub dword [rdi + 0xd]
outsb dx, byte [esi]
jne 0x401ce1
cld
xchg eax, edx
sub eax, 0xc5ad6f69
or al, byte [rdx + 0xd]
out 0x38, al
or dword [rcx + rdi*2 + 0x6e], esp
push -0x4d
jae 0x401d18
sbb r12d, r12d
jae 0x401ce2
mov dh, 0x50
mov ecx, 0x5f0c6eaf
sbb edi, dword [rdi + 0x46bd8236]
and dword [rax], ebp
or dword [rdi], ebp
je 0x401ca3
insd dword [rdi], dx
iretd
jb 0x401d01
or ch, byte [rdi + rbp*2]
or bh, bh
cmp eax, 0x59c3dd6
fisub dword [rdi + rbp*2]
fisubr dword [rsi]
push 0x20f65b34
jrcxz 0x401d66
jb 0x401d0e
cmp ch, byte [rbx + 0x1d]
wait
cmp eax, 0x986a0b31
jnp 0x401c9d
and al, 0x76
push rsi
imul ecx, dword [rdx + rdi*4 - 0x46], 0x46e619a
jbe 0x401d8a
add ch, al
push rbx
or eax, eax
add byte [rdi], al
add dword [rbx - 0x1069fec9], esi
fild word [rdi]
and dword [rcx], ebx
xchg eax, edx
sbb al, 1
and eax, dword [rdi]
sbb dword [rax + rax*2 + 0x54], esp
push rsp
and byte [rax - 0x7a], cl
add al, 0x31
sbb dword [rsp + rsi*2 + 0x74], esp
and al, 0x20
xchg dword [rbx + rbx - 0x980bc], edi
ljmp [rdi - 0x68]
or dword [rdx + rsi], 0xffffffc8
cwde
xor byte [rip + 0x33480d08], al
and al, 0x4e
or ecx, eax
in al, 0xec
and byte [rbx + 0x1b0c83f], al
sti
ror byte [rdx + rsi], cl
fnstcw word [rdi]
sbb byte [rsi + 3], dl
adc ebx, esi
or al, 0x58
cmpsd dword [rsi], dword ptr [rdi]
xchg eax, esi
je 0x401d97
leave
add dword [rsi - 0x41], r11d
call qword [rdx - 0x30fcc84d]
mov edi, 0x21ba4024
sbb eax, dword [rdx]
imul edi, dword [rdi], -2
add al, 0x19
call 0x729bb88
mov al, 0x6f
mov edi, 0x4f7aff02
add al, 9
outsd dx, dword [rsi]
adc ch, byte [rdi + rbx]
mov al, 0xc3
enter -0xb8, -0x7c
sbb dword [rdx + rax*2 - 0x70], esp
nop
ret 0x7200
leave
or byte [rcx], al
sbb byte [rsi - 0x7ddb21ed], cl
or al, 6
cmpsd dword [rsi], dword ptr [rdi]
enter -0x6d7a, 0x13
lcall [rdx]
mov dword [rdi], edi
sbb dword [rax + rax*8 - 0x40], esp
rol byte [rcx - 0x38], 0x86
insb byte [rdi], dx
adc byte [rdi], al
xchg eax, esp
insb byte [rdi], dx
and ecx, 0x2f07bf26
paddusb mm4, qword [rax + rcx*8 - 0x72]
popfq
nop
pop rbx
and bh, cl
jg 0x401e0d
adc byte [rdi], bh
movabs dword [0xaff07d748549bd9], eax
leave
or dword [rcx + 0x7b22d8bf], ebp
xchg eax, ebx
add dword [rdx + 0x72], eax
mov cl, 0xbf
enter -0x6d7a, 0x33
jg 0x401e85
mov edi, 0xdc13c93f
fadd dword fs:[rdi]
lodsb al, byte [rsi]
add ah, byte [rax - 0x2e]
je 0x401e47
leave
add ecx, eax
jnp 0x401e4b
test dword [rdi], 0xb0193faf
movsb byte [rdi], byte ptr [rsi]
mov ecx, 0x264f0fd5
and byte [rdi + rax + 0x6408e1bf], bh
nop
leave
adc byte [rax], dl
sbb dword [rax + 0x67fe66e], edx
sbb byte [rax], bl
or al, 0xc9
leave
loopne 0x401e61
adc byte [rbx], dl
and ah, byte [rbx + rax*4]
cwde
jbe 0x401e42
and dh, byte [rbx + 7]
jg 0x401e76
out dx, eax
or dword [rdx + 0x67], eax
and byte [rdi], bh
jo 0x401e0d
and dword [rcx], ebx
clc
jo 0x401e4d
jo 0x401e8b
jg 0x401e84
adc edi, dword [rcx]
enter -0x6ce0, 0x3f
add byte [rax + 0x47040438], 6
or ecx, dword [rdi]
add ebx, dword [rsi + rdx]
xchg eax, edx
in eax, dx
xlatb
xor byte [rdi], bh
xor al, 0xb3
ret
sbb byte [rdi + 7], dil
adc dword [rbx - 0x6e], edi
adc edi, dword [rax]
add byte gs:[rdi + 0x2d], dl
jg 0x401ebc
cmc
retf -0x7b9a
mov ebx, 0x20b800
imul ecx, dword [rsi - 0x62], 0x1e08e8bf
xor ah, ah
leave
and dword [rcx + rcx + 0x7f], ebp
movabs al, byte [0x808b00000003b729]
add al, 0
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x53f7fdea], ecx
and dl, ah
jmp 0x401eca
ljmp [rax - 0xdffffeb]
add byte [rax], al
sub byte [rsi], dh
add byte [rax], al
add qword [r8], rax
jge 0x401ef5
add byte [rax], al
add bh, bh
