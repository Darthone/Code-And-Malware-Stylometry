xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x602087
push rbp
sub rax, obj.stdin
cmp rax, 0xe
mov rbp, rsp
jbe 0x4009e0
mov eax, 0
test rax, rax
je 0x4009e0
pop rbp
mov edi, obj.stdin
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.stdin
push rbp
sub rsi, obj.stdin
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400a28
mov eax, 0
test rax, rax
je 0x400a28
pop rbp
mov edi, obj.stdin
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x201659], 0
jne 0x400a4a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x201646], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400a60
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400a5b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
push r12
push rbp
movsxd rbp, edi
push rbx
mov ebx, dword [rip + 0x201a03]
mov r12d, esi
cmp ebx, ebp
jle 0x400abc
lea edx, [rbx - 1]
movsxd rax, ebx
mov rsi, rax
sub edx, ebp
add rdx, 1
sub rax, rdx
sub rsi, rdx
lea rdi, [rax + 0x6020a1]
add rsi, obj.ans
call sym.imp.memmove
add ebx, 1
mov byte [rbp + obj.ans], r12b
mov dword [rip + 0x2019c4], ebx
pop rbx
pop rbp
pop r12
ret
nop dword [rax + rax]
nop word cs:[rax + rax]
test edi, edi
jle 0x400c1d
push r15
push r14
xor r9d, r9d
push r13
push r12
mov r14d, esi
push rbp
push rbx
mov r13d, 1
sub rsp, 8
movsxd r8, dword [rip + 0x201987]
lea r12d, [rdi + r8]
mov r10, r8
mov ebx, r8d
nop dword [rax + rax]
test ebx, ebx
jle 0x400b93
lea edi, [rbx - 1]
xor ebp, ebp
mov ecx, 0x6020a1
mov eax, edi
cdq
idiv ebx
movzx eax, byte [rip + 0x20156e]
movsxd rdx, edx
cmp byte [rdx + obj.ans], al
jne 0x400b5a
jmp 0x400bad
nop
lea eax, [rbp + rbx - 1]
movzx esi, byte [rcx]
add rcx, 1
cdq
idiv ebx
movsxd rdx, edx
cmp sil, byte [rdx + obj.ans]
je 0x400bb0
add ebp, 1
cmp ebx, ebp
jne 0x400b40
mov ecx, obj.ans
xor ebp, ebp
nop dword [rax + rax]
cmp r14b, byte [rcx]
je 0x400b88
lea eax, [rbp + rdi]
cdq
idiv ebx
movsxd rdx, edx
cmp r14b, byte [rdx + obj.ans]
jne 0x400bb0
add ebp, 1
add rcx, 1
cmp ebx, ebp
jne 0x400b70
test r9b, r9b
jne 0x400c23
add rsp, 8
xor eax, eax
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
xor ebp, ebp
nop
sub edi, ebp
lea r15, [r8 + 1]
cmp ebx, ebp
lea rdx, [rdi + 1]
mov rsi, r8
movsxd rbp, ebp
mov rdi, r15
cmovle rdx, r13
sub rsi, rdx
sub rdi, rdx
add rsi, obj.ans
add rdi, obj.ans
call sym.imp.memmove
lea eax, [rbx + 1]
mov byte [rbp + obj.ans], r14b
mov r8, r15
mov r9d, 1
cmp eax, r12d
mov r10d, eax
mov ebx, eax
jne 0x400b18
mov dword [rip + 0x201887], eax
add rsp, 8
mov eax, 1
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov eax, 1
ret
mov dword [rip + 0x201866], r10d
jmp 0x400b9c
nop
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x38
mov ebp, dword [rip + 0x20184c]
mov byte [rsp + 0x1f], dl
test ebp, ebp
jle 0x400c7b
xor r15d, r15d
cmp sil, byte [rip + 0x20144a]
mov r13d, esi
mov eax, 0x6020a1
jne 0x400c72
jmp 0x400c8a
nop word [rax + rax]
add rax, 1
cmp byte [rax - 1], r13b
je 0x400c90
add r15d, 1
cmp r15d, ebp
jne 0x400c68
add rsp, 0x38
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
xor r15d, r15d
nop dword [rax]
lea eax, [rdi - 1]
test edi, edi
mov dword [rsp + 0x2c], eax
je 0x400c7b
lea rax, [rax + rax + 2]
mov r12d, ebp
movsxd r8, ebp
sub r12d, r15d
xor r14d, r14d
mov qword [rsp + 0x20], rax
movsxd rax, r15d
mov qword [rsp + 8], rax
lea eax, [rbp + 1]
mov dword [rsp + 0x28], eax
lea eax, [rbp + r14]
mov ebx, r14d
cmp r15d, eax
jge 0x400cff
lea edx, [r12 - 1]
mov rax, r8
mov rsi, r8
mov qword [rsp + 0x10], r8
add rdx, 1
sub rax, rdx
sub rsi, rdx
lea rdi, [rax + 0x6020a1]
add rsi, obj.ans
call sym.imp.memmove
mov r8, qword [rsp + 0x10]
add ebx, dword [rsp + 0x28]
movzx ecx, byte [rsp + 0x1f]
mov rax, qword [rsp + 8]
cmp r15d, ebx
mov byte [rax + obj.ans], cl
jge 0x400d81
mov eax, r12d
lea rbx, [r8 + 2]
mov rsi, r8
lea rdx, [rax + 1]
sub rsi, rax
mov rdi, rbx
add rsi, obj.ans
sub rdi, rdx
add rdi, obj.ans
call sym.imp.memmove
mov rax, qword [rsp + 8]
add r12d, 2
add r14, 2
cmp r14, qword [rsp + 0x20]
mov byte [rax + obj.ans], r13b
mov r8, rbx
jne 0x400cc0
mov eax, dword [rsp + 0x2c]
lea eax, [rbp + rax*2 + 2]
mov dword [rip + 0x20171e], eax
add rsp, 0x38
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
lea rbx, [r8 + 2]
jmp 0x400d47
nop word [rax + rax]
mov edi, dword [rip + 0x2016fa]
test edi, edi
jle 0x400de1
lea eax, [rdi - 1]
cdq
idiv edi
movsxd rdx, edx
movzx eax, byte [rdx + obj.ans]
cmp byte [rip + 0x2012f0], al
je 0x400df0
mov esi, 0x6020a1
mov ecx, edi
lea r9d, [rdi + rdi - 1]
jmp 0x400ddc
mov eax, ecx
movzx r8d, byte [rsi]
add ecx, 1
cdq
add rsi, 1
idiv edi
movsxd rdx, edx
cmp r8b, byte [rdx + obj.ans]
je 0x400df0
cmp ecx, r9d
jne 0x400dc0
mov eax, 1
ret
nop word [rax + rax]
xor eax, eax
ret
nop dword [rax]
nop word cs:[rax + rax]
push r15
push r14
mov ecx, obj.O
push r13
push r12
mov edx, obj.R
push rbp
push rbx
mov esi, obj.n
xor eax, eax
mov r9d, obj.G
mov r8d, obj.Y
sub rsp, 0x38
mov edi, str._d_d_d_d_d_d_d
push obj.V
push obj.B
call sym.imp.scanf
mov eax, dword [rip + 0x201663]
mov edx, dword [rip + 0x201651]
pop rcx
mov dword [rip + 0x20163a], 0
mov ebp, eax
sub ebp, edx
pop rsi
js 0x4010c0
test eax, eax
je 0x400fc8
test ebp, ebp
jne 0x400fc8
add edx, eax
cmp edx, dword [rip + 0x201633]
jl 0x4010c0
test eax, eax
jle 0x400fbb
lea edx, [rax - 8]
lea esi, [rax - 1]
shr edx, 3
add edx, 1
cmp esi, 6
lea ecx, [rdx*8]
jbe 0x401510
movdqa xmm0, xmmword [rip + 0xa95]
xor esi, esi
mov rdi, rsi
add rsi, 1
shl rdi, 4
cmp edx, esi
movaps xmmword [rdi + obj.ans], xmm0
ja 0x400ead
cmp eax, ecx
lea edx, [rcx + rcx]
je 0x400fb3
lea edi, [rdx + 1]
movsxd rsi, edx
mov byte [rsi + obj.ans], 0x52
lea esi, [rdx + 2]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x47
lea edi, [rcx + 1]
cmp eax, edi
jle 0x400fb3
lea edi, [rdx + 3]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x52
lea esi, [rdx + 4]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x47
lea edi, [rcx + 2]
cmp eax, edi
jle 0x400fb3
lea edi, [rdx + 5]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x52
lea esi, [rdx + 6]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x47
lea edi, [rcx + 3]
cmp eax, edi
jle 0x400fb3
lea edi, [rdx + 7]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x52
lea esi, [rdx + 8]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x47
lea edi, [rcx + 4]
cmp eax, edi
jle 0x400fb3
lea edi, [rdx + 9]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x52
lea esi, [rdx + 0xa]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x47
lea edi, [rcx + 5]
cmp eax, edi
jle 0x400fb3
movsxd rsi, esi
add ecx, 6
lea edi, [rdx + 0xc]
mov byte [rsi + obj.ans], 0x52
lea esi, [rdx + 0xb]
cmp eax, ecx
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x47
jle 0x400fb3
add edx, 0xd
movsxd rdi, edi
movsxd rdx, edx
mov byte [rdi + obj.ans], 0x52
mov byte [rdx + obj.ans], 0x47
add eax, eax
mov dword [rip + 0x2014d5], eax
mov ebx, 1
jmp 0x4010c2
nop dword [rax]
mov eax, dword [rip + 0x2014d2]
mov edx, dword [rip + 0x2014c0]
mov r12d, eax
sub r12d, edx
js 0x4010c0
jne 0x401048
test eax, eax
je 0x401048
add edx, eax
cmp edx, dword [rip + 0x2014be]
jl 0x4010c0
test eax, eax
jle 0x400fbb
lea edx, [rax - 8]
lea esi, [rax - 1]
shr edx, 3
add edx, 1
cmp esi, 6
lea ecx, [rdx*8]
jbe 0x401408
movdqa xmm0, xmmword [rip + 0x934]
xor esi, esi
mov rdi, rsi
add rsi, 1
shl rdi, 4
cmp edx, esi
movaps xmmword [rdi + obj.ans], xmm0
ja 0x40101e
cmp eax, ecx
lea edx, [rcx + rcx]
jne 0x40140c
jmp 0x400fb3
nop dword [rax]
mov eax, dword [rip + 0x20144a]
mov edx, dword [rip + 0x201450]
mov r13d, eax
sub r13d, edx
js 0x4010c0
setne bl
test eax, eax
sete cl
or bl, cl
je 0x401240
cmp ebp, r12d
jge 0x4010d8
cmp ebp, r12d
jg 0x4013a0
cmp r12d, r13d
jl 0x4013a0
test r12d, r12d
je 0x4010a7
lea edx, [r12 - 1]
mov esi, 0x59
mov edi, obj.ans
add rdx, 1
call sym.imp.memset
mov dword [rip + 0x2013e9], r12d
mov esi, 0x52
mov edi, ebp
call sym.add
test al, al
jne 0x40110e
nop word [rax + rax]
xor ebx, ebx
add rsp, 0x38
mov eax, ebx
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop dword [rax + rax]
cmp ebp, r13d
jl 0x401071
test ebp, ebp
je 0x4010fd
lea edx, [rbp - 1]
mov esi, 0x52
mov edi, obj.ans
add rdx, 1
call sym.imp.memset
mov dword [rip + 0x201393], ebp
mov esi, 0x59
mov edi, r12d
call sym.add
test al, al
je 0x4010c0
mov esi, 0x42
mov edi, r13d
call sym.add
test al, al
je 0x4010c0
mov r13d, dword [rip + 0x20136a]
test r13d, r13d
jle 0x401227
lea eax, [r13 - 1]
movzx r10d, byte [rip + 0x200f65]
cdq
idiv r13d
movsxd rdx, edx
cmp r10b, byte [rdx + obj.ans]
je 0x4010c0
mov r14d, 0x6020a1
lea r11d, [r13 + r13 - 1]
mov ecx, r13d
mov rsi, r14
jmp 0x401188
nop word [rax + rax]
mov eax, ecx
movzx edi, byte [rsi]
add ecx, 1
cdq
add rsi, 1
idiv r13d
movsxd rdx, edx
cmp dil, byte [rdx + obj.ans]
je 0x4010c0
cmp ecx, r11d
jne 0x401168
cmp r10b, 0x52
je 0x401529
mov eax, 0x6020a1
xor r15d, r15d
jmp 0x4011b6
nop dword [rax]
add rax, 1
cmp byte [rax - 1], 0x52
je 0x401530
add r15d, 1
cmp r15d, r13d
jne 0x4011a8
mov eax, dword [rip + 0x2012cf]
xor r15d, r15d
cmp r10b, 0x59
jne 0x4011e7
jmp 0x401720
nop dword [rax + rax]
add r14, 1
cmp byte [r14 - 1], 0x59
je 0x401720
add r15d, 1
cmp r15d, r13d
jl 0x4011d8
mov edx, dword [rip + 0x2012ae]
xor r15d, r15d
cmp r10b, 0x42
mov eax, 0x6020a1
jne 0x40121e
jmp 0x401633
nop dword [rax]
add rax, 1
cmp byte [rax - 1], 0x42
je 0x401640
add r15d, 1
cmp r15d, r13d
jl 0x401210
movsxd r8, r13d
mov byte [r8 + obj.ans], 0
jmp 0x4010c2
nop word [rax + rax]
add edx, eax
cmp edx, dword [rip + 0x201264]
jl 0x4010c0
test eax, eax
jle 0x400fbb
lea edx, [rax - 8]
lea esi, [rax - 1]
shr edx, 3
add edx, 1
cmp esi, 6
lea ecx, [rdx*8]
jbe 0x401520
movdqa xmm0, xmmword [rip + 0x6e6]
xor esi, esi
mov rdi, rsi
add rsi, 1
shl rdi, 4
cmp edx, esi
movaps xmmword [rdi + obj.ans], xmm0
ja 0x40127c
cmp ecx, eax
lea edx, [rcx + rcx]
je 0x400fb3
lea edi, [rdx + 1]
movsxd rsi, edx
mov byte [rsi + obj.ans], 0x42
lea esi, [rdx + 2]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x4f
lea edi, [rcx + 1]
cmp eax, edi
jle 0x400fb3
lea edi, [rdx + 3]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x42
lea esi, [rdx + 4]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x4f
lea edi, [rcx + 2]
cmp eax, edi
jle 0x400fb3
lea edi, [rdx + 5]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x42
lea esi, [rdx + 6]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x4f
lea edi, [rcx + 3]
cmp edi, eax
jge 0x400fb3
lea edi, [rdx + 7]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x42
lea esi, [rdx + 8]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x4f
lea edi, [rcx + 4]
cmp eax, edi
jle 0x400fb3
lea edi, [rdx + 9]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x42
lea esi, [rdx + 0xa]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x4f
lea edi, [rcx + 5]
cmp eax, edi
jle 0x400fb3
movsxd rsi, esi
add ecx, 6
lea edi, [rdx + 0xc]
mov byte [rsi + obj.ans], 0x42
lea esi, [rdx + 0xb]
cmp eax, ecx
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x4f
jle 0x400fb3
add edx, 0xd
movsxd rdi, edi
movsxd rdx, edx
mov byte [rdi + obj.ans], 0x42
mov byte [rdx + obj.ans], 0x4f
jmp 0x400fb3
nop word [rax + rax]
cmp ebp, r13d
jg 0x401817
cmp r12d, r13d
jg 0x401817
test r13d, r13d
je 0x4013d5
lea edx, [r13 - 1]
mov esi, 0x42
mov edi, obj.ans
add rdx, 1
call sym.imp.memset
mov dword [rip + 0x2010bb], r13d
mov esi, 0x52
mov edi, ebp
call sym.add
test al, al
je 0x4010c0
mov esi, 0x59
mov edi, r12d
call sym.add
test al, al
jne 0x40111f
jmp 0x4010c0
nop dword [rax + rax]
xor edx, edx
xor ecx, ecx
lea edi, [rdx + 1]
movsxd rsi, edx
mov byte [rsi + obj.ans], 0x59
lea esi, [rdx + 2]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x56
lea edi, [rcx + 1]
cmp eax, edi
jle 0x400fb3
lea edi, [rdx + 3]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x59
lea esi, [rdx + 4]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x56
lea edi, [rcx + 2]
cmp eax, edi
jle 0x400fb3
lea edi, [rdx + 5]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x59
lea esi, [rdx + 6]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x56
lea edi, [rcx + 3]
cmp eax, edi
jle 0x400fb3
lea edi, [rdx + 7]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x59
lea esi, [rdx + 8]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x56
lea edi, [rcx + 4]
cmp eax, edi
jle 0x400fb3
lea edi, [rdx + 9]
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x59
lea esi, [rdx + 0xa]
movsxd rdi, edi
mov byte [rdi + obj.ans], 0x56
lea edi, [rcx + 5]
cmp eax, edi
jle 0x400fb3
movsxd rsi, esi
add ecx, 6
lea edi, [rdx + 0xc]
mov byte [rsi + obj.ans], 0x59
lea esi, [rdx + 0xb]
cmp eax, ecx
movsxd rsi, esi
mov byte [rsi + obj.ans], 0x56
jle 0x400fb3
add edx, 0xd
movsxd rdi, edi
movsxd rdx, edx
mov byte [rdi + obj.ans], 0x59
mov byte [rdx + obj.ans], 0x56
jmp 0x400fb3
nop word cs:[rax + rax]
xor edx, edx
xor ecx, ecx
jmp 0x400ece
nop dword [rax]
xor edx, edx
xor ecx, ecx
jmp 0x40129d
xor r15d, r15d
nop dword [rax]
mov eax, dword [rip + 0x200f66]
lea ecx, [rax - 1]
test eax, eax
mov dword [rsp + 0x2c], ecx
je 0x4011bf
mov eax, r13d
movsxd r10, r13d
lea ebp, [r13 + 1]
sub eax, r15d
lea r12, [r10 + 2]
mov dword [rsp + 8], eax
mov eax, ecx
lea rax, [r12 + rax*2]
mov qword [rsp + 0x20], rax
movsxd rax, r15d
mov qword [rsp + 0x10], rax
jmp 0x401574
nop
add r12, 2
lea eax, [rbp - 1]
cmp r15d, eax
jge 0x4015b0
mov eax, dword [rsp + 8]
mov rsi, r10
mov qword [rsp + 0x18], r10
lea edx, [rax - 1]
mov rax, r10
add rdx, 1
sub rax, rdx
sub rsi, rdx
lea rdi, [rax + 0x6020a1]
add rsi, obj.ans
call sym.imp.memmove
mov r10, qword [rsp + 0x18]
mov rax, qword [rsp + 0x10]
cmp r15d, ebp
mov byte [rax + obj.ans], 0x47
jge 0x4015ea
mov eax, dword [rsp + 8]
mov rdi, r12
lea rdx, [rax + 1]
sub r10, rax
lea rsi, [r10 + obj.ans]
sub rdi, rdx
add rdi, obj.ans
call sym.imp.memmove
mov rax, qword [rsp + 0x10]
add ebp, 2
add dword [rsp + 8], 2
cmp r12, qword [rsp + 0x20]
mov byte [rax + obj.ans], 0x52
mov r10, r12
jne 0x401570
mov eax, dword [rsp + 0x2c]
lea r13d, [r13 + rax*2 + 2]
mov eax, dword [rip + 0x200e7e]
test r13d, r13d
mov dword [rip + 0x200e70], r13d
jle 0x401227
movzx r10d, byte [rip + 0x200a72]
jmp 0x4011c5
xor r15d, r15d
nop word cs:[rax + rax]
lea eax, [rdx - 1]
test edx, edx
mov dword [rsp + 0x20], eax
je 0x401227
movsxd r9, r13d
mov r12d, r13d
lea ebp, [r13 + 1]
lea r14, [r9 + 2]
sub r12d, r15d
lea rax, [r14 + rax*2]
mov qword [rsp + 0x18], rax
movsxd rax, r15d
mov qword [rsp + 8], rax
jmp 0x40167c
nop dword [rax + rax]
add r14, 2
lea eax, [rbp - 1]
cmp r15d, eax
jge 0x4016b6
lea edx, [r12 - 1]
mov rax, r9
mov rsi, r9
mov qword [rsp + 0x10], r9
add rdx, 1
sub rax, rdx
sub rsi, rdx
lea rdi, [rax + 0x6020a1]
add rsi, obj.ans
call sym.imp.memmove
mov r9, qword [rsp + 0x10]
mov rax, qword [rsp + 8]
cmp r15d, ebp
mov byte [rax + obj.ans], 0x4f
jge 0x4016ef
mov eax, r12d
mov rdi, r14
lea rdx, [rax + 1]
sub r9, rax
lea rsi, [r9 + obj.ans]
sub rdi, rdx
add rdi, obj.ans
call sym.imp.memmove
mov rax, qword [rsp + 8]
add ebp, 2
add r12d, 2
cmp r14, qword [rsp + 0x18]
mov byte [rax + obj.ans], 0x42
mov r9, r14
jne 0x401678
mov eax, dword [rsp + 0x20]
lea r13d, [r13 + rax*2 + 2]
mov dword [rip + 0x200d75], r13d
jmp 0x401227
lea ecx, [rax - 1]
test eax, eax
mov dword [rsp + 0x20], ecx
je 0x4011f0
movsxd r9, r13d
mov eax, ecx
mov r12d, r13d
lea r14, [r9 + 2]
lea ebp, [r13 + 1]
sub r12d, r15d
lea rax, [r14 + rax*2]
mov qword [rsp + 0x18], rax
movsxd rax, r15d
mov qword [rsp + 8], rax
jmp 0x40175c
nop dword [rax]
add r14, 2
lea eax, [rbp - 1]
cmp r15d, eax
jge 0x401796
lea edx, [r12 - 1]
mov rax, r9
mov rsi, r9
mov qword [rsp + 0x10], r9
add rdx, 1
sub rax, rdx
sub rsi, rdx
lea rdi, [rax + 0x6020a1]
add rsi, obj.ans
call sym.imp.memmove
mov r9, qword [rsp + 0x10]
mov rax, qword [rsp + 8]
cmp r15d, ebp
mov byte [rax + obj.ans], 0x56
jge 0x4017cf
mov eax, r12d
mov rdi, r14
lea rdx, [rax + 1]
sub r9, rax
lea rsi, [r9 + obj.ans]
sub rdi, rdx
add rdi, obj.ans
call sym.imp.memmove
mov rax, qword [rsp + 8]
add ebp, 2
add r12d, 2
cmp r14, qword [rsp + 0x18]
mov byte [rax + obj.ans], 0x59
mov r9, r14
jne 0x401758
mov eax, dword [rsp + 0x20]
mov edx, dword [rip + 0x200caf]
lea r13d, [r13 + rax*2 + 2]
test r13d, r13d
mov dword [rip + 0x200c8c], r13d
jle 0x401227
movzx r10d, byte [rip + 0x20088e]
jmp 0x4011f6
mov ecx, str.bool_Main__
mov edx, 0x8b
mov esi, str.sorted_code_control_wwt15_wwt15_1_1_gcj.cpp
mov edi, str.false
call sym.imp.__assert_fail
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x2005b6]
push rbp
lea rbp, [rip + 0x2005be]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401886
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401870
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
and eax, 0x25642564
and eax, 0x25642564
and eax, 0x61660064
insb byte [rdi], dx
jae 0x40192d
add byte [rcx + 0x4d], cl
push r8
push r11
push rbx
add byte [r10], r14b
sub eax, 0x6772616c
imul ebp, dword cs:[rsi], 0x2e420077
outsd dx, dword cs:[rsi]
jne 0x40195c
add byte [rbx + 0x61], al
jae 0x401952
and byte [rbx], ah
and eax, 0x25203a64
jae 0x401900
add byte [rax], al
jae 0x401969
jb loc.__GNU_EH_FRAME_HDR
pop rdi
movsxd rbp, dword [rdi + 0x64]
movsxd rbp, dword [rdi + 0x6e]
je 0x40197b
outsd dx, dword [rsi]
insb byte [rdi], dx
ja 0x401985
je 0x401941
xor eax, 0x7477772f
xor dword [rip + 0x315f315f], esi
movsxd rbp, dword [edx + 0x2e]
movsxd rsi, dword [rax + 0x70]
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x6f], ah
outsd dx, dword [rsi]
outsd dx, dword [rsi]
insb byte [rdi], dx
and byte [rbp + 0x61], cl
imul ebp, dword [rsi + 0x28], 0x29
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
push r10
push r10
push r10
push r10
push r10
push r10
push r10
pop r9
push rsi
pop rcx
push rsi
pop rcx
push rsi
pop rcx
push rsi
pop rcx
push rsi
pop rcx
push rsi
pop rcx
push rsi
pop rcx
push rsi
add qword [r11], r11
add dword [rbx], ebx
add edi, dword [rbx]
add byte fs:[rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax - 0x12], dl
push qword [rax + 0x20000000]
out dx, eax
ljmp [rax + 2]
add byte [rax], al
loopne 0x40197d
lcall [rax + 0x10000002]
inc dword [rax + 0x10000000]
int1
fadd dword [rax]
add byte [rax], al
jo 0x401997
dec dword [rax]
add dword [rax], eax
add al, al
dec dword [rax + 0x20000001]
hlt
push rax
add dword [rax], eax
add byte [rax + 0x8fffff4], dl
add al, byte [rax]
add al, al
push qword [rax + 0x30000002]
clc
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4019f7
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
mov bh, ch
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401a27
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
cwde
in eax, dx
inc eax
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sub al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rax], dh
call qword [rcx]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdx + rax - 0x79e7f1bf], cl
add eax, dword [rsi + rcx + 0x20]
add dword [rdx + rax], 0x46
sbb byte [rcx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bh
add byte [rax + rax], dh
add byte [rax - 0x10], ah
dec dword [rdi + 1]
add byte [rax], al
add byte [rdx + 0xe], cl
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx + 0x400e4a07], al
add bl, byte [rsi + 0x43380e0a]
ret
xor byte [rcx - 0x3a], al
sub byte [rdx - 0x34], al
and byte [rdx - 0x33], al
sbb byte [rdx - 0x32], al
adc byte [rdx - 0x31], al
or byte [rcx + 0xb], al
add ah, byte [rax + 0xe]
cmp byte [rsi - 0x3d], al
xor byte [rcx - 0x3a], al
sub byte [rdx - 0x34], al
and byte [rdx - 0x33], al
sbb byte [rdx - 0x32], al
adc byte [rdx - 0x31], al
or byte [rdi + 0xe], al
add dword [rdi], -0x7a
mov word [rip + 0x38e048d], es
pop qword [rdx]
add byte [rax], al
add byte [rax], al
add byte fs:[rax], al
add ah, dh
add byte [rax], al
add byte [rax], dh
int1
call qword [rdi + 1]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx + 0x700e4407], al
add al, byte [rcx + 0xa]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add ch, ah
or cl, byte [rsi]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
pop rsp
add dword [rax], eax
add byte [rax], ch
jmp qword [rbx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsp
add byte [rax], al
add byte [rcx + rax], dh
add byte [rax + 0x30fffff2], al
or al, byte [rax]
add byte [rax], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1ba], es
cmp byte [rbx + 0x700e5707], al
js 0x401bf3
add byte [rcx], 0x52
js 0x401c04
jo 0x401bbb
imul eax, dword [rdx], 0xa
cmp byte [rbx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rsi + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ch
add byte [rax], al
add dword [rax], eax
add byte [rax - 0x3f000014], dh
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x180e4102], al
add dword [rbx], 0x58
xor byte [rdx], al
sahf
or cl, byte [rsi]
sbb byte [rcx + 0xe], al
adc byte [rcx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add al, 2
add byte [rax], al
in eax, dx
jmp qword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rbp + 0xe], bl
or byte [rax], al
add byte [rax], r8b
add byte [rdx + rax], bl
add byte [rax], al
or ah, bh
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x401c62
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
add al, byte fs:[rax]
add byte [rax], dh
cld
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rax
or al, byte [rax]
add byte [rax], al
add byte [rax], al
push rax
or dword [rax], eax
add byte [rax], al
add byte [rax], al
xor byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
cwde
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rax + rbx + 0x40], ah
add byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sbb eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 4], bh
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], r8d
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4006], dl
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 6], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add al, ch
add eax, 0x40
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rsi + 0x4005], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, dl
add byte [rax], al
add byte [rax], al
add dh, ah
add byte [rax], al
add byte [rax], al
add dh, dh
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte es:[rax], al
add byte [rax], al
add byte [rax], al
or byte ss:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], r8b
add byte [rax], al
add byte [rax], al
push rsi
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
jbe 0x402072
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4020f8
je 0x402101
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x40210f
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x40210c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 4], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rsi + 0x4005], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add al, ch
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add byte [rax + 0x4006], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add byte [rax + 0x4007], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
rol byte [rdi], 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x40088000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0x4008], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rax + rbx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc byte [rax], al
mov al, 0x18
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rax + 0x19], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add al, bl
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601e1000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb dword [rax], eax
jo 0x40233a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], bl
add byte [rax + 0x6020], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
adc eax, 0x601e1000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x4009], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rdx], bl
add byte [rax + 0x6020], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add dword [rax], eax
adc al, 0
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xa], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rbx], dl
add al, bh
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsd dword [rdi], dword ptr [rsi]
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1000000], ch
add byte [rax], dl
add byte [rax], ch
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
int 0
add byte [rax], al
add al, byte [rax]
add byte [rax + 9], dl
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bl
add byte [rax], al
add byte [rcx], al
add byte [rdx], bl
add byte [rax + 0x6024], dh
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, ch
add byte [rax], al
add byte [rcx], al
add byte [rdx], dl
add byte [rax + 0x401c], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bh
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x601e1000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add dword [rax], eax
add byte [rax], al
add byte [rcx], dl
add byte [rax + 0x19], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add dword [rax], eax
add byte [rcx], al
add byte [rax], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rcx], al
add byte [rax], al
add byte [rax], al
adc eax, dword [rax]
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 1], al
add byte [rax], al
add byte [rax], al
adc eax, dword [rax]
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rsp
add dword [rax], eax
add byte [rcx], al
add byte [rsi], dl
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add al, byte [rax]
add byte [rax], ah
add byte [rcx], bl
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 1], bl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jno 0x40259b
add byte [rax], al
adc dword [rax], eax
sbb al, byte [rax]
nop
and al, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jne 0x4025b3
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x4018], ah
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, ch
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x4009], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x20000001], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax + 0x200000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test al, 1
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x400d], dl
add byte [rax], al
add byte [rbx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dl, 1
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
int 1
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jg 0x40265b
add byte [rax], al
adc al, byte [rax]
verr word [rax + rbx + 0x40]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 1, eax
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 2
add byte [rax], al
adc al, byte [rax]
add byte [rax], dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rdi + 1], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rdx]
add byte [rax], al
adc al, byte [rax]
add al, ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add qword [r8], r8
add byte [rax], al
add byte [rax], al
add byte [rbx], ah
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x400a], al
add byte [rax], al
add byte [rcx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 2], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push 0x12000002
add byte [rax], al
add byte [rax], dh
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea eax, [rdx]
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x11000002
add byte [rax], dl
add byte [rax + 0x4018], dh
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, 0x12000002
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, cl
add al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, ah
add al, byte [rax]
add byte [rax], dl
add byte [rcx], bl
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, dh
add al, byte [rax]
add byte [rcx], dl
add byte [rdx], bl
add byte [rax + 0x6024], ah
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
hlt
add al, byte [rax]
add byte [rcx], dl
add byte [rdx], bl
add byte [rax + 0x6020], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add eax, dword [rax]
add byte [rcx], dl
add bl, byte [rcx]
add byte [rax + 0x6020], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add eax, dword [rax]
add byte [rcx], dl
add bl, byte [rcx]
add byte [rax + 0x20], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], dh
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte gs:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 3], al
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
and byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 3], dl
add byte [rax], al
adc dword [rax], eax
sbb al, byte [rax]
cwde
and al, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 3], ch
add byte [rax], al
adc dword [rax], eax
sbb al, byte [rax]
xchg eax, esp
and al, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rcx], al
add byte [rax], al
adc dword [rax], eax
sbb al, byte [rax]
test al, 0x24
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd qword [rax]
add byte [rax], al
adc dword [rax], eax
sbb al, byte [rax]
lodsb al, byte [rsi]
and al, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp al, 1
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
mov eax, 0x6024
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 3], dh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg byte [rbx], al
add byte [rax], al
adc byte [rax], al
sbb dword [rax], eax
and byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x11000003], cl
add byte [rdx], bl
add byte [rsp + 0x60], bl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop qword [rbx]
add byte [rax], al
adc dword [rax], eax
sbb al, byte [rax]
movabs al, byte [0xed00000000006020]
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x11000003], dl
add byte [rdx], bl
add byte [rsp + 0x60], ah
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, ebp
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x11000003], bl
add byte [rdx], bl
add byte [rax + 0x6020], cl
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000003], dh
add byte [rsi], cl
add byte [rax + 0x4008], dl
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add eax, dword [rax]
add byte [rdx], dl
add byte [rbx], cl
add byte [rax + 0x4007], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x402a1a
jne 0x402a0e
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x4029ce
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402a4c
jb 0x402a52
pop rdi
jne 0x402a5b
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402a55
je 0x402a51
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402a71
jb 0x402a77
pop rdi
jne 0x402a80
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402a83
jns 0x402a73
outsb dx, byte gs:[rsi]
je 0x402a8a
jns 0x402a1a
jb 0x402a7e
insd dword [rdi], dx
pop rdi
jne 0x402a90
insd dword [rdi], dx
jns 0x402a26
pop rdi
pop rdi
jb 0x402a8c
insd dword [rdi], dx
pop rdi
jne 0x402a9e
insd dword [rdi], dx
jns 0x402a93
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402a9e
jns 0x402a9e
outsb dx, byte gs:[rsi]
je 0x402ab5
jns 0x402a45
movsxd rbp, dword [edx + 0x2e]
movsxd rsi, dword [rax + 0x70]
add byte [rdi + 0x5a], bl
pop rdx
xor al, 0x4d
imul ebp, dword [rsi + 0x76], 0x5f393145
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x402aed
pop rdi
pop r15
outsb dx, byte [rsi]
add byte [rdi + 0x5a], bl
push rbx
je 0x402acf
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdi
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402b3c
jns 0x402b3c
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402b4d
jns 0x402b4d
jae 0x402b64
jb 0x402b67
add byte [rdi + 0x44], bl
pop rcx
add byte [r13 + 0x65], bpl
insd dword [rdi], dx
jae 0x402b67
je 0x402b44
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x6e656c00
add byte [rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x402ba2
jb 0x402ba5
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x402b97
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x402bb8
jae 0x402b48
pop rdi
pop rdx
xor eax, 0x63656863
imul esi, dword [rsi], 0x5f
pop rdi
jae 0x402bca
jb 0x402bce
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x705f5f00
jb 0x402bdb
outsb dx, byte [rsi]
je 0x402bdb
pop rdi
movsxd rbp, dword [rax + 0x6b]
pop r15
xor ch, byte [rsi]
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402bc5
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
jb 0x402c16
jo 0x402c1f
movsxd rsp, dword [rbp + 0x69]
movsxd rsp, dword [rbx]
pop rdi
pop rdx
xor esp, dword [rcx + 0x64]
imul esp, dword fs:[rbx], 0x69365a5f
outsb dx, byte [rsi]
jae 0x402c2f
jb 0x402c40
imul esp, dword [rbx], 0x696c5f5f
movsxd rbx, dword [rdi + 0x73]
je 0x402c3a
jb 0x402c4f
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x402c54
pop rdi
je 0x402c5c
js 0x402c62
je 0x402c3b
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x402c46
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x402c9b
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x402cc3
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x402cd7
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x402cec
pop rdi
jae 0x402d02
jb 0x402d05
add byte [rcx], bl
jae 0x402d0a
imul ebp, dword fs:[rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x545f5f00
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
jae 0x402d27
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x656d0074
insd dword [rdi], dx
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x402d3c
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x625f5f00
jae 0x402d5d
pop rdi
jae 0x402d61
jb 0x402d64
add byte [rdx], al
pop rdi
pop rdi
jae 0x402d6b
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
push rsi
add byte [rsi + 0x72], ah
outsd dx, dword gs:[rsi]
jo 0x402d7c
outsb dx, byte [rsi]
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x64655f00
je 0x402d8d
add byte [rdi], al
outsb dx, byte [rsi]
jae 0x402d33
add byte [r15 + 0x5a], r11b
xor al, 0x4d
imul ebp, dword [rsi + 0x76], 0x64747300
outsd dx, dword [rsi]
jne 0x402db8
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x69616d00
outsb dx, byte [rsi]
add byte [rax], al
jae 0x402dd4
insd dword [rdi], dx
je 0x402dbf
add byte [rsi], ch
jae 0x402dd7
jb 0x402dd9
add byte [rsi], ch
jae 0x402dd3
jae 0x402de1
jb 0x402de3
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402de4
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402df2
outsb dx, byte cs:[esi]
jne 0x402dc0
jne 0x402dfe
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x402dce
push 0x687361
jns 0x402e17
jae 0x402e24
insd dword [rdi], dx
add byte [rsi], ch
jns 0x402e1f
jae 0x402e27
jb 0x402db5
outsb dx, byte cs:[esi]
jne 0x402de8
jbe 0x402e21
jb 0x402e31
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x402df5
jbe 0x402e2e
jb 0x402e3e
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x402e39
insb byte [rdi], dx
jns 0x402e48
add byte [rsi], ch
jb 0x402e43
insb byte [rdi], dx
jo 0x402e4f
je 0x402de5
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x402e1e
outsd dx, dword [esi]
je 0x402df4
je 0x402e5c
js 0x402e6d
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x402e72
je 0x402e68
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402e8b
jns 0x402e2c
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x402ea7
jns 0x402e38
push 0x63
jb 0x402e3d
jns 0x402eaf
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x402eb9
je 0x402e4f
je 0x402eb5
add byte [rsi], ch
jae 0x402ecc
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x402e63
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 0x4002, 0
add byte [rax], al
add byte [rax], al
enter 2, 0
add byte [rax], al
add byte [rax], al
mov al, 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x402ffe
add byte [rax], al
add byte [rax], al
add byte [rax + 4], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], r8d
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x4005], bh
add byte [rax], al
add byte [rsi + 5], bh
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
add eax, 0x40
add byte [rax], al
call 0x40308a
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 6], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4006], dl
add byte [rax], al
add byte [rax + 6], dl
add byte [rax], al
add byte [rax], cl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rip + 0x18000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4007], bl
add byte [rax], al
add byte [rax + 7], bl
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4008], al
add byte [rax], al
add byte [rax + 8], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1000000], bl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4008], dl
add byte [rax], al
add byte [rax + 8], dl
add byte [rax], al
add byte [rdx], dl
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rbx + 0x40], ah
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4018], dh
add byte [rax], al
add byte [rax + 0x18], dh
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x19], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0x19], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte fs:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
fcomp dword [rcx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
lodsb al, byte [rsi]
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loope 0x4033aa
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 0, al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x40340b
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, eax
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
jo 0x40348a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc byte [rax]
add byte [rax], al
or byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], al
add byte [rax], al
add byte [rax], bh
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdi
sub eax, 0
add byte [rax], al
or al, 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, 0x20
add byte [rax], al
add al, ch
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
add byte [rdx], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x29], ah
add byte [rax], al
add byte [rdi + 3], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
