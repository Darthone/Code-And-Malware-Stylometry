call 0x4025f8
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x402410
add ebx, ebx
je 0x4023c6
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4023fe
cmp rbp, -4
ja 0x4023fe
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4023e6
add ecx, 4
mov dl, byte [rax]
je 0x40240e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4023fe
ret
cld
pop r11
cmp r8b, 2
je 0x402426
jmp 0x4024a3
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x402436
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x40241e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x40244e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x40243b
sub eax, 3
jb 0x40246c
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x4024a3
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x402493
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x402491
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x402480
cmp rbp, -0xd00
adc ecx, eax
call 0x4023d2
jmp 0x402426
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x40257c
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40251a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x402566
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x402539
push 0x3a707474
jne 0x402592
js 0x402552
jae 0x40258c
outsb dx, byte cs:[rsi]
je 0x40254b
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4025b9
jb 0x4025ab
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4025d6
jb 0x4025e9
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x2149c6
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x2149c6
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x4024b4
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4025df
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x40258d
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add al, byte [rax]
jmp rbp
call 0x706f2687
jb 0x40269f
movsxd rbp, dword [rdi]
jae 0x402699
insb byte [rdi], dx
js 0x40269f
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x40267f
cmp rsi, rcx
jae 0x402687
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x402666
cmp al, 0x8f
ja 0x402666
cmp byte [rsi - 2], 0xf
je 0x40266c
sub al, 0xe8
jg 0x402669
push rdi
cmp al, 1
ja 0x402654
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x402657
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x402684
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4026db
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c2b59
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40271f
mov al, 0xa
jmp 0x40271f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4026fb
inc ebx
mov al, 0
jmp 0x402723
mov al, 2
jmp 0x402723
mov al, 3
jmp 0x402723
mov al, 0x3c
jmp 0x402723
push rcx
rcr ah, 1
fstp st(7)
jle 0x402764
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x402776
jg 0x402768
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a7eeb
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4027c2
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb793f
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4027ca
cmp esi, 0x21585055
jne 0x4027ce
jge 0x4027c0
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4027c3
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4027c7
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x402873
pop rcx
or al, 0x3b
jb 0x402879
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4027eb
jmp 0x4027ed
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x366272e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf54976
in eax, dx
jg 0x402825
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x40286b
mov bh, 0x2a
add edi, 0x10
jmp 0x402868
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4028a5
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4028e1
jne 0x4028f8
fstpnce st(6), st(0)
jle 0x4028c1
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4028f7
jrcxz 0x40292b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1c88f
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4029aa
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x40296a
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58296f3f
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4029dd
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x402977
and ecx, 7
or al, 0xeb
jae 0x4029e2
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x402a17
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x402a55
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x402a0e
push rax
call 0xffffffff868d26fb
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x402a18
std
cmp edi, esi
xchg eax, edi
jle 0x402a6d
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96ff9
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x402a6b
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x402a59
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x402a82
js 0x402ac2
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x402b54
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad3d8f
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x402b75
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x402b7a
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc2262c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x402b08
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
push rdx
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + 0x2a], al
mov byte [rdx], dl
add byte [rax], al
add byte [rax], ah
add edi, edi
mov al, 0x22
add byte [rax], al
or al, byte [rax]
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402c2e
je 0x402c37
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402c00
mov dh, 0x7d
jbe 0x402bff
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x402c38
sahf
sahf
add al, 0
cwde
add eax, 0x1f90d800
and byte [rdi + 0x6800006], bl
add byte [rdx - 0x6fd827f5], dl
invd
add al, ah
or dword [rax], eax
mov al, 0xc
xchg eax, r14d
add esp, esp
or al, byte [rax]
adc byte [rip + 0x6c030f0b], cl
cmp eax, dword [rax + 0xc]
add al, 0x10
add cl, bh
add edx, esi
or eax, 0xe11f000
add byte [rax], al
adc al, byte [rcx + 0xffc807c]
add byte [rsi + rdi + 0x40a00010], dl
adc dword ds:[rax], eax
add byte [rax + 0x12], al
add byte [rax - 0x60dfe038], ch
adc eax, dword [rax]
cld
adc al, 0
call 0x14248ca9
enter 0x1503, 0
clc
add byte [rax], al
mov sil, 9
in al, 3
add byte [rax], cl
sbb byte [rdi + 0x4f], al
add esp, dword [rcx + rdi + 0x40]
sbb dword [rax + 0x40], edx
rcl byte ds:[rsi + 0x1b17511a], 0
and cl, cl
mov ebx, 0x131c9b29
add dword [rdi], edx
add al, 0
int1
inc dword [rsi + 0xc1d8b2b]
sbb edi, dword [rdi - 0x66f968e7]
mov al, 0x9b
add ah, byte [rax + 0x1b174014]
loopne 0x402c25
sbb al, 0x64
and byte cs:[rip - 0x2706c4fa], dl
pop rdi
sbb eax, dword [rax]
jo 0x402d04
add dword [rdi], edx
push rbx
or al, 0x76
and eax, 0x477a4f44
scasb al, byte [rdi]
test al, cl
nop
xchg byte [rdi + 0x1b1f90a5], dl
ret 0xabd7
ja 0x402cda
add dh, bh
mov bl, 0x27
wait
pop rdi
sub dword [rdx + rax + 0x2f], eax
sbb al, 0xe4
in al, dx
leave
push -0x28c03fff
xchg eax, esi
add ecx, ecx
sahf
adc al, 0x26
mov esp, 0x70943701
jno 0x402d5b
retf
jrcxz 0x402d55
enter -0x7872, -8
fst dword [r15]
pop rax
or byte [rdi - 0x1b], al
push 0x32bb1195
out 0xf8, eax
push bx
ret 0xed8
fist word [rdi]
sub esp, ebx
popfq
adc cl, byte [rdi + 0x32]
add al, byte [rdi - 0x49]
mov esp, 0xb6c6c803
xchg dword [rax], esp
cmp eax, dword [rdx]
lea eax, [rsi - 0x789a131a]
sbb byte [rcx], al
push rcx
adc dh, byte [rdi]
pop rcx
in al, 0xec
leave
mov al, 0x2b
push -0x7c6c8500
pop rbp
jg 0x402d78
nop
sahf
pushfq
cmp al, 0x79
mov edx, 0x2a147006
add byte [rdi - 0x7bc9ef14], cl
mov ah, 0x17
movsd dword [rdi], dword ptr [rsi]
add dword [rdi + 0x69], eax
sbb dword [rip + 0x20e72f01], edx
fsub dword [rcx]
insb byte [rdi], dx
add dh, dh
or al, byte [rbx]
pop rdi
and byte [rdi], ch
mov al, 0x17
pop rsi
add al, 0x17
add edx, dword [rax]
xor al, byte [rsp + rbx*2 + 0x57616a39]
add ah, bh
mov dword [rdx], eax
movsx ebp, byte [rdi]
jb 0x402d79
adc ecx, dword [rsi]
jrcxz 0x402d94
xchg eax, edi
push rdx
mov edi, 0xc8430110
adc byte [rdx - 6], dh
sbb dword [rsi - 0x27], edx
ror byte [rcx], 1
jo 0x402dc8
cmp byte [r10], 0xe4
leave
cmp r11b, al
add eax, 0x2f21bc0
jns 0x402dad
sahf
or eax, 0xa4054b47
add eax, 0x6359e4f2
js 0x402df3
add dword [rdi], eax
mov esi, dword [rcx]
jo 0x402dad
sub al, 0x87
out dx, eax
mov eax, 0x482bce0c
add al, 0x79
jbe 0x402d6c
sar dword [rdi], 0x57
movabs al, byte [0x390863a405144716]
mov ah, 0xe7
adc dh, dh
in al, 0xd9
add ecx, eax
cmpsd dword [rsi], dword ptr [rdi]
sal byte [rbx], 1
sbb byte [rbx], al
ja 0x402e15
xchg eax, edx
lodsd eax, dword [rsi]
jns 0x402d8c
add ch, byte [rdi]
sbb byte [rbx - 0x6f44f9f9], bl
jg 0x402e69
push rbx
mov dl, 0x2f
adc byte [rdi - 0x62], cl
jo 0x402e59
mov edi, 0x3e203707
add byte gs:[rax + 0x2f], ah
nop
iretd
or byte [rdi], dl
mov al, 0x29
sti
pop rsi
jl 0x402e2f
mov edi, 0x2f888f1b
or byte [rcx], bl
ret 0xd786
cmp al, 0xe1
add eax, 0x26090e72
or dword [rdi], ebx
in al, 0x20
sbb dword [rbp + 0x506a17fe], 0x3b
jnp 0x402dca
sbb al, 0xec
out 0x47, al
or al, 0xa
or ch, byte ss:[rdi]
sahf
cmp al, 0xf0
pop qword [rdx]
mov esp, 0x1d9e42f6
sbb al, byte [rdx]
out dx, eax
js 0x402eb8
adc dword [rbx], ecx
mov edi, 0x5e40bc8
push -0xff45af5
jmp 0x774c6ea7
or edi, ecx
in al, dx
xchg eax, ebp
test dword [rdi + 0xc], 0x4011a077
sbb edx, eax
nop
or al, 0x7b
xchg eax, ebx
fldenv [rcx]
or byte fs:[rdi + rdi*4 + 0x7906bf0c], ch
mul ah
cmp al, 0xdb
add edi, edx
pop rsp
or eax, 0xc1ce8431
add r8, qword [rdi + 0x77]
or eax, 0x41ce8477
mov eax, 0x7c96731
xlatb
fist word [rdx]
sbb byte [rdi + 0x9ff0d7c], ch
movsxd rsi, dword [rdx + 0x74]
jae 0x402eb9
xchg eax, edi
push qword [rbp + rsi*2 + 0x66]
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
add byte [rbp + 0x72], ah
imul ebx, dword gs:[edx], 0x5bffbbdb
pop rdi
je 0x402f4f
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402f0b
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx - 0x49]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x402f5b
jne 0x402f77
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x402f70
sub dword gs:[rsi + rbp - 0x41], esp
std
add eax, 0x383537f6
xor eax, 0x69665f24
outsb dx, byte [rsi]
imul ecx, dword [rax], 0x79617272
pop rdi
jge 0x402ed9
jge 0x402ec9
movsd dword [rdi], dword ptr gs:[rsi]
jb 0x402f9d
add byte [rsi + 0xa], ah
insd dword [rdi], dx
and byte gs:[rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x402f38
jmp 0x402f37
int3
xor cl, byte [rip + 0x2a74295f]
mov ch, 0xff
outsd dx, dword [rsi]
mov bh, 0x42
pushfq
jo 0x402fb0
and al, 0x5a
push rbx
je 0x402f91
xor dword [rcx], edi
jo 0x402fb2
movsxd rsp, dword gs:[rbp + 0x77]
cdq
test eax, 0x2dadb7d8
ja 0x402fc3
lahf
jb 0x402fcd
movsxd rsi, dword [rdx + rbx - 0x1c]
mov bh, 0xd6
jbe 0x402fbb
imul r13d, dword [r14], 0x3e72736f
jle 0x402fd8
jo 0x402f56
mov edx, 0x1449bdb6
vcmpss xmm13, xmm1, dword [rcx + rbp*2], 0xc9
lea esi, [rsi + 0x49bb7b7d]
cmp qword [rdi], r12
outsb dx, byte [esi]
jne 0x402fc1
js 0x402ffe
xor dword [rdi], esi
or ch, byte [rsi + 0x12]
mov bh, 0xc9
fsubr qword [rbp - 0x58]
push rax
xor al, 0x34
jo 0x402ff8
imul ecx, dword [rax], 0x6dff7d69
movsxd rax, dword [rbp + 0xa]
cmp al, 0x63
adc eax, 0x535f3453
add eax, 0xb5bb6145
inc dword [rax]
insb byte [rdi], dx
push rbx
xor dword [rdi + 0x35], ebx
cmp esp, dword [rdx + 0x73]
xor dword [rsi], eax
and rbx, r15
outsb dx, byte [rsi]
mov cl, 0xdb
push qword [rbx + 0x73]
sbb eax, 0x442b5476
pop rdi
push rsp
xor byte [rbx + 0x68], bl
insd dword [rdi], dx
imul eax, dword [rdx], 0x24
cmpsd dword cs:[rsi], dword ptr [rdi]
push rsi
xor esp, dword [rcx - 0x49244099]
pop rdx
xor eax, 0x424e6c98
xor eax, 0x693178
outsd dx, dword [rsi]
clc
mov ebx, 0x52508d31
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
jl 0x403060
fstp qword [r10 - 0x55]
in eax, dx
or qword [rbx - 0x2d], r14
pop rdi
pop rdx
cmp dword [rcx - 0x5d514a6d], esi
pop rbx
outsb dx, byte [rsi]
movabs eax, dword [0xcd0e1bedf563633f]
cmp byte [rdi + 0x31], r13b
push rdx
movabs byte [0xcc42444ede1d93cb], al
or eax, dword [rdi + 0x4e]
push rbp
mov bpl, 0x4f
mul byte [rax + 0x20]
push rdx
push rbx
jge 0x403021
test al, dh
mov esi, 0x4c4241aa
sub byte [r11 + 0x64], r15b
adc byte [rdi + 0x6c5856bb], dl
pop cx
fistp word [r10 - 0x4c]
movsxd rdi, dword [rsi + 0x33]
movsxd rbx, dword [rdi]
leave
pop r8
in al, dx
cwde
sti
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x15
out 0x16, eax
push rbx
loope 0x403004
nop
mov ebp, 0x2d694573
cmp byte [rcx + 0x62], ch
movsxd rcx, dword [rbx + 0x5a310938]
out 0x20, eax
enter 0x6874, -0x27
mov dh, 0x6d
pop rsp
ja 0x4030f9
sbb ah, byte fs:[rcx + 0x76]
jbe 0x403103
ficomp word [rsi]
jb 0x4030c0
and al, 0x32
xor al, 0x6f
jne 0x40304a
outsd dx, dword [rsi]
pop di
fcomp st(7)
fisub word [rax + 0x4465676e]
insd dword [rdi], dx
je 0x40310a
movsxd rdi, dword [r10 + 0x2f]
xor dh, byte cs:[rax]
jg 0x40305b
xor eax, 0x6d676776
sub eax, 0x764a10c1
pop rdi
push rdx
std
movsxd rdi, dword [rbx]
sbb dh, bl
insb byte [rdi], dx
jae 0x4030b4
pop rdx
insb byte [rdi], dx
push rax
fucomi st(0)
ficom word [rcx + 0x321b5f69]
adc word [rdx + rbx + 0x5b], bp
sti
outsb dx, byte [rsi]
pop rdi
xor dl, byte [rax + 0x2e]
xor eax, 0xe4864bd0
je 0x40308e
sbb bh, byte [rdi + 0x657079f1]
sub sil, byte [r9]
xor ebx, dword [rdi + 0x4d]
pop rdi
xchg eax, ebp
xor eax, 0x1ac2c26e
adc dword [rcx], esi
add al, 0x82
or byte [rbx], bh
movsxd rax, dword [rcx + rax + 0x31167074]
xor bl, bl
scasb al, byte [rdi]
insd dword [rdi], dx
pop rbp
jae 0x4030e4
nop
jb 0x403152
cmc
ret
insd dword [rdi], dx
int 0xf4
xor dword [rbx + 0x68], esp
imul eax, edi, 0x3d
jae 0x403184
outsb dx, byte [rsi]
sub al, 0x99
wait
push rbp
cmp dword [r9 + 0x5245f765], r12d
mov al, 0x90
xchg eax, ebp
sbb dl, dh
push rbx
cmp bh, bh
test byte [rbx + 0x4e7a46bb], bh
xor al, 0x49
jns 0x403198
xor dword [rbp + 0x2e], eax
adc byte [rdx], cl
movsd dword [rdi], dword ptr [rsi]
add dword [rdx + rsi], esi
ret 0x917a
insb byte [rdi], dx
and al, 0x12
insd dword [rdi], dx
fild qword [rsi + 0x6b]
outsb dx, byte [rsi]
mov eax, 0x62525c93
xchg eax, edx
cdq
xchg byte gs:[rbx], ch
and eax, 0x8e6da9ac
push rax
cmp eax, 0xb236ee18
pop rax
jnp 0x4031e0
in eax, 0x61
pop rdi
mov ch, 0xc3
movsb byte [rdi], byte ptr [rsi]
xchg eax, ebp
mov ch, 0x78
nop
push rsi
test eax, 0xa6484557
ret
imul edx, dword [rbx - 0x4e1e5652], 0xb4a82900
jge 0x4031d3
ret 0x3f5b
imul edx, dword [rdx + 0x4b], -0x5d
insb byte [rdi], dx
movsb byte [rdi], byte ptr [rsi]
ret 0xe296
cmp al, 0x37
xor byte [rdx], cl
or ecx, dword [rbp - 0x7b8f0633]
movabs eax, dword [0xe5bc38211843e145]
jae 0x4031b3
fdiv qword [rsi]
jnp 0x403214
imul dword [rbx]
imul edi, eax, 0x6c655341
sahf
sub ebx, dword [rbx - 0x15]
cld
xor dword [rbx - 9], ebp
xor bl, byte [rsi]
in al, 0x5a
cmp ebx, -0x33
adc byte [rbp + 0x38], al
movsxd rsi, dword [rbx + rsi*2]
mov word [rax + 0x42], ds
mov ebp, 0xa0482133
mov ebp, 0x49440392
push rsp
ficomp dword [r15]
insb byte [rdi], dx
retf
or al, 0x43
adc eax, 0x6e626154
je 0x4031e1
movsd dword [rdi], dword ptr [rsi]
jmp 0x403224
jmp 0x403270
pop rdi
jne 0x40324e
mov byte ss:[rsi + rdx*2 + 0x41a4fb2b], al
push rcx
insd dword [rdi], dx
cmp dword [rbp + 0x6b6ddd57], 0x1984aa84
sbb eax, dword [rax]
mov ecx, 0xd91c1c1c
xor dh, byte [rdx]
and dword [rbp + 0x6d], 0x7441685f
mov ch, 0xed
sar ebp, 0x71
jne 0x403289
movabs r11, 0x6a6f1802d4c23167
stc
int 0xe1
mov edx, 0x24323456
scasq rax, qword [rdi]
or byte [r13 + 0xc], r12b
sti
outsb dx, byte [rsi]
jno 0x403293
mov ebp, dword [rcx - 0x4c7b49d4]
js 0x403296
js 0x4032af
add ch, dh
shr byte [rdi], 0x44
jo 0x4032bd
push rsp
sub cl, 0xb5
jb 0x4032ba
sbb dh, byte [rdi + 0x18385bde]
pop rdx
jmp 0x5be864e5
or al, byte [rdx + 0x3f12d78c]
jbe 0x40320c
sal byte [rax], 0xb5
xor al, 0x73
ja 0x4032f2
jo 0x4032f2
xor edi, dword [rdx + 9]
xlatb
cwde
adc al, 0xae
sbb byte [rdi + 0xb00dca1], dh
push rdx
mov dh, 0x4a
sub al, byte [rbx + rbx*4]
cmp dword [rdx + 0x70], ebx
sub eax, 0xb46db6c0
jbe 0x40330d
push rbx
cld
insb byte [rdi], dx
pop rbp
xor byte [r13 + 0x17], sil
cmp dword [rdx - 0x27233975], edi
xchg eax, edx
or edi, dword [rdx]
xor bh, byte [rcx]
pop rdi
in al, 0x56
fistp dword [rax + rdi + 2]
or byte [rbx + 6], spl
jp 0x4032ec
ficom dword [rax]
push rbx
movsxd rdi, dword [rbx - 0x46]
retf -0x728
or al, 0x6e
xor eax, 0x688c6c66
adc bl, al
xchg eax, esi
pop rsi
jno 0x4032d8
pop rdi
mov esi, 0x6db2d66b
movsxd rdx, dword [rsi]
cmp esi, dword ss:[rbx - 0x35]
imul ecx, dword [rsi - 0x39], 0x61b596b2
jbe 0x403346
sbb edx, dword [rax + 0x393131cd]
pop rbp
test byte [rsi], dl
fcomi st(2)
sbb rdi, qword [rdi - 0x26]
loope 0x40336a
imul ecx, dword [rip - 0x7882cd26], 0x47
add al, 0x23
mov dl, 0x5c
fcmovnu st(0), st(2)
imul edx, ebx, 0x6f826fc8
inc esp
sbb dword [rcx - 0x5e], 0x2c300502
or eax, 0x393157f9
outsd dx, dword [rsi]
retf -0x7daa
stosd dword [rdi], eax
cmp dword [rsi], esi
push rsp
xchg eax, ebp
cmovnp ebx, dword [rax + 0x3974928b]
scasd eax, dword [rdi]
je 0x403313
add dword [rcx + 8], ebp
call 0x3eb092cc
movabs r8, 0x8ba051d7522da4a9
lea edx, [rip + 0x45dc70ed]
push rbx
and dword [rax + 0x32c56c42], esi
fld dword [rdx]
leave
xor bl, byte [rsi]
movsxd rdx, dword [rsi - 0x7c]
mov esp, 0x694e5890
outsb dx, byte [rsi]
enter 0x7e48, 0x49
movabs eax, dword [0x3a76806d2c424435]
jo 0x403311
wait
mov eax, dword gs:[rip + 0x5f1da147]
push rdi
mov ecx, 0x6ed704bf
sbb ah, byte [rbx + 0x30762c42]
sub esp, dword [rdi]
mov edx, 0xbe572351
xor dword [rsi], ebp
ljmp [rsi + 0x77]
mov ah, 0x95
insd dword [rdi], dx
cmp eax, 0x647d5512
sal ah, cl
xor cl, byte [rax + 0x43f16dbd]
mov r11d, 0x63216830
jnp 0x4033fc
jo 0x403441
jne 0x4033f2
add ebx, 0x25
pop rbp
pop rax
jo 0x40344e
scasd eax, dword [rdi]
xor dword [rcx], ebx
shr byte [rip - 0x10e916b9], 1
push -0x16
jne 0x403376
or edx, dword [rdx + rdx*2]
cmc
or byte [rdi - 0x57], cl
push rdx
cmpsb byte [rsi], byte ptr [rdi]
push rcx
clc
hlt
xchg eax, ecx
push rcx
jrcxz 0x40344a
adc dword [rdx], esp
cmp byte [rdi + rbp*2 + 0x18], ah
sbb al, 0xda
and di, dx
add byte [rdi - 0x46], ch
jb 0x403406
xor dl, byte [rax + 0x4a]
int1
adc eax, dword [rax + 0x2e004a1c]
jae 0x40348c
insd dword [rdi], dx
in al, dx
mov bh, 0xa
je 0x40348f
push -0x4e2965f7
fdiv qword [rsi]
jo 0x40342e
outsb dx, byte [rsi]
outsd dx, dword [rsi]
adc ch, byte cs:[rip + 0x21b81715]
fsub dword [rdi + 0xd]
xchg eax, esp
jne 0x4033be
sub eax, 0xb6235ad
sbb al, byte [rax]
or eax, 0x87093887
fnstcw word [rbx - 0x12]
jns 0x4034b9
mov ecx, 0x9b9ad319
xor byte [rdi + 0x32], al
or al, 0x5f
sbb edx, dword [rdi + 0x15ec16de]
add dword [rax], ebp
or esp, ebx
je 0x4034d5
outsb dx, byte [rsi]
jnp 0x40348d
or ch, byte [rdi + rbp*2]
or byte [rdx + 0x395ee8c7], cl
add eax, 0xb36f2463
fnsave dword gs:[rdx + 0x766880cf]
push 0x5d0d7264
movsxd rbp, dword [rsp + rcx]
or ebx, dword [rbp - 9]
js 0x4034c4
jo 0x4034ba
jo 0x40343f
pop rcx
adc ah, byte [rax + 0x2e]
add al, 0x43
or ebp, dword [rbp - 0x4c]
pop rax
jmp 0x36e1fa08
add byte [rdx + 0x68ecd983], bl
jnp 0x403505
fadd qword [rcx + rdx*2]
fst dword [rbx + 9]
sbb esp, esi
add byte [rax], al
mov ch, 4
push -0x5e
mov bh, 1
push rdi
nop
pushfq
mov ecx, 0x3f07a719
sbb al, 3
ror byte [rcx + rcx*8], cl
add dword [rbx], esp
push rsp
xor cl, r8b
and byte [rax + 4], dl
and byte [rbx + 0x32], al
and al, 0x31
je 0x4034b3
push rax
xor cl, al
je 0x4034ff
jg 0x4034d4
cmp esp, esp
ljmp [rdi - 0x68]
cwde
and dword [rcx], ebx
nop
cmp al, 5
or byte [rcx], bl
insb byte [rdi], dx
or r11, rax
fmul st(1)
test al, 3
sti
xchg eax, edx
nop
sbb byte [rsi + 3], dl
sahf
outsd dx, dword es:[rsi]
adc al, byte [rip - 0x445b4ab7]
pop rsi
mov edi, 0x90d997ff
pushfq
mov ebp, 0x24ebf07
add edx, edx
or eax, 0xe0fe3f6b
wait
or al, 0x72
out 7, al
cmpsd dword [rsi], dword ptr [rdi]
rol byte [rsi], 1
call qword [rbx + rcx*2 - 0x46]
sub dword [rdx + 0x4f], edi
add al, 0x10
jb 0x4034fe
wait
out 7, eax
xor eax, 0xffb0ec19
test byte [rdi], bh
sahf
mov ebp, 0x3f070f59
rol byte [rdx], 1
adc byte [rsi], al
nop
sbb dword [rsi - 0x21ecd1ed], ecx
mov word [rax], cs
pop rdi
call qword [rbp - 0x38]
xchg byte [rdx + 0x433f891a], dl
jb 0x40352d
pop rdi
adc byte [rax - 0x10], dh
adc byte [rbx + 0x7643642], ch
xchg eax, esp
xchg dword [rbx + rcx + 0xc], esp
bswap ecx
and byte [rdi + 0x76], al
popfq
jg 0x403599
adc cl, cl
or esp, esp
xchg eax, edx
sub al, 0x3f
movabs dword [0x9ff07c70a24dcce], eax
insb byte [rdi], dx
sbb cl, byte [rdx - 0x57]
mov edi, 0x21723fa0
sbb dword [rax + 0x3020015f], esp
sub ah, byte [rbx + rax*2]
mov cl, 0x3f
mov dl, 0xa1
in al, 0xec
jg 0x403559
mov edi, 0x3704f23f
sbb dword [rax + 0x5543f07], ebp
add dword [rax], ecx
fld dword [rbp - 0x37]
ja 0x403569
in al, 0x2c
jg 0x403568
push 0x59
loope 0x403572
fstp xword [rbx - 0x41]
jo 0x40360c
mov bh, 7
mov edi, 0xa4064d10
sbb esp, edi
psubb mm3, mm1
mov ecx, 0xff07c100
add ch, byte [rdx + rdx*4 + 0x6a]
scasd eax, dword [rdi]
wait
sub eax, 0x1f9bf8e9
enter 0xc2e, -0x41
jg 0x403615
sub dword [rbx + rcx + 0x19], -0x68
mov edi, 0x83924f4f
pop rsp
and al, 8
add dword [rcx], eax
or al, 0x36
pop rax
adc eax, 0x13f5027
movabs eax, dword [0x402ee1f0a917242]
jg 0x403639
xchg eax, edx
or byte [rdi], ch
push rcx
mov edi, 0x7922f276
pop rax
add edx, dword [rip + 0x21173001]
mov ebx, es
xor al, 0x3f
and esp, dword [rdi + 0x61]
out 0x62, al
jg 0x4035fd
sahf
sbb al, 0xaa
push 0x1e
add ebx, ebp
mov al, 0x2b
wait
mov ebx, 0xbff5000
push qword [rax + 0x1f39a401]
xor eax, 0x922c7f09
xchg dword [rax + 0x5c], esp
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x8f7fdea], ecx
sbb edx, dword [rbx + 0x48]
mov edi, 0xb001502b
and al, byte [rax]
add ah, al
or al, byte [rax]
add al, cl
jae 0x40369f
add byte [rcx + 2], cl
add byte [rcx - 0xc], bl
add byte [rax], al
add bh, bh
