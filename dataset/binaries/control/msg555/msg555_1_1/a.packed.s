call 0x403578
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x403390
add ebx, ebx
je 0x403346
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x40337e
cmp rbp, -4
ja 0x40337e
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x403366
add ecx, 4
mov dl, byte [rax]
je 0x40338e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x40337e
ret
cld
pop r11
cmp r8b, 2
je 0x4033a6
jmp 0x403423
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x4033b6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x40339e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x4033ce
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x4033bb
sub eax, 3
jb 0x4033ec
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x403423
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x403413
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x403411
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x403400
cmp rbp, -0xd00
adc ecx, eax
call 0x403352
jmp 0x4033a6
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4034fc
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40349a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x4034e6
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x4034b9
push 0x3a707474
jne 0x403512
js 0x4034d2
jae 0x40350c
outsb dx, byte cs:[rsi]
je 0x4034cb
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x403539
jb 0x40352b
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x403556
jb 0x403569
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21ab84
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21ab84
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x403434
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x40355f
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x40350d
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add eax, dword [rax]
jmp rbp
call 0x706f3607
jb 0x40361f
movsxd rbp, dword [rdi]
jae 0x403619
insb byte [rdi], dx
js 0x40361f
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x4035ff
cmp rsi, rcx
jae 0x403607
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x4035e6
cmp al, 0x8f
ja 0x4035e6
cmp byte [rsi - 2], 0xf
je 0x4035ec
sub al, 0xe8
jg 0x4035e9
push rdi
cmp al, 1
ja 0x4035d4
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x4035d7
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x403604
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x40365b
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c3ad9
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40369f
mov al, 0xa
jmp 0x40369f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x40367b
inc ebx
mov al, 0
jmp 0x4036a3
mov al, 2
jmp 0x4036a3
mov al, 3
jmp 0x4036a3
mov al, 0x3c
jmp 0x4036a3
push rcx
rcr ah, 1
fstp st(7)
jle 0x4036e4
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x4036f6
jg 0x4036e8
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a8e6b
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x403742
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb88bf
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x40374a
cmp esi, 0x21585055
jne 0x40374e
jge 0x403740
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x403743
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x403747
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x4037f3
pop rcx
or al, 0x3b
jb 0x4037f9
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x40376b
jmp 0x40376d
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x36636ae
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf558f6
in eax, dx
jg 0x4037a5
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x4037eb
mov bh, 0x2a
add edi, 0x10
jmp 0x4037e8
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x403825
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x403861
jne 0x403878
fstpnce st(6), st(0)
jle 0x403841
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x403877
jrcxz 0x4038ab
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1d80f
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x40392a
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x4038ea
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58297ebf
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x40395d
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x4038f7
and ecx, 7
or al, 0xeb
jae 0x403962
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x403997
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x4039d5
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x40398e
push rax
call 0xffffffff868d367b
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x403998
std
cmp edi, esi
xchg eax, edi
jle 0x4039ed
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c97f79
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x4039eb
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x4039d9
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x403a02
js 0x403a42
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x403ad4
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad4d0f
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x403af5
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x403afa
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc235ac
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x403a88
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
cld
add eax, 0xe0000
add byte [rax], al
add al, byte [rax]
add byte [rax], al
movabs al, byte [0x90aa]
add byte [rax], ah
add edi, edi
jo 0x403aca
add byte [rax], al
sbb ah, byte [rdx]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x403bae
je 0x403bb7
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x403b80
mov dh, 0x7d
jbe 0x403b7f
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x403bb8
sahf
sahf
add al, 0
cwde
add eax, 0x1f90d800
and byte [rdi + 0x7a00006], bl
add byte [rdx], ah
bswap eax
nop
invd
add byte [rax + 0x10180009], cl
in al, dx
adc ecx, eax
or al, byte [rax]
js 0x403bab
add byte [rax - 0x7ec170ec], al
xchg eax, ebp
add ecx, dword [rdi + rdx]
or eax, 0x9f176000
add byte [rax + 0xf], dh
add byte [rbx + rdi*2 + 9], al
lodsb al, byte [rsi]
sbb al, 0x60
adc byte [r15], r10b
add cl, bh
add edx, esi
adc dword [rax], eax
cmp byte [rdx + rdx], 0x68
test byte [rax], ah
jg 0x403b4f
cld
adc eax, dword [rax]
add al, 0xa6
adc al, 0
call 0x4fd09c88
and byte [rdi], cl
adc eax, 0x16f800
add byte [rsi + 0xf9027c8], ch
add byte [rax], cl
sbb byte [rax], al
clc
scasd eax, dword [rdi]
add esp, esp
sbb dword [rax], eax
add byte [rax - 0x4e8fffe6], dh
fld dword [rdx + rsi*8]
add dword [rbx], ebx
add byte [rax + 0x48ec131c], al
fimul word [rbp + 1]
add al, 0
int1
dec dword [rbx + rbx]
sal byte [rsp + rbx*2], cl
pop rcx
mov edi, 0xa0029719
or al, 0xc9
sbb edx, dword [r15]
loopne 0x403c4f
mov ebx, 0x18208390
pop rdi
sbb eax, dword [rax]
sal byte [rsp + rax*4 + 0x12760c8], 1
push rbx
sbb qword [r10 + 0x477aaec1], r10
xchg byte [rbx - 0x28], al
xchg eax, ebp
adc byte [rdi + 0x4dabd7a5], dl
jmp 0x77c06384
or al, 0x36
and al, 0x83
rcl ebp, 1
add dword [rbx + 0x32], 0x17ea90d8
neg dword [rsp + rbp*8]
in al, 0x20
jl 0x403ca3
mov edi, 0xe4190125
ret 0x809e
sub edx, dword [rdi]
push rbp
mov esi, 0x612873c
adc eax, 0x12017b97
mov esp, 0x899fa321
outsd dx, dword [rsi]
push rdx
in al, dx
add byte [rbx], cl
xchg eax, r13d
mov al, 0x17
mov ebx, 0xa8576232
outsd dx, dword [rsi]
mov esi, 0x4a6cc22f
sbb byte [rdi + rdx*4], dl
iretd
jg 0x403c59
xor ah, byte [rdx + 0x53]
loop 0x403ce9
out 0xb5, eax
sub bl, dl
xor byte [rax - 0x14df4894], al
and ah, bl
sbb eax, 0x2d156ce4
push rax
add ah, byte [rbp + 0x6793c9cf]
sbb byte [rcx], al
add bl, cl
sub esp, ecx
and byte [rdi - 0x53], ah
jmp 0x3246dee5
fbld tbyte [rbx + rdx*8 + 0xd]
cmp dword [rsi], esp
adc dh, byte [rsi + 0x1b]
iretd
jb 0x403cce
jo 0x403ce7
fst qword [rbx + 0x5b]
xor dword [rax], eax
in al, dx
leave
xchg eax, ebx
xor al, 3
call 0x7740853a
cmp dword [rcx - 0xe], edi
jge 0x403cf8
fcom dword [rdx - 0x51]
sbb eax, 0x93c9e704
out dx, eax
jno 0x403d03
mov bh, 4
jbe 0x403d6d
add dl, ah
cmp byte [rdx], spl
in al, 0xe4
leave
rcl dword [rdi], 0x16
add eax, 0x20235a70
sbb dword [rdx + 0x50], edx
xor byte [rcx], bh
jnp 0x403cfb
cmp eax, ecx
cwde
pop rsp
push rsp
imul esp, ebx, 5
pop rdi
xchg eax, ebx
sbb dword [rsp + rdi + 0x35557522], 6
cmp al, 0x39
enter 0x76c9, 0x59
fstp st(6), st(0)
push rsi
cmp dword [rdx - 0xe], esi
in al, dx
test dword [rdx], eax
sal byte [rdx + rbp], 1
jbe 0x403dac
xchg dword [rdi + rbp], ecx
outsb dx, byte [rsi]
push rsp
jb 0x403d64
ficom dword [rsi + 0x4f]
fbstp tbyte [rsi + 0xbd9c907]
jns 0x403dcd
cmp edi, eax
ja 0x403d94
or esp, esp
or dword [rsi + 0x8223719], ecx
jrcxz 0x403d55
fnstcw word [rcx]
or byte [rdi], ch
in al, 0x63
push rdi
or byte [rcx], bh
enter 0x33c9, 0xf
loopne 0x403dd1
or esp, esp
in al, dx
test dword [rcx + rdi*8], edi
cmp eax, 0x72d70938
xchg eax, ebx
sbb dword [rax + 0x64], edx
or dword [rbp + 0x7a], eax
cmp dword [rcx + 0x72], edi
nop
jb 0x403e15
or dword [rsp + rsi], ebx
sbb eax, 0x72790bb
movsb byte [rdi], byte ptr [rsi]
or dword [rsi*2 + 0x78cf17dd], edx
and dword [rdi], eax
cli
xor al, 0x1b
or bl, byte [rdi - 0x1b0f9cfc]
and byte [rdi], ah
cmp r9b, byte [rdx]
jnp 0x403d89
xchg eax, ebx
sbb dword [rdi + rdx*4 - 0x77f5b5fe], 0x53
pushfq
cmp al, 0x39
enter 0x751b, 0xa
pop rdx
or ecx, dword [rax]
nop
and dword [rbx + 0x4f0ac80a], 0xffffffc8
leave
mov bl, 0x17
sbb al, 0xb
pop rax
adc qword [rcx - 0x7fc6fd09], r9
or edi, dword [rcx - 0x3668e8d8]
mov bl, 0x17
psrlw mm1, qword [rbx]
cmpsd dword [rsi], dword ptr [rdi]
test dword cs:[rcx + rdi], edi
enter -0x4cc, 0xb
movabs al, byte [0x170c29ecf2720c4b]
pop rsi
push rbp
sub edx, dword [rax + 0x34]
test dword fs:[rdx + 0x3c0cef60], eax
jrcxz 0x403da8
pushfq
out dx, eax
fbstp tbyte [rcx + 0x56c8ff0c]
jb 0x403e14
in al, dx
test dword [rbx], eax
or eax, 0x1474aa5f
jnp 0x403e4d
or rax, 0x1643456
xlatb
xchg eax, ebx
sbb dword [rbp + rdi - 0x5988e79a], 0x79
or eax, 0xc9c8393c
mov spl, 0xd
sbb dword [rbp + rsi*8 + 2], eax
jmp 0x474e54d6
cmp cl, byte [rsi]
add ch, bl
nop
pushfq
xchg eax, edi
sub al, 0x53
sahf
int1
pushfq
push rdi
jp 0x403ea0
cmp al, byte [rcx]
insb byte [rdi], dx
adc ebx, dword [rsi - 0x38]
xchg eax, ebx
cmp ebp, dword [rax]
mov dword [rdx], 0x1ec9c839
insb byte [rdi], dx
retf
sub edx, dword [rax]
nop
out dx, al
js 0x403e98
and byte [rdi + 0x1d6790bd], al
wait
adc byte [rdi + 0x10c85a94], ch
enter 0x4e41, -0x62
ja 0x403e32
insd dword [rdi], dx
ficom word [rdx + 0x11]
repne movsb byte [rdi], byte ptr [rsi]
adc word [rdi - 0x7e2794b2], sp
test byte [rcx], dl
nop
cmp ecx, esi
adc dword [rdi + 0x3c85ec0b], ebx
mov edx, 0x5f1de638
or eax, dword [rdi + rdx + 0x171217d8]
xor dl, byte [rdx]
jg 0x403ecd
jb 0x403f35
mov al, 0x4b
xor byte [rsp + rbp*8 - 0x80], cl
jb 0x403e7c
xchg eax, ebx
or dword [rax + 0x2f], 0x2d
mov edi, 0xa45112e4
or edi, dword [rcx - 2]
pop rbp
pop rdi
pushfq
hlt
in al, dx
xchg eax, ebp
xchg eax, edi
adc r13d, dword [r15]
in al, dx
push 0x2f
pop rsi
enter -0x7c6d, -0x72
adc esi, dword [rsi + 0x6c13be39]
or byte [rbx + 0x17d8bfc0], bh
std
iretd
js 0x403f1f
sbb eax, 0x358f5ae1
adc al, 0xe7
push rax
jbe 0x403f2c
jnp 0x403f24
sbb byte [rax], dh
nop
xchg eax, ebx
int1
cmpsd dword [rsi], dword ptr [rdi]
adc al, 0x4f
jbe 0x403f65
push rsp
in al, dx
add eax, 0x1b14f772
adc eax, 0x8b4e6917
or dword [rdx + rsi*2], 0x43
xchg byte [rdx + 0x3d], ch
out 0x43, eax
jb 0x403f02
or eax, eax
adc eax, 0x84fa3a77
repne lodsb al, byte [rsi]
adc eax, 0x1855461f
jg 0x403f90
sahf
vhaddps xmm10, xmm14, xmmword [rsi]
nop
cmp byte [rcx], ch
hlt
leave
movabs dword [0xbd0110bf60b2a016], eax
nop
movabs r10, 0x93907216df2e5016
jg 0x403f1c
jae 0x403fc8
jae 0x403f82
and edi, ecx
loopne 0x403f74
cwde
cmpsd dword [rsi], dword ptr [rdi]
jae 0x403fec
jbe 0x403f52
test al, 0x3d
js 0x403f03
scasd eax, dword [rdi]
prefetchnta byte [rdi]
in al, 0x20
sbb byte [rsi], al
mov ah, byte [rax + 0x2f]
in al, 0x60
cld
int3
sbb byte [rdi - 0x38], bl
leave
xchg eax, ebx
pop rsi
or dword [rcx], ebx
and r14b, byte [r8 - 0x53]
add bh, byte [rcx]
push 0x19
nop
sbb dword [rdi - 0x43986fe2], eax
nop
pop rcx
mov ebx, 0x791ce719
xor cl, byte [rax]
mov ebp, 0x3aa71a27
push -0x7b0d86c4
sbb ah, byte [rdi + 0x23]
jbe 0x404041
add dword [rdx], eax
sbb ebx, dword [rsi - 0x4061bd0f]
imul edx, dword [rsi + 0x6121571b], -0x37
xchg eax, ebx
pop r14
add dword [rsi], esi
sbb al, 0x7c
imul esi, esi, 0x68c83902
lahf
sbb al, 0xd9
sbb al, 0xd7
pushfq
or edi, dword [rcx + 0x30]
push -0x3d80e2df
in al, dx
nop
sbb eax, 0xde40875f
test byte [rbx + 0x58], al
clc
sbb eax, 0x8578a807
cmp al, 0x81
dec dword [rsp + rbp]
mov al, 0x3a
cmp eax, ebx
push 0x17
push rcx
mov ecx, 0x4f279318
loopne 0x404043
push rdx
xor cl, byte [rax + 1]
sbb dword [rdi], ebp
in al, 0xc9
xor byte [rdi - 0x45], ch
cmp esp, esp
in al, 0x9c
insb byte [rdi], dx
and byte [rbx + 0x27], ch
cmp al, 0x79
in al, 0xe6
and al, 0xc6
add al, 0x8d
and byte [rdi + rbp], bh
pushfq
cmp al, 0xe3
test esp, edx
and byte [rdi], cl
mov esp, 0x2f467b44
nop
xor dword [rdi + 0x21], 0xffffff9d
and dword [rdi], esi
add eax, 0xbe790bc6
je 0x404051
and dword [rdi - 0x16c3637d], ebx
and ch, byte [rdi]
mov byte [rdi], dh
xchg eax, edx
adc ebx, dword [rsi - 0x38]
xchg eax, ebx
and cl, byte [rcx + 0x59]
mul byte [rdx]
sub ebx, dword [rsi - 0x7f3f9e8f]
adc eax, 0xb287233f
enter 0x4e41, 0xa
imul esp, dword [rbx], 0x2f060d5
movabs dword [0xb02ee9bf2427df23], eax
pop rsi
and al, 0xc7
adc bl, byte [rsp + rbx - 0x5b53ff9c]
push rbx
fld qword [rip + 0x255f1872]
adc esi, ecx
xchg eax, edi
add eax, 0x702f047f
sahf
in al, dx
or al, 0x19
push 2
mov bl, 0x76
and dword [rdi + 0x66a79817], edi
jae 0x4040ee
nop
add byte [rax], bh
and eax, 0x760c835b
jb 0x4040e3
xor eax, 0x50984782
nop
mov esp, 0x26c14d90
xchg eax, edi
test byte [rdx - 0x62], 0xbd
add ah, byte [rdi]
cmpsd dword [rsi], dword ptr [rdi]
outsb dx, byte [rsi]
sub eax, 0x6412f27
cmp dword [rcx - 0x13], edi
sub eax, 0x4f27b47
pop rsi
enter 0x67ac, -0x4d
lahf
jae 0x404168
enter 0x17b3, 0x2f
sub byte [rdi + 0x28992f75], ah
add ebp, dword fs:[rsi]
adc byte [rdi - 0x42efd84d], ch
nop
scasd eax, dword [edi]
shr byte [rax], 0x77
add dword [rcx + 8], edi
sub dword [rsi], eax
in al, 9
out dx, eax
jo 0x40416d
sub dword [rdi - 0x38], ebx
mov bl, 0x43
jb 0x404188
jo 0x404161
push 0x4b
enter 0x2c0b, 0x5e
cmpsd dword [rsi], dword ptr [rdi]
sub edi, ecx
xor dword [rdx], ebp
repne lodsb al, byte [rsi]
jnp 0x404174
cmp qword [eax - 0x5cfd0ea0], rsi
sub dh, byte [rdi]
jmp 0x404180
out 0x87, eax
in al, 0x8c
pop rsi
add al, 0x2b
fstp st(3), st(0)
sub al, 0x2b
pop r14
ja 0x4041e3
sub ebx, dword [rax - 0xd8dbe89]
in al, 0x20
xchg eax, ebp
sub ecx, dword [rdx - 0x42e6b3cb]
mov esp, 0x7f2bd52b
xor cl, al
test byte [rbx], bl
in al, dx
sub esi, dword [rdx]
cmp ah, byte [rdi]
iretd
jp 0x4041ac
mov edx, 0x2ff84f2c
and byte [rdi - 0x20df1b1c], al
sub al, 0xec
ljmp [rax + rax]
in al, 0x59
mov dword [rax + 0x67], 0xeb022d8e
test dword [rdi + rsi - 0x38d24b40], ecx
nop
int1
sti
sub eax, 0x14f8c9f
jg 0x4041f9
sahf
cmp al, 0x9e
adc al, 0x74
xchg eax, esi
in al, 0xc9
sub byte [rdi], ch
mov dh, 0x64
mov edi, 0xbc279046
nop
jae 0x404158
or word [rcx], r15w
add bh, byte [rdx + rbx*8 + 0x6e961f2f]
add cl, byte [rcx + 0x3006d817]
xlatb
xchg eax, ebp
xor byte [rdi], bl
adc byte [rax - 0x7f], bh
xor byte [rdi], bl
div byte [rax]
outsd dx, dword [rsi]
nop
xchg eax, ebx
xor dword [rdi - 0x26658827], r15d
or edi, dword [rcx + 0x72]
add dh, byte [rdx]
movabs al, byte [0xe4e41c9ea7322975]
mov byte [rbp + 0x3c], 0x62
xor ch, dh
in al, 0xc9
in eax, 0xe6
xor dl, byte [rsi + rbp + 0x2f6790bc]
and dh, byte [rbx]
insd dword [rdi], dx
xor esp, dword [rdi]
mov esp, 0x600f6790
or dword [rdi + r12*2], esi
in al, 0x19
mov ebp, 0x34367590
fist word [rcx + rdi*2 + 0x2f6790bd]
mov edx, 0x5b93a734
adc dh, byte [rip + 0x67243804]
or byte [r14 + 0x35], r14b
scasd eax, dword [rdi]
and cl, r8b
or dword [rdx + 0x35cebf35], esp
adc byte [rsi - 0x38], bl
adc ebp, dword [rdi + 0x35f97ab8]
jg 0x404250
add eax, 0x36192f12
mov esp, 0x3c9cef36
jns 0x404263
push 0x1e
add byte [rdi + rsi], bl
ja 0x40425d
add edi, dword [rax + 0x4c978e82]
sub esi, 0x57297216
adc dword [rdx], eax
sbb cl, byte [rdi + 0x23d9e42f]
lodsb al, byte [rsi]
xlatb
cli
sub al, 0xd8
sbb dword [rbp - 0x11709870], edi
jge 0x4042d7
fild word [rip - 0x3f1bd0ae]
mov bl, 0x94
cmp bh, cl
loopne 0x404230
cmp al, 0xe1
sar byte [rax], 0x4f
in al, dx
xor ebp, esp
cmp ah, ah
leave
enter -0x48cf, -0x32
xor esp, dword [rdx]
adc eax, 0x13a4f239
jb 0x40431e
jns 0x40430a
cmp dword [rdi], edx
add byte [rip + 0x17b3921d], bh
lea edi, [rcx]
xlatb
js 0x40426c
cmp dword [rax], eax
in al, 0x19
xor eax, ebp
cmp dword [rcx + 0x78e4271], eax
and edi, dword [r10]
mov esp, 0x3a507840
scasd eax, dword [rdi]
jo 0x404329
shl esp, 9
mov ebp, 0x3aa66e90
out dx, al
loope 0x404302
adc ch, byte [rdi]
cmp bl, byte [rdi]
xor byte [rbx], bh
add ecx, 0x8e343921
cmp ebp, dword [rdi]
and dword [rcx + 0x17c07663], eax
fsub dword [rdi + 0x3745d90b]
jmp 0xffffffffd13f5535
jp 0x4042e0
or edi, dword [rcx - 0x3a]
stc
cmp eax, dword [rdi + 0x3c2175ce]
popfq
and byte [rdi], r8b
pop rbx
cmp al, 0x79
cmp al, 0x9e
sahf
xlatb
pop rcx
movabs byte [0x42f1205e67c6073c], al
loop 0x404381
sub bh, byte [rip + 0x231c8c9e]
outsb dx, byte [rsi]
push rsp
mov al, 0x9b
cmp eax, 0x472391c8
jl 0x4043af
nop
add esp, edi
cmp eax, 0x13804642
and dword [rsi], edi
lea ebx, [rsi - 0x38]
pop rax
int1
push -0x67d930c2
jo 0x404373
add dword [rdi], ebx
scasd eax, dword [rdi]
ja 0x4043eb
add ah, byte [rcx]
pop rsi
sahf
int1
sahf
and ah, byte [rdi + 0x1a]
cmp byte [rdi + 0x5e], dl
and ch, dh
insd dword [rdi], dx
push rdi
stc
pushfq
pop rdx
enter 0x7fb3, 9
jae 0x40434a
push rdi
lahf
xor eax, 0xc840b32a
adc eax, esp
add al, 0xdd
cmp dword [rsi + 0x1dc9e464], eax
sub dword [rcx + 0x23], eax
ror dword [r11], 1
sbb dword [rbx], esp
cmpsd dword [rsi], dword ptr [rdi]
mov dh, 0xb2
jp 0x404345
fistp word [rsi]
push -0x361b1be5
xchg eax, ebx
add dword [rdi - 0x35d2dcbe], ebp
int1
sahf
sbb al, 0xfb
movabs byte [0x72720e211432b2e], al
cli
or al, byte [rcx]
mov dword [rax + 0x43c6c813], 0x849f43df
pop rbx
enter 0x3a93, 0x21
sbb eax, dword [rdi + rcx + 0x52]
movsxd rbx, dword [rsi - 0x38]
adc ebx, dword [rsi - 0x61]
push 0x118144c8
nop
out dx, eax
sahf
jno 0x404459
add dword [rbx], eax
out dx, eax
push rcx
xchg eax, ebx
xchg eax, ebx
stosd dword [rdi], eax
movabs r15, 0x6f0a4642c9e42f14
pop rsp
push rdx
jne 0x404463
xor dword [rdi], 0x1710b82c
add dword [rdi], ebp
mov al, 0x57
cmp byte [rdi - 0x71], al
xchg dword [rdi + 0x60], eax
jne 0x404483
mov fs, word [rdi]
ja 0x4044a6
enter 0x5e33, 0x42
mov dil, 0x1f
mov ds, word ds:[rsi + 0x18]
and eax, 0x27361782
fimul dword [rax + 0x18]
sbb al, 0x92
xchg eax, ebx
out 0x1c, eax
mov word [rdi], ss
push r15
mov dword [rax], esi
jp 0x4043f0
popfq
shl byte [rax + 0x49a80749], 0xd7
sbb al, 0x92
mov bl, 0x78
std
enter 0x5e13, 0x60
xchg dword [rcx + 0x4a], ebp
jg 0x4044ce
and byte [rdi], ah
iretd
pop rsi
mov esp, 0x4d1c774a
xor esp, dword [rax]
or esp, esp
mov r15b, 0x7a
and edi, ecx
insd dword [rdi], dx
xlatb
enter -0x6087, 0x4b
sahf
ror byte [rcx], 0xc
int 0x4b
push rdi
scasb al, byte [rdi]
imul edx, dword [rax + 0x1642f067], 0x4c
cmpsd dword [rsi], dword ptr [rdi]
mov ah, 0x3c
rcr byte [rsi + 0x20], 0xbc
scasq rax, qword [rdi]
mov dl, 0x4c
cmpsd dword [rsi], dword ptr [rdi]
in al, 0x59
mov esp, 0x8b74ccc
hlt
push rdx
in al, 0x59
jg 0x404523
cmp eax, 0x79874d23
ret 0x790b
sub al, 0x42
out 0x53, al
or edi, dword [rcx - 0x3e]
or ebp, dword [rbp + 0x33b4f74d]
sbb al, 0xe4
in al, 0xd9
fisttp dword [rbp - 0x59]
mov ebp, dword [rdi + rbp*2]
xor ecx, dword [rsi + 9]
add al, 0x78
or dword [rbx + 0x4e], 0x720c52c7
mov word [rsi - 0x79], cs
pop rax
xor dword [rbp + 2], 0xf54ed079
xchg eax, ebx
iretd
js 0x40455b
out 0xde, eax
pop rbx
pop rbp
add edx, esi
test byte [rdi], dl
enter 0x4fd7, 0x23
push rax
fistp qword [rip + 0x3c9e425e]
jns 0x404514
add al, ch
push rax
adc byte [rsi - 0x70], ah
js 0x4044b9
int1
and byte [rcx - 1], dl
push rcx
xchg eax, edi
mov ss, word [rcx + 0x2f]
rcl byte [rcx + 0x3f], 0x56
pop rdx
nop
loopne 0x40459e
xlatb
sbb al, 0x52
nop
loop 0x4044d8
mov word [rdi - 0x38ad80f9], ds
mov byte [rdi], dl
or byte [rdi], ah
rcl byte [rdx + 0x67], 0xe
push rbx
nop
pushfq
xchg dword [rbx + 0x442c0753], ebx
in al, 0x59
mov esp, 0xb6ff5403
pop rdx
sbb dword [rax + rdx*8 + 0xb], edx
jns 0x4045c1
scasd eax, dword [rdi]
xchg eax, esp
movsxd rdi, dword [rdx + 0x54]
enter -0x6e6d, 0x23
mov edi, 0xbc35d3b
push rbp
add ah, byte [rbx + 0x366cc85e]
push rbp
psrad mm4, 8
jne 0x4045f8
push rbp
cwde
xor byte [rbx + 1], dl
sahf
je 0x4045a2
cmp dword [rsi + 0x2f55b555], ecx
push rdx
insd dword [rdi], dx
in al, 0x48
cmc
add dword [rsi - 0x29], edx
add al, byte [rsi - 0x7c]
sbb al, 0x39
jb 0x404552
add eax, dword [rdi + 0x79499e56]
and dword [rdi - 0x20], ecx
retf 0x5701
fdiv dword [rcx + rbp*8 - 0xf61bdaa]
add al, byte [rdi]
push rdi
rcr byte [rbx - 0x7d], 1
adc ebx, dword [rax]
int1
push rbx
push rdi
jns 0x40462f
pop rdi
loopne 0x4045e0
test byte [rdx], 0xa2
push rdi
pop rdi
in eax, dx
push rdi
pop rax
mov al, 0xc7
sbb byte [rax - 9], bl
push rcx
jmp 0x404572
cmp al, 0xa9
pop rax
iretd
pop rdi
mov edx, 0xe0b00758
test dword [rdx + rbp*8], edi
insb byte [rdi], dx
pop rcx
and dword [rdi], eax
pop rcx
push rdi
mov dl, byte [rbp - 0x28]
and dword [rcx], edi
cmp esp, dword [rdx]
pop rdx
jl 0x40466a
pop rdx
and al, 0xe
jbe 0x40462f
pushfq
pop rdx
jb 0x404611
in eax, 0x2b
cmpsd dword [rsi], dword ptr [rdi]
pop rdx
in al, 0x49
mov esp, 0x1ec75ac1
insd dword [rdi], dx
adc dword [rbx + 0xb], ebx
sub al, 0x5e
sub ebx, dword [rbx + 0xf]
fcom dword [rax + 0x5b44c59c]
iretd
xchg eax, edx
ror dword [rbx], 1
cmp dword [rax + 0x775bc664], ebp
test byte [rsi + 0xc], cl
pop rsp
pop rdi
jb 0x4046b9
pop rax
pushfq
movabs al, byte [0x17ac0bef5cc25f5c]
xor ch, byte [rdx - 0x26]
pop rsp
fbld tbyte [rdx + 0x1ec67921]
pop rbp
push rdi
sub eax, 0x9c95d2c
pushfq
xchg eax, ebp
pop rbp
xchg dword [rdx + 0xe8c0bc1], ebx
pop rbp
jg 0x404669
pop rbp
in al, 0x13
and byte [rdi - 0x5f38a1c7], r12b
mov word [rsi + 0x20], ds
sbb dword [rsi - 0x61], 0x23911f5e
or ebx, esi
pop rsi
ljmp [rsi]
insd dword [rdi], dx
push rax
enter 0x2393, 0x2e
pop rdi
pop rdi
test eax, 0x7f8c9c9e
lodsb al, byte [rsi]
loopne 0x4046c1
and byte [rbx + 0x566a1c8c], al
test byte [rsi - 0x5d], cl
xlatb
fdisi8087_nop
nop
test al, 0x60
lahf
or esp, dword [rcx - 0x51]
adc ebx, dword [rax - 0x10]
add dh, byte [rbp + 0x61]
jg 0x404681
add dword [rdi + 0x7761a1e4], esp
sbb dh, byte [rbp + 0x4ec0bc61]
iretd
sti
cmpsd dword [rsi], dword ptr [rdi]
adc eax, 0xc85e0962
iretd
sub al, 0x1e
sahf
mov word [rsp], ds
imul ebp, edx, 0x243962b1
pushfq
push rsi
movsxd rbp, dword [rdi - 0x379c8810]
or ah, dh
add ch, bl
movsxd rax, dword [rdi - 0x36]
or ebp, dword [rsi + rbx*2 + 0x7d77642a]
mov al, 0xd2
sahf
lahf
sbb eax, 0x4e5f2739
and byte [rdi + rbp], al
mov ebx, 0x65648f64
jo 0x40472a
add dword [rdi - 0x55], esp
or ecx, dword [rsi + rbx*2 + 0x226765d6]
enter 0x78b3, -0x7f
xlatb
test byte [rsi - 0x31], ah
out 0x62, al
jl 0x404702
retf -0x1ba2
cmpsw word [rsi], word ptr [rdi]
pcmpgtd mm2, qword [rax + 0x67817167]
mov bh, 0xd6
jns 0x4047a1
pop rsi
mov ebp, 0x7fc76735
push rbp
adc bh, byte [rcx + rdi*2]
and eax, edx
and byte [edx + 0x47], 0xc0
or ebp, dword [rbx + rdx + 0x33af6819]
push -0x7e84fd0b
outsd dx, dword [rsi]
fisubr dword [rax + 0x77]
and al, 0x69
xor byte [rsi - 0x38], cl
or dword [rdi - 0x30968aa7], ebp
mov ss, word [rdi + rbp]
fild qword [rcx + 0x7f]
iretd
jo 0x4047c5
add cl, byte [rsi - 0x38]
xchg eax, ecx
and edi, dword [rdx + rbp*2 - 0x72]
imul eax, esp, 0x6a
add al, 0x7a
and edi, ecx
cmpsd dword [rsi], dword ptr [rdi]
imul esp, dword [rdi + 0x7232791c], 0x26
push rsp
jle 0x404814
or ebx, dword [rbx - 0x64]
sahf
mov word [rax - 0x32], cs
imul esp, edi, 0x6b
in al, dx
add al, 0x42
iretd
or al, 0x6c
cmp eax, 0x720cd536
xor eax, 0xac9f1249
sub dword [rax], ebp
and byte [rdi - 0x2c], cl
add dword [rbx], edi
js 0x404752
jne 0x40481d
lahf
insb byte [rdi], dx
fistp word [rsi + 0x274186c]
sub dword [rdi - 0x40e09320], esi
shl byte [rdx - 0x289251ed], 0x63
jb 0x40485f
jae 0x404790
std
pop rdi
cli
je 0x404867
push ax
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
or eax, ebp
ljmp [rbp + 0x676572bd]
imul ebx, dword [rdx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x404838
outsd dx, dword fs:[rsi]
in eax, dx
in eax, dx
outsd dx, dword [rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x404888
jne 0x4048a4
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x40482f
add bh, bl
fld xword [rbp + 0x29]
xor eax, 0x5f243538
imul bp, word [rsi + 0x69], 0x6edf
fisttp word [rax]
jb 0x4048bc
jns 0x4048ac
outsb dx, byte gs:[rsi]
je 0x4048c3
jns 0x404853
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x40481f
mov edx, 0xd327301
pop rdi
sub dword [rdx + rbp - 0x13], esi
fld xword [rbp + 0x42]
pushfq
jo 0x4048de
and al, 0x5a
push rbx
je 0x4048bf
xor dword [rcx], edi
jo 0x4048e0
movsxd rsp, dword gs:[rbp + 0x77]
cdq
jbe 0x404874
insd dword [rdi], dx
imul ebp, dword [rip + 0x729f6e77], 0x75
movsxd rsi, dword [rdx + rbx + 0x38]
fstp st(2)
out dx, eax
imul ebp, dword [rdi + 0x3b], 0x847f3329
movsxd rsp, dword [rcx - 0x23]
div byte [rbx + 0x674c81ce]
adc al, 0x36
imul esp, dword [rdi + 0x6e], 0x5a0c650f
lodsd eax, dword [rsi]
popfq
std
push qword [rip + 0x766c6f73]
xor eax, 0x31787863
xor dword [rcx], ebp
pop r14
insd dword [rdi], dx
xlatb
call qword [rax + 0x52]
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
adc byte [rip - 0x11f9cecc], r13b
jbe 0x404945
imul ecx, dword [rbx + 0x69], 0x63
popfq
imul ebx, dword [rdx + 0x69], 0xd9be0d7a
jbe 0x404953
sbb byte [rdx + 0x6e], 0x64
mov dh, 0x65
xchg dword [rdi], ecx
xor byte [rsi - 0x11], ch
xor r14b, byte [rbp + 0x62]
pop rdi
pop rdx
cmp dword [rcx - 0x4e], esp
shr byte [rdi], 1
outsb dx, byte [rsi]
xor dword [rdi + 0x63], ebp
outsb dx, byte [rsi]
leave
out dx, eax
inc dword [rsi + 0x52]
pop r15
movsxd r15, dword [rbx + rcx + 0x27]
jnp 0x4048d3
in eax, 0x47
push rbp
and byte [rax + 0x44], cl
push rdx
push rdx
adc r8d, edx
sti
fild dword [rsi + 0x53]
sahf
pop rdi
push rsp
sub byte [r11], r13b
in eax, dx
xchg byte [rsi + 0x61], ch
adc byte [rax + 0x59440c72], dh
mov r14b, 0xbd
cmp eax, 0x4349c2
xor al, 0x6d
outsd dx, dword [rsi]
push r10
or qword [rdi], r14
sub ah, dh
fadd st(2), st(0)
mov cl, 0x89
xor dword [rdx], esi
cmpsd dword [rsi], dword ptr [rdi]
jae 0x40493c
sar dword [rdx], 0x6b
xchg byte [rdi + 0x634967f6], dh
sbb dword [rdx], edx
movsxd rbp, dword [rax + 0x61]
cmc
push r15
jo 0x404968
insd dword [rdi], dx
jae 0x40498d
push r11
add al, 0
or bl, byte [rbx]
in eax, dx
fdivr dword [rsi + 0x423c3642]
pop rdi
and byte [rsi + 0x63], ch
lodsb al, byte [rsi]
mov al, 0xfd
lodsd eax, dword [rsi]
mov word [rbp + 0x34], es
je 0x404a14
jo 0x404a02
push rbx
and dword [rbp + rdi*8 + 0x6f], 0x633376ad
out dx, al
mov al, 0x49
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0xb7
outsd dx, dword [rsi]
rcl eax, 0x15
pop rax
jp 0x404a31
jae 0x4049f3
or dword [rdi + 0x70], ebp
or bh, byte [rdi]
fnsave dword [rbx + 0x31]
imul ebx, dword [rbp + 0x3d], 0xec20765f
jmp 0x4049b0
cli
push rbx
xor byte [rdi + 0x15], bl
adc al, 0x4e
jae 0x404a4f
movsxd rdi, dword [rbx + 0x6f]
cmp r10d, dword [r11 + 0x136475f2]
insd dword [rdi], dx
mov ebx, 0x496a3bed
insd dword [rdi], dx
xor byte [rbp - 0x3c], al
xchg rax, r13
xor bl, byte [r14 + 0xd8ed31]
loope 0x404a73
int 0x8c
xor dh, byte [rdx]
xlatb
ret 0x6e75
mov ah, 0xa4
jo 0x404a7d
sbb ebx, dword [rdi]
mov ch, 0xd3
push rsp
xor ecx, edx
and ax, 0x7b49
mov bh, 0xb5
xchg byte [rax + 0x1f], dl
jo 0x404a15
or byte [rcx + 0x59], ch
push rbx
xor ebx, dword [rdi + 0x53]
cmp bl, byte [rbx - 0x45]
mov ch, 0x42
push -0x6d
loopne 0x404a84
add bl, byte ss:[rax + 0x6d85b552]
or eax, 0x456c5408
int 0x44
insb byte [rdi], dx
xor ch, byte [rsi]
sbb byte [rdi + 0x5f], dh
push 0x49
cmp dword [r13 + 0x78], ebp
outsb dx, byte [rsi]
xor ah, byte [rcx + 0x46034b49]
jbe 0x404aa5
ret 0xcce7
mov ebp, 0x4f704450
pop rax
lahf
jne 0x404ad4
sub eax, 0x64dcdb46
wait
cmpsd dword [rsi], dword ptr [rdi]
jae 0x4049f8
iretd
lodsb al, byte [rsi]
insb byte [rdi], dx
jo 0x404a19
cmpsb byte [rsi], byte ptr [rdi]
sbb eax, 0x7c058186
iretd
insd dword [rdi], dx
insd dword [rdi], dx
fild dword [rdx]
imul edi, dword [rsi - 0x3b], 0xa
cmp al, 0x63
or al, 0x87
mov bh, 0x8d
xchg eax, esi
xor al, 0xc2
add eax, 0x4ada6ac9
cwde
rol bh, 1
xchg byte [rax - 0x60], dh
test eax, 0xf0e1ac39
test dword [rdi + 0x22856931], ebx
lodsb al, byte [rsi]
insd dword [rdi], dx
scasd eax, dword [rdi]
outsd dx, dword [rsi]
nop
outsd dx, dword es:[rsi]
xor edx, dword [rbp - 0x64ff4f3f]
insb byte [rdi], dx
xchg eax, esi
cmp dword [rcx], 0x15
fdiv qword [rsi + 0x39]
xor byte [rax + rbp*2 - 0x68], dh
ja 0x404ae8
xor al, 0xb6
test eax, 0x53f50009
push rax
push 0x7b6531cd
xchg rax, r11
lea edi, [rax - 0x28c3993d]
xchg eax, edi
test dword [rdx - 0x2b], edx
xchg eax, edx
push 0x316dde31
imul edi, dword [rbp + 0x38], 0x8c79656b
imul eax, ecx, 0xe140af0a
xor dword [rax], esi
mov ch, 0x19
movsd dword [rdi], dword ptr [rsi]
sbb dword [rip - 0x1fafffb5], ecx
insd dword [rdi], dx
scasd eax, dword [rdi]
or dword [rbp - 0x27], ebp
imul edx, ebx, 0x65416252
push rax
mov ah, 0x62
xor al, 0xba
xchg eax, edi
xor dword [rbx + 0x65], edx
insb byte [rdi], dx
std
xor dword [rax], ebx
adc byte [rbp - 0x11], ah
mov edx, 0x31442191
add dword [rbp - 0x7a], 0xb64616bd
adc qword [r10 - 0x3f], r9
insd dword [rdi], dx
cli
retf
cmp eax, 0x4a493143
push rdx
push 0x45
hlt
mov r15b, 0x16
movabs al, byte [0xb70e743518745031]
ror dword [rsi + 0x70], 1
sub ebp, dword [rbx - 0x4e00b1ac]
sub ch, bl
or dh, byte [rdi]
pushfq
scasb al, byte [rdi]
loopne 0x404bb0
and dword [rbp + 0x6d], ecx
sub al, 0x45
xchg eax, esp
int3
xlatb
lodsd eax, dword [rsi]
mov dl, 0x4b
lea edi, [rcx + 0x6c448d31]
fsubr st(1)
in al, 0xbe
mov cl, byte [rcx - 0x71]
mov al, 0x9e
fisub word [rdx + 0x61]
pop rdi
cmp ecx, dword [rdx + 0x4f]
loopne 0x404bb9
pop rbp
pop rdi
cmp dh, byte [rcx]
mov cl, 0x31
retf
outsb dx, byte [rsi]
jl 0x404b4d
outsd dx, dword [rsi]
jns 0x404b35
push 0x75
or esp, dword [rbp + 0x3d]
out 0x5e, eax
mov eax, 0xf1518cfa
add byte [rax], dl
fidivr dword [rbx - 0x45]
push rbx
pop rdi
cwde
nop
outsb dx, byte [rsi]
ret
lea edx, [rax + 0x4b]
fdivr qword [rax]
pop rdi
pop rbp
sbb eax, edi
sbb ch, byte [rbp + 0x6637b365]
mov esi, dword [rdi + 0x35]
sub r14, -0x7ae3f7f5
clc
push rdx
stosb byte [rdi], al
xor byte [rcx - 0x5497fd2d], al
jrcxz 0x404bec
xchg eax, ecx
sbb dword [rax + rbp*2 + 0x5e93bd6], ebx
xchg dword [rcx + rbp + 0x5b], ebp
jae 0x404c1f
imul edx, dword [rsi + 0x77], 0x4023024b
xchg eax, edx
movsxd rbp, dword [rbx - 0x77]
or byte [rdx + 0x415318ac], bl
mov byte [rax], dl
fcomp st(0)
jb 0x404c35
xchg eax, edx
imul rdx, qword [r14 + 0x61], 0x32
xor dh, byte [rbx]
xor ecx, dword [rax]
xchg dword [rcx + rbx + 0x10138c81], ecx
pop rcx
adc eax, 0xac30b621
push rsi
xchg eax, r13d
sahf
cmpsd dword [rsi], dword ptr [rdi]
sbb dword [rax], 0x133231cb
fdivr st(6), st(0)
ficomp dword [rcx]
jae 0x404c93
or byte [rip + 0x56553f52], 0xb2
and al, 0xf
fdiv qword [rdi]
movsb byte [rdi], byte ptr [rsi]
xchg eax, ebp
adc eax, 0x4bc0f012
fadd dword [rdi]
int 0xc1
adc dword [rax + 0x2c2e0dc9], 0x6d42d0ac
loope 0x404ca2
mov ebx, 0x5d98cb32
cmp byte [rbp + 0x787264bb], bh
xchg eax, edx
mov dword [rbp + 0x3b32229d], ecx
jge 0x404c83
fdivr qword [rip - 0x659dd04a]
cmp eax, 0x381d78b9
push rsp
or dword [rip + 0x45a8456a], 0x636284bb
xchg eax, ecx
jrcxz 0x404c4a
add ebx, dword [rbx + 0x49]
out dx, eax
movsd dword [rdi], dword ptr [rsi]
cmc
lea ebx, [rcx + 0x234e0420]
pop rsi
leave
sal byte [r11 + 0x32], cl
mul dword [rsi]
ret 0x36d3
outsb dx, byte [rsi]
insd dword [rdi], dx
fild qword [rax + 0x4d]
sbb byte [rip - 0x76d12096], cl
and dword [rax + 0x3466c289], edi
movabs eax, dword [0x2358b8b2014739db]
adc dword [rax + 0x6db8b601], esi
mov ah, 0x73
test byte [rsi - 0x326e6a4a], ah
xlatb
outsb dx, byte [rsi]
test dword [rdx], edx
xchg eax, esi
shl dword [rax], -0x70
fistp dword [rsi + 0x2a]
cmp esp, dword [rsp + rbp*4]
jle 0x404ce9
and eax, dword [rdi + 0x23]
mov word [rsi], cs
add al, 0xd
nop
enter 0x30e8, 0x49
pop rsi
xor byte [rbx], dl
jnp 0x404d0a
pop rsi
push -0x56d4f68c
xor eax, 0x85e24fa
pop rax
mov eax, 0x38d048c8
cli
js 0x404c82
xor eax, 0x58af5473
adc al, 2
xchg dword [rip + 0x501a0369], ebp
in eax, 7
movabs rsp, 0x1d48a3c284ac2b05
popfq
jbe 0x404cbf
add ch, byte ss:[rbx - 0x35]
jbe 0x404d65
and dword [rdi + 0x66], ebx
cld
jns 0x404ce9
adc al, 0x52
or byte [rdx + 0x4f], dh
jno 0x404cd3
xor byte [rax - 0x1b86cee4], bl
mov byte [rsi + 0x3d4a1e8c], ah
and eax, 0x6532eaac
retf -0x292f
sar byte [rbp - 0x3a973a60], 0x81
adc dword [rcx - 4], ebx
or dword [rcx + 0x75], esi
imul ebp, dword [rdi + 0x858c65b], 0x7a
xor ah, byte [rbx + rcx*2]
shr byte [rsi + rdx], 0x16
lea esi, [rdx - 0x70]
rol byte [rsi + rcx*4 + 0x24308463], 0x66
in eax, 0x12
pop rbx
mov ah, 0x6d
push 0x54242c2c
xor dl, byte [rdx - 0x5db8bbb6]
nop
je 0x404d71
xor dl, bl
and dword [rdx], edx
cwde
jne 0x404dd8
push rbx
out 0x60, eax
imul ecx, dword [rcx], 4
pop rbx
sahf
int 0x6e
push rax
fadd dword [rcx]
xor dword [rdx + 0xc764af1], esp
and ch, byte [rbp - 0x13]
pop rcx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rcx
retf
jae 0x404d2c
sub dword [0xffffffffc37a4bb2], esp
int1
xchg eax, esi
mov cl, 0x22
mov ch, bh
ret
jo 0x404dff
sbb byte [rdx + rcx], 0x15
sbb cl, byte [rdx - 0x18]
mov ch, 0x64
insb byte [rdi], dx
push rax
jbe 0x404de0
test byte [rax + 0x3c], bl
loopne 0x404df2
in eax, dx
mov dl, 0xb
jmp 0x54b675fe
popfq
test byte [rdx + 0x12ee465a], dl
sbb al, 0xc
mov bl, 0x68
push rcx
sbb al, 0x9e
sub dword [rbp + 0xf], -0x4a
xor eax, 0x6c72669a
retf
pop rdi
xor ch, byte [rsi]
add dword [rip + 0x21327384], esi
test dword [rcx + 0x31], 0x2235baf
stosd dword [rdi], eax
jns 0x404e11
imul ecx, dword [rdx], -0x30
rol byte [rax], 0xb1
mov esp, 0x2111aeaa
int1
xor al, 0x62
mov ds, word [rsi + 0x14]
or eax, 0x6d2e39c9
imul edi, dword [rcx], 0x41707b20
xor bpl, byte [rdi + r14*4 + 0x7705dc8c]
cmpsd dword [rsi], dword ptr [rdi]
and bh, byte [rdx + rax*4]
rcl byte [rax], 1
pop rdi
shr byte [rbx + 0x7d], 0x41
lodsb al, byte [rsi]
and al, 0xcd
movabs al, byte [0x38618c3d70270a00]
cmpsb byte [rsi], byte ptr [rdi]
and byte [rax - 0x77], dh
cmp ebp, dword [rsi + 0x41]
xor rax, 0x53b332e
movabs al, byte [0x52114934d0e169c1]
xchg byte [rcx + 0x7c96a6ff], ah
in al, dx
or eax, 0xbc284929
xchg eax, esp
scasd eax, dword [rdi]
in al, 0x30
sal byte [rax + rbp*2 + 0xc1252e2], 0x99
add byte [rbx - 0x69], al
in al, 0x43
mov esp, 0x33c92b54
xor al, 0xda
xor byte [rdx - 0x7c], al
mov esi, 0x78656d66
pop rax
or byte [rbp - 0x88f54a8], cl
push 0x4e656713
pop rsi
xor dword [rip + 0x4a304835], edi
add bh, dl
push rdx
mov dword [rax], 0xc7652142
out 0xc3, eax
xor eax, 0xb322e840
pop rdi
std
or byte [rbp + rbp + 0x64cc3426], dh
stosd dword [rdi], eax
loop 0x404e57
cli
cmp byte [rax], dh
pop rdi
fstp qword [rsi - 0xbbbb2bf]
xchg eax, esi
movsd dword [rdi], dword ptr [rsi]
and dword [rcx + 0x3b20b425], esi
cmp rax, rdx
nop
fiadd word [rax]
mov ebp, edi
push rdi
xchg eax, edi
mov cl, 0x64
movabs byte [0x6b06b30eb4482d31], al
mov ecx, 0xc9008883
jp 0x404eec
xor byte [rip + 0xa32348b], ah
sar dword [rsi], 1
movsxd rbx, esp
mov esp, 0x645c9877
imul eax, dword [rbp + rbx - 0x59], 0x3d981088
movabs eax, dword [0x5145e33b2d307c63]
imul r12, qword [rbp + 0x35861313], 0x4af14377
xor al, 0x20
cmpsd dword [rsi], dword ptr [rdi]
xor bh, byte [rax + 0x41673143]
fcom dword [rsi + 0x6c8bdba0]
cmp dh, byte [rdx + 0x1c]
cmp esi, dword [rdx]
cmp dh, byte [rsi + 0x4d522049]
push rdx
mov esi, 0x64d26d58
and dword [rsi - 0x39ce5cc1], ebx
mov byte [rax], al
adc eax, dword [rdx + 0x10]
mov ch, 0xad
adc dword fs:[rbx + 0x6edc6d77], 0xe03344c2
ja 0x404f31
mov ecx, 0xc61a0900
push rcx
adc dl, byte [rcx + 0x7f57525a]
xchg rax, rsp
cmp eax, 0xa1411460
insd dword [rdi], dx
sbb dword [rbx - 0x14], ecx
shl byte [rbx], 1
pop rcx
test byte [rax], dh
push -0x6f
in eax, 0x40
sub byte ss:[rbp + 0x4e], ah
sub al, 0x30
int3
sbb byte [rcx - 0x70], cl
sbb byte [rbx], 0x14
mov dl, 0x86
xor ch, byte [rax + 0x3f]
xor eax, 0x890a6476
cmp byte gs:[rdi], dh
js 0x404fc5
mov dl, 0xe0
test dword [rip + 0x296d6d16], esp
mov dh, 0x95
adc al, 0xd7
xlatb
test ebx, eax
mov ch, 0xd8
push rsi
add eax, 0xc7312a01
enter -0x38df, 0x49
push rdx
scasb al, byte [rdi]
or eax, dword [rbp + 0x241e1106]
sbb cl, byte [rdi]
jno 0x404f58
and al, 0x58
jae 0x404f90
and ecx, esi
fldenv [rbx + 0x70320df5]
and byte [rbx - 0x3844fd28], ah
adc edi, ebx
and eax, 0x5ffc33e4
jo 0x40503a
jae 0x40502f
fmul qword [rdx + 0x455cc830]
or byte [rbp + 0x4b], al
or dword cs:[rax + 0x34], 0xffffffa0
enter 0x2065, -0x6a
and byte [rcx - 0x22b818d4], bl
and ch, byte [rbp + 0x5d]
mov ah, 0x4a
cmpsb byte [rsi], byte ptr [rdi]
sbb byte [r9], r14b
test al, 0x45
sub eax, 0x4a165a20
push rax
mov ecx, 0x18461318
jnp 0x404ffe
cmp al, 0x1a
adc dword [rbx], eax
shl byte [rax + 0xc], 0x92
cmp byte [rsp + rbp*8 + 0x1818d05a], ch
xchg eax, ebp
xchg eax, esp
lodsb al, byte [rsi]
sub esi, dword [rcx]
or al, 0xcc
or dword [rbp - 0xb0857b6], esi
rol dl, 0xa
insb byte [rdi], dx
or dword [rdx], 0xb2d8234d
mov gs, word [rsp + rdx*2 + 0x5986b670]
and dword [rax + rax], ebx
sub dword [rsi + 0x27], ecx
cmp eax, 0x5718b026
loope 0x405078
imul ebp, dword [rax], 0x18
mov eax, 0xc2d33078
movabs byte [0x563c84c8cc14e895], al
cmp cl, byte [rdx + 0x45]
adc rsi, qword [rdx - 0x7c]
or al, 0x4a
movabs qword [0x4c76ea776e207a96], rax
add dword [rsi + 5], r8d
loop 0x40506b
ja 0x40506a
mov word [rcx + rbp*2 + 0x2088fe78], es
add eax, dword [rcx + 0x64496601]
or al, 0x78
add ecx, dword [rcx + 0x75]
push 0x4902c849
movsd dword [rdi], dword ptr [rsi]
mov ebp, 0x181c9089
mov al, 0xf1
xor eax, dword [rax + 0x524d3303]
sbb eax, 0x3201358c
xor byte [rsi - 0x27], 0x49
pop rbx
adc byte [rbx - 0x4b50ffdf], ch
xchg eax, edi
add dh, 0x65
xor dh, al
pop rdi
outsd dx, dword [rsi]
insd dword [rdi], dx
jp 0x4050df
lodsb al, byte [rsi]
or esp, dword [rbx + 0x63]
mov edx, gs
pop rsi
cdq
push 0x40
xor ch, byte [rcx + rdi*2 - 0x66]
push rdi
vdivsd xmm12, xmm10, qword gs:[rdx]
xor al, 0x13
int 1
test al, 0x3b
cmp byte [rip + 0x8058461], bh
stosd dword [rdi], eax
and byte [rcx + rbp*4 + 0x62], al
or eax, 0x1252ea98
retf
or al, 0xe1
and byte [rcx - 0x67], cl
in al, 0
movsb byte [rdi], byte ptr [rsi]
mov bh, 0x49
pop rax
xchg eax, esp
xor dword [rbp - 0x79f27ba6], edi
or edi, dword [rax]
pop rcx
ret
jae 0x405159
add dword [rax + 0x23], esp
push rbx
or dword [rdx], edx
pop rcx
imul ecx
jne 0x405164
movsxd rbx, dword [rip + 0x39006ca]
mov qword [r14 + r10*4 - 0x52ad7bff], rax
adc byte [rcx], ah
jo 0x4050c4
jb 0x40515e
or byte [rbx - 0x5f53c6e7], r12b
shl byte [rax + 0x68], 1
mov bh, 0x12
ficomp dword [rbp - 0x3f]
xchg eax, esi
or al, 0x43
adc byte [rcx + 0x62], dl
and al, 0x64
or byte [rcx], cl
mov ecx, 0x9a305c
test eax, 0xa20ab344
jae 0x405190
xor byte [rbx - 0x53], 0x6d
adc eax, 0x65c97d7e
mov word [rdx + 0x5a], cs
xlatb
or ebx, esi
sub edx, dword [rbx]
mov cl, 0xa6
loop 0x405138
test byte [rbp - 0x2f], ah
sub byte [rbp + 0x621231c6], ch
adc eax, 0x95d2a160
pop rsi
call 0xffffffffcca48a25
pop rsp
or ebx, ebp
outsd dx, dword [rsi]
pop rax
mov edi, 0x40acd470
mov byte [rax + rbp], al
wait
and byte [rax - 0x76], dl
xchg dword [rsi + rbp*4 + 0x3a], edx
lodsb al, byte [rsi]
wait
imul ebx, dword [rdx + rax - 0x197a3b1c], 0x8fda2034
pop rdx
jne 0x4051ae
ja 0x405175
outsd dx, dword [rsi]
jne 0x40517e
pop rcx
xchg eax, ecx
and al, 0x2b
xor al, 0x89
ror byte [rcx + 0x14], cl
stosd dword [rdi], eax
lodsb al, byte [rsi]
cmp al, dl
and dword [rax], 0x4c
xchg eax, ebp
add byte [rbx + 0x68], cl
mov ah, 0xa9
xor byte [rdx + 0x61], al
xchg eax, ecx
sub edi, dword [rbx + rbp*8 + 0x310125ab]
mov esi, 0xa422a0a
rol dword [rip - 0x77689be2], 0x53
test byte [rip + 0x1481c54f], dl
scasb al, byte [rdi]
sbb eax, 0x7d045a25
or esi, dword [rcx]
or al, 0x4a
out 0x36, al
xor dl, byte [rdx - 0x7b]
and al, 0x49
scasd eax, dword [rdi]
sal byte [rbx - 0x2c], 1
add esi, edi
sub al, 0x65
test dword [rip + 0x2e5d70cc], edx
jb 0x4051cf
or eax, dword [rsi]
push rax
insd dword [rdi], dx
pop rbx
imul eax, dword [rcx - 0x77908e0b], 0x4d
sub esp, dword [rsi + 0x10]
fstp qword [rax]
cmc
add dword [rcx], eax
sal dword [rdi - 0x4d], -0x74
xor edx, dword [rax]
jo 0x4051aa
retf
pop rdi
adc byte [rcx], al
add ebx, dword [rsi + 9]
jmp 0x405243
loopne 0x4051fd
wait
pop rcx
in eax, 0x3a
push rdx
add al, 0x60
test dword [rbp - 0x37], eax
mov bh, 0x75
mov al, 0x19
and dword [rax + rbx*4], 0x36af3183
add eax, 0x7470c3a1
mov ebp, 0x77464548
mov byte [rax], ch
add al, 0x56
sbb byte [rbp + 0x19], dh
add byte [rip + 0x5344e409], 0x96
sbb al, 0x24
rdtsc
add byte [rsi], sil
xor bl, byte [rax + 0x1215081c]
xor al, byte [rdx - 0x71fcd4a9]
test al, 0x5e
xchg eax, ecx
add edx, dword [r13*2 - 0x26ff399d]
add bl, byte [rdi + 0x33]
pop rax
rol byte [rax + 4], cl
add al, byte [rbp + 0x96a3039]
push rbp
xor ebx, eax
test dword [rip + 0x49e31392], edx
or r8b, r8b
sbb dword [rdx + 0x480c004f], 0x6a
mov al, 0x48
xchg rax, rbp
and al, 0x70
or byte [rbx], cl
mov dl, 0x6d
and cl, byte [rcx - 0x30]
test eax, 0x15e78048
xor byte [r8 - 0x80], cl
fdiv dword [r8 + 0xa]
mov bh, byte [rdi + 0x8666f7a]
pop rsp
jmp 0x314085d8
xor ah, dl
fild dword [rax]
or dword [rcx + 0x76], ebp
outsd dx, dword [rsi]
je 0x405346
add byte ds:[rbx - 0x5e], 0xf
std
xor al, byte [rbp + 6]
nop
cld
jmp 0x369b76ee
test al, 0xd2
push rcx
xor rax, 0xffffffffea9970f7
push 0x27317e55
test byte [rax], r10b
pop rbp
and ebp, edx
or byte [rax + 0x6d81652], dl
mov ecx, 0x49e400e4
xor spl, byte [r13 - 0x30]
or byte [rbp + 0x4a], ch
ror byte [rax + 0x20], cl
adc dl, ch
idiv byte [rcx + 0x4ac91824]
pop rax
xor dword [rcx], eax
rcl byte [rcx - 0x74cf57d6], cl
movsb byte [rdi], byte ptr [rsi]
mov word [r14 + 0x38c0a672], fs
mov al, 0x57
cmp dword [rip - 0x6f9726b7], -0x6f
xor dword [rdi], 0xbde84437
loop 0x4052f3
xchg eax, edi
and r15d, dword [rbx + 0x1224782b]
adc ah, byte [rdx - 0x6ed9c651]
or byte [rbp + 0xa], dh
add r10b, byte [r8]
movabs byte [0x6c3566c548468d0a], al
leave
movabs al, byte [0xd81a0b53b3981614]
mov al, 0xfa
fcom st(1)
mov al, 0x21
movsxd rbp, dword [rdx]
xor al, 0x8c
push rdx
jnp 0x40532a
test byte [rsi + 0x285412ce], dl
adc al, 0x2f
mov dh, 0xeb
xchg eax, edx
add al, byte [rsp + rcx*4]
int3
xchg eax, ebx
pop rax
ret 0x5028
add al, 8
adc eax, 0x692d5a92
and dword [rbx + rdx + 0x53c36c63], ecx
pop rdi
mov ebx, 0x1032320b
movabs al, byte [0x171657b546962e1]
pop rdx
and eax, 0x87116c6a
sbb ah, byte [rcx]
jnp 0x4053c9
add eax, dword [rdx - 0x7f]
jg 0x405437
or dword [rax], ebx
push rcx
push rsp
loope 0x4053d8
adc dl, byte [rax]
or bl, dl
sub rax, -0x33daf75d
js 0x405377
xchg eax, ebp
or al, 9
sbb dword [rdx], esi
add dword [rcx - 0x7d], 0x21654440
nop
add eax, 0xd04a445a
add al, 0x21
add eax, 0x91e16dd6
mov al, 0x83
and byte [rsi + 0x65], ch
xchg eax, ebp
add dword [rbx], ebp
pop rsp
sub dword [rax + 0x56], eax
sub byte [rcx + 0x1aa03239], cl
jo 0x4053d2
pop rdi
sti
movabs byte [0x25118a8a16f10811], al
cmp al, 0x3f
mov esi, 0x1c205608
xor eax, eax
push rsi
outsb dx, byte [rsi]
fldcw word [rdi + 0x75]
je 0x40540e
in al, 0x42
pop rcx
pushfq
sbb eax, 0x710e22e5
add eax, 0x616e6c12
or al, 0x42
mov ss, eax
lodsd eax, dword [rsi]
clc
jno 0x40546e
add dword [rdx + 0x25], eax
insb byte [rdi], dx
ror byte [rbx - 0x26a55abe], 1
xchg eax, esi
and al, 0xb4
retf -0x6fda
push rsi
mov bl, 0x90
and al, byte [rdx + rdi*2]
sbb byte ds:[rdx], dh
test byte [rax + rbx*4], bh
sbb dword [rdx + 0x48], ecx
mov es, word [rsi + rdx*2 - 0x2be9cd87]
push rdx
and esp, dword [rax + 0x28b2ab8a]
add al, 0x76
or ch, byte [rbx]
not word [rdi + 0x19210841]
push 0x17
imul esi, dword [rbp + 0x64a2314f], 0x35cc6003
cmc
xor byte [rax + 0x50], dh
adc ch, byte [rsi + 0x20c82ae9]
add rbp, qword [rbx + 0x48306560]
xor ch, byte [rdx - 0x7bd27e75]
xor ch, bl
shl byte ds:[r13 + rax*2 - 0x12], 0x4b
adc dword [rax + 0x21508ac3], 0x92b0204a
or dword [rdx + 0x51], ecx
add cl, byte [rbx - 0x80]
add eax, 0x5a901ba6
adc byte [rcx], 0x16
push rdx
cmp byte [rsi + rcx + 0x11320267], ah
cmp al, 0x3d
loopne 0x4054f5
lodsb al, byte [rsi]
pop rdi
jo 0x405542
jae 0x4054f6
pushfq
movabs byte [0x2170904c58b84251], al
cmp rax, 0x14e4c435
or byte [rdx + 0xd157165], al
jb 0x405553
ret 0x6144
movsb byte [rdi], byte ptr cs:[rsi]
and qword [rdx], 0x1e864b14
movabs eax, dword [0x40e2b02bb9419224]
jb 0x40556e
mov ah, byte [rdi + 7]
or bh, al
pop rdi
push rcx
push rbx
cmp dword [rsp + 0x40], edx
retf
and dword [rbp + rbp*4 + 0x3d80b264], 0x79022d4a
insb byte [rdi], dx
je 0x4054c3
test byte [rax], r8b
sal byte [rdi], 1
mov dl, 0xa8
ret 0xbaec
mov dword [rdx], eax
pop rcx
xchg eax, ecx
popfq
sub dword [rax + rbp*2 + 0x1293de0b], ebp
xor eax, 0x45930584
test al, 0xc
add al, 0x4c
sub ecx, dword [rcx - 0x90fab88]
jo 0x405512
movabs byte [0xaa5c44e0038f3190], al
imul esp, dword [rbp - 0x4b], -0x6f
adc byte [rcx + rax], 0x81
push rbx
cdqe
add dl, byte [rdi - 0x4299c6c6]
js 0x40557b
stosd dword [rdi], eax
add eax, dword [rax + 0x32]
mov cl, 0xe4
sub dword [rdi], 0x30905135
add dword [rdi - 0x3e], edx
sbb dword [rsi + 0x1a], 0x12
sbb bl, 6
adc dword [rsi + 0x3d], edx
adc al, 0x25
push rax
xchg dword [rdx], edx
jne 0x405515
push rdx
xor dword [rcx], edx
jb 0x4055c0
fst qword [rdx + 0x6b6335e0]
in al, 0x24
pop rax
or dword [rdi + rbp*4 + 0x19de23e5], esi
and byte [rbx - 0x28], al
pushfq
test al, dl
xlatb
sub dl, byte [rdx + rsi]
xchg eax, edi
xchg eax, ecx
push rax
sbb eax, 0xb5a54856
pop rdx
sub ecx, dword [rax + rdi]
cmp word [rdi], 4
mov ah, 5
cld
or al, 0x60
add dword [rax], esp
in eax, 0x87
add bpl, bl
push rdx
sub al, 0x84
jb 0x4055fd
push rax
sbb dword [rbp + 0x26], esi
add dword [rdi], eax
outsd dx, dword [rsi]
sbb ch, dh
push rsp
add esi, dword [rcx]
imul r10d, dword [r8], 0xc
cmc
pop rdx
jbe 0x40561c
ja 0x40561e
cmp dword [rbp + 2], ecx
jnp 0x405603
or al, 0xe
clc
sbb ah, byte [rcx - 0x2f]
mov dh, 8
movsxd rax, dword [rsi]
and byte ss:[rcx - 0x6b], ah
or dword [rbp + 0x1525020d], edi
xor esi, dword [rcx + 0x50]
add al, 4
or al, 0x65
and al, 0
imul esi, dword [rdx], 0xb090af3e
pop rax
mov edi, 0x96a10397
mov word [rax + rdi*8 + 0x32], es
int 0xc8
mov cl, 0x2a
jl 0x40566a
test al, 0x63
adc dword [rax], 0x704aa141
push rsp
sub eax, dword [rdx + rax*2 + 0x44204785]
nop
outsd dx, dword es:[rsi]
xor cl, byte [rdx + rbx*4]
or al, 0x32
movsxd rdx, dword [rdi + 0x15]
or byte [rcx - 0x5265cd55], al
adc dh, ch
cwde
xor dword [rdi + 0x38], 0x90b80967
test al, 0x6b
xchg eax, ebx
xor al, 0x13
jb 0x4055f1
or byte [rsi - 0x7eddf369], cl
push rax
xchg eax, ebx
add eax, 0x6228b519
or al, 0x69
xchg byte [rcx + rdi*2 - 0x3536cbcb], ch
push rbp
sbb byte [rcx], dh
mov byte ds:[rdx + 0x2a6d802c], 5
ret 0x3002
jo 0x40562a
sub eax, ecx
adc eax, 0x32c93456
movabs eax, dword [0xa8b2ab692418ce40]
sbb dword [rdi + rax*4 + 0x4e24aa4], eax
hlt
adc rax, 0x761668c8
lodsd eax, dword [rsi]
adc al, 0x87
imul rdx, qword [r10 + 0x20188322], -0x50
xor bl, byte [rcx]
mov al, 0x84
jb 0x4056ee
or byte [rdi + rax*2], dh
mov ecx, 0x6e14c01
lea edx, [rip - 0x6072fee0]
adc eax, 0x3599082f
jle 0x405657
mov cl, 0xca
pop rdx
and al, 0x1a
nop
movabs rbp, 0xf618acb9744d59aa
mov ebp, 0x2745b51b
pop rcx
or al, 0x36
pop rsp
je 0x405730
jns 0x40569e
xor eax, dword [rsi + 0x7b70c78b]
xchg eax, ebx
jge 0x405742
fcomp dword [rbx + rcx*8]
wrmsr
adc byte [rdi - 0x7d27b06e], cl
test byte [rax], cl
imul edx, dword [r15 + 0x49], 0x897e4ac4
xor dword [rcx - 0x67dbb75c], eax
push rax
add dword [rcx], ebp
xchg eax, esi
wait
nop
lodsd eax, dword [rsi]
movsb byte [rdi], byte ptr [rsi]
js 0x4056bb
lahf
adc esp, dword [r9 - 0x40]
and esi, dword [rip + 0x600e3117]
and rax, 0x12a1dac
and dl, byte [rsi + rax*2]
and al, 0x92
cwde
adc byte [rax + rdi], al
xchg eax, esp
push rsi
test dword [rax + 0x35b54a0b], edx
mov dh, 0x1a
sub ebp, dword [rax + 0x3069f66d]
push rbp
pop rdx
mov ch, 0x4e
outsd dx, dword [rsi]
fsubp st(2)
push rbp
xor qword [r11], rbx
in eax, dx
sub eax, ecx
mov al, bh
leave
xor dword [rsi - 0x74], ecx
cmp eax, 0x45817240
and byte [r10 + rbx], cl
leave
xor qword [r8 + 0x32393045], rdx
sbb dl, byte [rax - 0x7f]
movsb byte [rdi], byte ptr [rsi]
sti
nop
add byte [rax], al
or dword ss:[rbp + 0x20], edx
jmp 0xffffffff8c32c0c3
test byte [rsi], dl
sbb dh, ah
movabs dword [0x2560993192c02406], eax
shl byte [rcx], 0x4b
xchg eax, ebp
adc al, 0x1c
mov ah, byte [rdi + rax - 0x35719cb1]
nop
add eax, 0x94603258
insb byte [rdi], dx
jo 0x4057fc
jo 0x405763
sbb al, 0xb
push rsp
insd dword [rdi], dx
xor r8b, byte [rsi]
test dword [rax], edx
add dh, byte [rdi]
mov byte [rax], dl
sub al, 0x63
fild dword [rdx]
add eax, 0x965b1180
stosd dword [rdi], eax
mov eax, es
xchg byte [rcx - 0x53], al
mov sil, byte [rcx]
rcr dword gs:[rax], 1
and byte [rax + 0xc], 0x99
scasb al, byte [rdi]
add byte [rax + 0x2a], bl
cmp byte [rdx], ch
mov edi, dword [rsi + 0x4b500aa4]
jbe 0x40584a
adc al, 9
mov ecx, 0x49421739
movabs byte [0x32eb8bc412045b6a], al
mov word [rax], ss
cmp rcx, rdx
jbe 0x4057c7
push rax
jo 0x405874
sub eax, dword [rbp - 0x45]
and dword [rax - 0x6b], ecx
push rsp
cmp dword [rcx - 0x4e], ebx
sbb ah, byte [rbp - 0x2f]
mov word [rbx], cs
jmp 0x405832
fnstenv [rcx]
loope 0x405848
mov r9b, 0x20
std
fimul word [rax - 0xbdefdf0]
add eax, 0x11b2b102
out dx, al
sal dword [rdx], 0x60
push rbx
xor al, 0x56
or al, 0x20
or ecx, ecx
sahf
adc eax, 0x2052810b
pop r8
mov cl, 0xec
popfq
push 0x846f1a8
mov ch, 0x4a
xchg byte [rdx + 0x5e00b21c], bl
sahf
jno 0x4058bb
outsb dx, byte [rsi]
mov bl, byte [rax]
test dword [rbp + 0x10], eax
push rdx
or dword [rdi + 0x63], ecx
push 0x40
je 0x4058af
mov dl, 0xd
push rdi
push rdi
scasd eax, dword [rdi]
jnp 0x4057f5
pop rdi
insb byte [rdi], dx
movabs byte [0x1ab3809d04185ab3], al
add al, 0xb7
sbb ah, byte [rdi + rdi*4 + 0x50]
pop rax
or dword [rip - 0x3f6f8dcb], eax
sub bh, byte [rax + 0x6c6c67cd]
push rax
movabs byte [0x64c96c8e0b214e04], al
cmc
xor al, 0x69
xor dword [rsi + rdx*2 + 0x27e84c56], eax
and byte [rcx + 0x19], ah
xor eax, 0x14827f1a
pop rax
and al, 0x11
add bh, byte [rcx]
lodsb al, byte [rsi]
and eax, 0x83c5969
xchg eax, ebp
stosb byte [rdi], al
std
jo 0x4058d8
cmp byte [rdi - 0x6e37ba93], r11b
add dword [rdi + 0x32], ebx
pop rcx
movsxd rbx, dword [rdi + 0x417236d0]
mov eax, 0x494dd363
enter -0x7735, 0x16
movabs byte [0x62c81180ac8a6952], al
add eax, 0xa219c142
adc eax, 0xcc641352
movabs al, byte [0xdc99590e430b095]
test byte [rsi - 0x23], 0x95
test al, 0x26
mov ebp, ss
or bl, byte [rcx]
je 0x405916
push rdx
stc
adc dl, al
mov al, ch
leave
sub byte [rsi + 0x20], dl
push rbx
add dh, byte [rbp + 0x49]
or byte [rip - 0x2475edd5], dl
lodsb al, byte [rsi]
enter 0x355c, 1
xchg eax, edi
or esp, dword [rcx - 0x3b]
xor eax, 0xaa32e032
sbb eax, 0xc697622
and al, 0xc1
test al, 0x4d
xchg rax, r8
or eax, 0x831e2042
xor edx, dword [rcx - 0x423ccac0]
add al, 0x25
test dword [rax + 0x15], eax
pop rdx
mov ecx, 0x10094626
sub byte [rbx], al
adc byte [rax], ah
push rdx
mov ah, 0x64
adc al, 0x80
nop
add byte [rip + 0x21128256], 0xd1
mov al, 9
mov eax, 0x654b49a8
cli
out dx, al
sbb ch, byte [rax - 0x38]
push rbp
and dword [r15], edx
ret 0x4018
and dword [rbx + 0x46], esi
movabs eax, dword [0xeba22551884c5b30]
stosb byte [rdi], al
adc byte [rip - 0x6e9c23fc], ah
push rax
enter 0x334c, -0x52
xor eax, 0xaa468547
xor eax, 0x2d654a69
mov ah, 0xc
sub eax, 0xd730c58c
test esp, edx
sub cl, byte [rdi + rcx + 0x42b4a003]
pop rcx
cmp dword [rax], ebx
and byte cs:[r15 + 0x25258ea8], r9b
ret 0xdc82
mov r8b, 0xe2
sub eax, 0xcf114a1
enter 0x810, -0x3c
rdtsc
nop
test al, 0x44
xor eax, 0xca524208
and byte [r11], r12b
add byte [rcx + 0x3f], cl
or al, 0x89
sbb byte [rip + 0x4a4241b5], ah
cmp byte cs:[r11], dl
sal dword [rsp + rax*2 - 0x3c], -0x47
sub al, byte [rcx]
xor r14b, byte [r8 - 0x2ff7aecd]
xor dword [rcx - 0x3a], esp
or byte [rax - 0x60], dl
push rbp
cmp eax, dword [rsi]
mov eax, 0x8769d5d0
push rdx
jne 0x405a74
test byte [rdx], bl
and eax, 0x4343c750
xor byte [rbx], al
enter 0x25, -0x63
cmc
mov esp, 0x24081469
or byte [rcx + 0x1940c832], dl
mov ecx, 0xb116e31
shr byte [rdx - 0x54d6f6fe], 0x59
shr ebp, cl
adc dword [rcx], esp
cmp eax, 0x4f77a4a8
movsxd rsi, dword [rbp - 0x2b]
add dword [rdx], edx
movsb byte [rdi], byte ptr [rsi]
jo 0x405a8b
adc eax, 0x41a10092
movsb byte [rdi], byte ptr [rsi]
mov cl, 0xac
mov ch, byte [rbp + 0x13]
jno 0x4059ed
nop
xchg eax, ebx
imul esi, dword [rdx], 0x555b36d1
push rax
xor ebp, dword [rdx + 0x75]
jp 0x4059ff
xchg eax, ecx
add al, 0x78
movabs eax, dword [0xa70194792b10491a]
retf 0x6da5
insd dword [rdi], dx
mov bh, 0x89
fidiv dword [rdx]
pop rax
in al, dx
xor esp, 0xf2242010
jo 0x405af1
je 0x405aa4
adc al, 0x57
jp 0x405ab5
pop rdi
test byte [rax], dh
xor ch, byte [rax]
int 7
sub dl, byte [rsi]
mov dl, 0x22
xor al, 0x6f
or byte [rax], ah
push rax
xchg ecx, edx
or al, 0x25
std
xor dword es:[rbp + 8], esp
test al, ah
xor r12, qword [r10]
retf 0x81
sbb dh, byte [rcx]
cmp al, 0x67
mov eax, 0xca31644b
or bl, byte [rdx - 0x6b]
out 0x26, eax
xchg eax, ebx
leave
retfq -0x6600
xor byte [r8 + 0x41b1a35e], al
add dl, byte [r8 + 0x20]
lodsd eax, dword [rsi]
dec dl
cmp dl, byte [rax + 0x4b]
add byte [rsi], ch
jae 0x405b4e
insd dword [rdi], dx
mov bpl, 0x61
mov ebx, 0x72740762
push -0x5c55b0f7
in eax, 0xd6
jnp 0x405b58
outsb dx, byte [rsi]
outsd dx, dword [rsi]
mov bl, 0x2d
jmp qword [rsi + 0xda1ad60]
scasb al, byte [rdi]
jne 0x405b62
insb byte [rdi], dx
sub eax, 0xb5adee69
fsub dword [rax + rax + 0xd]
jb 0x405b3e
or dword [rcx + rdi*2 + 0x6e], esp
in eax, dx
imul edx, esi, 0x66
sbb dword [r11 + 0x69], r12d
retf
jnp 0x405b4e
or al, 0x5f
sbb esp, ebx
insb byte [rdi], dx
sub byte [rcx], cl
call 0x75135f54
jb 0x405abd
xlatb
insd dword [rdi], dx
outsb dx, byte [rsi]
jnp 0x405b38
sub al, 0x6f
or byte [rcx + 0x78], ch
add eax, 0x7a801566
lodsb al, byte [rsi]
cmp ah, byte [rdi + rbp*2]
cmc
push -0x304d22f6
push 0x5d0d7264
movsxd rax, dword [rax + rax*4]
jb 0x405bac
nop
xor bh, byte [rbp - 0x3c56ee94]
add al, 0x43
or ebp, dword [rdx - 9]
in al, dx
sub eax, 0x36a158b4
add byte [rax + 0x7b], ch
movabs al, byte [0xf65404dc5ed98895]
push rax
test eax, 0x8dad
push ax
jo 0x405b96
sub eax, dword [rdx]
fimul word [rdx + rcx + 0x1c3f0767]
imul eax, dword [rsi + 0x23014864], 0x90641907
add dword [rsp + rdx*2 + 0x20], edx
and dword [rcx], ebx
xchg eax, edx
and dword [rcx + rsi], eax
sub byte [rcx], bl
nop
je 0x405c14
and al, 0x83
sbb al, 0xf2
outsb dx, byte [rsi]
jg 0x405b9e
ljmp [rdi - 0x68]
cwde
or al, 0x32
enter 0x3c20, 5
or byte [rsi], dh
and ch, cl
nop
or r11, rax
xchg eax, ebx
mov bl, 0x83
or al, 0xd8
enter -0x4fc, 6
ror byte [rdx + rax*8], cl
sbb byte [rdi], bh
push rsi
add esp, esp
leave
xchg eax, ebx
add esp, dword [rax - 0x7ef85ff9]
jb 0x405c1a
mov edx, 0xffbf5e8b
and cl, byte [rdi]
mov dl, 0x21
cmp dword [rcx + 0x22], edi
pcmpgtd mm0, qword [rdx]
movsb byte [rdi], byte ptr [rsi]
sbb ebp, dword [rbx + 0x3f]
dec byte [rax - 0x331be6ca]
cmpsd dword [rsi], dword ptr [rdi]
nop
dec dword [rdi]
and dword [rax], ecx
push rbx
jp 0x405c54
sbb byte [rax], dl
test dword [rax + 0x10182793], edx
xor cl, al
xchg edi, edi
test byte [rdi], bh
js 0x405bf9
xchg eax, edx
or dword [rax + rdi*2], 8
add al, 0x19
cmovno edi, dword [rdx + 0x19f8e01]
inc dword [rax - 0x6c3636bd]
adc al, 0x80
adc al, 0x1a
mov dword [rbx + 0x3f64320c], eax
movabs al, byte [0x100290bb21b2c0a0]
xchg eax, esp
sbb bh, ch
sbb al, 0x60
xchg r12b, r13b
enter -0x62f1, 0x3f
jo 0x405c00
add eax, 0x7f07ccf2
shl byte [rbx], cl
xchg eax, ebx
xchg esp, ebp
movabs dword [0x86921b7b447b44ff], eax
xchg eax, edx
or dword [rcx + 0x5c3f60bf], ebp
enter 0x641, 0x60
add dword [rax], esp
sub cl, byte [rax]
leave
nop
mov cl, 0x91
cmp al, 0x73
adc ecx, edi
jg 0x405c64
add al, 0x20
jb 0x405c45
leave
adc ebx, esp
pushfq
and ecx, ecx
sahf
cmp al, 0x39
jg 0x405c9a
cmpsb byte [rsi], byte ptr [rdi]
add al, 0xa6
call 0xffffffffb929929f
fcmovnu st(0), st(3)
and eax, 0xad7b0427
mov edi, 0xd2032610
or eax, 0xf80f3fe7
wait
pop rsp
and al, 7
push rbx
or edx, dword [rax - 0x51ffd8d9]
add byte [rsi - 0x5b499324], ch
clc
wait
xor ah, byte [rdi]
iretd
jg 0x405cc3
add dword [rsi], eax
adc byte [rcx - 0x4a], al
test dword [rax + rbx*4], ecx
mov edi, 0x2e41c9af
xchg eax, edx
scasd eax, dword [rdi]
or byte [rcx], al
add dword [rdi + rcx*2], esp
sahf
or eax, 0xb0003fb0
jo 0x405cf0
add dword [rdx + 0x6f0a5c90], eax
out dx, al
add al, byte [rdi + rsi]
jg 0x405d0c
or al, 0x37
sbb dword [rax - 0x40f87ff8], edx
in al, dx
in al, 0x45
pop rax
add edx, dword [rip + 0x10173001]
xchg dword [rbp + 0x4ebf343f], eax
fldlg2
mov al, 7
adc dword [rbx], edi
ror byte [rdx - 0x4f], cl
loopne 0x405d18
and dword [rdi], edi
mov edi, 0x9b2bd679
mov ebx, 0xffb1b800
and byte [rbx], ch
mov al, 1
movsb byte [rdi], byte ptr [rsi]
cmp dword [rdi], ebx
or dword [rdi + 0x16], edi
leave
xchg eax, ecx
xchg eax, ebx
fadd qword [rax]
cli
insd dword [rdi], dx
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip + 0x3f080216], ecx
adc dword [rdx - 0x17098642], eax
jo 0x405d0c
add byte [rax], al
sbb ah, byte [rdx]
add byte [rax], al
push rbx
add dword [rax], eax
add rax, qword [r8]
hlt
add byte [rax], al
add bh, bh
