call 0x402668
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x402480
add ebx, ebx
je 0x402436
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x40246e
cmp rbp, -4
ja 0x40246e
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x402456
add ecx, 4
mov dl, byte [rax]
je 0x40247e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x40246e
ret
cld
pop r11
cmp r8b, 2
je 0x402496
jmp 0x402513
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x4024a6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x40248e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x4024be
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x4024ab
sub eax, 3
jb 0x4024dc
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x402513
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x402503
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x402501
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4024f0
cmp rbp, -0xd00
adc ecx, eax
call 0x402442
jmp 0x402496
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4025ec
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40258a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x4025d6
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x4025a9
push 0x3a707474
jne 0x402602
js 0x4025c2
jae 0x4025fc
outsb dx, byte cs:[rsi]
je 0x4025bb
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x402629
jb 0x40261b
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x402646
jb 0x402659
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x217158
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x217158
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x402524
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x40264f
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4025fd
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add al, 0
jmp rbp
call 0x706f26f7
jb 0x40270f
movsxd rbp, dword [rdi]
jae 0x402709
insb byte [rdi], dx
js 0x40270f
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x4026ef
cmp rsi, rcx
jae 0x4026f7
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x4026d6
cmp al, 0x8f
ja 0x4026d6
cmp byte [rsi - 2], 0xf
je 0x4026dc
sub al, 0xe8
jg 0x4026d9
push rdi
cmp al, 1
ja 0x4026c4
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x4026c7
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x4026f4
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x40274b
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c2bc9
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40278f
mov al, 0xa
jmp 0x40278f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x40276b
inc ebx
mov al, 0
jmp 0x402793
mov al, 2
jmp 0x402793
mov al, 3
jmp 0x402793
mov al, 0x3c
jmp 0x402793
push rcx
rcr ah, 1
fstp st(7)
jle 0x4027d4
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x4027e6
jg 0x4027d8
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a7f5b
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x402832
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb79af
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x40283a
cmp esi, 0x21585055
jne 0x40283e
jge 0x402830
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x402833
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x402837
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x4028e3
pop rcx
or al, 0x3b
jb 0x4028e9
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x40285b
jmp 0x40285d
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x366279e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf549e6
in eax, dx
jg 0x402895
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x4028db
mov bh, 0x2a
add edi, 0x10
jmp 0x4028d8
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x402915
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x402951
jne 0x402968
fstpnce st(6), st(0)
jle 0x402931
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x402967
jrcxz 0x40299b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1c8ff
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x402a1a
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x4029da
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58296faf
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x402a4d
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x4029e7
and ecx, 7
or al, 0xeb
jae 0x402a52
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x402a87
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x402ac5
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x402a7e
push rax
call 0xffffffff868d276b
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x402a88
std
cmp edi, esi
xchg eax, edi
jle 0x402add
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c97069
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x402adb
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x402ac9
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x402af2
js 0x402b32
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x402bc4
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad3dff
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x402be5
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x402bea
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc2269c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x402b78
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0x200001512000058]
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402c98
je 0x402ca1
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402c6a
mov dh, 0x7d
jbe 0x402c69
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x402ca2
sahf
sahf
add al, 0
cwde
add eax, 0x1f90d000
and byte [rdi + 0x7200006], bl
add dh, dh
or eax, 0xfc807c8
or byte [rax], al
pop rax
or dword [rax], eax
call 0x14243078
or al, byte [rax]
xor byte [rdi], cl
or eax, dword [rax]
fcom dword [rdx]
cld
add cl, bh
add dword [rax + rax], ecx
add byte [rbx], dl
or eax, 0x30158000
cmp dword [rax + rax*4 + 0xe], 0xc00f9000
retf -0x49ff
or dword [rbp - 0x11], edx
adc byte [rdi], dl
cld
add byte [rcx - 0x68], bl
adc dword [rdi], eax
push rsi
adc al, byte [rax]
jo 0x402d10
cmp dword [rax + 0x7e], eax
adc byte [rbx], 0
insb byte [rdi], dx
adc al, 4
add byte [rsi + 0x6d], dh
adc eax, 0xf902f800
add cl, bh
add byte [rax], al
outsb dx, byte [rsi]
add byte [rax], cl
pop rbx
nop
insd dword [rdi], dx
sbb byte [rdi + 0x6f], al
sbb dword [rax + 0x17], esi
jl 0x402c60
cld
add byte [rdx], bl
add byte [rax + 0x71], dl
sbb eax, dword [rax]
ja 0x402d3e
sbb dword ss:[rbx + rdx], 0x41701
int1
push rdi
cmp edx, dword [rdx - 0x40e4f301]
sbb eax, ebx
nop
xor al, 0xd
xchg eax, edi
add al, al
sbb edx, dword [rdi]
nop
or edi, dword [rcx]
add byte [rsi], dl
in al, dx
insb byte [rdi], dx
test dword [rsi - 0x6fcaa0bc], 0x17015f73
fcom dword [rbp + 0x4f531910]
jp 0x402d69
adc ah, byte [rdx]
xor spl, byte [r8 - 0x7a]
xchg eax, edi
sbb eax, 0xa5bb0867
xlatb
stosd dword [rdi], eax
mov al, 0xc9
ja 0x402cfe
xchg eax, ecx
sbb edx, dword [rdx + 0x2fd586c1]
sbb dword [rax + rcx*2 + 6], esp
mul eax
in al, dx
leave
rol dword [rsi], 0x3e
mov edi, 0x24af0125
nop
push rbp
in eax, dx
adc eax, 0x738d8c97
sub byte [rbx + 1], bh
mov bh, 0xd0
lahf
sub al, 0x84
int1
xchg byte [rcx + 0x5d476f17], cl
mov r9b, 3
xchg eax, ebp
mov al, 0x17
test al, 0x61
in al, dx
retf 0x4788
outsd dx, dword [rsi]
mov esi, 0x4d97142f
or dword [rbx + 0x7f17cf29], esi
loop 0x402d3b
int1
retf 0x4788
out 0x3a, eax
sbb byte [rdi - 0x3cb24ce0], dh
add bl, ch
and bl, byte [rdx]
mov ebp, 0xe90778c
push rax
add ah, byte [rbp - 0x4afee731]
sahf
add cl, byte [rax]
and eax, 0xd364f6e9
pushfq
movabs byte [0xcf272f0970199612], al
jb 0x402d7b
push rdi
cmp edx, dword [rdi]
xor dword [rax], eax
adc byte [rdx], dh
enter -0x6c37, 3
enter 0x4832, 0x59
xchg eax, ebx
mov eax, 0x7700af39
stc
add esi, dword [rdx - 0x46361b0d]
jno 0x402de5
xchg eax, ebx
add al, 0
sahf
mov ebp, 0x744704be
cmp ah, byte [rbx]
jns 0x402de5
in al, 0xc9
cli
add al, 0xb4
sub dword [rdx], ebp
add byte [rdi], ah
add eax, 0x2f6793b
add eax, 0xc443e82f
enter 0x41c9, 6
mov edx, 0x833f37c0
pushfq
cmp al, 0x39
sbb eax, dword [rsi]
ret
sub al, 0x26
cmp eax, 0x20e4e419
push rsi
sub dword [rax + 0x69], edx
cmp dword [rax], ecx
or dword [rdx + rsi*2 - 0x69], edx
jge 0x402e32
fiadd word [rbp - 0x44d621c4]
jg 0x402e79
leave
fiadd dword [rsi]
fdiv st(2)
in al, 0x20
out dx, eax
add ch, dl
push 0xe40bd3a
jb 0x402e58
sbb byte [rdi], al
insb byte [rdi], dx
nop
sahf
cmp byte [rip + 0x3c21d011], dh
js 0x402de5
sbb byte ds:[rdi], dl
sbb qword [r13 + r15 + 0x4708217b], -0x26
xor al, 0x4b
sbb dword [rbp - 0x38], -0x6d
or byte [rax + 0x3a2f7932], al
xchg eax, ebx
scasd eax, dword [rdi]
and bh, dl
outsd dx, dword [rsi]
sahf
or byte [rdx + 0xe], al
sbb edx, dword [rdx + 0x292fda0e]
js 0x402e83
add dword fs:[rdi - 0x5990e97a], ecx
test byte [rdi], dl
enter 0x906, 0x4f
or dword [rdi + 0x5b], esp
and eax, 0x1784f272
or dword [rcx], 7
jp 0x402ef2
retf
movsb byte [rdi], byte ptr [rsi]
mov ebx, 0xa0e0e40
pop rbx
and byte [rdi - 0x79], ah
nop
add dword [rdx + 0x7e], ebp
or bl, byte [rdi - 0x68]
and dword [rax + rdx*4 - 0x6d], esp
cmp ah, byte [rdx]
stosd dword [rdi], eax
fmul dword [rbx]
jns 0x402e8c
mov edi, 0x49aa6f0a
xor dword [rbx], ecx
fmul st(1)
xchg eax, ebx
or r10, qword [rax]
xor ebp, esp
ror dword [rsi + 0xe], 0x32
or dword [rsi + 0x28], 0x2f385f2d
in al, 0xc9
in eax, 0xb
add bh, byte [rsi]
in al, 6
sbb dword [rbp + rdi*4 + 0xc46f792], -0x71
mov al, 0xb
in al, 0x20
or al, 0xa9
mov cl, 0x86
in eax, 0x3a
xor cl, al
leave
mov bl, 0xd
push rsi
xor al, 0x54
push rsi
nop
xor rax, 0x78cec143
and dword [rax + 0x34], esi
sub al, 0xe7
sti
or eax, 0x81781e27
jo 0x402f70
xor eax, 0xe99070e
jb 0x402ebf
mov bh, 0x56
mov esi, 0x3907200e
jns 0x402f5c
pop r15
push rdx
bsf edx, dword [rax + 0x17775d83]
jb 0x402f73
mov cs, word [rdi]
iretd
pop rsi
and byte [rdi], al
lodsd eax, dword [rsi]
cmpsd dword [rsi], dword ptr [rdi]
mov ecx, 0xf2720f32
in al, 0x20
out 0xf, al
mov cs, word [rbx - 0x53]
xchg eax, ebx
adc r9b, r8b
push rax
jne 0x402f68
or dword [rdi], ebp
in al, 0xc9
loope 0x402f7d
sbb ecx, dword [rdx + 0x75]
adc dword [rdi + 0x3c], ecx
jns 0x402f67
in al, 0x25
pop r14
add dword [rip + 0x2f47d812], edx
nop
sbb dword [rax + rbp*2 + 0x12b8127e], 0x43
or edi, dword [rcx + 2]
iretd
mov word [rsi - 0x46], es
xchg dword [esp + ebp - 0x51], esp
cmpsb byte [rsi], byte ptr [rdi]
adc ebx, dword [rdi + 0x51]
pop rsi
and byte [rax + rdx*4 + 0x713bd2f], bh
xlatb
adc ebp, ebx
xchg eax, ebx
xchg eax, ebx
cmp esp, dword [rbx]
fist word [rbx]
sahf
cmp al, 0xff
mov ecx, 0x42147501
sbb dword [rbp - 0x43d76f43], ebx
adc al, 0x3b
sal bh, 0xcd
nop
loope 0x402fdc
std
or esp, esp
xchg eax, esp
adc eax, 0xc19d118c
test dword [rdi + rbp], 0x3d9c849b
sub al, 0x17
push 2
ficomp word [r13 - 0x38]
xor edi, dword [rax]
sub edx, dword [rsi]
ror byte [rsi + 0x4c], cl
mov al, 0x93
adc dword [rdi], -0x14
sub dword [rdx - 0x27c676d1], eax
test dword [rax + rsi], ebx
xor al, 0xb2
nop
adc ecx, dword [rsi]
cmp eax, dword [rdi + 0x60]
scasd eax, dword [rdi]
or byte [rbx + 0x1a6c1c9c], al
ja 0x40304d
clc
sub dword [rdi], edx
in al, 0x20
mov ah, 0x17
jnp 0x403048
movsb byte [rdi], byte ptr [rsi]
mov ecx, dword [rbx]
test byte [rax], bl
cmp byte [rdi + 0x10], dl
or eax, 0x4501c672
sbb byte [rdi - 0x7e87eb86], dh
jo 0x40303f
sbb byte [r15], r8b
sbb byte [rax], cl
sbb edx, dword [rdx - 0x12fd18ed]
sahf
je 0x403086
sbb dword [rdi + 0x1c415236], ecx
in al, 0xe4
leave
push rsi
sbb dword [rsi + 0x2a], ebp
jge 0x403072
jb 0x403051
sahf
xor dl, byte fs:[rcx + rbx + 0x6790feef]
pushfq
insb byte [rdi], dx
jrcxz 0x403022
sbb edi, ecx
pop rsi
push rax
mov bl, 0x5e
mov esp, 0x266f19df
sbb ah, byte [rdi + 0x79]
in al, 0xc9
insb byte [rdi], dx
push rsp
add ecx, ecx
sbb al, byte [rax + 0x727904f]
cmp dword [rsi + 0x44ba1b53], edx
test byte [rdx - 0x62], 0xbd
imul ebx, dword [rbx], 0xb14eb28f
sbb edi, dword [rdi + 0x79390727]
ja 0x4030f0
insd dword [rdi], dx
sbb al, 0x3e
sahf
mov esp, 0x1c945090
sahf
cmp al, 0x79
not al
sbb al, 0x8f
sub dh, byte [rcx]
cmp al, byte [rcx]
insb byte [rdi], dx
sbb eax, 0x4f217893
jge 0x40310e
cdq
sbb eax, 0x5e24f2c7
enter 0x534a, 0x1d
xchg eax, edi
xchg eax, edi
cmp edi, dword [rax + rax*2 + 0x753c720e]
movabs eax, dword [0x1ecdff58178b3c1e]
outsd dx, dword [rsi]
jl 0x403133
cmp dword [rcx], edi
fadd dword [rbp + 0x492a17f8]
nop
xchg eax, ebx
pop rax
push rax
sub byte [rip - 0x77991fee], bh
adc dword [rdx], eax
sbb bh, byte [rdi - 0x6c]
jb 0x4030f4
in al, 0x19
mov dword [rax + 0x47011072], 0x4e4190ab
adc dword [rbx + 0x39], edx
fist dword [rdi]
or byte [rdi + 0x1fe85864], al
adc eax, 0xa40bc59e
and byte [rdi - 0x1b90dfae], ah
sub al, dl
and ah, dh
jnp 0x403149
push rsp
and dword [rdi + 0xe], ecx
jb 0x403196
mov esp, dword [rax]
insb byte [rdi], dx
push rax
or dword [rdi], ebp
xor byte [rax - 0x4d], bh
and byte [rdi + 0x5df20ed], bh
in al, 0x22
sub eax, 0xf09e7721
add ah, bl
and edi, r15d
pop rbx
and edi, eax
jne 0x4031a2
nop
int1
mov bl, 0x21
xchg eax, edi
mov edx, 0x6c9e4f2a
nop
and bh, byte [rbp - 0x37fee4ba]
leave
xchg eax, ebx
cmpsb byte [rsi], byte ptr [rdi]
and ch, byte [rax]
retf -0x7a17
cmp al, 0x39
and ch, byte [rax + 0x77232227]
jns 0x40318f
or r8b, byte [rcx]
mov ebp, 0x85eb3c23
cmp al, 0x88
cmp edi, ecx
and ebx, edi
push rsi
xchg eax, r10d
xchg eax, ebx
sbb dword [rdx + rax*2 + 0x1372247d], 0x5e
sbb eax, 0xf83724a6
and al, 0x1f
jb 0x403196
in al, 0xc9
sub al, 0x2b
add dword [rbx - 0x18fb74db], eax
or eax, 0x25c2df2e
and edi, ecx
loopne 0x40314d
xlatb
and eax, 0x7834d0d7
and edi, ecx
js 0x4031fb
push rdi
jmp 0xffffffffe466b4f7
and byte [rdi], ah
or al, 0x2f
sbb eax, 0xa90226cf
sti
push rbx
add dword [rdi], esp
mov bh, 0x39
fadd dword [rip + 0x4b272ff2]
cld
xor ebx, dword [rip + 0x33390642]
nop
pushfq
ja 0x403273
sub byte [rdi - 0x43986f43], bl
xor eax, 0x4a0a9f28
jle 0x40322b
and edi, ecx
jp 0x403188
pop rdi
cwde
sub byte [rdi], dh
sub byte [rbp - 0x38], bl
adc edi, dword [rax - 0x40]
sub byte [rdi + 0x72df256a], dh
nop
xchg eax, ebx
sbb dword [rdi - 0x55], 0x25
outsd dx, dword [rsi]
sub eax, ecx
xor eax, esp
add eax, 0x220f294f
sub eax, 0xc834205e
sub dword [rdi - 0x1b0dd648], edi
leave
adc ebp, dword [rdi + 0x15d3be2]
sub r12b, byte [rdi]
int1
in al, 5
sub al, byte [rcx + 0x3e]
in al, 0xd6
or esp, esp
and byte [rbx + rbp], bh
mov ch, byte [rbx]
mul dword [rdi]
cmp dword [rcx - 0x46], edi
cmp ch, byte [rbx]
movabs al, byte [0x14390bc6793982b]
sub al, 0x6f
cmp eax, 0x9072790b
ret
retf -0x67ff
jae 0x403261
in al, 5
ret 0x2c92
mov al, 0x2c
cmp ecx, eax
or esp, dword [rdi + rdx + 0x25172cfc]
sub eax, 0x17813c85
jo 0x4032b5
push rdi
sub dword [rdi], ebp
in al, dx
test dword [rcx], edi
fldcw word [rip + 0x5d4b46c7]
or dword cs:[r15 + 0x17790bb0], r8d
lahf
fisttp word cs:[rdi + 0xe]
enter 0x2714, -0x41
stosb byte [rdi], al
lodsb al, byte cs:[rsi]
mov esp, 0xde217840
fbld tbyte cs:[rdx]
mov bl, 0x17
xor al, byte [rdx]
scasd eax, dword [rdi]
push r15
ja 0x403279
shr byte [rsi], 0xe4
rcl byte [rax + rax*2], 0x2f
mov ebp, 0x7460c917
or byte [rbx], cl
xor bh, bl
xor eax, 0xd83902f5
loopne 0x403305
movabs byte [0x979e42f5f230f330], al
xor byte [rsi + 0x2b], al
xor dword [rdi], esi
sbb bh, byte [rbx + 0x32538040]
xor dword [rdi - 0x3e6f10cf], ebp
cmp al, 0x40
fild word [rdx]
sbb edx, dword [rdx]
push 0x47328f10
and al, 0x67
hlt
je 0x403336
stosb byte [rdi], al
mov bl, 0x2f
add ch, bl
adc dh, al
xor dl, byte [rdi + 0x24f23312]
pop rsi
and bh, bh
je 0x40334b
xchg eax, edi
mov al, 0x17
xor ebx, dword [rdi - 0x14]
xor edx, edi
add byte [rbx + 0x2c], bh
in al, 0x8c
push rbx
mov ebx, 0x4af27890
xor al, 0x84
xchg eax, ebx
xchg eax, ebx
je 0x403344
fnsave dword [rdi + rdx]
cmp ecx, dword [rdi + rdx - 0xe]
in al, 0xc9
cmp al, byte [rdx]
jp 0x40337e
ret 0x85ec
cmp al, 0x89
xor eax, 0x123b0f97
ror dword [rdx + rsi*2], 1
mov gs, word [rsi + 0x273a124f]
mov dword ss:[rsi], 0x8501a923
scasd eax, dword [rdi]
and al, 0x6f
push rsp
cmpsd dword ss:[rsi], dword ptr [rdi]
or dword [rcx - 2], edx
jg 0x4033db
jb 0x4033ee
jae 0x4033f0
jne 0x4033e4
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
std
fstp st(2), st(0)
nop
jb 0x4033f9
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x403399
fstp st(6), st(0)
fisub word [rcx]
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x403414
jne 0x403430
mov al, 0xbf
std
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x40342d
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
in ax, dx
idiv bh
in eax, dx
imul ebp, dword [rsi + 0x69], 0x61727208
jns 0x403438
outsb dx, byte gs:[rsi]
je 0x40344f
jns 0x4033df
or ch, byte [rbp + 0x65]
and byte [rbx + rbx + 0x6d75f730], ch
insd dword [rdi], dx
jns 0x40341f
or eax, 0x2a74295f
outsd dx, dword [rsi]
mov esp, 0x9c4226dd
jo 0x40346a
and al, 0x5a
push rbx
je 0x40338d
cmp dword [rax + 0x69], esi
sti
mov dh, 0xb5
mul byte [rbp + 0x63]
ja 0x4033a4
sub eax, 0x729f6e77
jne 0x403475
je 0x40342e
insd dword [rdi], dx
mov al, 0x77
cmp edi, dword [rax]
imul r13d, dword [r15 + 0x3b], 0xfb7f3329
pop rcx
out 0x6e, eax
test byte [rbx + 0x61], ah
or dword [rdi + 0x14], 0x6e676936
bswap esi
ljmp [rsi + 0x65]
or al, 0x5a
xor eax, 0x766c6f73
xor eax, 0x31787863
xor dword [rcx], ebp
imul r15d, r15d, -1
pop rsi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
adc byte [rip - 0x494a44e5], r13b
xor al, 0x31
imul ecx, dword [rbx + 0x69], 0x63
popfq
imul ebx, dword [rdx + 0x6c], 0x697735bb
jp 0x403480
sbb byte [rdx + 0x6e], 0x64
mov dh, 0x65
xchg dword [rdi + 0x7f], esi
imul ebx, edi, 0xf
xor byte [rbp + 0x2f], al
xor r14b, byte [rbp + 0x62]
pop rdi
pop rcx
imul ebp, dword [rax - 0x49], 0x49
pop rdx
cmp dword [rdi], ebp
outsb dx, byte [rsi]
xor dword [rdi - 0x79], ebp
idiv edi
xor byte [rbx + 0x6e], ah
push rdx
pop r15
movsxd r15, dword [rbp + rdi - 0x28]
or eax, dword fs:[rdi + 0x4e]
push rbp
and byte [rax + 0x44], cl
push rdx
loope 0x4034b6
in eax, dx
xchg eax, ebx
push rdx
push rbx
sahf
pop rdi
push rsp
sub byte [r11], r13b
mov r15b, 0xb0
or dword [rax + rdx - 0x50], esp
jb 0x4034de
ficomp word [rsi]
loope 0x40354c
pop rcx
add byte [r13*2 + 0x5249f36f], sil
outsb dx, byte [rsi]
loope 0x40353f
fisttp dword [rcx]
sub cl, byte [rcx + 0x73a73231]
ret
pop rbx
jnp 0x403568
sar dword [rdx], 0x67
movsxd rbx, dword [r9]
adc ah, byte [rbx + 0x68]
cmc
cmp bh, dh
mov dh, 0x35
jae 0x403518
push r11
add al, 0
insb byte [rdi], dx
pop rdi
movabs eax, dword [0x65f423c361b0a2b]
fdivr st(6)
jbe 0x40353e
outsb dx, byte [rsi]
movsxd rcx, dword [rsp + rcx*4 + 0x45]
xor al, 0x74
jns 0x403597
push rbx
push qword [rsi + 0x3b]
push rsi
and dword [rbx + rsi + 0x63], 0xb0404049
pop r8
pop rax
pop rdi
xor edi, ebx
or al, 0xdd
xor al, 0x15
pop rax
jp 0x4035bd
jae 0x40357f
or eax, esi
jrcxz 0x40351f
jge 0x4035bf
jo 0x4035c5
xor dword [rsi], eax
imul ebx, dword [rbp + 0x3d], 0xbc6e765f
out dx, al
lodsd eax, dword [rsi]
and dl, bh
push rbx
xor byte [rdi + 0x15], bl
adc al, 0x4e
jae 0x4035db
insb byte [rdi], dx
and al, 0xc6
cmp r13d, dword [r9 - 0x1edb9498]
jbe 0x4035a8
xor al, byte [rbx + 0x75]
outsb dx, byte [rsi]
nop
or byte [rsi + rbx*2 - 0x54], 0x6b
lodsd eax, dword [rsi]
jo 0x40357a
scasd eax, dword [rdi]
test al, 0x33
cmpsb byte [rsi], byte ptr [rdi]
mov ebx, 0x13f75ad
push r8
sti
jo 0x403562
or byte [rcx - 0x35], ch
push rbx
xor ebx, edx
lodsd eax, dword [rsi]
adc eax, 0x3a535fda
outsd dx, dword [rsi]
mov esp, 0xb6023653
mov al, 0xb6
je 0x4035fc
in al, 0x54
xor dword [rdx], edx
test eax, 0xc64d8144
hlt
ja 0x403616
or eax, 0x39c64dcf
jge 0x40360a
add rsp, qword [r10]
jbe 0x4035be
pushfq
mov ecx, 0x445050b7
jo 0x40361d
pop rax
lahf
jne 0x403599
push 0x644d5b9b
wait
cmpsd dword [rsi], dword ptr [rdi]
jae 0x403569
and edx, dword [rbp - 0x30527b26]
movabs qword [0xa17ca680b030c31f], rax
stosd dword [rdi], eax
insd dword [rdi], dx
pop rbx
lodsd eax, dword [rsi]
insd dword [rdi], dx
jle 0x4035bc
or dh, byte [rsi]
cmp al, 0xf2
mov dh, 0xb1
movsxd rdx, dword [rsi + 0x561c234]
movsd dword [rdi], dword ptr [rsi]
mov r14b, 0x12
mov ah, 0xc7
movabs al, byte [0x319f61f0b86b0e6a]
imul ecx, dword [rax], 0x616bdb6b
outsd dx, dword [rsi]
nop
outsd dx, dword es:[rsi]
xor edx, dword [rbp - 0x593fd3d0]
insb byte [rdi], dx
xchg eax, esi
add dword [rip + 0x394e5db7], 0x30
je 0x403699
cwde
ja 0x403659
jrcxz 0x4035e4
shr dword [rax + 9], 1
fcom st(0), st(1)
push rbx
push rax
movsxd rdx, dword [r15 - 0x1f]
and byte [rbp - 0x537ecfcf], bpl
and ebx, dword [rax + 0x19]
test al, 0x50
lodsb al, byte [rsi]
insd dword [rdi], dx
sub al, 0xec
rol dword [rsi - 0x50], cl
mov edx, 0x38c3796f
cmp ebx, esp
jae 0x40366a
xchg eax, ecx
xor edx, dword [rsi]
xor byte [rbx + 0x4a], dl
enter -0x7b22, 0x73
imul r15d, dword [r15 + 0x69], 0x5e182114
movsxd r13, dword [r11 + 0x77]
call 0xe9e2cbf
jrcxz 0x4036d3
mov r9b, 0x43
pop rdi
xchg eax, edx
imul rbx, qword [r8 + 0x33040c8c], 0x33
adc byte [rax + 0x28], cl
adc al, 0xce
mov al, 0x20
mov cl, 5
test dword [rdx + 0x4c81821d], 0x81be4356
ror byte [rdx + rax], 1
xchg byte [rbp + 0x50], dh
xor dword [rcx + 0x38], edx
stosd dword [rdi], eax
insd dword [rdi], dx
xor r14b, byte [rax]
jge 0x403724
and dword [rsi + 0x10], esi
int3
lodsd eax, dword [rsi]
jbe 0x40370c
jmp 0xffffffffb5799cf6
pop rsp
test byte [rdi], dh
pop rdi
push r10
insb byte [rdi], dx
imul eax, dword [rcx + 0x3d6e676d], 0x40afec36
push rsi
push rdx
cmp rax, 0x4c065b38
xchg dword [rdi + 0x62120ad1], ebp
adc dword [rbx + 0x63d75b02], eax
cmp dword [rbx + 0x12], -0x68
pop rbp
sub dword [rbx], 0x523ae43
mul dword [rcx + rax + 0x6d45e236]
mov ch, 0x10
or al, 0x4d
sbb byte [rdx], ch
mov cl, 0xd9
fabs
movabs al, byte [0x839cdbb84bb77c34]
add byte [rax - 0x4b9247dd], ch
or al, bl
add byte [rbx - 0x24], dh
adc byte [rsi + 0x17], bl
fcmovne st(0), st(5)
outsb dx, byte [rsi]
jp 0x403786
adc dl, cl
and eax, dword [rcx + rsi + 0x57]
jo 0x40375f
ret 0x85e0
sub eax, 0x330e0c2b
and dh, byte ss:[rdi]
add al, 0xde
add al, 0x18
pushfq
cmc
sbb dword [rcx], ecx
mov byte fs:[rdx - 0x2f], cl
adc esi, dword [rdx - 0x70]
xor dword [rbx - 0x39], esp
xor byte [rdx], dh
adc dl, dh
or al, 0xa
mov ebx, 0x6ac2894b
fild word [rdx + rsi - 0x5f9db3b7]
push rdx
mov word [rcx - 0x59], ds
xor dword [rcx], esi
push rbx
cmc
imul ecx, dword [rcx], -0x74
mul byte [rcx + 0x53]
out 0xee, eax
sahf
int 0x85
pop rdi
int3
outsb dx, byte [rsi]
test esp, edx
jbe 0x40378b
push rdx
insb byte [rdi], dx
pop rcx
retf
jae 0x403737
in eax, dx
and byte [rbx + 5], ah
cmp bl, dl
cmp ah, byte [rip - 0x7b49cc10]
jp 0x403773
insb byte [rdi], dx
push rax
jbe 0x40371e
or byte [rcx + 0x46397162], dh
pop rdx
sub byte [rsi + 0x7650758b], bl
pop rdx
mov edx, 0xeb6c1dbb
shl dword [rsi + 0x33], 1
insb byte [rdi], dx
mov word [rdi + 0x32], ds
out dx, eax
xor eax, 0xc75b6ccd
sub cl, byte [rbp + 0x1f68864d]
imul esi, ebp, 0x1c
xchg eax, esp
insd dword [rdi], dx
iretd
xor al, 0x74
cdq
test byte [rbx], r10b
mov byte [rcx], dil
fdivr qword [rcx + 0x51]
sbb byte [rdx], ch
insd dword [rdi], dx
imul esp, dword [rax + 3], 0x4ac82677
xor al, byte [rip - 0x2b3dbb8d]
and eax, 0xfb26613f
insd dword [rdi], dx
sub byte fs:[rbp - 0x1a], bl
call 0x336f1543
sbb eax, 0x2713a169
cmp byte [rip + 0x4934c973], bh
pop r9
pushfq
or al, 0xf4
mov edx, 0xc37be70f
sar byte [rbx + 0x647f64aa], cl
mov dl, 0x70
sub al, 0x56
or edx, dword [rdx + 0x33]
sbb bl, byte [rcx]
popfq
xor esi, dword [rsp + rcx*2]
xor byte [r11 + 0x4b], dl
mov ebx, 0x7865cb66
mov dl, 0x70
push rsi
xor eax, 0xbcb67309
xor dword [rdi - 0x5c5669ea], edx
sub dword [rdi], 0x52
push rax
call 0x2155b84f
std
pop rdi
mov dh, 0x66
xor byte [rax + 0x37], al
iretd
fisub word [rsi + rbx + 0x5e]
adc ebp, -0x79
cmp bl, byte [rdi + 0x35]
fadd dword [rcx + 0x65]
sub dword [rax + 0x21448325], edx
nop
sbb eax, 0xac69c028
pop rsp
cmp dword [rcx + 0x1c], eax
pop rax
mov ebx, 0x832a64b3
leave
xor dword [rdi], ebx
pop rax
mov bl, 0xe7
faddp st(1)
imul esp, dword [rbx - 0x3f], 0x77b6cb02
bnd js 0x4038d5
imul esp, dword [rax - 0x3e], 0x975486b0
xor eax, dword [rbx - 0x6b]
cwde
pop rsp
fdiv dword [rcx]
xor byte [rbx - 0x306c37a7], cl
mov bl, 0x2f
and eax, 0x6d32275b
outsb dx, byte [rsi]
out dx, eax
sbb byte es:[rdx - 0x6d], al
push rdi
push 0x45375080
fisub word [rdi - 0x38]
add al, byte [rsi + rax*2 - 0x58]
xor eax, 0xcc36302d
in eax, dx
add al, byte [rax + 0x30]
enter 0x141b, 0x32
xchg byte [rdx], dl
xor eax, 0xab065ef4
cmp byte gs:[rdi], dh
xor qword [r8 + 0x75], r14
jae 0x403904
add al, 0x5a
movsd dword [rdi], dword ptr [rsi]
stosd dword [rdi], eax
loopne 0x40386c
leave
adc byte [rbp + 0x4b086c1b], 0x34
and byte [rax], cl
cmp al, 0x60
cmpsb byte [rsi], byte ptr [rdi]
leave
sub byte [rbp + rdx*8 - 0x6e], bh
push rsp
sub ah, byte [rdx]
stosd dword [rdi], eax
or dl, byte fs:[rdx + 0x2d04d6d]
rol byte [rcx], cl
sbb esi, dword [rcx]
pop rdx
add byte gs:[rbx], 0x1a
sbb dword [rbx], ebx
jbe 0x403890
add al, 0x7e
add bh, byte [rbx + rbp*4]
xchg eax, edx
xchg byte [rcx + rbx*2 + 0x6cac3ace], dl
push rdx
cdq
rcr byte [rax], 1
jrcxz 0x4038b3
scasb al, byte [rdi]
enter 0x31bc, -7
cmp dh, cl
xchg eax, ebp
add al, 0x2b
cli
adc eax, 0x81f792d8
cmp ebx, ecx
push 0x67b9d06b
xchg eax, esi
cmp byte [rax + 0x19], dh
add byte [rax], cl
lea esp, [rax - 0x7a]
pop rcx
sub dword [rax + 0x60], eax
test byte [rax + 0x4e], dh
sti
and dword [rax], 0xfffffff1
cwde
loope 0x403982
sub eax, 0x78ad591e
xor byte [rcx], ch
outsb dx, byte [rsi]
ja 0x4039be
add byte [rip - 0x16d9f7d3], 0x7b
sub eax, 0xcb5189d9
in al, 0xf9
pop rbx
test eax, 0x47329452
ror ebx, 1
movsxd rax, dword [rax + 0x78]
movsxd rdx, dword [rbp + 0x3b676132]
lodsb al, byte [rsi]
cdqe
insb byte [rdi], dx
mov ecx, 0x72561db1
xchg eax, ecx
adc al, byte [rsi + rdx*4 - 0x54]
sub byte [rbx + rax*2], dl
mov ecx, 0x1a330ccc
ja 0x403960
retf 0x6154
out 0xa, eax
sub dword [rbx], esp
sbb eax, 0xb5ab62d8
sbb dword [rip + 0x165efe46], edi
rcr byte [rcx - 0x10], 1
sub byte [rbp + 0x6d], 0x15
push rsp
push rdi
adc dword [rdi], 1
xchg eax, edx
pop rdx
xor edi, dword [rdx - 0x56d422d6]
xor byte [rcx + 0x4f], cl
cmp byte [rsp + rcx + 0xb], ah
fst st(6)
sbb dh, cl
pop rax
fdiv dword ss:[rax + 0x17]
and al, byte [rax + 0x52]
adc al, 0xef
scasd eax, dword [rdi]
nop
or dl, byte [rcx - 0x30649d43]
adc ebx, dword [rdx + rdx]
sub al, 0xc1
imul eax, edx, 0x242e0ca
jno 0x403a24
stc
push rsi
add eax, 0x6580b6d3
mov esi, 0xd5e0e2
insd dword [rdi], dx
jbe 0x403a48
adc al, 0x49
cmp bl, byte [rdi + 0x2d]
pop rcx
pop rbp
and eax, 0x1c06343c
push rsi
fmul dword [rdx]
imul eax, dword [rbp - 0x42], -0xf
hlt
or dl, byte [rbx - 0x3c]
test eax, 0x56aaae5
int 0x45
add al, 0x31
fadd dword [rsi + 0x3788c974]
xor cl, byte [rsi + 0x49]
mov eax, dword [rdx + rbp*4 + 0x30]
push rbp
lahf
cmp esi, dword [rcx]
loope 0x403a88
insb byte [rdi], dx
push rbx
mov dword gs:[rax + 0x58506275], ecx
imul r8d, dword [r9 + 0x3c63c934], 0x9a9c533a
pop r11
adc ah, byte [rax]
add dword [rdx], edx
iretd
add al, 0x72
sar byte [r8], cl
adc edi, -0x36
hlt
in eax, 0x71
mov ah, byte [rbx + rcx + 0x636d0e76]
add dword [rbx], ebx
and byte [rbx], cl
sal byte [rbx], 1
fsubr qword [rbx + 0x1b48aea4]
cmp dword [rax], esi
or dword [rdx + 0x60], ecx
push rsp
movabs byte [0x17f654ed4205ab33], al
cmp eax, 0x71917869
cmp byte [rcx - 0x45], ah
jb 0x403a74
outsd dx, dword [rsi]
push r8w
push rsp
cmpsb byte [rsi], byte ptr [rdi]
sbb al, 0x27
imul esi, dword [rcx], 0x717c812d
mov al, 0x37
or dword [rbx + 0x69f16545], ecx
jbe 0x403b1b
je 0x403a64
mov bl, 0x22
cmp dword [rsp + rax*8], 0xd9223245
sub dl, byte [rdx]
sub cl, byte ss:[rcx]
sbb al, 0x1d
adc ah, byte [rcx]
add edx, edx
int 0x38
jo 0x403ae4
call 0x5e5267fd
mov cl, 0xe6
out 4, al
ret 0x4ec0
in al, dx
cmp eax, 0x8ceae9bb
sbb eax, 0x2537ad37
adc r15b, byte [rdx + 0x2f]
scasd eax, dword [rdi]
mov ebx, 0x9a8c969e
test edx, esp
test al, 0x1b
movsxd rbp, dword [rdx]
movabs dword [0x2d02b54206347f06], eax
repne scasb al, byte [rdi]
jb 0x403b2a
add al, byte [rsi + rcx]
adc eax, 0xdd259693
fstp dword [rax + 0x2d]
add al, 0x96
push r11
in eax, dx
ret 0x8421
movsxd rbp, dword [rbx + rdi*4 + 0x53]
pop rdi
mov bl, 0xb
xor dh, byte [rdx]
adc byte [rsi], dh
and esp, dword [rbx + 0x543d62eb]
mov bl, 0x65
jno 0x403ad0
pop rcx
jo 0x403b5b
add al, dh
leave
add al, 0x52
scasd eax, dword [rdi]
push qword [rbp + rax - 0x7f]
mov al, 0x60
movsd dword [rdi], dword ptr [rsi]
mov dword [rdx + 0x19], eax
adc dword [rdi + 0x1c27604b], 0x11
push rdx
sub al, 0x11
insd dword [rdi], dx
pop rax
pop rax
mov dword [rax - 0x3d], esp
jnp 0x403afe
push rsi
sbb bx, word [rbp + 0x11ca3755]
add al, 0xc0
pop rsi
dec byte [rax + 0x59]
jno 0x403b50
jmp qword [rax + 0x6eeb7475]
jo 0x403b74
jbe 0x403af5
push rdx
pop rdi
push -0x47b1c37c
scasd eax, dword [rdi]
jnp 0x403ba0
test byte [rsi + 0x32], dl
enter -0x6ecc, -0x73
cmp al, 0x35
adc bpl, byte [rdx + 0x58]
movabs al, byte [0x8379bdc530400c1a]
xor dword [rdx], esp
and esi, dword [rdi + 0x48844b4b]
xchg eax, esp
add ch, ch
mov ch, 0xa2
add al, 0x42
mov esp, cs
xor dword [rdx + r9*8 - 0x44], 0x493d746c
test dword [rax], ecx
xor dword [rcx], 0x14
add dh, cl
mov r13b, r9b
insd dword [rdi], dx
imul esp, dword [rbp - 0x80], 0x54
add al, al
lodsb al, byte [rsi]
sbb byte [rax], al
sub eax, dword [rsi]
pop rax
cmp dword [rcx - 0x68], ebx
pop rbx
fadd dword [rbp + 0x4f]
sti
scasb al, byte [rdi]
sbb al, cl
xor eax, 0x383d9b6
mov byte [rsp + rbp*8 + 0x1a], dl
or eax, 0x116dc024
push rsi
cmp eax, 0x30298a2f
mov dh, 0x37
sbb byte [rsi + rbx - 0x1698e23f], bl
pop rdi
sbb byte [rsp + rax*4 + 0x16606242], cl
outsd dx, dword [rsi]
jb 0x403c44
mov r15d, 0x8f6aac0f
push rbp
nop
mov dl, 0xd5
insd dword [rdi], dx
pop rbx
loope 0x403b94
cmp byte [rax], cl
movsxd rdx, dword [rcx]
jns 0x403c3a
call 0xffffffffa0729430
pop rdi
mov dword [rax - 0x7dfff4ff], eax
xchg eax, esi
add ecx, dword [rbx]
ret
push rdx
push rax
xor byte [rsp + rbx*2], dh
cmp dword [rcx], esp
or byte [rbx + 0x1078a4ad], ch
add al, 0x88
and bh, byte [rax - 0x7dc9aa80]
mov bl, 5
or esp, ebx
adc ch, byte [rdi]
lodsb al, byte [rsi]
int1
xchg eax, ebp
xor cl, byte [rax + 0x30196dbc]
jb 0x403c80
pop rdx
xor eax, 0x1a43aba
xor byte [rdx], bh
movsxd rsi, dword [rax]
xor al, byte [rbx + 0x1d]
and al, byte [rax + 0x20]
or byte [rax - 0x3e], ch
stosb byte [rdi], al
lea edx, [rdx - 0x42]
outsb dx, byte [rsi]
imul eax, dword [rax], 9
xor byte [rax - 0x3c], bh
or byte [rcx + rbx*2 - 0x40], bl
and al, 0x98
xor edi, eax
insd dword [rdi], dx
imul esp, eax, 0xd9058d80
jo 0x403cc3
cdq
test byte [rax], dl
push 0x49216905
test byte [rdx], al
mov r10b, 0xbc
and al, 0x31
sub cl, dl
iretd
movabs eax, dword [0x24b2c2a5b6525604]
sal dword [rdx + rsi*2], 0x42
sbb eax, 0x47809a3
mov ebx, 0x407663f1
sti
pop rsi
or al, 0xe
cmp esi, eax
and bl, byte [rax*2 - 0x30949dd2]
or eax, 0xe487b937
jns 0x403c77
jae 0x403d35
cdq
xor edx, dword [rax]
and ebx, dword [rcx]
fadd dword [rbp + 0x10]
pop rsp
lodsd eax, dword [rsi]
and dword [rbx], ebp
xor edx, dword [rdi - 0x37]
jbe 0x403c65
pop r8
mov ebx, 0x50457343
mov dh, 0x59
sbb eax, 0x3c14206a
ret
rol byte [rbp + 8], 1
push qword [rax - 0x49]
mov spl, 0x8c
popfq
mov ecx, 0x3a2d6c65
shl dword [rax + 0x1084a492], 0x42
mov cs, eax
pop rax
mov word [rax], cs
leave
mov bh, 0x6d
jbe 0x403d78
xchg dl, dl
push rsi
movabs dword [0xb30644ea76756f4e], eax
push rcx
in eax, dx
xchg eax, ebp
adc ecx, dword [rax - 0x4d]
and al, bh
mov ah, 0x33
xlatb
mov edx, 0x6d491e14
push rsp
xor al, byte [rdx]
shl byte [rax - 0x7d457f70], cl
adc byte [rdx + 0x9a80bc4], bl
jmp 0x403d7c
adc dl, byte [rcx]
add ch, byte [rdx + 0x50]
push rdx
movsd dword [rdi], dword ptr gs:[rsi]
movsb byte [rdi], byte ptr [rsi]
mov dh, 7
push rbx
test eax, 0x2c597a60
add edx, dword [rdx + 3]
jle 0x403d7f
add ah, byte [rip + 0x44a63147]
add dword [rdx + rax*4], 0x84ad5de5
nop
movabs eax, dword [0x68de48190a1d96df]
mov al, 0xda
and al, byte [rcx + rbp*8 + 0x41512e4a]
call 0xffffffffa11fd809
loopne 0x403de8
loopne 0x403d1f
test al, 0x5f
or eax, 0x2c098a22
test bh, cl
jg 0x403deb
or edx, dword [rcx]
in eax, 0x51
jo 0x403d57
lodsd eax, dword [rsi]
lodsd eax, dword [rsi]
movsb byte [rdi], byte ptr [rsi]
fist word [rsi - 0x4f]
insb byte [edi], dx
or byte [rcx + 0x695a084c], al
xchg eax, edx
add edx, dword [rdx]
mov cs, word [rcx + 0x77]
xchg eax, esi
add edx, dword fs:[rdx + 0x78]
xor dword [rcx], ebx
xor eax, 0xf8b7f72b
mov bl, 0x5d
nop
cmp byte [rcx - 0x33c9baaa], ah
ret 0x8209
mov al, 0x41
xor dword [rbx + 0x31], eax
and al, byte [rbx - 0x1bf730aa]
pop rax
xor eax, 0x5548da21
push rdx
test dword [rbx + rbx + 0x136453a2], ecx
in al, 0x50
add rax, -0x4abd6ba8
lodsb al, byte [rsi]
test al, 0xab
sub eax, 0x2e4ca5a1
push rsi
xor bl, byte [rcx - 0x48]
mov bl, 0x43
movabs al, byte [0x6d6b496a30401e64]
or byte [rcx - 0x6f1c18c4], ch
add eax, 0xd3535028
outsd dx, dword [rsi]
or al, byte [rdx + rax + 0x765fe929]
xor byte [rsi + 0x5615486c], al
sbb byte [rbx], ch
stosb byte [rdi], al
xchg eax, edx
scasd eax, dword [rdi]
push rsi
xchg eax, edi
adc dh, byte [rip + 0x442562c0]
js 0x403da9
and eax, 0x84064bc5
mov ch, 0x46
and eax, esi
add byte [rsi - 0x6ca724e2], al
or eax, eax
push 0x42
xor bh, byte [rbx]
test dword [rax], edx
pop rsi
xor dword [rcx + 0x30], esp
adc al, byte [rip + 0xa553f0a]
sub eax, 0x6920b034
je 0x403ea4
jne 0x403e8d
and eax, 0x291b0d40
and eax, 0x60148230
jo 0x403e2c
imul ecx, dword [rsi - 0x27], 0x892ab117
cdq
jle 0x403e92
or dword [rax + 0x454c7092], esi
movsxd rsi, dword [rsi - 0x2e4fd157]
xor esp, dword [rbx]
push 0x75
and byte [rdx - 0x4d6e687e], dh
xchg eax, ebp
sub byte [rax - 0x6ab5f3c4], bl
mov bl, 0x69
xor esi, dword [rdx]
lea ebp, [rdx]
push rdx
lodsb al, byte [rsi]
mov dl, 0xd8
enter -0x7bde, 0x4d
cmc
adc qword [r8], r11
jo 0x403e4b
stosb byte [rdi], al
in eax, 0x40
mov dl, cl
xor edx, dword [rcx + rsi + 0x22]
stosd dword [rdi], eax
jo 0x403ec0
mov bl, 0x45
jle 0x403efe
cmp byte [rax], dl
mov cl, 0xc2
add byte [rsi], ch
jae 0x403f35
insd dword [rdi], dx
mov ebx, 0x7627505
je 0x403f38
push -0x291a51f7
mov ch, 0x4f
mov esi, 0x6f6e0770
shr byte cs:[rdi + 8], 1
test al, 0x2d
fmul qword [rip + 0x75622e56]
imul ebx, esi, 0x6cfd8b5a
sub eax, 0xd006469
jb 0x403f25
or dword [rcx + rdi*2 + 0x6e], esp
cmp eax, 0x4fe66d66
sbb dword [r11], r9d
xchg byte [rbx + 0xcc856b0], bl
pop rdi
sbb esp, dword [rip - 0x74a13eea]
sub byte [rcx], cl
and al, 0xdb
pop rsi
sbb esi, 0x74
jb 0x403eba
or ch, byte [rdi + rbp*2]
or byte [rdi], dl
in al, 0x4a
cmp dword [rcx + 5], 0xc7a835e
mov dh, 0x24
outsd dx, dword [rsi]
push -0x348bd734
push 0x5d0d7264
movsxd rax, dword [rsp + rax]
retf 0x4175
xchg eax, esp
mov ebp, 0xc5aa116c
insb byte [rdi], dx
xchg eax, esi
or ebp, dword [r10 + 0x63]
jb 0x403ee7
int3
outsw dx, word [rsi]
movabs eax, dword [0x1ad5e7b68003736]
mov ch, 0x42
in al, dx
add al, 0xfc
push rdx
adc eax, 0xfd6d955c
add byte [rax], al
sbb eax, dword [rcx - 0x34]
movabs byte [0x9766f672439e5b66], al
sbb al, 1
or al, 0x48
xor esp, dword [rbx]
push rsp
or al, 0xc9
and byte [rbx - 0x7cfbdfac], al
or al, 0xc9
nop
xor dword [rsp + rsi*2 + 0x77], esi
leave
and byte [rsp + rax*2], ah
jg 0x403f82
inc dword [rsi]
sbb esp, esp
nop
outsd dx, dword [rsi]
cwde
cwde
cmp byte [rsi + 0x5419064], al
or byte [rsi + 0x64], cl
mov al, 1
imul ecx, dword [rbx], 0x26d03fd0
wait
pushfq
sbb eax, 0x6fb0450
sbb byte [rax + rdx*4], bl
adc byte [rdi], bh
push rsi
add esp, dword [rax]
pop rbp
and al, 0x4f
sahf
and byte [rdi], al
pop rsi
leave
xchg eax, ebx
add edx, edx
mov edi, 0xf60df6ff
or eax, 0xc90d90dd
pop rsp
add al, byte [rdi]
imul edi, dword [rdi], -2
fidivr word [rcx]
and byte [rax + 0xe], bl
cmpsd dword [rsi], dword ptr [rdi]
nop
xor byte [rbp - 0x6d], ah
jp 0x404056
xchg eax, ebx
ret
push rbx
call 0x42565cf7
inc qword [rdx + rsi*8 + 0x3f8320e4]
xor byte [rdi], cl
xor byte [rdi], cl
sbb byte [rax + 0x2e], al
jns 0x403fac
add ebx, dword [rcx]
mov fs, word [rsi + 0x54]
xchg eax, ebx
adc eax, dword [r14]
mov bh, 0x36
xchg eax, esp
pushfq
lcall [rdx]
mov dword [rdi], edi
in al, dx
xor byte [rdx], ah
adc r13, qword [r15]
add byte [rdx], 0x10
xchg eax, esp
jo 0x40405d
and al, byte [rdx + 0x77]
mov r14b, 0xc0
setge byte [rdi]
nop
outsb dx, byte [esi]
xor dl, byte [rax + 0x3f727f07]
cmp dword [rdi + rax*4 + 0x2d], esp
add byte [rbx + 0x345504ff], ah
xchg eax, esp
pushfq
cmp al, 4
push rbp
or dword [rcx - 0x6f27cdf4], ebp
mov edi, 0xfe203f20
xchg eax, ecx
or al, 0xc9
nop
and byte [rcx - 0x261b0dbb], dh
push rsi
jg 0x404086
push rsi
add al, 0x4d
mov cl, byte [rax]
leave
mov edi, 0x3c91763f
rol dword [rdi], 0x3f
adc cl, cl
jg 0x40405e
leave
xchg eax, ebx
insb byte [rdi], dx
insb byte [rdi], dx
or al, 1
xor dword [rcx - 0x46], ebp
mov ebx, ebx
add esi, dword [rdx - 0x3e]
wait
add eax, 0x10bf0777
xor ah, byte [rax]
fst qword [rax - 0x19]
psubb mm1, mm6
add eax, 0xff076e08
or dword ss:[rcx], edx
retf
outsd dx, dword [rsi]
outsb dx, byte [rsi]
int 0x96
je 0x4040af
clc
wait
in al, 0xe4
cdq
wait
jg 0x4040a9
add dword [rsi], eax
mov dh, 0x90
xchg byte [r8], dl
cwde
mov edi, 0xc83245c8
outsd dx, dword [rsi]
outsd dx, dword [rsi]
or cl, cl
mov bl, 0x21
cmp dword [rcx], eax
add dword [rax + 0x3f], esi
add byte [rax + 0x10], dh
xchg eax, edx
mov esp, esp
push rax
add dword [rdx], ecx
add dword [rdx + 0x76f509b], eax
jg 0x40407d
or al, 0x48
ja 0x4040f6
or byte [rax + 7], ah
xor al, byte [rsi + 0x15bf8f81]
add dword [rax], edi
sub al, 0x64
xor byte [rdi], dl
xor al, 0x66
xchg dword [rbp + 0x1107bf30], eax
jnp 0x404095
jo 0x4040d0
add al, ah
sar byte [rdi - 0x4f46fee2], 0x65
sub al, 0xbb
jg 0x4040ab
and ch, cl
leave
xlatb
lcall [rax]
cmp al, 0x39
test byte [rip - 0x75bf80f7], cl
movabs al, byte [0x909160000036]
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x25f7fdea], ecx
xchg eax, ecx
jmp 0x40419e
push rax
push rax
popfq
imul esp, dword [rax + 0x12000058], 0x15
retf 0
add al, 0
sal esp, cl
add byte [rax], al
add bh, bh
