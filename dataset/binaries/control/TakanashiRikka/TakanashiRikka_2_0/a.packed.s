call 0x401a70
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401888
add ebx, ebx
je 0x40183e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x401876
cmp rbp, -4
ja 0x401876
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x40185e
add ecx, 4
mov dl, byte [rax]
je 0x401886
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x401876
ret
cld
pop r11
cmp r8b, 2
je 0x40189e
jmp 0x40191b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x4018ae
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401896
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x4018c6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x4018b3
sub eax, 3
jb 0x4018e4
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40191b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x40190b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401909
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4018f8
cmp rbp, -0xd00
adc ecx, eax
call 0x40184a
jmp 0x40189e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4019f4
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401992
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x4019de
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x4019b1
push 0x3a707474
jne 0x401a0a
js 0x4019ca
jae 0x401a04
outsb dx, byte cs:[rsi]
je 0x4019c3
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x401a31
jb 0x401a23
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x401a4e
jb 0x401a61
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21401e
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21401e
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x40192c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x401a57
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401a05
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f1aff
jb 0x401b17
movsxd rbp, dword [rdi]
jae 0x401b11
insb byte [rdi], dx
js 0x401b17
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401af7
cmp rsi, rcx
jae 0x401aff
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x401ade
cmp al, 0x8f
ja 0x401ade
cmp byte [rsi - 2], 0xf
je 0x401ae4
sub al, 0xe8
jg 0x401ae1
push rdi
cmp al, 1
ja 0x401acc
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x401acf
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x401afc
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401b53
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1fd1
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401b97
mov al, 0xa
jmp 0x401b97
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401b73
inc ebx
mov al, 0
jmp 0x401b9b
mov al, 2
jmp 0x401b9b
mov al, 3
jmp 0x401b9b
mov al, 0x3c
jmp 0x401b9b
push rcx
rcr ah, 1
fstp st(7)
jle 0x401bdc
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x401bee
jg 0x401be0
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a7363
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x401c3a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6db7
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x401c42
cmp esi, 0x21585055
jne 0x401c46
jge 0x401c38
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x401c3b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x401c3f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x401ceb
pop rcx
or al, 0x3b
jb 0x401cf1
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401c63
jmp 0x401c65
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661ba6
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf53dee
in eax, dx
jg 0x401c9d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401ce3
mov bh, 0x2a
add edi, 0x10
jmp 0x401ce0
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x401d1d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401d59
jne 0x401d70
fstpnce st(6), st(0)
jle 0x401d39
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x401d6f
jrcxz 0x401da3
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1bd07
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401e22
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401de2
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x582963b7
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x401e55
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x401def
and ecx, 7
or al, 0xeb
jae 0x401e5a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x401e8f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x401ecd
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401e86
push rax
call 0xffffffff868d1b73
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401e90
std
cmp edi, esi
xchg eax, edi
jle 0x401ee5
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96471
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401ee3
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401ed1
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x401efa
js 0x401f3a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x401fcc
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad3207
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x401fed
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401ff2
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21aa4
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401f80
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
stosb byte [rdi], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
nop
nop
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jmp qword [rax + 0x36]
add byte [rax], al
add edx, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4020a6
je 0x4020af
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402078
mov dh, 0x7d
jbe 0x402077
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
fcom dword [rsi + 0x21e40]
push rsp
add dword [rdi + rbp - 0x38], esi
adc ecx, eax
adc eax, dword [rax + rax]
cwde
add eax, 0x3f2d000
in al, 0x13
add byte [rax + 5], al
add byte [rdx], cl
sahf
ror dl, 1
or byte [rdi], dl
or dword [rax], eax
rol byte [rbx], 0x6c
wait
or sil, byte [rcx]
or byte [rdi - 0x693fc1c0], cl
or ecx, dword [rcx]
or al, 0
lodsb al, byte [rsi]
sbb al, 0x60
lahf
or eax, 0x8f0b3000
add edx, esi
or dword [rdi], ecx
add byte [rbx + rbp + 0x10], ah
add byte [rax - 7], dh
add al, 0xf2
add al, 0x11
add byte [rax + 0x2ef00012], dh
jg 0x402043
cld
add byte [rbx], dl
add byte [rsp + rdi + 0x3de80014], bh
and byte [r15], r9b
and byte [rip + 0x16f800], dl
add byte [rsi], ah
nop
seto byte [rsi]
add byte [rax], cl
sbb byte [rax + 0x47d900e5], dh
sbb dword [rax + 0x17], eax
nop
nop
nop dword [rax]
mov al, 0x1b
add al, ah
repne outsb dx, byte [rsi]
retf 0x1c26
adc eax, dword [rcx]
add al, 0
int1
jmp rcx
retf 0x4762
or al, 0x1b
mov edi, 0x1b069719
xchg eax, edx
cmpsb byte [rsi], byte ptr [rdi]
add dh, byte [rax + 0x1b]
mov al, 0x21
sbb dword [rax + rcx*2 + 0x2e], esp
lock or dword [rip + 0x5f44bdd2], 0xffffffa7
lock add dword [rdi], edx
push rbx
mov ebx, 0x7a4f2212
adc byte [r11 + r13], r9b
and dword [rdx + 0x21], esi
xchg byte [rdi - 0x4f798e2e], dl
movsd dword [rdi], dword ptr [rsi]
xlatb
stosd dword [rdi], eax
js 0x4020cc
wait
insb byte [rdi], dx
ja 0x402107
jo 0x4020c5
insb byte [rdi], dx
wait
jns 0x402137
xchg eax, ebx
sbb dword [rbp + rbx - 0x3ce8eded], 0x1a
add dword [rbx + 0x28], esi
nop
adc eax, 0xe3012b67
pop rbp
enter -0x7873, -0x48
cmp al, 0x39
pop rax
or byte [rdi + 0x45], al
cwde
xchg eax, ebp
adc dword [rbx + 0x4758e732], edi
push bx
ret 0x6ed8
adc al, 0x67
jg 0x40219b
xchg eax, ebp
adc dword [rbx + 0x47924f12], ebx
mov bh, 0x30
fstp qword ss:[rbx + 0x167a22ef]
xor dword [rdi + 0x72c80360], ebx
or spl, byte [rax]
mov dh, 0x2f
sbb esp, ebp
in al, 0x6e
and eax, 0x9ae61723
sbb eax, 0x2720c286
adc al, 0x4c
sbb eax, 0x657b3c9c
add byte [rax], ch
add al, byte [rdi - 0x40]
mov ecx, eax
leave
xchg eax, ebx
and dword [rsi + 2], 0x32
sbb al, byte [rsi - 0x14]
ficom word [rax]
xor bl, byte [rdx + 0x602f17ae]
sub ecx, eax
xchg eax, ebx
sbb dword [rbp + 0x2bea702], -0x26
and dword [rax], esp
iretd
pop rsi
or r13b, byte [rdi]
or ebp, dword [rdx]
cmp dword [rbx], edi
enter 0x7cf1, 0x28
nop dword [rbx]
jb 0x402182
mov bl, 0x27
adc ebp, dword [rdi]
nop
xor dword [rbx], eax
cmp dword [rcx + 0x78], edi
sbb dh, byte [rax + 0x64]
sbb dword [rax + rdx*4 - 0x2e], esp
movsd dword [rdi], dword ptr [rsi]
sub dword [rsi - 0x70], esi
sbb ah, ah
and byte [rdi + 0x17b39061], cl
adc eax, dword [rdi + rdi*4]
or ebp, dword [rdi + 0x7279390]
cmp byte [rsp + rbx], al
adc eax, 0xb2bb0868
jae 0x402283
add al, 0
cmp dword [rbx], edi
insb byte [rdi], dx
jp 0x402295
adc al, 0x77
cqo
adc ebx, dword [rsi - 0x38]
xchg eax, r10d
and eax, 0x29704be
cmp eax, ecx
leave
shr byte [rdx], cl
sbb esp, ecx
add al, 0xe1
test dword [rsp + rbp*8], ebx
cmc
sbb eax, 0x277f0519
sahf
cmp eax, 0xcbef0ea0
add ah, byte [rbx]
add eax, 0x9072799e
xchg eax, ebx
and eax, 0xfe053326
and dword [rbx], ecx
jns 0x402232
or esp, dword [rdx + 5]
or esp, dword [edi]
xor dword [rcx + 0x72], 0xffffffb0
xchg eax, esp
push rax
mov eax, 0x220caf67
ja 0x402237
add eax, 0x81760ed7
mov esp, 0x5bd1d90
xlatb
mov bl, 0x43
enter -0x13f0, 0x11
pop rdi
xor bl, al
leave
pop rsp
sbb al, 0x11
xor al, 0x96
jb 0x402238
jne 0x4022f6
movabs al, byte [0xd27e9a720c83931b]
and eax, 0x90641c9d
mov dh, 0xab
mov fs, word [rdi]
in al, 0x20
xlatb
enter -0x1ffa, 0x13
out dx, al
in al, 0xc9
or eax, dword [rsi + rax - 0x7f8f251]
sahf
sbb al, 0xe4
push rdx
cmp dword [rdi], eax
or al, 0x6a
test byte [rdi], dl
fiadd word [rcx - 0x57]
or ebx, ecx
sub eax, 0xf760fe20
jnp 0x40226c
sbb al, 0x79
and byte [rdx + 1], bh
imul eax, dword [rdi], 0xc727932f
js 0x40235e
mov edi, 0x76c01b8
sahf
sbb al, 0x92
ficom dword [rbx - 0x7ce1d5f9]
movsb byte [rdi], byte ptr [rsi]
enter -0x39bf, 7
loopne 0x40231a
ja 0x402364
jb 0x40230a
jmp 0x40232c
adc ch, al
push rdx
adc al, 0xbb
sar byte [rax + 0x21], 0xf
or byte [rdi + 0x3e], dl
cmp dword [rax + 0x27], ecx
test byte [rip + 0x85a2f2d], dl
cmp al, 0xe1
test dword [rsi + rbp*8], edi
adc eax, 0xc3670880
sub dword [rcx], ecx
stc
in al, dx
test dword [rbp + 0xa80a708], esi
sbb spl, byte [r8 + rsi*4 - 0x26]
hlt
cmpsd dword gs:[rsi], dword ptr [rdi]
mov word [rdi], ss
enter 0x931, 0x4d
or edi, esp
mov byte [rsi], ah
loope 0x40235f
adc dword [rdi], 0x9cb70981
xchg eax, edi
ret 0x1425
add al, 0x4f
stosd dword [rdi], eax
or esp, esp
and byte [rdi], ah
and dh, byte [rdi - 0x1a]
or esp, esp
in al, 0xd9
or edi, ecx
or dword [rdi + 0x745828a5], esp
jo 0x402304
sbb al, 0x26
or al, byte [rax + 0x2f]
adc byte [rcx - 0x32], al
cmp byte [rax + 0x2cb70a4d], al
sahf
jno 0x402325
jl 0x4023a2
sbb ah, cl
add dword [rdx - 0x14], esi
xchg eax, ebx
lodsb al, byte [rsi]
or ah, byte [rax + 0x702f627d]
add edx, dword [rax - 0x4f8df16d]
scasb al, byte [rdi]
and dword [rdi + 0x790bd61f], edi
jb 0x40237f
or dh, byte [rdx + 0x4f0af414]
jb 0x402385
or edi, dword [rcx + 0x12]
adc al, 0x1c
or esp, dword [rdi]
std
in al, 0x20
or al, 0x29
xor al, 0xb
call 0xffffffffbd4999ee
jl 0x4023e2
or byte [rdi + 0x76], dh
and dword [rdi + 0xe], ecx
or ebp, dword [rax + 0x1f]
popfq
xchg eax, r8d
xchg eax, esp
sbb al, 0x7a
loopne 0x402453
int 0x62
and byte [rdi + 0x790bc797], bl
jbe 0x402441
out 0x2c, eax
jmp 0x402409
xlatb
and byte [rax], r12b
cmp dword [rbx + 0x28], eax
or al, 0x87
test dword [rcx + rdi], edi
fsubr dword [rbx]
or al, 0x26
adc edx, dword [rdi]
xchg eax, edx
imul eax, edx, 0x779f4f3e
push rsi
xchg esp, esp
movsb byte [rdi], byte ptr [rsi]
or al, 0x17
cmp byte [rsi + 0xc], bh
ja 0x4023b9
test ebp, ebx
add eax, 0x21117a3
fxch st(0), st(0)
and byte [rdi], ah
sbb ebp, dword [rdi + 0x3a1d2a47]
cmp dword [rcx], edi
enter 0x59d1, 0x2a
js 0x402479
or eax, 0x27243b3c
mov eax, 0xe0a70d44
jnp 0x4023fe
or ebp, esp
test dword [rdi + 0xd], eax
pop rdi
imul ebp, dword [rdi], 0x64c64d83
fsub st(7)
imul ebp, dword [rdi], 0x68
and byte [rdi], al
cmp dword [rcx - 0x67eb20d8], ecx
or eax, 0x5eb3d217
ror byte [rip - 0x70d50f21], 0xd0
jb 0x402468
test byte [rip + 0x621af667], cl
or eax, 0x4f2178cf
sbb dil, dil
or eax, 0x191b583f
cmp al, 0x7b
and dword [rip + 0x2161170e], esi
ja 0x402489
add bh, byte [rcx]
enter 0x6510, 0xe
jb 0x4024aa
loop 0x40242f
pushfq
xchg rax, r10
sahf
xchg eax, edi
mov bl, 0x5e
and byte [rbp - 0x24e8f13d], bh
nop
sbb al, 0x92
mov dl, 0xf5
lcall [rdi + rdx]
sahf
mov ebp, 0x662f0f12
sbb edi, dword [rcx]
sbb esp, esp
in al, 0xc9
push rdx
sysenter
xor al, 0x86
jp 0x402450
jno 0x4024d9
ja 0x5a2434b6
mov esp, 0xff367c0
inc dword [rcx]
and eax, 0x2f4605e0
and dword [rax], edx
pop rdi
adc byte [rdi + rdi], ah
mov ebp, 0x10858740
cmpsd dword [rsi], dword ptr [rdi]
sbb al, byte [rax]
rcr byte [rsi - 0x38], 0x13
cmp cl, byte [rcx + 0x16aca710]
stosd dword [rdi], eax
adc byte [rax + 0x78], bh
and edi, ecx
ja 0x40253c
and edx, ebx
adc byte [rbx + 0x749c9b1b], ah
retf -0x1919
adc bh, dl
cmp cl, byte [rbx]
mov esp, 0xb7859e40
adc dword [rdi], esp
adc dword [rax], esp
mov esp, 0xb10f6790
pop rbp
adc dword [rdi], eax
nop
xchg eax, ebx
sbb dword [rbp + 0x79], 0x47
scasb al, byte [rdi]
push rcx
fadd dword [rbp + 0x6aa9641c]
sub eax, edx
ja 0x4025b5
ror byte [rbx], cl
cmp dword [rbp + 0x1c], ebp
sub dword [rcx], eax
add byte [rcx - 0x41], al
enter 0x2793, 0x3d
adc byte [rbp + 0x40179c2f], bh
js 0x402516
or eax, dword [rsi + rbx*2 + 0x26d71203]
adc ch, byte [rdi]
adc byte [rax - 0x7f], bh
rsqrtps xmm2, xmmword [rdx]
outsd dx, dword [rsi]
jle 0x402575
in al, 0x59
xchg eax, edi
outsd dx, dword [rsi]
sbb eax, 0x4fff1294
sahf
cmp al, 0x79
fisub word [rdx]
and eax, dword [rdx]
mov esi, 0xfc271912
and dword [rsi + 0x7f], eax
js 0x402502
hlt
add ah, cl
test dl, dl
adc dh, byte [rdi]
out 0x12, eax
nop
adc ebx, dword [rsi + 0x60]
mov dword [rsi], 0x763cf713
sbb dword [rsp + rbp*2], 0x134e473e
push 0x17
mov esp, 0x9010e840
adc ecx, dword [rdi - 0x6f8dec3c]
xchg eax, ebx
jno 0x4025cf
not dword cs:[rbx]
add al, byte [rcx + 0x1c6c7243]
adc al, 0xcf
adc ebx, dword [rsi + 0x20]
cmc
pop rcx
adc al, 0xcf
js 0x4025d6
idiv dword [rax + rax*8 + 0x21a0c85e]
stosd dword [rdi], eax
adc al, 0xa7
leave
adc al, 0x1f
in al, 9
iretd
mov ebp, dword [rax]
or byte [rip + 0x4121acf], dl
cmp esp, dword [rip - 0x28b8eaf1]
test dword [rcx + rax*4], edi
xor byte [rip + 0x27211c27], dl
add ch, bl
adc eax, 0x6f156df7
push rsi
or byte [rax + rdx*4 + 0x3f159929], bh
mov ebx, 0xb02ec21b
adc eax, 0xe617cebf
add al, 0x78
and dword [rdi], eax
nop
and byte [rsi + rdx], dl
xchg eax, edi
js 0x402594
ror dword [rcx], 1
sub al, 0x16
not dword [rdx + 0x16]
xchg dword [rbp - 0x38], ebx
mov bl, 0x87
sub byte es:[rax - 0x7c6fead1], al
pop rbp
or byte [rdi - 0x4e], ah
and eax, 0xbd09c90e
std
std
xor edx, dword [rdi]
sbb dh, byte [rdx - 0xe]
add al, 0xe7
add byte [rdi], bl
xor eax, ecx
xchg byte [rcx + rax*2 + 0x7997e877], ch
xor ebx, r8d
leave
xchg eax, esi
cdq
adc dh, byte [rcx + 6]
cmp ecx, ebx
cmpsd dword [rsi], dword ptr [rdi]
imul edx, dword [rcx], -0x58
retf 0x33c8
pop rsi
xchg rax, r15
sahf
xchg dword [rbx + 0x2c0b4a1f], eax
pop rsi
push rdi
iretd
inc dword [rdx]
or dword [rdi + rsi*4], ebp
movsxd rsp, dword [rbx + 0x72]
je 0x4026ea
je 0x4026ee
mov r13b, 0xff
in eax, 0x66
movsxd rbx, dword cs:[rdi + 0x4a]
push r10
pop rdi
push r11
push rsp
or eax, ecx
ja 0x40268e
mov bh, 0xf6
jb 0x4026f8
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x4026c3
outsd dx, dword fs:[rsi]
pop rdi
mov edi, 0x67b7b7fd
or esp, dword [rdx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x402713
jne 0x40272f
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x402728
sti
or ebp, esp
outsd dx, dword [rsi]
sub dword [rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bp, word [rsi + 0x69], 0x7608
imul esi, eax, 0x7f
jb 0x402747
jns 0x402737
outsb dx, byte gs:[rsi]
je 0x40274e
jns 0x40271f
or ch, byte [rbp + 0x65]
and dh, dl
or eax, 0x6d75fb98
insd dword [rdi], dx
jns 0x40271d
or eax, 0x2a74295f
fild qword [rsi + 0x13]
pushfq
jo 0x402768
and al, 0x5a
push rbx
je 0x402749
xor dword [rcx], edi
jo 0x40276a
movsxd rsp, dword gs:[rbp + 0x77]
mov bl, 0x6f
pop rbx
imul ebx, dword [rcx - 0x609188d3], 0x72
jne 0x402774
je 0x40272d
jnp 0x4026ce
cmp byte [rbp + 0x69], al
outsd dx, dword [rsi]
cmp ebp, dword [rcx]
xor edi, dword [rdi - 0x7c]
pop rdx
jne 0x402712
movsxd rsp, dword [rcx - 0x7f]
adc al, 0x34
xor dword [rcx], esp
xor byte [rdx + 0x10dd8dbb], bl
imul esp, dword [rbx + 0x62], 0x7a691f69
or eax, 0xb66fed45
fstp qword [rdi]
outsb dx, byte [rsi]
jnp 0x4027aa
wrmsr
imul ebp, dword [rcx + 0x2f], 0xfddfbbfe
xor r14b, byte [rbp + 0x62]
pop rdi
pop r15
movsb byte [rdi], byte ptr [rsi]
push rdx
pop r15
xchg eax, esi
wait
ror byte [rdx], 1
sub al, 0xb
push rbp
test qword [rdi + 0x4820c1ec], rbx
push rdx
cmp eax, 0x5346464f
test qword [r13 - 0x28], r9
sti
push rsp
sub r11b, r11b
adc dh, dl
fucomp st(6)
mov edx, 0x44bc729b
pop rcx
mov r8b, 0x4e
fidivr dword [rdi - 0x69ca2403]
jno 0x40281a
imul rdx, qword gs:[r11 + 0x61], 0x43454503
xor al, byte [rbp + 0x4f]
push rbx
vminpd xmm7, xmm11, xmmword [rax - 5]
sbb bh, byte [rcx]
cmp ah, byte [rdi + 0x6e]
jne 0x4027c1
js 0x402838
call 0x4bf6d85f
jbe 0x40283e
pop rdi
in al, dx
xor dword [rax], esi
xor eax, 0xcedbdb0f
jle 0x402838
push r8
imul ebp, dword [rbp + 0x4a], 0x4c443831
retf -0x209f
xchg byte [rbp - 0x4e], bh
jae 0x402835
xor dword [rip + 0x193b4d5f], esi
insd dword [rdi], dx
jo 0x402833
in eax, dx
outsd dx, dword [rsi]
fild qword [rsi + 0x2d]
jo 0x402867
xchg eax, esp
je 0x40285e
ret 0x4249
pop r15
xor ch, byte [rsi]
add dword [rsi], ebp
mov dl, 0xad
mov al, 0x35
xchg eax, r11d
xor dword [rip - 0x47949ec5], ebx
xor ecx, ecx
insb byte [rdi], dx
cdq
or eax, 0x7db641cc
jg 0x402859
fadd qword [rbp + 0x6f7a11]
outsb dx, byte [rsi]
outsd dx, dword [rsi]
or dword [rax + 0x1b6d90b1], esi
in eax, dx
push rbx
xor esp, ebx
insd dword [rdi], dx
je 0x4027c0
xor dword [rdx], ecx
in eax, dx
ret 0xb25f
movsxd rbx, dword [rsi - 0x6e]
sbb r9, qword [r9]
or dword [rdi], eax
push rax
or byte [rbp - 0x5ed72248], ah
insd dword [rdi], dx
cmp cl, ch
push rdx
sub byte [r9 - 0x4a], al
sbb al, 0x20
jge 0x4028a2
jbe 0x40282a
iretd
and eax, 0x4c37c884
retf
jb 0x40282b
enter 0x6fb6, 0x31
xor al, 0x6d
outsd dx, dword [rsi]
jbe 0x40289b
push rdx
push rdx
cmp dl, bl
not byte [rbp + 0x6a364dbe]
pop rdi
jne 0x4028ed
clc
sbb ebp, dword [rbp + 0x6e]
movsxd rbx, dword [rsi]
xor dword [rbp + 0x34], eax
je 0x402906
jo 0x4028f4
pop rdx
xor eax, 0x68e6b38b
frstor dword [rdx + rsi]
mov ch, 0x2a
jae 0x402883
xchg eax, esi
popfq
jne 0x4028f9
mov byte [r14 + 0x14], r9b
xor eax, 0x62c438d1
mov esp, 0x493ff40e
ja 0x4028f9
jge 0x402865
jle 0x402898
and al, 0xb
mov eax, dword [rsp + rdx*2 - 0x5273cefa]
and rax, 0xffffffffd16ed13f
fcmovb st(0), st(1)
cli
shl dword [rax], cl
jbe 0x40292e
push rdx
insb byte [rdi], dx
sub al, 0x55
mov dh, 0xc8
fsubr dword [rip - 0x7b7aae8d]
cmp dword [rbx], -0x1c
xor sil, byte [rip + 0x75b513f]
jrcxz 0x40286c
movsd dword [rdi], dword ptr [rsi]
test al, 0x64
insb byte [rdi], dx
push rax
jbe 0x402936
pop rax
pop rax
jl 0x4028a6
neg byte [r15 + 0x33]
xor al, 0x5b
loopne 0x402932
jae 0x40296e
insb byte [rdi], dx
or ecx, ecx
cmp byte [rbx], ch
xchg eax, esp
sbb cl, byte [rsi - 0x6e]
add ebx, 0x10691412
stosd dword [rdi], eax
add cl, ah
cmp byte [rax], sil
pop rdi
std
insd dword [rdi], dx
out dx, al
sub bl, byte [rbp + 0x7a3218c0]
xor eax, 0x9bae1f66
sub eax, 0x8c454e5b
mov edi, 0x96ad4661
imul ebx, ebx, 0x74
push -0x211d88e3
test ax, 0x2a40
jl 0x402927
xor dword [rsi], ebp
xor eax, edx
jne 0x4029b8
movsxd rbp, dword [rax + 0x7b]
ret
jae 0x402966
fistp dword [rdx]
cmp bh, bl
jae 0x402904
xor al, 0x49
rol qword [rsi + 0x1b825775], cl
movabs qword [0x724d305b8619c935], rax
push rdx
imul esi, dword [rbp + 0x20], 0xbf1a31da
sal dword [rbx + 0x77], 1
fiadd word [rbp - 0x2442ad8a]
mov word [rbp + 0x5eb5653d], ss
mov dh, byte [rbx - 0x3d]
ret 0xbb07
push 0x66b6370
add al, 0x4b
or cl, byte [rbx]
pop rax
sti
jbe 0x4029d3
jo 0x4029e0
jb 0x402932
jg 0x40293e
fldenv [rax + 5]
jbe 0x4029ff
outsd dx, dword [rsi]
jo 0x402a18
adc byte [rbx], ch
adc al, 0x30
movabs byte [0x33e322c3bd7a5d56], al
or dword [rbx + 0x334cb525], ecx
xchg eax, esi
lahf
mov cl, 0x10
in al, 0xd9
mov word [rdi], es
pop rbp
lahf
jrcxz 0x402a3a
sub cl, byte [rdi + 0x4e]
push -0x68
movabs eax, dword [0xf08b761433c6f332]
ror dword [rdi], -0xa
jb 0x402a3e
retf -0x1ead
or al, byte [rcx - 0x53109c54]
mov edx, 0x2b810919
or byte [rsi], dl
js 0x402a36
cli
xchg eax, ecx
adc eax, 0x776ed23c
insd dword [rdi], dx
push rax
sub dword [rcx], ebp
adc byte [rsi + 0x35015e31], dl
pop rbp
and byte [rbx], bl
test eax, 0x6ee76230
mov bl, 0x94
cwde
xor dl, byte [r11 + 4]
jae 0x4029e7
xor bl, dl
xor dl, byte [rip - 0x693e47eb]
test byte [rdx], bl
cmp al, 0x30
adc dl, byte [rsi + 0x30312043]
and eax, ecx
sbb esp, dword [rax]
push rbx
retf -0x6da6
jnp 0x402a43
pop rbx
xchg rax, r8
jb 0x4029bb
movsd dword [rdi], dword ptr [rsi]
lodsd eax, dword [rsi]
test dword [rcx + 0x6364b7f3], ecx
jle 0x402a05
jle 0x402a4d
mov ah, 0x73
xor al, 0x61
cmp byte [r11d], r14b
mov dh, 0xd0
pop rsi
sbb byte [eax + 0x7834aa50], 0x37
test byte [rdx], cl
movsd dword [rdi], dword ptr [rsi]
sbb dword [rbp + 0xa1c83ac], eax
std
sal byte [rsi + 0x541a430c], 1
add dword [rdx], ebp
jmp 0x1a2abaa6
in al, dx
outsd dx, dword [rsi]
adc cl, byte [rcx]
in al, 0x34
push rcx
push 8
fild dword [rbp + 0x64aa4f8e]
pop r15
jne 0x402a6a
wait
popfq
adc dword [rcx], 0x28
movabs al, byte [0x61d1a5ad850fb453]
xor byte [rbx + 0x63], dh
in eax, dx
add esp, dword [rcx + 0x4cd0494b]
xor al, 0x78
cmp dword [rbp + 0x3261c215], 0x4af2f470
push rdx
insb byte [rdi], dx
push rcx
mov bl, 0xc4
xchg eax, edx
cwde
cmp byte [rbx + 0x49164b92], cl
sub byte [rbp + 0x6297a34a], dl
add al, 0xab
sbb eax, 0x41ff7e64
add ah, cl
sal cl, 1
sub byte [rcx + 0x50], al
sbb al, 0xbd
scasb al, byte [rdi]
xor bh, byte [rax]
xor eax, 0xb99ab034
ret
leave
pop rax
mov edi, 0x124253e1
scasb al, byte [rdi]
xchg eax, ebp
and al, 0xe6
mov edi, cs
add rsp, 0x1ed673ca
mov bl, 0x95
jne 0x402ad1
sbb esi, 0x2b0b48cf
add al, 0x52
mov bl, 0x5f
mov cl, 0
fld qword [rcx - 0x2aaed8ae]
xchg eax, edx
push rcx
jbe 0x402b32
cmp dword [rsi + 1], ecx
adc r8b, r11b
or al, 0x4a
movsd dword [rdi], dword ptr [rsi]
sti
test al, 0xc
mov bh, 0x83
rol ebp, 0x33
insd dword [rdi], dx
scasb al, byte [rdi]
js 0x402b3f
or esp, dword [rcx + 0x74]
mov edx, 0x6aa232aa
mov al, 0x30
enter 0x4b1a, 0x6e
jo 0x402b4f
or al, 0xc0
movabs byte [0x718e526b2ae56a06], al
imul edx, dword [rbp + rcx - 0x70], 0x515258ae
xor byte [rdx], dl
and dil, r15b
mov byte [rip - 0x4fdb9749], bh
add eax, 0x685f1d14
xor edx, dword [rbp + rbp*2 + 0x70034372]
xchg eax, edi
xor esi, eax
and ch, byte [rcx]
jno 0x402b7e
out 0xc0, al
sub ah, byte [rcx]
js 0x402bd4
lodsb al, byte [rsi]
cmpsd dword [rsi], dword ptr [rdi]
and eax, 0x233f9af5
adc dword [rdi], ebp
sub eax, 0x554241ab
cmp eax, dword [rdx - 5]
xor cl, ah
adc byte [rbx - 0x2a], bl
push dx
adc ecx, 0x95f421c4
push rdx
mov ebx, 0x61860b22
out dx, eax
mov esp, 0x53b996ed
xlatb
push rsp
push rbx
sub al, 0x37
int3
or esp, dword [rcx - 0x6a]
test byte [rcx + 0x72], al
and ah, byte [rbx + 0x4e80244]
lodsb al, byte [rsi]
in al, 0xb2
ficom word [rax + 0x12]
xor dword [rdx], esi
or dh, byte [rax + 0x61]
jns 0x402bf1
jae 0x402b5e
faddp st(0)
fcomp dword [rdx]
xchg eax, ebx
in al, dx
add edi, dword es:[rsp + rsi*2]
fucom st(2)
jae 0x402c1a
and byte [rdi], al
shl byte [rip - 0x1ef7adb7], cl
sub eax, 0x5c290ac9
and eax, 0x35bc9647
iretd
nop
mov dword [rax + 0x4a73c865], esi
add byte [rbx], al
sbb byte [rsp + rax*2 - 0x29a93d8a], cl
rol dword [rbx + 0x61], 0x63
insb byte [rdi], dx
xor bh, byte [rsi + 0x62a3b025]
insd dword [rdi], dx
push rax
movsb byte [rdi], byte ptr [rsi]
push rbp
add ch, byte [rax + rdi*8 + 0x167d8017]
sub eax, dword [0xffffffffd9c27370]
and dword [rsp + rsi*2 + 0x39], 0xb5b78e3a
xor esp, dword [rdi + rax + 0x50]
mov eax, 0xdad63931
xor byte [rax], dh
fcomp dword [rax - 0x7089a6c7]
add esp, ecx
or eax, 0x54937462
ja 0x402c0a
xchg eax, edx
mov dh, 0x1c
jge 0x402c5a
cmp byte [rdi], ah
sbb dword [rcx + 0x42], 0xe09bc46a
out dx, eax
shr byte [rdx], 1
xchg eax, esi
jle 0x402c46
and eax, 0x8a295b6c
add esp, dword [rsi - 0x55]
insb byte [rdi], dx
xchg dword [rdi + rax*8 + 0x50], ecx
sal byte [rbx + rax*2], cl
xor dword [rax], ebp
jae 0x402c78
in al, dx
add dword [rdi - 0x5ed0471b], eax
jmp 0x402c94
ror byte [rcx + 2], 0x37
xchg eax, r9d
fstp dword [rax - 0x23d9baf0]
wait
add al, 0x17
imul ecx, dword [rbx], 0x4a1a342
sbb byte [rdx + rsi + 0x16], al
and byte [rax], dl
or byte [rbx], ch
mov ebx, 0x55e0cc1e
cmc
insd dword [rdi], dx
push rbp
or dword [rcx - 0x7e], edi
push rax
pop rbx
jb 0x402c3b
adc ch, 0x6d
insd dword [rdi], dx
xor dword es:[rdx], eax
test eax, 0x2666b6ad
pop rcx
or esp, dword [rsi]
mov al, 0x97
mov bl, 0x71
xor eax, 0x8842b98
sub eax, 0xa90dae49
adc dword [rip + 0x40208730], esp
sal dword [rbp + 0x64], 0x5f
movsd dword [rdi], dword ptr [rsi]
cmc
xchg eax, edx
cmp eax, dword [rax + 0x19]
imul esi, edi, 0x37
lodsb al, byte [rsi]
xor al, 0xab
add dword fs:[rbp + 0x12ae4b09], esi
or byte [rbx], al
and dword [rsi + 3], eax
test dword [rbx + 0x6d69e4a1], ecx
xor esp, dword [rax - 0x7c]
xchg eax, ebp
pop rsp
test byte [rax], dh
jno 0x402c7f
add al, 0xe
sub ecx, edi
and eax, 0xc8302421
xor dword [rcx], edi
push rsp
and al, 0x5c
mov word [rax], ss
adc eax, 0x3255e5e
enter 0x2342, 0x6d
push 0x654c382e
jrcxz 0x402cd5
outsd dx, dword [rsi]
mov ds, edx
push rsi
insb byte [rdi], dx
sbb eax, 0x1e7adb73
pop rdi
jbe 0x402d5c
push rdx
and ah, byte [rcx]
adc sp, word fs:[rax - 0x37]
ficom word [rax - 0xb2aa3ee]
adc dword [rdx + 0x3d6418], esi
adc dword [rcx], eax
adc cl, byte [rcx + 0x70]
fisubr dword [rsi + 0x1d]
fist dword [rax + 0x6912553d]
jge 0x402da2
test dword [rbp + 0x6d], esi
fld qword [rdi]
test byte [rbx + 0x43], 0x17
xor byte [rcx + 0x32], dl
xor dword [rax + 0x6d], esi
xchg eax, ecx
xor dl, byte [rsi + 0x72]
ror byte [rdi - 0x7ec4ff22], 0x74
push 0x6d
sub eax, 0x85e24abe
xor dh, byte [rsi + rdx*4]
mov bl, 0x30
xchg eax, ebp
add eax, dword [rsi]
or ch, byte [rcx + 9]
mov word [rdx - 0x7ff3f96f], cs
rcr byte [rdi - 0x7fb783ca], 0
jb 0x402dc2
or al, 0x21
push rbx
pop rax
xor dword [rcx], eax
cmp cl, al
cmpsd dword [rsi], dword ptr [rdi]
and byte [rbp + 0x756fe869], r15b
retf 0x2460
cwde
out dx, eax
or al, 0x5c
loopne 0x402d3b
xlatb
out 0x9d, al
movabs byte [0x655a1031daa3490c], al
je 0x402d6a
cmp esi, dword [rbx]
sub eax, 0x3edf303a
jae 0x402e3b
insd dword [rdi], dx
fmul st(1)
outsb dx, byte [rsi]
je 0x402e3e
push -0x469655f7
jge 0x402dae
jb 0x402e45
outsb dx, byte [rsi]
outsd dx, dword [rsi]
sub eax, 0x660ba850
and cl, byte [rip + 0x52e92e62]
mov cl, 0x52
outsd dx, dword [rsi]
xlatb
sub eax, 0x110d0269
fcmove st(0), st(4)
mov ebp, 0x640938b5
jns 0x402e66
mov r8b, 0x12
cdq
sbb dword [rsi + 0x53], esi
pop rdx
or al, 0x60
out dx, eax
wait
pop rdi
sbb edx, dword [rdi + 0x928616c]
cmp eax, 0x18836f47
je 0x402e88
leave
or ah, byte [rax]
xlatb
add dh, byte [rdi - 0x29f790d4]
add eax, 0x76d23d16
and al, 0x6f
cmpsd dword [rsi], dword ptr [rdi]
push -0x691ad2ce
jge 0x402e9a
jb 0x402e42
pop rbp
iretd
pop rdi
jb 0x402e97
movsxd rsp, dword [rcx + 0x3770e92e]
mov ebp, 0x6c3e116c
xchg eax, esi
and al, 0x60
or ebp, dword [r10 + 0x63]
jb 0x402e27
in al, dx
mov ebp, 0x6936a1c5
movsxd rax, dword [rax]
push -0x74a5a185
mov edi, dword [rdx]
add al, 0xd7
push rdx
or eax, 0xfddb00
add byte [rdi + 0xc], ch
push -0x58febba7
push rdi
fadd qword [rdi]
sbb al, 1
nop
add dword [rcx - 0x7a], ebp
and eax, dword [rdi]
push rsp
xchg eax, edx
and dword [rcx], ebx
push rsp
and byte [rsp], al
nop
and dword [rcx], ebx
xor dword [rsp + rsi*2 - 0xe], esi
sub byte [rcx], bl
and al, 0x44
idiv bh
ljmp [rdi - 0x38]
and byte [rbx + 0x3498981c], al
nop
or al, 0x32
add eax, 0x90644e08
ret
mov di, word [rdi]
rcl al, 1
wait
pushfq
sbb eax, 0x6fb0270
sbb byte [rcx + 0x4b], al
push r14
add ecx, dword [rax - 0x62]
leave
add dword [rdx], edx
mov ah, 0xa4
mov ebx, 0x47ffbf5e
nop
pop rbp
outsd dx, dword [rsi]
mov edi, 0x326e0702
and ch, bl
imul edi, dword [rdi], -2
mov dl, 0xc9
and byte [rdi - 0x59], ah
add byte [rsi], 0xff
leave
cwde
jp 0x402f40
ror byte [rbx], 0x21
mov eax, 0xff483f07
push -0x7bf10aa7
mov edi, 0x24dccf25
mov edi, 0x1c83f07
xor cl, byte [rax]
add ecx, eax
sbb dword [rsi + 0x784e0613], ecx
mov bl, 0x6a
lcall [rdx]
nop
and dword [rbx], ebx
mov qword [rdi], rdi
fld dword [rbp + 0x40f0641c]
add dword [rax], edx
mov bl, 0xa0
nop
or eax, 0x47373f94
mov dh, 0xc0
jo 0x402f3a
setge byte [rdi + 0x6e]
xor ah, byte [rdi + rdi + 0x40]
jg 0x402f61
and al, 0x87
sub eax, 0xa33f2090
fmul qword [rdx + 0x9ff070f]
sbb cl, byte [rdx - 0x57]
mov edi, 0x49b99c94
mov edi, 0x4360c840
mov cl, 0x3f
mov al, 0x7f
mov al, 0x85
in al, 0x22
cmp dword [rbx + rax], edi
mov edi, 0x59b99e4
inc dword [rdi]
jg 0x402f40
or eax, 0x8b921442
leave
or al, 0x25
outsb dx, byte [esi]
inc dword [rdx - 0x64f2fe25]
add al, 0xb
cmpsb byte [rsi], byte ptr [rdi]
leave
cdq
wait
call qword [rax]
out 0xb8, eax
leave
xor byte [rdi + rdi + 0xf], 0xf8
sub eax, 0xff20173b
xchg eax, ebx
add al, 0x5f
clc
mov ecx, 0x9b496cd9
sahf
jg 0x402fa7
add dword [rsi], eax
adc byte [rbx - 0x67e6f494], al
mov edi, 0x83923f3f
pop rsp
and al, 8
add dword [rcx], eax
push rax
sbb al, 0x40
cmp byte [rax + 0xc9b993f], dh
leave
or dh, byte [rax + 0x7480ff07]
leave
sbb byte [rax], dl
or byte [rcx], ah
rdmsr
enter -0x3720, -0x68
add bl, cl
xor spl, byte [r8]
adc eax, 0x2117307f
or al, 0xe
or edi, dword [rdi]
xor al, 0xbf
pushfq
mov dl, 0xd9
adc dword [rbx], edi
outsb dx, byte [rsi]
xor al, byte [rdx - 0x37]
or dword [rdi - 0x794c44e2], edi
or eax, 0xa04100d9
dec dword [rax]
sbb eax, dword [rax - 0x66]
xor eax, 0x22c07f09
jns 0x403092
add byte [rsi + 6], dl
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add edi, edi
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x3af7fdea], ecx
xchg bh, ah
out 0xe5, eax
in al, dx
movsb byte [rdi], byte ptr [rsi]
add byte ss:[rax], al
add edx, dword [rax]
add byte [rax], al
sub byte [rdi], dh
add byte [rcx], cl
add byte [rbp + 0xf4], dl
