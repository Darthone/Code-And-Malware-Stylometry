call 0x400f10
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x400d28
add ebx, ebx
je 0x400cde
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x400d16
cmp rbp, -4
ja 0x400d16
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x400cfe
add ecx, 4
mov dl, byte [rax]
je 0x400d26
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x400d16
ret
cld
pop r11
cmp r8b, 2
je 0x400d3e
jmp 0x400dbb
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x400d4e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x400d36
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x400d66
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x400d53
sub eax, 3
jb 0x400d84
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x400dbb
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x400dab
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x400da9
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x400d98
cmp rbp, -0xd00
adc ecx, eax
call 0x400cea
jmp 0x400d3e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x400e94
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x400e32
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x400e7e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x400e51
push 0x3a707474
jne 0x400eaa
js 0x400e6a
jae 0x400ea4
outsb dx, byte cs:[rsi]
je 0x400e63
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x400ed1
jb 0x400ec3
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x400eee
jb 0x400f01
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x212100
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x212100
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x400dcc
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x400ef7
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x400ea5
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f0f9f
jb 0x400fb7
movsxd rbp, dword [rdi]
jae 0x400fb1
insb byte [rdi], dx
js 0x400fb7
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x400f97
cmp rsi, rcx
jae 0x400f9f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x400f7e
cmp al, 0x8f
ja 0x400f7e
cmp byte [rsi - 2], 0xf
je 0x400f84
sub al, 0xe8
jg 0x400f81
push rdi
cmp al, 1
ja 0x400f6c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x400f6f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x400f9c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x400ff3
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1471
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401037
mov al, 0xa
jmp 0x401037
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401013
inc ebx
mov al, 0
jmp 0x40103b
mov al, 2
jmp 0x40103b
mov al, 3
jmp 0x40103b
mov al, 0x3c
jmp 0x40103b
push rcx
rcr ah, 1
fstp st(7)
jle 0x40107c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40108e
jg 0x401080
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6803
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4010da
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6257
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4010e2
cmp esi, 0x21585055
jne 0x4010e6
jge 0x4010d8
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4010db
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4010df
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40118b
pop rcx
or al, 0x3b
jb 0x401191
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401103
jmp 0x401105
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661046
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5328e
in eax, dx
jg 0x40113d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401183
mov bh, 0x2a
add edi, 0x10
jmp 0x401180
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4011bd
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4011f9
jne 0x401210
fstpnce st(6), st(0)
jle 0x4011d9
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x40120f
jrcxz 0x401243
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b1a7
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4012c2
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401282
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295857
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4012f5
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40128f
and ecx, 7
or al, 0xeb
jae 0x4012fa
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x40132f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40136d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401326
push rax
call 0xffffffff868d1013
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401330
std
cmp edi, esi
xchg eax, edi
jle 0x401385
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95911
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401383
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401371
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40139a
js 0x4013da
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40146c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad26a7
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40148d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401492
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc20f44
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401420
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
mov eax, 0xe00000f
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], dl
movabs byte [0x92a8], al
add byte [rax], cl
dec dword [rax + 0x17]
add byte [rax], al
add dword [rdi], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401546
je 0x40154f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401518
mov dh, 0x7d
jbe 0x401517
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401550
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x4e80006], bl
add byte [rsi], cl
or byte [rax + 0x80f9027], dl
add byte [rax + 9], al
add al, dl
fldenv [rsi]
nop
or al, byte [rax]
call 0x4f4abc45
in eax, 0
or al, 0x17
or eax, 0xdb00f000
nop
or ecx, dword [rsi]
add al, 0xc
jle 0x4014ce
cld
add ah, dh
sbb edx, dword [rax]
add byte [rax], al
sbb al, 0x40
sahf
adc dword ds:[rax], eax
adc r8b, byte [rax]
cmp byte [rbx + 0x139f601c], 0
mov esp, 0x2d14a71d
jl 0x401572
jns 0x401572
adc eax, 0x16f800
add byte [rsi], ch
cmp dword ds:[rax + rax*4 + 0x17], 0x180800
clc
and byte [rdi], bh
sbb dword [rax], eax
add byte [rax], dh
sbb al, byte [rax]
test al, 0x4d
and byte [rdi + 0x20], cl
sbb eax, dword [rax]
rcr byte [rsi + rcx*4], 0xe4
fst qword [rbx + rdx + 0x41701]
int1
dec dword [rcx*2 + 0x1bc595c3]
mov edi, 0x30029719
nop
or al, 0x36
and al, 0x1b
jo 0x401617
xor cl, r8b
mov al, 0x44
pop rdi
mov al, 0xcb
cmpsd dword [rsi], dword ptr [rdi]
add dword [rdi], edx
push rbx
or al, 0xc9
push rdi
jp 0x401612
rol byte [rsi - 0x77b513df], 1
xchg eax, edi
movsd dword [rdi], dword ptr [rsi]
xlatb
wait
je 0x401574
stosd dword [rdi], eax
add al, 0x77
mov byte [rsi], 0x19
xchg eax, edx
rcl dword [rdi], 5
fild dword [rsi]
pushfq
movabs eax, dword [0x7642e108e8377384]
push rdi
mov eax, 0x194ff61d
mov cl, 0x21
insb byte [rdi], dx
add byte [rdi + 2], al
push -0xe6a2749
pop rsi
adc eax, 0x2b0f4701
adc ah, byte [rsi + 0x53]
ret 0x3714
cmp al, 0x17
jrcxz 0x4015a7
adc dword [rbx - 0x7478b8b1], ebx
add dl, byte [rdi - 0x54]
mov ecx, 0x58206401
add byte [rbx], bh
f2xm1
scasb al, byte [rdi]
insb byte [rdi], dx
xchg eax, edi
sbb eax, dword [rdx]
mov al, 0x4b
cmp al, byte [rdi]
pop qword [rdx]
mov edi, 0x6c2472a
nop
jl 0x40165d
mov edx, dword [rdi]
push rsi
or byte fs:[rbx], bl
lahf
ja 0x4016bc
test byte [rip + 0x2fb15761], cl
sub al, 0xc2
adc byte [rdx], dh
in eax, 0x31
insb byte [rdi], dx
shr byte [rdx - 0x52], 0x4d
adc dword [rdi + 4], esp
adc byte [r10 - 0x7f], r14b
sbb al, 0x5c
add ch, byte [rdi + 0x61]
add ecx, dword [rax - 0x3d]
mov dword [rdi + 0x10], esp
xchg eax, esi
or eax, 0xe00df6c9
ja 0x401679
mov eax, 0x243083ec
adc dword [rdi], -0x50
stc
jg 0x401603
fnstenv [rbx - 0x50]
xchg eax, ebx
sbb esp, dword [rbp + 0x77]
or dword [rbx], eax
sbb eax, dword [rdi + 0x36]
xlatb
adc rax, 0x4a2f2217
sub byte [rdi + 0xe40bb08], cl
sub eax, dword [rbx]
in al, 0xd9
and dword [rcx + 0x37], esp
add dword [rdi - 0x30], esi
xor al, 8
sbb eax, edx
scasd eax, dword [rdi]
std
xchg eax, edx
out dx, eax
add eax, 0x9d044c72
add al, 0xd7
sbb bl, byte [rsi]
insb byte [rdi], dx
or byte [rbx + 0x17be2fa4], bl
mov al, 0xb
sar dword [rdx + 0x11df4266], -0x59
loopne 0x401718
enter -0x1237, 3
jrcxz 0x4016d4
mov dl, 0x94
add eax, 0xce710517
jb 0x4016dd
push rsp
out dx, eax
add edi, dword [rdi - 0x75]
and byte [rdi], dh
movsxd rsi, dword [rdx + 0x74]
jae 0x401771
movsxd rax, dword cs:[rax]
pop rdi
pop rbx
sti
mov bh, 0xff
pop rdi
push r10
pop rdi
push r11
push rsp
or dword [rax], eax
jb 0x401773
imul ebx, dword [edx], 0xdbdb5f06
mov ebx, 0x5f6d74ff
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401742
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rsi + rsi*8 - 0x49], esi
outsd dx, dword [rsi]
jb 0x4017a5
pop rdi
jne 0x4017ae
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x4017a7
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x8b243538
mov edi, 0x665f05fd
imul ebp, dword [rsi + 0x69], 0x61727208
jns 0x4017b2
in eax, dx
int3
jge 0x401713
jge 0x4017cc
jns 0x40175c
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x401798
or eax, 0x6eb09b7
pop rdi
sub dword [rdx + rbp + 0x42], esi
pushfq
jo 0x4017e3
lodsd eax, dword [rsi]
mov ch, 0xff
outsd dx, dword [rsi]
and al, 0x5a
push rbx
je 0x4017c8
xor dword [rcx], edi
jo 0x4017e9
movsxd rsp, dword gs:[rbp + 0x77]
cdq
sub eax, 0xd836b777
mov bh, 0x6e
lahf
jb 0x401804
movsxd rsi, dword [rdx + rbx + 0x33]
jo 0x40180a
movsxd rsp, dword [rcx - 0x49]
std
lodsb al, byte [rsi]
jae 0x40180e
cmp eax, 0x69361467
outsb dx, byte [esi]
pcmpgtw mm4, qword [rcx - 0x79]
int 0xdc
jg 0x4017f1
push rdx
pop r15
fsub st(1), st(0)
or eax, dword [rdi - 1]
mul byte [rax - 0x35]
push rbp
and byte [rax + 0x44], cl
push rdx
adc al, byte [rdi + 0x4c]
pop rdi
test byte [rbp + 0x464ff85f], bh
push rbx
or al, 0x54
sub byte [r8 - 0x27a4a512], r11b
adc byte fs:[rcx + 0x59448807], cl
mov dil, 0x6f
sbb ebx, esp
cmpsd dword [rsi], dword ptr [rdi]
jb 0x40180c
je 0x401859
loope 0x4017f0
xchg esi, esi
pop r15
xor ch, byte [rsi]
add dword [rax], ebx
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0xd7573b6
jmp qword [rsi + 0x6d]
packuswb mm5, qword [rbp - 0x3e]
cmp dword [rax + 0x525f764a], ecx
test dword [rip + 0x4373083f], ecx
insb byte [rdi], dx
jae 0x401895
jo 0x401894
jne 0x4017c3
rcr dl, 0x6e
adc dword [rbx + 0x68], r12d
xor byte [rcx + 0xe], bl
pop rcx
jnp 0x4017ca
insd dword [rdi], dx
pop rsp
pop rdx
fld xword [rsi - 0x21]
or dh, byte [rdi]
and al, 0x63
js 0x4018bd
xor dword [rax], eax
xor ah, byte [rdx + 0x5b]
imul ebp, dword [rdx + rbx*8], 0xa2dddad7
movsxd rbx, dword [r9d]
adc dl, byte [rcx + 0x5f]
movq mm7, qword [rbx + 0x6d38d6b7]
adc byte [rbp + 0x53], al
add al, 0x45
jo 0x40185a
push rax
movsxd rbp, dword [r15 + 0x3b]
cli
pop rax
pop rax
pop rdi
xor edx, dword [rdx + rsi + 0x54494b31]
int1
mov dh, 0x8c
pop rdi
sbb al, 0xc
sbb dl, byte [r9 + r12*2 + 0x62]
movabs eax, dword [0x64564f1b01aeba5d]
pop rdi
jne 0x40184e
jnp 0x4018b8
jae 0x401824
outsb dx, byte [rsi]
add bh, byte [rip - 0x2494c9c5]
add dl, byte [rcx - 0x42]
ret 0xeeb0
retf 0x417e
xor dword [rbp + 0x76], r8d
scasb al, byte [rdi]
pop rdi
test esi, edx
cmp byte [rcx], cl
jmp 0x39d98c1e
mov edx, 0x784b0ee8
outsd dx, dword [rsi]
mov ebp, es
punpckldq mm7, qword [rdi + 0x61]
push r14
jno 0x401948
movsxd rsi, dword [rbx]
js 0x401918
imul eax, dword [rbp + 0x52], 0xbdcec24b
or edi, edi
push rbx
xor al, byte [rdx]
and dword [rip + 0x7bbf6b63], ebx
xchg eax, edi
insd dword [rdi], dx
in eax, 0x68
imul edi, dword [rcx + 0x6c], -0x27
xor al, 0xb0
test byte [rdx], ch
in al, dx
pop rbx
fld dword [rbx + 0x48cb4b19]
pop rax
fldln2
xor al, 0x24
jp 0x401961
sbb byte [rbp + 0x77], ch
push rbx
push rbx
xor al, 0x5f
wait
add al, 0x58
insb byte [rdi], dx
xor eax, 0x48039c22
idiv dword [rax + 0x43]
xor dword [rsi - 0x61], esp
xor esp, dword [rbp - 0x5b]
adc bl, byte fs:[rsi]
adc ebx, dword [rbx + rax*2 - 0x2e]
jrcxz 0x4018d8
imul esp, dword [rdi + 0x5f], 0x70
xlatb
outsb dx, byte [rsi]
cld
and eax, 0x56b52ed7
xchg byte [rsi + 0x30], dh
and dword [rip + 0x2aed68b1], ebx
cld
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
jmp 0x4018f9
push rbp
outsb dx, byte [rsi]
mov ebx, 0xf354c156
pop rbx
jmp 0x4019b3
mov r8b, 0x5f
nop
jne 0x401994
xor byte [rsi + 0x6d457869], ch
clc
lodsd eax, dword [rsi]
and al, 0xd3
add bl, byte [rdi + 0x5d]
in al, dx
mov dh, 0x1b
cmp bh, byte [rbx + 0x6d7973c3]
mul dword [rdx + 7]
je 0x4019e5
mov dh, 0xb9
xchg byte [rbp - 0x12aaf698], bl
jo 0x401984
add eax, 0x6ee5badb
outsd dx, dword [rsi]
in eax, 0x2d
adc eax, 0xe9580d67
lea ebp, [rdi - 0x18]
jne 0x4019be
jne 0x40192a
sub eax, 0x660d7b69
out dx, al
lodsd eax, dword [rsi]
mov ch, 0x75
cmp byte [rcx], cl
jns 0x401a10
lodsb al, byte [rsi]
sal byte [rax - 0x2a], 1
sbb dword [r14 + 0x32], r14d
imul esi, dword [rbx], 0xe4ab5e0c
pop rdi
sbb ebx, dword [rdx - 0x2166d788]
add al, cl
or esi, edx
je 0x401a32
mov bh, 0xb9
in eax, dx
or ch, byte [rdi + rbp*2]
or byte [rcx + 0x78], ch
add eax, 0x23c083c0
je 0x4019f6
outsd dx, dword [rsi]
movabs al, byte [0x6e856868c068652e]
fldenv [rdx + rsi*2 + 0xd]
pop rbp
movsxd rax, dword [rdi]
add al, 0x46
push 0x17
scasb al, byte [rdi]
jo 0x401a5f
std
in eax, 0x2e
xor dword [rip + 0x43b66c38], esi
or ebp, dword [rdx - 0x79]
int 0xde
mov esp, dword [rcx + 0x68003a36]
jnp 0x40199c
and dword [rsi - 0x66], 0x5e
cdq
add al, 0x65
push rdx
pop rdi
sub eax, 0xfddb00
add byte [rdi + 1], cl
fisub word [rax + rbx*2]
xchg byte [rax + rcx*2 - 0x32], ah
sbb al, 1
and esp, dword [rax + rdx*4 + 1]
imul eax, dword [rdi], 0x92195454
and dword [rcx], ebx
and byte [rcx + rsi], al
sbb dword [rax + rdx*4 + 0x21], esp
je 0x401aaa
and al, 0x1c
sub byte [rsi + rsi*8 - 1], al
ljmp [rdi - 0x68]
or al, 0x36
and al, 0x83
cwde
add eax, 0x2036087f
int 0x90
or r8, rax
xchg eax, ebx
mov bl, 0x83
or al, 0xc0
sub byte [rdx], al
sti
xor rcx, r8
sbb byte [rsi + 3], dl
js 0x401a18
add ebx, dword es:[rax - 0x2e]
pop rbp
and al, 0x5e
mov edi, 0xdece48ff
sub al, 0x2f
mov edi, 0x86e9012e
insb byte [rdi], dx
add al, byte [rdi]
imul edi, dword [rdi], -2
cmp dword [rbx - 0x6d], esi
cmpsd dword [rsi], dword ptr [rdi]
nop
or eax, edx
xchg eax, esp
jp 0x401ae6
sub al, 0xcc
rol byte [rdi], 1
out 0x1b, eax
in al, dx
retf 0x3f26
inc dword [rdi + rdi + 0x20e4ff42]
or dword [rip + 0x1b0e83f], 6
add byte [rcx + 0x6138e19], bh
or dword [rdi + 0x42], ebp
xchg eax, r15d
push qword [rdx]
leave
sbb cl, byte [rcx - 0x6f443fc1]
or dword [rax + rax*8], 0x30
add dword [rax], edx
or dword [rcx], edx
mov dl, 0x21
xchg eax, esp
and ebx, dword [rbx + 0x60]
mov eax, 0x760f2f07
or byte [rcx], dl
mov dl, 0x9d
or al, 0x7f
jb 0x401abe
add bh, byte [rcx - 0xe]
movabs dword [0x11ff076742013733], eax
xchg eax, edx
xchg byte [rdx + 0x50bfa909], dl
jb 0x401b73
or byte [rdi + 0x20423f1c], dl
or dword [rcx + rcx*8], 0xffffffb1
xor r12b, byte [rbx + rax*2]
leave
cmp al, 0xbf
adc byte [rdi], 9
xchg dword [rax + rax*4], ecx
add dword [rdi], edi
leave
jb 0x401b4d
and ah, byte [rdi + rdi + 0xf]
imul ebx, dword [rax], 0x7c7fce4a
fstp xword [rdi + 0x3c9c800e]
movsb byte [rdi], byte ptr [rsi]
add ebp, dword [rip + 0x3202d60]
rcr byte [rbp - 0x19], cl
psubb mm1, mm3
ficom word [rax]
enter -0xc08, -0x6d
xchg eax, ebx
add eax, 0xf83f2e77
mov ecx, 0x9b496cd9
sahf
jg 0x401b46
add dword [rsi], eax
adc byte [rbx - 0x67e6f494], al
mov edi, 0x83922f2f
pop rsp
and al, 8
add dword [rcx], eax
jb 0x401ba0
or byte [rax], dl
xlatb
xor byte [rdi], bh
test al, 0x9b
or al, 0xc9
push rax
or ch, byte [rax - 0x36bc8bf9]
cdq
call qword [rax]
adc byte [rdi], bh
or byte [rdx + rsi], bl
enter -0x3f80, -0x48
add al, 0x87
or cl, cl
test dword [rax], esp
cmpsd dword [rsi], dword ptr [rdi]
mov byte [rbp + rdi*4 + 0x3f00ae65], 0x34
fldlg2
mov al, 0x10
adc dword [rbx], edi
leave
xor ecx, dword [rsi - 0x24]
jg 0x401bc4
add edi, ecx
jp 0x401c0f
xor edi, dword [rbx - 0xcf1000]
pop rax
or byte [rsi], dh
xor byte [rdi], 0x1f
xor ecx, dword [rcx]
jg 0x401c00
in al, 0x10
cmp qword [rbp + rax - 0x80000000], rdx
add byte [rax + 2], al
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip + 0x8080216], ecx
nop
out dx, al
mov edx, 0x63e03f45
add byte [rax], al
add dword [rdi], eax
add byte [rax], al
add byte [rax], cl
add byte [rcx], cl
add byte [rbp - 0xc], al
add byte [rax], al
add bh, bh
