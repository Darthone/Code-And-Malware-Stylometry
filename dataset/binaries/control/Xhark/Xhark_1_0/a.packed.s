call 0x402460
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x402278
add ebx, ebx
je 0x40222e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x402266
cmp rbp, -4
ja 0x402266
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x40224e
add ecx, 4
mov dl, byte [rax]
je 0x402276
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x402266
ret
cld
pop r11
cmp r8b, 2
je 0x40228e
jmp 0x40230b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40229e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x402286
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x4022b6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x4022a3
sub eax, 3
jb 0x4022d4
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40230b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x4022fb
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x4022f9
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4022e8
cmp rbp, -0xd00
adc ecx, eax
call 0x40223a
jmp 0x40228e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4023e4
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x402382
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x4023ce
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x4023a1
push 0x3a707474
jne 0x4023fa
js 0x4023ba
jae 0x4023f4
outsb dx, byte cs:[rsi]
je 0x4023b3
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x402421
jb 0x402413
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x40243e
jb 0x402451
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x216585
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x216585
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x40231c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x402447
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4023f5
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f24ef
jb 0x402507
movsxd rbp, dword [rdi]
jae 0x402501
insb byte [rdi], dx
js 0x402507
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x4024e7
cmp rsi, rcx
jae 0x4024ef
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x4024ce
cmp al, 0x8f
ja 0x4024ce
cmp byte [rsi - 2], 0xf
je 0x4024d4
sub al, 0xe8
jg 0x4024d1
push rdi
cmp al, 1
ja 0x4024bc
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x4024bf
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x4024ec
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x402543
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c29c1
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x402587
mov al, 0xa
jmp 0x402587
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x402563
inc ebx
mov al, 0
jmp 0x40258b
mov al, 2
jmp 0x40258b
mov al, 3
jmp 0x40258b
mov al, 0x3c
jmp 0x40258b
push rcx
rcr ah, 1
fstp st(7)
jle 0x4025cc
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x4025de
jg 0x4025d0
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a7d53
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x40262a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb77a7
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x402632
cmp esi, 0x21585055
jne 0x402636
jge 0x402628
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x40262b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x40262f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x4026db
pop rcx
or al, 0x3b
jb 0x4026e1
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x402653
jmp 0x402655
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3662596
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf547de
in eax, dx
jg 0x40268d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x4026d3
mov bh, 0x2a
add edi, 0x10
jmp 0x4026d0
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40270d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x402749
jne 0x402760
fstpnce st(6), st(0)
jle 0x402729
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x40275f
jrcxz 0x402793
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1c6f7
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x402812
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x4027d2
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58296da7
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x402845
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x4027df
and ecx, 7
or al, 0xeb
jae 0x40284a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x40287f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x4028bd
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x402876
push rax
call 0xffffffff868d2563
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x402880
std
cmp edi, esi
xchg eax, edi
jle 0x4028d5
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96e61
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x4028d3
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x4028c1
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x4028ea
js 0x40292a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x4029bc
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad3bf7
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x4029dd
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x4029e2
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc22494
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x402970
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
xchg eax, edi
or eax, dword [rax]
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + 0x90a820], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dil, dil
xchg eax, esp
add byte [rax], al
adc eax, dword [rax]
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402a96
je 0x402a9f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402a68
mov dh, 0x7d
jbe 0x402a67
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0x83
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x402a20
sahf
sahf
add al, 0
cwde
add eax, 0x905fd000
and byte [rdi + 0x6600006], bl
add byte [rax + 0xb], cl
stc
add al, 0x56
or byte [rdi], dl
or dword [rax], eax
sub byte [rsp + rdi*2], cl
add bh, cl
add byte [rdx], cl
add byte [rax + 0xf58000b], cl
cmp dword ds:[rax + rax*4 + 0xc], 0xd8000
jo 0x402aa7
adc ebx, dword [rax + 0x39]
shr byte [rdi], 0xe
wbinvd
in al, 3
in al, 0
adc al, 0x4b
adc byte [rax], al
and byte [rcx], al
or esp, esp
adc dword [rax], eax
in al, 0x12
add al, cl
inc byte [rax]
stc
adc eax, dword [rax]
mov esp, 0xf0001460
insd dword [rdi], dx
and byte [rdi + 0x151e40], bl
clc
add byte [rax], al
outsb dx, byte [rsi]
mov dl, 0x4d
and byte [rdi], bl
add byte [rax], cl
sbb byte [rdi + 0x6f], al
sbb al, 0x20
retf
add dword [rcx], ebx
jo 0x402af6
add al, 0xf2
add dword [rsi + 0x1b1771], esi
and byte [rax - 0x22], cl
fstp dword [r11 + rdx]
add dword [rdi], edx
add al, 0
int1
push qword [rsp + rbx*2]
pop rcx
in al, dx
or al, 0x1b
mov edi, 0xc9029719
sal byte [r8 - 0x440fe8e5], cl
nop
or dword [rsi + rbp], 0x30
adc al, byte [rdi + rbx*2 + 0x32]
fsub dword [rax]
frstor dword [rdi + 0x53170150]
mov al, 0x2b
and dword [rdi + 0x7a], ecx
push r8
jbe 0x402b44
xchg byte [rsi + 0x4dd7a597], r8b
cmp cl, dh
adc byte [rax + 0x69062827], dh
cmp byte [rbx + 0x184fcb77], dl
add al, 0xd9
jno 0x402abe
adc bl, byte [rdi]
fdivr dword [rdi]
mov eax, 0x8421b060
or esp, esi
add byte [rdi + 0x7b], al
xchg dl, dh
add eax, 0x4701059f
or dword [rbx + 0x57], esp
ret 0x1bf7
mov al, 0x14
insb byte [rdi], dx
cdqe
sub al, 0x17
je 0x402bbc
outsd dx, dword [rsi]
and cl, byte [rdi + 0x22]
sub byte [rdx - 0x70], dh
ror dword [rsi + 0x61], 0x17
cmpsd dword [rsi], dword ptr [rdi]
xor byte [rsi], ah
xchg eax, esi
xor dword [rcx + 0x1b], 0x6f
pop rdi
sbb dword [rax], esp
sbb edi, edi
sub eax, 0xc170624
jb 0x402b7e
in al, 0x3b
add bl, byte [rsi + 0x799e3126]
xlatb
adc dh, byte [rdi + 0xc]
sbb dword [rcx + rcx], ebx
mov ch, 2
out dx, eax
test dword [rsi + rax], edi
sub byte [rbx + rax], dl
add byte [rdi - 0x62], cl
cmp eax, 0x2f033f7b
imul ebp, dword [rcx], 0xe7008c47
add esp, esp
leave
xchg eax, ebx
in al, 0x2a
sbb al, 2
test dword [rip + 0xbd9e4f6], edi
pop rsi
add al, 0x8f
jbe 0x402bdc
xchg eax, esi
leave
xchg eax, ebx
jae 0x402c45
and bl, byte [rdi + 0x4a]
add byte es:[rdi], al
cmp dword [rcx], edi
enter 0x4cc0, 0x26
sbb byte [rip + 0x27939064], r8b
pop rsi
cmp eax, dword [rdx - 0x47]
xchg eax, ebx
sbb dword [rbp + 0x3731601c], 0x77
adc eax, 0xc8334d06
fst dword [rax]
add ah, byte [rip + 0x641c8622]
nop
xchg eax, ebx
adc qword [rbx + 0x27933c5c], rax
sahf
sbb al, 1
cmp eax, dword [rdi]
and byte [rdx], dh
cmp al, 0x79
jb 0x402bc5
pop rcx
xlatb
movsxd rbx, dword [rcx]
adc byte [rcx], 0x2a
add byte [rax], ah
sahf
out dx, eax
or dword [rax], edi
sbb r12b, spl
in al, 0x9d
or byte [rax], dl
fisttp word [rdi + 0xe]
leave
leave
jrcxz 0x402c3d
xor ebx, dword [rdi]
or dword [rdi + 0x784f2136], eax
pop rdi
mov cl, byte [rcx]
jnp 0x402c67
js 0x402c40
or dword [rdi - 0x15], ecx
xor dword [rcx + 0xa], ebp
add ah, cl
test dword [rdx + rbp], edi
mov bl, 0xa
scasd eax, dword [rdi]
pop rsp
cdq
ret
rcr dword [rdx - 0x79], 0x17
clts
cmp dword [rbx], edi
test byte [rbx], ah
or ebx, dword [rdi + 0x46]
or esi, dword [rsi + 0x72]
nop
rcl dword [rdi], -0x7c
add byte [rip + 0x4f27473c], ch
sahf
sbb eax, 0x33d48f0c
jl 0x402c7f
ret 0x1817
nop
or al, 0xd6
or al, 0x6f
xchg eax, ebx
pop rsi
sbb dword [rsi + rax + 0x170d4da7], ebx
xor byte [rsi - 0x38], bl
mov esi, 0xe1dff0d
in al, 0xc9
xchg eax, ebx
jg 0x402cd2
cmp byte [rax], al
mov dword [rsi], ecx
in al, 0xe4
or esp, dword [rbx + 0x28ca5f0e]
sahf
sbb al, 0x13
psadbw mm5, qword [rcx]
sbb al, 0xe4
in al, 0xc9
or byte [rdi], 0x50
xor eax, 0x6103d91
cmp dword [rbx - 0x7f], edi
pop rsp
adc byte [rdi + 0x72763ab8], cl
nop
rcl dword [rdi], -0x5b
in al, dx
cmp eax, 0x27208f1a
add dword [rcx], edx
nop
sub eax, 0xf2720ee2
in al, 0xb8
adc ebp, edi
cmp ecx, dword [rsi]
adc dh, byte [rdx - 0x50]
out dx, al
and esi, dword [rdi - 0x72]
adc ah, byte [rdi]
cmp dword [rcx - 2], edi
ja 0x402d2e
adc edi, dword [rax + 0x4d]
cmp byte [rsp + rbx*4], ah
adc esi, dword [rdi - 0x7b0d86a0]
xchg eax, ebx
retf
movsb byte [rdi], byte ptr [rsi]
adc eax, dword [rdi]
add al, 0x40
add qword [rcx + 0x4e], rax
sahf
cmp al, 0x54
adc al, 0x2c
xor dword [rbx], esi
leave
mov bl, 0x17
enter 0x14be, 0xc
adc eax, 0x852764d7
cmp al, 0x39
enter -0x6ca4, 0x15
and byte [rbx + rax*4], 0x9c
cmp al, 0xe9
int3
adc eax, 0x6c336877
iretq
pop rsi
enter 0x1693, 0x2a
mov bh, 0x16
pop rdi
cmp edx, esi
in al, 0x20
mov dl, 0x74
nop
mov al, 0xb
mov word [rdi], ss
jrcxz 0x402d6d
ljmp [rdi]
mov ebp, 0x6272720e
and eax, 0x5b1855ae
jbe 0x402d70
add al, 0xef
sbb byte fs:[rcx + 0x76], bh
or byte [rbx + 0x18c417b1], bh
sub qword [rax + 7], r11
cmp dword [rip + 0x135d1943], ebx
and byte [rip + 0x196a1047], bl
sbb dword [rsp + rbp*2], 0x77c04990
sbb eax, 0x2ec211a
jns 0x402dfd
sbb ah, dh
cmp dword [rcx - 0x2a], edi
cmp ebx, dword [rbx]
fbld tbyte [rax + 0x1b874148]
nop
cmp byte [rdi], ah
scasd eax, dword [rdi]
sbb ebx, dword [rdi]
in al, 9
sbb al, 0x7f
push rbx
and eax, 0xc9c83344
rcl dword [rdi], -0x38
and al, 0x7d
movabs eax, dword [0xb7088f115080c60e]
mov ah, 0x1c
adc byte [rax + 0x21], bh
sbb eax, 0x1205ec87
stosd dword [rdi], eax
sbb eax, 0x471e0397
cmp al, 0x81
rol dword [rcx - 0x4c], cl
outsd dx, dword [rsi]
sbb esp, r12d
in al, dx
test dword [rax], ecx
mov esi, 0x41c85e20
fstp qword [r15]
cmp al, 0x7b
and edi, ecx
out dx, eax
adc dh, byte [rdx]
pop rsp
and byte [rdi], dl
jb 0x402e34
leave
xchg eax, ebx
sbb dword [rdi + rsi*4 + 0x32792115], 0x65
je 0x402e45
enter -0x2a11, 0x11
add bl, byte [rdx]
xchg eax, edi
enter 0x13c9, 0x38
loope 0x402e40
lahf
shl byte [rsi], 1
loopne 0x402daa
cmp al, 0x39
cmp eax, 0xc83aa422
and bh, byte [rcx]
jnp 0x402e51
stc
push rdx
and ebx, dword [rdi + 0x10]
or edi, dword [rcx - 0x3e]
and dword [rdi + 0x23], ebx
in al, 0xd9
mov cl, 0x23
pop rdi
enter 0x3c3f, 0x24
movabs al, byte [0x12a74c3d9390669e]
add rax, 0x6f339072
mov bh, 0x24
or al, 0x76
in al, dx
and eax, 0x34428447
test al, 0x72
nop
xchg eax, ebx
xor dword [rbp + 0x49], 0x39
or esp, dword [rsi]
cmp dword [rcx - 0xe], edi
xchg qword [r9 + rdi], r15
fmul st(1)
mov eax, 0xf0d71442
xor al, 0x2a
or ebp, esp
test dword [rdx], edi
mov r14b, 0x27
in al, 0x49
in al, 0xae
push r15
sub byte [rdi - 0x1f], al
in al, 9
lock sub byte [rdi], al
sbb byte [rdi], ah
sub qword [rsi + r9], rcx
jb 0x402ec2
fst qword [rip - 0x1db0e8ff]
add eax, 0x522a09f2
sub bh, byte [rdi - 0x1e]
xor eax, 0x21775d09
mov bl, 0x17
adc byte [rbp - 0x6f9b50e4], dh
xor ecx, dword [rsi]
mov edi, 0x28ab872a
hlt
sahf
sbb al, 0xa
sub edi, dword [rax + rbp - 0x4361d485]
nop
movabs al, byte [0x90720541ed2bf73b]
adc ebp, dword [rdi - 0x4cd3606a]
in al, dx
mov ebx, 0x248ebf2c
fsubr qword [rdi + rcx*4]
cmp al, 0x39
enter -0x6837, 0x31
push rsp
pop rdi
sub eax, 0xbd049e2
in al, dx
test dword [rcx + 0x2dab5f2d], edx
leave
sahf
insb byte [rdi], dx
cmp ch, byte [rsi]
jns 0x402f5a
in al, 0x92
sub byte [rdx + 0x47385f2e], bl
mov esp, 0x673c9e40
add dword [rcx + 0x2f], edx
mov esi, 0x178cf22f
fild qword [rbx]
xor byte [rdi - 0x55], ch
sub bl, byte [rsi - 0x38]
mov bl, 0x17
stosb byte [rdi], al
xor byte [rdi + 0x311d3d92], bh
in al, 0x20
iretd
xlatb
int3
lodsd eax, dword [rsi]
mov cl, 0x31
jbe 0x402fbe
mov al, 0xb
ljmp [rdi]
pop rsp
sub edx, dword ss:[rdi]
mov eax, dword [rcx + 0x4e]
adc eax, 0x9f223a32
xor ebx, dword [rsi + 0x20]
jne 0x402f95
add dword [rdi], ecx
xor esi, dword [rax]
sbb edx, dword [rdx - 0x3fd01aa8]
pop rsi
and byte [rdi], al
cmp dword [rbp + 0x37], ebx
xor ecx, dword [rbx + rsi + 0x39]
enter 0x13c9, 0x4f
or al, 0x3c
push rax
xchg eax, ebp
xor esp, dword [rdi]
sahf
cmp al, 0x40
xor ah, ch
add ch, bh
xor esi, dword [rdi]
in al, 0xc9
xchg eax, ebx
xchg eax, ecx
add dword [rbx - 0x42b910cc], ebp
jb 0x402fe6
or esi, dword [rip + 0x10e0358a]
jbe 0x402f26
cmpsb byte [rsi], byte ptr [rdi]
int3
xor eax, 0xcf2720e4
pop rdi
cmp dword [rdi], esp
xlatb
xor eax, 0xe4872793
or r14d, dword [r14]
outsb dx, byte [rsi]
cmp byte [rbx + 0x72], al
jb 0x402f51
outsd dx, dword [rsi]
xchg dword [rsi], esi
wait
sahf
cmp al, 0x81
out 0x79, eax
sahf
add dl, byte [rbp + 0x37]
mov esp, 0x3ae02790
sal byte [rdi], 1
out 0x3c, eax
mov dh, 0x90
sub eax, 0x27c09f6f
pop rcx
cmp byte [rsi + 0x17], ah
jmp qword [rcx]
cmp dword [rcx], edi
enter 0x382e, 0x39
jb 0x403045
loopne 0x402ffd
ret 0x396d
mov esp, 0x3e06cf39
test dword [rbx + rdi*2], edi
and dword [rdi], esi
cmp al, byte [rdi + 0x3d]
mov ebp, 0x3ad0ea40
iretd
xor dword [rbx], edi
and byte [edi], ah
iretd
pop rsi
xchg eax, edx
cmp ecx, dword [rdi - 0x79cad5b0]
mov al, 0xb
in al, 2
cmp al, 0x20
outsb dx, byte [rsi]
xchg eax, esp
jl 0x403047
mov edi, 0x881ac73c
fadd st(6)
loopne 0x40304e
nop
int1
add dword [rip - 0x3fc94ef9], edi
or ecx, dword [rax + rdi*4]
test byte [rdi + 0xc0b3d99], dh
and byte [rdi], r14b
jrcxz 0x40308d
fsubr dword [rip + 0x1740473e]
pop rax
mov word ds:[rdi], ss
add al, 0x87
xchg eax, esi
mov ebx, 0x610e873e
iretq
sbb dword [r15], r15d
sahf
jo 0x403075
or dword [rdi], ebp
jno 0x4030b6
fist word [rcx]
loopne 0x403081
test byte [rdx - 0x36], 0x3f
adc al, 0x40
jne 0x4030ce
inc qword [rsi + r8*4 - 0x7e4eb8c0]
je 0x403058
and byte [rcx + rax*2 - 0x41], cl
mov al, 0x7a
jg 0x4030db
cmpsd dword [rsi], dword ptr [rdi]
fild dword [rcx + 0x2f]
jb 0x403072
or edi, dword [rcx - 0x7b]
sub dh, byte [rax]
pop rdi
xchg rax, rbx
sbb eax, 0x17444374
adc cl, byte [rdi - 0xde8ddd8]
in al, 0xc9
inc dword [rcx]
fiadd word [rsi - 0x4f]
test byte [rdx - 0x60], 0x17
movsb byte [rdi], byte ptr [rsi]
out dx, eax
bnd jg 0x40304c
add al, 0x6b
movsxd rsi, dword [rdx + 0x74]
jae 0x403144
jne 0x403138
movsxd rdi, ebx
movsd dword [rdi], dword ptr [rsi]
lcall [rdi + 0x4a]
push r10
pop rdi
push r11
push rsp
or dword [rax + 0x67657265], esp
imul ebx, dword [rdx], 0x5bffbbdb
pop rdi
je 0x40315f
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x40311b
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx - 0x49]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x40316b
jne 0x403187
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x403180
sub dword gs:[rsi + rbp - 0x41], esp
std
add eax, 0x383537f6
xor eax, 0x69665f24
outsb dx, byte [rsi]
imul ecx, dword [rax], 0x79617272
pop rdi
out 0xbe, al
outsb dx, byte gs:[rsi]
je 0x4031a6
jns 0x403136
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x403172
or eax, 0x37584fe
pop rdi
sub dword [rdx + rbp + 0x53], esi
outsd dx, dword [rsi]
jne 0x4031bf
movsxd rsp, dword [rbp - 0x26]
idiv byte [rdi + 0x7070a1dd]
sub dword [rdx + 0x53], ebx
je 0x4031a7
xor dword [rcx], edi
jo 0x4031c8
adc byte gs:[rdi - 0x62], dh
imul dh
fcmovnbe st(0), st(6)
xor bh, byte [rsi + rbp*2 - 0x5c]
jb 0x4031e2
movsxd rsi, dword [rdx + rbx + 0x5a]
xor al, 0x6d
cmp al, 0xcd
fdiv st(7), st(0)
test dword [rbp + 0x32], 0x5246a963
pop r15
int3
fdecstp
retf
xchg dword [rbx], ecx
push rbp
and byte [rax + 0x44], cl
push rdx
adc dh, dh
jle 0x403194
inc dword [rdi + 0x4c]
pop rdi
push rbx
cld
push rsp
sub byte [r8 + 0x13616d6b], r9b
adc byte fs:[rdi + rax + 0x73], dh
sub edi, dword [rdi + 0x77]
mov ebx, 0x454e5944
xchg eax, r15d
push rbx
je 0x4031f7
xor bl, byte [rdi + 0x56]
bnd jnp 0x403187
insd dword [rdi], dx
lodsd eax, dword [rsi]
pop rdi
sti
adc byte [r8 + rsi*2], sil
jb 0x403221
imul ebx, dword [rdx], 0xadf6ddba
cmp al, 0x63
js 0x40325b
xor dword [rax], eax
xor bl, byte [rdx]
imul esp, dword [rbx + 0x3e], 0xef0cd672
fimul word [rdi + 0x49]
movsxd rsi, dword [rcx + rsi]
movsxd rbp, dword [rax + 0x61]
push rsp
pop rbx
pop rdx
out 0xdc, eax
jae 0x403211
push r11
add al, 0
push rbx
xor eax, 0xdf67b160
xor dword [rbp + 0x76], r8d
pop rsi
jbe 0x403272
push rdi
out dx, eax
in eax, dx
in al, 0x10
xor dil, byte [r9]
outsb dx, byte [esi]
jne 0x403268
fnsave dword [rdi + 0x706f0935]
jae 0x40325e
imul esi, esi, 0xc2765fd6
jmp 0x4032a4
or eax, esp
xor byte [rdi + 0x15], bl
adc al, 0xe7
xor byte [rax], ah
insb byte [rdi], dx
in al, dx
jae 0x4032b9
xchg eax, r11d
fidivr word [rcx + 0x75d7bc37]
jae 0x4032b9
cmp al, 0x63
imul eax, dword [rbp + 0x4f], 0x10
xor eax, 0x426c6f73
cwde
lea ebx, [rbp + 0x42]
xor eax, 0x6c006950
mov ch, 0x2d
or byte [rcx - 0xdcdd7ec], al
push 0x25bee6b4
push -0xe88908e
cmp cl, byte [rcx]
add byte [rdi + 0x6a], bl
cld
push rsi
cmc
push 0x50
movsxd rax, dword [r8 + 0x40]
sub al, 0x7c
pop r8
pop rax
pop rdi
fsubr dword [rax + 0x6d]
in al, dx
xor ebp, dword [rsi]
xor al, 0x2a
sub dword ss:[rbx + rcx + 0x6eb69849], esp
xor qword [r9 + 0x16d136e], rax
or byte [rbp + 0x612b3c3d], dl
and dword [rax - 0x5f], edx
fisubr dword [rbx + 0x4b]
push 0x67
scasb al, byte [rdi]
add eax, 0x3095b616
loope 0x403256
mov bh, 0xa1
retf 0x2054
test byte [rsi + 0x54e729d1], dh
and dword [rbx + 0x3b615305], ebp
xor dword [rax - 0x5206eab3], eax
ja 0x4032c3
push rbx
test byte [rbp - 0x4e], ah
out 0x49, al
sbb rdi, qword [rcx + 0x44]
jo 0x40332f
add al, 0x84
xchg eax, ecx
xchg dword [rdi + rdi*4 + 0x36], edx
xor al, al
in al, dx
adc eax, 0x343323f6
jae 0x403368
jo 0x403359
jbe 0x403348
jo 0x4032b9
sub edx, dword [rax + rdx*8 + 0x54]
xor dword [rbp + 2], esp
fsub dword [rbx + rax*2 + 0x4b70101a]
sbb dword [rbx + 0x20], ebx
and al, 0xac
adc eax, 0x2e776949
or ah, byte [rcx + 0x5f]
in al, dx
add eax, 0x31ba1162
add byte [rax - 0x3f5c4885], ah
stc
xor al, 0x2e
jp 0x403391
cld
loop 0x403374
xor dword [rsi + 0x69], 0x75463862
mov dh, 0x14
in eax, dx
sub dword [rbx + 0x31], 0x33
insd dword [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
jrcxz 0x4032da
cmp sil, byte [r13 + 0x356eb76d]
jne 0x403350
mov bh, 0x41
fld xword [rdi]
jne 0x40337b
ja 0x4033b9
jge 0x4033c3
add byte [rsi + rdx*8 + 0x1f05325c], ah
push rdi
xor sil, byte [rsi + r8 + 0x56da6734]
sbb eax, 0x81c3bf2c
mov bh, 0x31
xor al, 0x70
or byte [rcx - 0x2a], ch
movabs byte [0x759e160704216ac0], al
nop
mov al, 0x5f
push -0x4e6b8f9c
sub dh, byte [rax + 0x20e63b5]
sbb dword [rsp + rax*2], ebx
jrcxz 0x403369
xchg eax, ecx
shl dword [rcx + 6], -0x1e
jrcxz 0x403384
mov cl, 0x45
cmp esi, dword [rcx]
sub cl, dh
movsxd rsi, esp
jbe 0x40334c
or al, 0x37
std
cmp byte [r10 + rcx - 0x7d], r10b
pop rdi
or al, byte [rdx]
push rdx
push rbx
cmp byte [rdi + 0x6d], bl
add edx, dword [rdi - 0x5196abfb]
fidivr word [rbx - 0x289ebe2e]
shl dword [rsi], 0x6f
jns 0x40342e
mov cl, 0x7e
jnp 0x403444
fcom qword [rax + 0x54]
scasd eax, dword [rdi]
pop rsp
enter 0x5766, 0x43
mov ebx, 0x1353613c
adc ah, byte [rip - 0x4253aee9]
rcl byte [rsi - 0x29], 1
xor dh, byte [rcx]
outsb dx, byte [rsi]
int 0xb6
adc ecx, 0x3f
sbb al, 0x4a
jbe 0x403456
push rdx
test dword [rbx + 0x6c], 0x81567359
test ecx, edx
retf
add al, 0x9a
sub cl, byte [rbx + 0x42]
mov edx, dword [rbx]
shl byte [rax - 0x73cf13d3], 1
pop rsi
xchg eax, ecx
xchg eax, ecx
add eax, 0x8b38383c
adc eax, 0x5262e0c2
lodsb al, byte [rsi]
add al, 0x5c
add al, 0xab
sar byte [rdx + 1], 1
test byte [rbp - 0x1f], al
imul ebx, dword [rcx], 0x424590da
clc
insb byte [rdi], dx
push rax
jbe 0x403414
out dx, al
jmp 0x40345f
and al, 0x57
leave
xor ah, byte [rdx - 0x75]
stosd dword [rdi], eax
xchg eax, esi
and byte [rax + rbp], ch
movabs eax, dword [0x4c492cd477e0e6f0]
jmp 0x403432
loopne 0x40341d
xor byte [rdx], ch
leave
stc
movabs al, byte [0x90024153addb5ab0]
xor esi, dword [rdi]
test eax, 0x5e69525b
sal ecx, 1
or eax, 0xc6bad1c9
xor byte [rip + 0x33b9e5ae], bl
or dl, byte [rbp - 0x35bd5b2e]
xchg byte [rdx - 0x5c], al
fidivr word [rcx]
pop rdi
jb 0x4034f1
je 0x40345b
leave
adc eax, dword [rax + rsi*8 - 0x6fbdbe3a]
xor dword [rsi], ebp
xor ecx, esp
xor dl, byte [rax - 0x36f7e5ce]
mov ah, 0x2e
stosd dword [rdi], eax
add eax, 0x366b8824
adc dword [rcx], esp
add eax, 0x827afc2c
or esp, ecx
sub byte [rdi], ah
cmp al, 0xe
fild dword [rbx + 0x5f857a64]
xor ch, byte [rsi]
add dword [rip - 0x76dadeb8], esi
adc byte [rdi], dh
and dword [rax], esi
mov al, 0x80
mov ah, 0x36
xchg eax, ecx
jle 0x40345f
lodsd eax, dword [rsi]
sub r12b, cl
int1
cmp byte [rdx - 0x31ce37b9], dl
insb byte [rdi], dx
outsd dx, dword [rsi]
outsd dx, dword [rsi]
or dword [rax], edx
mov byte [rbp + rcx*8 - 5], ch
push -0x39
pop rsp
add dh, byte [rsi + 0x5c406637]
and qword [r10 - 0x2f], 0xffffffffffffff91
and dl, ch
push rdx
add al, 0x85
fsub dword [rdx]
xchg eax, esp
jae 0x403555
push rdx
xchg byte [rbp + 0x7249136e], ah
pushfq
je 0x403584
jo 0x403527
or al, byte [rbx - 0x11cfce05]
or esp, dword [rcx + rbx*4]
test byte [rbx], al
push rax
xor byte [r14 + 0x11], bl
sbb byte [rax], ah
jl 0x4034db
adc eax, 0x4b2f9dba
outsb dx, byte [rsi]
mov edx, 0x6c63638a
jnp 0x403547
push rbp
xor edi, dword [rip + 0x24255201]
test eax, 0x85b46a79
xor dword [rbx + 0x7b], 0x44
add bl, cl
loopne 0x403590
movabs byte [0x4a33e05f78621130], al
sbb al, 0x82
stosb byte [rdi], al
outsb dx, byte [rsi]
ja 0x4035c7
push rsp
imul ebx, dword [rax + 0x14a2dad1], 0x458cc070
xor dword [rbx + 0x7130c9e], 0x84314085
xor eax, ebx
or esi, dword [rdx]
insd dword [rdi], dx
or dh, byte [rax + 0x4c]
pop rdi
js 0x40353c
add byte [rbx + 0x348d980b], ah
movabs byte [0x24385d2446e0ca84], al
ficom dword [rdx + 0x41]
movsxd rbp, dword [r12 + r8 + 0x331c81d9]
movabs r8, 0xb2b8c95968c041ab
adc al, 0x56
sub byte [rcx + 0x69], dl
push rsi
out 0x38, eax
xor eax, esi
call 0xffffffffb1c538b7
sbb al, 0x58
add eax, 0xc2b8d118
xchg eax, edx
adc eax, dword [rsp + rsi + 0x6302ddc6]
test al, 0x84
sbb dword [rdi + 0x13], ecx
xor ecx, dword [rbx + 0xc]
jrcxz 0x403621
adc bh, byte [rip + 0x496d0f41]
movabs byte [0x706890430cce3452], al
adc ecx, esp
push rsp
pop rbx
movabs byte [0x76153831006d40b7], al
mov ebp, ebx
push rbp
sub ebx, dword [rcx + rcx*2 + 0x71]
cmp r8b, byte [r9]
xchg eax, esi
or ah, byte [rbp + 0x64fa9f64]
mov al, 0x31
sbb dword [rax - 0x6b8ccebd], 0x52b8b291
outsb dx, byte [rsi]
test byte [eax], 0x5d
add bl, byte cs:[rsi + rax*2 - 0x3d49a0c7]
add ah, byte [rcx]
pop rbp
jbe 0x40369c
int1
loopne 0x403651
mov ebp, dword [rdx]
cmc
pushfq
xor byte [rax - 0x25], ch
or al, 0x75
adc ah, byte [rbp + 0x1e]
movsxd rsi, dword [rdx]
cdqe
xchg eax, ecx
and ch, byte [rax + 0x704a4b8]
sub al, 0xd2
mov ch, 0x60
enter 0x2510, -0x5e
xor dword [rcx + rsi*2], ebx
adc eax, 0x37561966
and eax, 0x16d830a5
cmp ecx, dword cs:[rdx + rbx*8 + 0x5c044289]
loope 0x40364d
sub byte [rbp - 0x3c], ah
movabs dword [0x6676026175185094], eax
add dword [rbx], 3
xor esi, dword [rdx]
jp 0x4036bc
ja 0x4036b0
mov bh, 0xe4
and dh, byte [rdx]
xor eax, 0x60bcd39
fisubr dword [rbx + 0x1e]
xchg dword [rdx + 0x69], edx
mov ah, 0x98
push rdx
mov ch, 0xee
or eax, 0xb3649840
mov ecx, 0xb9a198d7
xchg eax, ebp
jo 0x403636
loop 0x40366b
retf
push rcx
mov eax, dword [rdx + 0x21]
out dx, al
cmp dl, byte [rax]
sbb eax, 0x4ff76a46
mov edx, 0x30e38247
xchg eax, edx
out dx, eax
add eax, dword [rbx + 0x1e]
xchg eax, r12d
and dword [rbx], eax
mov al, 0x4e
xchg eax, edx
pop rbx
test byte [rax + 0x4c], 0x4e
xchg dl, dl
loop 0x40370d
movabs byte [0x5aac22b3c975b0d9], al
xchg eax, ebp
sub dword [rbx], eax
add byte [rcx], bh
push rdi
insd dword [rdi], dx
push rcx
add dword [rax + 0x18924d0b], edx
and bl, byte [rbx + 0x7676fd40]
pushfq
cwde
scasd eax, dword [rdi]
and al, 0x62
sub eax, 0xdd70101d
jbe 0x4036e5
xor ebp, edx
adc byte [rbp + 0x6d], ch
jnp 0x4036bb
test al, 0
fcomp dword [rax - 0x3e]
mov dl, dh
sub byte [rbx + 0x73], al
push rdx
add al, 0xd2
push rcx
and bl, byte [rbp + 0x37]
add eax, dword [rdx]
mov dword [rdi + 0x6f766909], esi
mov eax, 0x121918b8
mov bh, 0x5f
xchg byte [rcx], al
ret 0x59a
out dx, al
xor eax, 0xc5d4190e
xor eax, 0xb86eec62
jno 0x40373d
movabs eax, dword [0xb056aa604bb26b4a]
mov es, word [rsi + 0x64]
add eax, 0x8058b92
mov ch, 0xd9
sub al, 0x70
cmp al, 0x48
jmp 0x40375b
loopne 0x403700
rcl byte [r10 + 0x1b], 0x95
cmp dword [rax], ebp
hlt
and esp, esi
jae 0x4037c2
in eax, 0xe7
add al, 0x81
mov dh, 0x48
pop rdi
cmp byte [rdi], r15b
ret 0x42ac
and eax, 0xc073f97e
movabs byte [0x2114aa49746c1392], al
sbb eax, 0x8b401818
insd dword [rdi], dx
xchg dword [rcx + 0x74641684], edx
fistp word [rcx + 0x2058096f]
xor al, 0xcb
out dx, al
jnp 0x4037a7
add byte [rcx], ch
clc
movsxd rbp, dword [rsp + rdx*8 + 0x11]
adc byte [rdx], ch
sub esp, dword [rbx]
xchg eax, edi
push rax
movabs byte [0x221c0192414186cc], al
mov byte [rdx + rdx*4 + 0xe], ch
stosd dword [rdi], eax
xchg eax, edx
xlatb
or al, 0xa2
nop
test dword [rsi - 0x10bb319f], esi
xor dword [rdx], eax
cmp dword [rsi - 0x67fafc9f], esp
sub byte [rax], bl
iretd
jb 0x40380e
movsb byte [rdi], byte ptr [rsi]
or byte [rbx + 0x4c577ccd], bl
add byte [rsi + 0x4d], dl
jbe 0x40374e
cmpsb byte [rsi], byte ptr [rdi]
and cl, ah
leave
sbb dword [rcx + rsi], edx
xor al, 0x51
add al, 0xd
fcomp qword [rsi + rsi*4 + 0x42c8c564]
push rdx
add cl, byte [rax]
sbb rax, -0x5e5b574c
xor eax, dword [rbp + 0x42]
mov ebp, dword [rbp + 0x4d]
push rbx
and al, 0x45
pop rax
mov ah, 0x88
or dword [rbx], esi
sbb ebp, ebp
or eax, 0x6d5b0a46
jl 0x403787
shr dword [rsi], 0x5a
mov ebp, dword [rsp]
cld
jb 0x403880
ret
push rax
and al, ch
xor eax, dword [rdi]
xchg rax, rbp
adc dword [rcx], ecx
mov ah, 0x91
sub dl, byte [rcx + 0x48]
xor cl, byte [rax + 0x42]
cmp byte [rdx], cl
int 0xe1
push rsp
test byte [rbx], ch
test dword [rcx + 0x21ef3304], ebx
rol byte [rcx], 1
sbb byte [rcx + 0x41], cl
jbe 0x403856
push rax
test al, 0x6c
cmpsd dword [rsi], dword ptr [rdi]
scasb al, byte [rdi]
push rdx
xchg eax, r13d
pop rsp
cmp byte [rdx + rbx*4 + 0x35], ah
add dword [rcx], 0x32a9334c
adc byte [rdx + 0x22af6a0e], 0xd1
and dword [rbx], ebx
loopne 0x403899
or r14d, dword [r14 + 0x4be01335]
imul eax, dword [rbp + 3], 0x66
adc al, r14b
shr dword fs:[rax + rcx + 0x34], -0x4f
fadd dword [rdx - 0x7f54f47a]
jp 0x4038e6
jns 0x4038b8
sbb ecx, dword [rsp + rdi*2 - 0x1b]
xor dword [rbx], edx
xor esi, dword [rcx]
ja 0x403883
and edi, ebx
shl word [rbp + 0x78], 1
nop
sub cl, byte [rcx]
jo 0x4038fc
jo 0x4038fe
xchg eax, esi
cmp eax, 0x500b9586
or eax, 0x3ae4080d
push rax
push rdx
enter 0x69ea, 0x6f
rcl byte [rbp + 2], cl
lodsd eax, dword [rsi]
xor al, byte [rdi - 0x6e77bba9]
adc al, 0x46
xchg ax, sp
lock adc byte [rbx], 0x1c
sti
movabs al, byte [0x3bd4dafe5220cb46]
sub bl, byte [rbx + 0x6e]
push rdi
xor byte [rax + 0x3947b272], cl
xor byte [rdx - 0x3aa35cd8], ch
adc dh, dh
mov dword [rbx], eax
loopne 0x40387e
insb byte [rdi], dx
xchg eax, esi
sub bl, byte fs:[rax + 0x44]
add cl, byte [rcx + rax*2]
mov bh, 0x32
cmp eax, 0x4cc20c82
xor r11d, dword [rcx + 0x2c]
or bl, byte [rcx]
out dx, eax
int3
and byte [rsi + 0x6f], ah
jge 0x403874
cmp ah, byte [rdx]
lodsb al, byte [rsi]
pop rax
push rsi
xor bh, byte [rax + 0x67391975]
or dl, byte gs:[rax + rsi*2 - 0x55]
add cl, bl
sbb cl, 0xf1
push rbp
xor byte [rsi - 0x5e], ah
iretd
sbb edx, dword [rbp + 0x60]
shr byte [rsp + rdx + 0x68], 0xe
xor al, byte [rax - 0x567dba81]
pop rax
nop
retf 0x53d9
pop rax
xor eax, 0x8a1e33f2
xlatb
xor eax, 0xe46d4968
movsxd rsi, dword [rdx]
add dl, byte [rcx + 0x5bb080d4]
test byte [rdx - 0x70], al
rcl dword [rax - 0x68f6b747], 1
and eax, 0x7159661
pop rax
xor ch, byte [rsi]
mov al, 0xb0
adc dword [rip - 0x109a436e], ebx
add eax, 0x5361ef46
int 0xb1
or al, byte [rbx + rcx*2 - 0x65dd1ce0]
rol byte [rip - 0x2e94ad93], 0x55
movsxd rbp, dword [rdx]
xchg rax, rsp
add al, 0x62
mov ebx, 0xc200558d
or eax, 0xa2424352
test byte [rbp + 0x2a], ah
sbb byte [rsi], dl
adc ah, byte [rax + 0x54]
fbld tbyte [rdi]
or dword [rdx + rcx*2], 0x575cd112
pop r15
jge 0x4039e0
add bl, byte [rcx]
shl dword [rcx + 0x914216], 1
mov bl, 0xb6
ja 0x403a09
cmpsb byte [rsi], byte ptr [rdi]
and byte [rdx - 0x117445d0], bh
insb byte [rdi], dx
insb byte [edi], dx
int3
imul esp, dword [rbx - 0x70cdf1b6], 0xa1914a30
mov dh, 0x6d
sahf
insb byte [rdi], dx
in eax, 0x60
add ebp, dword ss:[rbx]
movabs eax, dword [0x2d9002b16aed60e6]
add dh, byte [rbp + rbp*4 + 0x2c]
push rsi
add bl, byte [rcx + 0x12480303]
adc dh, byte [rsi + 0x15]
test dword [rbp + rax*2 + 0x2b205a6d], edx
test byte [rsi], bl
sbb ebp, dword [rax + 0x31fa9460]
xor eax, 0x95f5e64
sahf
jb 0x403a62
mov ah, 0x5a
jge 0x403988
pop rdx
invd
imul edi, dword [rax - 0x35], 0xc4181aba
movabs al, byte [0x6d76b145d05216a5]
movsb byte [rdi], byte ptr [rsi]
pop rax
xchg eax, edx
xor dword [rbp + 0x55d88908], eax
xor eax, 0x6830bc22
jno 0x403a50
cmp byte [rbx + 0x506588ef], bl
in al, dx
movsd dword [rdi], dword ptr [rsi]
in al, 0xa
fbstp tbyte [rax]
adc al, 0x53
test byte [rsp + rbp*4], al
xor dh, byte [rsp + 0x66f68516]
xor ah, cl
add eax, 0xcd33e661
push rax
xor ebx, dword [rax + 0x4977c911]
ror edx, -0x20
sar byte [rcx - 0x45], cl
lodsd eax, dword [rsi]
adc byte [rdx - 0x462dcdef], al
or byte [rax + 0x3350ac4d], dl
or dword [rcx + rax*8], ecx
xor al, 0x2d
fisttp dword [rax + 0xe]
imul esp, dword [r15 + 0x5f], -0x69
and rax, 0x73727c2e
and dword [rdx], 0x98765f87
shr byte [rcx], 1
mov dword [rax], esi
pop rdx
xor esi, dword [rdx]
add edx, dword [rcx]
and byte [rbp - 0x58bfe4d4], ah
or byte [rsp + 0x65524991], ch
add eax, 0x704c475d
je 0x403a68
mov cl, 0x2a
sub edi, dword [rbp + 0x99c512f]
ror byte [rcx + 0x44], 0xb4
mov ch, 0x21
loope 0x403a35
pop rdi
push rbp
adc bh, byte [rbx]
push rcx
mov bh, 0xfb
push rdx
xor al, 0x73
jne 0x403b1f
sbb eax, dword gs:[rbx + 0x43]
xor byte [rcx], al
mov eax, dword [rdx + 0x7e]
scasd eax, dword [rdi]
outsb dx, byte [rsi]
xchg eax, r15d
movabs eax, dword [0x583c6319a4b0661]
pop rcx
mov cl, 0x42
pop rcx
mov al, 0xa
or al, 0x56
stosb byte [rdi], al
pop rbp
jl 0x403a94
cwde
xor dword [rdx + rsi*2 + 0x41], esp
outsd dx, dword [rsi]
rcl cl, 0xa8
test byte [rsi - 0x67], ah
jbe 0x403b2b
push rdx
int1
xchg eax, esi
or esp, dword [rbx - 6]
mov ecx, dword [rax - 0x7e]
add eax, 0x8acb1168
or ebp, esp
xchg dword [rip - 0x206bad6f], edx
xchg eax, esp
add al, 0xf2
jg 0x403b77
xor byte [rax + 0x12d995a0], 0x81
adc al, 0x66
xor ah, byte [rax + 0x29353f21]
popfq
test al, 0x6f
jne 0x403b8d
push rbp
xchg byte [rax - 7], ch
and ecx, dword [rcx + 0x54]
add dword [rip - 0x39ac0f53], -0x7d
adc al, 0x35
fild dword [rax]
cmp ebx, ecx
insd dword [rdi], dx
jae 0x403bac
insd dword [rdi], dx
xor dword [rdx + 7], esp
je 0x403bab
push -0x5148d3f7
or eax, 0x770b64f
outsb dx, byte [rsi]
outsd dx, dword [rsi]
add al, 0x6b
sbb eax, 0xd4f2d1f
lodsd eax, dword [rsi]
ja 0x403adb
jne 0x403bc0
insb byte [rdi], dx
sub eax, 0xd006469
jb 0x403b98
mov bl, 0x36
jae 0x403bd3
or dword [rcx + rdi*2 + 0x6e], esp
sbb r10d, r8d
sbb al, byte [rcx + 0x296c7683]
or al, 0x83
mov ebp, 0x1b5f6e4b
out dx, al
insb byte [rdi], dx
sub byte [rcx], cl
jo 0x403b37
xlatb
add dh, bl
insb byte [rdi], dx
je 0x403bf9
int3
or ch, byte [rdi + rbp*2]
movabs al, byte [0x6605786908e6dd73]
adc eax, 0xa4eb6f24
add bh, 0xda
push 0x630681c
test dword [rsi + 0x59], ebp
or eax, 0xa504635d
sbb dword [rcx], eax
scasb al, byte [rdi]
or edi, dword [rbp - 0x7462ee94]
jge 0x403b8e
sub al, 0x43
or ebp, dword [rdx + 0x63]
jb 0x403b5e
int 0xde
add byte [rax + 0x7b], ch
pop rsi
pop rdx
mov ebp, dword [rax - 0x7b]
add al, 0xe8
push rdx
movabs al, byte [0x661b0000fddb2ab8]
push rsp
int3
retf
add cl, byte [rsi]
and al, 0x43
jb 0x403bd9
sbb al, 1
or dword [rax + rcx*2], 0x33
and eax, dword [rdi]
push rsp
push rsp
nop
or al, 0xc9
and byte [rax], ah
add al, 0x20
or dword [rcx + rcx*8], 0x31
je 0x403c70
nop
ja 0x403c42
leave
and al, 0x44
jg 0x403bfa
ljmp [rdi + 0x41]
sbb esp, esp
cwde
cwde
xor al, 0x69
xchg byte [rax + rdx*4 + 5], ah
or byte [rsi + 0xb], cl
sbb eax, 0xd001b064
rcl byte [rax - 0x64d9effd], 1
pushfq
sti
sbb byte [rdi], bh
sahf
sbb al, 0x90
push si
add esp, dword [rax + 6]
rcr byte [rbp + 0x24], cl
out 4, eax
pop rsi
mov edi, 0x93c9c9ff
add ecx, dword [rax + 0xb]
or rcx, qword [rax - 0x23]
nop
or eax, 0xff6b0702
and eax, 0x3f6c19df
cwde
mov edi, 0x3749600
fadd dword [rbx]
jp 0x403cac
add al, 0x4e
js 0x403bf4
sub cl, bh
sbb dword [rip - 0x7b00bdea], 0x3f
xor cl, al
and byte [rax + 0x1002d088], cl
nop
sbb qword [r14 + 0x8224d13], rcx
insb byte [rdi], dx
sub byte [rcx], bh
loope 0x403c8f
lcall [rdx]
mov dword [rdi], edi
jb 0x403c1e
xchg byte [r8 + 0x4301f080], al
adc byte [rdi], al
xchg eax, esp
jo 0x403c77
add ah, bl
popfq
adc dword [rdi], eax
rdmsr
enter 0x1d91, -0x63
jg 0x403cbd
adc dword [rsi - 0x28], esi
add bh, byte [rcx - 0x6e]
cmp dword [rax], eax
movabs dword [0x144b144393c9c9ff], eax
or qword [r11 - 0x56bcb6f3], rbx
mov edi, 0x64073f20
leave
cdq
mov edi, 0x923fb1c1
or dword [rsi + rsi], 0xffffffe4
jg 0x403cbb
in al, 3
jns 0x403d4d
mov edi, 0x4fc84fc8
jb 0x403c76
cmp al, 0xf4
adc cl, cl
mov esp, 0x93c9e48b
mov esp, 0x62019d60
fadd dword [rdx + rax*4 + 0x2a6f3db]
add al, 0x37
movabs dword [0xe7ee901906bf07e7], eax
psubb mm7, mm0
pop rax
test byte [rsi + 0x3fbff340], 0xb
mov al, 0x49
stosb byte [rdi], al
fild qword [rsi + 0x3f]
fsubr qword [rsi + rsi*4 - 0x5c]
clc
wait
nop
and dword [rbx + 0x7f06bf30], edi
adc byte [rdx + rsi*4], cl
sub eax, 0x6fbf9864
outsd dx, dword [rsi]
jb 0x403cc6
or byte [rcx], al
add dword [rcx + 0x706cf20c], edx
add byte [rax + 1], dh
adc ebp, dword [rax]
jb 0x403d50
mov edi, 0x7339286e
call qword [rax + rdx]
sbb dword [rax + 0x761c2008], edx
adc byte fs:[rdx + 0x7f154f38], dl
loopne 0x403d11
nop
or eax, 0x343f1730
jno 0x403d83
ret 0x7bf
cmpsb byte [rsi], byte ptr [rdi]
sahf
sbb al, 0x81
nop
loop 0x403d33
nop
retf 0x11e
sub ebx, dword [rbx + 0xbb48b1]
movsb byte [rdi], byte ptr [rsi]
cmp dword [rcx - 0x2a], edi
push rax
jno 0x403d84
push rax
xor ah, byte [rdi]
xchg dword [rax - 0x5f80f6ff], esi
xchg eax, esi
add byte [rax], al
sub al, 0x92
adc al, byte [rax]
add byte [rax], al
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x36f7fdea], ecx
int 0xaf
xor bl, byte [rdx - 0x3b]
call 0x40a050
adc eax, dword [rax]
add byte [rax + 0x490000d3], dh
add byte [rax], al
jo 0x403dbd
add byte [rax], al
add bh, bh
