call 0x401ef8
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401d10
add ebx, ebx
je 0x401cc6
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x401cfe
cmp rbp, -4
ja 0x401cfe
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x401ce6
add ecx, 4
mov dl, byte [rax]
je 0x401d0e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x401cfe
ret
cld
pop r11
cmp r8b, 2
je 0x401d26
jmp 0x401da3
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x401d36
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401d1e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401d4e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401d3b
sub eax, 3
jb 0x401d6c
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x401da3
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x401d93
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401d91
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401d80
cmp rbp, -0xd00
adc ecx, eax
call 0x401cd2
jmp 0x401d26
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401e7c
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401e1a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x401e66
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401e39
push 0x3a707474
jne 0x401e92
js 0x401e52
jae 0x401e8c
outsb dx, byte cs:[rsi]
je 0x401e4b
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x401eb9
jb 0x401eab
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x401ed6
jb 0x401ee9
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x213789
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x213789
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x401db4
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x401edf
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401e8d
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add eax, dword [rax]
jmp rbp
call 0x706f1f87
jb 0x401f9f
movsxd rbp, dword [rdi]
jae 0x401f99
insb byte [rdi], dx
js 0x401f9f
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401f7f
cmp rsi, rcx
jae 0x401f87
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x401f66
cmp al, 0x8f
ja 0x401f66
cmp byte [rsi - 2], 0xf
je 0x401f6c
sub al, 0xe8
jg 0x401f69
push rdi
cmp al, 1
ja 0x401f54
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x401f57
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x401f84
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401fdb
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c2459
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40201f
mov al, 0xa
jmp 0x40201f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401ffb
inc ebx
mov al, 0
jmp 0x402023
mov al, 2
jmp 0x402023
mov al, 3
jmp 0x402023
mov al, 0x3c
jmp 0x402023
push rcx
rcr ah, 1
fstp st(7)
jle 0x402064
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x402076
jg 0x402068
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a77eb
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4020c2
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb723f
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4020ca
cmp esi, 0x21585055
jne 0x4020ce
jge 0x4020c0
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4020c3
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4020c7
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x402173
pop rcx
or al, 0x3b
jb 0x402179
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4020eb
jmp 0x4020ed
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x366202e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf54276
in eax, dx
jg 0x402125
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x40216b
mov bh, 0x2a
add edi, 0x10
jmp 0x402168
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4021a5
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4021e1
jne 0x4021f8
fstpnce st(6), st(0)
jle 0x4021c1
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4021f7
jrcxz 0x40222b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1c18f
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4022aa
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x40226a
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x5829683f
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4022dd
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x402277
and ecx, 7
or al, 0xeb
jae 0x4022e2
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x402317
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x402355
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x40230e
push rax
call 0xffffffff868d1ffb
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x402318
std
cmp edi, esi
xchg eax, edi
jle 0x40236d
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c968f9
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x40236b
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x402359
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x402382
js 0x4023c2
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x402454
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad368f
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x402475
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x40247a
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21f2c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x402408
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
cmp ecx, dword [rcx]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + 0x9020a2], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dil, dil
movsb byte [rdi], byte ptr [rsi]
sbb al, 0
add byte [rax + 0x2000008], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x40252e
je 0x402537
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402500
mov dh, 0x7d
jbe 0x4024ff
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0x83
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x402538
sahf
sahf
add al, 0
cwde
add eax, 0x1f90d000
and byte [rdi + 0x5580006], bl
add byte [rdx - 0x6fd827f8], cl
invd
add al, al
or dword [rax], eax
jo 0x402521
ja 0x402587
add ch, byte [rbx]
or dl, byte [rdi]
or esp, dword [rdi - 0x4ff1a9fc]
or ebx, dword [rdi + 0xc]
and byte [rdi], bl
fisttp dword [rip + 0xe170d04]
add byte [rax], dl
nop
seto byte [rdi + 0xf]
add ah, dl
adc byte cs:[rax], al
loopne 0x402524
enter 0x1127, 0
nop
adc al, byte [rax]
or byte [rax], dh
cld
add edx, esi
add edx, dword [rbx]
add byte [rsp + rsi], bh
adc al, 0
cmp eax, 0x3c813e60
adc byte [rip + 0x16f800], 0
lahf
add byte [rax], cl
sbb byte [rax], al
clc
seto byte [rdi]
and byte [rcx], bl
add byte [rax], al
sbb al, byte [rax]
nop
nop
mov al, 0x1b
add al, ah
sbb al, 0x47
repne outsb dx, byte [rsi]
retf 0x113
add al, 0
int1
dec dword [rbx + rbp*8]
js 0x4025bb
jnp 0x4025ad
mov edi, 0x170eb589
leave
and byte [rbx], dl
jb 0x4025ab
sbb eax, dword [rax + 0x37]
and al, 0x83
or al, 0x2e
add byte [rdi + rbx*2 - 0x38], 0x60
mov ebx, 0x5f411035
add dword [rdi], edx
push rbx
xchg eax, edx
shr dword [rsi + 0x477a4f84], -0x60
fcom dword [rbp - 0x6879e6f0]
movsd dword [rdi], dword ptr [rsi]
xlatb
cmp eax, ecx
mov r8b, 0x47
sal byte [rsi + 6], 1
sbb byte [rcx + 0x3c], ah
outsd dx, dword [rsi]
add dword [rdi - 0x40], ecx
add al, 0x64
sbb ecx, dword [rdx + 0x1f]
jl 0x40260a
cmp byte [rsp + rbp], dh
test al, dh
mov dl, byte cs:[rdi]
test dword [rdi + 0x5d], 0x9603b119
clc
lahf
test eax, 0x884aec61
idiv dword [r15 + 0x4d1f142f]
or dword [rbx + 0x717d029], esi
jrcxz 0x40258d
out dx, al
retf 0x4788
outsd dx, dword [rsi]
adc esi, edi
and byte [rdi], bh
mov edx, 0x122fec01
sbb esp, dword [rbp + 7]
sahf
insb byte [rdi], dx
xchg eax, esi
add eax, dword [rdx]
and al, byte [rax + 0x23]
sub eax, dword [rdx]
jns 0x4025d5
imul ecx, dword [rsi + 0x7a], 0x7f165012
add eax, 0x39df2793
pop qword [rdi + 0x2e]
add al, byte [rax]
cmp al, 0x79
jbe 0x4025c8
lahf
jo 0x402660
mov word [rcx], es
xchg eax, ebx
or dword [esi], 0x17
sub al, byte [rax]
push rdi
add eax, dword [rsi]
nop
out dx, al
retf 0x7200
and byte [rcx + 0x421d9ecf], al
xchg eax, ebp
add esi, dword [rdi]
pop rdi
hlt
add edx, eax
nop
add al, 0x5c
xor dword [rax + 8], 0x4ca7619
fsubr dword [rbx]
sub esi, dword [rdx - 0x67]
scasd eax, dword [rdi]
add eax, 0x610cd247
mov ecx, 0xcd596320
add ch, dl
adc edi, esi
mov bh, 8
sbb edx, eax
in al, 0x47
neg esi
add dword [rbx + 0x1e100f11], esp
pop rdi
sbb dword [rsp + rbp*8], 0x5f084fb2
xor dword [rsi], eax
and al, 0xdb
ja 0x402629
add al, byte [rdi - 0x38]
mov ss, word [rdi]
cmp al, 0x39
or al, 0xb8
outsd dx, dword [rsi]
wait
xchg byte cs:[rax - 0x54a07d3f], dl
sti
sbb dword [rip + 0x1ba7c792], 0x707c400
enter 0x7610, 0x23
and edi, ecx
and ebx, ecx
add dword [rdi + 0x18], esi
jns 0x4026a2
adc dword [rsi - 0x4a], esi
xadd byte [rax + rcx*8], ch
xchg eax, ebx
cmp al, 0x98
add dword [rdi + 0x79], ecx
or byte [rax], al
cmp al, 0x61
xor byte [rsi - 0x73], bl
or byte [rdi + 0x3bd0729], bl
mov esp, 0x9479e40
sahf
or dword [rdx], ebx
adc esi, edx
push rbx
movsd dword [rdi], dword ptr [rsi]
ror byte [rax + rax*2], 0xc6
xor al, byte [rbp + rcx + 0x17d94761]
int1
xchg esp, esp
in al, dx
adc byte [rdx + rcx], al
mov edi, 0x7c0a1808
out dx, eax
xchg eax, edx
js 0x402753
scasd eax, dword [rdi]
shr bh, 0x8f
shl dl, 0xf
movsxd rsi, dword [rdx + 0x74]
jae 0x402783
imul byte [rdi - 1]
jmp qword [rsi + 0x66]
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
or dword [rax], eax
jb 0x4027b1
imul ebx, dword [edx], 0xb7ff77b7
pop rdi
je 0x4027c4
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402780
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
outsd dx, dword [rsi]
mov edi, 0x96cb7fd
je 0x4027dd
jb 0x4027e3
pop rdi
jne 0x4027ec
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x4027e5
sub dword gs:[rsi + rbp + 0x37], esp
jg 0x40277b
or ebp, esp
xor eax, 0x5f243538
imul bp, word [rsi + 0x69], 0x7208
jb 0x4027f0
jns 0x4027f0
sti
jbe 0x402790
sal dword [rdx + 0x79], 0
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x4027d6
adc edx, esi
or eax, 0x295f0d98
je 0x4027d7
push rbx
sub esi, esp
jbe 0x4027ad
outsd dx, dword [rsi]
jne 0x402827
movsxd rsp, dword [rbp - 0x5f]
jo 0x40282a
sub dword [rdx + 0x53], ebx
je 0x4027a9
std
fisubr dword [rsi + 0x69]
sbb byte [rdi + 0x73], ch
pop rsp
sub byte [rax + 0x6f], ch
jo 0x402817
cmp qword [rsi - 0x25], r13
mov esi, 0x6e6712bd
jne 0x402780
js 0x402853
xor dword [rdi], esi
or ch, byte [rsi + 0x18]
insd dword [rdi], dx
jge 0x4027c0
mov esi, 0xbd69baed
or dword [rcx + 0x50], 0x61703434
imul ecx, dword [rax], 0x6df64e69
jnp 0x4027a6
or dword [rdi], ebx
add byte es:[rdx], dh
movabs eax, dword [0xddee6be35f636973]
jb 0x402856
movsxd rbx, dword [r8d + 0x31]
movsxd rbp, dword [rax + 0x61]
out dx, eax
xor al, 0x39
jge 0x402889
out dx, al
insd dword [rdi], dx
jae 0x40282a
push r11
add al, 0
sbb dword [rsi], esi
jbe 0x402888
movsxd rsi, dword [rdi + 0x48f6b9cf]
push rbx
adc al, 5
insb byte [rdi], dx
xor byte [rdi - 0x3e], r11b
mov ebx, 0x7f4d35b5
jae 0x40286c
sub al, byte [r14]
mov bh, 0xb7
pop rbx
in al, dx
jae 0x4028b8
jbe 0x402864
jbe 0x40289d
sub cl, byte [rax + 0x5f]
push rsp
and dword [rcx + rsi + 0x76], edx
sbb esi, dword [rbp + 0x482e5fc2]
push rbx
test al, 0x39
mov esi, 0xff6e345a
cdq
outsb dx, byte [rsi]
xor r12b, byte [r11 + 0x4d]
push rdx
xchg eax, esi
wait
ror byte [rdx], 1
jge 0x402881
push rbp
idiv dil
in eax, dx
shl dword [rax], 0x48
push rdx
adc al, byte [rdi + 0x4c]
pop rdi
push rbx
pop r10
mov al, 9
loope 0x402891
push rsp
sub byte [r12], r13b
adc ch, bl
fidiv word [rsi + 0x7407d9b6]
adc al, byte [rcx + rbx*2 + 0x4e]
insb byte [rdi], dx
in al, dx
mov dh, 0xd0
jl 0x4028e6
xor dword [rcx + rcx*8 + 0x42], ebp
xor eax, 0xa80069ff
test byte [rbp - 0x23], ah
loopne 0x4028e9
push 0x1b434d0b
xor dword [rax], esp
sti
jno 0x402929
call 0x5ff689e8
cmp al, 0x63
imul eax, dword [rdx], 0x49
sbb rax, qword [rsi - 0x46]
jbe 0x4028a1
sbb byte [rax + rsi*2 + 0x4f], al
ror byte [rbp - 0x25e9cdca], 0x5d
ror byte [rsi + 0x62696cbe], 0x69
sbb al, 0x75
mov dh, 0xe5
or byte [rcx], dh
xor dh, ch
xor dh, byte [rip + 0x73757775]
or eax, 0x9370d1b7
mov byte [rdx + 5], bh
mov al, 0xa0
test byte [rsi + 0x73], dh
fcomi st(7)
sub al, 4
test dword [rax + 0x565f34f6], 0xb6f8f56f
sti
xor dl, dh
sal byte [rax + 0x5d], 1
je 0x40298a
jb 0x40298e
imul eax, dword [rax + 0x40], -0x5b
pop rbp
jrcxz 0x40298c
mov ebx, 0x5f434249
xor ch, byte [rsi]
xor eax, dword [rbx]
sbb ah, byte [rdi + 0x6d]
xor rsp, 0xffffffffffffff87
or dword [rbx + 0x5f764aea], ebx
push rdx
imul eax, dword [rbx + 0x25], 0x2f0ad4e3
in al, 8
add al, bl
mul esp
imul ebp, dword [rip + 0x7b07ec6f], 0xb2e3c817
insb byte [rdi], dx
push rax
jbe 0x40294b
pop rax
pop rax
or dword [rbx + 8], edx
xchg eax, ebx
pop rdi
add ebx, dword [rdx - 0x71]
adc eax, 0x53008f5a
lodsd eax, dword [rsi]
cld
adc edx, esi
mov edx, 0x26524579
push 0x2e
xor dh, byte [rcx]
mov word [rbp - 0x4eb6bea4], es
jl 0x402961
imul eax, edx, 0x32e9dace
xor eax, 0x904b66c8
ja 0x4029c6
jb 0x4029fd
mov ah, 3
fcomp st(3)
push rax
movsxd rbp, r14d
push r12
and edi, eax
sub dword [rbp + 9], 0xa2430ca4
push rsp
push rcx
sub bl, byte [rbp + 0x57]
sahf
sbb ecx, dword [rdi + 0x63]
pop rsi
enter -0x5482, 0x40
adc esi, dword [rbx + 0x63]
outsb dx, byte [rsi]
xchg ax, si
cmp eax, 0xc0b6dab0
cmp edx, dword [rcx - 0x35]
cmp cl, byte [rsi + 0x445ec003]
sal byte [rsi], 1
xlatb
fcom qword [rbp - 0x58965a47]
leave
enter 0x7f5f, 0x5a
insd dword [rdi], dx
movsxd rsi, dword [rdx + 0x5fe964f7]
enter -0x4270, -0x6a
cmc
mov dword [rbx], ecx
sar dword [rcx - 0x50], cl
rol dh, cl
pop rdi
xor al, 0x73
ja 0x402a5e
jo 0x402a2e
push rbx
test al, 0x78
mov esp, 0x6206d021
xchg eax, ebp
and eax, dword [rdi]
mov dl, 0xad
in al, 0x30
fild qword [rcx - 0xc93bf47]
insb byte [rdi], dx
jo 0x402a50
jmp 0x7479b750
push 0x56d97771
jo 0x402a40
outsb dx, byte [rsi]
jbe 0x402a5b
or esi, dword [rdx - 0x33]
and byte [rsp + rsi], ch
add byte [rbp + 0x2b], ch
test eax, 0x6c0d2f70
pop qword [rax]
ja 0x4029f0
jo 0x402a0c
jae 0x402a4a
adc ecx, dword [rax]
cld
mov dx, 0x1d6f
imul ebp, dword [rsi + 0x74], 0x5f4e237c
test byte [rbx - 0x53], ch
push -0x6aadb79b
xor byte [rbx], al
cwde
sal dword [rcx], 0x5a
sal dword [rbx], 3
xchg eax, ebp
mov ch, 0x2f
push 0x75
ret
insb byte [rdi], dx
fmul dword [rbp - 0x23f88f6e]
push rbx
sti
mov al, byte [rdi + rbx*4 + 0x5f3254dc]
in eax, 0x6d
jne 0x402af4
mov dword [rbx - 0x1badea2d], 0x5b328c65
push 5
ficom dword [rdi + 0x4c]
js 0x402aad
outsb dx, byte [rsi]
cld
loope 0x402a6f
and eax, 0x76d9425a
xor byte [rbx], ch
insb byte [rdi], dx
push rdi
imul eax, dword [rcx + rax*4], 0x31
push rcx
jle 0x402b15
ja 0x402ae6
mov dh, 0xb2
sub eax, 0x647d5512
pop rbx
jmp 0x3f8a608f
xchg eax, edi
sbb eax, dword [rbx + 0x43]
movabs dword [0xc279701c960d0f30], eax
mov ch, byte [rdi + 0x5b]
pop rdx
enter 0x7475, -0x37
xor eax, 0x764ec373
fstp xword [rcx + 0x6d]
jg 0x402b39
je 0x402b4c
push 0x6b72dd09
push 0x770081e
outsb dx, byte [rsi]
outsd dx, dword [rsi]
xchg dword cs:[rip + 0x6d821ba5], ebp
adc eax, 0x2eae0d67
jne 0x402b39
lodsd eax, dword [rsi]
mov ch, 0x58
jmp 0x402b5e
sub eax, 0xfc0d7c69
cmp byte [rcx], cl
ja 0x402ad9
out dx, al
jns 0x402b76
sbb dword [r14 - 0x2c], r14d
ret
cdqe
add esp, eax
or al, 0x5f
sbb esp, eax
add eax, 0xfc56bd82
sub byte [rcx], cl
or dh, byte [rbx - 0x25]
jae 0x402ae0
je 0x402b97
add eax, 0x86f2c0a
imul edx, dword [rcx], 0x786e17ba
add eax, 0x286f2426
mov bh, 0xec
shr eax, 0x2e
push 0x72646849
or eax, 0x40b1ae5d
push rbx
movsxd rsi, dword [rbx + 0x55704d78]
mov ebp, 0xb9096cd8
insb byte [rdi], dx
adc dword [rsi], esp
or eax, dword [r13 + 0x6a706b16]
movabs eax, dword [0x6800bd9b35cdc136]
jnp 0x402bc5
xor byte [rax + rax], al
mov dh, 0x35
out dx, al
push rdx
std
add byte [rax], al
xchg byte [rax - 0x51], cl
add dword [rdi + 0x159b99c9], edx
lahf
sbb al, 0x20
int 0x90
or al, 1
and eax, dword [rdi]
and al, 0x83
or al, 0x32
push rsp
push rsp
and byte [rdx], dh
and al, 0x43
xor al, byte [rcx + rsi]
je 0x402ba4
and eax, 0x24740c83
nop
fidivr word [r15 - 0xa]
ljmp [rdi - 0x68]
cwde
xchg eax, edx
sbb dword [rax - 0x5bf93ef8], esi
sbb dword [rsi + 0xb], ecx
sar byte [rdi], 1
insb byte [rdi], dx
jb 0x402c30
nop
ror byte [rax + 0x3f06fb02], 1
sub eax, 0x18990669
push rsi
add esp, esp
or dword [rdi + 2], ebp
xor al, byte [rbx]
movabs r10, 0x9bd9c90dffbf5e8b
pop qword [rdi]
mov edi, 0x20320236
fst qword [rax - 0x1c094f9]
ror cl, 0x20
outsb dx, byte [esi]
cmpsd dword [rsi], dword ptr [rdi]
mov al, 6
mov ah, 0xa4
wait
mov dl, 0xff
jp 0x402c48
add al, 0x21
mov esp, 0x3f07df09
nop
ror dword [rsi], 0xb
inc dword [rdi + rdi + 0x19072542]
rcl al, 1
enter 0x3201, 8
add ecx, eax
sbb dword [rsi + 0x784e0613], ecx
xor esp, dword [rax + 0x1f]
lcall [rdx]
nop
and dword [rbx], ebx
mov qword [rdi], rdi
rcr cl, 0x85
sbb al, 0x64
rol byte [rax + 1], 0x10
ret
movabs al, byte [0xb64767f3f940d90]
mov word [rip + 0x3f9d0f2f], cs
jns 0x402c2a
adc byte es:[r15], al
jg 0x402c0c
and dword [rdx + 0x72], eax
fadd dword [rdx]
movabs dword [0x9ff071f23373392], eax
or dword [rcx], edx
xchg eax, edx
xchg byte [rcx - 0x6bc90041], ch
pushfq
mov ecx, 0xb1b0bf07
xor esi, dword [rdi]
sub eax, dword [rdx + 0x7f]
jg 0x402cc2
xchg byte [rdx + 0x7922bf74], dl
out 0x26, al
jg 0x402cb2
add al, 0x6e
adc al, byte [rbp + 0x76fc9e4]
je 0x402ccb
leave
pop rcx
jg 0x402d05
fisttp dword [rsi]
js 0x402c44
rol byte [rbx], cl
test dword [rdi], 0x402ee901
mov edi, 0x6f0f3fe7
or byte [rax + rdx*4 - 8], ah
clc
xchg eax, ebx
mov al, 0x49
movabs al, byte [0xa4b66c3f3eef3f65]
or edi, eax
wait
and al, 0x27
iretd
fadd qword [rdi]
jg 0x402cad
add dword [rsi], eax
mov dh, 0x85
or al, 0x32
adc byte [rax + 0x2e413fbf], bl
xchg eax, edx
or byte [rbx], bl
mov word [rax], cs
leave
add dword [rcx], eax
xchg byte [rax + rbp + 0x39], ah
mov al, 0xa
mov al, 0xa1
in al, 0xcc
call qword [rcx + rbx]
mov edx, 0xe0083f10
xchg eax, ecx
cmp byte [rdi - 0x3d], cl
fcom dword ss:[rip + 0x3f17307f]
fldenv [rcx + 0x21]
xor al, 0x3f
adc dword [rbx - 0x6e], edi
pushfq
mov dl, 0
push r12
jg 0x402d2c
add dword [rsi - 0x44d39a7c], eax
xlatb
and bpl, cl
leave
mov bl, 0xff
xor byte [rcx], cl
xor bh, byte [rcx + rdi]
test byte [rip + 0x4a287f09], cl
sbb eax, 0x6000000a
xchg eax, ecx
nop
add byte [rax], al
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip + 0x2b080216], ecx
cli
cmc
outsd dx, dword [rsi]
cmp cl, byte [rax + 0x46]
movsb byte [rdi], byte ptr [rsi]
sbb al, 0
add byte [rax + 0x68000008], al
pop rbp
add byte [rax], al
add rax, qword [r8]
cmp esi, esp
add byte [rax], al
add bh, bh
