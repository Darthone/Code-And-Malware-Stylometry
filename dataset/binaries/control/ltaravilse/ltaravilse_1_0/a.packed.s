call 0x401a18
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401830
add ebx, ebx
je 0x4017e6
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x40181e
cmp rbp, -4
ja 0x40181e
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x401806
add ecx, 4
mov dl, byte [rax]
je 0x40182e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x40181e
ret
cld
pop r11
cmp r8b, 2
je 0x401846
jmp 0x4018c3
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x401856
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x40183e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x40186e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x40185b
sub eax, 3
jb 0x40188c
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x4018c3
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x4018b3
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x4018b1
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4018a0
cmp rbp, -0xd00
adc ecx, eax
call 0x4017f2
jmp 0x401846
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x40199c
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40193a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x401986
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401959
push 0x3a707474
jne 0x4019b2
js 0x401972
jae 0x4019ac
outsb dx, byte cs:[rsi]
je 0x40196b
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4019d9
jb 0x4019cb
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4019f6
jb 0x401a09
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x214836
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x214836
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x4018d4
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4019ff
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4019ad
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f1aa7
jb 0x401abf
movsxd rbp, dword [rdi]
jae 0x401ab9
insb byte [rdi], dx
js 0x401abf
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401a9f
cmp rsi, rcx
jae 0x401aa7
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x401a86
cmp al, 0x8f
ja 0x401a86
cmp byte [rsi - 2], 0xf
je 0x401a8c
sub al, 0xe8
jg 0x401a89
push rdi
cmp al, 1
ja 0x401a74
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x401a77
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x401aa4
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401afb
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1f79
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401b3f
mov al, 0xa
jmp 0x401b3f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401b1b
inc ebx
mov al, 0
jmp 0x401b43
mov al, 2
jmp 0x401b43
mov al, 3
jmp 0x401b43
mov al, 0x3c
jmp 0x401b43
push rcx
rcr ah, 1
fstp st(7)
jle 0x401b84
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x401b96
jg 0x401b88
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a730b
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x401be2
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6d5f
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x401bea
cmp esi, 0x21585055
jne 0x401bee
jge 0x401be0
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x401be3
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x401be7
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x401c93
pop rcx
or al, 0x3b
jb 0x401c99
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401c0b
jmp 0x401c0d
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661b4e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf53d96
in eax, dx
jg 0x401c45
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401c8b
mov bh, 0x2a
add edi, 0x10
jmp 0x401c88
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x401cc5
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401d01
jne 0x401d18
fstpnce st(6), st(0)
jle 0x401ce1
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x401d17
jrcxz 0x401d4b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1bcaf
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401dca
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401d8a
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x5829635f
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x401dfd
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x401d97
and ecx, 7
or al, 0xeb
jae 0x401e02
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x401e37
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x401e75
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401e2e
push rax
call 0xffffffff868d1b1b
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401e38
std
cmp edi, esi
xchg eax, edi
jle 0x401e8d
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96419
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401e8b
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401e79
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x401ea2
js 0x401ee2
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x401f74
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad31af
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x401f95
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401f9a
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21a4c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401f28
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
add cl, byte [rcx]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + 0x900aaa], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dil, dil
push -0x5effffc4
adc byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x40204e
je 0x402057
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x402020
mov dh, 0x7d
jbe 0x40201f
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x402058
sahf
sahf
add al, 0
cwde
add eax, 0x1f90d000
and byte [rdi + 0x6a80006], bl
add ah, bh
or al, 0xc8
enter 0x80f, 0
push rax
or eax, 0xf2e00009
add esp, esp
adc ecx, dword [rdx]
add byte [rax], ch
or eax, dword [rax]
pop rax
adc ecx, edi
add al, 0xf2
add dword [rax + rax], ecx
or byte [rip + 0x6113b000], 2
stc
add byte [rsi], cl
add al, al
nop dword [rcx + 0x376c0395]
pop rdi
adc byte [rdi], dl
and byte [rdi], bh
adc dword ds:[rax], eax
pop rsp
cmp byte [rdx], dl
add byte [rax + 0x3a], bh
in al, 0xf
nop
adc eax, dword [rax]
mov word [rbx + 0x14], es
add al, ch
or esp, esp
add dword [rip + 0x16f800], edx
add byte [rsi - 0x25], cl
add al, 0xf2
add dword [rdi], edx
add byte [rax], cl
sbb byte [rdi + 0x4f], al
add dword [rsi + 0x5019201c], esi
add bh, cl
add cl, bh
sbb al, byte [rax]
sub byte [rcx + 0x1b], dl
add byte [rax + 0x24], al
out dx, eax
cmpsb byte [rsi], byte ptr [rdi]
insb byte [rdi], dx
sbb al, 0x13
add dword [rdi], edx
add al, 0
int1
lcall [rdx]
scasb al, byte [rdi]
sub al, 0x76
or al, 0x1b
mov edi, 0x72029719
mov al, 0x21
imul esi, eax, 0x1430171b
or eax, 0x2e1720c9
jo 0x40210a
xor bl, al
fldz
pop rdi
xor eax, 0x15f5370
push rbx
mov al, 0x2b
and dword [rdi + 0x7a], ecx
xchg eax, r8d
jbe 0x402101
xchg byte [rsi + 0x4dd7a597], r8b
cmp cl, dh
adc byte [rbx - 0x36f377d9], ch
xchg eax, ebx
ja 0x4020b5
mov ebx, ebx
or al, 0x36
and al, 0x83
mov ch, al
mov edi, 0xd8320c71
nop
test dword [rdi - 0x74], 0x93921b04
sbb dword [rsi], 1
nop
xor byte [rdi], dl
sbb dword [rax + rcx*2 + 6], esp
xchg eax, ecx
xchg eax, r10d
or eax, 0x5521d9c9
add dword [rdi - 0x6c], ebx
je 0x402128
xor ah, byte [rbx + rax*4]
cwde
xchg eax, esp
pushfq
xor cl, r8b
nop
mov dh, 0xa0
xlatb
or dword [rcx + rcx*8], 0x20
movsb byte [rdi], byte ptr [rsi]
cld
test al, 0x21
cmp dword [rcx], edi
and al, 0x1b
add ch, byte [rcx + rax*2 + 0x3d906486]
mov al, 0x5a
sbb dword [rdx - 0x6f47874c], edx
and dword [rcx], ebx
xchg eax, edi
mov esp, 0x864192bf
shl bh, 0xc4
enter -0x6370, 0x1c
lsl ecx, eax
leave
and byte [rbx + 0x32], al
int3
pop rdi
sal byte [rdx], 1
and al, 0x83
or al, 0x82
stosd dword [rdi], eax
xor cl, al
nop
or al, 0xd8
fcomp qword [rcx]
xchg eax, edx
xchg eax, ebx
add dword [r8 + r12*8], eax
sub bl, byte [rcx]
in al, 0x4f
call 0x21d0860a
js 0x402172
movsb byte [rdi], byte ptr [rsi]
sbb dword [rdx - 0xb330fbf], edx
and dword [rcx], ebx
clc
or dword [rcx + rcx*8], 0xffffffc9
sbb dword [rip + 0x480041fc], eax
mov ecx, 0x4673890
nop
and dword [rcx], ebx
lea ecx, fs:[rax]
mov bl, 0x92
xchg byte [r12 + rcx - 0x24], spl
adc al, cl
nop
pushfq
sbb al, 2
adc al, 0x28
leave
and byte [rbx + 0x32], al
sbb byte [rdx + 0x1c], dl
xor ah, byte [rbx + rax*4]
or al, 0x7d
and byte [rbx + 0xc835839], ah
sub byte [rax], cl
jg 0x402199
and byte [rbx + 0x2abb3d9c], al
stc
and eax, 0x15f9c830
push rdi
sub dword [rdi], eax
push rax
mov esi, 0x375f127f
pop rax
or byte [rbx - 0x77bcb8d1], al
pop rbp
sbb dword [rdi + rax + 0x4756d705], edi
adc bl, byte [rax]
mov ebx, 0x2f6c2f32
adc al, 0x57
insb byte [rdi], dx
wait
jge 0x402222
call 0xffffffffe11969a0
xchg eax, ebp
cmpsd dword [rsi], dword ptr [rdi]
jnp 0x402224
ja 0x402237
fld dword [rsi + 0x2f99006e]
and al, byte [rdi]
sub ecx, dword [rdi - 0x37c43e69]
inc byte [rdi]
movsd dword [rdi], dword ptr [rsi]
sbb dh, dh
in al, 0xc9
mov bl, 1
adc al, 8
xor dh, byte [ecx]
add byte [rdi], dl
jb 0x4022af
call 0x2bf04576
sub ebx, dword [rax - 0x47ffca5f]
cmp r15b, byte [rax]
xchg dword [rdi], eax
or dword [rdi + 0x37], esi
add ah, byte [rcx + 0x17]
enter 0x2fc1, 0x17
or dword [rbx + 0x17], ebp
jnp 0x40227f
iretd
mov esp, 0x35aad709
jg 0x402276
in al, 0x60
xchg eax, edi
vcvtsi2sd xmm7, xmm12, dword [rdi + 0x6410a15]
cmp dword [rbx], ebx
xor dl, byte [rdi]
cmp eax, 0xc9c8320e
mov esi, dword [rsi]
xchg eax, ebx
jb 0x402215
push rax
mov bl, 0x6a
mov esp, 0x26760e40
cmpsd dword [rsi], dword ptr [rdi]
ror byte [rdx], 1
sbb eax, 0x2b90870b
cmp edx, dword [rdi + 0xb402c17]
jb 0x402230
xchg eax, ebx
pop rdi
and dword [rcx], esi
sub dword [rbx + rcx + 0x5ecf272], ecx
movabs al, byte [0x4f21790b30d2a70b]
or ecx, dword [rdx + 0x31]
adc dword [rcx], ecx
cmp eax, ebx
xchg eax, ebp
shl byte [rdi + 0x2dd077d4], 1
sbb al, 0x42
cmp dword [rbx], ebx
loope 0x4022d4
in al, 0xc9
mov bl, 0x27
mov dh, 0x14
cmpsd dword [rsi], dword ptr [rdi]
cmpsb byte [rsi], byte ptr [rdi]
or dword [rsi], eax
or al, 0x61
enter 0x250b, 0xc
test byte cs:[rbx + 0x309b9a0c], al
mov ebx, 0xc1c9c832
jo 0x402322
in eax, dx
leave
ror dword [rsi + 0xe], 6
pop rsi
ja 0x40230e
or eax, 0xe4f27902
sub al, 0x13
add dword [rdi], ebp
or eax, 0xec21b072
xchg eax, ebp
sbb r13b, byte [rip + 0x760c8384]
scasb al, byte [rdi]
adc cl, byte [rdi - 0x44]
nop
ror dword [rip + 0xe012eea], cl
mov esp, 0xf7205ec0
sbb eax, 0xe62770e
xor ebx, eax
and byte [rdi - 0x49], ah
adc al, 0x35
xchg eax, ecx
movsb byte [rdi], byte ptr [rsi]
rol byte [r8 + 0x11], cl
inc dword [rax + 0xe170ea0]
pop rsp
xor bl, dl
pop rdi
and byte [rdi], cl
in al, 0x20
iretd
cmpsd dword [rsi], dword ptr [rdi]
xor bl, byte [rip - 0x6ff8f0a1]
scasb al, byte [rdi]
or edi, dword [rcx + 0x67]
adc byte [rsi - 0x6c6f8df1], al
ja 0x40236b
xor eax, 0x850fe458
cmp al, 0xe9
add eax, 0x868f102e
xor ebx, dword [rsi + 0x5de102f5]
adc bh, bl
adc byte [rdi - 0x7e87cf96], dl
hlt
stc
adc byte [rdi + 0x71811119], ah
outsd dx, dword [rsi]
cmp eax, 0x921d0f11
insd dword [rdi], dx
ja 0x4023ef
adc dword [rdx], eax
xlatb
cmp byte [rsi + 0x11], ah
or dword [rax + rdx*4 + 0x32984727], edi
jle 0x4023b6
jb 0x40239f
in al, 0x60
push rdx
adc byte [rcx], al
ja 0x402345
nop
jb 0x402344
rcr qword [rcx + 0x33], cl
nop
pushfq
cmp al, 0x79
sub eax, 0x30124900
sbb dword [rax + rsi*8 - 0x47eda91c], 0x35
fistp word [rdx]
mov al, 0x5e
enter 0x1293, 0x7d
in eax, dx
adc bl, bh
or al, 0xd2
adc eax, 0xef00a713
sbb al, 0x92
xchg eax, ebx
and dword [rip + 0x1332ec13], 0x2f
mov al, 0x5e
jno 0x402405
jle 0x402408
xor cl, al
xlatb
or byte [rdx + rbx*4 + 0x13], dl
sahf
mov esp, 0xbe13af40
xor esi, esp
cmp spl, bpl
fisttp qword [rdi + 0x1408df35]
pushfq
cmp al, 0x7b
xor dword [rdi + 0x21], 0x2b1c7714
retf 0x2f09
nop
sub dword [rbp + 0x14], -0x41
adc al, 0x37
adc bh, byte [rsi]
leave
adc al, 0xcf
sbb esi, edi
in al, 0xe4
or dword [rdx + rcx + 0x31ba5715], ebx
pop rcx
add bh, byte [rbx - 0x7f]
sbb al, 0x3b
adc eax, 0x7277154b
mov al, 0x21
in al, dx
mov edx, 0x32355e47
test byte [rsi + rsi*2], cl
cmp byte [rdi], ch
fpatan
enter 0x4e41, 0xe
out 0x2b, al
and byte [rsi + rdx], cl
enter -0x6c37, 0x17
and al, 0x16
push rdi
xor al, 0x53
fcom dword [r8]
xor ch, byte [rdi - 0x3e]
adc byte [rdi + rdx + 0xf178cf2], al
imul edx, dword ss:[rdi], 0x1907274f
in al, 0x1d
js 0x402487
js 0x402403
mov esp, 0x5f7f00ec
iretd
in al, 0xc9
ja 0x40247b
pop rsp
jae 0x40249e
in al, 5
or eax, 0x5e183318
sub eax, 0x1760e4e9
adc byte [rdi], 0x2b
xor ebp, dword [rsi]
mov r12d, 0xb3072790
sbb ah, ch
xor al, 0x24
sbb dword [rdi + 0x4e], ecx
enter 0x2767, 0x20
adc eax, dword [rax + 0x6c]
sbb esp, ebx
adc byte [rax + 0x21], bh
movabs al, byte [0x12790bc619cecf19]
scasd eax, dword [rdi]
xchg eax, ebp
xor edi, ebx
sbb dword [rdi + 0x5e4f272], eax
sbb r9b, byte [rax]
fsubr dword [rcx]
jns 0x4024ec
push 0x1a
sbb dh, byte [rcx + 0x1a]
sbb r10d, dword [r10 + 0x1a8b17b3]
mov edi, 0xc85fac50
clc
xor dh, byte [rbx]
xlatb
mov al, 0xb
lodsb al, byte [rsi]
sbb rax, qword [r15]
pop rax
xchg eax, ebx
xor dword [rcx + 0x72], 0xffffff96
xor eax, 0x1b845714
mov esp, 0xb4c85e40
movabs byte [0x974817610d1bb51b], al
fisubr dword [rdi]
and edi, ecx
cmp byte [rdi + rdx - 0x2190e3c4], al
xor byte [rcx + 0x4e], al
jbe 0x402595
stosb byte [rdi], al
xor al, 0x42
xor dword [rax + 0x72], 0xffffff90
cwde
mov byte [rip + 0x79e67f47], ch
add ch, byte [rdi]
nop
sbb al, 4
sbb eax, 0xb340bb7
jns 0x402508
or edx, dword [rdx + 0x1d]
fistp qword [rsi - 0x636f1cce]
ror byte [rdx - 0x372d60e3], 0x1d
iretd
out 0xe4, eax
or dword [rdi + rcx*8], edi
sub byte [rdi], cl
in al, dx
add dword [rdi], ebx
shl al, 0x95
adc al, 0x7f
int 0x1d
cmpsd dword [rsi], dword ptr [rdi]
inc dword [rax]
mov ebx, 0x630047f1
jb 0x4025e7
jae 0x4025e9
jne 0x4025dd
sti
pop rdi
loop 0x4025e2
movsxd rsp, dword cs:[rbx + 0x52434a5f]
pop rdi
push r11
push rsp
or edi, esi
jg 0x4025f7
mov edi, 0x65726500
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x4025c1
fstp xword [rdi + 0x7b]
jnp 0x402609
outsd dx, dword [rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x402611
jne 0x40262d
outsd dx, dword [rsi]
mov edi, 0x6df6fec0
jo 0x40262a
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bp, word [rsi - 0x49], 0xff12
mov bh, 0x69
or byte [rdx + 0x72], dh
jns 0x402635
outsb dx, byte gs:[rsi]
je 0x40264c
jns 0x4025e5
or ch, byte [rbp + 0x65]
fld qword [rax + 0x75206fb9]
insd dword [rdi], dx
insd dword [rdi], dx
jns 0x40261b
or eax, 0xff74295f
in eax, dx
sub al, byte [rdx - 0x64]
jo 0x402666
and al, 0x5a
push rbx
je 0x402647
xor dword [rcx], edi
jo 0x402668
sti
mov dh, 0xb5
mul byte [rbp + 0x63]
ja 0x4025a1
sub eax, 0x729f6e77
jne 0x402672
je 0x40262b
jne 0x402601
xor esi, dword [rax + 0x75]
movsxd rsp, dword [rcx + 0x72]
cmp eax, 0xb6cedd67
lahf
adc al, 0x36
imul esp, dword [rdi + 0x6e], 0x380c650f
imul ebp, dword [edi + 0x7e], 0x5deedadb
cmp qword [rdx + r11], r9
jne 0x40267d
js 0x4026b3
xor r14b, byte [rcx]
mov ebx, 0x65b3edb6
cmpsb byte [rsi], byte ptr [rdi]
insb byte [rdi], dx
ja 0x40268a
imul ebx, dword [rdi + 0x70], 0x6f
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0xb833d845
rcl dword [rdi + 0x30], 0x1b
sbb dword [rcx], edx
test al, 0x5a
xor dword [rbp + 0x3012675f], edx
cmc
insd dword [rdi], dx
mov eax, 0x3e70d9bd
pop rbp
adc dh, byte [rcx]
xor eax, 0xd8786540
mov dh, 0xbd
popfq
movsd dword [rdi], dword ptr [rsi]
jae 0x4026ca
xor eax, 0x45b66153
cmpsb byte [rsi], byte ptr [rdi]
mov al, 0x6f
test al, 0x73
jne 0x4026ef
jae 0x4026ae
cmp byte [rcx + 0x5fef615d], ah
imul ebp, dword [rbp + 0x69], 0xa37417a
add esp, edi
mov dh, 0xc2
pop rdx
jmp qword [rax]
movsd dword [rdi], dword ptr [rsi]
push r11
fisubr dword [rcx]
lodsb al, byte [rsi]
sub eax, 0x244a69f3
xor eax, 0xb5b0a562
adc eax, 0xd86a9d6
outsb dx, byte [rsi]
fadd dword [rbp + 0x6412b614]
and dword [rdi - 0x44e39489], eax
ret 0x53b6
xor al, 0x67
adc dword [rax + 0x7b], esi
test bl, bl
and spl, dl
insd dword [rdi], dx
fisub word [rbx + 0x68]
lodsb al, byte [rsi]
or eax, dword [rbp + 0x51273654]
xchg eax, ecx
ror byte es:[rdx], 0x13
sub al, 4
mov dl, 0x85
ja 0x40271a
test dword [rbp - 0x4d], ebp
sub edi, dword [rcx]
or edi, dword es:[rcx + 0x4a]
sub dword [rbp + rbx*2 - 0x1491cb8e], 0x70d6f69b
xchg eax, ebx
adc dword ss:[rsi], ebx
sub dword [rdi + 0x75], ebp
jae 0x40273a
outsd dx, dword fs:[rsi]
fist dword [rax + rsi*2 + 0x18]
jbe 0x402794
jbe 0x40277b
imul edx, dword [rbp + 0x2a], 0x340e95c1
sub ax, 0x556a
mov dh, 0x11
in al, dx
xor byte [rax], ch
fldenv [rbp + rcx*2 - 0x27]
mov ch, 0xcd
adc eax, 0x2837f570
pop rdx
scasb al, byte [rdi]
add eax, 0x322b6c17
add rsi, qword [r11]
xchg eax, esp
jb 0x402735
hlt
sub esp, 0x2731a6c1
je 0x4027cc
jo 0x40277a
in al, dx
xchg eax, ebp
pop rdx
xchg eax, ebx
xor ah, ch
movsb byte [rdi], byte ptr [rsi]
je 0x402715
xchg eax, ebp
movabs rax, qword [0xee654e74661be723]
push rsp
jb 0x402796
and eax, 0x96406170
add cl, bl
outsb dx, byte [rsi]
cdq
movabs dword [0xc94e286434c8766c], eax
test eax, 0x6e246dac
sbb byte [rbx + rsi*2 + 0x70], dh
test dword [rsi - 0x48caecdc], esp
xchg byte gs:[rbx], dh
cwde
pop rsp
sub dword [rsi], esi
sub al, 0x12
scasb al, byte [rdi]
mov dl, 0xc2
js 0x402808
jp 0x402816
cmp esi, dword [rsi - 0x20]
js 0x402787
cmp byte [rcx + 0x5f01b174], ah
push rbx
mov esp, 0x220e1a05
mov ebp, 0x332264a2
xor byte [rsi + 0x2b], al
stc
or eax, 0xfc53479
scasb al, byte [rdi]
sbb eax, dword [rbx + 0x6941bbd6]
and byte [rdx + 0xd], bh
wait
sub dword [rbx + 0x6a], 0x3d646756
sub ecx, dword [rdi]
jo 0x402857
sti
xor byte [rcx + 0x69], ch
xor r14b, byte [rbx + 0x5f]
int3
jg 0x40276e
pop rdi
adc byte [rip + 0x636c6163], dh
xor al, byte [rdx + 0x35]
xor byte [rax - 0x4a], 0x77
shl al, 1
jbe 0x402864
imul rdx, qword [r11 + 0x61], -0x5db2bafd
std
out dx, eax
pop rdi
pop rdi
push rdx
pop r15
or r13b, byte [rdx]
mul byte [rax - 0x35]
xchg eax, ebx
or eax, dword [rdi + 0x4e]
push rbp
and byte [rax + 0x44], cl
push rdx
pop rsp
js 0x4027e5
push rbx
push r12
sub byte [r11 + rcx - 0x65], r14b
xor cl, bl
adc byte fs:[rdx - 0x247cea8e], bh
sbb eax, 0x4e594498
push r13
mov byte [rbp + 0x6f02b6ee], dl
test dword [rcx + 0x52], ecx
xchg eax, edi
js 0x402842
and dl, al
movsd dword [rdi], dword ptr [rsi]
pushfq
sub al, 0x72
cmp ah, byte [rdi + 0x49]
movsxd rbp, dword [rbp + 0x3e6a5899]
xor eax, edx
movabs dword [0x1073b6e6ba1e4942], eax
scasb al, byte [rdi]
add al, 0
pop r10
mov dh, 7
test dword [rdi + 0x42], edx
sal byte [rcx + 0x63], 0x2b
sbb al, 0xe9
mov word [rbp + 0x34], es
push r11
push rdx
in al, dx
jg 0x40284d
sbb eax, 0x40496333
mov al, 0x49
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x15
movsq qword [rdi], qword ptr [rsi]
and al, 0x7c
xor dword [rax], edi
jne 0x402919
fnstenv [r13 - 0x3b7f22b1]
xor rsi, qword [r9]
xchg eax, ecx
outsb dx, byte [rsi]
stosb byte [rdi], al
insb byte [rdi], dx
test byte [rdi], bl
mov edx, 0x6123c368
sub dl, byte [rax + 0x4b]
imul esi, dword [rdi], 0xa5b6e142
add byte [rax + 5], dl
push rsp
xor byte [rdx], al
mov ah, 0x8b
add edi, dword [rbx - 0x25]
add dil, byte [r9]
jb 0x40291e
xor edx, dword [rbp + 0x4e]
mov eax, 0x5f777124
mov dh, 0x30
insb byte [rdi], dx
adc qword [rdx + 0x3a650fc1], rdi
insd dword [rdi], dx
std
loopne 0x40292f
ret 0xb6c8
shr dword [rcx - 0x5d], cl
adc eax, 0x21a27b09
jae 0x40293c
insd dword [rdi], dx
fdiv dword [r14]
mov dword [r14], ebp
dec byte [rcx + 0x634062e6]
test eax, ecx
vdivps ymm7 {k0} {z}, ymm14, ymm11
lodsd eax, dword [rsi]
push rax
movabs al, byte [0x34534b525ec3041d]
pop rdi
movsxd rcx, dword [rax]
nop
insd dword [rdi], dx
sub edx, dword [rbx + 0x4b]
push rsp
movsb byte [rdi], byte ptr [rsi]
xchg eax, ebp
xor eax, 0x54239fe7
mov ah, 0x3e
test dh, ch
rol dl, 1
pop rbx
movsb byte [rdi], byte ptr [rsi]
movabs al, byte gs:[0x430624c82fb5b62]
sub eax, 0x9ee44253
fdiv dword [rbp + 0x37]
movabs dword [0xac14c3e3e1453143], eax
insd dword [rdi], dx
xor byte [rsi + 0x1d], 0x5f
lodsb al, byte [rsi]
test dword [rbp + 0x34c17b5], ebp
and byte [rdi], dl
xor ch, byte [rbp - 0x45]
mov cl, 0x95
ja 0x402956
cmp ah, byte [rbx + 0x77]
jae 0x4029e1
test dword [rbx + rax*8 - 0x42], edi
and eax, 0x456761e0
cmp byte [rbx], dh
push rax
jbe 0x4029ea
sbb al, 0x99
push rbx
xor eax, dword [rcx + 0x55340236]
clc
mov bl, 0xf7
xor bl, byte [rdi + 0x56]
cmpsd dword [rsi], dword ptr [rdi]
fsubr dword [rsp + rax*2 + 0x30764532]
ret 0x4d91
xor al, 0xd8
jbe 0x4029c0
sub al, 0x5d
nop
mov eax, 0xb14fa461
imul edx, edx, 0xd4034856
outsb dx, byte [rsi]
cdq
call 0xffffffffe29aba15
xor rax, 0x9431452
xor dword [rbp - 0x292c8d2a], 0xffffffac
outsb dx, byte [rsi]
jnp 0x4029fd
sub al, 0x5a
xchg eax, ebp
xor esi, dword [rdi]
and ebp, dword [rdi + 0xc]
pop rbp
enter -0x4021, 0x6e
stosb byte [rdi], al
pause
lodsb al, byte [rsi]
idiv ecx
nop
xor byte [rdi + 9], r8b
or ebx, edi
insb byte [rdi], dx
push rax
jbe 0x40296f
mov al, byte [rbx + rcx*8 + 0x26]
mov al, 0x31
xchg eax, edi
pop rdi
invd
fild dword [rcx + 0x643d2d09]
jae 0x402a47
enter -0x1664, 0x34
shl qword [r15], cl
sahf
lodsb al, byte [rsi]
insb byte [rdi], dx
call 0x329f3a44
xchg eax, edx
pop rsi
sub bl, bl
add dword [rip - 0x3cce987c], esi
rcl byte [rdx], 0xb
push 0x70
or byte [rcx], al
js 0x402a46
xor byte [rcx + 0x4b], 0x63
cmc
imul r13d, dword [rbx - 0x4b], 0x1e
mov dh, 0x6f
jp 0x402a3f
jbe 0x402a7c
xor bh, byte [rdx + 0x526c86dc]
cmp dl, byte [rax + 0x45]
add al, 7
xchg eax, edi
or eax, 0x176d6915
pop rbp
and ah, bl
xor byte [rcx + 0x23], bl
insd dword [rdi], dx
and al, 0xba
mov word gs:[rbp + rbx*2 + 0x2c61dff1], cs
and eax, 0x74fcd83c
shl byte [rbx], 0xff
mov dl, 0x10
imul byte [rdx]
jo 0x402ab6
cli
in al, 0x4a
cwde
mov al, 0xe9
int3
adc r8d, dword [rsi + 0x20]
lodsb al, byte [rsi]
mov bh, 0x6c
or byte [r11], 0x4c
pop r15
in al, dx
or al, 0x43
insd dword [rdi], dx
add al, 0x78
add ebp, edx
push rsp
insb byte [rdi], dx
xor al, 0x6c
lodsd eax, dword [rsi]
pop rbp
mov ebp, 0xe333130d
outsd dx, dword [rsi]
mov ebp, 0xe477283b
insd dword [rdi], dx
pop rdx
push rbx
xor eax, 0x5781cf5f
or qword [rsi - 0x5c10840d], 0x490bc34b
pop rdi
jne 0x402b0a
mov ah, 0x30
adc ebx, dword [rcx + 0x4439393d]
xor ch, byte [rsi - 0x50]
push rsp
jo 0x402a56
add cl, byte [rax + 0x60]
or byte [rcx + 0x43], bh
xor dword [rdx + 0x53], ebx
or ebp, ebp
insb byte [rdi], dx
add al, 0x2f
xor dh, byte [rbp + 0x9174a5d]
test byte [rbx - 0x31], bl
sbb dil, byte [rax]
and al, 0xf5
pop rdx
xor al, 0x48
and al, byte [rdx]
pop rbx
sal byte [rdx], 1
jno 0x402b17
push -0x5c
stosd dword [rdi], eax
and esi, dword [rdx + 0xc]
or edx, dword [rdx]
adc byte [rdi + 0x71], dl
xor byte [rcx + 0x32d89532], r12b
fucom st(6)
cmpsb byte [rsi], byte ptr [rdi]
sub dword [rbp - 0x5a], eax
test eax, 0x52103245
and ebx, ebx
movabs eax, dword [0x5f32304b658b2b32]
jl 0x402b36
and esi, dword [rdx + 0x7f7e6b68]
sub eax, 0x3d12b192
xor dword [rax - 0x51dbffa], esi
add esi, dword [rsi + 0x2a]
mov word [rcx + rcx*2], cs
xor ch, bh
and dl, byte [rax - 0x50]
push rdx
retf
retf 0x2418
jo 0x402ae0
in al, 0xdd
jne 0x402bbd
hlt
loop 0x402b0e
and dh, ah
jns 0x402bab
xor dword [rdx], edx
xchg dword [rbp + 0x70], esp
mov cl, 0x5d
and dl, byte [rbp + 0x586900c2]
xor byte [rsi + rcx - 0x32929e4d], r13b
sbb edx, dword [rdi + rdx*2]
xchg eax, esi
xchg eax, esi
mov edi, edi
out dx, al
jae 0x402be7
pop rdi
push 0x715b38f2
push rcx
fisttp dword [rdx + 0x69]
ret 0x65b5
pop rdi
outsd dx, dword [rsi]
mov esi, 0xcb478f42
leave
loop 0x402ba0
xor ah, byte [rcx + rdx*8 + 0x56]
lahf
xlatb
xor byte [rsp + rsi*4 - 0x7c], ah
push rbp
mov edx, 0x124ceb0d
xchg dword [rip + 0x49114450], esp
or al, 0x19
and dh, byte [rcx]
lodsb al, byte [rsi]
popfq
sbb dl, al
retf 0x1133
sub dh, byte [rbp + 0x9ba6d1b]
adc bh, byte gs:[rax + 0x386e62c2]
and rax, 0x526eace4
out dx, al
insd dword [rdi], dx
push rsi
xor ecx, dword [rcx - 0x69]
in eax, 0x62
push rbp
movabs eax, dword [0x886c859b92aa3423]
out dx, al
movabs al, byte [0x75545a27ac2b5857]
jp 0x402c61
jp 0x402c4c
imul ebp, dword [rbx + 0x7b], 0xd
push 0x38012443
rol dword [rbx + 0x1cb0261], 1
xor byte [rax - 0x87272b5], dl
sbb byte [rax], ah
xor al, 0x12
fcomp qword [rbx]
xor byte fs:[rcx], al
cdq
sub dword [rcx + 0x73], 0x73
rcr byte [rdi + rsi], 1
movsxd rsp, ebp
push rsp
pop rdi
jae 0x402c66
enter 0x2355, -0x40
jbe 0x402bcf
nop
xor dh, byte [rax + 0x3425d44]
retf 0x6b68
test eax, 0xab0834b9
or dword [rip + 0x6b63ad4e], r11d
fst st(7)
jmp 0x402cae
in al, dx
insd dword [rdi], dx
xchg dword [rbx + 0x525e1d6c], ebx
jb 0x402c4f
push rsp
or dword [r13 + rdx*4 - 0x5f153840], r8d
adc eax, 0x7869d822
sal byte [rsi + 0x6f], 1
mov dl, 0xb5
adc ch, byte [rbx + 0x50]
insd dword [rdi], dx
add eax, 0x317c3181
push rdi
iretd
mov bh, 0x6c
enter 0x1b38, -0x66
xor r10d, dword [r14 - 0x7c]
enter 0x138, -0x29
lea edx, [rax]
xor al, ah
insd dword [rdi], dx
and ch, byte [rax + rax*2]
mov al, 0xa
nop
push rdx
sbb ecx, ecx
adc al, 0x21
push rbx
xor dword [rdi + 0x45], edx
xor byte [rbp + 0x18], cl
pop rdi
mov cl, 0x88
mov bl, 0x5e
adc al, 0xca
sbb dword [rcx + rsi - 0x13], 0x8046381b
fistp word [rsi + 0x49]
pop rax
jae 0x402d19
pop rdx
imul ebx, dword [rdi + 0x16b418b8], 0x80b6c199
ficom dword [rsi]
clc
jne 0x402d0b
pop rdi
call qword [rdx]
cmp byte [rsi], ah
or al, 0x36
cmc
and al, 0x2d
and esp, dword [rcx + 0x6b]
push rax
push rdx
jge 0x402d14
enter 0x5852, -0x20
xor al, 0xe4
jrcxz 0x402c5e
fsub dword [rax - 9]
movabs dword [0x296ed377a6687462], eax
movsxd rax, dword [rdx]
and eax, 0xd5807165
scasb al, byte [rdi]
adc byte [rdx + 0x62], bl
mov dl, byte [rdx + rcx*8]
jb 0x402d4a
sbb byte [rax], bh
sub eax, 0x581af0d0
adc byte [rip - 0x366ffd2d], cl
sal byte [rsp + rbx*2], 0x6d
cmpsb byte [rsi], byte ptr [rdi]
adc ebp, dword [rbx - 0x775ab21c]
mov dh, 0x4a
push 2
add eax, 0x5346e40a
shl byte [rcx - 0x69], cl
int3
and al, 0x40
sub al, byte [rcx - 0x34]
movsb byte [rdi], byte ptr [rsi]
nop
cmpsb byte [rsi], byte ptr [rdi]
sbb dword [rdi - 0x58], ecx
xor eax, 0x7ac95245
jae 0x402d55
pop rax
cdq
movabs al, byte [0x804ba3b6ae528429]
add al, 0x57
lock add dword gs:[rax + rcx*2], ecx
xchg eax, edi
test byte [rbp + 0x67b61568], dh
mov dword [rdi + 0x73], ebx
or edi, 0xc146daee
mov ecx, 0x2130ea7e
sbb eax, 0x18494241
adc cl, byte [rcx]
mov bh, 0x62
xor ecx, dword cs:[rbx]
jnp 0x402d9c
and dword [rcx], 0xc6b99b37
test dword [rip + 0x10b40ac2], edx
mov word [rdi], fs
sbb dword [rsi - 0x6f40cad3], edi
adc bl, al
fld dword [rbp + rbp*4 + 0x71]
nop
imul edi, dword [rax], -0x60
jmp 0x402d60
and ebp, dword [rsi + rbx*2]
add dword [rip - 0x7bdb9dcb], 0x38
xor eax, 0x776e1d6e
sti
jbe 0x402d66
xor dl, byte [rbp + 0x37]
mov cl, 0x45
or esi, dword [rsi - 0x394e9bc0]
insd dword [rdi], dx
sub al, 0x48
call 0x43837432
cmp al, 0x30
test byte [rdi + 0x1f1e1009], 0xef
xor cl, byte [rax + 0x18632c19]
jo 0x402d49
pop rbp
movsxd rcx, dword [rcx]
mov dword [rax + rdx + 0x56b260bd], eax
add byte [rbp + 0x76], 0x65
cmpsd dword [rsi], dword ptr [rdi]
and al, 0x53
cdq
xor bl, bh
and al, 0x56
adc byte [rip + 0x21562ce0], 0x89
mov esp, dword [rcx - 0x53]
nop
sub dword [rdi + 0x59335a92], edx
add byte [rdx], dh
cdq
add byte [rdx], dh
mov ah, 0x45
push rdx
lodsb al, byte [rsi]
xor bl, bh
and byte [rbp + 0x7a62403f], ah
add byte [rsi], ch
jae 0x402e7c
insd dword [rdi], dx
sal dword [rbp + 0x62bb2761], cl
je 0x402e7f
push -0x5975b0f7
in eax, 0xd6
movabs dword [0x972dc12e6f6e0770], eax
mov eax, 0xdf6560b
movabs al, byte [0xd6f72d640775622e]
pop rdx
in al, dx
imul esp, dword [rax + rax + 0xd], 0x64093872
jns 0x402ea5
loope 0x402e74
imul esi, dword [rbx], 7
sbb dword [r14 + 0xe], r14d
outsb dx, byte [rsi]
ret 0x214a
or al, 0x5f
sbb esi, dword [rdx + 0x257b046d]
adc ch, byte [rax]
or dword [rdx], ebp
je 0x402e35
mov dh, 0x67
jb 0x402e04
or ch, byte [rdi + rbp*2]
or dl, bl
in al, 0xa
movsb byte [rdi], byte ptr [rsi]
add eax, 0xec6f24ce
xor eax, dword [rax + 0x652e7cc7]
push 0x72646869
or eax, 0xb742b700
pop rbp
movsxd rax, dword [rsi + rbp]
movsxd rsp, dword [rbp - 0x6e]
scasb al, byte [rdi]
sub eax, ecx
mov ebp, 0xb199116c
xchg ebp, r9d
or ebp, dword [r10 + 7]
movabs eax, dword [0x68003736685bd9b3]
jnp 0x402ef7
pop rsp
xor al, 0x47
add al, 0xac
push rdx
std
xchg byte [rax], ah
add eax, ebx
add byte [rax], al
pop rcx
sal dword [rdx], 1
mov al, byte [rcx]
xlatb
pop rdi
leave
nop
pushfq
mov ecx, 0x11c3f07
and byte [rbx], al
ror byte [rbx], cl
push rsp
and al, 0x43
xor cl, al
push rsp
and byte [rax + rcx*8], al
and byte [rbx + 0x32], al
xor dword [rsp + rsi*2 - 0x1c], esi
int 0x50
xor ah, byte [rsp + rax*2]
idiv bh
ljmp [rdi - 0x70]
cmp dword [rax + 0x21803898], ebx
sbb dword [rbp + rax + 8], esp
xor r9b, al
mov bl, 0xc3
rcl al, 1
xchg eax, ebx
fadd dword [rbx]
sti
sbb byte [rax + 0x5620cd25], ch
add esp, dword [rdi + rcx*2]
js 0x402f14
push rbx
sbb dword [rdx - 0x2e], 0xffbf5e5d
sbb r10, qword [r10 - 0x40f8c84d]
push rdx
add al, byte [rdi]
push rax
movabs r10, 0x26f6720cfe3f6b21
ja 0x402f2b
cmpsd dword [rsi], dword ptr [rdi]
nop
test byte [rcx], ch
wait
jp 0x402f81
jb 0x402eb3
wait
sbb al, 0xe0
sbb rsp, rbp
mov al, 0x10
inc dword [rdi + rdi + 0x26f6742]
xor eax, 0x303f07c7
test byte [rcx], al
in al, 0x92
add ebx, dword [rcx]
mov ss, word [rbx]
outsd dx, dword [rsi]
xor byte [rcx], r11b
outsd dx, dword [rsi]
leave
or edi, edi
sbb cl, byte [rcx + 0xc83883f]
xor al, byte [rax + 0x64023080]
mov r14b, 0x30
xchg eax, esp
xor ah, bl
or al, 0x2a
or al, 0xd9
xchg eax, ecx
sub eax, 0xc03f9d0f
or esp, esp
cdq
wait
jg 0x402f36
and ebp, dword [rbx + 0x3f61c908]
movabs dword [0x9ff0737339286e7], eax
test eax, 0x9211526e
mov edi, 0xd90075f
and eax, 0xb1dbbf67
cmp al, 0x73
mov bl, 0xa0
jg 0x402fc7
add ah, byte [rdx - 0x406e8dbe]
int3
jg 0x402fcd
or dword [rdi], esi
mov dword [rdx], ecx
leave
leave
mov esp, 0x3f24f245
pop rdx
add edi, ebx
sar word [r8 + 0x6a], 0x66
jg 0x402fae
push rax
jb 0x402fca
call qword [rax]
out 0x3f, eax
invd
outsb dx, byte [rsi]
xor ah, byte [rax]
clc
inc dword [rbx + rcx*8 - 0x32]
add eax, 0x5d23ff3
fsub dword [rdi + rsi*2]
clc
wait
outsb dx, byte [esi]
pop rbx
jg 0x402fe9
sbb dword [rdx + 0x10060193], edx
cwde
leave
and bl, bl
mov edi, 0xe4854f4f
and byte [rdi], dl
or byte [rcx], al
add dword [rdx - 0x10ef7c99], edx
push rax
sub byte [rcx], al
or dword [rax + 0x48], edx
or ah, byte cs:[rdi + 0x74]
and byte [rax + 0x3f107f07], bh
or byte [rsi], cl
xor cl, al
add byte [rax + 0x38], 0x38
add al, cl
xchg ah, ah
and byte [rip + 0x161c187f], dl
mov dl, 0x30
xor al, 0xbf
mov bl, 0xc3
adc dword [rbx], edi
adc dword [rdx - 0x32], ecx
cmp byte [rbp - 0x7c], bh
jg 0x40306d
jns 0x403027
sub ebx, dword [rbx + 0x517000bb]
call rax
adc al, 0xb0
add dword [rcx + rdi + 0x7f095f1f], esp
sub al, 0x92
xchg dword [rax + 0x66], eax
cmp eax, 0x1e
add byte [rax], al
add byte [rdx], dl
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x52f7fdea], ecx
int 0xa4
lea ecx, [rsi]
sbb bh, ch
and eax, 0x3c68
movabs eax, dword [0x4900008da0000010]
add byte [rax], al
add ah, dh
add byte [rax], al
add bh, bh
