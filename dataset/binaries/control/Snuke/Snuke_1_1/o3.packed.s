call 0x4012f0
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401108
add ebx, ebx
je 0x4010be
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4010f6
cmp rbp, -4
ja 0x4010f6
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4010de
add ecx, 4
mov dl, byte [rax]
je 0x401106
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4010f6
ret
cld
pop r11
cmp r8b, 2
je 0x40111e
jmp 0x40119b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40112e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401116
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401146
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401133
sub eax, 3
jb 0x401164
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40119b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x40118b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401189
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401178
cmp rbp, -0xd00
adc ecx, eax
call 0x4010ca
jmp 0x40111e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401274
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401212
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40125e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401231
push 0x3a707474
jne 0x40128a
js 0x40124a
jae 0x401284
outsb dx, byte cs:[rsi]
je 0x401243
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4012b1
jb 0x4012a3
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4012ce
jb 0x4012e1
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21212c
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21212c
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x4011ac
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4012d7
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401285
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add dword [rax], eax
jmp rbp
call 0x706f137f
jb 0x401397
movsxd rbp, dword [rdi]
jae 0x401391
insb byte [rdi], dx
js 0x401397
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401377
cmp rsi, rcx
jae 0x40137f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x40135e
cmp al, 0x8f
ja 0x40135e
cmp byte [rsi - 2], 0xf
je 0x401364
sub al, 0xe8
jg 0x401361
push rdi
cmp al, 1
ja 0x40134c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40134f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x40137c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4013d3
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1851
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401417
mov al, 0xa
jmp 0x401417
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4013f3
inc ebx
mov al, 0
jmp 0x40141b
mov al, 2
jmp 0x40141b
mov al, 3
jmp 0x40141b
mov al, 0x3c
jmp 0x40141b
push rcx
rcr ah, 1
fstp st(7)
jle 0x40145c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40146e
jg 0x401460
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6be3
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4014ba
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6637
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4014c2
cmp esi, 0x21585055
jne 0x4014c6
jge 0x4014b8
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4014bb
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4014bf
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40156b
pop rcx
or al, 0x3b
jb 0x401571
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4014e3
jmp 0x4014e5
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661426
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5366e
in eax, dx
jg 0x40151d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401563
mov bh, 0x2a
add edi, 0x10
jmp 0x401560
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40159d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4015d9
jne 0x4015f0
fstpnce st(6), st(0)
jle 0x4015b9
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4015ef
jrcxz 0x401623
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b587
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4016a2
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401662
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295c37
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4016d5
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40166f
and ecx, 7
or al, 0xeb
jae 0x4016da
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x40170f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40174d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401706
push rax
call 0xffffffff868d13f3
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401710
std
cmp edi, esi
xchg eax, edi
jle 0x401765
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95cf1
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401763
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401751
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40177a
js 0x4017ba
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40184c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2a87
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40186d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401872
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21324
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401800
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
lodsb al, byte [rsi]
sldt word [rax]
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], dl
mov byte [rax + 0x92], ch
add byte [rax], al
add byte [rax], al
add dil, dil
add byte [rax], bl
add byte [rax], al
rol byte [rdi], cl
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401926
je 0x40192f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x4018f8
mov dh, 0x7d
jbe 0x4018f7
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401930
sahf
sahf
add al, 0
cwde
add eax, 0x1f90d000
and byte [rdi + 0x5a00006], bl
add dl, ah
or al, cl
enter 0x80f, 0
and byte [rcx], cl
or dword [rax], eax
add esp, esp
adc ecx, dword [rdx]
add byte [rax], bh
or cl, byte [rbx]
add byte [rax + 0xc], cl
sti
add al, 0xf2
add dword [rax + rax], ecx
jo 0x401931
add al, ah
or eax, 0xe5604f77
add byte [rsi], cl
lldt word [rsp + rax]
push rsi
mov al, 0x1b
mov edi, 0xf9021710
add cl, bh
adc dword [rax], eax
or byte [rdx + rdx], bl
add byte [rax + 0x20], bl
jg 0x4018c7
jl 0x40195c
add ah, bh
sbb eax, 0x2de80014
nop
and byte [r15], r9b
adc eax, 0x16f800
add byte [rsi], ch
enter -0x6fd9, 0xf
add byte [rax], cl
sbb byte [rax], al
clc
in al, 3
in al, 7
sbb dword [rax], eax
add byte [rax], dh
sbb al, byte [rax]
enter 0x9b2, -0x1c
or dword [rbx], ebx
add al, ah
sbb al, 0x13
fcom dword [rcx + 0x17019bbc]
add al, 0
int1
dec dword [rbx + rbx]
mov ebx, 0xbfb2b869
sbb dword [rdi + 0x400ed002], edx
jb 0x401926
or dword [rbx], ebx
adc byte [rdi], cl
out dx, al
or eax, 0x445020c9
pop rdi
xor eax, 0xd9d83221
adc byte [rbx], dh
pop rdi
add dword [rdi], edx
push rbx
xchg byte [r8 + r14*4 + 0x2b], r12b
jp 0x4019fb
jo 0x40193c
adc byte [rsi + 0x25], dh
xchg eax, edi
movsd dword [rdi], dword ptr [rsi]
xlatb
mov al, 0x41
cmp cl, dh
stosd dword [rdi], eax
adc eax, 0x3b39065f
cmpsd dword [rsi], dword ptr [rdi]
jmp 0x41dcfafb
adc dword [rdi], esi
mov esp, 0xf8671d90
push rdi
clc
sbb eax, 0x84360106
pop rbp
and byte [rdi], cl
adc r13b, byte [r8 + 0x19]
mov cl, 0x2b
and esi, dword [rdi + 0x360f4725]
and eax, 0x2f3b5d8c
adc al, 0x37
sbb dword [rcx + 0x5f1f6129], esi
xchg dword [rip - 0x34a1c9c0], r11d
add edx, dword [rdi + 0x20]
push 0x2e106601
jrcxz 0x40199e
push rdi
sbb byte [rax], cl
jle 0x401a52
cmp ebx, dword [rdi + rax*4 + 0x431bf712]
iretd
add ecx, esi
sahf
movabs al, byte [0xcaec219a018e2a0e]
add byte [rbx + 0x7620e617], dh
or byte [rcx], bl
cmc
or dword [rdx], eax
and dword [r11 - 0x28], r8d
add eax, 0x102f171b
xor al, byte [rsp + rcx + 0x5d847b4a]
pop rcx
out 0x88, eax
add dword [rdi - 0x37bcd06b], edx
adc byte [rsi], dh
mov edx, 0x4f3d917
and dword [rbx + rax + 0x30], ecx
xor eax, dword [rax - 0x388e79e3]
lea edi, [rcx]
fadd dword [rax + 0x4271140]
pop rdi
pushfq
add ecx, dword [rsi - 0x50fd13df]
leave
sti
nop
adc dh, dl
pop rdi
add dl, byte [rdi]
fdivr dword [rcx - 0xa]
jne 0x401a0e
loop 0x401aaf
xor ch, byte [rdi]
adc byte [rcx], al
jno 0x401ad8
cmp ecx, edi
rol byte [rsi], 1
add al, 0xc8
cmp dword [rdi], 0x1a
push rbx
idiv byte [rdx + rsi*4 + 0x1b04738f]
ja 0x401b28
xor al, byte [rbp + rcx + 0x179a2f61]
mov dh, 0x20
pop rbp
int 0x10
and bh, byte [rdi - 0x50]
or edi, dword [rcx - 0xe]
in al, dx
in eax, 0xa
ja 0x401b08
add dword [rax], ebx
xor edx, dword [rsp + rdi - 0x581e4f79]
cmp byte [rip + 0x3921d81a], al
loope 0x401b11
add eax, 0x560a0c7
out dx, eax
or byte [rcx], bl
ret 0x1742
mov edx, dword [rax - 0x5b89876d]
add eax, 0x670fa0bf
add eax, dword [rsi]
sbb edx, dword [rax + 0x7b12e466]
mov edi, 0x201fa110
jno 0x401abe
movsxd rsi, dword [rdx + 0x74]
jae 0x401b08
mov edi, 0x667d6ffd
movsxd rax, dword cs:[rbx + 0x5f]
push r10
pop rdi
push r11
push rsp
or dword [rax], eax
jb 0x401b79
fdivp st(5)
fstp st(2), st(0)
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401b48
outsd dx, dword fs:[rsi]
pop rdi
std
neg bh
fimul word [rbx]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x401b98
jne 0x401bb4
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x401bad
in eax, dx
mov al, 0xbf
sub dword [rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bp, word [rsi + 0x69], 0xdb08
in eax, dx
or edi, ebp
jb 0x401bcc
jns 0x401bbc
jge 0x401bd2
jns 0x401b62
or ch, byte [rbp + 0x65]
and byte [rbp + 0x58], dh
out dx, al
insd dword [rdi], dx
insd dword [rdi], dx
jns 0x401ba2
or eax, 0x2a74295f
fstp xword [rdi - 0x45]
pushfq
jo 0x401bed
and al, 0x5a
pop rdx
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jbe 0x401b19
xor eax, 0xbfedfffe
jae 0x401b94
jbe 0x401bd6
xor dword [rcx], edi
cmp dl, byte [rax + 0x52]
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
jle 0x401b46
in eax, dx
out dx, eax
mov ebx, 0x4f4c475f
or qword [rbx - 0x16], r14
pop rdi
pop r15
insd dword [rdi], dx
mov ebx, 0x51d77b77
cmp eax, 0x384c7453
adc ch, byte [rcx + 0x6f]
pop rsi
jno 0x401c0d
push rdx
jns 0x401b7c
idiv esi
pop r15
xor cl, r15b
or eax, dword [rdi + 0x4e]
push rbp
test cl, 0x1e
insb byte [rdi], dx
and byte [rax + 0x44], cl
push rdx
push rbx
imul esp, dword [rcx + 0x13], -0xa
pop rdi
push rsp
sub byte [r8 - 0x11a2ef9c], r13b
pop rdx
cmp dword [rdi], eax
pop cx
sar dword [r15 + 0x337e8edd], 1
movsxd rbx, dword [rdi]
pop r8
pop rax
pop rdi
xor ecx, dword [rax]
lodsd eax, dword [rsi]
scasb al, byte [rdi]
je 0x401c4b
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0xfc1fa75d
test dword [rsi - 0x4f], eax
and eax, 0x68744084
jb 0x401c9b
ja 0x401c8d
mov dh, 0x64
sbb ah, byte [rcx + 0x48]
jbe 0x401c6c
and al, 0x7b
jnp 0x401cb7
enter 0x3432, 0x6f
jne 0x401cb3
outsd dx, dword [rsi]
pop di
jb 0x401cb5
imul r14d, dword gs:[ecx], 0x7f
insd dword [rdi], dx
je 0x401ca1
movsxd rdi, dword [r10 + 0x2f]
xlatb
loope 0x401c39
lodsb al, byte [rsi]
mov al, 0x67
insd dword [rdi], dx
rcl byte [rbx + 0x5f764ae2], 0x52
fnsave dword [rsi + 0x43076c35]
insb byte [rdi], dx
jae 0x401c49
jo 0x401cb8
jae 0x401caa
xchg eax, ecx
fstp st(5)
pop rdi
xor dh, byte [rbx]
xor eax, 0x506c6467
jnp 0x401ca5
pop rbx
call 0x446d7c66
push bx
insb byte [rdi], dx
int1
fisttp dword [rsi + 0x4b]
cwde
xor eax, 0x70797463
movsxd rbx, dword gs:[r9 + 0x5f4d5f33]
ja 0x401d0b
push rsi
mov byte [rax - 0x54ea91ba], dh
xchg eax, esp
xor dword [rsi + 0x319b6dbd], edx
jo 0x401d25
sbb dh, byte [rbx + rdi*4 + 0x63]
push 0x58664a6b
fmul st(6)
loope 0x401d0e
cmp byte [r9 - 0x5a92fd8d], bpl
test cl, bl
out dx, al
xor al, 0x49
xor dword [r9 + 0x3b], eax
fld qword [rdx + 0x76]
cwde
shl edx, cl
mov ss, word [rsi + 0x78]
mov dh, 0x94
mov ch, 0xad
lodsd eax, dword [rsi]
loope 0x401d5a
cmp al, 0xa8
pop rbp
jmp 0x401d46
ja 0x401ce5
js 0x401c72
xor dword [rdx], esi
imul eax, dword [rsi - 0x75], 0x1c15b767
pop rbx
jg 0x401d2c
hlt
push rcx
leave
insb byte [rdi], dx
outsb dx, byte [rsi]
mov bh, 0x38
jae 0x401cce
push rbx
add al, 0xce
xor byte [rcx], dl
xchg byte [rsi - 0x1d], al
out 0x61, eax
movsxd rsi, dword [rdi - 0x5c]
in al, 0
sbb edx, dword [rdx + 0x44b6316d]
insd dword [rdi], dx
push -0x51
push r12
pop rsp
or al, 0x43
movsd dword [rdi], dword ptr [rsi]
jmp 0x401d75
pop rdx
push rsp
sbb ecx, dword [r15 - 0x78]
ficomp dword ss:[rdi + 0x75]
jae 0x401d3b
outsb dx, byte [rsi]
mov bx, 0x5b5b
cmp eax, 0x61ec543b
xor dword [rdi + rsi*2], ecx
sbb byte [rsi + 0x5f], dh
sbb ecx, edi
rcl byte [rcx + 0x342ed8e0], cl
movsxd rsp, dword [rsi]
sub al, 0xe3
xor eax, 0xb7e95fda
cmp al, 0x87
movsd dword [rdi], dword ptr [rsi]
xchg cl, cl
cmp byte [rdi + rax*4 - 0x679ae991], ch
jnp 0x401cf3
jo 0x401de5
adc al, 0xf4
sbb eax, 0x30135245
or eax, 0x4333a136
sub eax, 0xbb42149
lodsd eax, dword [rsi]
push rax
sub eax, 0x53253f37
xor ebx, dword [rcx - 0x50]
sal byte [rcx + 0x21], cl
cmp dword [rbx + 0x62], eax
test al, 0x2b
jnp 0x401d5f
xor ch, byte [rdi + 0x35]
insb byte [rdi], dx
out dx, eax
push 0x3c6423df
jbe 0x401dcb
movsxd rbp, dword [rbx + 0x1d]
insd dword [rdi], dx
and byte [rdx], cl
cmp ch, byte [rcx + 0x58]
jl 0x401e1f
xor esi, dword [rax + 0x41]
retf -0x12df
cmp dword [rdx + rax*4], edx
movabs dword [0x68d6eb3d316decd0], eax
cmpsd dword [rsi], dword ptr [rdi]
ret
outsb dx, byte gs:[rsi]
pop rax
push rdi
outsd dx, dword [rsi]
jbe 0x401d7c
mov ch, 0xb6
outsb dx, byte [rsi]
outsb dx, byte [rsi]
out dx, al
div dword [rsi + 0x30]
sub edx, edi
fsubr dword [rdx - 0x47]
and dh, byte [rdi + 0x31]
int3
jle 0x401d9e
mov dl, 0x2d
insb byte [rdi], dx
outsb dx, byte [rsi]
ja 0x401e2b
adc dl, byte [rbp + 0x7d]
outsb dx, byte fs:[rsi]
xlatb
sub bl, byte [rax + 0x1bf36e81]
push rdx
mov dh, 0xe9
test byte [rax], dh
or esi, dword [rbx]
xchg dword [rbp + 0x63], eax
and bl, byte [rcx]
cmp byte [rax + 0x585e3859], dl
imul edx, dword [rsi + rsi*2 + 0x737e27d4], 0x79
add byte [rdi], al
sbb dh, byte [rsi - 0x4e]
je 0x401e93
push 0x6c975b09
jmp 0x401dbe
jo 0x401e32
outsb dx, byte [rsi]
outsd dx, dword [rsi]
sub eax, 0xb10d6715
in eax, dx
ret 0x671f
outsb dx, byte [rsi]
jne 0x401e69
jne 0x401e91
sub eax, 0x330d0047
not esi
or al, byte [rax + rdi]
or dword [rcx + rdi*2 + 0x6e], esp
pop rdx
sal dword [rax], 0x6b
sbb dword [r10 + rsi - 0x23], r9d
xchg eax, ebp
or ch, byte [rsi - 0x3e]
or al, 0x5f
sbb ebp, edx
or ecx, dword [rsi + 0x28ec14b7]
or dword [rcx], ebx
je 0x401edc
cmp al, 0xe5
outsb dx, byte [rsi]
jnp 0x401e7a
sub al, 0x6f
or byte [rbp + rax + 0x10], bh
js 0x401dfc
out dx, al
fldenv [rdi + rbp*2]
xor byte [rsi], ch
push 0x2dd0adeb
jnp 0x401eee
jb 0x401e96
pop rbp
movsxd rdx, dword [rsi + 0x4aeb802e]
pop r12
jo 0x401e60
mov ebp, 0x8706116c
int 0x96
or ebp, dword [r10 - 0x4e]
fstp dword [rbx + 0x68]
mov cl, 0xa1
leave
add byte [rax + 0x7b], ch
jae 0x401e7c
sbb al, 0xb3
pop rsi
pop rdx
add al, 0x90
push rdx
add byte [rax + 0x5b], ah
std
add byte [rax], al
sbb ebx, dword [rbx - 0x15b4fc]
test dword [rdi], 0xd9c90c90
sbb al, 1
or al, 0x32
and ch, cl
and eax, dword [rdi]
push rsp
push rsp
xor spl, byte [r11 + r8*4]
and byte [rcx + rsi], al
or dword [rdx + rsi], 0x24
je 0x401f53
and al, 0x43
fimul word [rip - 0x980bbdb]
ljmp [rdi + 6]
sbb dword [rax + rdx*4 - 0x68], esp
cwde
cmp byte [rip + 0x419219a4], al
or byte [rsi + 0xb], cl
adc edx, edx
rol byte [rdi], 1
add byte [rsi], al
nop
leave
sti
sbb byte [rsi - 0x10], dl
rcl word [rdx - 0x5bf840fd], -0x45
sahf
add ebx, dword [r14 - 0x41]
lcall [rbp + rdi*4 + 0x7e7b059]
mov edi, 0xd90dd23c
nop
add al, byte [rdi]
imul edi, dword [rdi], -2
rcr esi, -0x7c
pop rax
sysret
mov edi, 0x92ec0184
add byte [rbx], al
jp 0x401f8e
wait
sbb al, 0x16
in al, dx
mov al, 0x10
jb 0x401f90
inc dword [rdi + rdi + 0x193109bd]
pop rdi
nop
sahf
adc byte [rdx], al
sbb dword [rsi + 0x10641426], ecx
adc eax, dword [rsi]
mov edi, 0xf09c9436
lcall [rdx]
mov dword [rdi], edi
cmp eax, ecx
and byte [rbx + 0x70], al
jo 0x401fe2
add dword [rcx], esp
sbb esi, dword [rdx - 0x6bf8eff5]
add eax, 0xd7109b86
xchg eax, ebx
and dword [rbx], edi
mov dl, 0xf
popfq
insb byte [rdi], dx
cmp dword [rbx + rsi*2], 0xd227f07
wait
add byte [rcx], ah
cmp dword [rbx + 0x4349078f], esp
leave
cdq
dec dword [rcx]
test eax, 0x4dccfbf
or byte [rdi], ah
jg 0x401f8f
add byte [rdx - 0x4edba270], al
movabs eax, dword [0x44c7f07bf4dcce4]
sbb dword [rdx + 0x7583fbf], esi
or cl, bl
repne movsb byte [rdi], byte ptr [rsi]
add ecx, ecx
xchg eax, edx
mov bl, 0xdc
mov edi, es
jg 0x402012
sal dword [rdx + 0xedb866a], 0x1f
xchg eax, esp
pushfq
mov edi, 0x480c9b10
out 0x3f, eax
psubb mm0, qword [rdi]
mov dl, 0x73
add dword [rdx + 0x53ff3ff], eax
fsub dword [rsp + rax*8]
outsb dx, byte [rsi]
pop rbx
sar al, cl
wait
sbb dword [rdx - 0xf80986d], edx
add dword [rsi], eax
adc byte [rax], ah
fild dword [rdx + 6]
cwde
mov edi, 0x1720e42f
leave
or byte [rcx], al
add dword [rbp + rcx + 0x30e78402], ebx
enter 0x4326, 0x32
xchg eax, esp
or cl, al
rcr byte [rbp - 0x80], cl
loopne 0x402033
jg 0x40203e
or byte [rcx], bh
enter 0x320, -0x20
fdivr dword [rax]
add al, byte [rsi]
sbb edx, dword [rdx + 0x7f15200b]
xor byte [rcx + rsi*2 + 0x3f17c858], al
xor al, 0x3f
push rbx
cmp ebp, dword ss:[rdi + rax]
adc dword [rbx], edi
mov bh, 0x8c
jg 0x402076
add dword [rbx - 0x49bca61c], edi
xlatb
xor edi, edi
call 0xffffffff9046e26e
out 0x1f, al
xor ecx, dword [rcx]
jg 0x40201c
sahf
sbb al, 0xf8
cmp dword [rdi + 5], edi
add byte [rax], al
add byte [rax], cl
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x38f7fdea], ecx
push rsp
sub edx, dword [rbx + 0x74]
push rcx
out 0, eax
sbb byte [rax], al
add dl, dl
add byte [rax], al
fmul dword [rax]
add byte [rcx + 1], cl
add byte [rdi], ch
hlt
add byte [rax], al
add bh, bh
