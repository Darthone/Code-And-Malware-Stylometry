xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6020c7
push rbp
sub rax, obj.std::cin
cmp rax, 0xe
mov rbp, rsp
jbe 0x400c80
mov eax, 0
test rax, rax
je 0x400c80
pop rbp
mov edi, obj.std::cin
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.std::cin
push rbp
sub rsi, obj.std::cin
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400cc8
mov eax, 0
test rax, rax
je 0x400cc8
pop rbp
mov edi, obj.std::cin
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x201501], 0
jne 0x400cea
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x2014ee], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400d00
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400cfb
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
push r15
push r14
mov edi, obj.std::cin
push r13
push r12
push rbp
push rbx
sub rsp, 0x48
lea rsi, [rsp + 0x28]
mov rax, qword fs:[0x28]
mov qword [rsp + 0x38], rax
xor eax, eax
call sym.std::istream::operator__
lea rsi, [rsp + 0x2c]
mov rdi, rax
call sym.std::istream::operator__
movsxd rbx, dword [rsp + 0x28]
test rbx, rbx
je 0x4016ca
movabs rax, 0x1fffffffffffffff
cmp rbx, rax
ja 0x4016dd
lea r12, [rbx*8]
mov rdi, r12
call sym.operatornew
mov rbp, rax
shl rax, 0x3c
shr rax, 0x3f
cmp rax, rbx
cmova rax, rbx
cmp rbx, 6
ja 0x401410
movabs rax, 0xde0b6b3a7640000
cmp rbx, 1
lea rcx, [rbp + 8]
mov qword [rbp], rax
je 0x4016b6
cmp rbx, 2
mov qword [rbp + 8], rax
lea rcx, [rbp + 0x10]
je 0x40169a
cmp rbx, 3
mov qword [rbp + 0x10], rax
lea rcx, [rbp + 0x18]
je 0x401690
cmp rbx, 4
mov qword [rbp + 0x18], rax
lea rcx, [rbp + 0x20]
je 0x401686
cmp rbx, 5
mov qword [rbp + 0x20], rax
lea rcx, [rbp + 0x28]
je 0x4016c0
lea rcx, [rbp + 0x30]
mov qword [rbp + 0x28], rax
mov rax, rbx
cmp rbx, rax
je 0x400e44
sub rbx, rax
lea rdx, [rbx - 2]
shr rdx, 1
add rdx, 1
cmp rbx, 1
lea rdi, [rdx + rdx]
jne 0x40142b
movabs rax, 0xde0b6b3a7640000
mov qword [rcx], rax
movsxd rbx, dword [rsp + 0x28]
test rbx, rbx
je 0x401466
movabs rax, 0xaaaaaaaaaaaaaaa
cmp rbx, rax
ja 0x401705
lea r13, [rbx + rbx*2]
shl r13, 3
mov rdi, r13
call sym.operatornew
mov rdi, r12
mov rdx, rax
mov qword [rsp], rax
sar rdi, 3
test rdi, rdi
jne 0x401480
mov rax, rdx
test rax, rax
je 0x400ea3
mov qword [rax], 0
mov qword [rax + 0x10], r12
mov qword [rax + 8], r12
add rax, 0x18
sub rbx, 1
jne 0x400e8f
mov rax, qword [rsp]
lea r14, [rax + r13]
mov rdi, rbp
call sym.operatordelete
mov esi, dword [rsp + 0x28]
movsxd rax, esi
test rax, rax
je 0x401675
movabs rdx, 0x1fffffffffffffff
cmp rax, rdx
ja 0x40184b
lea rbx, [rax*8]
mov rdi, rbx
call sym.operatornew
xor esi, esi
mov rdx, rbx
mov rdi, rax
mov qword [rsp + 0x18], rax
call sym.imp.memset
movsxd rax, dword [rsp + 0x28]
test rax, rax
mov rsi, rax
je 0x40183b
movabs rdx, 0x1fffffffffffffff
cmp rax, rdx
ja 0x401836
lea rbx, [rax*8]
mov rdi, rbx
call sym.operatornew
xor esi, esi
mov rdx, rbx
mov rdi, rax
mov r15, rax
call sym.imp.memset
mov esi, dword [rsp + 0x28]
test esi, esi
jle 0x4010a2
mov r12, qword [rsp + 0x18]
mov rbp, r15
xor ebx, ebx
nop dword [rax]
mov rsi, r12
mov edi, obj.std::cin
call sym.std::istream::_M_extract_longlong_
mov rsi, rbp
mov rdi, rax
call sym.std::istream::_M_extract_longlong_
mov esi, dword [rsp + 0x28]
add ebx, 1
add r12, 8
add rbp, 8
cmp esi, ebx
jg 0x400f60
test esi, esi
jle 0x4010a2
mov r12, qword [rsp]
xor r13d, r13d
nop word [rax + rax]
test esi, esi
jle 0x400fd0
xor ebp, ebp
xor ebx, ebx
nop dword [rax + rax]
mov rsi, rbp
add rsi, qword [r12]
mov edi, obj.std::cin
call sym.std::istream::_M_extract_longlong_
mov esi, dword [rsp + 0x28]
add ebx, 1
add rbp, 8
cmp esi, ebx
jg 0x400fb0
add r13d, 1
add r12, 0x18
cmp r13d, esi
jl 0x400fa0
test esi, esi
jle 0x4010a2
lea edi, [rsi - 1]
mov rbx, qword [rsp]
add rdi, 1
lea rax, [rdi + rdi*2]
mov rcx, rbx
shl rdi, 3
lea r8, [rbx + rax*8]
mov rax, qword [rcx]
lea rdx, [rax + rdi]
jmp 0x401019
nop dword [rax + rax]
add rax, 8
cmp rax, rdx
je 0x401036
cmp qword [rax], -1
jne 0x401010
movabs rbx, 0xde0b6b3a7640000
add rax, 8
mov qword [rax - 8], rbx
cmp rax, rdx
jne 0x401019
add rcx, 0x18
cmp rcx, r8
jne 0x400fff
mov r13, qword [rsp]
xor ebx, ebx
xor ebp, ebp
mov r12, r13
mov r9, qword [r12]
mov r11, r13
xor r10d, r10d
nop dword [rax]
mov rdi, qword [r11]
xor ecx, ecx
lea r8, [rdi + rbx]
nop dword [rax]
mov rax, qword [r9 + rcx*8]
add rax, qword [r8]
mov rdx, qword [rdi + rcx*8]
cmp rax, rdx
cmovg rax, rdx
mov qword [rdi + rcx*8], rax
add rcx, 1
cmp esi, ecx
jg 0x401068
add r10d, 1
add r11, 0x18
cmp r10d, esi
jl 0x401058
add ebp, 1
add r12, 0x18
add rbx, 8
cmp ebp, esi
jl 0x40104a
movsxd rbx, esi
test rbx, rbx
je 0x401628
movabs rax, 0x1fffffffffffffff
cmp rbx, rax
ja 0x401821
lea r12, [rbx*8]
mov rdi, r12
call sym.operatornew
mov r13, rax
shl rax, 0x3c
shr rax, 0x3f
cmp rax, rbx
cmova rax, rbx
cmp rbx, 6
ja 0x401528
movsd xmm2, qword [rip + 0x87b]
cmp rbx, 1
lea rcx, [r13 + 8]
movsd qword [r13], xmm2
je 0x401643
cmp rbx, 2
movsd qword [r13 + 8], xmm2
lea rcx, [r13 + 0x10]
je 0x40166b
cmp rbx, 3
movsd qword [r13 + 0x10], xmm2
lea rcx, [r13 + 0x18]
je 0x401661
cmp rbx, 4
movsd qword [r13 + 0x18], xmm2
lea rcx, [r13 + 0x20]
je 0x401657
cmp rbx, 5
movsd qword [r13 + 0x20], xmm2
lea rcx, [r13 + 0x28]
je 0x40164d
movsd qword [r13 + 0x28], xmm2
lea rcx, [r13 + 0x30]
mov rax, rbx
cmp rbx, rax
je 0x401193
sub rbx, rax
lea rdx, [rbx - 2]
shr rdx, 1
add rdx, 1
cmp rbx, 1
lea rdi, [rdx + rdx]
jne 0x401543
movsd xmm2, qword [rip + 0x7e1]
movsd qword [rcx], xmm2
movsxd rax, dword [rsp + 0x28]
test rax, rax
mov rbx, rax
mov qword [rsp + 8], rax
je 0x401818
movabs rax, 0xaaaaaaaaaaaaaaa
cmp rbx, rax
ja 0x401813
lea rax, [rbx + rbx*2]
shl rax, 3
mov rdi, rax
mov qword [rsp + 0x10], rax
call sym.operatornew
mov rbx, rax
mov rax, r12
sar rax, 3
test rax, rax
jne 0x401575
mov rax, rbx
test rax, rax
je 0x4011fb
mov qword [rax], 0
mov qword [rax + 0x10], r12
mov qword [rax + 8], r12
add rax, 0x18
sub qword [rsp + 8], 1
jne 0x4011e7
mov rbp, qword [rsp + 0x10]
add rbp, rbx
mov rdi, r13
call sym.operatordelete
mov esi, dword [rsp + 0x28]
test esi, esi
jle 0x4012e9
lea r12d, [rsi - 1]
mov r8, qword [rsp + 0x18]
mov r13, qword [rsp]
xor r11d, r11d
xor r9d, r9d
add r12, 1
lea r10, [r12*8]
mov rdi, qword [r8 + r9*8]
mov rcx, qword [r13 + r11]
xor eax, eax
nop dword [rax]
mov rdx, qword [rcx + rax]
cmp rdx, rdi
jg 0x401279
pxor xmm0, xmm0
pxor xmm1, xmm1
cvtsi2sd xmm0, rdx
mov rdx, qword [rbx + r11]
cvtsi2sd xmm1, qword [r15 + r9*8]
divsd xmm0, xmm1
movsd qword [rdx + rax], xmm0
add rax, 8
cmp rax, r10
jne 0x401250
add r9, 1
add r11, 0x18
cmp esi, r9d
jg 0x401242
lea rax, [r12 + r12*2]
xor r9d, r9d
mov r12, rbx
lea r11, [rbx + rax*8]
mov rdi, qword [r12]
mov r8, rbx
nop dword [rax]
mov rdx, qword [r8]
xor eax, eax
lea rcx, [rdx + r9]
nop dword [rax]
movsd xmm0, qword [rcx]
addsd xmm0, qword [rdi + rax*8]
minsd xmm0, qword [rdx + rax*8]
movsd qword [rdx + rax*8], xmm0
add rax, 1
cmp esi, eax
jg 0x4012b8
add r8, 0x18
cmp r8, r11
jne 0x4012a8
add r9, 8
add r12, 0x18
cmp r9, r10
jne 0x40129d
mov eax, dword [rsp + 0x2c]
test eax, eax
jle 0x401370
xor r12d, r12d
mov r13d, 0x20
nop word [rax + rax]
lea rdx, [rsp + 0x34]
lea rsi, [rsp + 0x30]
mov edi, str._d_d
xor eax, eax
call sym.imp.scanf
mov eax, dword [rsp + 0x30]
mov edi, dword [rsp + 0x34]
mov esi, str._.10f_c
sub eax, 1
lea ecx, [rdi - 1]
mov edi, dword [rsp + 0x2c]
mov dword [rsp + 0x30], eax
cdqe
lea rax, [rax + rax*2]
mov dword [rsp + 0x34], ecx
movsxd rcx, ecx
lea edx, [rdi - 1]
mov edi, 1
mov rax, qword [rbx + rax*8]
cmp edx, r12d
mov edx, 0xa
cmovne edx, r13d
movsd xmm0, qword [rax + rcx*8]
mov eax, 1
call sym.imp.__printf_chk
add r12d, 1
cmp dword [rsp + 0x2c], r12d
jg 0x401300
cmp rbx, rbp
mov r12, rbx
je 0x40138f
mov rdi, qword [r12]
test rdi, rdi
je 0x401386
call sym.operatordelete
add r12, 0x18
cmp r12, rbp
jne 0x401378
test rbx, rbx
je 0x40139c
mov rdi, rbx
call sym.operatordelete
test r15, r15
je 0x4013a9
mov rdi, r15
call sym.operatordelete
mov rax, qword [rsp + 0x18]
test rax, rax
je 0x4013bb
mov rdi, rax
call sym.operatordelete
mov rax, qword [rsp]
cmp r14, rax
mov rbx, rax
je 0x4013dd
mov rdi, qword [rbx]
test rdi, rdi
je 0x4013d4
call sym.operatordelete
add rbx, 0x18
cmp r14, rbx
jne 0x4013c7
cmp qword [rsp], 0
je 0x4013ed
mov rdi, qword [rsp]
call sym.operatordelete
mov rax, qword [rsp + 0x38]
xor rax, qword fs:[0x28]
jne 0x40170a
add rsp, 0x48
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
test rax, rax
jne 0x4016a4
lea rdx, [rbx - 2]
mov rcx, rbp
shr rdx, 1
add rdx, 1
lea rdi, [rdx + rdx]
movdqa xmm0, xmmword [rip + 0x51d]
lea rsi, [rbp + rax*8]
xor eax, eax
add rax, 1
add rsi, 0x10
movaps xmmword [rsi - 0x10], xmm0
cmp rax, rdx
jb 0x40143a
cmp rdi, rbx
lea rcx, [rcx + rdi*8]
jne 0x400e37
movsxd rbx, dword [rsp + 0x28]
test rbx, rbx
jne 0x400e52
mov qword [rsp], 0
xor r14d, r14d
jmp 0x400eb5
nop word cs:[rax + rax]
movabs rdx, 0x1fffffffffffffff
cmp rdi, rdx
ja 0x401852
test rdi, rdi
mov r14, qword [rsp]
je 0x4014ec
test r14, r14
je 0x4014dd
mov qword [r14], 0
mov qword [r14 + 8], 0
mov rdi, r12
mov qword [r14 + 0x10], 0
call sym.operatornew
lea r13, [rax + r12]
mov qword [r14], rax
mov rdx, r12
mov rsi, rbp
mov rdi, rax
mov qword [r14 + 0x10], r13
call sym.imp.memcpy
mov qword [r14 + 8], r13
add r14, 0x18
sub rbx, 1
jne 0x40149c
jmp 0x400eb5
test r14, r14
je 0x401515
mov qword [r14], 0
mov qword [r14 + 8], 0
mov rdx, r12
mov qword [r14 + 0x10], r12
mov rsi, rbp
xor edi, edi
call sym.imp.memcpy
mov qword [r14 + 8], r12
add r14, 0x18
sub rbx, 1
jne 0x4014ec
jmp 0x400ead
nop dword [rax]
test rax, rax
jne 0x401631
lea rdx, [rbx - 2]
mov rcx, r13
shr rdx, 1
add rdx, 1
lea rdi, [rdx + rdx]
movapd xmm0, xmmword [rip + 0x415]
lea rsi, [r13 + rax*8]
xor eax, eax
add rax, 1
add rsi, 0x10
movaps xmmword [rsi - 0x10], xmm0
cmp rdx, rax
ja 0x401552
cmp rdi, rbx
lea rcx, [rcx + rdi*8]
jne 0x401187
jmp 0x401193
movabs rdx, 0x1fffffffffffffff
cmp rax, rdx
ja 0x4017d1
test rax, rax
mov rbp, rbx
je 0x4015ee
test rbp, rbp
je 0x4015dd
mov qword [rbp], 0
mov qword [rbp + 8], 0
mov rdi, r12
mov qword [rbp + 0x10], 0
call sym.operatornew
lea rcx, [rax + r12]
mov qword [rbp], rax
mov rdx, r12
mov rsi, r13
mov rdi, rax
mov qword [rbp + 0x10], rcx
mov qword [rsp + 0x10], rcx
call sym.imp.memcpy
mov rcx, qword [rsp + 0x10]
mov qword [rbp + 8], rcx
add rbp, 0x18
sub qword [rsp + 8], 1
jne 0x401590
jmp 0x40120f
test rbp, rbp
je 0x401610
mov qword [rbp], 0
mov qword [rbp + 0x10], r12
mov rdx, r12
mov rsi, r13
xor edi, edi
call sym.imp.memcpy
mov qword [rbp + 8], r12
add rbp, 0x18
sub qword [rsp + 8], 1
jne 0x4015ee
jmp 0x401207
nop dword [rax]
xor ebp, ebp
xor ebx, ebx
jmp 0x40121b
movsd xmm3, qword [rip + 0x337]
lea rcx, [r13 + 8]
movsd qword [r13], xmm3
mov eax, 1
jmp 0x401166
mov eax, 5
jmp 0x401166
mov eax, 4
jmp 0x401166
mov eax, 3
jmp 0x401166
mov eax, 2
jmp 0x401166
mov qword [rsp + 0x18], 0
xor r15d, r15d
jmp 0x400f4a
mov eax, 4
jmp 0x400e16
mov eax, 3
jmp 0x400e16
mov eax, 2
jmp 0x400e16
movabs rax, 0xde0b6b3a7640000
lea rcx, [rbp + 8]
mov qword [rbp], rax
mov eax, 1
jmp 0x400e16
mov eax, 5
jmp 0x400e16
mov rsi, rbx
mov qword [rsp], 0
xor r14d, r14d
jmp 0x400ec1
call sym.std::__throw_bad_alloc
mov rbx, rax
jmp 0x4016f5
call sym.imp.__cxa_end_catch
mov rdi, qword [rsp]
call sym.operatordelete
mov rdi, rbp
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
call sym.std::__throw_bad_alloc
call sym.imp.__stack_chk_fail
mov r12, rax
jmp 0x401719
jmp 0x4017a5
cmp rbx, rbp
mov r13, rbx
je 0x401738
mov rdi, qword [r13]
test rdi, rdi
je 0x40172f
call sym.operatordelete
add r13, 0x18
cmp r13, rbp
jne 0x401721
test rbx, rbx
je 0x401745
mov rdi, rbx
call sym.operatordelete
test r15, r15
je 0x401752
mov rdi, r15
call sym.operatordelete
cmp qword [rsp + 0x18], 0
je 0x401764
mov rdi, qword [rsp + 0x18]
call sym.operatordelete
mov rbx, r12
mov rax, qword [rsp]
cmp r14, rax
mov rbp, rax
je 0x40178a
mov rdi, qword [rbp]
test rdi, rdi
je 0x401781
call sym.operatordelete
add rbp, 0x18
cmp r14, rbp
jne 0x401773
cmp qword [rsp], 0
je 0x40179a
mov rdi, qword [rsp]
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
mov rbp, rbx
mov rdi, rax
mov r12, rbx
call sym.imp.__cxa_begin_catch
cmp rbx, rbp
je 0x4017cc
mov rdi, qword [r12]
test rdi, rdi
je 0x4017c3
call sym.operatordelete
add r12, 0x18
cmp r12, rbp
jne 0x4017b5
call sym.imp.__cxa_rethrow
mov qword [rbx], 0
mov qword [rbx + 8], 0
mov qword [rbx + 0x10], 0
call sym.std::__throw_bad_alloc
mov r12, rax
jmp 0x4017f4
jmp 0x4017a2
call sym.imp.__cxa_end_catch
mov rdi, rbx
call sym.operatordelete
mov rdi, r13
call sym.operatordelete
jmp 0x401745
mov r12, rax
jmp 0x401801
call sym.std::__throw_bad_alloc
xor ebx, ebx
xor ebp, ebp
jmp 0x40120f
call sym.std::__throw_bad_alloc
mov r12, rax
jmp 0x401745
mov r12, rax
jmp 0x40175a
call sym.std::__throw_bad_alloc
xor r15d, r15d
jmp 0x400f4a
mov rbx, rax
jmp 0x401767
call sym.std::__throw_bad_alloc
jmp 0x401876
mov rax, qword [rsp]
mov qword [rax], 0
mov qword [rax + 8], 0
mov qword [rax + 0x10], 0
call sym.std::__throw_bad_alloc
mov r14, qword [rsp]
mov rdi, rax
call sym.imp.__cxa_begin_catch
mov rax, qword [rsp]
cmp rax, r14
mov rbx, rax
je 0x4018a0
mov rdi, qword [rbx]
test rdi, rdi
je 0x401897
call sym.operatordelete
add rbx, 0x18
cmp r14, rbx
jne 0x40188a
call sym.imp.__cxa_rethrow
jmp 0x401872
mov rbx, rax
jmp 0x4016e7
nop
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200526]
push rbp
lea rbp, [rip + 0x20052e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401906
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x4018f0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
and eax, 0x642564
and eax, 0x6630312e
and eax, 0x61430063
jae 0x4019aa
and byte [rbx], ah
and eax, 0x203a64
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsd dword fs:[rsi], dword ptr [rdi]
mov bl, 0xb6
loopne 0x401965
add byte [rax], al
cmpsd dword fs:[rsi], dword ptr [rdi]
mov bl, 0xb6
loopne 0x40196d
add al, cl
insd dword [edi], dx
shr dword [rbx + 0x4ec80043], 0x67
insd dword [rdi], dx
shr dword [rbx + 0x4ec80043], 0x67
insd dword [edi], dx
shr dword [rbx + 0x31b0143], 0x3b
add dword [rbx], ebx
add edi, dword [rbx]
add byte [rax], r8b
add byte [rdi], al
add byte [rax], al
add byte [rax - 0x6f000010], ch
add byte [rax], al
add al, bh
int1
push qword [rax]
add dword [rax], eax
add byte [rax - 0xe], bh
lcall [rax + 1]
add byte [rax], al
test al, 0xf2
jmp qword [rax]
add byte [rax], al
test al, 0xf3
fadd dword [rax]
add byte [rax], al
cmp bh, bh
push qword [rax + 1]
add byte [rax], al
test al, 0xff
mov eax, 1
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4019df
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401a0f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
adc al, dh
inc dword [rax + 1]
add byte [rax], al
add byte [rsi], cl
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x401a51
add edx, dword [rax]
or eax, dword [rax]
add ebx, dword [rbx]
or al, 7
or byte [rax + 0x54000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
enter -0xe, -1
or eax, dword [rax]
add byte [rsp + rcx*2], al
sbb eax, dword [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx - 0x7ff1bbf9], al
add dword [rbx], eax
rol byte [rsi], cl
or cl, byte [rsi]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
mov esp, 0xc0000000
jnp 0x401ab6
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rbx + 0x200e4e02], al
add ah, byte [rbp + 0xa]
adc byte [rcx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
in al, 0
add byte [rax], al
sbb cl, dh
jmp qword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rbp + 0xe], bl
or byte [rax], al
add byte [rax], r8b
add ah, bh
add byte [rax], al
add al, al
std
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x401b2a
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
add dword [rax], r8d
add al, ch
std
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rbx]
test byte [rcx], al
add dword [rdx + 0x28], edi
add byte [r8], al
rol byte [rdx], 1
add eax, 0xcb0013c2
add eax, dword [rip - 0x6effe95d]
add al, 5
mov ss, word [rsi]
add al, cl
add al, 0xe9
add al, byte [rsi + 0x9ac0016]
add eax, 0xf10015ee
or edx, dword [rdi + rbp*8 + 0x13]
add byte [rbx + 0x16b0050f], bl
add dword [rax + 0x13f40511], edx
add dword [rbp + 0x513], edi
loopne 0x401ba1
add eax, 0x13e50000
add eax, 0xfd0013c2
adc al, 5
add byte [rax], al
lodsb al, byte [rsi]
adc eax, 0x15cd05
enter 0x515, -0x2e
adc eax, 0x515f301
out dx, al
adc eax, 0x5168100
xchg byte [rsi], dl
add byte [rsi + 0x168e0516], dl
add byte [rbx + 0x16a30516], ch
add ch, cl
add eax, 0x80011785
add eax, 0x1001787
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0x40
add byte [rax], al
add byte [rax], al
add al, dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
ror byte [rax + rax*2], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rcx
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rcx + rbx], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sbb eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], ah
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 1, 0
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rax + 7], bl
add byte [rax], al
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or r8b, byte [rax]
add byte [rax], al
add byte [rax], al
push rsi
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
jbe 0x402044
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400a], al
add byte [rax], al
add byte [rsi + 0x400a], dl
add byte [rax], al
add byte [rsi + 0x400a], ah
add byte [rax], al
add byte [rsi + 0x400a], dh
add byte [rax], al
add dh, al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
out 0xa, al
add byte [rax], al
add byte [rax], al
add dh, dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword es:[rax]
add byte [rax], al
add byte [rax], al
or eax, dword ss:[rax]
add byte [rax], al
add byte [rax], al
or r8d, dword [rax]
add byte [rax], al
add byte [rax], al
push rsi
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402138
je 0x402141
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x40214f
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x40214c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax], ah
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax + 7], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax], cl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, byte [rax]
cmp byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, 0
and byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400b6000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0xb], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rcx + rbx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax], dh
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc dword [rax], eax
js 0x4022b3
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add al, al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
sbb r8, qword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
call 0x408302
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
mov al, 0x20
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0xc], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400c], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rbx], bl
add al, bl
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add al, dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
call 0x40849a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x2000000], ch
add byte [rsi], cl
add al, dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte es:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x1000000], bh
add byte [rbx], bl
add cl, bl
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, cl
add byte [rax], al
add byte [rcx], al
add byte [rdx], dl
add byte [rax + 0x1b], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bl
add byte [rax], al
add byte [rcx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
add byte [rax], al
add byte [rax], al
add byte [rcx], dl
add byte [rax + 0x19], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bh
add byte [rax], al
add byte [rcx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rcx], eax
add byte [rax], al
add byte [rax], al
adc al, 0
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, byte [rcx]
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x4085a2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dh
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], ah
add byte [rdx], bl
add byte [rax + 0x6020], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bh
add dword [rax], eax
add byte [rcx], dl
add byte [rbx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
sbb byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rsp
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], ch
add byte [rax], al
adc al, byte [rax]
add byte [rax], ah
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], bh
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg dword [rcx], eax
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
wait
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x12000001], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 1], dh
add byte [rax], al
adc al, byte [rax]
verr word [rcx + rbx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, ah
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], ah
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 2], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
movabs al, byte [0x400a]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 2], ah
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rcx], dl
add byte [rax], dl
add byte [rax], dh
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, ecx
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x200000], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov esi, 0x10000002
add byte [rdx], bl
add byte [rax + 0x6020], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, cl
add al, byte [rax]
add byte [rcx], dl
add bl, byte [rdx]
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xlatb
add al, byte [rax]
add byte [rcx], dl
add bl, byte [rdx]
add byte [rax + 0x6020], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ah
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x4018], dh
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
hlt
add al, byte [rax]
add byte [rax], dl
add byte [rbx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 3
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, 3
add byte [rax], al
and al, byte [rax]
add byte [rax], ah
or eax, 0x40
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rip + 0x10000001], bl
add byte [rbx], bl
add al, ah
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add r8d, dword [r8]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 3], ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rbx], eax
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsd dword [rsi], dword ptr [rdi]
add eax, dword [rax]
add byte [rax], dl
add byte [rdx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], dl
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
iretd
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, ah
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, bh
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000000], bh
add byte [rsi], cl
add byte [rax + 0xb], dh
add byte [rax], al
add byte [rax], al
add byte [rbx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, al
add al, byte [rax]
add byte [rdx], dl
add byte [rbx], cl
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, 0x12000004
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x4029ca
jne 0x4029be
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x40297e
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4029fc
jb 0x402a02
pop rdi
jne 0x402a0b
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402a05
je 0x402a01
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402a21
jb 0x402a27
pop rdi
jne 0x402a30
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402a33
jns 0x402a23
outsb dx, byte gs:[rsi]
je 0x402a3a
jns 0x4029ca
jb 0x402a2e
insd dword [rdi], dx
pop rdi
jne 0x402a40
insd dword [rdi], dx
jns 0x4029d6
pop rdi
pop rdi
jb 0x402a3c
insd dword [rdi], dx
pop rdi
jne 0x402a4e
insd dword [rdi], dx
jns 0x402a43
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402a4e
jns 0x402a4e
outsb dx, byte gs:[rsi]
je 0x402a65
jns 0x4029f5
movsxd rbp, dword [rsi]
movsxd rsi, dword [rax + 0x70]
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x402a7b
pop rdi
pop r15
insd dword [rdi], dx
imul ebp, dword [rsi], 0x74535a5f
cmp byte [rdi + 0x5f], r11b
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdi
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402acd
jns 0x402acd
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402ade
jns 0x402ade
jae 0x402af5
jb 0x402af8
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
push rbx
je 0x402ac6
movsxd rbp, dword [rcx + 0x6e]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
insd dword [rdi], dx
insd dword [rdi], dx
jae 0x402b0e
je 0x402aeb
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x6c5f5f00
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x402b45
jb 0x402b48
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x402b3a
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x402b5b
jae 0x402aeb
pop rdi
pop rdx
insb byte [rdi], dx
push rax
jbe 0x402b32
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
jo 0x402b75
imul ebp, dword [rsi + 0x74], 0x68635f66
imul eax, dword [rax + 0x40], 0x47
pop r15
xor ch, byte [rsi]
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x61]
pop rdi
jb 0x402b86
je 0x402b8b
jb 0x402b94
ja 0x402b67
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
push rbx
je 0x402b71
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x402bd8
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x402bdd
pop rdi
je 0x402be5
js 0x402beb
je 0x402bc4
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x402bcf
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x402c24
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x402c4c
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x402c60
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x402c75
pop rdi
jae 0x402c8b
jb 0x402c8e
add byte [rdi + 0x5f], bl
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
jae 0x402c9b
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5f5f0074
jae 0x402cbc
pop rdi
jae 0x402cc0
jb 0x402cc3
add byte [rdi + 0x5f], bl
jae 0x402cc8
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
imul esi, dword [rdx + 0x73], 0x40695245
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jbe 0x402cf2
jb 0x402cc4
jae 0x402d00
insb byte [rdi], dx
jbe 0x402cf9
jbe 0x402c97
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x61]
pop rdi
outsb dx, byte gs:[rsi]
pop rdi
movsxd rsp, dword [rcx + 0x74]
movsxd rbp, dword [rax + 0x40]
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
push rbx
je 0x402ce9
pop rdi
pop rdi
je 0x402d25
jb 0x402d2e
ja 0x402d20
pop rdi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsi, dword [rsi + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x61]
pop rdi
imul ebp, dword gs:[esi + 0x5f], 0x63746163
push 0x58434040
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
je 0x402d5e
add byte [rdi + 0x5f], bl
js 0x402d7b
pop rdi
jo 0x402d6b
jb 0x402d7b
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
outsb dx, byte [rsi]
ja 0x402d91
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x402da0
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x402db3
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
insd dword [rdi], dx
insd dword [rdi], dx
movsxd rsi, dword [rax + 0x79]
pop r15
xor ch, byte [rsi]
xor dword [rax + rax], esi
pop rdi
pop rdx
push rbx
imul esi, dword [rcx], 0x5f4d5f30
js 0x402dde
jb 0x402dcd
movsxd rsi, dword [rcx + rcx*2 + 0x78]
push r10
push rbx
imul edx, dword [rdx + 0x54], 0x4740405f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
add byte [rsi], ch
jae 0x402e05
insd dword [rdi], dx
je 0x402df0
add byte [rsi], ch
jae 0x402e08
jb 0x402e0a
add byte [rsi], ch
jae 0x402e04
jae 0x402e12
jb 0x402e14
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402e15
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402e23
outsb dx, byte cs:[esi]
jne 0x402df1
jne 0x402e2f
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x402dff
push 0x687361
jns 0x402e48
jae 0x402e55
insd dword [rdi], dx
add byte [rsi], ch
jns 0x402e50
jae 0x402e58
jb 0x402de6
outsb dx, byte cs:[esi]
jne 0x402e19
jbe 0x402e52
jb 0x402e62
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x402e26
jbe 0x402e5f
jb 0x402e6f
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x402e6a
insb byte [rdi], dx
jns 0x402e79
add byte [rsi], ch
jb 0x402e74
insb byte [rdi], dx
jo 0x402e80
je 0x402e16
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x402e4f
outsd dx, dword [esi]
je 0x402e25
je 0x402e8d
js 0x402e9e
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x402ea3
je 0x402e99
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x402ebc
jo 0x402ed0
pop rdi
je 0x402ec0
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402ece
jns 0x402e6f
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x402eea
jns 0x402e7b
push 0x63
jb 0x402e80
jns 0x402ef2
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x402efc
je 0x402e92
je 0x402ef8
add byte [rsi], ch
jae 0x402f0f
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x402ea6
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 0x4002, 0
add byte [rax], al
add byte [rax], al
enter 2, 0
add byte [rax], al
add byte [rax], al
pop rax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rip + 0x40], al
add byte [rax], al
and byte [rip], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 7], bl
add byte [rax], al
add byte [rax], al
add byte [rax + 7], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
or byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 1, 0
add byte [rax], al
add byte [rax], al
add eax, 0x19000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
and byte [rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xb], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 0xb], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xb], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0xb], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dl, 0xd
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x600000001000000], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rbx], ah
add byte [rax], al
add byte [rax], al
add byte [rcx + rbx], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
xor byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x19], bh
add byte [rax], al
add byte [rax], al
add byte [rax + 0x19], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
rcr byte [rcx], 0
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rbx + 0x40], cl
add byte [rax], al
add byte [rax], al
add byte [rbx + rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
call 0x4033e2
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], dh
add byte [rax], al
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
shl byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov byte [rip], ch
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x29], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
