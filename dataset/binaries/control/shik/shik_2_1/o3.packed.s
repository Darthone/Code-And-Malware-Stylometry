call 0x4010b0
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x400ec8
add ebx, ebx
je 0x400e7e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x400eb6
cmp rbp, -4
ja 0x400eb6
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x400e9e
add ecx, 4
mov dl, byte [rax]
je 0x400ec6
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x400eb6
ret
cld
pop r11
cmp r8b, 2
je 0x400ede
jmp 0x400f5b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x400eee
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x400ed6
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x400f06
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x400ef3
sub eax, 3
jb 0x400f24
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x400f5b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x400f4b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x400f49
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x400f38
cmp rbp, -0xd00
adc ecx, eax
call 0x400e8a
jmp 0x400ede
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401034
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x400fd2
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40101e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x400ff1
push 0x3a707474
jne 0x40104a
js 0x40100a
jae 0x401044
outsb dx, byte cs:[rsi]
je 0x401003
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x401071
jb 0x401063
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x40108e
jb 0x4010a1
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x211ae4
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x211ae4
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x400f6c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x401097
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401045
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f113f
jb 0x401157
movsxd rbp, dword [rdi]
jae 0x401151
insb byte [rdi], dx
js 0x401157
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401137
cmp rsi, rcx
jae 0x40113f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x40111e
cmp al, 0x8f
ja 0x40111e
cmp byte [rsi - 2], 0xf
je 0x401124
sub al, 0xe8
jg 0x401121
push rdi
cmp al, 1
ja 0x40110c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40110f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x40113c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401193
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1611
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x4011d7
mov al, 0xa
jmp 0x4011d7
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4011b3
inc ebx
mov al, 0
jmp 0x4011db
mov al, 2
jmp 0x4011db
mov al, 3
jmp 0x4011db
mov al, 0x3c
jmp 0x4011db
push rcx
rcr ah, 1
fstp st(7)
jle 0x40121c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40122e
jg 0x401220
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a69a3
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x40127a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb63f7
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x401282
cmp esi, 0x21585055
jne 0x401286
jge 0x401278
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x40127b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x40127f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40132b
pop rcx
or al, 0x3b
jb 0x401331
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4012a3
jmp 0x4012a5
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x36611e6
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5342e
in eax, dx
jg 0x4012dd
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401323
mov bh, 0x2a
add edi, 0x10
jmp 0x401320
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40135d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401399
jne 0x4013b0
fstpnce st(6), st(0)
jle 0x401379
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4013af
jrcxz 0x4013e3
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b347
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401462
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401422
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x582959f7
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x401495
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40142f
and ecx, 7
or al, 0xeb
jae 0x40149a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x4014cf
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40150d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x4014c6
push rax
call 0xffffffff868d11b3
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x4014d0
std
cmp edi, esi
xchg eax, edi
jle 0x401525
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95ab1
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401523
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401511
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40153a
js 0x40157a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40160c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2847
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40162d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401632
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc210e4
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4015c0
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
mov esp, 0xe000005
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax - 0x60], al
movabs byte [0x90], al
and byte [rcx], al
fcom dword [rdi]
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4016e6
je 0x4016ef
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x4016b8
mov dh, 0x7d
jbe 0x4016b7
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x4016f0
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x4a00006], bl
add byte [rdx], ch
nop
nop
invd
add byte [rax + 9], bl
add al, ch
cld
add bl, bl
or al, byte es:[rdi + rax]
or eax, dword [rax]
push 0x7c813208
or byte [rax + rax], 0x90
or eax, 0xd8072b02
or dword [rdi + 0x7c81170e], edi
cmp byte [rdi + rcx], 0xa4
adc edx, dword [rax]
add byte [rax + 0x3e403e40], dh
adc dword [rax], eax
adc al, 0x12
add al, dh
or byte [rdi + 0x181c0013], bl
adc al, 0x1d
lahf
rcl byte [rdi], 0x15
add al, bh
add byte [rax], al
and byte [r15], r11b
and byte [rdi], dl
add byte [rax], cl
sbb byte [rax], al
clc
enter -0x6ff1, 0x1f
sbb dword [rax], eax
add byte [rax], ah
sbb dl, byte [rbx]
enter -0x37ed, 0
nop
sbb eax, dword [rax]
movabs al, byte [0x170113653779231c]
add al, 0
int1
call rbx
jo 0x4017aa
mov cl, 0xc
sbb edi, dword [rdi - 0x36fd68e7]
and byte [rbx], dl
jbe 0x4016e1
or eax, dword [rax + 0x17]
sbb edx, eax
mov ebx, 0x2e0c8390
adc byte [rsp + rax*2], cl
pop rdi
and al, byte [rbx + 0x1a7165d]
push rbx
mov ebx, 0x477a4f12
xor byte [rcx + 0x57], ah
xchg byte fs:[rdi - 0x4d89285b], dl
jrcxz 0x401787
lodsb al, byte [rsi]
sbb byte [rcx - 0x7898dfa1], dl
or al, 0xcd
or esp, dword [rdi + 0x3c984a26]
enter -0x271c, -0x5b
sbb dword [rbx], r11d
pop rdi
adc bh, byte [rdi]
add dword [rsi + 0x1840bb0], eax
add byte [r15 + 0xd], r8b
and esi, dword [rsi + 0x65]
push 0xf4720b7
cmpsb byte [rsi], byte ptr [rdi]
test byte [rcx + 0x142f362b], dh
and r14d, dword [r14]
and eax, 0x5a1f17cc
xchg dword [r14], r8d
xor ah, bl
sub esi, dword [rbx]
add ebx, dword [rdx + 0x57]
sub al, 0x9c
cmp al, 0xdb
lea eax, [rdi]
shl byte [rdi + rax*2], 0x70
add esp, dword [rbx - 0x59]
ja 0x40183c
int 0xed
add byte [rdi + 0x17], dh
mov edi, 0x93b07279
adc eax, dword [rdx]
add esp, dword [rax + 0xb]
mov dl, 0x6b
cmp ebp, dword [rdx]
xchg dword [rdx], esp
push rax
adc bl, byte [rbp - 0x2189f37d]
mov r15d, 0x90060ce0
out 0xec, al
leave
ja 0x4017cb
and bh, dl
insb byte [rdi], dx
or byte [rbx], bl
ret 0xeb17
cmpsd dword [rsi], dword ptr [rdi]
lcall [rdi + 0x20]
iretd
sahf
sbb al, 0x10
adc byte [rcx], bh
add ch, byte [rdi]
or dword [rdx], eax
cmp dword [rbp + rbx*2 + 0x1811724], eax
xchg eax, edi
test byte [rip + 0x2f3e5761], cl
movsxd rdx, dword [rdi]
fst dword [rbx - 0x787dcc71]
fadd dword [rcx]
cmp byte [r9], dil
enter -0x7f74, 0xc
seta byte [rsi - 0xa]
in al, 0xc9
xchg eax, edx
add al, byte [rax + 0x28]
and byte [rdx + 0x30], bh
xchg eax, esp
pop rdi
and al, 0x30
fcom dword [rax]
scasb al, byte [rdi]
adc byte [rdi - 0x40], dl
mov ebx, 0x2d33840
out dx, eax
pop rdi
cwde
pushfq
cmp dword [rsi - 0x17054a9], edx
or ebp, esp
test eax, esp
test al, 0xdf
add al, 3
ja 0x40188d
sbb eax, 0x317d817
pop rdi
xor dword [rdi + 0x10], ebp
js 0x401899
add eax, dword ds:[rax + 0x21]
add ebx, dword [rsp + r13*2]
jo 0x4018d1
shl byte [rax], 0x90
sahf
outsb dx, byte [rsi]
add byte [rsi - 0x40], cl
nop
sbb dword [rbx + rdx + 0x5f], ebp
movabs byte [0x102f579b07272061], al
or eax, 0x81297b37
iretd
add bl, byte fs:[rdx]
push rdi
lodsb al, byte [rsi]
rol dword [rsi + 0x5f7d98e4], -0x30
or eax, 0x37c24c21
jg 0x4018de
xchg eax, ebx
mov al, 0x93
xor dword [rdi + 0x30], 0x13
movabs dword [0x32e737b821844095], eax
or byte [rbx - 0x28], al
loopne 0x401910
nop
enter 0x4360, -0x18
out dx, eax
push rax
fstp xword [rdi + 0xe4e4876]
mov es, word [rsp + rdx*8]
add dword [rdi + 0x3c], esi
jrcxz 0x401874
jl 0x4018d2
movsd dword [rdi], dword ptr [rsi]
add ecx, dword [rdi]
mov al, 0xc
xor bl, al
test eax, edi
ja 0x4018a0
xor ecx, dword [rsi - 0x37]
not byte [rax - 0x41]
sbb al, byte [rdi]
add al, 0x9f
jbe 0x40188d
sbb eax, 0x4286092
xlatb
cmp edx, dword [rdi]
in al, dx
add ch, bl
adc byte [rbx + 4], dl
mov r13, qword [r15]
xchg eax, ecx
mov bl, 0x97
push r15
xchg byte [rcx], al
cmpsd dword [rsi], dword ptr [rdi]
popfq
xchg eax, edx
mov bl, 0x57
mov bh, 0xdc
add byte [rdi + 0x46ffff60], bh
movsxd rsi, dword [rdx + 0x74]
jae 0x40194c
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
mov edi, 0x968dfb5
sub byte [rbp + 0x72], ah
imul ebx, dword gs:[edx], 0x6d745f06
pop rdi
movsxd rdi, dword [rdi + 0x6cfbbdbd]
outsd dx, dword [rsi]
outsb dx, byte [rsi]
jae 0x401984
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x4019d0
jg 0x40196f
in eax, dx
jne 0x4019f0
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x4019e9
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x37243538
cli
fistp dword [rdi + 0x5f]
imul bp, word [rsi + 0x69], 0x7208
jb 0x4019f4
jns 0x4019f4
test dword gs:[rdx + 0x79], esi
rcr ah, 0xb7
fild dword [rax]
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x4019da
or eax, 0x6eb09dbb
pop rdi
sub dword [rdx + rbp + 0x70], esi
movsxd rbx, dword [rbp - 0xda8f90]
mov edi, 0x5a5a7ffd
xor eax, 0x766c6f73
jbe 0x401a0a
xor dword [rcx], edi
xor dl, byte [rax + 0x52]
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
outsb dx, byte [rsi]
mov ah, 0xfd
fisttp qword [rdi + 0x4e]
mov bl, 0x5f
or qword [rbx - 0x16], r14
pop rdi
fsubp st(5)
fstp st(7)
pop rdx
xor bl, byte [rdi + 0x52]
push rdx
imul esi, dword [rdi], 0x384c7453
imul ebp, dword [rdi + 0x59], 0xeffbdec9
insb byte [rdi], dx
push rdx
pop r15
xor r14d, esp
or esp, dword [rdi]
jnp 0x4019c0
in eax, 0x47
push rbp
and byte [rax + 0x44], cl
push rdx
push rdx
fdivr st(3)
fild dword [rsi + 0x53]
outsb dx, byte [rsi]
pop rdi
push rsp
sub byte [r11 - 0x7a94469c], r12b
test dword [rax], edx
xor al, 7
pop cx
jg 0x4019f4
jo 0x401ab6
add r15b, dl
insd dword [rdi], dx
jae 0x401a5f
pop r15
xor ch, byte [rsi]
ror byte [rdx], 1
jg 0x401ab7
add dword [rbx], esp
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0xd86fa856
mov dh, 0xef
sbb byte [rdx - 0x26c95cb2], ah
movsxd rbp, dword [rdi]
push rbx
ret 0xf686
insd dword [rdi], dx
add eax, dword [rbp - 0x1d]
pop r12
pop rdx
movsxd rbx, dword [rcx]
sti
out dx, al
pand mm4, qword [rdx + 4]
imul eax, dword [rdi + 0x49], 0x49
push rdx
sbb rax, qword [r13 + 0x76]
jo 0x401ad5
mov gs, word [rbx]
in al, dx
mov dh, 0x6f
add dl, ah
push rdi
adc dword [rax + 0x50], edi
insd dword [edi], dx
movabs byte [0x764ac937ed08367a], al
cli
mov edi, 0xc1f54043
loope 0x401b18
jae 0x401a63
pop rdx
insb byte [rdi], dx
push rax
jbe 0x401a34
pop rax
pop rax
pop rdi
xor ebx, dword [rsi - 0x2d47df5]
adc edx, dword [rcx + 0x40]
and eax, 0xef647b76
cmp al, 0x66
imul ebp, dword [rsp + rbp*4 + 0x70], 0x6674a472
scasb al, byte [rdi]
test dword [rsi - 0x4a], ebp
in al, dx
push -0x49c1e695
cmp byte [rdi - 0x38], dl
outsb dx, byte [rsi]
mov eax, 0x3c9f73b9
xor al, 0x49
add eax, dword [rbx + 0x31]
movsxd r9, dword [r8 - 0x4a]
mov bl, 0xd9
jmp 0x401a83
insd dword [rdi], dx
pop rbp
outsb dx, byte [rsi]
cmp byte [rbp + rbp*4 + 0x5a], ch
xchg eax, edi
jb 0x401b58
add al, 0xc2
lodsd eax, dword [rsi]
std
jo 0x401aa9
movsxd r15, dword [rax + 0x61]
mov edx, 0xaf366978
in al, 0xca
outsd dx, dword [rsi]
push r12
xor cl, byte [rdx]
mov esi, 0x54bc430c
test esi, esp
mov edx, 0xa36261c6
sbb ecx, dword [rdi - 0x78]
imul ebp, dword [rcx], 0x64
mov edi, 0x3f75b5dd
imul ebx, dword [rdx + 0x31], 0x6373fa57
outsb dx, byte [rsi]
push 0x5b5b
pop r10
cdq
mov al, 0x2d
or bl, ah
jae 0x401af8
and dword [rcx + 0x76d9877d], 0x35ca8e0b
cmp eax, 0x8770c977
insd dword [rdi], dx
js 0x401b6c
js 0x401af2
mov dh, 0x75
fild dword [rbp + 0x685f7064]
jo 0x401bc7
jno 0x401be0
je 0x401bad
cmp al, 0x52
sbb byte [rbp - 0x71abe481], al
lodsb al, byte [rsi]
push rax
js 0x401bb3
fisub dword [rdx - 0x438f9ddc]
adc al, 0xae
imul eax, dword [rdi], 0x90d8371e
sahf
mov ebp, 0x90639d34
mov bl, 0xdf
mov bh, 0x4c
jo 0x401c06
je 0x401c09
push rdx
jbe 0x401bae
push rax
or ch, ch
int1
test al, 0xe6
jmp 0x401b3f
shr byte [rsi - 0x4c], 1
shr byte [rsi - 0x4a], cl
je 0x401b6f
jbe 0x401bdd
mov ebx, 0x51c352c2
out dx, eax
xor r11d, r13d
outsb dx, byte [rsi]
ja 0x401b82
xchg byte [rbp + rbp*2 + 0x53125567], al
test cl, dl
std
test eax, 0x43439e6d
xor bl, cl
push rbx
pop qword [rsp + rcx - 0x4f97e5b6]
xchg eax, ebx
fnsave dword [rsi + 0x73]
jns 0x401c4c
nop
je 0x401c56
push 0x36dcb709
mov dword [rbx + 0x6e0770a0], 0xc7982e6f
clc
pop rbx
sub eax, 0x670d6715
outsb dx, byte [rsi]
jne 0x401c2c
sub eax, 0xc42b5b69
or dl, ch
or eax, 0x64093862
out dx, al
lodsb al, byte [rsi]
int 0xdc
jns 0x401c7f
sbb dword [r14 - 0x1b], r14d
sbb eax, 0x69b584dc
out 0xc, al
pop rdi
sbb esi, dword [rax - 0x13e921e7]
sub byte [rcx], cl
stosd dword [rdi], eax
je 0x401c9c
adc byte [rbx + 0xaedb873], 0x2c
outsd dx, dword [rsi]
or byte [rdx - 0x14f84efb], dl
adc dword [rdx + 0x2e396f24], edi
push -0x299b9744
or bl, ch
mov dl, 0x72
or eax, 0x2ec3635d
out dx, al
xchg eax, esi
in eax, 0xba
jo 0x401c48
mov ebp, 0xb122116c
add al, byte [rdi + 0x6a0b43cd]
and dword [rcx + 0x6c2bd9b3], 0x36
imul edx, dword [rax + 0x5b5e7b68], 0xe60cd033
add al, 0x61
push rdx
std
add byte [rbx + 0x6556af], al
fild word [rcx]
xlatb
outsd dx, dword [esi]
adc ch, byte [rdi + rcx*8]
sbb al, 0x34
xor spl, byte [r9 + r8]
and eax, dword [rdi]
or al, 0x32
enter 0x5480, 0x54
and byte [rax + 0x490c90c], dl
xor dword [rsp + rcx + 0x7474c832], edx
and al, 0x41
jns 0x401cdb
jg 0x401c9d
ljmp [rdi - 0x68]
sbb dword [rax + rdx*4 - 0x68], esp
sub byte [rip + 0x66901b08], al
or r8, rax
leave
fld dword [rcx + 6]
shl al, 1
sti
movsb byte [rdi], byte ptr [rsi]
sbb dword [rdx + rsi*4 + 0x3f], esp
sbb byte [rsi + 3], dl
mov esp, 0x797b059
mov ch, byte [rcx + rbp*8]
xchg eax, edx
add dword [rsi - 0x41], ebx
lcall [rbp + 0x60]
outsd dx, dword [rsi]
mov edi, 0x3202bf07
and ch, bl
nop
imul edi, dword [rdi], -2
pop rax
leave
and byte [rdi + 0x6e], ah
cmpsd dword [rsi], dword ptr [rdi]
nop
cwde
mov dl, 0xff
jp 0x401d4f
test byte [rbp + 0x7e8c9b9], al
out 0x3f, eax
sbb dword [rbp - 0x27], -1
test byte [rdi], bh
call 0x4b7cbb5d
add byte [rdi], al
push 0x6106401
nop
sbb dword [rsi - 0xf63f9ed], ecx
adc word [rdi + 0x261aff07], sp
xchg eax, esp
mov dword [rdi], edi
nop
jbe 0x401cb2
loopne 0x401d3a
jo 0x401d45
xchg eax, esp
or al, 0x72
or dword [rcx], ecx
sbb dword [rdx - 0x62f0a4dd], esi
movabs al, byte [0xa027f073733c816]
or dword [rax], edx
xchg eax, edx
ret
movabs dword [0x9ff07b99c943467], eax
test eax, 0x90ab3784
mov edi, 0x8ff07cf
fld dword [rcx - 0x4a]
jg 0x401d1d
fsub qword [rdi + rdx*4]
jg 0x401d21
jo 0x401d0a
and dword [rbx], ebx
mov edi, 0x9007f03f
pop rbp
and al, 0x4f
sub al, 3
leave
cmp ebx, ecx
int 0x88
lahf
jg 0x401d9e
outsb dx, byte [rsi]
sub bl, bl
add ebx, dword [rax + 0x6f]
sysret
or byte [rdx], dh
and ch, cl
nop
out 0xf, eax
clc
add eax, 0xff076e08
xchg eax, ebx
adc bl, cl
fldcw word [rcx + rcx*2 + 0x17]
clc
wait
mov al, 0x25
mov ecx, 0x7ff07f07
fild dword [rdx + 6]
cdq
adc byte [rax + 0x16921fbf], bl
leave
and byte [rdi], bl
jbe 0x401e2c
test dword [rcx + rax - 0x41], ebp
mov bh, 0x20
or al, 0xc9
push rax
jb 0x401d70
or dl, byte [rax - 0x647dfe89]
jg 0x401df9
and byte [rbx - 0x5ff7b7f4], al
movabs al, byte [0x20018540f2132436]
adc eax, 0x90b0e37f
or eax, 0x343f1730
insb byte [rdi], dx
jbe 0x401e5f
or byte [rdi], al
adc dword [rbx], edi
push rax
jb 0x401e11
cmpsd dword [rsi], dword ptr [rdi]
pop rax
mov edi, 0xd95eb31e
mov ebx, 0xff20d800
or eax, 0xf0c9cd20
or dword [rdi], ebx
xor ecx, dword [rcx]
xchg eax, ecx
cmp al, 0x39
test byte [rdi - 0x38], bh
sub dl, byte [rax + 4]
add byte [rax + 0xff0000], dl
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip + 0x4c080216], ecx
movsxd rax, edi
fistp qword ss:[rcx + 0x17d8ee17]
add byte [rax], al
add byte [rax], al
js 0x401e96
add byte [rax], al
add byte [r8], al
push rsi
hlt
add byte [rax], al
add bh, bh
