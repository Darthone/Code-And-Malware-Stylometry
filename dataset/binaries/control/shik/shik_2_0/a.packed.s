call 0x401620
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401438
add ebx, ebx
je 0x4013ee
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x401426
cmp rbp, -4
ja 0x401426
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x40140e
add ecx, 4
mov dl, byte [rax]
je 0x401436
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x401426
ret
cld
pop r11
cmp r8b, 2
je 0x40144e
jmp 0x4014cb
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40145e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401446
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401476
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401463
sub eax, 3
jb 0x401494
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x4014cb
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x4014bb
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x4014b9
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x4014a8
cmp rbp, -0xd00
adc ecx, eax
call 0x4013fa
jmp 0x40144e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x4015a4
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401542
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40158e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401561
push 0x3a707474
jne 0x4015ba
js 0x40157a
jae 0x4015b4
outsb dx, byte cs:[rsi]
je 0x401573
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4015e1
jb 0x4015d3
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4015fe
jb 0x401611
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x213070
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x213070
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x4014dc
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x401607
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4015b5
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f16af
jb 0x4016c7
movsxd rbp, dword [rdi]
jae 0x4016c1
insb byte [rdi], dx
js 0x4016c7
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x4016a7
cmp rsi, rcx
jae 0x4016af
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x40168e
cmp al, 0x8f
ja 0x40168e
cmp byte [rsi - 2], 0xf
je 0x401694
sub al, 0xe8
jg 0x401691
push rdi
cmp al, 1
ja 0x40167c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40167f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x4016ac
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401703
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1b81
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401747
mov al, 0xa
jmp 0x401747
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401723
inc ebx
mov al, 0
jmp 0x40174b
mov al, 2
jmp 0x40174b
mov al, 3
jmp 0x40174b
mov al, 0x3c
jmp 0x40174b
push rcx
rcr ah, 1
fstp st(7)
jle 0x40178c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40179e
jg 0x401790
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6f13
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4017ea
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6967
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4017f2
cmp esi, 0x21585055
jne 0x4017f6
jge 0x4017e8
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4017eb
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4017ef
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40189b
pop rcx
or al, 0x3b
jb 0x4018a1
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401813
jmp 0x401815
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661756
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5399e
in eax, dx
jg 0x40184d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401893
mov bh, 0x2a
add edi, 0x10
jmp 0x401890
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4018cd
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401909
jne 0x401920
fstpnce st(6), st(0)
jle 0x4018e9
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x40191f
jrcxz 0x401953
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b8b7
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4019d2
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401992
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295f67
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x401a05
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40199f
and ecx, 7
or al, 0xeb
jae 0x401a0a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x401a3f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x401a7d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401a36
push rax
call 0xffffffff868d1723
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401a40
std
cmp edi, esi
xchg eax, edi
jle 0x401a95
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c96021
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401a93
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401a81
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x401aaa
js 0x401aea
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x401b7c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2db7
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x401b9d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401ba2
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21654
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401b30
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
push rax
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
sub byte [rax + 0x100], dl
add byte [rax], al
add byte [rax], al
and bh, bh
sal byte [rip + 0x10350000], 1
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401c56
je 0x401c5f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401c28
mov dh, 0x7d
jbe 0x401c27
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401c60
sahf
sahf
add al, 0
cwde
add eax, 0x3f2c000
insb byte [rdi], dx
wait
add al, 5
add dh, dl
stc
add cl, bh
add dword [rax], ecx
add byte [rax], cl
or dword [rax], eax
mov byte [rdx + rax + 0x79], bh
add cl, byte [rdx]
add byte [rax + 0x968000b], ah
cmp dword ds:[rax + rax*4 + 0xc], 0xd9000
ror byte [rdx], 1
lahf
add al, ah
verr word [rdi + rbx]
and byte [r15], r11b
and byte [rax], dl
add byte [rax], dh
adc dword [rax], eax
add byte [rcx], 0xc2
seto byte [rax]
adc al, byte [rax]
clc
and dl, byte [rdi - 0x349fe038]
adc ebp, dword [rip - 0x17ffebb9]
sub eax, 0x2b027c60
add edx, dword [rip + 0x1617]
cmp dword ss:[rax + rax*4 + 0x17], 0x47180800
sub byte [rip + 0x192fc807], 0x30
cmp dword [rcx + rax*4], 0xb0001a7c
sbb eax, dword [rax]
rcl byte [rdx + 0x1c365377], 0x13
add dword [rdi], edx
add al, 0
int1
dec dword [rip + 0xc3b1657]
sbb edi, dword [rdi + 0xc029719]
xor ah, byte [rcx + 0x37]
adc byte [rbx], cl
sbb edx, dword [rax + 0x43]
xor cl, al
nop
nop
mov al, 0xcb
pop rdi
cmpsd dword [rsi], dword ptr [rdi]
add dword [rdi], edx
push rbx
leave
push rdi
jp 0x401d24
mov al, 0xec
mov byte [rsi + r8*4], cl
xchg eax, edi
movsd dword [rdi], dword ptr [rsi]
xlatb
wait
je 0x401c85
and dword [rdi - 0x6de688c8], ebp
shl dword [rsi], -0x39
cmp esp, ebx
insb byte [rdi], dx
cmp ch, cl
mov edi, 0x661b60e
sbb dword [rdx + rax*8 + 0x47], esp
clc
cmp al, 4
or eax, 0x1f41c9c9
add dword [rax + 0x31], eax
or al, 0x32
and al, 0x83
xchg spl, spl
in al, dx
nop
push rsi
add dword [rdi + 0x44], ebx
jne 0x401d28
sbb edx, dword [rdx - 0x6ab7e83f]
and qword [rcx], r11
mov dil, 0x50
xchg byte [r8 + rdx*4 - 0x28], spl
push rsp
std
nop
pushfq
sbb al, 0x92
pop rax
sbb al, 2
pop rsp
xchg r12b, spl
in al, 0x3e
add ah, byte [rax + 0x5b]
sbb dword [rdx - 0x6f97869c], edx
and dword [rcx], ebx
cwde
insb byte [rdi], dx
rcl byte [rdx + 0x70648641], 0xe8
je 0x401d41
nop
pushfq
sbb al, 0x10
add edi, dword [rax + 0x38]
add edx, dword [rdx + 0x7ce48641]
and byte [rax + rcx*2 + 6], 0x19
add dword [rsp + rbp*4 + 0x19219064], -0x78
xlatb
cmp dword [rdi], esp
xchg dword [rdx], eax
add al, 0x90
sub eax, dword [rsp]
nop
and dword [rcx], edi
xchg eax, esp
push rax
cwde
sbb dword [rdx - 0x638679bf], edx
movsd dword [rdi], dword ptr [rsi]
sbb dword [rax + rcx*2 + 6], esp
movabs al, byte [0xa8f321906487a4cd]
sbb al, byte [rip + 0x27243939]
lodsb al, byte [rsi]
add eax, 0x906486b0
and dword [rax - 0x4c], ebp
mov es, word [rsi]
sbb dword [rdx - 0x434b47bf], edx
and dword [rcx], ebx
ffree st(0)
leave
leave
add eax, dword [rsi]
sub dword [rsi], eax
enter 0x1921, 0x64
push rbx
int3
xchg byte [r8 + rdx*4 + 0x7e], spl
shl byte [rsi + rax - 0x276f9be7], 1
or dl, cl
hlt
and dword [rcx], ebx
sar al, 1
xor dword [rbp + 0x72], 0xffffffb0
fcom dword [rdi]
push -0x638f2e0
jbe 0x401db6
fst dword [rbx - 0x40ed74fa]
or dword [r10 + r14*2], ecx
leave
adc eax, 0x190d409f
xor al, 0x9e
adc dl, byte [rdi]
cmpsd dword [rsi], dword ptr [rdi]
add qword [rsi], r10
ret 0x17e0
ja 0x401e56
push rdi
adc ch, bh
pop rdx
add eax, 0x4476d1f
scasb al, byte [rdi]
or al, 0x77
sub dword [rdi], 0x14
lahf
sbb edx, dword [rdx + 0x1794a6c1]
call 0x778d65d4
adc bh, ch
mov al, 0xef
and dh, ah
sbb al, 0x64
mov al, 0x93
adc ebp, dword [rdi + rdx - 0x2d]
mov ah, 0x18
cmp dword fs:[rax], ebx
pushfq
in al, dx
out dx, eax
and al, bl
lea esi, [rcx + 0x1bbd2c01]
out 0xae, eax
wait
sbb al, 0xe4
in al, 0x70
add edi, esp
and dword [rdi], edx
in al, 0x59
or dword [rax], ecx
je 0x401e7f
sbb esp, esp
in al, 0x20
rcr byte [rbp + 0x26e6396d], cl
adc byte [rip + 0x8a35f86], 0xca
or ah, dh
add dh, byte [rax - 0x637cff6b]
sbb al, 0xec
fld xword [rdi]
clc
adc al, 0x50
sti
and dword [rdi], ecx
or dword [rdx], esp
adc dword [rcx], edi
cmp eax, ecx
xor byte [rbx - 0x3637d1e6], bl
movsxd rsi, eax
adc ch, byte [rbx]
xor bh, byte [rax + 0x72]
sbb al, 0x1a
jmp 0xffffffff97d08336
adc al, byte [rbx + 0x20b2720c]
add dl, ch
mov dl, 0x93
mov word [rdi], ss
mov bh, 3
or al, byte [rdi - 0x72]
adc eax, 0x9073a12e
cmp dword [rsi + 0xe], esp
mov edi, 0x72790b2a
adc byte [rdi], dh
or al, r8b
adc al, 0x1c
in al, 0xe4
fnstenv [rcx + 0xa]
cmpsd dword [rsi], dword ptr [rdi]
adc r12d, dword [rax]
test dword [rdx], ecx
sbb esp, ebp
sahf
sbb rax, -0x2637882a
xchg eax, ebx
add dword [rsi], ecx
or edi, dword [rsp + rcx + 0x3bd95d2f]
enter 0x1728, 0xb
push rbx
add byte [rsi], ah
mov ebx, 0x17843840
cmp cl, byte [rbx]
xchg eax, edi
pop rdi
nop
mov bl, 0x27
fisttp word [rdi]
adc eax, dword [rdx]
pop rax
mov ebx, 0xcf873a32
or dword [rdi + 0x78422f73], ebp
jbe 0x401f2d
lea ecx, [rbx]
xlatb
and eax, 0x9072371b
and esp, ebp
mov ebx, 0x1556e02f
xchg esp, esp
test byte [rdi], dl
add dword [rdi + rsi], ecx
xlatb
or al, 0x67
pop r14
xlatb
pop rsi
or al, 0xf4
or eax, 0x6486eb47
nop
xchg eax, ebx
add dword [rax - 0x43], ebp
movabs eax, dword [0x250c202fc1c9d20e]
rol dword [rdi], 1
in al, dx
in al, dx
xor byte [r15 + r12*4], 0x20
jp 0x401fae
test eax, 0x6720e447
sbb al, 0xb0
adc ecx, dword [rdi]
ret 0xc80c
xchg eax, esp
adc ebx, ebx
mov edi, 0xe40bc65
xor bl, byte [rax + 7]
or eax, 0xc8390d21
and byte [rdi - 1], ah
ficom word [rdx]
sub dword [rip + 0x2ec1d64], ecx
and byte [r10], r9b
test dword [rcx + 0x4e], 0x5f0d349e
enter 0xf1b, 0x18
in al, 0xc9
popfq
or eax, 0xdb2131b
enter 0x1760, -0x32
in al, 0x23
nop
je 0x401f86
or al, 0xfe
adc dword [rdi + 0x30], eax
ror byte [rip + 0x70ce42f], cl
adc byte [rsi], cl
leave
leave
adc ecx, dword [rsi]
fdiv qword [rbx]
or eax, 0x462f605c
adc cl, cl
xchg eax, ebx
and byte [rbp + 0xe], ch
xor byte [rax*4 + 0x42c8393c], bl
wait
adc byte [rsp + rbp*4], 0x43
xor bl, al
scasd eax, dword [rdi]
movabs al, byte [0xe30bc09e42df0ec3]
lahf
and byte [rdx - 0xf7e9e39], dh
out 0xe, eax
div dword [rax + 0x57]
xchg eax, ebx
in al, 0xfb
or ecx, dword [rax]
cmova esp, dword [rax - 0x1b0d8d4b]
leave
outsb dx, byte [rsi]
add byte [rdi + rcx], cl
int1
sbb eax, 0x83813931
or al, 0x37
xchg eax, esi
or al, 0xcf
mov ebp, 0x40072790
mov cr3, rsp
je 0x40203e
nop
sahf
mov edi, 0x5e5419fa
pushfq
ror byte [rcx], 0x79
add byte [rcx], dh
mov eax, 0xf2ff3f0f
in al, 0x20
or dword [rdi + 0xf], 0xffffffeb
or al, 0xbd
jb 0x4020aa
hlt
mov cr2, rax
or byte [rdi + 0x25fd804], cl
sbb ch, byte [rdi - 0x1308efd2]
add al, byte [rcx + 0x6f104e17]
mov es, word [rdi - 0x27]
fldenv [rcx]
sbb dword [rax - 0x1b40ef65], edi
xor ebx, dword [rsi - 0x62907364]
adc byte [rax + 0x5d8571e], dh
jb 0x402011
lodsd eax, dword gs:[rsi]
adc byte [rdi + 0x42f02077], bh
cmp ah, dl
sbb dword [rdi - 0x24], ecx
adc byte [rdi + 0x5e13c85e], dh
lock adc byte [rdi + 0x112e1c8c], dl
jb 0x402090
or al, 0xbf
fcomp dword [rbx]
or edx, dword [rdx + 0x11]
sahf
mov ebp, 0x77116740
sbb byte [r8 + 0x7ff48178], dl
adc dword [rdi + 0x33df1194], ecx
pop rsi
movabs eax, dword [0x1ba092cf11b6d711]
xchg eax, edx
iretd
adc byte [rdi + 0x1c], al
insb byte [rdi], dx
or byte [rbx - 0x2808b825], bh
nop
sbb ah, byte [rdi]
loopne 0x40205e
sbb edx, dword [rdx]
sbb r9, qword [r8 - 0x79]
in al, 0xe4
and byte [rcx + 0x12], ah
imul r10d, dword [r10], 0x19e42f12
lahf
xor ebx, dword [rsi]
adc dh, byte [rdi]
and edi, ecx
loop 0x4020fb
mov ebp, 0x13660f12
jbe 0x4020d3
ja 0x40216a
sbb byte [rbx + 0x43], cl
leave
adc byte [rbx], dl
or eax, 0xf19cb0e7
add al, byte [rcx + 0x16a49f13]
loopne 0x4020a9
xor eax, ebx
nop
xor ebp, dword [rdi]
in al, dx
test dword [rcx], edi
mov dword [rbx], edx
xchg eax, edi
cli
sbb bl, byte [rdi + 0x1c27d713]
jb 0x402122
mov esi, 0x6707141c
adc ah, ah
add al, 0x4e
enter 0x61b6, -0x35
adc ecx, dword [rdi]
movabs eax, dword [0x13ed7f13d1870817]
cmpsd dword [rsi], dword ptr [rdi]
test al, al
and dword [rcx], edi
and byte [rdi], dl
js 0x4020d6
xor eax, 0x145ac714
xchg eax, edi
push -0x70
jo 0x4021a8
adc al, 0x17
leave
sbb ah, byte [rdi + rsi*2 + 0x5f91bb08]
scasd eax, dword [rdi]
adc al, 0xd7
xlatb
loopne 0x402176
add ch, byte [rdi - 0x35a8eb4a]
adc al, 0x21
insb byte [rdi], dx
movabs al, byte [0x17feb08742055feb]
adc eax, 0x3c9c8317
jmp 0xffffffffd8e736df
sbb ah, byte [rdx]
outsd dx, dword [rsi]
cmp eax, ecx
leave
xchg eax, ebx
adc eax, 0x9e35180c
adc eax, 0x2f18178
ret 0x5715
call qword [rip - 0x3f429870]
jmp qword [rbx]
xchg eax, edi
sbb edi, dword [rbp + 0x6ebd2790]
xlatb
sbb r12b, byte [rcx - 0x6c6f98ea]
xchg eax, edi
adc dword [rcx - 0x6a1f3159], ebx
adc eax, 0x2f073857
popfq
sbb al, 0x6c
cmpsb byte [rsi], byte ptr [rdi]
pop rdi
movabs al, byte [0x633087fffff63319]
jb 0x402253
jae 0x402255
jne 0x402249
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
or edi, esi
jg 0x402260
inc dword [rax]
jb 0x402260
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x40222b
fstp xword [rdi + 0x7b]
jnp 0x402273
outsd dx, dword [rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x40227b
jne 0x402297
outsd dx, dword [rsi]
mov edi, 0x6df6fec0
jo 0x402294
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bp, word [rsi - 0x23], 0xff4a
mov bh, 0x69
or byte [rdx + 0x72], dh
jns 0x40229f
outsb dx, byte gs:[rsi]
je 0x4022b6
jns 0x4021e7
or ch, byte [rbp + 0x65]
jne 0x40224e
out 0xbe, al
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x402285
or eax, 0xff74295f
fucomi st(5)
test byte [rdx], ch
jo 0x4022c1
popfq
jo 0x4022d1
and eax, 0x4c74535a
xor dword [rcx], edi
jo 0x4022d3
imul byte gs:[rbp + 0x6b]
in eax, dx
movsxd rsp, dword [rbp + 0x77]
js 0x4022e4
movabs al, byte [0xaddceb1a74637572]
or eax, 0x63767133
jae 0x4022c5
adc al, 0xbb
popfq
insd dword [rdi], dx
imul esp, dword ss:[rdi + 0x6e], 0x380c650f
push -0x2a19097
mov dh, 0xb5
fisttp qword [rsi]
cmp qword [rdx + r11], r9
jne 0x4022e8
js 0x40231e
xor r14b, byte [rcx]
std
ja 0x402319
mov ah, 0x65
cmpsw word [rsi], word ptr [rdi]
insb byte [rdi], dx
js 0x4022f5
imul ebx, dword [rdi + 0x70], 0x6f
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x7067b045
adc dword [rdi + 0x30], 0x1b
sbb dword [rcx], edx
in eax, dx
xor dword [rbp + 0x5f96316e], 0x61301267
neg bl
jo 0x402351
mov bl, 0x70
pop rbp
adc dh, byte [rcx]
xor eax, 0xa5786541
mov al, 0x6d
jnp 0x402320
enter 0x4c73, 0x35
push rbx
mov dh, 0x45
fisttp word [rsi + 0x7573a836]
jae 0x402319
cmp byte [rdx - 0x45], al
ret 0x5fde
imul ebp, dword [rbp + 0x69], 0xa37417a
add eax, edi
insd dword [rdi], dx
test dword [rbp + 0x45a520ff], esi
push r11
mov ch, 0x53
pop rax
pop rbx
hlt
imul ecx, dword [rdx + 0x24], 0x61a56235
imul ebp, dword [rbx], -0x54
test eax, 0x6e610d86
adc dh, byte [rax + 0x646c290b]
and dword [rdi + 0x761c6b77], eax
test dword [rbp - 0x59], ebp
xor al, 0x67
adc dword [rax + 0x7b], esi
or byte [rdi + 0x6de24485], dh
fisub word [rbx + 0x68]
lodsb al, byte [rsi]
or ch, byte [rcx - 0x6eaed894]
or dword [rax + rax*4 + 0x15], 0x58652713
or byte [rbx + rcx + 0x4f], ah
ja 0x402385
or bl, bl
push di
cmp dword [rsi], esp
or edi, dword [rcx + 0x4a]
add ebx, dword [rcx - 0x45]
in al, 0x34
outsb dx, byte [rsi]
jmp 0x40230a
in al, dx
lodsd eax, dword [rsi]
loope 0x40239a
adc dword [rsi], ebx
sub dword [rdi + 0x75], ebp
jae 0x4023a5
enter -0x4922, -0x57
jo 0x402399
jbe 0x4023ff
jbe 0x4023e6
imul edx, dword [rbp + 0x55], 0x341d2b82
sub ax, 0xab6a
insb byte [rdi], dx
and ebx, eax
xor byte [rax], ch
fldenv [rbp + rcx*2 - 0x4d]
sub dword [rbx + rbp*2 - 0xa8fea33], 0xadb22837
mov ch, 0x5c
cmp byte [rip + 0x652b6c17], al
cwde
xchg eax, esi
xor edx, dword [rdx + rsi*2 - 0x26fc0b15]
or dword [rbp + 0x31], 0x27
je 0x402437
jo 0x4023e5
xor bl, cl
sub esi, dword [rbp + 0x26a4e626]
je 0x402436
sub edx, dword [rbp + 0x1be72342]
je 0x402370
retf -0x5624
jb 0x402401
and eax, 0x2c816170
add dword [rdx + 0x46996e4b], esi
fldlg2
nop
xor al, 0x64
sub byte [rsi - 0x6e], cl
push rbx
pop rcx
and al, 0x6e
sbb byte [rbx + rsi*2 + 0x70], dh
or cl, byte [rbp + 0x49]
xor eax, 0x678665b7
xor byte [rcx + 0x2d3629c2], bh
js 0x40242b
pop rsp
test dword gs:[rcx - 0x74], ebp
jp 0x402481
cmp ebp, esp
sal cl, 0xc0
cmp byte [rcx + 0x5f01b174], ah
push rbx
js 0x402426
xor al, 0x1c
and edi, dword [rbp + 0x7f2264a2]
pop rbx
mov word [rsi - 7], ss
or eax, 0x54e1979
xor ecx, dword [rcx + 0x4e]
mov ebx, 0x46bb8d8d
pop rdx
xor eax, 0xe7761773
pop rdi
push rax
sub dword [rsi + 0x4552fffd], 0x5f595454
push rbp
push r12
adc byte [rax], r12b
xor al, 0xf4
fstp qword [rax]
mov ah, 0x9e
jno 0x4024c6
jp 0x40246c
pop rsp
push rbx
jae 0x402471
test dword [rsi - 0x7fa5939c], edx
sti
fcmovnu st(0), st(7)
wrmsr
imul ebp, dword [rcx + 0x2f], 0x424f4c47
xor r15b, dil
out 0xbe, al
mov esp, 0x5f495fa2
xor bl, byte [rdi + 0x52]
push rdx
push rbx
push rdx
pop r15
in eax, 0xc9
movabs rsp, 0xdb554e470b415444
jnp 0x40244d
and byte [rax + 0x44], cl
push rdx
push rbx
pop rdi
fadd dword [rcx + rax*8 + 0x424154fb]
sub r8b, r14b
adc ah, bl
out dx, al
movabs al, byte [0x454e5944ae72a15b]
in eax, dx
sbb eax, 0x360b276c
movsxd rsp, esp
push rbx
add ebx, dword [rdi]
movsxd rbp, dword [rcx + 0x114545c4]
push 0x4b524590
or ebx, ebx
xchg eax, esp
cmp eax, 0xae31234b
push -0x7c5c4275
fld xword gs:[rcx + rbp*2 + 0x6d]
push rax
movsxd rcx, dword [r11 + 0x1c]
mul byte [rcx]
xchg eax, ebx
std
xor r8b, byte [rbp + 0x76]
or al, 0x43
je 0x402536
xor byte [rax - 0x1edad5b9], cl
jne 0x40257a
sbb bl, ch
mov ecx, 0xb36a4c49
frstor dword [rdx + 0x31]
xor r11, qword [rbx]
adc al, 0x2d
sti
mov edx, 0x6ff9ec30
jbe 0x4024ad
xor byte [rcx + 0x77], ah
push rax
fld xword [rbp + 0x24536d6d]
sub dword [rbp + rax*2 - 0x17], edx
push rbx
add dh, byte ss:[rip + 0xed4f6ee]
jae 0x402564
fbstp tbyte [rdi - 0x2e]
stosb byte [rdi], al
adc al, 0x2b
fild dword [rbp + 0x4f]
sbb dl, byte [rdx + 1]
cmp eax, 0xd4c35add
push rax
or byte gs:[rdi + 0x50], ch
scasd eax, dword [rdi]
xor al, 0x67
xchg eax, ecx
mov cl, 0x25
scasd eax, dword [rdi]
cmpsb byte [rsi], byte ptr [rdi]
xor dword [rax - 0x41273a8c], ebx
lea ebp, [rax + 0x20]
ja 0x402535
or dword [edi + 0x2d], ebx
sti
pop rdi
fcom st(1)
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0xc4
not dword [rax]
pop rdx
pop qword [rbx + 0x56]
or byte [rcx + 0x5bb00da0], ah
sbb eax, 0x74bf04f1
xor ax, word [rcx]
jnp 0x4025f9
xor ch, byte [rsi]
add dword [rip + 0x78b2cb3b], esi
adc ebx, esi
xor al, 0x3e
sbb dword [rdi + 0x6ecc5e68], ebp
in eax, dx
je 0x4025d1
jae 0x4025fb
push rdi
sub ebp, ebx
outsb dx, byte [rsi]
rcr dword [rdx], 0x2c
push rdx
push rbx
cmpsd dword [rsi], dword ptr [rdi]
cmp dword [rbp + 0x32], ebp
xor esp, ecx
jbe 0x4025c0
push rdx
imul rcx, qword [r10 + 0x69], -0x10ad89e2
jo 0x402623
adc al, byte [rdi + 0x32]
ja 0x40262e
fldenv [rdi + 0x7e]
or al, 0x4b
add eax, 0x2e203886
jae 0x402576
insb byte [rdi], dx
pop rsp
mov byte [rcx], bl
out dx, eax
sub eax, 0xc5626908
movsxd rbx, dword [rbx]
adc dword fs:[rdx - 0x66], ebp
stc
adc eax, 0x2e9b654d
imul eax, dword [rsi + 0x39d23143], 0x92d877b
or eax, 0xd9c6b34a
xchg eax, ecx
add bh, byte [rbx]
fxch st(0), st(2)
insd dword [rdi], dx
sub al, 0x24
jl 0x4025ae
or eax, 0x400c4978
add al, 0xc2
in al, dx
jo 0x402680
insd dword [rdi], dx
or dword [rax + 0x1c], eax
push 0x45de96cb
push 0x42264db5
pop rcx
js 0x40264e
out 0x8a, al
and bl, byte [rdi + 0x2f]
xor al, 0x72
int 0x94
xor al, 1
cmp dword [rbp - 0x7a], esp
mov ah, ah
sub al, 0x96
rcr byte [r10], cl
mov dh, 0xed
mov ebp, 0x578537cb
adc dword [rax + 0x51], edi
xor eax, 0x7dda4d3e
outsb dx, byte [rsi]
jl 0x40262a
jbe 0x40260a
ja 0x40263f
jae 0x4026e4
jae 0x402698
insb byte [rdi], dx
push rax
mov ecx, 0x768c8d60
jb 0x4026eb
or bl, byte [rcx]
scasb al, byte [rdi]
out dx, al
and eax, 0x63b2663c
xlatb
cmp byte [rdx], bh
jb 0x4026e8
ret 0x3b1a
push rcx
ret 0x2d5b
push rax
xor dword [rsi], ebp
xor esi, ebp
adc eax, 0x598c2604
insd dword [rdi], dx
cmp ebx, dword [rax + 0x739fb08e]
or dh, byte [rcx + rcx*2]
mov edi, cs
xchg eax, ecx
loope 0x402681
add esp, dword [rbx]
cmp al, byte [rsp + rcx*8 + 0x6f]
jns 0x4026f5
sub dword [rbx + 0x4d], -0x65
jbe 0x402647
xor ebp, ecx
push rbx
jp 0x4026d6
xchg eax, esi
jnp 0x402732
imul esp, dword [rsp + rbx*2 + 0x24], 0x324e6827
jns 0x402717
mov byte [rdi - 0x3cb1836b], 0xd8
sbb cl, byte ss:[rbx + 0x75]
jmp qword [rdx + rdx*4 - 0x3a]
pop rdx
and al, 0x6c
jo 0x40272d
loope 0x402742
jo 0x4026eb
mov bl, 0xd7
movabs al, byte [0x8123d81264686122]
rcl byte [rax + 0x18], cl
js 0x40272e
xlatb
or al, 0xa0
pop rdi
push 0x61698eb1
xor bh, byte [rbp - 0x1f3ec099]
or al, 0xad
cwde
fild word [rax]
or eax, 0xa0f64793
add eax, 0x6ec29785
xchg eax, ebx
sub esp, dword [rdx + rax*8 - 0x4f189289]
xor dword [rbx - 0x73f6a36b], ebp
je 0x402751
mov ah, 0x6e
add ecx, dword [rbx + 0x6e]
shr ebx, -0x67
mov esi, 0x37b6bb09
cmpsb byte fs:[rsi], byte ptr [rdi]
sal dword [rsi + 0x5f], 0xa
or ebp, ecx
and byte [rbx], ch
sub al, 0x8b
add sil, byte [r15 + r8*8]
popfq
or al, 0x43
pop rcx
sbb dword [rbx], 0x6261549b
or al, 0x60
xchg eax, esp
mov byte [rbp + 0xb9a9eb0], dl
xor esi, dword [rcx + rdx*2 - 0x166144d0]
jne 0x402728
outsd dx, dword [rsi]
adc al, 0x61
nop
hlt
push rdi
jbe 0x402742
push rdi
fcomp dword [rbx]
or dword [rdi + rbx], esi
outsb dx, byte [rsi]
xchg eax, ebx
xchg eax, ecx
xchg ax, sp
adc dh, byte es:[rbp - 0x69f1df9f]
xor edx, ecx
sahf
loopne 0x402729
jl 0x402798
cmp dword [rax + 0x29], ebx
imul ecx, dword [rdx + 0x13], 0xb0a67664
xchg eax, ecx
scasd eax, dword [rdi]
fidiv word [rbx]
int3
add eax, 0x322473c6
pop rsi
or ecx, edi
js 0x4027f2
jbe 0x4027ce
xor byte [rbx], dh
sbb byte [rbx + 0x282f1852], dh
xlatb
movsd dword [rdi], dword ptr [rsi]
scasd eax, dword [rdi]
adc al, 0xd6
std
jno 0x402822
out 0x71, eax
xor byte [rsi - 0x188fc893], dl
cwde
xor esi, dword [rax + rbx*4]
cmp ah, byte [rbx + 0x24]
pop rsp
pop rcx
and word [rcx - 0x34], bx
push -0x7c
movabs eax, dword [0x3bc0b24b787c7470]
mov dword [rsi + 0x33], eax
jg 0x402813
xor dword [rax + 0xb], ebx
and al, 0x71
xor al, 0x7a
and dh, byte [rdx]
mov dh, 0xa
cmpsd dword [rsi], dword ptr [rdi]
xor al, 0x35
mov byte [rsi + 0x81978b8], bl
adc esi, -0x17
add byte [rsi], bl
xor cl, al
cwde
test ecx, esp
pop rdi
rcl bl, 1
sbb dl, byte [rax + 0x32983089]
push 0x5f3f2d2c
push -0x7cfcfb81
cmp dh, byte [rcx - 0x29]
or dword [rbx], ebp
mov esi, ebp
mov ah, 0x52
imul ebp, dword [rdi + 0x4e0c99d8], 0x6a1a344c
or byte [rbx], bpl
mov ebp, dword [rbx]
cmp dh, dl
or byte [rcx + 0x3c0118c], r9b
add ah, byte [rbx]
jns 0x40285f
out dx, al
xchg byte [r10 + rdx*8], bl
add al, 0x16
test ecx, esp
push -0x756f5ef2
xor dword [rbp - 0x6c], ebp
movsd dword [rdi], dword ptr [rsi]
in al, dx
xor eax, 0xf5f696b2
movsb byte [rdi], byte ptr [rsi]
rol byte [rcx - 0x17], cl
imul edi, dword [rax + 0x36], 0x836d6276
xchg byte [rsi], ah
xor eax, 0x856bf53f
test byte [rdx + 0x59], dl
and dword [rcx - 0x60735396], ecx
cwde
xor edx, dword [rbp - 0x629a949f]
sub r12, qword [rcx]
and byte [rsi], ah
cmp ch, byte [rdi]
xor byte gs:[rax + 0x13], cl
cmp byte [rax + 0x63], ah
add byte [rax], bl
enter 0x6e02, 0x38
in eax, dx
xor dl, al
mov dword fs:[rax - 0x35925eb5], esi
fldcw word [rbx + 0x68]
mov eax, 0x32504e1e
add bl, bl
pop rax
or al, 0x30
test esp, r9d
xor byte [rax - 0x56], bl
sbb eax, 0x744f4f35
push rdi
and al, 0x82
sub eax, 0xd9271d75
call 0x3658381
retf 0xa32
pop rbx
sub eax, dword [rdi - 0x43]
loop 0x402937
movsxd rsp, dword [rsi]
jp 0x402913
sbb byte [rdx - 0x1f989ece], cl
xor edi, dword [rsi*4 + 0x734b1bdc]
in eax, 0xd1
enter 0x52e, 0x7b
pop rbp
retf
movabs eax, dword [0x4b6c834658cb6d49]
int3
or ebp, ebp
or al, 0xce
js 0x402967
leave
retf 0x4c2
pop rdi
stosd dword [rdi], eax
rcl byte [rax + 0x3731157a], 0x6f
and byte [rbp + 0x30], ah
sub esp, ebp
sbb eax, 0x210db2d8
jns 0x4028a4
clc
push rax
movsxd rsi, dword [rcx + rbx*2 + 0x1d]
or al, byte [rsi - 4]
jne 0x40295d
cmpsd dword [rsi], dword ptr [rdi]
rcl dword [rdx + 0x1064d7ba], cl
adc dword [rdx + 7], esp
pop rax
mov edi, 0xc16e4b62
xchg eax, edx
mov bl, 7
outsd dx, dword [rsi]
imul edi, dword [rsi - 0x7a3d525a], 0x6e705f21
outsb dx, byte [rsi]
fsub dword [rsi + 0x22]
mov bh, 0x74
imul esi, dword [rsi + 0x30], 0x65b7c9fd
push 0x1255436b
fcmovnb st(0), st(2)
test al, 0xfb
mov ah, 0x62
insd dword [rdi], dx
movsxd rax, dword [rbx + 0x43]
xor byte [rdi], bh
push rsi
push rsi
jae 0x4028ed
adc byte [rdx], dl
movabs dword [0x6f9f092359433381], eax
xor dword [rdx - 0x52], ecx
sar byte [rax], 0xee
or al, 0x50
xor al, byte [rdx + rbx*2]
add cl, bl
or esi, dword [rdx]
sub esi, dword [rsi]
add r8d, dword [rcx + 0x6c376429]
sub byte [r11 + 0x3c1f3132], r8b
mov edx, 0x18ff960c
add byte [rbx + rcx*8 - 0x3e], dl
and al, 0x36
xor dword [rax], edi
fldcw word [rbp - 0x44]
push rax
int1
jae 0x402a24
insd dword [rdi], dx
and ah, byte [rdx + 7]
je 0x402a23
mov bh, 0xae
or eax, 0x4909683b
movsb byte [rdi], byte ptr [rsi]
jo 0x4029c2
outsb dx, byte [rsi]
outsd dx, dword [rsi]
add al, 0x33
jne 0x4029ed
sub eax, 0xe8560d94
sbb byte [rip + 0x2daa2e02], dh
imul eax, dword [rdi], 0xd6b7b90d
and byte [rbp + 0x79640938], al
outsb dx, byte [rsi]
add r8b, r15b
pop rcx
wait
sbb dword [r14 + 0x63], r14d
popfq
jo 0x4029fb
or al, 0x5f
sbb esp, dword [rcx - 0x7d]
mov bh, 0x11
in al, dx
sub byte [rcx], cl
sub dword [rdx + rsi*2 - 0x49], esi
xchg eax, ecx
fistp dword [rsi + 0x86f2c0a]
add eax, 0xed8c7a
movsb byte [rdi], byte ptr [rsi]
and al, 0x6f
retf
push 0xcfb2dcb
std
push 0x5d0d7264
sal byte [r13 + 0x41], 0x60
pop rdi
insb byte [rdi], dx
mov ebp, 0xb0fb116c
pop rcx
mov dl, 0x16
or ebp, dword [r10 + 0x63]
jb 0x4029cd
wait
mov ebp, 0x693616d2
outsd dx, dword [rsi]
push 0x442b5e7b
jae 0x402a6a
adc byte [rsp + rsi*2], al
push rdx
test eax, 0xfd5b6552
add byte [rax], al
add dh, byte [esp - 0x38f8fe60]
xor ah, byte [rdi]
outsb dx, byte [rsi]
sbb al, 1
enter 0x3480, 0x43
and eax, dword [rdi]
push rsp
leave
nop
or al, 0x32
push rsp
and byte [rdx + rsi], al
enter 0xc90, 0x31
je 0x402ade
jns 0x402a9f
xchg eax, esp
or al, 0x24
idiv dil
ljmp [rdi + 0x14]
pushfq
cwde
cwde
and byte [rcx], al
xchg eax, edi
add eax, 0x1509b067
xor ch, bh
retf
sbb esp, esp
rol al, 0x40
add bh, bl
nop
leave
sbb byte [rsi - 0x4e], dl
sbb eax, edx
xchg eax, edx
add ecx, dword [rdi - 0x6e88b690]
add dword [rdi], edi
pop rsi
mov edi, 0xcdeceff
push 0x30bf07b7
jmp 0x288973d
imul edi, dword [rdi], -2
fstp dword [rbx + 0x7df2d01]
cmpsd dword [rsi], dword ptr [rdi]
cmpsb byte [rsi], byte ptr [rdi]
insb byte [rdi], dx
xor cl, al
add byte [rsi], 0xff
jp 0x402b39
jb 0x402b25
adc byte [rbx + 0x3f], dl
mov byte [rdi], al
push rdi
out 0x3f, eax
inc dword [rsp + rcx + 0x3f60c832]
movabs al, byte [0x1901c88392e401a0]
sbb dword [rip + 0x138e8419], esi
dec dword [rip + 0x7bc2725]
lcall [rdx]
mov dword [rsi], ecx
xor cl, al
nop
nop
nop
add eax, ecx
xchg ah, ch
adc byte [rdi], al
xchg eax, esp
mov eax, 0x7a75049
sbb dword [rdx - 0x62f0a4dd], esi
loopne 0x402b30
enter 0x3733, 7
jg 0x402b62
adc al, 2
adc dword [rdx + 0x47a33fc3], edx
or eax, 0x76e6725
dec dword [rcx]
test eax, 0x2420a4dc
mov edi, 0x5d900777
and al, 0xcf
mov edi, 0x3fb10150
jb 0x402b56
mov ah, byte [rdi]
movabs al, byte [0x733c91bf7f645c90]
mov bl, 0x6f
jg 0x402bb1
or cl, ch
jb 0x402b24
xchg eax, edi
mov edx, 0x7cce4a1
inc dword [rbx + rbx*8 + 0xe]
outsd dx, dword [rsi]
xor dword [rcx + 3], ebp
lahf
je 0x402bb2
leave
or dword [rdi + 0xf3fe710], edi
and byte [rax + 0x7f880c9], bh
call qword [rcx + 0x2c]
cmp edx, dword [rdi]
xchg eax, ebx
xchg eax, edi
clc
wait
sahf
mov ecx, 0x3f1f6cd9
jg 0x402b85
add dword [rcx], ebx
adc byte [rax + 0xb6c8324], bl
mov edi, 0x921d2f2f
sbb dword [rax + rcx + 1], 1
xor byte [rax - 0x37], ah
push rax
js 0x402b63
or al, byte [rcx]
wait
or al, 0xb0
jg 0x402b40
or al, 0x48
ja 0x402bd1
or al, al
shl byte [rbx + rdx], 0xf2
and byte [rax - 0x7b], dl
add dword [rax], esp
mov al, 0x90
or eax, 0x307f1536
sbb eax, 0x34e0c216
mov edi, 0xc09c1107
sub dword [rbx + 0x5d71007b], ebx
mov edi, 0x232c241e
xchg eax, esp
mov ebx, 0x9e4e69d7
xor eax, 0x15a8ff30
leave
and dword [rax + rax + 9], ebp
jg 0x402b9f
add byte [rax], r8b
mov esp, esp
rcl dword [rsi], 1
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax + 0xff], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x73f7fdea], ecx
ret 0x38c
or esi, dword [rsi - 0x4f]
sbb eax, 0x35d0
xor eax, 0x90000010
add byte [rax], al
add byte [r8], al
add ah, dh
add byte [rax], al
add bh, bh
