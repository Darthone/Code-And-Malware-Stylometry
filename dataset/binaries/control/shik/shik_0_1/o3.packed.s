call 0x401118
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x400f30
add ebx, ebx
je 0x400ee6
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x400f1e
cmp rbp, -4
ja 0x400f1e
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x400f06
add ecx, 4
mov dl, byte [rax]
je 0x400f2e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x400f1e
ret
cld
pop r11
cmp r8b, 2
je 0x400f46
jmp 0x400fc3
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x400f56
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x400f3e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x400f6e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x400f5b
sub eax, 3
jb 0x400f8c
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x400fc3
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x400fb3
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x400fb1
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x400fa0
cmp rbp, -0xd00
adc ecx, eax
call 0x400ef2
jmp 0x400f46
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x40109c
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x40103a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x401086
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401059
push 0x3a707474
jne 0x4010b2
js 0x401072
jae 0x4010ac
outsb dx, byte cs:[rsi]
je 0x40106b
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4010d9
jb 0x4010cb
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4010f6
jb 0x401109
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x211b74
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x211b74
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x400fd4
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4010ff
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x4010ad
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f11a7
jb 0x4011bf
movsxd rbp, dword [rdi]
jae 0x4011b9
insb byte [rdi], dx
js 0x4011bf
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x40119f
cmp rsi, rcx
jae 0x4011a7
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x401186
cmp al, 0x8f
ja 0x401186
cmp byte [rsi - 2], 0xf
je 0x40118c
sub al, 0xe8
jg 0x401189
push rdi
cmp al, 1
ja 0x401174
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x401177
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x4011a4
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4011fb
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1679
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x40123f
mov al, 0xa
jmp 0x40123f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x40121b
inc ebx
mov al, 0
jmp 0x401243
mov al, 2
jmp 0x401243
mov al, 3
jmp 0x401243
mov al, 0x3c
jmp 0x401243
push rcx
rcr ah, 1
fstp st(7)
jle 0x401284
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x401296
jg 0x401288
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6a0b
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4012e2
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb645f
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4012ea
cmp esi, 0x21585055
jne 0x4012ee
jge 0x4012e0
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4012e3
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4012e7
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x401393
pop rcx
or al, 0x3b
jb 0x401399
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x40130b
jmp 0x40130d
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x366124e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf53496
in eax, dx
jg 0x401345
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x40138b
mov bh, 0x2a
add edi, 0x10
jmp 0x401388
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4013c5
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401401
jne 0x401418
fstpnce st(6), st(0)
jle 0x4013e1
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x401417
jrcxz 0x40144b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b3af
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4014ca
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x40148a
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295a5f
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4014fd
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x401497
and ecx, 7
or al, 0xeb
jae 0x401502
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x401537
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x401575
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x40152e
push rax
call 0xffffffff868d121b
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401538
std
cmp edi, esi
xchg eax, edi
jle 0x40158d
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95b19
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x40158b
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401579
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x4015a2
js 0x4015e2
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x401674
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad28af
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x401695
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x40169a
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc2114c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401628
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
cld
add al, 0
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax - 0x60], al
sub dl, byte [rax]
add byte [rax], al
add byte [rax], ah
add edi, edi
adc eax, 0x7380000
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x40174e
je 0x401757
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401720
mov dh, 0x7d
jbe 0x40171f
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401758
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c000
and byte [rdi + 0x4100006], bl
add byte [rax + 0xf902790], dh
or byte [rax], al
push rax
or dword [rax], eax
mov al, 0xd8
nop
or al, byte [rax]
enter 0xb, -0x60
cmpsd dword [rsi], dword ptr [rdi]
jl 0x401747
sub eax, dword [rdi]
or al, 0x17
or eax, 0x3e076000
cmp dword [rax + rax*4 + 0xe], 0xf7000
movsb byte [rdi], byte ptr [rsi]
adc al, 0x13
pop rax
cmp eax, eax
cmpsd dword [rsi], dword ptr [rdi]
adc byte [rdi], dl
adc dword [rax + 0x46d8072], esi
adc eax, 0xf217122f
add esp, esp
adc eax, dword [rax]
clc
sbb eax, 0x8001460
add al, 0xf2
add dword [rip + 0x161000], edx
sbb ah, bh
add cl, bh
add al, 0x17
add al, bh
sbb byte [rax], al
add byte [rax], ah
cmp al, 0x81
jl 0x401710
sbb dword [rax], eax
sbb al, byte [rax]
xor byte [rdi + 0x53], 0x36
sbb dword [rbx], 0x4170113
add cl, dh
push rdi
cmp edx, dword [rdx - 0x40e4f301]
sbb dword [rcx], ecx
pop rbx
xor byte [rip + 0x40fa027f], cl
xchg byte [r8 + rdx*4 + 0x1b], spl
pop rbp
sbb edx, dword [rdx - 0x58a0bb80]
add dword [rbx + 0x17832212], edi
push rbx
jp 0x401813
movabs al, byte [0xd7a557610d879786]
lodsb al, byte [rsi]
or byte [r9], r15b
enter 0x6720, -0x71
ret
mov esp, 0x241d8c6f
sub al, 0x1f
sal byte [rdi + 0x12], cl
or byte [r15], dl
mov dh, 0x18
loopne 0x40182c
add dl, cl
mov byte [rip + 0x5ec4761], cl
xchg dword [rbx + 3], esp
or bh, bl
sub byte [rcx], al
not dword [rip - 0x67b5ec68]
or qword [r15], r11
jo 0x4017c1
ja 0x40184e
add dword [rdi + 0x6f], eax
loopne 0x40181c
pop rdx
fld st(3)
sbb eax, eax
sub al, 0x8d
xchg eax, edi
xor byte [rdi - 0x6d], al
xchg esi, esp
in al, 0x90
adc sil, byte [rdi]
adc al, 0x4e
sahf
sbb al, 0x73
in al, 2
ror byte [rax], 1
sub cl, byte [rdi + 0x36]
retf
push r10
add dword [rdx], esp
xor byte [rdx], dl
cmc
add esp, ebp
in al, 0x20
movsd dword [edi], dword ptr [esi]
jo 0x401857
adc al, 0x8f
ret 0xecae
sbb al, 0xae
add dword [rax], eax
mov ebp, 0x727b317
sbb edx, ecx
and byte [r11], r9b
sahf
add eax, 0x80322b17
popfq
fld xword [rdi]
xchg dword [rax + 0x1a2ff52b], esi
add dl, byte [rdi]
test byte [rbx - 0x10c6a27d], dl
adc byte [rdx], cl
getsec
fsub dword [rax - 0x64]
sbb al, 0x3f
add dh, byte [rax + 0x3c47083f]
loope 0x40189b
xor al, byte [rcx - 0x54]
add dword [rdi + 0x20], esp
push rax
nop
xor eax, 0x2f5b85d8
adc bh, bl
pop rcx
out dx, eax
add ah, cl
add byte [rdx], 7
pushfq
ja 0x401883
cmp al, 0x79
movsxd rsp, dword [rbx - 0x51]
stosd dword [rdi], eax
add dl, byte [rax - 0x27bc9ef6]
test dword [rcx + 0x305fc48f], esi
xor byte [rsp + rcx - 0x22], 0x27
adc bl, ch
iretd
cmp byte [rbx + rax*4], ah
add bl, dh
add ah, byte [rdi]
push rax
or dh, byte [rdx - 0x38]
and byte [rdi], ah
adc edi, esp
or dword [rbx + rbp*2 + 0xe], esp
jbe 0x4018f1
mov edi, 0x5f020305
jo 0x4018f9
xchg eax, edx
rol dword [rsi + 0x1e681711], 3
xchg eax, ebx
ja 0x401869
mov edi, 0x146f1732
fbld tbyte [rcx]
mov al, 0x65
push rdi
add edx, edi
sbb ch, ah
adc byte [rsi], dh
ja 0x401961
jg 0x401904
out dx, eax
enter -0x78e7, -0x1c
and byte [rdi + 0x4ca00f03], al
xor dh, byte [rsi + 1]
add al, 0xb8
sahf
cmp al, 0xe9
and al, 0x97
xchg eax, ecx
add edx, dword [rdi]
rcl byte [rax], 0x64
add dword [rax + rdx*4 + 0x218fcf27], edi
add eax, eax
outsd dx, dword [rsi]
in eax, 3
sbb byte [rsi], dh
and al, 0x27
mov dword [rax - 0x15], 0xd8c94eef
jg 0x40190f
sbb edx, edi
add edx, dword [rbx - 0x7030d84d]
movabs al, byte [0x4ece44fe470fc820]
adc cl, byte [rdi + 0x2c]
add dword [rdi], edx
cmp al, 0x21
iretd
pop rsi
scasq rax, qword [rdi]
mov ebx, 0x9f07700
call qword [rdi]
jp 0x4019be
cmp byte [rdx + 0x74], dh
jae 0x40196e
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
mov bh, 0xf6
pop rbx
sti
pop rdi
push r11
push rsp
or eax, esp
jb 0x4019df
imul ebx, dword [edx], 0xb7745f06
mov bh, 0x77
ljmp [rbp + 0x5f]
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x4019ae
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 - 0x14], esi
outsd dx, dword [rsi]
mov edi, 0x5f7372fd
jne 0x401a1a
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x401a13
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x42243538
jg 0x4019ae
or ebx, dword [rdi + 0x66]
imul ebp, dword [rsi + 0x69], 0x61727208
jns 0x401a1e
jge 0x40195a
sti
jbe 0x4019c0
jb 0x401a40
add byte [rsi + 0xa], ah
insd dword [rdi], dx
and byte gs:[rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x401a04
or eax, 0xdd613b7
pop rdi
sub dword [rdx + rbp + 0x70], esi
popfq
jo 0x401a50
jbe 0x401983
in eax, dx
outsd dx, dword [rsi]
and eax, 0x424f4c47
sub al, 0x73
rcr dword [rdi + 0x49], 6
jnp 0x4019aa
pop rdx
xor bl, byte [rdi + 0x52]
push rdx
imul edx, dword [rsi], 0x4c74535a
cmp byte [rsi], cl
imul ebp, dword [rdi + 0x38], 0xee66c34b
mov edi, 0x4d415246
pop r15
ror dword [rbx], cl
jnp 0x4019c9
in eax, 0x47
push rbp
and byte [rax + 0x44], cl
push rdx
push rdx
fdivr st(3)
in eax, dx
push rbx
not byte [r9 + rax*2 + 0x42]
sub byte [r10 - 0x7a94469c], r8b
test dword [rax], edx
adc eax, dword [rdi]
pop cx
movabs rbp, 0x696c1b4349777856
movsxd rsp, dword [rcx]
xchg eax, esp
jrcxz 0x401a29
in eax, dx
xor eax, 0x31488e9a
mov edx, 0xdbfe736f
in eax, dx
mov edi, 0x6f0a36d0
jo 0x401aab
push rax
imul ebp, dword [rsi + rcx*2 + 0x39], 0x266e6715
movsxd rsi, dword [rax - 0x28]
outsb dx, byte [rsi]
in eax, dx
js 0x401aea
xor eax, 0x31731309
jmp 0x401afa
jae 0x401a6b
or dword [rip + 0x69696246], esp
add byte [r14 - 0x74], r14b
ret 0xf99d
jbe 0x401ae2
xor byte [rdi + 0x54], bl
xor ecx, ebp
push rdi
push rdx
imul rsi, r8, 0x3fba159b
insd dword [rdi], dx
mov byte [rcx - 0x989b530], al
loope 0x401aaf
movabs eax, dword [0xa27373616c43a501]
pop rdx
xor eax, 0xb75bed74
sti
insb byte [rdi], dx
jbe 0x401b20
jbe 0x401ae9
jo 0x401b31
test byte [rsi + 0x5e], ah
push -0x17bfbf95
mov al, 0x75
dec byte [rcx + 0x42]
pop r15
xor ch, byte [rsi]
xor ebp, ebx
and ecx, dword [rsi - 0x5d]
cmp byte [rsi - 0x49], dh
movabs eax, dword [0x43db493433a3992f]
xor ebp, ecx
and cl, byte [rdi]
jb 0x401b0e
pop rax
pop rax
pop rdi
xlatb
pop r11
sahf
imul ebp, dword [rbp + 0x61], 0x49
add r13d, esp
adc eax, 0x7d0443b6
sbb cl, dh
sbb dword [rbx + 0x36], edx
mov dl, 0xb6
cmp dword [rax + 0x44], 0xdb446521
xor bh, byte [rsi + 0x25]
push r12
pop r15
imul ecx, dword [rbx + rax*2], -0x15
mov edx, 0x54691fc6
push rax
sbb ecx, dword [rdi + 0x7e]
jns 0x401b12
mov bh, 0xbb
jbe 0x401b89
jne 0x401b6b
imul ebx, dword [rdx + 0x31], 0x6373d557
outsb dx, byte [rsi]
push 0xb6b
in al, dx
test dword [rbx + 0x41], eax
pop rdx
cdq
xchg byte [rax], dh
fsubr dword [rcx - 0x3d]
mov cl, 0x78
adc eax, 0x33a91f0a
movsxd rdi, dword [rax + 0x6f]
xor eax, 0x1930bb6e
and al, 0x64
pop rdi
push 0x103f6464
mov dl, 0x42
imul edi, dword [rax], 0x37
insd dword [rdi], dx
sbb dh, byte ss:[rcx]
xchg eax, esi
out dx, eax
outsd dx, dword [rsi]
mov dh, 0xb3
outsd dx, dword [rsi]
mov al, 0xc2
xchg eax, ecx
adc eax, 0x8d62246f
ja 0x401b90
sbb al, byte [rdi + 0x6b6307df]
xchg byte [rcx], ah
insb byte [rdi], dx
mov al, 0x4b
xor al, 0x93
movsxd rsi, dword [rbp + 0x7b46704c]
cmp ebx, esp
jne 0x401c08
jbe 0x401bd4
xor esp, dword [rcx + 0x64]
push -0xb
cmp ecx, dword [rax]
test dword [rcx], esi
push 0x3c696165
mul byte [rcx + 0x5339ec7d]
cmp byte [rsp + rdx*2], bh
cmp dword [rdx + 0x76], edx
imul eax, dword [rbp + 0x507343c6], 0x65
adc al, 0
cdq
push rdx
mov ebx, 0xd60e86ed
jmp 0x401c37
jns 0x401c33
adc byte [rdx + 7], ah
je 0x401c3d
mov ch, 0x61
push 0x70581e09
movsd dword [rdi], dword ptr [rsi]
in eax, 0x6e
outsd dx, dword [rsi]
sbb al, 0x49
sub eax, 0x880d6715
mov ch, 0xb7
mov ebx, 0x75622e8c
cdq
sub eax, 0x9b0d4869
mov ecx, 0x383456b7
or dword [rcx + rdi*2 + 0x6e], esp
pop rdx
test dword [rcx + 0x19], ebx
add eax, 0xa356e08
outsb dx, byte [rsi]
ret 0x5f0c
sbb esi, dword [rbp + rsi*4 - 0x13ea487a]
sub byte [rcx], cl
je 0x401c8a
push rsp
in al, 0x1c
outsb dx, byte [rsi]
jnp 0x401c28
sub al, 0x6f
or byte [rax + 5], bl
jmp 0x401bd7
out dx, al
pop rcx
and al, 0x6f
mov ecx, 0x2f68652e
push -0x265b269c
mov dl, 0x72
or eax, 0xb631a43a
pop rax
jmp 0x401bee
or ebp, dword [rdx - 0x1c]
and al, 0x69
sbb dword [rsi - 0x4d], esp
xlatb
push rsi
imul ecx, dword [rax + rbp*4 - 0x56], 0x4a1abac
insd dword [rdi], dx
imul eax, dword [rax], 0
and byte [rip + 0x14f54f0], 0xef
xchg ah, ah
in al, dx
int 0x27
sbb al, 1
sbb dword [rax + 0x7234866], edx
push rsp
sbb dword [rdx + 0x20540641], edx
add al, 6
sbb dword [rdx + 0x74743121], edx
outsd dx, dword [rsi]
xchg byte [rdx - 0x9bbdbbf], dl
ljmp [rdi + 0x43]
xor cl, al
and dword [rax + 0xcd20598], ebx
leave
jg 0x401c9b
or r15, qword [rbx]
enter 0x360, -0x40
rcl byte [rax + 1], 0xfb
or dword [rsi + rsi + 0x39], 6
sbb byte [rsi + 0x37], dl
add edx, dword [rsi + 0x7ef0334]
fld qword [rbp - 0xe]
test byte [rdi], bh
and eax, dword [rcx]
pop rsi
mov edi, 0x824decff
and eax, 0x6ebf0717
enter -0x1b7a, 0x1c
add al, byte [rdi]
imul edi, dword [rdi], 0x41
sbb dword [rax + 0x15050fe], edx
in al, dx
sbb edx, dword [rdx]
popfq
mov edi, 0x1c9bff02
test byte [rdx + 0x53], bh
mov al, 7
xchg eax, ebp
pop r8
cwde
out 0x3f, eax
inc dword [rbx - 0x7b27cdf4]
enter -0x7f38, 0xc
enter -0x27e0, 0x18
mov esp, dword [rax]
xor dword [rax], 0xffffff8e
adc eax, dword [rsi]
movabs eax, dword [0x37331aff073784e4]
sbb dword [rdx + 0x7c03f89], esi
mov dl, 0x21
sbb edx, dword [rdx - 0x6bf8ef60]
mov eax, 0x7071059
sbb dword [rdx - 0x62f0a4dd], esi
jo 0x401d3d
enter 0x3733, 7
jg 0x401d5f
or eax, 0xc3921566
movabs dword [0x9ff07f67250d237], eax
test eax, 0xa4decebf
lahf
call qword [rax - 0x70]
sbb al, 0x16
mov cl, 0x92
mov bl, 0xc3
sbb byte [rdi], 0x15
jg 0x401d00
mov eax, 0xbf8648d9
jmp 0x3f67af8e
add r9, rcx
mul dword [rsi - 0x40]
movsb byte [rdi], byte ptr [rsi]
add edx, dword [rdi + 7]
scasd eax, dword [rdi]
jae 0x401d01
popfq
cmovo edi, dword [rax + 0x33]
scasd eax, dword [rdi]
mov edi, 0x2e4d9320
loope 0x401dc0
adc byte [rax], ah
fst qword [rax]
enter -0x19f0, 0x7f
xchg eax, ebx
or dword [rdx + rsi], 0x18
sbb al, ah
add dword [rax + 6], ecx
sbb dword [rdx + 0x45981006], edx
out 0x26, al
xchg eax, edi
jg 0x401db3
test ah, ch
mov al, 7
out dx, eax
xor dl, byte [rsp + rbx*4 + 0x603f201d]
clc
and al, 0x26
jg 0x401df9
wait
pop rbp
adc edi, dword [rdi]
or byte [rsi + rdx], 0x72
nop
jo 0x401e05
and al, 0xdb
or ecx, dword [rsi + 0x30173703]
test dword [rax], esi
cmp byte [rdi + rdi], ch
xor al, 0x7f
jo 0x401da2
xchg word [rdi], ax
adc dword [rbx], edi
xchg eax, ebx
sub eax, 0x272508cd
jg 0x401df2
mov ebx, 0x95eb3c9c
add byte [rax + 0x8e8bf20], ch
fadd dword [r8]
sal byte [rcx], cl
or dword [rdi - 0x70], edi
add byte [rsi], dl
leave
xchg eax, ebx
sub dword [rbx], eax
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or edi, edi
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip + 0x59080216], ecx
stc
jmp 0xffffffff9cd6d623
jnp 0x401e19
adc eax, 0x7380000
add byte [rax], al
add byte ss:[rax], al
add byte [r8], al
adc esi, esp
add byte [rax], al
add bh, bh
