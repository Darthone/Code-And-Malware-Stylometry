call 0x4014e0
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x4012f8
add ebx, ebx
je 0x4012ae
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4012e6
cmp rbp, -4
ja 0x4012e6
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4012ce
add ecx, 4
mov dl, byte [rax]
je 0x4012f6
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4012e6
ret
cld
pop r11
cmp r8b, 2
je 0x40130e
jmp 0x40138b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x40131e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x401306
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x401336
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x401323
sub eax, 3
jb 0x401354
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40138b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x40137b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401379
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401368
cmp rbp, -0xd00
adc ecx, eax
call 0x4012ba
jmp 0x40130e
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401464
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x401402
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x40144e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x401421
push 0x3a707474
jne 0x40147a
js 0x40143a
jae 0x401474
outsb dx, byte cs:[rsi]
je 0x401433
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x4014a1
jb 0x401493
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x4014be
jb 0x4014d1
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x212f28
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x212f28
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x40139c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x4014c7
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401475
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f156f
jb 0x401587
movsxd rbp, dword [rdi]
jae 0x401581
insb byte [rdi], dx
js 0x401587
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401567
cmp rsi, rcx
jae 0x40156f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x40154e
cmp al, 0x8f
ja 0x40154e
cmp byte [rsi - 2], 0xf
je 0x401554
sub al, 0xe8
jg 0x401551
push rdi
cmp al, 1
ja 0x40153c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x40153f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x40156c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x4015c3
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1a41
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x401607
mov al, 0xa
jmp 0x401607
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4015e3
inc ebx
mov al, 0
jmp 0x40160b
mov al, 2
jmp 0x40160b
mov al, 3
jmp 0x40160b
mov al, 0x3c
jmp 0x40160b
push rcx
rcr ah, 1
fstp st(7)
jle 0x40164c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x40165e
jg 0x401650
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6dd3
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x4016aa
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb6827
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x4016b2
cmp esi, 0x21585055
jne 0x4016b6
jge 0x4016a8
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x4016ab
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x4016af
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x40175b
pop rcx
or al, 0x3b
jb 0x401761
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4016d3
jmp 0x4016d5
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3661616
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf5385e
in eax, dx
jg 0x40170d
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x401753
mov bh, 0x2a
add edi, 0x10
jmp 0x401750
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40178d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4017c9
jne 0x4017e0
fstpnce st(6), st(0)
jle 0x4017a9
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4017df
jrcxz 0x401813
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b777
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401892
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x401852
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295e27
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4018c5
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x40185f
and ecx, 7
or al, 0xeb
jae 0x4018ca
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x4018ff
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40193d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x4018f6
push rax
call 0xffffffff868d15e3
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x401900
std
cmp edi, esi
xchg eax, edi
jle 0x401955
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95ee1
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x401953
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x401941
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40196a
js 0x4019aa
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x401a3c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2c77
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x401a5d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401a62
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc21514
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4019f0
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
out dx, eax
add dword [rax], eax
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
sub al, 0xa2
xchg eax, edx
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc bh, bh
mov ecx, 0x5d00002b
or al, 0
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401b16
je 0x401b1f
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401ae8
mov dh, 0x7d
jbe 0x401ae7
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa9
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401b20
sahf
sahf
add al, 0
cwde
add eax, 0x1f90c800
and byte [rdi + 0x6100006], bl
add byte [rdx], ch
or ecx, eax
nop
invd
add byte [rax + 9], dh
add byte [rax], al
or al, 0xec
adc ecx, eax
or al, byte [rax]
xor byte [rbx], cl
add al, ch
rcl byte [rsi + 0x170f0c03], 0xd
add al, dh
adc byte [rdi], cl
nop
and byte [rsi], cl
add byte [rax], al
adc dword [rdi], ecx
add byte [rbx], dl
enter -0x37f9, 0x14
and al, 0x10
add byte [rax], ah
adc eax, eax
xchg eax, esi
add esp, esp
add al, ch
and eax, 0xbb2f2612
sbb al, 0x20
adc eax, dword [rax]
cmp al, 0x2b
adc al, 0x2d
jl 0x401b45
jns 0x401b45
adc eax, 0x16f800
add byte [rsi], ch
cmp dword ss:[rax + rax*4 + 0x17], 0x47180800
sub byte [rip + 0x192fc807], 0x30
enter -0x37f9, 0x72
sbb dh, byte [rcx]
sbb eax, dword [rax]
and byte [rcx + 0x37], bh
adc ebx, dword gs:[rbx + rdx]
add dword [rdi], edx
add al, 0
int1
push qword [rax + 0x65]
mov cl, 0x23
or al, 0x1b
mov edi, 0x490d8319
rcl dword [rdi + 0x171b3002], cl
jo 0x401b15
or al, 0x32
and al, 0x2e
mov al, 0x83
popfq
in eax, dx
fiadd word [rdi + rbx*2 + 0x35]
xor byte [rdx], dh
pop rdi
add dword [rdi], edx
push rbx
mov ebx, 0x7a4f2212
rcl byte [r15 + 0x42], 1
xchg byte fs:[rdi + 0xce3a4a5], dl
xlatb
lodsb al, byte [rsi]
nop
or al, 0x36
fnstenv [rdi - 0x39]
xor cl, r8b
fadd qword [rdx - 0x17]
mov edi, 0xc90d8320
push 0x214447f8
cmp dword [rcx], edi
enter 0x1f04, 1
xchg byte [r8 + rsi*4 + 0x31], spl
nop
pushfq
sbb eax, 0x1564a92
pop rdi
and byte [rbx + 0x32], r8b
fdiv dword [rbp + 0x17]
push rax
xchg eax, ebp
and al, 0x83
or eax, 0x47b754c9
pop rax
enter 0xc90, 0x32
fcomp dword [rbp + rdi*8 - 0x6e]
xchg eax, ebx
xor spl, byte [r8 + 0x1c]
add ah, byte [rsp - 0x70]
pushfq
sbb al, 0x3e
add ch, byte [rax + 0x5b]
add dl, byte [rdx + 0x6ce48641]
jns 0x401c7e
sbb dword [rax - 0x6f9b3f8c], ebx
and dword [rcx], ebx
js 0x401c03
jl 0x401c56
and al, 0x27
xchg dword [rax], edx
add eax, dword [rax - 0x3636fcc8]
and dword [rcx], edi
test byte [rax + 3], ah
mov byte [rdx], dh
and al, 0x83
or al, 0x83
mov word [rdx + rsi - 0x6ff36f38], gs
xlatb
xchg eax, esp
sbb al, 0x92
xchg eax, ebx
add al, byte [r8 + r11*4]
sub eax, dword [rsp]
in al, 0x90
pushfq
pushfq
push rax
add al, 0xa0
sbb dword [rdx - 0x5b8679bf], edx
movsd dword [rdi], dword ptr [rsi]
sbb dword [rax + rcx*2 + 6], esp
test al, 0xcd
lodsb al, byte [rsi]
xchg dword [rax + rdx*4 + 0x21], esp
mov al, 0x1a
add eax, 0x27243939
mov ah, 0x42
add eax, 0xc9c90cb8
and dword [rax + 5], ebp
mov esp, 0x24320c8e
add eax, -0x4c
xor cl, r8b
nop
fxch st(0), st(0)
add ebx, dword [rsp + rbx - 0x33f96c6e]
sub dword [rsi], eax
rol byte [rsi + 0x5390e4e4], 1
jle 0x401c98
sbb dword [rdx - 0x1f5b27bf], edx
sbb al, 0x64
nop
or r10b, cl
movabs al, byte [0x701329c83906425]
and eax, 0xeb0727b3
or eax, 0x200722af
and dl, byte [rdi]
sbb dword [rax + rdx*4 + 0x3e], esp
push rdx
pop rsi
adc eax, 0x4a1cf1a
xchg dword [rcx + 7], ebp
adc ah, byte [rdi + 0xc86f061]
ja 0x401ce2
pop rdi
mov edi, esi
add byte [rbx], cl
add dword [r15], 5
push rdi
mov cl, 0x2b
xchg eax, esi
pop r15
lodsb al, byte [rsi]
push rbx
add ah, byte [rbx + 0x2f]
adc al, 0x87
mov ebp, 0xd883217
leave
call 0xd1764bf
and byte [rbx], bl
mov esp, 0x20a70af0
fld dword [rbx - 0x32]
fdiv dword [rdi + rax]
and al, byte [rax + 0x7b206f23]
push rdi
or al, 0x70
in eax, dx
add byte [rsi], ch
jno 0x401d1b
jbe 0x401cc1
adc byte [rdx + rax], ah
hlt
or cl, byte [rsi]
xor bl, al
sub ch, byte [rdi]
fcom qword ds:[rdx]
pop rdi
sub byte [rdi + 0x20], al
sbb eax, 0x561b086c
push 0x47
xor dword [rdi], ebx
sbb dword [rdx + 0x4e], eax
sahf
cmpsd dword [rsi], dword ptr [rdi]
push rsi
add dh, byte [rax + rdi + 0x10]
jbe 0x401da2
adc dword [rdi + 0x210d2f8f], ebx
fsub dword [r15 + r10 - 0x27cd1737]
and byte [rbx + 0x2f2540d7], al
or ebp, esp
adc byte [rdx], cl
or dword [rdi], edx
pop rax
adc dword [rax + rsi*4 + 0x41], esp
sbb dl, byte [rdi + 0x5c2f0710]
and byte [rdx + rdx], bl
sbb dl, byte [rax + 0x1f0981a7]
cmpsb byte [rsi], byte ptr [rdi]
xor eax, dword [rbp + rbx*2 + 0x5fe75f9d]
mov al, 0x27
sbb al, 0x92
and dh, dh
or edi, esi
xchg eax, esp
and bh, byte [rdi - 0x47be13d9]
or eax, 0x401304c7
adc ecx, dword [rdx]
cmp eax, dword [rbp + rbx*2 + 0x17605f60]
jae 0x401d9f
pop rdi
nop
sbb dword [rbp + rdi + 0xebf2372], -0x2c
or bl, byte [rbx]
cmp bpl, byte [rsi]
out dx, al
lahf
adc bl, bh
jns 0x401d71
or edx, esp
add dh, byte [rdi - 0x1efdf4e5]
test dword [rcx + rdi*4], edi
and ch, byte [rdi]
or ebp, dword [rdi - 0xd8dbca0]
jns 0x401dcd
sbb eax, dword [rcx + 0x320cdb17]
enter 0x26b6, -0x76
adc dword [rdx], eax
and ah, dh
xchg byte [rax + rbx - 0x6a], ah
xlatb
cmp dword [rbx], edi
adc byte [rcx], al
lodsd eax, dword [rsi]
or byte [rbx - 0x4593e264], al
pop rdi
movabs al, byte [0x210d83b3ca65a723]
fcom st(0), st(7)
fldenv [rdx]
in al, 5
jb 0x401d88
cmp al, 0x49
or al, 0x98
or al, 0x84
or al, 0x72
and edx, dword ss:[rcx]
div byte [rdx - 0xe]
add bh, byte [rbx]
or eax, 0x730d5677
mov dl, 0x3b
or dword [rip + 0x17822f21], 0x1e
ror byte [rdx + rsi*2], 1
xchg eax, ecx
mov esi, 0xef170710
adc ecx, dword [rsi]
retf -0x19a1
or eax, 0x1b08727f
xchg eax, edx
out dx, al
or byte [rsi], cl
leave
cmp byte [r9 - 0x21], dil
adc eax, 0x11d87f3f
fmul st(1)
cwde
rol byte [rax - 0x11], 1
iretd
adc cl, byte [rsi]
pop r14
enter 0x17b3, -0x48
cmpsd dword [rsi], dword ptr [rdi]
jo 0x401e84
test byte [rbp + 0x58], bl
iretd
out dx, eax
and r13d, dword [r15 + 0x217847a9]
cmp r15b, r11b
scasd eax, dword [rdi]
adc al, byte [rcx]
setl byte [rip + 0x163f1392]
pop rsi
pxor mm1, qword [rdx - 0x6f1bf43d]
movzx cx, word [rdi]
cmp byte [r13 + r9*2 + 0x2fbe1ac9], r8b
fmul dword [rdi]
add dword [rsi], eax
mov ebx, 0x2fecffc0
add bh, 0x90
fmul dword [rbx]
or eax, 0x1081d710
adc byte [rdx - 0xe], dh
insb byte [rdi], dx
or byte [rdx - 0x27bc7bf5], dl
stosb byte [rdi], al
hlt
adc byte [rdi + 0xe], cl
enter 0x113d, -0x75
adc dword [rbx], esi
enter -0x6c37, 0x2f
xchg dword [rcx], esp
cdq
or al, 0xd7
retf -0x3080
bswap ecx
sbb byte [r8 + rdx*2 + 0x18], spl
jg 0x401f2c
mov dh, 0xc0
in al, 0xf6
adc edx, ebx
ja 0x401ede
stosb byte [rdi], al
cld
jmp qword [rbx + 0x72]
je 0x401f50
je 0x401f54
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
sti
mov edi, 0x65505fb5
jb 0x401f5b
imul ebx, dword [edx], 0x6d745f06
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401f26
in eax, dx
mov edi, 0x6f64bdbd
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x401f76
jne 0x401f92
pop rdi
jg 0x401f1a
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x401f8f
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0x5f243538
imul bp, word [rsi - 0x73], 0xdbff
outsb dx, byte [rsi]
imul ecx, dword [rax], 0x79617272
pop rdi
outsb dx, byte gs:[rsi]
je 0x401fb1
jns 0x401f52
or ch, byte [rbp + 0x65]
mov edx, 0x20df7301
jne 0x401fb8
insd dword [rdi], dx
jns 0x401f80
or eax, 0xff74295f
in eax, dx
jbe 0x401f18
sub dh, byte [rax + 0x62]
popfq
jo 0x401fcc
and eax, 0x4c74535a
xor dword [rcx], edi
jo 0x401fce
sti
mov dh, 0xb5
mul byte [rbp + 0x63]
ja 0x401f08
js 0x401fdf
movabs al, byte [0xd6ee751a74637572]
xor esi, dword [rcx + 0x76]
movsxd rsp, dword [rcx + 0x73]
fxch st(0), st(6)
mov dh, 0x9f
adc al, 0x36
imul esp, dword [rdi + 0x6e], 0x380c650f
push -0x24819097
out dx, al
pop rsi
cmp qword [rdx + r11], r9
jne 0x401fe3
js 0x402019
xor r14b, byte [rcx]
mov ebx, 0x65b4edb6
cmpsw word [rsi], word ptr [rdi]
insb byte [rdi], dx
js 0x401ff0
imul ebx, dword [rdi + 0x70], 0x6f
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0xb833d845
rcl dword [rdi + 0x30], 0x1b
sbb dword [rcx], edx
test al, 0x5a
xor dword [rsi + 0x3012675f], edx
imul byte [rbp - 0x48]
mov ebp, 0x5d3e70d9
adc dh, byte [rcx]
xor eax, 0xd8786541
mov dh, 0xbd
popfq
movsd dword [rdi], dword ptr [rsi]
enter 0x4c73, 0x35
push rbx
mov dh, 0x45
cmpsb byte [rsi], byte ptr [rdi]
mov al, 0x6f
test al, 0x73
jne 0x402055
jae 0x402014
cmp byte [rcx + 0x5fef615d], ah
imul ebp, dword [rbp + 0x69], 0xa37417a
add esp, edi
mov dh, 0xc2
pop rdx
jmp qword [rax]
movsd dword [rdi], dword ptr [rsi]
push r11
fisubr dword [rcx]
lodsb al, byte [rsi]
sub eax, 0x244a69f4
xor eax, 0xb5b0a562
adc eax, 0xd86a9d6
outsb dx, byte [rsi]
fadd dword [rbp + 0x6412b614]
and dword [rdi - 0x44e39489], eax
ret 0x53b6
xor al, 0x67
adc dword [rax + 0x7b], esi
test bl, bl
and spl, dl
insd dword [rdi], dx
fisub word [rbx + 0x68]
lodsb al, byte [rsi]
or eax, dword [rbp + 0x51273654]
xchg eax, ecx
ror byte es:[rdx], 0x13
sub al, 4
mov dl, 0x85
ja 0x402080
test dword [rbp - 0x4d], ebp
sub edi, dword [rcx]
or edi, dword es:[rcx + 0x4a]
sub dword [rbp + rbx*2 - 0x1491cb8e], 0x70d6f69b
xchg eax, ebx
adc dword ss:[rsi], ebx
sub dword [rdi + 0x75], ebp
jae 0x4020a0
outsd dx, dword fs:[rsi]
fist dword [rax + rsi*2 + 0x18]
jbe 0x4020fa
jbe 0x4020e1
imul edx, dword [rbp + 0x2a], 0x340e95c1
sub ax, 0x556a
mov dh, 0x11
in al, dx
xor byte [rax], ch
fldenv [rbp + rcx*2 - 0x27]
mov ch, 0xcd
adc eax, 0x2837f570
pop rdx
scasb al, byte [rdi]
cmp byte [rip + 0x322b6c17], al
add rsi, qword [r11]
xchg eax, esp
jb 0x40209b
hlt
sub esp, 0x2731a6c1
je 0x402132
jo 0x4020e0
in al, dx
xchg eax, ebp
pop rdx
xchg eax, ebx
xor ah, dh
movsb byte [rdi], byte ptr [rsi]
je 0x40207b
xchg eax, ebp
movabs rax, qword [0xee654e74661be723]
push rsp
jb 0x4020fc
and eax, 0x96406170
add cl, bl
outsb dx, byte [rsi]
cdq
movabs dword [0xc94e286434c8766c], eax
test eax, 0x6e246dac
sbb byte [rbx + rsi*2 + 0x70], dh
test dword [rsi - 0x48caecdc], esp
xchg byte gs:[rbx], dh
cwde
pop rsp
sub dword [rsi], esi
sub eax, 0xc2b2ae12
js 0x40216e
jp 0x40217c
cmp esi, dword [rsi - 0x20]
js 0x4020ed
cmp byte [rcx + 0x5f01b174], ah
push rbx
mov esp, 0x230e1a05
mov ebp, 0xe12264a2
cmp al, byte [rsi + 0x2b]
stc
or eax, 0x3b365a79
rcl esi, 0xc
mov esp, 0x35427984
rol dword [rbx + 0x33], cl
xor eax, 0x8fed77ff
imul rcx, qword [r13 + rbp*2 + 0x33], 0x5f370045
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
movsq qword [rdi], qword ptr [rsi]
lea ebx, [rdi - 5]
push r12
adc byte [rsi], r14b
xor eax, 0x10764073
sbb al, 0x4c
and byte [rbx + 0x31bae667], dh
sub byte [rbx], dl
imul edi, dword [rax + 0x7a], 0x19bfae0d
mov eax, 0x9564bfa6
or dword [rdi], 0x30
imul edi, dword [rcx + 1], 0x2f69b7f7
xor r9b, bl
pop rdi
pop r15
js 0x40218b
int 0x7d
xor bl, byte [rdi + 0x52]
push rdx
push rbx
push rdx
pop r15
push rsp
retf
xchg eax, ebx
popfq
push 0xb
push rbp
and dil, sil
mov bh, 0x4f
test byte [rax + 0x44], 0x52
push rbx
pop rdi
push rsp
sub byte [r15 + 0x198909b0], r14b
adc byte fs:[rcx + 0x41ddbdf8], ah
jb 0x4021a1
pop rcx
add byte [r15 + 0x57], sil
and eax, dword [rdx + 0x69]
cmp byte [rdi], dh
fild qword [rbx - 0x2974521f]
jb 0x402219
movsxd rdi, dword [r8d + 0x31]
or bl, dh
mov dh, 0x66
fidivr word [rip + 0x45107344]
push rbx
pop rbp
mov dword [rsi - 0x19], esi
add al, 0
jbe 0x402251
jae 0x402276
je 0x40227b
movabs byte [0x42498a404066edfd], al
pop r15
xor ch, byte [rsi]
add edx, ebx
cli
xchg ax, cx
push 0x634262db
fcmove st(0), st(7)
jle 0x402252
mov bh, 0xdb
sub eax, 0x6d671878
inc dword [rbx - 0x7489b52e]
in eax, dx
sal esp, 1
insb byte [rdi], dx
jbe 0x4022aa
cmp ebp, eax
sahf
sbb eax, edx
sub al, 0x11
sub byte [rsi - 0x38], ah
ficom word [rdi]
jo 0x4022be
je 0x4021de
jne 0x4021e8
movsxd rsp, dword [rcx]
lcall [rdi + 0x73]
xor al, 0xf2
imul edi, dword [rbx + 0x3143f349], -0x5b
pop rax
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x64
lodsd eax, dword [rsi]
xor eax, 0x9d40811b
mov r14b, 0x85
ret
xchg byte [rdx], dh
or al, 0x61
jg 0x4022ec
sub al, byte [rbp + rdx*4 + 0x2c65803d]
outsd dx, dword [rsi]
or dword [rbx + 0x79], edi
jo 0x4022d1
push r11
xor al, 0x5f
mov ecx, dword [rsi + 0x31]
add byte [rsi + rdi*2 + 0x25], dh
fsub dword [rdx + 0x6c]
mov bh, 0x44
push r12
pop r15
sti
sal byte [rsi + 0x430c6c84], 1
push 0x54
push rdx
ret 0x6c82
xchg eax, edx
sbb al, byte [rsi]
test byte [rsi + 0x64384f65], 0x5f
jne 0x40225e
fnstsw dword [rbp + 0x48]
jp 0x402315
sbb eax, 0x6d457869
xor dword [rdi + 0x76], edx
sbb byte [rax], ah
xchg rax, rcx
jne 0x40231b
or dword [rbp + 9], ecx
sbb ecx, dword [rsi + rbp*2 + 0x66]
push -0xe5184b5
ja 0x40230d
imul ebp, dword [rsi - 0xe], 0x4cffcc6c
nop
int1
mov r12d, 0xb7635049
xor al, 2
cmp esp, dword [rsi - 4]
push rdx
push rax
nop
push rdi
sub ch, byte [rdi]
popfq
mov dh, 0x87
or eax, 0xf4a0b52
and al, 0xdc
jo 0x402311
xor byte [rdi - 0x6f], bl
nop
and byte [rax - 0x3cb8bd88], dl
jb 0x402302
imul ebp, dword [rdx + 0x46475112], 0xf3440a9
or al, 0xe3
jp 0x4022da
pop rdi
push 0x298bcb75
movabs eax, dword [0x4244686939d14621]
or dword [rdi + 2], esp
push rsi
or byte [rbx + 0x7b], bl
sahf
cmp byte [rdi - 0x58], bl
and dh, byte [rsi + rdx*8 - 0x4dcf6546]
sub dword [rbx - 0x53e5f22b], esi
ret 0x3d5d
or al, 0x61
lodsb al, byte [rsi]
add al, 7
or byte [rsi], bl
and al, 0x88
mov word [rbp - 0x1dba95ec], fs
mov ecx, 0x33606600
jb 0x40231b
jmp 0xffffffffb16dce79
xor dword [rsi], ecx
or al, 0x9b
push rdi
mov ebp, 0xbc0b854
cmp ah, ch
xor ebx, dword [rdi - 0xa]
cmp byte [rax], ah
xor esi, ecx
je 0x4023c6
cmp ebx, ecx
imul esp, dword [rsi + rax*4], 0x62491a51
mov word cs:[rcx], fs
sbb ebx, 0x586b6843
xor al, 0x6c
mov al, 0x32
ficomp word [rbx]
movsxd rdx, dword [rdi - 0x2f6e6ec5]
cmp ebx, dword [rbp - 0x37898294]
or byte [rdi - 0x688ccbf2], ch
xor dword [rdx], ebx
imul eax, dword [rcx + 6], 0xb74b7785
sub dword [rdx + 0x794b7846], edx
cmp ecx, edx
jae 0x40243c
in al, dx
add byte [rbx], bh
stosb byte [rdi], al
movsxd r11, dword [r10 + 0x4e70ee52]
adc byte [rsi + 0x67], al
jo 0x402455
cmp al, 0x45
add ch, ch
ja 0x40242b
push rdx
push rax
movsxd rsp, dword [r15 + 0x2b]
and eax, 0xc8335e1d
scasd eax, dword [rdi]
add byte [rdx], dh
or edi, ecx
mov r12d, 0x90b6b51a
out 0x7f, al
push -0x45
movabs eax, dword [0x5f80e16e44d7d5b6]
jbe 0x402442
xor eax, 0x5c2da5d6
xor dword [rsi + 0x49], ebx
fisubr word [rsi]
xor esi, dword [rsi - 0x4d]
out dx, al
or bh, byte [rbx]
insb byte [rdi], dx
jae 0x4023b6
push rdx
sbb byte [rbx], dh
mov esp, 0xb90b5836
outsd dx, dword [rsi]
mov ebp, 0x53016ded
fucomi st(5)
test dword [rbp + 0x5318e2a7], esi
xor eax, 0x6cc1006d
sub dh, byte [rcx]
test dword [rip + 0x2086e6a], esi
test dword [rbp - 0x60], esp
test byte [rbx], dh
push rbp
outsb dx, byte [rsi]
ja 0x40243f
outsb dx, byte [rsi]
mov ecx, 0x3f6434d8
fldcw word [rbp + 0x65]
cmp al, 0x58
nop
shr byte [rbx], 1
xor byte [rbx - 0x2a], al
add al, cl
adc eax, 0xb1499360
xchg eax, edx
cmp bh, byte [rax + 0x35]
cdq
outsb dx, byte [rsi]
sub dh, byte [rcx - 0x7f9badce]
fnstcw word [rbx]
enter -0x188, 0x73
push rbx
push rax
mov dl, 0xdb
clc
sub dword [rax], eax
jae 0x402505
insd dword [rdi], dx
outsd dx, dword [rsi]
je 0x402504
pop rbx
push rbx
sbb esi, dword [rsi + 0x68]
or dword [rdi + 0x29], ecx
jo 0x4024a3
outsb dx, byte [rsi]
add eax, 0x6f963adb
sub rax, 0x6c0d6715
test eax, 0x2e55375b
jne 0x40243b
sub eax, 0x6e0d00a0
mov esi, edx
pop rdx
jb 0x4024f4
or dword [rdx + 0x6e], esi
retfq -0x298f
sbb dword [r14 - 0x6a], r14d
jo 0x4024df
or al, 0x5f
sbb esp, dword [rbp - 0x25]
sub bl, al
imul edi, dword [rdi], 0x28
or dword [rdx], edi
je 0x40254e
enter -0x3093, -0x3f
out dx, eax
or ch, byte [rdi + rbp*2]
or byte [rax - 0x23], cl
and esp, dword [rdi - 0x34]
add eax, 0x186f2490
lodsb al, byte [rsi]
sbb ecx, esi
push 0xd976852
pop rdx
mov ch, 0x42
mov bh, 0x5d
movsxd rax, dword [rsi + rbp]
rcl byte [rdx - 0x56dea28e], 1
mov ebp, 0x1642116c
sti
mov al, 0xd9
or ebp, dword [r10 + 0x63]
jb 0x4024b7
xor byte ss:[rbx + 0x3785bd], bl
push -0x3292a185
push rbp
xor esi, dword [rsi + 4]
leave
push rdx
std
add byte [rdx + 0x800754], bl
sbb eax, dword [rbx + 0x24c149bd]
out 0xaf, al
or al, 0xc9
nop
pushfq
sbb al, 1
and ecx, eax
and byte [rbx], al
rol byte [rdi], cl
push rsp
push rsp
xor ah, byte [rbx + rax*2]
xor ah, byte [rax]
add al, 0x31
xor cl, al
and byte [rbx + 0x74], al
je 0x402579
cmp esp, esp
fst qword [rax + 0x44]
jg 0x402552
ljmp [rdi - 0x68]
nop
cwde
xor byte [rip + 0x19219a40], al
or byte [rsi + 0xb], cl
sbb dword [rax + rcx*8 + 0x3f], ebp
enter 0x348, -5
nop
leave
sbb byte [rsi - 0x44], dl
pop rcx
rcl dword [rdx - 0x16f888fd], 0x2e
xchg eax, edx
sbb dword [rip - 0x260040a2], eax
wait
adc eax, 0xbf079f2c
fst qword [rax + 0x246c90d]
imul edi, dword [rdi], -2
outsb dx, byte [esi]
xor ah, byte [rax]
jo 0x4025af
cmpsd dword [rsi], dword ptr [rdi]
nop
wait
mov dl, 0xc9
and byte [rsi], al
jp 0x402601
push rsi
mov al, 0xa4
add al, 0xef
or al, 0xc1
pop rbx
and al, 0x3f
inc dword [rdi + rdi - 0x6f9be6f9]
xor byte [rax], sil
mov eax, 0xc8030802
and eax, 0x78138e19
xor ebp, dword [rax + 0x32]
outsd dx, dword [rsi]
and dword [rbx], ebx
lcall [rdx]
mov dword [rdi], edi
pushfq
loopne 0x402609
adc byte [rdi + 7], ah
jo 0x4025c8
nop
or eax, 0x71090d9
xchg eax, esp
sal byte [rax + 0x13], 0x88
pop qword [rdi]
and ah, byte [rdi + rax*2 - 0x4a]
setge byte [rdi]
cmp dword [rbx + rdi], 0x7f11b704
adc dl, byte [rbx]
add byte [rcx], ah
cmp dword [rdi + rdi - 0x5d], ebp
push rax
jb 0x4025f6
dec dword [rcx]
enter 0x4360, -0x2e
test eax, 0x203f20bf
sbb dword [rdx + 0x1c5390b], edx
and byte [rcx + 0x210126e6], dh
jg 0x402646
fst dword [rax + 0x72]
cld
mov edi, 0xde13c93f
adc dword [rdi + 7], 0x3f
push rsp
add al, 0xc
and ah, byte [rdi + rdx - 0x37]
jg 0x4025cb
xchg eax, edx
mov bl, 0xdc
jg 0x402608
fild dword [rdx]
xor al, 0xab
jmp 0x4025f8
sub byte [rcx], bh
loope 0x4026a3
lahf
mov edi, 0x90193710
outsb dx, byte [rsi]
out 0x3f, eax
psubb mm0, qword [rdi]
out 2, eax
add al, 0xff
add ch, byte [rdx + rsi*4 - 0x80]
xchg eax, edi
wait
sub eax, 0x1f9bf8e9
or al, 0xc9
leave
xor edi, dword [rdi - 0x10]
add dword [rsi], eax
adc byte [rax - 0x677cde93], dl
mov edi, 0x8b90722f
or byte [rcx], al
add eax, ecx
movsb byte [rdi], byte ptr cs:[rsi]
xor byte [r8 - 8], spl
add dword [rdi], edi
mov al, 0x23
mov ecx, 0x31ff310a
mov edx, 0x1017e4a1
or dh, cl
sub ch, dl
and byte fs:[rdi - 0x626faf41], dl
sbb al, 0x4a
adc eax, 0x58173001
or bl, ah
mov al, 0x3f
xor al, 0x3f
sbb dword [rdi + 0x7b11766c], esp
add byte [rsi + 0x19b27f53], ch
mov esp, esp
add dword [rbx + 0x67939a00], edi
mov ebp, 0x38ff3150
adc byte [rdi], bl
jb 0x4026ea
sbb eax, dword [rax + 9]
jg 0x40266f
add r8b, al
and bh, byte [rcx + 0x26]
adc al, byte [rcx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
and bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip + 0x27080216], ecx
int 0x7f
xchg eax, ebp
std
mov edi, 0x2bb954
add byte [rbp + 0xc], bl
add byte [rax], al
rcr byte [rax + rax], 1
add byte [r8], al
mov ecx, 0xf4
