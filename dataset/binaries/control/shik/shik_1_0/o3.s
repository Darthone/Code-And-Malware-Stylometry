xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6030c7
push rbp
sub rax, obj.std::cout
cmp rax, 0xe
mov rbp, rsp
jbe 0x400db0
mov eax, 0
test rax, rax
je 0x400db0
pop rbp
mov edi, obj.std::cout
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.std::cout
push rbp
sub rsi, obj.std::cout
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400df8
mov eax, 0
test rax, rax
je 0x400df8
pop rbp
mov edi, obj.std::cout
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x2023d1], 0
jne 0x400e1a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x2023be], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400e30
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400e2b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
mov rsi, rdi
xor eax, eax
mov edi, 0x401e84
jmp sym.imp.scanf
nop
mov rsi, rdi
xor eax, eax
mov edi, 0x401e87
jmp sym.imp.scanf
nop
mov rsi, rdi
xor eax, eax
mov edi, 0x401e8b
jmp sym.imp.scanf
nop
mov rsi, rdi
xor eax, eax
mov edi, 0x401e8f
jmp sym.imp.scanf
nop
mov rsi, rdi
xor eax, eax
mov edi, 0x401e93
jmp sym.imp.scanf
nop
ret
nop dword [rax]
nop word cs:[rax + rax]
mov edx, dword [rdi]
mov esi, 0x401e84
mov edi, 1
xor eax, eax
jmp sym.imp.__printf_chk
nop dword [rax]
nop word cs:[rax + rax]
mov rdx, qword [rdi]
mov esi, 0x401e87
mov edi, 1
xor eax, eax
jmp sym.imp.__printf_chk
nop
nop word cs:[rax + rax]
ret
nop dword [rax]
nop word cs:[rax + rax]
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x58
mov rax, qword fs:[0x28]
mov qword [rsp + 0x48], rax
xor eax, eax
mov rax, rsi
mov qword [rsp + 0x10], rsi
mov qword [rsp + 8], rdi
shr rax, 0x20
mov dword [rsp + 0x18], edx
add esi, eax
lea r15d, [rsi + rdx]
test r15d, r15d
jle 0x401202
lea rdi, [rsp + 0x30]
mov qword [rsp + 0x28], 0
mov byte [rsp + 0x30], 0
xor r12d, r12d
mov ebx, 0xffffffff
mov qword [rsp + 0x20], rdi
mov qword [rsp], rdi
nop word cs:[rax + rax]
test ebx, ebx
je 0x401199
mov edx, dword [rsp + 0x10]
xor eax, eax
test edx, edx
sete al
neg eax
cmp ebx, 1
je 0x40104d
mov edx, dword [rsp + 0x14]
test edx, edx
je 0x401048
cmp eax, -1
je 0x401090
test r12d, r12d
je 0x400fb2
cmp edx, dword [rsp + 0x10]
jg 0x401090
cmp ebx, 2
je 0x4011fb
mov ecx, dword [rsp + 0x18]
xor eax, eax
test ecx, ecx
je 0x40105e
xor ebx, ebx
test r12d, r12d
je 0x401060
movsxd rax, ebx
cmp ecx, dword [rsp + rax*4 + 0x10]
jle 0x401060
mov edx, 4
mov ebx, 2
cmp rdi, qword [rsp]
mov rbp, qword [rsp + 0x28]
movsxd rax, edx
movzx r14d, byte [rax + str.ROYGBV]
lea r13, [rbp + 1]
je 0x4010d0
mov rax, qword [rsp + 0x30]
cmp r13, rax
ja 0x401068
mov byte [rdi + rbp], r14b
mov rax, qword [rsp + 0x20]
add r12d, 1
mov qword [rsp + 0x28], r13
mov byte [rax + rbp + 1], 0
movsxd rax, ebx
sub dword [rsp + rax*4 + 0x10], 1
cmp r15d, r12d
je 0x4010e0
mov rdi, qword [rsp + 0x20]
jmp 0x400f70
nop dword [rax]
cmp ebx, 2
je 0x401055
mov ecx, dword [rsp + 0x18]
test ecx, ecx
jne 0x4010b0
cmp eax, -1
je 0x401130
mov ebx, eax
lea edx, [rbx + rbx]
jmp 0x400feb
nop dword [rax]
lea rdi, [rsp + 0x20]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, rbp
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rdi, qword [rsp + 0x20]
jmp 0x401013
nop word cs:[rax + rax]
cmp ebx, 2
je 0x4011e7
mov ecx, dword [rsp + 0x18]
mov ebx, 1
test ecx, ecx
jne 0x400fcb
jmp 0x401060
nop dword [rax]
cmp eax, -1
mov edx, 4
mov ebx, 2
je 0x400feb
jmp 0x400fc9
nop dword [rax + rax]
mov eax, 0xf
jmp 0x40100e
nop word [rax + rax]
mov rdx, qword [rsp + 0x28]
cmp r15d, edx
jne 0x4011ce
mov rdi, qword [rsp + 0x20]
lea eax, [r15 - 1]
mov rsi, qword [rsp + 8]
cdqe
movzx eax, byte [rdi + rax]
cmp byte [rdi], al
mov rax, rsi
je 0x401138
add rax, 0x10
mov qword [rsi], rax
lea rax, [rsp + 0x30]
cmp rdi, rax
je 0x401182
mov rax, qword [rsp + 0x30]
mov qword [rsi], rdi
mov qword [rsi + 0x10], rax
mov rax, rsi
mov qword [rax + 8], rdx
jmp 0x40115a
nop
mov rsi, qword [rsp + 8]
mov rax, rsi
add rax, 0x10
mov qword [rsi + 8], 0
mov byte [rsi + 0x10], 0
mov qword [rsi], rax
lea rax, [rsp + 0x30]
cmp rdi, rax
je 0x40115a
call sym.operatordelete
mov rsi, qword [rsp + 0x48]
xor rsi, qword fs:[0x28]
mov rax, qword [rsp + 8]
jne 0x4011f6
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rcx, qword [rsp + 0x30]
mov rbx, qword [rsp + 0x38]
mov rax, rsi
mov qword [rsi + 0x10], rcx
mov qword [rsi + 0x18], rbx
jmp 0x401129
mov eax, dword [rsp + 0x14]
test eax, eax
jne 0x401099
mov eax, 0xffffffff
jmp 0x40104d
mov rdi, qword [rsp + 0x20]
lea rdx, [rsp + 0x30]
mov rbx, rax
cmp rdi, rdx
je 0x4011c6
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
mov ecx, str.std::__cxx11::string_greedy_std::array_int__3ul__
mov edx, 0x78
mov esi, str.sorted_code_control_shik_shik_1_0_pb.cpp
mov edi, str.SZ_s___n
call sym.imp.__assert_fail
mov edx, 2
mov ebx, 1
jmp 0x400feb
call sym.imp.__stack_chk_fail
xor ebx, ebx
jmp 0x401060
mov ecx, str.std::__cxx11::string_greedy_std::array_int__3ul__
mov edx, 0x6d
mov esi, str.sorted_code_control_shik_shik_1_0_pb.cpp
mov edi, 0x401e96
call sym.imp.__assert_fail
nop dword [rax + rax]
push rbx
mov esi, obj.n
mov edi, 0x401e84
xor eax, eax
mov ebx, obj.c
call sym.imp.scanf
nop word [rax + rax]
mov rsi, rbx
xor eax, eax
mov edi, 0x401e84
add rbx, 4
call sym.imp.scanf
cmp rbx, obj.n
jne 0x401240
pop rbx
ret
nop
push r14
lea r14, [rdi + 0x10]
test edx, edx
push r13
push r12
mov r12, rdi
push rbp
push rbx
mov qword [rdi], r14
mov qword [rdi + 8], 0
mov byte [rdi + 0x10], 0
jle 0x4012a8
mov rbp, rsi
mov r13d, edx
xor ebx, ebx
nop word [rax + rax]
mov rdx, qword [rbp + 8]
mov rsi, qword [rbp]
mov rdi, r12
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebx, 1
cmp r13d, ebx
jne 0x401290
pop rbx
mov rax, r12
pop rbp
pop r12
pop r13
pop r14
ret
mov rdi, qword [r12]
mov rbx, rax
cmp rdi, r14
je 0x4012c5
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
nop dword [rax]
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0xd8
mov edx, dword [rip + 0x201f09]
mov esi, dword [rip + 0x201f0b]
mov qword [rsp], rdi
mov edi, dword [rip + 0x201eed]
mov rax, qword fs:[0x28]
mov qword [rsp + 0xc8], rax
xor eax, eax
lea eax, [rdi + rdx]
cmp eax, esi
jne 0x401319
cmp edi, edx
je 0x40184c
mov r9d, dword [rip + 0x201ecc]
mov ecx, dword [rip + 0x201eba]
lea eax, [r9 + rcx]
cmp eax, esi
jne 0x401337
cmp r9d, ecx
je 0x4018fa
mov r8d, dword [rip + 0x201eb6]
mov eax, dword [rip + 0x201ea4]
lea r10d, [r8 + rax]
cmp r10d, esi
jne 0x401356
cmp r8d, eax
je 0x401995
cmp edi, edx
jl 0x401362
test edi, edi
jne 0x401430
test r9d, r9d
je 0x401370
cmp r9d, ecx
jge 0x401430
cmp r8d, eax
jl 0x40137e
test r8d, r8d
jne 0x401430
sub ecx, r9d
sub eax, r8d
sub edx, edi
mov dword [rsp + 0x10], ecx
mov dword [rsp + 0x14], eax
lea rdi, [rsp + 0x20]
mov rsi, qword [rsp + 0x10]
mov dword [rip + 0x201e52], edx
mov dword [rip + 0x201e3c], ecx
mov dword [rip + 0x201e3e], eax
mov dword [rsp + 0x18], edx
call sym.greedy_abi:cxx11_
mov r14, qword [rsp + 0x28]
test r14, r14
jne 0x401450
mov rcx, qword [rsp]
lea rdx, [rsp + 0x30]
mov rax, rcx
add rax, 0x10
mov qword [rcx], rax
mov rax, qword [rsp + 0x20]
cmp rax, rdx
je 0x401a2d
mov qword [rcx], rax
mov rax, qword [rsp + 0x30]
mov qword [rcx + 0x10], rax
mov rax, rcx
mov qword [rax + 8], 0
mov rcx, qword [rsp + 0xc8]
xor rcx, qword fs:[0x28]
mov rax, qword [rsp]
jne 0x401b67
add rsp, 0xd8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word cs:[rax + rax]
mov rcx, qword [rsp]
mov rax, rcx
mov qword [rcx + 8], 0
mov byte [rcx + 0x10], 0
add rax, 0x10
mov qword [rcx], rax
jmp 0x4013f9
nop dword [rax]
mov rdi, qword [rsp + 0x20]
lea rax, [rsp + 0x50]
mov qword [rsp + 0x48], 0
mov byte [rsp + 0x50], 0
mov qword [rsp + 0x40], rax
add r14, rdi
cmp rdi, r14
je 0x401a66
lea rcx, [rsp + 0x90]
mov rbx, rdi
xor r13d, r13d
lea r15, [rsp + 0xb0]
mov qword [rsp + 8], rcx
jmp 0x4014f1
nop word cs:[rax + rax]
mov byte [rax + r13], bpl
mov rax, qword [rsp + 0x40]
cmp bpl, 0x42
mov qword [rsp + 0x48], r12
mov byte [rax + r12], 0
je 0x401678
cmp bpl, 0x52
je 0x401538
cmp bpl, 0x59
jne 0x4014da
mov r12d, dword [rip + 0x201d24]
cmp r12d, 0
jne 0x401760
add rbx, 1
cmp r14, rbx
je 0x401620
mov r13, qword [rsp + 0x48]
mov rax, qword [rsp + 0x40]
lea rdx, [rsp + 0x50]
movzx ebp, byte [rbx]
lea r12, [r13 + 1]
cmp rax, rdx
je 0x401750
mov rdx, qword [rsp + 0x50]
cmp r12, rdx
jbe 0x4014a0
lea rdi, [rsp + 0x40]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r13
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x40]
jmp 0x4014a0
nop dword [rax]
mov r12d, dword [rip + 0x201cad]
cmp r12d, 0
je 0x4014da
mov rax, qword [rsp + 8]
mov ecx, 0x5247
mov qword [rsp + 0xa0], r15
mov qword [rsp + 0x88], 0
mov word [r15], cx
mov byte [rsp + 0x90], 0
mov qword [rsp + 0xa8], 2
mov byte [rsp + 0xb2], 0
mov qword [rsp + 0x80], rax
jle 0x40183b
mov rsi, r15
mov edx, 2
xor ebp, ebp
jmp 0x4015b0
nop dword [rax]
mov rdx, qword [rsp + 0xa8]
mov rsi, qword [rsp + 0xa0]
lea rdi, [rsp + 0x80]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebp, 1
cmp r12d, ebp
jne 0x4015a0
mov rsi, qword [rsp + 0x80]
mov rdx, qword [rsp + 0x88]
lea rdi, [rsp + 0x40]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
mov rdi, qword [rsp + 0x80]
cmp rdi, qword [rsp + 8]
je 0x4015f3
call sym.operatordelete
mov rdi, qword [rsp + 0xa0]
cmp rdi, r15
je 0x401605
call sym.operatordelete
add rbx, 1
mov dword [rip + 0x201bd9], 0
cmp r14, rbx
jne 0x4014e7
nop dword [rax]
mov rcx, qword [rsp]
mov rax, qword [rsp + 0x40]
lea rdx, [rcx + 0x10]
mov qword [rcx], rdx
lea rdx, [rsp + 0x50]
cmp rax, rdx
je 0x401a47
mov qword [rcx], rax
mov rax, qword [rsp + 0x50]
mov rbx, rcx
mov rdi, qword [rsp + 0x20]
mov qword [rcx + 0x10], rax
mov rax, qword [rsp + 0x48]
mov qword [rbx + 8], rax
lea rax, [rsp + 0x30]
cmp rdi, rax
je 0x4013f9
call sym.operatordelete
jmp 0x4013f9
nop dword [rax + rax]
mov r12d, dword [rip + 0x201b65]
test r12d, r12d
je 0x4014da
lea rax, [rsp + 0x60]
mov esi, 0x424f
mov qword [rsp + 0xa0], r15
mov word [r15], si
test r12d, r12d
mov qword [rsp + 0xa8], 2
lea rsi, [rax + 0x10]
mov byte [rsp + 0xb2], 0
mov qword [rsp + 0x68], 0
mov byte [rsp + 0x70], 0
mov qword [rsp + 0x60], rsi
jle 0x401834
mov rsi, r15
mov edx, 2
xor ebp, ebp
jmp 0x4016f0
nop
mov rdx, qword [rsp + 0xa8]
mov rsi, qword [rsp + 0xa0]
lea rdi, [rsp + 0x60]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebp, 1
cmp r12d, ebp
jne 0x4016e0
mov rsi, qword [rsp + 0x60]
mov rdx, qword [rsp + 0x68]
lea rdi, [rsp + 0x40]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
mov rdi, qword [rsp + 0x60]
lea rax, [rsp + 0x70]
cmp rdi, rax
je 0x40172a
call sym.operatordelete
mov rdi, qword [rsp + 0xa0]
cmp rdi, r15
je 0x40173c
call sym.operatordelete
mov dword [rip + 0x201a9e], 0
jmp 0x4014da
nop dword [rax + rax]
mov edx, 0xf
jmp 0x40150b
nop word [rax + rax]
mov rax, qword [rsp + 8]
mov edx, 0x5956
mov qword [rsp + 0xa0], r15
mov qword [rsp + 0xa8], 0
mov byte [rsp + 0xb0], 0
mov qword [rsp + 0x80], rax
mov word [rax], dx
mov qword [rsp + 0x88], 2
mov byte [rsp + 0x92], 0
jle 0x401845
mov rsi, rax
mov edx, 2
xor ebp, ebp
jmp 0x4017d0
nop word [rax + rax]
mov rdx, qword [rsp + 0x88]
mov rsi, qword [rsp + 0x80]
lea rdi, [rsp + 0xa0]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebp, 1
cmp r12d, ebp
jne 0x4017c0
mov rsi, qword [rsp + 0xa0]
mov rdx, qword [rsp + 0xa8]
lea rdi, [rsp + 0x40]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
mov rdi, qword [rsp + 0xa0]
cmp rdi, r15
je 0x401811
call sym.operatordelete
mov rdi, qword [rsp + 0x80]
cmp rdi, qword [rsp + 8]
je 0x401825
call sym.operatordelete
mov dword [rip + 0x2019c5], 0
jmp 0x4014da
xor edx, edx
jmp 0x40170c
mov rsi, rax
xor edx, edx
jmp 0x4015d5
xor edx, edx
mov rsi, r15
jmp 0x4017f5
mov ebx, esi
mov rax, qword [rsp]
lea r12, [rsp + 0xa0]
shr ebx, 0x1f
mov r9d, 0x424f
mov qword [rsp + 0xa8], 2
add esi, ebx
mov word [rsp + 0xb0], r9w
mov byte [rsp + 0xb2], 0
mov ebx, esi
lea r13, [rax + 0x10]
lea rsi, [r12 + 0x10]
sar ebx, 1
mov qword [rax + 8], 0
mov byte [rax + 0x10], 0
test ebx, ebx
mov qword [rsp + 0xa0], rsi
mov qword [rax], r13
jle 0x4013f9
mov edx, 2
xor ebp, ebp
mov rdi, rax
jmp 0x4018d4
nop word [rax + rax]
mov rdx, qword [rsp + 0xa8]
mov rsi, qword [rsp + 0xa0]
mov rdi, qword [rsp]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebp, 1
cmp ebx, ebp
jne 0x4018c0
mov rdi, qword [rsp + 0xa0]
add r12, 0x10
cmp rdi, r12
jne 0x401669
jmp 0x4013f9
mov ebx, esi
mov rax, qword [rsp]
lea r12, [rsp + 0xa0]
shr ebx, 0x1f
mov r8d, 0x5247
mov qword [rsp + 0xa8], 2
add esi, ebx
mov word [rsp + 0xb0], r8w
mov byte [rsp + 0xb2], 0
mov ebx, esi
lea r13, [rax + 0x10]
lea rsi, [r12 + 0x10]
sar ebx, 1
mov qword [rax + 8], 0
mov byte [rax + 0x10], 0
test ebx, ebx
mov qword [rsp + 0xa0], rsi
mov qword [rax], r13
jle 0x4013f9
mov edx, 2
xor ebp, ebp
mov rdi, rax
jmp 0x401984
nop dword [rax + rax]
mov rdx, qword [rsp + 0xa8]
mov rsi, qword [rsp + 0xa0]
mov rdi, qword [rsp]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebp, 1
cmp ebx, ebp
jne 0x401970
jmp 0x4018e0
mov ebx, esi
mov rax, qword [rsp]
lea r12, [rsp + 0xa0]
shr ebx, 0x1f
mov edi, 0x5956
mov qword [rsp + 0xa8], 2
add esi, ebx
mov word [rsp + 0xb0], di
mov byte [rsp + 0xb2], 0
mov ebx, esi
lea r13, [rax + 0x10]
lea rsi, [r12 + 0x10]
sar ebx, 1
mov qword [rax + 8], 0
mov byte [rax + 0x10], 0
test ebx, ebx
mov qword [rsp + 0xa0], rsi
mov qword [rax], r13
jle 0x4013f9
mov edx, 2
xor ebp, ebp
mov rdi, rax
jmp 0x401a1c
nop dword [rax]
mov rdx, qword [rsp + 0xa8]
mov rsi, qword [rsp + 0xa0]
mov rdi, qword [rsp]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_append
add ebp, 1
cmp ebx, ebp
jne 0x401a08
jmp 0x4018e0
mov rax, qword [rsp + 0x30]
mov rdx, qword [rsp + 0x38]
mov qword [rcx + 0x10], rax
mov qword [rcx + 0x18], rdx
mov rax, rcx
jmp 0x4013f1
mov rdi, qword [rsp + 0x20]
mov rax, qword [rsp + 0x50]
mov rdx, qword [rsp + 0x58]
mov rbx, rcx
mov qword [rcx + 0x10], rax
mov qword [rcx + 0x18], rdx
jmp 0x401652
mov rbx, qword [rsp]
mov rax, rbx
mov rcx, rbx
add rax, 0x10
mov qword [rbx], rax
jmp 0x401a4c
mov rdi, qword [rsp + 0xa0]
lea rdx, [rsp + 0xb0]
mov rbx, rax
cmp rdi, rdx
je 0x401a96
call sym.operatordelete
mov rdi, qword [rsp + 0x80]
lea rax, [rsp + 0x90]
cmp rdi, rax
je 0x401ab0
call sym.operatordelete
mov rdi, qword [rsp + 0x40]
lea rdx, [rsp + 0x50]
cmp rdi, rdx
je 0x401ac4
call sym.operatordelete
mov rdi, qword [rsp + 0x20]
lea rax, [rsp + 0x30]
cmp rdi, rax
je 0x401ad8
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
mov rdi, qword [rsp + 0x80]
mov rbx, rax
lea rax, [rsp + 0x90]
cmp rdi, rax
je 0x401afd
call sym.operatordelete
mov rdi, qword [rsp + 0xa0]
lea rax, [rsp + 0xb0]
cmp rdi, rax
jne 0x401aab
jmp 0x401ab0
mov rbx, rax
jmp 0x401ab0
mov rdi, qword [rsp + 0xa0]
mov rbx, rax
lea rax, [rsp + 0xb0]
cmp rdi, rax
jne 0x401a91
jmp 0x401a96
mov rdi, qword [rsp + 0x60]
mov rbx, rax
lea rax, [rsp + 0x70]
cmp rdi, rax
jne 0x401af8
jmp 0x401afd
mov rdi, qword [rsp + 0x60]
lea rdx, [rsp + 0x70]
mov rbx, rax
cmp rdi, rdx
jne 0x401af8
jmp 0x401afd
jmp 0x401ae0
call sym.imp.__stack_chk_fail
mov rbx, rax
mov rax, qword [rsp]
mov rdi, qword [rax]
cmp r13, rdi
je 0x401b80
call sym.operatordelete
mov rdi, qword [rsp + 0xa0]
add r12, 0x10
cmp rdi, r12
jne 0x401ad3
jmp 0x401ad8
jmp 0x401b6c
jmp 0x401b6c
nop
push r13
push r12
push rbp
push rbx
sub rsp, 0x58
mov rax, qword fs:[0x28]
mov qword [rsp + 0x48], rax
xor eax, eax
mov rax, qword [rip + 0x20161f]
lea rdi, [rsp + 0x20]
mov qword [rsp], rax
mov rax, qword [rip + 0x201617]
mov qword [rsp + 8], rax
mov rax, qword [rip + 0x201613]
mov qword [rsp + 0x10], rax
mov eax, dword [rip + 0x2015fc]
add eax, dword [rip + 0x2015f2]
add eax, dword [rip + 0x2015f4]
add eax, dword [rip + 0x2015f2]
add eax, dword [rip + 0x2015f0]
add eax, dword [rip + 0x2015ee]
mov dword [rip + 0x2015ec], eax
call sym.check_abi:cxx11_
mov rbp, qword [rsp + 0x28]
test rbp, rbp
je 0x401d58
cmp ebp, dword [rip + 0x2015d3]
mov ebx, ebp
jne 0x401dc3
test ebp, ebp
jle 0x401cb6
mov eax, 1
mov r13, qword [rsp + 0x20]
cdq
idiv ebp
movsxd rdx, edx
movzx eax, byte [r13 + rdx]
cmp byte [r13], al
je 0x401d91
lea rsi, [r13 + 1]
mov ecx, 1
jmp 0x401c7d
add ecx, 1
movzx edi, byte [rsi]
add rsi, 1
mov eax, ecx
cdq
idiv ebx
movsxd rdx, edx
cmp dil, byte [r13 + rdx]
je 0x401d91
cmp ebx, ecx
jne 0x401c60
xor r12d, r12d
nop dword [rax]
movsx esi, byte [r13 + r12]
mov edi, str.ROYGBV
call sym.imp.strchr
test rax, rax
je 0x401d78
sub rax, str.ROYGBV
add r12, 1
cdqe
sub dword [rsp + rax*4], 1
cmp ebx, r12d
jg 0x401c88
mov r8d, dword [rsp]
test r8d, r8d
jne 0x401daa
mov edi, dword [rsp + 4]
test edi, edi
jne 0x401daa
mov esi, dword [rsp + 8]
test esi, esi
jne 0x401daa
mov ecx, dword [rsp + 0xc]
test ecx, ecx
jne 0x401daa
mov edx, dword [rsp + 0x10]
test edx, edx
jne 0x401daa
mov eax, dword [rsp + 0x14]
test eax, eax
jne 0x401daa
mov rsi, qword [rsp + 0x20]
mov rdx, rbp
mov edi, obj.std::cout
call sym.std::__ostream_insert_char_std::char_traits_char__
mov rsi, qword [rip + 0x2014b8]
mov edi, 0xa
call sym.imp._IO_putc
mov rdi, qword [rsp + 0x20]
lea rax, [rsp + 0x30]
cmp rdi, rax
je 0x401d36
call sym.operatordelete
mov rax, qword [rsp + 0x48]
xor rax, qword fs:[0x28]
jne 0x401ddc
add rsp, 0x58
pop rbx
pop rbp
pop r12
pop r13
ret
nop dword [rax]
lea rdi, [rsp + 0x20]
mov r8d, 0xa
mov ecx, str.IMPOSSIBLE
xor edx, edx
xor esi, esi
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_replace
mov rbp, qword [rsp + 0x28]
jmp 0x401cff
mov ecx, str.void_solve__
mov edx, 0xab
mov esi, str.sorted_code_control_shik_shik_1_0_pb.cpp
mov edi, 0x401ece
call sym.imp.__assert_fail
mov ecx, str.void_solve__
mov edx, 0xa8
mov esi, str.sorted_code_control_shik_shik_1_0_pb.cpp
mov edi, str.ans_i___ans__i_1__n_
call sym.imp.__assert_fail
mov ecx, str.void_solve__
mov edx, 0xaf
mov esi, str.sorted_code_control_shik_shik_1_0_pb.cpp
mov edi, str.oc_i___0
call sym.imp.__assert_fail
mov ecx, str.void_solve__
mov edx, 0xa7
mov esi, str.sorted_code_control_shik_shik_1_0_pb.cpp
mov edi, str.SZ_ans___n
call sym.imp.__assert_fail
call sym.imp.__stack_chk_fail
mov rdi, qword [rsp + 0x20]
lea rdx, [rsp + 0x30]
mov rbx, rax
cmp rdi, rdx
je 0x401df8
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200fd6]
push rbp
lea rbp, [rip + 0x200fde]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401e56
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401e40
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
and eax, 0x6c250064
add byte fs:[rip + 0x2000666c], ah
and eax, 0x73250063
add byte [rsi + 0x3e], ch
xor byte [rax], al
push rbx
pop rdx
sub byte [rbx + 0x29], dh
cmp eax, 0x49006e3d
push r8
push r11
push rbx
add byte [r11 + 0x5a], r10b
push rbx
pop rdx
sub byte [rcx + 0x6e], ah
jae 0x401ede
cmp eax, 0x61006e3d
outsb dx, byte [rsi]
jae 0x401f18
imul ebx, dword [rbp + 0x21], 0x736e613d
pop rbx
sub byte [rcx + 0x2b], ch
xor dword [rcx], ebp
and eax, 0x70005d6e
je 0x401f43
add byte [rdi + 0x63], ch
outsd dx, dword [rsi]
movsxd rbx, dword [rbx + 0x69]
pop rbp
cmp eax, 0x4300303d
jae 0x401f44
and byte [rbx], ah
and eax, 0x203a64
add byte [rax], al
jae 0x401f59
jb 0x401f60
pop rdi
movsxd rbp, dword [rdi + 0x64]
movsxd rbp, dword [rdi + 0x6e]
je 0x401f6b
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x401f66
imul ebp, dword [rbx + 0x2f], 0x6b696873
pop rdi
xor dword [rdi + 0x30], ebx
jo 0x401f6e
movsxd rsi, dword cs:[rax + 0x70]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jbe 0x401f91
imul esp, dword [rax + 0x73], 0x65766c6f
sub byte [rcx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jae 0x401fb6
cmp bh, byte fs:[rdx]
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
cmp bh, byte [rdx]
jae 0x401fc4
jb 0x401fbb
outsb dx, byte [rsi]
and byte [edi + 0x72], ah
jns 0x401f84
jae 0x401fd2
cmp bh, byte fs:[rdx]
jb 0x401fd6
jns 0x401fa3
imul ebp, dword [rsi + 0x74], 0x7533202c
insb byte [rdi], dx
sub dword ds:[rax], eax
add byte [rax], al
add dword [rbx], ebx
add edi, dword [rbx]
test al, 0
add byte [rax], al
adc al, 0
add byte [rax], al
mov ebx, gs
push rsp
add byte [rax], al
add ah, cl
in al, dx
ljmp [rbx + rax]
add byte [rbp + rbp*8 + 0x3acffff], ch
add byte [rax], al
fsub st(5), st(0)
inc esp
add byte [rax], al
add ah, bl
out dx, al
lcall [rcx + rax]
add byte [rax], al
in al, dx
out dx, al
push qword [rcx + rax]
add byte [rax], al
cld
out dx, al
dec dword [rcx + rax]
add byte [rdi + rbp*8], cl
jmp qword [rcx + rax]
add byte [rdi + rbp*8], bl
jl 0x401fc7
add byte [rax], al
sub al, 0xef
call qword [rcx + rax - 0x10c40000]
ljmp [rcx + rax - 0x10a40000]
inc esp
add dword [rax], eax
add byte [rdi + rbp*8 - 1], bh
fadd qword [rcx]
add byte [rax], al
mov edi, gs
call qword [rdx + rax]
add byte [rax], al
lodsb al, byte [rsi]
ljmp [rdx + rax]
add ah, ch
dec dword [rdx + rax - 0xca40000]
dec esp
add al, byte [rax]
add byte [rsp + rdi*8], ch
jmp qword [rbx + rax]
add byte [rax], al
inc esp
add eax, dword [rax]
add ah, bh
dec dword [rsp + rax]
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40203f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
adc ch, ch
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40206f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
nop
push qword [rax]
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rax + 0xfffffed], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
pop rsp
add byte [rax], al
add byte [rax + 0xfffffed], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
je 0x4020c6
add byte [rax], al
test al, 0xed
dec dword [rdi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
mov word [rax], es
add byte [rax], al
movabs al, byte [0xfffffed]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add byte [rax], al
add byte [rax + 0xfffffed], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
mov esp, 0x90000000
in eax, dx
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax + 0x13ffffed], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
in al, dx
add byte [rax], al
add byte [rax + 0x14ffffed], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add al, 1
add byte [rax], al
cwde
in eax, dx
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x402189
add eax, dword [rax]
or al, 0x40
add byte [rbx], al
sbb ecx, dword [rdi + rax]
or byte [rax + 0x54000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
jo 0x40217f
lcall [rbx]
add eax, dword [rax]
add byte [rsp + rbx*4], al
and eax, dword [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx - 0x6ff1bbf9], al
add dword [rbx], eax
imul eax, dword [rdx], 0x41380e0a
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
xchg eax, esp
add dword [rax], eax
add byte [rax], bh
add byte ds:[rax], al
add byte [rax], al
adc byte [rbx + 0x80e7c02], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bh
add byte [rax], al
pushfq
add byte [rax], al
add byte [rax - 0x10], bl
ljmp [rbp]
add byte [rax], al
add al, 0xab
and eax, dword [rax]
adc byte [rsi + 0x180e4802], cl
lea eax, [rbx]
and byte [rsp + rax - 0x79d7f1bc], cl
add eax, 0x83300e41
js 0x40223a
sub byte [rsi + rcx + 0x20], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
push rsp
add byte [rax], al
add ah, bl
add byte [rax], al
add byte [rax - 0x31000010], cl
or byte [rax], al
add byte [rdi + rsi*4], al
and eax, dword [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx - 0x6ff1b8f9], al
add al, byte [rbx]
cmp al, byte [rcx]
or cl, byte [rsi]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rbx + 0xb], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx + rax], dh
add byte [rax], al
add cl, bh
jmp qword [rax + 2]
add byte [rax], al
add al, 1
and al, 0x40
add byte [rdx + 0xe], al
adc byte [rbp + 0x180e4202], cl
mov word [rbx], es
and byte [rsi + 0x280e4104], al
add dword [rip + 0x1800e44], 3
movsb byte [rdi], byte ptr [rsi]
add dword [rdx], ecx
sub byte [rcx + 0xe], al
and byte [rcx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rbx + rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp al, 0
add byte [rax], al
xchg eax, esp
add al, byte [rax]
add byte [rax - 0x17], bl
fild dword [rax]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rbp + 0x180e4202], cl
mov word [rbx], es
and byte [rsi + 0x280e4104], al
add dword [rip + 0x2400e51], -0x61
or cl, byte [rsi]
sub byte [rcx + 0xe], al
and byte [rcx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add al, byte [rax]
add al, bh
jmp 0x67232d
add byte [rax], al
add byte [rsi + rcx + 0x10], al
pop rbp
or byte [rax], al
add byte [rax], r8b
add ah, ch
add al, byte [rax]
add al, al
cli
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x40237a
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
xor al, 3
add byte [rax], al
call 0x3402387
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
or edi, edx
add al, byte [rip - 0x36fffa51]
add eax, 0xff000005
inc dword [rcx]
or byte [rbx], bh
add eax, 0x5680054
add byte [rax], al
inc dword [rcx]
fiadd word [rcx]
add eax, 0x4d20000
add eax, 0xe80010c4
add eax, 0x119205
mov al, byte [rsi]
add eax, 0xa5001090
or byte [rip - 0x3effef16], al
or byte [rip - 0x77ffef02], al
or al, byte [rip - 0x55ffef37]
or al, byte [rip - 0x7bfff057]
or al, 5
retf 0x11
mov ah, 0xd
add eax, 0xcc00119c
add eax, 0x8b0011cc
adc byte [rip - 0x10000], al
add dword [rdi], ecx
insb byte [rdi], dx
add eax, 0x2ec0000
rol dword gs:[rax + rax], -0x25
add al, 5
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or eax, 0x40
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, ah
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
fmul dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rsi + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sub eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], ch
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add byte [rax], dh
or byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add dh, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword es:[rax]
add byte [rax], al
add byte [rax], al
or eax, dword ss:[rax]
add byte [rax], al
add byte [rax], al
or r8d, dword [rax]
add byte [rax], al
add byte [rax], al
push rsi
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or ax, word [rax]
add byte [rax], al
add byte [rax], al
jbe 0x403055
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400b], al
add byte [rax], al
add byte [rsi + 0x400b], dl
add byte [rax], al
add byte [rsi + 0x400b], ah
add byte [rax], al
add byte [rsi + 0x400b], dh
add byte [rax], al
add dh, al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
out 0xb, al
add byte [rax], al
add byte [rax], al
add dh, dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x4f], dl
pop rcx
push rsi
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x403137
je 0x403140
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x40314e
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add dword [rax], eax
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002d000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax], ch
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add dh, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax], dh
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or dword [rax], eax
loopne 0x4031e2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add byte [rax], ch
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or eax, dword [rax]
fmul dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400c3000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rsi + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax + 0x401e], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rdi + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add byte [rax], ah
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
pushfq
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
call 0x409312
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
test al, 0x30
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add al, al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400d], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, al
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rbx], bl
add al, bl
xor dword [rax], esp
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
call 0x4094aa
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], ch
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, ah
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rcx + rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], ah
or eax, 0x40
add byte [rax], al
add byte es:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add dword [rax], eax
add byte [rcx], al
add byte [rbx], bl
add ah, bh
xor dword [rax], esp
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add dword [rax], eax
add byte [rcx], al
add byte [rdx], dl
add byte [rax + 0x4023], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add dword [rax], eax
add byte [rcx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], al
add byte [rax], al
add byte [rcx], dl
add byte [rdi + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 1], dl
add byte [rax], al
add dword [rax], eax
sbb dword [rax], eax
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 1], ch
add byte [rax], al
add byte [rax], al
adc al, 0
clc
sub eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jle 0x4035ab
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x4095e2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000001], dl
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 3], dh
add byte [rax], al
and byte [rax], al
sbb al, byte [rax]
test al, 0x30
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000001], bl
add byte [rsi], cl
add byte [rax + 0x1e], dh
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 3], dh
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0xd], dl
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000001], ch
add byte [rsi], cl
add al, dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov bl, 1
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ret 1
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, dl
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, ch
add dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x401b], ah
add byte [rax], al
add byte [rax + 2], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
hlt
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rax + 0x120000], ah
add byte [rsi + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], ch
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 2], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
insd dword [rdi], dx
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xe], dh
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 2], dh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop qword [rdx]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x1140375f
add byte [rdx], bl
add byte [rax + 0x6030], bh
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ch
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0x400b], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], dl
add eax, dword [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x11000003], ch
add byte [rax], dl
add byte [rax + 0x401e], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp al, 3
add byte [rax], al
adc al, byte [rax]
add al, dh
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 3], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
add eax, dword [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 3], ch
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
test al, 0x30
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rax], bh
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], al
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
sbb eax, dword [rbx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
pushfq
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xe], ah
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rax + 0x120000], ah
add byte [rax + 0x400e], dh
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x11000003], ch
add bl, byte [rdx]
add al, al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ecx, 0x11000003
add byte [rbx], bl
add al, al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
adc byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rbx], 1
add byte [rax], al
adc dword [rdx], eax
sbb al, byte [rax]
mov al, 0x30
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, bl
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dh
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax + rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 4], bl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jb 0x40390e
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x12], ah
add byte [rax], al
add byte [rax], al
add byte [rbp], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
add al, 0
add byte [rax], dl
add byte [rbx], bl
add byte [rdi + 0x6030], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x12000004], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, dl
add al, 0
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x400e], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bl
add al, 0
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], ah
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte ds:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
clc
xor dword [rax], esp
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x124039a1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 1], bh
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
add byte [rdx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x12000005], bh
add byte [rsi], cl
add byte [rax + 0x400e], ah
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 5], al
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x400e], dl
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 5], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs byte [0xbf001a0010000005], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x12000005
add byte [rax], al
add byte [rax], al
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, cl
add eax, 0x120000
add al, dl
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x110000
sbb eax, dword [rax]
sal byte [rcx], 1
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, 0x12000006
add byte [rsi], cl
add byte [rax + 0xc], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bh
add eax, dword [rax]
add byte [rdx], dl
add byte [rbx], cl
add al, bl
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
loopne 0x403b0b
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xe], dl
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x403b7a
jne 0x403b6e
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x403b2e
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403bac
jb 0x403bb2
pop rdi
jne 0x403bbb
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x403bb5
je 0x403bb1
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403bd1
jb 0x403bd7
pop rdi
jne 0x403be0
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x403be3
jns 0x403bd3
outsb dx, byte gs:[rsi]
je 0x403bea
jns 0x403b7a
jb 0x403bde
insd dword [rdi], dx
pop rdi
jne 0x403bf0
insd dword [rdi], dx
jns 0x403b86
pop rdi
pop rdi
jb 0x403bec
insd dword [rdi], dx
pop rdi
jne 0x403bfe
insd dword [rdi], dx
jns 0x403bf3
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403bfe
jns 0x403bfe
outsb dx, byte gs:[rsi]
je 0x403c15
jns 0x403ba5
jo 0x403c09
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x5a], bl
pop rdx
jb 0x403c18
jns 0x403bf9
xor eax, 0x31787863
xor dword [rbx + 0x74], edx
xor eax, 0x61727261
jns 0x403c0f
imul ecx, dword [rbp + rbp*2 + 0x33], 0x31454545
cmp dword [rdi + 0x5f], ebx
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
pop rdx
xor eax, 0x766c6f73
jbe 0x403c33
xor dword [rcx], edi
pop rdi
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x403c84
pop rdi
pop r15
pop rdi
pop rdx
xor bl, byte [rdi + 0x52]
push rdx
imul eax, dword [rax], 0x74535a5f
cmp byte [rdi + 0x5f], r11b
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdi
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403cd9
jns 0x403cd9
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403cea
jns 0x403cea
jae 0x403d01
jb 0x403d04
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdx
xor bl, byte [rdi + 0x57]
push rdx
js 0x403cb3
pop rdi
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x403d30
jb 0x403d33
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x403d25
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x403d46
jae 0x403cd6
pop rdi
pop rdx
insb byte [rdi], dx
push rax
jbe 0x403d1d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
xor eax, 0x766c6f73
jbe 0x403cf4
pop rdi
pop rdi
jae 0x403d6c
jb 0x403d70
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x705f5f00
jb 0x403d7d
outsb dx, byte [rsi]
je 0x403d7d
pop rdi
movsxd rbp, dword [rax + 0x6b]
pop r15
xor ch, byte [rsi]
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403d67
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x403dce
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x325a5f00
pop rdi
push rdx
push rdx
add byte fs:[rdi + 0x5f], bl
movsxd rdi, dword [rax + 0x61]
pop rdi
je 0x403de3
js 0x403de9
je 0x403dc2
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x403dcc
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403e0b
movsxd rbx, dword [rdi + 0x73]
je 0x403e19
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403e14
je 0x403e29
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rax], esi
pop rdi
pop r15
jb 0x403e30
jo 0x403e39
movsxd rsp, dword [rbp + 0x45]
insd dword [rdi], dx
insd dword [rdi], dx
push rax
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdx + 0x6c], dh
add byte [rdi + 0x5a], bl
push rbx
je 0x403e2a
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x403e7f
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x403ea7
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x5a], bl
xor dword [rdi + 0x76], edx
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x403ec1
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403ed6
pop rdi
jae 0x403eec
jb 0x403eef
add byte [rdi + 0x5a], bl
jb 0x403ee7
jns 0x403ec8
xor eax, 0x31787863
xor dword [rbx + 0x74], edx
xor eax, 0x61727261
jns 0x403ede
imul ecx, dword [rbp + rbp*2 + 0x33], 0x5f004545
pop rdx
xor bl, byte [rdi + 0x52]
push rdx
js 0x403ea4
pop rdi
pop rdx
xor bl, byte [rdi + 0x57]
push rdx
imul rax, qword [r8], 0x4d545f5f
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x403ef2
movsxd rbp, dword [rdi + 0x75]
je 0x403f03
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
jae 0x403f44
pop rdi
push 0x6c646e61
add byte gs:[rbx + 0x74], dh
jb 0x403f55
outsd dx, dword [rsi]
insb byte [rdi], dx
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x6c5f5f00
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x403f37
pop rdi
pop rdi
outsd dx, dword [rsi]
jae 0x403f80
jb 0x403f73
insd dword [rdi], dx
pop rdi
imul ebp, dword [rsi + 0x73], 0x49747265
movsxd rdx, dword [rbx + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403f81
je 0x403f96
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x403f61
xor esp, dword [rdx + 0x61]
jae 0x403f9e
movsxd rbx, dword [rdi + 0x6f]
jae 0x403fae
jb 0x403fa1
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
push rax
push r11
xor ebx, dword [rdi + 0x6c]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
jae 0x403fd4
jb 0x403fc5
push 0x47404072
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x335a5f00
jb 0x403fdc
jo 0x403fc7
push rbx
je 0x403fb3
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403ff2
movsxd rbx, dword [rdi + 0x73]
je 0x404000
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403ffb
je 0x404010
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
imul r8d, dword [r8], 0x73625f5f
jae 0x404013
jae 0x40402a
jb 0x40402d
add byte [rdi + 0x5f], bl
jae 0x404032
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
xor bl, byte [rdi + 0x52]
push rdx
movsxd rax, dword [rax]
pop rdi
pop rdx
xor eax, 0x75706e69
je 0x40405d
add byte [rdi + 0x5a], bl
push rbx
je 0x404025
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x404064
movsxd rbx, dword [rdi + 0x73]
je 0x404072
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40406d
je 0x404082
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
jo 0x404094
outsb dx, byte gs:[rsi]
push r8
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
xor dword [rdx + 0x76], edx
add byte [rdi + 0x5a], bl
xor bl, byte [rdi + 0x52]
push rax
movsxd rax, dword [rax]
pop rdi
pop rdx
push rbx
je 0x404088
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x4040c7
movsxd rbx, dword [rdi + 0x73]
je 0x4040d5
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4040d0
je 0x4040e5
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
insd dword [rdi], dx
jne 0x4040fb
je 0x4040ef
insd dword [rdi], dx
insd dword [rdi], dx
push rax
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x404109
add byte [rdi + 0x5f], bl
js 0x404126
pop rdi
jo 0x404116
jb 0x404126
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
pop rdx
xor eax, 0x63656863
imul eax, dword [rdx + 0x35], 0x63
js 0x40414f
xor dword [rcx], esi
jbe 0x4040db
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x404149
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x40415c
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
jae 0x404169
outsd dx, dword fs:[rsi]
jne 0x40416d
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4f495f00
pop rdi
jo 0x404182
je 0x404172
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x69616d00
outsb dx, byte [rsi]
add byte [rax], al
jae 0x40419f
insd dword [rdi], dx
je 0x40418a
add byte [rsi], ch
jae 0x4041a2
jb 0x4041a4
add byte [rsi], ch
jae 0x40419e
jae 0x4041ac
jb 0x4041ae
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x4041af
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x4041bd
outsb dx, byte cs:[esi]
jne 0x40418b
jne 0x4041c9
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x404199
push 0x687361
jns 0x4041e2
jae 0x4041ef
insd dword [rdi], dx
add byte [rsi], ch
jns 0x4041ea
jae 0x4041f2
jb 0x404180
outsb dx, byte cs:[esi]
jne 0x4041b3
jbe 0x4041ec
jb 0x4041fc
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x4041c0
jbe 0x4041f9
jb 0x404209
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x404204
insb byte [rdi], dx
jns 0x404213
add byte [rsi], ch
jb 0x40420e
insb byte [rdi], dx
jo 0x40421a
je 0x4041b0
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x4041e9
outsd dx, dword [esi]
je 0x4041bf
je 0x404227
js 0x404238
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x40423d
je 0x404233
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x404256
jo 0x40426a
pop rdi
je 0x40425a
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404268
jns 0x404209
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x404284
jns 0x404215
push 0x63
jb 0x40421a
jns 0x40428c
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x404296
je 0x40422c
je 0x404292
add byte [rsi], ch
jae 0x4042a9
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x404240
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 1
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rip + 0x40], al
add byte [rax], al
sub byte [rip], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
add byte [rax], al
add byte [rax], al
add dh, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x40449a
add byte [rax], al
add byte [rax], al
add al, ah
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
or dword [rax], eax
add byte [rax], al
add byte [rax], al
sub byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x19000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
or al, byte [rax]
add byte [rax], al
add byte [rax], al
fmul dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1000000], bl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dl, byte [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x600000001000000], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x401e], al
add byte [rax], al
add byte [rax + 0x1e], al
add byte [rax], al
add dl, dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rbx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdi + rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
and byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
jl 0x4046e5
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x40], bl
add byte [rax], al
pushfq
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
call 0x40478a
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sub eax, 0x60
add byte [rax], al
clc
sub eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6030], ch
add byte [rax], al
add byte [rax + 0x30], ch
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
mov edi, 0x30
add byte [rax], al
add byte [rax + 1], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x1000001
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x30], bh
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, byte [rcx]
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, byte [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
