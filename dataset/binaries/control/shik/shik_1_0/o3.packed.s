call 0x401580
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x401398
add ebx, ebx
je 0x40134e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x401386
cmp rbp, -4
ja 0x401386
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x40136e
add ecx, 4
mov dl, byte [rax]
je 0x401396
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x401386
ret
cld
pop r11
cmp r8b, 2
je 0x4013ae
jmp 0x40142b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x4013be
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x4013a6
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x4013d6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x4013c3
sub eax, 3
jb 0x4013f4
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x40142b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x40141b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x401419
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x401408
cmp rbp, -0xd00
adc ecx, eax
call 0x40135a
jmp 0x4013ae
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x401504
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x4014a2
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x4014ee
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x4014c1
push 0x3a707474
jne 0x40151a
js 0x4014da
jae 0x401514
outsb dx, byte cs:[rsi]
je 0x4014d3
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x401541
jb 0x401533
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x40155e
jb 0x401571
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x2126eb
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x2126eb
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x40143c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x401567
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x401515
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f160f
jb 0x401627
movsxd rbp, dword [rdi]
jae 0x401621
insb byte [rdi], dx
js 0x401627
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x401607
cmp rsi, rcx
jae 0x40160f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x4015ee
cmp al, 0x8f
ja 0x4015ee
cmp byte [rsi - 2], 0xf
je 0x4015f4
sub al, 0xe8
jg 0x4015f1
push rdi
cmp al, 1
ja 0x4015dc
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x4015df
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x40160c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x401663
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c1ae1
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x4016a7
mov al, 0xa
jmp 0x4016a7
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x401683
inc ebx
mov al, 0
jmp 0x4016ab
mov al, 2
jmp 0x4016ab
mov al, 3
jmp 0x4016ab
mov al, 0x3c
jmp 0x4016ab
push rcx
rcr ah, 1
fstp st(7)
jle 0x4016ec
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x4016fe
jg 0x4016f0
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a6e73
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x40174a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb68c7
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x401752
cmp esi, 0x21585055
jne 0x401756
jge 0x401748
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x40174b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x40174f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x4017fb
pop rcx
or al, 0x3b
jb 0x401801
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x401773
jmp 0x401775
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x36616b6
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf538fe
in eax, dx
jg 0x4017ad
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x4017f3
mov bh, 0x2a
add edi, 0x10
jmp 0x4017f0
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x40182d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x401869
jne 0x401880
fstpnce st(6), st(0)
jle 0x401849
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x40187f
jrcxz 0x4018b3
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1b817
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x401932
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x4018f2
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58295ec7
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x401965
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x4018ff
and ecx, 7
or al, 0xeb
jae 0x40196a
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x40199f
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x4019dd
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x401996
push rax
call 0xffffffff868d1683
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x4019a0
std
cmp edi, esi
xchg eax, edi
jle 0x4019f5
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c95f81
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x4019f3
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x4019e1
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x401a0a
js 0x401a4a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x401adc
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad2d17
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x401afd
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x401b02
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc215b4
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x401a90
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
or dword [rax], eax
add byte [rsi], cl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], dl
and byte [rdx], ch
nop
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
inc dword [rcx + 0x5d000019]
or byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rdi], bl
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x401bb6
je 0x401bbf
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x401b88
mov dh, 0x7d
jbe 0x401b87
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa9
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x401bc0
sahf
sahf
add al, 0
cwde
add eax, 0x1f90d000
and byte [rdi + 0x5280006], bl
add dh, bh
enter -0x37f9, 0xf
or byte [rax], al
xor byte [rax], cl
or dword [rax], eax
loopne 0x401b93
add esp, esp
adc ecx, dword [rdx]
add byte [rax], ch
or dword [rbx], ecx
add al, bl
or bl, byte [rax]
fild dword [rcx]
or al, 4
or esi, dword [rdi + 0xd]
add al, 0xf2
add dword [rsi + 0xe170c], esi
add dil, cl
add cl, bh
add byte [rsi + rbx + 0x10], dh
add byte [rax + 0x7c807e40], al
adc dword [rax], eax
je 0x401bf0
adc al, byte [rax]
and byte [rax], ah
enter 0x201f, 0x3f
adc eax, dword [rax]
pushfq
and edx, dword [rax + rax]
call 0x14247c11
enter 0x1503, 0
clc
add byte [rax], al
mov dh, 9
in al, 3
add byte [rax], cl
sbb byte [rdi + 0x2f], al
add ebp, dword [rcx + rdi + 0x40]
sbb dword [rax], esi
or esp, esp
or esp, esp
sbb al, byte [rax]
test al, 0x1b
add al, al
xchg eax, ecx
mov esp, 0x131cb29b
add dword [rdi], edx
add al, 0
int1
ljmp [rcx - 0x48]
mov dl, 0xd8
or al, 0x1b
mov edi, 0x64029719
nop
or dword [rbx + 0x17400d80], edi
sbb eax, eax
pop rbp
enter -0x79bf, 0x2e
add byte [rsi], cl
xor r11b, al
fldz
pop rdi
xor eax, 0x15f31d8
push rbx
mov al, 0x2b
and dword [rdi + 0x7a], ecx
and byte [r14 + 0x25], r14b
xchg byte [rsi + 0x27d7a597], r8b
cmp ecx, esi
adc byte [rdi + 0xd321f40], ch
xor cl, al
jrcxz 0x401c7c
or eax, 0x83939064
out dx, eax
add al, 1
and byte [rsi], ah
adc cl, dh
cmp dword [rbx], edi
add dword [rdi - 0x26f4b004], edi
int1
xchg byte [rdx], ch
outsd dx, dword [rsi]
cwde
and eax, dword [rax]
or esp, dword [rcx - 0x44]
cmp byte [rdi], dl
push rdi
in al, dx
push 0x4a4757cf
sbb byte [rbx + 0x2f6d2732], bh
adc al, 0x4f
push rbx
ret 0x7e6c
xchg eax, ecx
sub byte [r12 + r15*4 + 0x32], 0x9f
jno 0x401ca4
outsd dx, dword [rsi]
and ah, ch
sal dword fs:[rax], cl
adc dh, byte [rax + 0x1e]
add dl, byte [rdi]
ror dword [rsi - 0x62], 0x1c
jne 0x401cb7
push rax
or eax, 0x760e2f2a
jb 0x401c4c
stosb byte [rdi], al
ror byte [rsi], 1
adc al, 0x5f
mov bl, 1
or eax, 0x765761
ret 0xd617
jb 0x401c7d
sub ecx, dword [rbx + 0x5fea0047]
movabs al, byte [0x2f02607b3908761b]
hlt
lar edx, word [rdi]
pop rbp
pop rcx
out 5, eax
movsb byte [rdi], byte ptr [rsi]
add dword [rdi + 0x29], esp
in al, dx
adc byte [rsi], dh
test byte [rdi], ch
insd dword [rdi], dx
add ch, bh
sbb esp, esp
jo 0x401d07
jne 0x401c81
or byte [rbx], bl
call 0x19469c16
insb byte [rdi], dx
nop
mov eax, 0x80ec2f07
adc dword gs:[rsi - 0x50eea8fc], eax
or byte [r15 + 0x32d79c0], r10b
add al, 0xc7
in al, dx
test dword [rcx + rdi], edi
cmp al, 3
add ecx, dword [rdi + 0xbb0863a]
push rbp
pop rdi
outsd dx, dword [rsi]
adc byte [rdi], ah
sbb eax, dword [rax + 0x7c]
pop rdi
add byte [rdi], cl
sbb eax, dword [rbx + 0x72]
test byte [rbx], al
pushfq
add esp, dword [rax - 0x5c]
or al, 0x36
enter 0x1760, -0x50
adc edi, dword [rdi - 0x3593a953]
cli
add bl, byte [rdx]
fistp qword [rcx + 0x4192f7d7]
pop rsi
adc byte [rcx], al
sal byte [rax + 0x1b086c39], 1
fst st(7)
int1
cmpsd dword [rsi], dword ptr [rdi]
pop rbp
and byte [rdi], al
cmp esp, dword [rbp + 0x2f]
add dword [rsi + rbx*2], eax
movabs rsi, 0x436d12d772178433
bnd jae 0x401d8f
scasb al, byte [rdi]
add al, 0x1b
add byte [rdi + 0xe1392ba], bh
add al, 0x1f
add byte [rcx + rax*2 + 0x5fde1b06], 0x20
sahf
sbb al, 0x20
clc
xor dword [rdi + 4], ebx
nop
xchg dword [eax - 0x70fe8618], edx
add byte [rdx], dh
cmp esp, dword [rdi]
mov esp, 0xa00f053d
add eax, 0x21d8178f
cmp dword [rax - 0x5da0fab5], edx
xor dword [rdx + rcx*2 - 0x42], ebp
add eax, 0x2fa91aef
and al, 0xdf
retf -0x2fa1
adc cl, dh
or dh, cl
and dword [rdi], esp
fcomi st(3)
add eax, 0xf205d0ef
jnp 0x401e22
adc byte [rsi], ch
mov ebx, eax
sbb eax, 0xf7db5717
push rsi
sti
mov bh, 0xe1
ret 0x6720
pop rdi
loopne 0x401e14
adc eax, dword [rcx]
fild dword [rdx + 0x4e]
push rax
or dword [rbx + 0x72], esp
je 0x401e7c
je 0x401e80
imul di, di, -0xe
jmp qword [rbx]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
add byte [rbp + 0x72], ah
imul ebx, dword gs:[edx], 0xf77b7b06
jg 0x401e8b
je 0x401e9b
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x401e57
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx + 0x61]
insb byte [rdi], dx
or esi, edi
neg bl
jg 0x401eb8
outsd dx, dword [rsi]
jb 0x401eba
pop rdi
jne 0x401ec3
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x401ebc
sub dword gs:[rsi + rbp + 0x37], esp
xor eax, 0xb7f43538
mov edi, 0x665f24c0
imul ebp, dword [rsi + 0x69], 0x61727208
jns 0x401ec7
mov ecx, 0x9e6fb76f
jb 0x401ee9
add byte [rsi + 0xa], ah
insd dword [rdi], dx
and byte gs:[rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x401ead
cmp esp, dword [rcx - 0x23]
or byte [rip + 0x2a74295f], 0x70
popfq
lcall [rbx - 5]
jbe 0x401efc
jo 0x401eb3
pop rdx
pop rdx
xchg eax, ebp
jns 0x401ed8
xor eax, 0x31787863
xor dword [rbx - 0x41], edx
fdiv dword [rbp + rsi + 0x26]
imul rcx, qword [r13 + rbp*2 + 0x33], 0x39310045
push rax
push rdx
push r12
push rsp
in al, dx
out dx, eax
fdiv st(7), st(0)
pop rcx
pop rdi
push rbp
push r12
leave
xor eax, 0x766c6f73
jbe 0x401eeb
mov ch, 0xfd
and eax, dword [rdi + 0x4c]
or qword [rbx + 0x3a], r14
pop rdi
movabs r11, 0x525f325a06dfdcdd
push rdx
imul esi, dword [rdi], 0xe384c5f
imul ebp, dword [rdi - 0x70], 0xddff7876
movabs dword [0x4e455f454d415246], eax
xor r13d, dword [rbx]
or ebx, ecx
sub dword [rip + 0x554e474f], 0x48
and byte [rax + 0x44], cl
push rdx
push rdx
ret 0xdfde
push rbx
outsb dx, byte [rsi]
pop rdi
push rsp
sub r10b, r11b
pop rbp
sub ebp, dword [rsp + rbp*2]
adc byte fs:[rbx + 7], ch
mov spl, 0xc2
mov ebx, 0x494e59cb
sbb ebp, dword [r9 + r13*2 + 0x62]
movsxd rdi, dword [rcx - 0x6c]
or bh, byte [rbx + 0x3b237f]
xchg eax, esi
push rdi
push rdx
js 0x401f59
insd dword [edi], dx
lea ecx, [rdi]
sti
int 0x2e
jge 0x401f95
jbe 0x401efb
stosb byte [rdi], al
insb byte [rdi], dx
cmc
outsd dx, dword [rsi]
inc ebx
jae 0x401fca
cmpsd dword [rsi], dword ptr [rdi]
pop rdx
insb byte [rdi], dx
push rax
jbe 0x401f9e
test dword [rcx + 0x42], ecx
pop r8
pop rax
pop rdi
xor ebx, dword [rsi + 0x16b820b]
adc eax, dword [rip - 0x978dac0]
out dx, eax
cmp al, 0x66
imul ebp, dword [rsp + 0x5f], 0xbb012e32
mov bl, 0x65
mov bh, 0xdb
jo 0x401ff7
insb byte [rdi], dx
je 0x401fee
jbe 0x401ff2
imul ebx, dword [rcx], 0x3e
adc eax, 0x4e85850a
cmp byte [rbx], cl
int 0xd7
and di, word [rbx + 0x49343cbb]
mov bh, 0x43
xor dword [rbp + 0x63], eax
mov bl, 8
and ecx, ebx
insd dword [rdi], dx
pop rbp
outsb dx, byte [rsi]
pop rcx
mov ch, 0xad
sub eax, 0x61bef6bc
test byte [rax - 0xf24bb88], dh
mov edx, 0x37652191
fidiv word [rcx]
xor ch, byte [rdx + 0x5b]
imul esi, dword [rdi - 0x51], 0x69
xchg rax, rbx
movsxd rbx, dword [r9d]
adc dl, byte [rdi + 0x15b6f761]
sbb al, 0x90
cmp byte cs:[rbx + 0x10], dh
push r11
add al, 0xf1
mov dh, 0xf1
add eax, 0x4d5f30d5
pop rdi
jo 0x401fe7
movsxd rsp, dword [rbp + 0x45]
adc bl, byte [rbx - 0x3e]
mov esi, 0x634b5040
insd dword [rdi], dx
xchg eax, esi
pop rcx
xor dword [rdi], edx
mov ebp, 0x62ec0392
insb byte [rdi], dx
ret 0x4944
push rsp
sti
mov cl, 0x2d
movabs dword [0x3f6154fa430cfc4c], eax
scasb al, byte [rdi]
pop rbp
mov edx, 0x4f1b656e
mov word [rdi + rbx*2 + 0x75], fs
pop rsi
enter -0x1e82, 0x5a
xor dword [rdi + 0x4d], edx
jae 0x40208b
outsb dx, byte [rsi]
adc byte [r14 + 0x5a41c0b6], sil
mul byte [rcx - 0x16]
sbb byte [rbp + rax*2 + 0x782ecec6], al
or al, 0xc3
cdq
stc
imul ecx, dword [rsp + rsi*2 + 0x1c], 0x9d752e12
xor al, 0x79
jne 0x4020c2
in eax, 0x5f
sbb dword fs:[rbx - 0x50], ebx
pop rdi
and al, 0x5c
insd dword [rdi], dx
cmp byte [rax + 0x46], cl
sub byte [rdi - 0x1f], dil
push rsi
movsd dword [rdi], dword ptr [rsi]
outsb dx, byte [rsi]
fcmovne st(0), st(5)
xor dword [r14], r14d
adc eax, 0x83652c6f
jnp 0x401ff0
jo 0x402087
sbb ch, byte [rbp + rax*2 + 0x52]
adc esi, dword [rax + 0xc]
movabs eax, dword ss:[0xad0bb4da492d9233]
push rax
jl 0x40200d
je 0x4020dd
xor ebx, dword [rcx + 0x12]
mov dh, 0x77
and dword [rsi + 0x39], esi
add byte [rbx + 0x72], 0xe2
nop
cmp byte [rbx], dh
stosd dword [rdi], eax
out 0x45, al
imul edi, esp, 0xb93a5086
cmp eax, 0x66b6307
enter -0x5688, -0x38
xor al, 0x39
movsxd rdx, dword [rax - 0xcc24f4f]
push rdx
jo 0x4020dd
jbe 0x402114
push 0x395c756a
push rdi
js 0x40206e
cmp eax, 0x54c091db
add byte [rdx + 0x76], dl
insb byte [rdi], dx
push rax
movsxd rax, dword [rsi + 0x62915da9]
insd dword [rdi], dx
movabs al, byte [0x6532108d9d3bb90b]
cmc
push rdi
add cl, byte [rbx]
test dword [rdx - 0x63], edx
wait
fisubr word [rsi + 0x58]
sub eax, 0x42b56ed7
jbe 0x402123
sub esp, dword [rdi]
pop rdx
ret 0x4af6
pop rbx
mov dl, 0x31
movabs byte [0x8c1776d7106560eb], al
xchg rax, rdi
push rbp
outsb dx, byte [rsi]
ja 0x402186
sbb al, 0x74
mov ebx, 0x5beb0502
push rdi
push r11
xor byte [rsi - 0x38], al
js 0x402150
xchg eax, esp
mov cl, 0xd9
mov ah, 0xb0
xchg byte [rdi], ah
movsxd rdx, dword [rip - 0x244d893f]
outsb dx, byte [rsi]
jmp 0xffffffff80ad9aa5
je 0x4021a8
push -0x192469f7
sbb ch, byte [rdx]
nop
jo 0x402147
outsb dx, byte [rsi]
outsd dx, dword [rsi]
ret 0x6c1f
jmp 0x4020d0
sub eax, 0x670d6715
outsb dx, byte [rsi]
jne 0x40217e
jne 0x4020e9
pop rdx
lodsb al, byte [rsi]
hlt
sub eax, 0xfd0d2969
cmp byte [rcx], cl
pop rcx
wait
mov ecx, 0x4f6eed8d
sbb dword [r8 + 0x76dd6b09], r15d
imul edx, esi, 0x521b5f0c
mov al, 0x57
push 0x27
shr byte [rax], cl
or eax, esp
mov ecx, 0x74de39ed
jb 0x402138
or ch, byte [rdi + rbp*2]
or byte [rsi + rbp*8 + 0x5437380], al
and byte [rdi + rbp*2], ah
sub dword [rip + 0x2e78307b], ebp
push 0x7264684e
or eax, 0xd0ad5b5a
pop rbp
movsxd rcx, dword [rdi - 0x648fdcd2]
int 0x96
sub bl, 0xbd
insb byte [rdi], dx
adc dword [rbp + 0x43], edi
push 0xb8712b1
push 0x15
movabs eax, dword [0x6800c25bd9b31c36]
jnp 0x402222
pop rbx
jae 0x402199
add al, 0xf3
push rdx
std
add byte [rax], al
sub al, 0x8b
sbb r13d, dword [r11 + 0x6f6724af]
ja 0x4021e3
sbb al, 0x80
xor al, 0x43
xor al, byte [rcx]
and eax, dword [rdi]
nop
or al, 0x32
enter 0x5454, 0x20
enter 0xc90, -0x37
add al, 0x31
je 0x40222b
xchg eax, esp
or al, 0x32
je 0x40221d
jg 0x40218c
jns 0x4021f6
ljmp [rdi - 0x68]
cwde
sbb dword [rsp + rsi + 5], esp
or byte [rsi], al
sbb edx, dword [rax - 0x2ff4b19a]
sal byte [rdx + 0x5841d9c9], 1
add bh, bl
mov cl, 0xa4
sbb dword [rax + rbx + 0x56], esp
add edx, dword [rdx + 0x3f19bc27]
add al, byte [rsi + 0x2c]
jmp 0xffffffffffff8063
and al, 0x67
outsd dx, dword [rsi]
mov edi, 0x46070232
sub al, 0x7b
imul ebp, dword [r11], 0x3f
leave
and byte [rdi + 0x6f], ah
cmpsd dword [rsi], dword ptr [rdi]
mov al, 6
cwde
mov dl, 0xff
jp 0x4022a9
and dword [rdi], esp
mov eax, 0x3f07e0c9
mov al, 0xc1
or edi, edi
test byte [rdi], bh
jmp rsp
fnstcw word [rbx - 0x3c]
fild word [rdi]
mov al, 1
add byte [rcx + 0x6138e19], bh
or dword [rdi + 0x46], ebp
jmp qword [rdx]
leave
sbb cl, byte [rcx - 0x1ec6dec1]
nop
or esi, dword [rax + 0x30]
adc al, 0x21
sbb esi, dword [rdx + 0x3f940710]
mov dl, 5
xchg byte [rbx + 0xf2f0757], bl
jae 0x402234
and dword [rbx], edi
popfq
jg 0x4022e2
insb byte [rdi], dx
cmp dword [rdx + rsi], 0x99a33f12
wait
add al, 0x21
dec dword [rip + 0x9c94349]
test eax, 0xc90c80bf
and byte [rbx + 0x20f2803f], al
pop rbx
enter -0x4e70, 0x7f
sub byte fs:[rcx], bh
sbb dword [rdi], ebx
lodsb al, byte [rsi]
mov edi, 0x84566e01
enter 0x120e, -0x6e
leave
pushfq
in eax, 0x66
jg 0x402363
xchg eax, esp
fisttp dword [rsi]
add esp, esp
test byte [rdi], dh
and dword [rdi + 0x6410bf07], ebx
mov edx, 0xf3fe7a1
clc
popfq
or edx, dword [rax]
fadd qword [rdi]
push rbx
shl byte [rsi], 0x23
xchg eax, esi
xchg eax, edi
mov bl, 0xd9
xchg eax, edx
clc
wait
nop
pushfq
cmp al, 0x73
jg 0x402311
add dword [rsi], eax
fst dword [rsi]
xor cl, al
adc byte [rax - 0x46f8d041], bl
or byte [rcx], al
add dword [rax + rsi + 0x20], ebp
and al, 0x77
xor byte [rdi], bh
sbb dword [rdx + 0xaa8e4a1], edx
test al, 0x86
xchg eax, edx
xor esi, dword [rdi]
call qword [rdi]
adc byte [rcx], al
xchg eax, ebx
add ecx, ebp
or al, al
jns 0x4022e3
cmp al, 0xa3
mov edi, 0x1150140
and dword [rbx], edi
xor byte [rdi], dl
xor al, 0x3f
fldlg2
mov al, 0x10
adc dword [rbx], edi
leave
xor ecx, dword [rsi + 0x22]
jg 0x402391
add dword [rbx - 0x44cd27a4], eax
jg 0x402373
or byte [rbp + 0x59], cl
mov bl, 0x93
or bl, byte [rdi]
mov edi, edi
or dword [rcx + 0x7f84393c], edx
add byte [rbx], bh
and al, byte [rsi]
add byte [rax], al
add byte [rax], ah
nop
add byte [rax], al
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x3bf7fdea], ecx
cmpsb byte [rsi], byte ptr [rdi]
xor esi, ebx
cld
mov edi, 0x19812541
add byte [rax], al
pop rbp
or byte [rax], al
add byte [rax + 0x4a], al
add byte [rax], al
add byte [r8], al
mov bh, 0xf4
add byte [rax], al
add bh, bh
