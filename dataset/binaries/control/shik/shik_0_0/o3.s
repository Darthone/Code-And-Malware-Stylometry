xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x602077
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400930
mov eax, 0
test rax, rax
je 0x400930
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400978
mov eax, 0
test rax, rax
je 0x400978
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x2016f9], 0
jne 0x40099a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x2016e6], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x4009b0
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x4009ab
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
movsxd rdi, edi
movsxd rsi, esi
movsd xmm0, qword [rdi*8 + obj.x]
ucomisd xmm0, qword [rsi*8 + obj.x]
seta al
ret
nop dword [rax]
mov rsi, rdi
xor eax, eax
mov edi, 0x4014b4
jmp sym.imp.scanf
nop
mov rsi, rdi
xor eax, eax
mov edi, 0x4014b7
jmp sym.imp.scanf
nop
mov rsi, rdi
xor eax, eax
mov edi, 0x4014bb
jmp sym.imp.scanf
nop
mov rsi, rdi
xor eax, eax
mov edi, 0x4014bf
jmp sym.imp.scanf
nop
mov rsi, rdi
xor eax, eax
mov edi, 0x4014c3
jmp sym.imp.scanf
nop
ret
nop dword [rax]
nop word cs:[rax + rax]
mov edx, dword [rdi]
mov esi, 0x4014b4
mov edi, 1
xor eax, eax
jmp sym.imp.__printf_chk
nop dword [rax]
nop word cs:[rax + rax]
mov rdx, qword [rdi]
mov esi, 0x4014b7
mov edi, 1
xor eax, eax
jmp sym.imp.__printf_chk
nop
nop word cs:[rax + rax]
ret
nop dword [rax]
nop word cs:[rax + rax]
push r12
push rbp
mov esi, obj.d
push rbx
mov edi, 0x4014bb
xor eax, eax
call sym.imp.scanf
xor eax, eax
mov esi, obj.n
mov edi, 0x4014b4
call sym.imp.scanf
mov eax, dword [rip + 0x2064ec]
test eax, eax
jle 0x400b11
mov r12d, obj.x
mov ebp, obj.s
xor ebx, ebx
nop dword [rax]
mov rsi, r12
mov edi, 0x4014bb
xor eax, eax
call sym.imp.scanf
mov rsi, rbp
xor eax, eax
mov edi, 0x4014bb
call sym.imp.scanf
add ebx, 1
add r12, 8
add rbp, 8
cmp dword [rip + 0x2064a9], ebx
jg 0x400ae0
pop rbx
pop rbp
pop r12
ret
nop word cs:[rax + rax]
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 8
mov ebx, dword [rip + 0x206484]
test ebx, ebx
jle 0x400bc5
lea edx, [rbx - 4]
lea ecx, [rbx - 1]
shr edx, 2
add edx, 1
cmp ecx, 3
lea eax, [rdx*4]
jbe 0x4010a6
movdqa xmm0, xmmword [rip + 0x980]
xor ecx, ecx
movdqa xmm1, xmmword [rip + 0x986]
mov rsi, rcx
add rcx, 1
shl rsi, 4
cmp edx, ecx
movaps xmmword [rsi + obj.ord], xmm0
paddd xmm0, xmm1
ja 0x400b6a
cmp eax, ebx
je 0x400bc5
movsxd rdx, eax
mov dword [rdx*4 + obj.ord], eax
lea edx, [rax + 1]
cmp ebx, edx
jle 0x400bc5
movsxd rcx, edx
mov dword [rcx*4 + obj.ord], edx
lea edx, [rax + 2]
cmp edx, ebx
jge 0x400bc5
add eax, 3
movsxd rcx, edx
cmp ebx, eax
mov dword [rcx*4 + obj.ord], edx
jle 0x400bc5
movsxd rdx, eax
mov dword [rdx*4 + obj.ord], eax
movsxd r14, ebx
shl r14, 2
lea rbp, [r14 + obj.ord]
cmp rbp, obj.ord
je 0x400dc9
mov r15, r14
mov r13d, 0x3f
sar r15, 2
bsr rax, r15
xor rax, 0x3f
cdqe
sub r13, rax
add r13, r13
cmp r14, 0x43
jle 0x400ff8
test r13, r13
mov rsi, rbp
mov r12, rbp
je 0x400e4b
movsxd rcx, dword [rip + 0x201487]
sar r14, 3
sub r13, 1
mov eax, dword [r14*4 + obj.ord]
movsxd rdi, dword [rsi - 4]
movsd xmm0, qword [rcx*8 + obj.x]
mov rdx, rcx
movsxd rcx, eax
movsd xmm2, qword [rdi*8 + obj.x]
movsd xmm1, qword [rcx*8 + obj.x]
ucomisd xmm0, xmm1
jbe 0x400d3e
ucomisd xmm1, xmm2
jbe 0x400d5e
mov edx, dword [rip + 0x201434]
mov dword [rip + 0x20142e], eax
mov dword [r14*4 + obj.ord], edx
movsxd rax, dword [rip + 0x20141f]
mov edx, dword [rsi - 4]
movsd xmm0, qword [rax*8 + obj.x]
mov edi, 0x6020a8
mov rax, rsi
nop dword [rax]
movsxd rcx, dword [rdi - 4]
lea rbx, [rdi - 4]
mov r12, rbx
movsd xmm1, qword [rcx*8 + obj.x]
mov r8, rcx
ucomisd xmm1, xmm0
ja 0x400d03
movsxd rcx, edx
sub rax, 4
ucomisd xmm0, qword [rcx*8 + obj.x]
jbe 0x400ce5
nop word [rax + rax]
sub rax, 4
movsxd rcx, dword [rax]
ucomisd xmm0, qword [rcx*8 + obj.x]
mov rdx, rcx
ja 0x400cd0
cmp rbx, rax
jae 0x400d09
mov dword [rdi - 4], edx
mov dword [rax], r8d
movsxd rdx, dword [rip + 0x2013a9]
movsd xmm0, qword [rdx*8 + obj.x]
mov edx, dword [rax - 4]
add rdi, 4
jmp 0x400c98
mov r14, rbx
mov ecx, sym.cmp
mov rdx, r13
mov rdi, rbx
sub r14, obj.ord
call sym.std::__introsort_loop_int__long___gnu_cxx::__ops::_Iter_comp_iter_bool____int_int___
cmp r14, 0x43
jle 0x400ebb
test r13, r13
je 0x400e44
mov rsi, rbx
jmp 0x400c16
ucomisd xmm0, xmm2
jbe 0x400d88
mov eax, dword [rip + 0x201356]
mov dword [rip + 0x201350], edx
mov dword [rip + 0x20134e], eax
mov edx, dword [rsi - 4]
jmp 0x400c8d
ucomisd xmm0, xmm2
jbe 0x400d44
mov edx, dword [rip + 0x201336]
mov dword [rip + 0x201330], edi
mov dword [rsi - 4], edx
movsxd rax, dword [rip + 0x201326]
movsd xmm0, qword [rax*8 + obj.x]
jmp 0x400c8d
ucomisd xmm1, xmm2
mov edx, dword [rip + 0x20130e]
jbe 0x400c6c
mov dword [rip + 0x201302], edi
mov dword [rsi - 4], edx
movsxd rax, dword [rip + 0x2012f8]
movsd xmm0, qword [rax*8 + obj.x]
jmp 0x400c8d
mov rax, r13
mov dword [rax], r14d
add r13, 4
cmp rbp, r13
jne 0x401011
test ebx, ebx
movsd xmm2, qword [rip + 0x2061dd]
jle 0x4010b5
lea edx, [rbx - 1]
pxor xmm1, xmm1
mov eax, obj.ord
lea rcx, [rdx*4 + 0x6020a4]
nop dword [rax]
movsxd rdx, dword [rax]
movapd xmm0, xmm2
add rax, 4
cmp rax, rcx
subsd xmm0, qword [rdx*8 + obj.x]
divsd xmm0, qword [rdx*8 + obj.s]
maxsd xmm0, xmm1
movapd xmm1, xmm0
jne 0x400df0
divsd xmm2, xmm1
add rsp, 8
mov esi, str._.14f_n
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
mov edi, 1
mov eax, 1
movapd xmm0, xmm2
jmp sym.imp.__printf_chk
mov r15, r14
sar r15, 2
lea rbx, [r15 - 2]
sar rbx, 1
jmp 0x400e58
sub rbx, 1
mov ecx, dword [rbx*4 + obj.ord]
mov r8d, sym.cmp
mov rdx, r15
mov rsi, rbx
mov edi, obj.ord
call sym.std::__adjust_heap_int__long_int___gnu_cxx::__ops::_Iter_comp_iter_bool____int_int___
test rbx, rbx
jne 0x400e54
cmp r14, 7
jle 0x400ebb
sub r12, 4
mov eax, dword [rip + 0x201216]
mov ecx, dword [r12]
mov rbx, r12
xor esi, esi
mov r8d, sym.cmp
sub rbx, obj.ord
mov edi, obj.ord
mov rdx, rbx
mov dword [r12], eax
sar rdx, 2
call sym.std::__adjust_heap_int__long_int___gnu_cxx::__ops::_Iter_comp_iter_bool____int_int___
cmp rbx, 7
jg 0x400e80
mov ebx, dword [rip + 0x2060f7]
mov r13d, 0x6020a4
mov r12d, 4
movsxd rax, dword [r13]
movsd xmm0, qword [rax*8 + obj.x]
mov r14, rax
movsxd rax, dword [rip + 0x2011bc]
ucomisd xmm0, qword [rax*8 + obj.x]
ja 0x400fa5
movsxd rcx, dword [r13 - 4]
lea rax, [r13 - 4]
ucomisd xmm0, qword [rcx*8 + obj.x]
mov rdx, rcx
ja 0x400f13
jmp 0x4010ad
nop
mov rax, rsi
movsxd rcx, dword [rax - 4]
mov dword [rax + 4], edx
lea rsi, [rax - 4]
ucomisd xmm0, qword [rcx*8 + obj.x]
mov rdx, rcx
ja 0x400f10
mov dword [rax], r14d
add r13, 4
cmp r13, 0x6020e0
jne 0x400ecd
cmp rbp, 0x6020e0
je 0x400dc9
mov edi, 0x6020e0
movsxd rcx, dword [rdi]
mov edx, dword [rdi - 4]
lea rax, [rdi - 4]
movsd xmm0, qword [rcx*8 + obj.x]
mov r8, rcx
movsxd rcx, edx
ucomisd xmm0, qword [rcx*8 + obj.x]
ja 0x400f7b
jmp 0x400fda
nop dword [rax]
mov rax, rsi
movsxd rcx, dword [rax - 4]
mov dword [rax + 4], edx
lea rsi, [rax - 4]
ucomisd xmm0, qword [rcx*8 + obj.x]
mov rdx, rcx
ja 0x400f78
add rdi, 4
mov dword [rax], r8d
cmp rbp, rdi
jne 0x400f4e
jmp 0x400dc9
mov rdx, r13
sub rdx, obj.ord
mov rax, rdx
sar rax, 2
test rax, rax
je 0x400fce
mov rdi, r12
mov esi, obj.ord
sub rdi, rdx
add rdi, r13
call sym.imp.memmove
mov dword [rip + 0x2010cb], r14d
jmp 0x400f2f
mov rax, rdi
add rdi, 4
cmp rbp, rdi
mov dword [rax], r8d
jne 0x400f4e
jmp 0x400dc9
nop word [rax + rax]
cmp rbp, 0x6020a4
je 0x400dc9
mov r13d, 0x6020a4
mov r12d, 4
movsxd rax, dword [r13]
movsd xmm0, qword [rax*8 + obj.x]
mov r14, rax
movsxd rax, dword [rip + 0x201078]
ucomisd xmm0, qword [rax*8 + obj.x]
ja 0x401071
movsxd rcx, dword [r13 - 4]
lea rax, [r13 - 4]
ucomisd xmm0, qword [rcx*8 + obj.x]
mov rdx, rcx
ja 0x401053
jmp 0x400db6
nop
mov rax, rsi
movsxd rcx, dword [rax - 4]
mov dword [rax + 4], edx
lea rsi, [rax - 4]
ucomisd xmm0, qword [rcx*8 + obj.x]
mov rdx, rcx
ja 0x401050
jmp 0x400db9
mov rdx, r13
sub rdx, obj.ord
mov rax, rdx
sar rax, 2
test rax, rax
je 0x40109a
mov rdi, r12
mov esi, obj.ord
sub rdi, rdx
add rdi, r13
call sym.imp.memmove
mov dword [rip + 0x200fff], r14d
jmp 0x400dbc
xor eax, eax
jmp 0x400b88
mov rax, r13
jmp 0x400f2c
pxor xmm1, xmm1
jmp 0x400e1a
nop
mov rax, rdx
push r15
push r14
sub rax, 1
push r13
push r12
mov r14, rax
push rbp
push rbx
shr r14, 0x3f
mov r13, rdi
mov r12d, ecx
add r14, rax
sub rsp, 0x28
mov rbx, r8
sar r14, 1
mov qword [rsp + 8], rsi
mov qword [rsp + 0x18], rdx
cmp rsi, r14
mov qword [rsp + 0x10], r14
jge 0x40120c
mov r14, rsi
jmp 0x401113
nop dword [rax + rax]
mov r14, r15
lea rax, [r14 + 1]
lea r15, [rax + rax]
shl rax, 3
lea rbp, [r13 + rax]
mov esi, dword [r13 + rax - 4]
mov edi, dword [rbp]
call rbx
test al, al
je 0x40113b
sub r15, 1
lea rbp, [r13 + r15*4]
cmp r15, qword [rsp + 0x10]
mov eax, dword [rbp]
mov dword [r13 + r14*4], eax
jl 0x401110
test byte [rsp + 0x18], 1
jne 0x40116c
mov rdx, qword [rsp + 0x18]
sub rdx, 2
mov rax, rdx
shr rax, 0x3f
add rax, rdx
sar rax, 1
cmp rax, r15
je 0x401190
cmp r15, qword [rsp + 8]
jg 0x4011ad
mov dword [rbp], r12d
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word cs:[rax + rax]
lea rcx, [r15 + r15 + 2]
lea r15, [rcx - 1]
cmp r15, qword [rsp + 8]
mov eax, dword [r13 + rcx*4 - 4]
mov dword [rbp], eax
lea rbp, [r13 + r15*4]
jle 0x401173
lea rax, [r15 - 1]
mov r14, rax
shr r14, 0x3f
add r14, rax
sar r14, 1
nop
lea rbp, [r13 + r14*4]
mov esi, r12d
mov edi, dword [rbp]
call rbx
test al, al
jne 0x4011e0
lea rbp, [r13 + r15*4]
jmp 0x401173
nop dword [rax + rax]
mov eax, dword [rbp]
mov dword [r13 + r15*4], eax
lea rax, [r14 - 1]
mov rcx, rax
shr rcx, 0x3f
add rax, rcx
sar rax, 1
cmp qword [rsp + 8], r14
jge 0x401173
mov r15, r14
mov r14, rax
jmp 0x4011c0
test byte [rsp + 0x18], 1
lea rbp, [r13 + rsi*4]
mov r15, rsi
je 0x401151
jmp 0x401173
nop word cs:[rax + rax]
nop
push r15
mov rax, rsi
push r14
push r13
push r12
sub rax, rdi
push rbp
push rbx
sub rsp, 0x28
cmp rax, 0x43
mov qword [rsp + 8], rsi
mov qword [rsp + 0x10], rdx
jle 0x401416
test rdx, rdx
mov rbx, rdi
mov rbp, rcx
je 0x4013b7
lea rdx, [rdi + 8]
mov qword [rsp + 0x18], rdx
sar rax, 3
sub qword [rsp + 0x10], 1
mov edi, dword [rbx + 4]
lea r12, [rbx + rax*4]
mov esi, dword [r12]
call rbp
test al, al
mov rax, qword [rsp + 8]
mov esi, dword [rax - 4]
je 0x401341
mov edi, dword [r12]
call rbp
test al, al
je 0x40135e
mov eax, dword [rbx]
mov edx, dword [r12]
mov r15, qword [rsp + 8]
mov dword [rbx], edx
mov dword [r12], eax
mov esi, dword [rbx]
mov r12, qword [rsp + 0x18]
jmp 0x4012c6
nop
mov esi, dword [rbx]
add r12, 4
lea r13, [r12 - 4]
mov edi, dword [r12 - 4]
call rbp
test al, al
mov r14, r13
jne 0x4012c0
nop dword [rax]
sub r15, 4
mov esi, dword [r15]
mov edi, dword [rbx]
call rbp
test al, al
jne 0x4012e0
cmp r15, r13
jbe 0x401306
mov eax, dword [r12 - 4]
mov ecx, dword [r15]
mov dword [r12 - 4], ecx
mov dword [r15], eax
jmp 0x4012c0
mov rdx, qword [rsp + 0x10]
mov rsi, qword [rsp + 8]
mov rcx, rbp
mov rdi, r13
call sym.std::__introsort_loop_int__long___gnu_cxx::__ops::_Iter_comp_iter_bool____int_int___
mov rax, r13
sub rax, rbx
cmp rax, 0x43
jle 0x401416
cmp qword [rsp + 0x10], 0
je 0x4013bc
mov qword [rsp + 8], r13
jmp 0x401270
mov edi, dword [rbx + 4]
call rbp
test al, al
je 0x401388
mov eax, dword [rbx]
mov esi, dword [rbx + 4]
mov r15, qword [rsp + 8]
mov dword [rbx + 4], eax
mov dword [rbx], esi
jmp 0x4012b8
mov r14, qword [rsp + 8]
mov edi, dword [rbx + 4]
mov esi, dword [r14 - 4]
call rbp
test al, al
mov eax, dword [rbx]
je 0x40134c
mov edx, dword [r14 - 4]
mov r15, qword [rsp + 8]
mov dword [rbx], edx
mov dword [r14 - 4], eax
mov esi, dword [rbx]
jmp 0x4012b8
mov rax, qword [rsp + 8]
mov edi, dword [r12]
mov esi, dword [rax - 4]
call rbp
test al, al
mov eax, dword [rbx]
je 0x4012a7
mov rcx, qword [rsp + 8]
mov edx, dword [rcx - 4]
mov r15, rcx
mov dword [rbx], edx
mov dword [rcx - 4], eax
mov esi, dword [rbx]
jmp 0x4012b8
mov r14, qword [rsp + 8]
sar rax, 2
lea r13, [rax - 2]
mov r12, rax
sar r13, 1
jmp 0x4013d0
sub r13, 1
mov ecx, dword [rbx + r13*4]
mov r8, rbp
mov rdx, r12
mov rsi, r13
mov rdi, rbx
call sym.std::__adjust_heap_int__long_int___gnu_cxx::__ops::_Iter_comp_iter_bool____int_int___
test r13, r13
jne 0x4013cc
sub r14, 4
mov eax, dword [rbx]
mov ecx, dword [r14]
mov r12, r14
xor esi, esi
mov r8, rbp
sub r12, rbx
mov rdi, rbx
mov rdx, r12
mov dword [r14], eax
sar rdx, 2
call sym.std::__adjust_heap_int__long_int___gnu_cxx::__ops::_Iter_comp_iter_bool____int_int___
cmp r12, 7
jg 0x4013ea
add rsp, 0x28
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop word cs:[rax + rax]
nop
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x2009b6]
push rbp
lea rbp, [rip + 0x2009be]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401486
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401470
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
and eax, 0x6c250064
add byte fs:[rip + 0x2000666c], ah
and eax, 0x73250063
add byte [rip + 0x6634312e], ah
and eax, 0x6634312e
or al, byte [rax]
jae 0x401536
and byte [rbx], ah
and eax, 0x203a64
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, 0
add byte [rax], al
add al, 0
add byte [rax], al
add al, 0
add byte [rax], al
add al, 0
add byte [rax], al
add dword [rbx], ebx
add edi, dword [rbx]
lodsb al, byte [rsi]
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
sal cl, 0xff
clc
add byte [rax], al
add byte [rax - 0xe], dh
push qword [rax]
add eax, dword [rax]
add byte [rax - 0x7f00000d], ah
add eax, dword [rax]
add al, dl
dec eax
add byte [rax], al
add al, dl
hlt
jmp qword [rax]
add dword [rax], eax
add al, dh
hlt
cmp byte [rcx], al
add byte [rax], al
add ch, dh
call qword [rax + 1]
add byte [rax], al
adc ch, dh
ljmp [rax + 1]
add byte [rax], al
and ch, dh
inc dword [rax + 0x30000001]
cmc
lcall [rax + 0x40000001]
cmc
push qword [rax + 0x50000001]
cmc
dec eax
add dword [rax], eax
add byte [rax - 0xb], dh
jmp rax
add dword [rax], eax
add byte [rax - 0x700000b], dl
add dword [rax], eax
add byte [rax + 0x10fffff5], ah
add al, byte [rax]
add byte [rax], ah
idiv bh
jmp rax
add al, byte [rax]
add al, al
sti
inc dword [rax + 2]
add byte [rax], al
xor ch, bh
call qword [rax + 0x30000002]
lcall [rax - 0x5ffffffd]
jmp rax
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4015cf
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add bl, dh
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4015ff
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sal al, 0xff
jmp qword [rax]
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rax + 0x1cfffff3], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
pop rsp
add byte [rax], al
add byte [rax + 0xffffff3], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
je 0x401656
add byte [rax], al
test al, 0xf3
dec dword [rdi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
mov word [rax], es
add byte [rax], al
movabs al, byte [0xffffff3]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add byte [rax], al
add byte [rax + 0xffffff3], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
mov esp, 0x90000000
dec dword [rdi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax + 0x2fffff3], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
in al, dx
add byte [rax], al
add byte [rax + 0x13fffff3], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add al, 1
add byte [rax], al
mov bl, dh
call qword [rax + rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
sbb al, 1
add byte [rax], al
nop
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ch
add byte [rax], al
xor al, 1
add byte [rax], al
mov bl, dh
push qword [rsi]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdx + rax - 0x79e7f1bf], cl
add eax, dword [rsi + 0xe]
and byte [rbx + 0xe690204], al
sbb byte [rcx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rcx + rax], ah
add byte [rax - 7], bh
jmp qword [rcx + rax]
add byte [rax], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx + 0x600e5107], al
add dl, byte [rsi + 0x41380e0a]
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rbx + 0xb], cl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rcx + rax - 0x5680000], dh
push rbp
add dword [rax], eax
add byte [rax], al
adc byte [rdi + 0x180e4502], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx + 0x600e4407], al
add edx, esi
add dword [rsi], ecx
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rdx + rax], al
add byte [rax], al
cmp bl, dh
lcall [rsi + 5]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx + 0x400e4407], al
add esi, esp
add cl, byte [rdx]
cmp byte [rsi + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rbx + 0xb], dl
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rdx + rax], dl
add byte [rax], bh
out dx, eax
ljmp [rcx + rax]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bc], es
cmp byte [rbx + 0x500e4f07], al
add bl, dh
or cl, byte [rsi]
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], cl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add al, byte [rax]
add byte [rax], bl
jmp qword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rbp + 0xe], bl
or byte [rax], al
add byte [rax], r8b
add byte [rdx + rax - 0x4700000], bh
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x4018da
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
add al, 3
add byte [rax], al
mov eax, 0x2fffffb
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0xa000000000004009]
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rcx], 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0xd00000000004006]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsp + rdx + 0x40], ah
add byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sbb eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], dl
add al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rcx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4005], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add byte [rax + 5], dl
add byte [rax], al
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, dl
add byte [rax], al
add byte [rax], al
add dh, ah
add byte [rax], al
add byte [rax], al
add dh, dh
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 7], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4020e8
je 0x4020f1
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x4020ff
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x4020fc
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax], dl
add al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or byte [rax], al
push rax
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or dword [rax], eax
mov al, 5
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add al, cl
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or eax, dword [rax]
movabs al, byte [0x4006]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], cl
rol byte [rsi], 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x40076000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rsp + rdx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc byte [rax], al
mov al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rax], al
adc eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, byte [rax]
mov al, 0x15
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], dl
add al, bh
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601e1000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb dword [rax], eax
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
and byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
adc eax, 0x601e1000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax + 9], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x4009], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rcx], al
add byte [rdx], bl
add byte [rax + 0x6020], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add dword [rax], eax
adc al, 0
or byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0x4009], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rbx], dl
add al, bh
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsd dword [rdi], dword ptr [rsi]
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x20000], ch
add byte [rax + 0x4008], ah
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, al
add byte [rax], al
add byte [rcx], al
add byte [rdx], bl
add byte [rdi + rbp*2 + 0x60], bh
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, dl
add byte [rax], al
add byte [rcx], al
add byte [rdx], dl
add al, bh
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x40249a
add byte [rax], al
add dword [rax], eax
adc eax, 0x601e1000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ch
add byte [rax], al
add byte [rax], al
add byte [rcx], dl
add byte [rax], al
adc eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rax]
add byte [rax], al
add dword [rax], eax
sbb byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 1], dl
add byte [rbx], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add dword [rax], eax
add byte [rax], al
add byte [rbx], dl
add al, bh
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add al, byte [rax]
add byte [rax], ah
add byte [rcx], bl
add byte [rax + 0x20], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ch
add byte [rax], al
adc dword [rax], eax
sbb al, byte [rax]
xor byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1f], dl
add byte [rax], al
add byte [rdx + 1], al
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x4014], ah
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ah
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add al, dl
or byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
add dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add byte [rax], dh
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
cmc
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x12000001], ah
add byte [rsi], cl
add byte [rax + 0xa], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
scasb al, byte [rdi]
add dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x20000001], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dl
add dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
sahf
add eax, 0
add byte [rax], al
fild dword [rcx]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add qword [rax], r8
add byte [rdx], dl
add byte [rdi], cl
add byte [rsp + rdx + 0x40], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
add dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bh
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], dl
or al, byte [rax]
add byte [rax], al
add byte [rax], al
sldt word [rax]
add byte [rax], al
add byte [rax], al
add byte [rdi], bh
add al, byte [rax]
add byte [rcx], dl
add byte [rdx], bl
add byte [rax + 0x606f], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 2], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lodsb al, byte [rsi]
add dword [rax], eax
add byte [rcx], dl
add byte [rdx], bl
add byte [rax], ah
push rax
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1f], dl
add byte [rax], al
add byte [rbx + 2], bl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
adc byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20000002], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x110000], bl
adc byte [rax], al
mov al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
stosd dword [rdi], eax
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x400a], dl
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x12000002], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, al
add al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bl
add al, byte [rax]
add byte [rax], dl
add byte [rcx], bl
add byte [rax + 0x20], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, ch
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
sldt word [rax]
add byte [rax], al
add byte [rax], al
add bl, dh
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xa], dl
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bh
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add al, dl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x11000003
add bl, byte [rcx]
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], dl
add eax, dword [rax]
add byte [rcx], dl
add bl, byte [rcx]
add byte [rax + 0x20], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], dh
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], dh
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 3], dl
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
jo 0x40286a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 3], ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jg 0x402875
add byte [rax], al
adc al, byte [rax]
add byte [rax], ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
sldt word [rax]
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x12000003], al
add byte [rsi], cl
add byte [rax + 0x400a], ah
add byte [rax], al
add byte [rsi], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax + rax], eax
add byte [rcx], dl
add byte [rdx], bl
add byte [rax + 0x606f], bh
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, ecx
add eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add al, al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add dword fs:[rax], eax
add byte [rax], al
add byte [rax], al
add byte [rcx], ah
add dword [rax], eax
add byte [rax], dl
add byte [rdx], bl
add al, al
outsd dx, dword [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, ah
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xa], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, ch
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], dh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
sldt word [rax]
add byte [rax], al
add byte [rax], al
add bl, dh
add eax, dword [rax]
add byte [rax], dl
add byte [rcx], bl
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, bh
add eax, dword [rax]
add byte [rcx], dl
add byte [rdx], bl
add byte [rax + 0x6020], ah
add byte [rax], al
add al, cl
sldt word [rax]
add byte [rax], al
add byte [rax], al
inc byte [rbx]
add byte [rax], al
adc al, byte [rax]
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp al, 3
add byte [rax], al
adc al, byte [rax]
or eax, dword [rax]
movabs al, byte [0x4006]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x12000000], bh
add byte [rsi], cl
add al, dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
sldt word [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x402a0a
jne 0x4029fe
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x4029be
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402a3c
jb 0x402a42
pop rdi
jne 0x402a4b
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402a45
je 0x402a41
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402a61
jb 0x402a67
pop rdi
jne 0x402a70
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402a73
jns 0x402a63
outsb dx, byte gs:[rsi]
je 0x402a7a
jns 0x402a0a
jb 0x402a6e
insd dword [rdi], dx
pop rdi
jne 0x402a80
insd dword [rdi], dx
jns 0x402a16
pop rdi
pop rdi
jb 0x402a7c
insd dword [rdi], dx
pop rdi
jne 0x402a8e
insd dword [rdi], dx
jns 0x402a83
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402a8e
jns 0x402a8e
outsb dx, byte gs:[rsi]
je 0x402aa5
jns 0x402a35
jo 0x402a98
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x402abc
pop rdi
pop r15
pop rdi
pop rdx
xor bl, byte [rdi + 0x52]
push rdx
imul eax, dword [rax], 0x74535a5f
cmp byte [rdi + 0x5f], r11b
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdi
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402b11
jns 0x402b11
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402b22
jns 0x402b22
jae 0x402b39
jb 0x402b3c
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdx
push rbx
je 0x402b18
pop rdi
pop rdi
imul ebp, dword [rsi + 0x74], 0x6f736f72
jb 0x402b67
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
outsd dx, dword [rsi]
jo 0x402b42
push rax
imul ebp, dword [rsi + rcx*2 + 0x39], 0x6e675f5f
jne 0x402b63
movsxd rdi, dword [rax + 0x78]
xor eax, 0x706f5f5f
jae 0x402b3f
xor eax, 0x6574495f
jb 0x402b74
movsxd rbp, dword [rdi + 0x6d]
jo 0x402b79
imul esi, dword [rbp + 0x72], 0x62465049
imul ebp, dword [rcx + 0x45], 0x76454545
push rsp
pop rdi
push rbx
pop rdi
push rsp
xor byte [rdi + 0x54], bl
xor dword [rdi], ebx
pop rdi
pop rdx
xor bl, byte [rdi + 0x57]
push rdx
js 0x402b3e
pop rdi
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x402bbb
jb 0x402bbe
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x402bb0
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x402bd1
jae 0x402b61
pop rdi
pop rdx
xor eax, 0x766c6f73
jbe 0x402b6b
pop rdi
pop rdi
jo 0x402be1
imul ebp, dword [rsi + 0x74], 0x68635f66
imul eax, dword [rax + 0x40], 0x47
pop r15
xor ch, byte [rsi]
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x402bc3
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x402c2a
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x325a5f00
pop rdi
push rdx
push rdx
add byte fs:[rdi + 0x5f], bl
movsxd rdi, dword [rax + 0x61]
pop rdi
je 0x402c3f
js 0x402c45
je 0x402c1e
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x402c29
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x402c7e
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x49], bl
pop r15
jae 0x402ca6
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x5a], bl
xor dword [rdi + 0x76], edx
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x402cc0
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x402cd5
pop rdi
jae 0x402ceb
jb 0x402cee
add byte [rdi + 0x5a], bl
xor bl, byte [rdi + 0x52]
push rdx
js 0x402c83
pop rdi
pop rdx
xor bl, byte [rdi + 0x57]
push rdx
imul rax, qword [r8], 0x63335a5f
insd dword [rdi], dx
jo 0x402cfc
imul eax, dword [rax], 0x4d545f5f
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
jae 0x402d15
pop rdi
push 0x6c646e61
add byte gs:[rbx + 0x74], dh
jb 0x402d26
outsd dx, dword [rsi]
insb byte [rdi], dx
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x6c5f5f00
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x656d0074
insd dword [rdi], dx
insd dword [rdi], dx
outsd dx, dword [rsi]
jbe 0x402d3e
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x625f5f00
jae 0x402d5f
pop rdi
jae 0x402d63
jb 0x402d66
add byte [rdi + 0x5f], bl
jae 0x402d6b
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
xor bl, byte [rdi + 0x52]
push rdx
movsxd rax, dword [rax]
pop rdi
pop rdx
xor eax, 0x75706e69
je 0x402d96
add byte [rdi + 0x5a], bl
push rbx
je 0x402d57
xor ebx, dword [rdi + 0x5f]
push 0x75
jae 0x402da3
pop rdi
push 0x49706165
push rax
imul ebp, dword [rcx + rbp*2 + 0x4e], 0x675f5f39
outsb dx, byte [rsi]
jne 0x402da0
movsxd rdi, dword [rax + 0x78]
xor eax, 0x706f5f5f
jae 0x402d7c
xor eax, 0x6574495f
jb 0x402db1
movsxd rbp, dword [rdi + 0x6d]
jo 0x402db6
imul esi, dword [rbp + 0x72], 0x62465049
imul ebp, dword [rcx + 0x45], 0x76454545
push rsp
pop rdi
push rsp
xor byte [rdi + 0x53], bl
cmp byte [rdi + 0x54], bl
xor dword [rdi + 0x54], ebx
xor bl, byte [rdi]
pop rdi
pop rdx
xor dword [rdx + 0x76], edx
add byte [rdi + 0x5a], bl
xor bl, byte [rdi + 0x52]
push rax
movsxd rax, dword [rax]
pop rdi
je 0x402dea
add byte [rdi + 0x72], ch
add byte fs:[rbp + 0x61], ch
imul ebp, dword [rsi], 0x79732e00
insd dword [rdi], dx
je 0x402dfb
add byte [rsi], ch
jae 0x402e13
jb 0x402e15
add byte [rsi], ch
jae 0x402e0f
jae 0x402e1d
jb 0x402e1f
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402e20
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x402e2e
outsb dx, byte cs:[esi]
jne 0x402dfc
jne 0x402e3a
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x402e0a
push 0x687361
jns 0x402e53
jae 0x402e60
insd dword [rdi], dx
add byte [rsi], ch
jns 0x402e5b
jae 0x402e63
jb 0x402df1
outsb dx, byte cs:[esi]
jne 0x402e24
jbe 0x402e5d
jb 0x402e6d
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x402e31
jbe 0x402e6a
jb 0x402e7a
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x402e75
insb byte [rdi], dx
jns 0x402e84
add byte [rsi], ch
jb 0x402e7f
insb byte [rdi], dx
jo 0x402e8b
je 0x402e21
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x402e5a
outsd dx, dword [esi]
je 0x402e30
je 0x402e98
js 0x402ea9
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x402eae
je 0x402ea4
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402ec7
jns 0x402e68
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x402ee3
jns 0x402e74
push 0x63
jb 0x402e79
jns 0x402eeb
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x402ef5
je 0x402e8b
je 0x402ef1
add byte [rsi], ch
jae 0x402f08
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x402e9f
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 0x40
add byte [rax], al
add byte [rax], al
add al, al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 1], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax + rax*2], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rbx], ah
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x40], dh
add byte [rax], al
xor al, 5
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 5], dl
add byte [rax], al
add byte [rax], al
add byte [rax + 5], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 5
add byte [rax], al
add byte [rax], al
add byte [rax + 5], dh
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add eax, 0x40
add byte [rax], al
enter 5, 0
add byte [rax], al
add byte [rax], al
fadd dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x18000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4006], ah
add byte [rax], al
add byte [rax + 6], ah
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs al, byte [0]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 7], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 7], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 7], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor cl, byte [rip]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x600000001000000], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsp + rdx + 0x40], ah
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4014], dh
add byte [rax], al
add byte [rax + 0x14], dh
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x40], dl
add byte [rax], al
add byte [rip], dl
add byte [rax], al
lodsb al, byte [rsi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4015], dh
add byte [rax], al
add byte [rax + 0x15], dh
add byte [rax], al
add byte [rbx + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loope 0x4033e2
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 0, al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x403443
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, eax
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc byte [rax]
add byte [rax], al
or byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [r8], r8b
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rcx]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jo 0x40359a
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, ebx
sub eax, 0
add byte [rax], al
or al, 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test al, 0x20
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x40360d
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
add byte [rcx], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x29], dl
add byte [rax], al
add byte [rbx], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
