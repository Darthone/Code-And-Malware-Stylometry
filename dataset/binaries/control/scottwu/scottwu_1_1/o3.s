xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6030d7
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x401070
mov eax, 0
test rax, rax
je 0x401070
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x4010b8
mov eax, 0
test rax, rax
je 0x4010b8
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x202019], 0
jne 0x4010da
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x202006], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x4010f0
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x4010eb
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
nop word cs:[rax + rax]
cmp rdi, rsi
je 0x4011cf
lea r9, [rdi + 8]
cmp rsi, r9
je 0x4011cf
lea r10, [rdi + 0x10]
jmp 0x40114f
nop dword [rax]
jg 0x401138
cmp byte [rax - 4], r11b
jg 0x401178
mov dword [rax], r8d
mov byte [rax + 4], r11b
mov rax, r10
add r9, 8
add r10, 8
cmp rsi, rax
je 0x4011cd
mov r8d, dword [r9]
cmp r8d, dword [rdi]
mov rax, r9
movzx r11d, byte [r9 + 4]
jl 0x401190
jg 0x401167
cmp r11b, byte [rdi + 4]
jl 0x401190
mov rax, r9
nop word [rax + rax]
mov edx, dword [rax - 8]
cmp r8d, edx
jge 0x401130
mov dword [rax], edx
movzx edx, byte [rax - 4]
sub rax, 8
mov byte [rax + 0xc], dl
jmp 0x401170
nop word [rax + rax]
mov rdx, r9
sub rdx, rdi
sar rdx, 3
test rdx, rdx
jle 0x4011b6
nop
sub rax, 8
mov ecx, dword [rax]
sub rdx, 1
mov dword [rax + 8], ecx
movzx ecx, byte [rax + 4]
mov byte [rax + 0xc], cl
jne 0x4011a0
mov rax, r10
add r9, 8
add r10, 8
cmp rsi, rax
mov dword [rdi], r8d
mov byte [rdi + 4], r11b
jne 0x40114f
ret
ret
nop
nop dword [rax]
nop word cs:[rax + rax]
push r13
push r12
lea r13, [rdi + 0x10]
push rbp
push rbx
sub rsp, 0x18
mov qword [rdi], r13
mov rax, qword fs:[0x28]
mov qword [rsp + 8], rax
xor eax, eax
test rsi, rsi
je 0x40128c
mov rbx, rdi
mov rdi, rsi
mov r12, rsi
call sym.imp.strlen
cmp rax, 0xf
mov rbp, rax
mov qword [rsp], rax
ja 0x40125a
cmp rax, 1
je 0x401282
test rax, rax
jne 0x401296
mov rax, qword [rsp]
mov rdx, qword [rbx]
mov qword [rbx + 8], rax
mov byte [rdx + rax], 0
mov rax, qword [rsp + 8]
xor rax, qword fs:[0x28]
jne 0x40129b
add rsp, 0x18
pop rbx
pop rbp
pop r12
pop r13
ret
mov rdi, rbx
xor edx, edx
mov rsi, rsp
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_create
mov rdi, rax
mov qword [rbx], rax
mov rax, qword [rsp]
mov qword [rbx + 0x10], rax
mov rdx, rbp
mov rsi, r12
call sym.imp.memcpy
jmp 0x401230
movzx eax, byte [r12]
mov byte [rbx + 0x10], al
jmp 0x401230
mov edi, str.basic_string::_M_construct_null_not_valid
call sym.std::__throw_logic_error
mov rdi, r13
jmp 0x401275
call sym.imp.__stack_chk_fail
mov rax, rsi
sub rax, rdi
cmp rax, 0x87
jle 0x401500
test rdx, rdx
push r14
mov r14, rdx
push r13
push r12
mov r12, rdi
push rbp
push rbx
je 0x401483
lea rbp, [rdi + 0x10]
sar rax, 4
mov ecx, dword [r12 + 8]
sub r14, 1
lea rax, [r12 + rax*8]
mov edx, dword [rax]
cmp ecx, edx
jl 0x4013ce
jg 0x4012f9
movzx ebx, byte [rax + 4]
cmp byte [r12 + 0xc], bl
jl 0x4013ce
mov edi, dword [rsi - 8]
cmp ecx, edi
jge 0x40143d
movzx r8d, byte [r12 + 0xc]
mov eax, dword [r12]
mov dword [r12], ecx
mov dword [r12 + 8], eax
movzx eax, byte [r12 + 4]
mov byte [r12 + 4], r8b
mov byte [r12 + 0xc], al
mov rdi, rbp
mov rax, rsi
jmp 0x401344
nop
movzx edx, byte [r12 + 4]
cmp byte [rdi - 4], dl
jge 0x401360
nop dword [rax + rax]
add rdi, 8
mov r8d, dword [rdi - 8]
lea rbx, [rdi - 8]
mov r13, rbx
cmp ecx, r8d
jg 0x401340
jge 0x401330
nop word cs:[rax + rax]
sub rax, 8
mov edx, dword [rax]
cmp ecx, edx
jl 0x401360
jg 0x401378
movzx r9d, byte [rax + 4]
cmp byte [r12 + 4], r9b
jl 0x401360
cmp rbx, rax
jae 0x4013a0
mov dword [rdi - 8], edx
mov dword [rax], r8d
movzx ecx, byte [rax + 4]
movzx edx, byte [rdi - 4]
mov byte [rdi - 4], cl
mov byte [rax + 4], dl
mov ecx, dword [r12]
jmp 0x401340
nop word [rax + rax]
mov rdx, r14
mov rdi, rbx
call sym.std::__introsort_loop_std::pair_int_char___long___gnu_cxx::__ops::_Iter_less_iter_
mov rax, rbx
sub rax, r12
cmp rax, 0x87
jle 0x4014f8
test r14, r14
je 0x401486
mov rsi, rbx
jmp 0x4012cd
mov edi, dword [rsi - 8]
cmp edx, edi
jl 0x40145e
jg 0x4013e4
movzx ebx, byte [rsi - 4]
cmp byte [rax + 4], bl
jl 0x40145e
cmp ecx, edi
jl 0x4013f5
movzx eax, byte [r12 + 0xc]
jg 0x40141b
cmp al, byte [rsi - 4]
jge 0x40141b
mov eax, dword [r12]
mov dword [r12], edi
movzx edx, byte [rsi - 4]
mov dword [rsi - 8], eax
movzx eax, byte [r12 + 4]
mov byte [r12 + 4], dl
mov byte [rsi - 4], al
mov ecx, dword [r12]
jmp 0x401327
mov edx, dword [r12]
mov dword [r12], ecx
mov dword [r12 + 8], edx
movzx edx, byte [r12 + 4]
mov byte [r12 + 4], al
mov byte [r12 + 0xc], dl
jmp 0x401327
jg 0x40144f
movzx r8d, byte [r12 + 0xc]
cmp r8b, byte [rsi - 4]
jl 0x40130a
cmp edx, edi
jl 0x4013f5
jg 0x40145e
movzx ebx, byte [rsi - 4]
cmp byte [rax + 4], bl
jl 0x4013f5
mov ecx, dword [r12]
mov dword [r12], edx
mov dword [rax], ecx
movzx ecx, byte [rax + 4]
movzx edx, byte [r12 + 4]
mov byte [r12 + 4], cl
mov byte [rax + 4], dl
mov ecx, dword [r12]
jmp 0x401327
mov r13, rsi
sar rax, 3
lea rbp, [rax - 2]
mov rbx, rax
sar rbp, 1
jmp 0x40149a
sub rbp, 1
sub rsp, 8
mov rcx, qword [r12 + rbp*8]
mov rsi, rbp
push 0
mov rdx, rbx
mov rdi, r12
call sym.std::__adjust_heap_std::pair_int_char___long_std::pair_int_char____gnu_cxx::__ops::_Iter_less_iter_
test rbp, rbp
pop rcx
pop rsi
jne 0x401496
mov eax, dword [r12]
sub r13, 8
mov rcx, qword [r13]
mov rbx, r13
sub rsp, 8
xor esi, esi
sub rbx, r12
mov rdi, r12
mov dword [r13], eax
movzx eax, byte [r12 + 4]
mov rdx, rbx
sar rdx, 3
mov byte [r13 + 4], al
push 0
call sym.std::__adjust_heap_std::pair_int_char___long_std::pair_int_char____gnu_cxx::__ops::_Iter_less_iter_
cmp rbx, 0xf
pop rax
pop rdx
jg 0x4014b9
pop rbx
pop rbp
pop r12
pop r13
pop r14
ret
nop dword [rax + rax]
nop word cs:[rax + rax]
push r15
push r14
push r13
push r12
push rbp
push rbx
sub rsp, 0x68
mov esi, dword [rip + 0x20202c]
mov ecx, dword [rip + 0x20202a]
mov edx, dword [rip + 0x202028]
mov qword [rsp + 8], rdi
mov rax, qword fs:[0x28]
mov qword [rsp + 0x58], rax
xor eax, eax
lea ebx, [rsi + rcx]
lea eax, [rsi + rsi]
add ebx, edx
cmp eax, ebx
jg 0x401794
lea eax, [rcx + rcx]
cmp eax, ebx
jg 0x401794
lea eax, [rdx + rdx]
cmp eax, ebx
jg 0x401794
mov rax, qword [rip + 0x20202e]
mov qword [rsp + 0x10], 0
lea rbp, [rsp + 0x28]
mov qword [rsp + 0x18], 0
mov qword [rsp + 0x20], 0
lea rdi, [rsp + 0x10]
mov dword [rsp + 0x10], esi
movzx esi, byte [rax]
mov dword [rsp + 0x18], ecx
mov byte [rsp + 0x14], sil
movzx ecx, byte [rax + 1]
mov rsi, rbp
mov dword [rsp + 0x20], edx
mov edx, 2
mov byte [rsp + 0x1c], cl
movzx eax, byte [rax + 2]
mov byte [rsp + 0x24], al
call sym.std::__introsort_loop_std::pair_int_char___long___gnu_cxx::__ops::_Iter_less_iter_
lea rdi, [rsp + 0x10]
mov rsi, rbp
call sym.std::__insertion_sort_std::pair_int_char_____gnu_cxx::__ops::_Iter_less_iter_
test ebx, ebx
jle 0x4017b8
lea eax, [rbx - 1]
mov edx, dword [rsp + 0x10]
mov esi, obj.ch
xor ecx, ecx
shr eax, 1
lea r8, [rax + rax + 0x603102]
jmp 0x401623
nop word [rax + rax]
add ecx, 2
movsxd rax, ecx
mov edx, dword [rsp + rax*8 + 0x10]
movzx edi, byte [rsp + rax*8 + 0x14]
add rsi, 2
sub edx, 1
mov dword [rsp + rax*8 + 0x10], edx
mov byte [rsi - 2], dil
cmp r8, rsi
je 0x40163c
test edx, edx
movsxd rax, ecx
jne 0x40160a
lea edi, [rcx + 1]
movsxd rax, edi
mov edx, dword [rsp + rax*8 + 0x10]
test edx, edx
je 0x401600
mov ecx, edi
jmp 0x40160a
cmp ebx, 1
je 0x401810
mov edi, 0x603101
mov esi, 1
jmp 0x40167e
nop dword [rax]
add ecx, 2
movsxd rax, ecx
mov edx, dword [rsp + rax*8 + 0x10]
movzx r8d, byte [rsp + rax*8 + 0x14]
add esi, 2
sub edx, 1
add rdi, 2
mov dword [rsp + rax*8 + 0x10], edx
mov byte [rdi - 2], r8b
cmp esi, ebx
jge 0x401696
test edx, edx
jne 0x401662
lea r8d, [rcx + 1]
movsxd rax, r8d
mov edx, dword [rsp + rax*8 + 0x10]
test edx, edx
je 0x401658
mov ecx, r8d
jmp 0x401662
lea rax, [rsp + 0x30]
test ebx, ebx
mov qword [rsp + 0x38], 0
mov byte [rsp + 0x40], 0
mov qword [rsp], rax
lea rax, [rsp + 0x40]
mov qword [rsp + 0x30], rax
jle 0x4017c6
mov rax, qword [rsp]
xor ebp, ebp
xor r13d, r13d
add rax, 0x10
mov r15, rax
jmp 0x4016fd
nop dword [rax]
mov byte [rax + r13], r14b
mov rax, qword [rsp + 0x30]
add rbp, 1
cmp ebx, ebp
mov qword [rsp + 0x38], r12
mov byte [rax + r12], 0
jle 0x40173f
mov r13, qword [rsp + 0x38]
mov rax, qword [rsp + 0x30]
cmp rax, r15
movzx r14d, byte [rbp + obj.ch]
lea r12, [r13 + 1]
je 0x401738
mov rdx, qword [rsp + 0x40]
cmp r12, rdx
jbe 0x4016d8
mov rdi, qword [rsp]
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r13
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x30]
jmp 0x4016d8
nop dword [rax]
mov edx, 0xf
jmp 0x401713
mov rbx, qword [rsp + 8]
mov rax, qword [rsp + 0x30]
lea rdx, [rbx + 0x10]
mov qword [rbx], rdx
mov rdx, qword [rsp]
add rdx, 0x10
cmp rax, rdx
je 0x4017d5
mov qword [rbx], rax
mov rax, qword [rsp + 0x40]
mov qword [rbx + 0x10], rax
mov rax, qword [rsp + 0x38]
mov qword [rbx + 8], rax
mov rax, rbx
mov rbx, qword [rsp + 0x58]
xor rbx, qword fs:[0x28]
jne 0x4017e9
add rsp, 0x68
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov rbx, qword [rsp + 8]
mov rax, rbx
mov byte [rbx + 0x10], 0x2d
mov qword [rbx + 8], 1
add rax, 0x10
mov byte [rbx + 0x11], 0
mov qword [rbx], rax
mov rax, rbx
jmp 0x401775
mov qword [rsp + 0x38], 0
mov byte [rsp + 0x40], 0
mov rbx, qword [rsp + 8]
mov rax, rbx
add rax, 0x10
mov qword [rbx], rax
mov rax, qword [rsp + 0x40]
mov rdx, qword [rsp + 0x48]
mov qword [rbx + 0x10], rax
mov qword [rbx + 0x18], rdx
jmp 0x401769
call sym.imp.__stack_chk_fail
mov rbx, rax
mov rax, qword [rsp]
mov rdi, qword [rsp + 0x30]
add rax, 0x10
cmp rdi, rax
je 0x401808
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
lea rax, [rsp + 0x30]
mov qword [rsp + 0x38], 0
mov byte [rsp + 0x40], 0
mov qword [rsp], rax
lea rax, [rsp + 0x40]
mov qword [rsp + 0x30], rax
jmp 0x4016bf
nop word cs:[rax + rax]
push r15
push r14
mov esi, obj.N
push r13
push r12
push rbp
push rbx
mov rbx, rdi
mov edi, obj.fin
sub rsp, 0x78
mov rax, qword fs:[0x28]
mov qword [rsp + 0x68], rax
xor eax, eax
call sym.std::istream::operator__
mov esi, obj.nx
mov rdi, rax
call sym.std::istream::operator__
mov esi, 0x603570
mov rdi, rax
call sym.std::istream::operator__
mov esi, 0x603568
mov rdi, rax
call sym.std::istream::operator__
mov esi, 0x60356c
mov rdi, rax
call sym.std::istream::operator__
mov esi, 0x603564
mov rdi, rax
call sym.std::istream::operator__
mov esi, 0x603574
mov rdi, rax
call sym.std::istream::operator__
mov eax, dword [rip + 0x201c9c]
mov edx, dword [rip + 0x201ca2]
cmp edx, eax
jg 0x401b16
test eax, eax
jle 0x4018de
cmp edx, eax
je 0x401d2b
sub eax, edx
mov edx, dword [rip + 0x201c8a]
mov dword [rip + 0x201c64], eax
mov eax, dword [rip + 0x201c72]
cmp edx, eax
jg 0x401b16
test eax, eax
jle 0x401906
cmp edx, eax
je 0x401b00
sub eax, edx
mov edx, dword [rip + 0x201c66]
mov dword [rip + 0x201c40], eax
mov eax, dword [rip + 0x201c4e]
cmp eax, edx
jl 0x401b16
jne 0x401938
test eax, eax
mov r12d, 2
mov r13d, 5
jg 0x401b0c
lea rbp, [rsp + 0x40]
sub eax, edx
mov dword [rip + 0x201c13], eax
mov rdi, rbp
call sym.get_sol_abi:cxx11_
mov rdi, qword [rsp + 0x40]
cmp byte [rdi], 0x2d
je 0x401a98
xor r15d, r15d
cmp qword [rsp + 0x48], 0
mov byte [rsp + 0x30], 0
mov byte [rsp + 0x31], 0
mov byte [rsp + 0x32], 0
je 0x4019da
nop dword [rax]
movzx eax, byte [rdi + r15]
lea rsi, [rsp + 0x25]
mov edx, 1
mov edi, obj.fout
mov byte [rsp + 0x25], al
call sym.std::__ostream_insert_char_std::char_traits_char__
mov rdi, qword [rsp + 0x40]
mov r13d, 3
lea rax, [rsp + 0x2d]
lea rdx, [rax + r13]
cmp byte [rdx], 0
jne 0x4019c5
mov rax, qword [rip + 0x201beb]
lea r14, [r13 - 3]
movzx ecx, byte [rax + r13 - 3]
cmp byte [rdi + r15], cl
je 0x401a21
add r13, 1
cmp r13, 6
jne 0x4019a0
add r15, 1
cmp qword [rsp + 0x48], r15
ja 0x401978
lea rax, [rbx + 0x10]
mov qword [rbx + 8], 0
mov byte [rbx + 0x10], 0
mov qword [rbx], rax
add rbp, 0x10
cmp rdi, rbp
je 0x4019fb
call sym.operatordelete
mov rax, rbx
mov rbx, qword [rsp + 0x68]
xor rbx, qword fs:[0x28]
jne 0x401cde
add rsp, 0x78
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
mov byte [rdx], 1
mov edx, dword [r13*4 + obj.nx]
test edx, edx
jle 0x4019c5
xor r12d, r12d
jmp 0x401a3f
nop dword [rax]
mov rax, qword [rip + 0x201b61]
movzx eax, byte [rax + r13]
lea rsi, [rsp + 0x26]
mov edx, 1
mov edi, obj.fout
mov byte [rsp + 0x26], al
call sym.std::__ostream_insert_char_std::char_traits_char__
mov rax, qword [rip + 0x201b3d]
lea rsi, [rsp + 0x27]
mov edx, 1
mov edi, obj.fout
movzx eax, byte [rax + r14]
mov byte [rsp + 0x27], al
call sym.std::__ostream_insert_char_std::char_traits_char__
add r12d, 1
cmp dword [r13*4 + obj.nx], r12d
jg 0x401a38
mov rdi, qword [rsp + 0x40]
jmp 0x4019c5
lea rax, [rbx + 0x10]
mov r12, qword [rip + 0x201ae5]
mov qword [rbx], rax
mov r13, qword [rip + 0x201ad3]
mov rcx, r13
add rcx, r12
je 0x401ac8
test r13, r13
jne 0x401ac8
mov edi, str.basic_string::_M_construct_null_not_valid
call sym.std::__throw_logic_error
nop dword [rax]
cmp r12, 0xf
mov qword [rsp + 0x28], r12
ja 0x401ce5
cmp r12, 1
je 0x401d1b
test r12, r12
mov rdx, rax
jne 0x401d00
mov qword [rbx + 8], r12
mov byte [rdx + r12], 0
mov rdi, qword [rsp + 0x40]
jmp 0x4019ed
mov r12d, 1
mov r13d, 4
add eax, edx
cmp eax, dword [rip + 0x201a64]
je 0x401b3b
lea rax, [rbx + 0x10]
mov rdi, rbx
mov qword [rbx], rax
mov rsi, qword [rip + 0x201a59]
mov rdx, rsi
add rdx, qword [rip + 0x201a57]
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_construct_char__
jmp 0x4019fb
lea rbp, [rsp + 0x40]
mov esi, 0x401f63
xor r14d, r14d
mov rdi, rbp
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
mov ecx, dword [r12*4 + obj.nx]
lea rax, [rbp + 0x10]
mov qword [rsp + 8], rax
movsxd rax, r13d
test ecx, ecx
mov qword [rsp + 0x18], rax
jg 0x401bfb
jmp 0x401c7d
nop word cs:[rax + rax]
movzx ecx, byte [rsp + 0x17]
mov byte [rax + r13], cl
mov rax, qword [rsp + 0x40]
mov qword [rsp + 0x48], r15
mov rcx, qword [rsp + 0x18]
mov byte [rax + r13 + 1], 0
mov rax, qword [rip + 0x2019fb]
mov r13, qword [rsp + 0x48]
movzx eax, byte [rax + rcx]
lea r15, [r13 + 1]
mov byte [rsp + 0x17], al
mov rax, qword [rsp + 0x40]
cmp rax, qword [rsp + 8]
je 0x401c73
mov rdx, qword [rsp + 0x50]
cmp r15, rdx
ja 0x401c4d
movzx ecx, byte [rsp + 0x17]
add r14d, 1
mov byte [rax + r13], cl
mov rax, qword [rsp + 0x40]
mov qword [rsp + 0x48], r15
mov byte [rax + r13 + 1], 0
cmp dword [r12*4 + obj.nx], r14d
jle 0x401c7d
mov rax, qword [rip + 0x20199e]
mov r13, qword [rsp + 0x48]
movzx eax, byte [rax + r12]
lea r15, [r13 + 1]
mov byte [rsp + 0x17], al
mov rax, qword [rsp + 0x40]
cmp rax, qword [rsp + 8]
je 0x401c6c
mov rdx, qword [rsp + 0x50]
cmp r15, rdx
jbe 0x401b80
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r13
mov rdi, rbp
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x40]
jmp 0x401b80
mov r8d, 1
xor ecx, ecx
xor edx, edx
mov rsi, r13
mov rdi, rbp
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_mutate
mov rax, qword [rsp + 0x40]
jmp 0x401bd0
mov edx, 0xf
jmp 0x401c25
mov edx, 0xf
jmp 0x401bcb
lea rax, [rbx + 0x10]
add rbp, 0x10
mov qword [rbx], rax
mov rax, qword [rsp + 0x40]
cmp rax, rbp
je 0x401cca
mov qword [rbx], rax
mov rax, qword [rsp + 0x50]
mov qword [rbx + 0x10], rax
mov rax, qword [rsp + 0x48]
mov qword [rbx + 8], rax
jmp 0x4019fb
mov rdi, qword [rsp + 0x40]
add rbp, 0x10
mov rbx, rax
cmp rdi, rbp
je 0x401cc2
call sym.operatordelete
mov rdi, rbx
call sym.imp._Unwind_Resume
mov rax, qword [rsp + 0x50]
mov rdx, qword [rsp + 0x58]
mov qword [rbx + 0x10], rax
mov qword [rbx + 0x18], rdx
jmp 0x401c9e
call sym.imp.__stack_chk_fail
jmp 0x401cac
lea rsi, [rsp + 0x28]
xor edx, edx
mov rdi, rbx
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_M_create
mov rdx, qword [rsp + 0x28]
mov qword [rbx], rax
mov qword [rbx + 0x10], rdx
mov rdx, r12
mov rsi, r13
mov rdi, rax
call sym.imp.memcpy
mov r12, qword [rsp + 0x28]
mov rdx, qword [rbx]
jmp 0x401aed
movzx edx, byte [r13]
mov byte [rbx + 0x10], dl
mov rdx, rax
jmp 0x401aed
xor r12d, r12d
mov r13d, 3
jmp 0x401b0c
nop dword [rax]
lea rax, [rdx - 1]
push r14
push rbx
mov rbx, rax
shr rbx, 0x3f
add rbx, rax
sar rbx, 1
cmp rsi, rbx
jge 0x401e7b
mov r10, rsi
jmp 0x401d6b
nop word [rax + rax]
mov r10, r8
lea rax, [r10 + 1]
lea r8, [rax + rax]
shl rax, 4
lea r11, [rdi + rax - 8]
add rax, rdi
mov r9d, dword [rax]
cmp dword [r11], r9d
jg 0x401d94
jl 0x401d9f
movzx r14d, byte [rax + 4]
cmp byte [r11 + 4], r14b
jle 0x401d9f
sub r8, 1
lea rax, [rdi + r8*8]
mov r9d, dword [rax]
lea r10, [rdi + r10*8]
cmp r8, rbx
mov dword [r10], r9d
movzx r9d, byte [rax + 4]
mov byte [r10 + 4], r9b
jl 0x401d68
test dl, 1
jne 0x401dd3
sub rdx, 2
mov r9, rdx
shr r9, 0x3f
add rdx, r9
sar rdx, 1
cmp rdx, r8
je 0x401e50
mov r11d, ecx
shl rcx, 0x18
shr rcx, 0x38
cmp r8, rsi
jle 0x401e0f
lea rax, [r8 - 1]
mov r9, rax
shr r9, 0x3f
add r9, rax
sar r9, 1
nop dword [rax]
lea rax, [rdi + r9*8]
mov r10d, dword [rax]
cmp r11d, r10d
jg 0x401e20
jl 0x401e0b
cmp cl, byte [rax + 4]
jg 0x401e20
lea rax, [rdi + r8*8]
mov dword [rax], r11d
mov byte [rax + 4], cl
pop rbx
pop r14
ret
nop dword [rax]
lea rdx, [rdi + r8*8]
mov dword [rdx], r10d
movzx r8d, byte [rax + 4]
mov byte [rdx + 4], r8b
lea rdx, [r9 - 1]
mov r8, rdx
shr r8, 0x3f
add rdx, r8
mov r8, r9
sar rdx, 1
cmp rsi, r9
jge 0x401e0f
mov r9, rdx
jmp 0x401df8
nop
add r8, 1
mov rdx, r8
lea r8, [r8 + r8 - 1]
shl rdx, 4
lea rdx, [rdi + rdx - 8]
mov r9d, dword [rdx]
mov dword [rax], r9d
movzx edx, byte [rdx + 4]
mov byte [rax + 4], dl
lea rax, [rdi + r8*8]
jmp 0x401dd3
test dl, 1
jne 0x401e8c
lea rax, [rdi + rsi*8]
mov r8, rsi
jmp 0x401db9
mov r11d, ecx
shl rcx, 0x18
lea rax, [rdi + rsi*8]
shr rcx, 0x38
jmp 0x401e0f
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200f36]
push rbp
lea rbp, [rip + 0x200f3e]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401ef6
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401ee0
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
jae 0x401f95
movsxd rbx, dword [rdi + 0x73]
je 0x401fa3
imul ebp, dword [rsi + 0x67], 0x4d5f3a3a
pop rdi
movsxd rbp, dword [rdi + 0x6e]
jae 0x401fb2
jb 0x401fb5
movsxd rsi, dword [rax + 0x6e]
jne 0x401fb2
insb byte [rdi], dx
and byte [rsi + 0x6f], ch
je 0x401f6c
jbe 0x401faf
insb byte [rdi], dx
imul esp, dword [rax + rax], 0
add byte [rbx + 0x61], al
jae 0x401fc1
and byte [rbx], ah
add byte [rdx], bh
and byte [rax], al
or al, byte [rax]
imul ebp, dword cs:[rsi], 0x756f2e42
outsd dx, dword cs:[rsi]
jne 0x401fe2
add byte [rdx + 0x42], dl
push rdx
pop rcx
push r14
add byte [rcx + 0x4d], cl
push r8
push r11
push rbx
add byte [r8], r8b
add byte [rax], al
add byte [rcx], al
add dword [rbx], ebx
add edi, dword [rbx]
jo 0x401f8a
add byte [rax], al
or eax, 0x7c000000
in al, dx
mov esp, 0xec000000
in eax, dx
jmp rsp
add byte [rax], al
add byte [rsi + rbp*8 + 0x2bcffff], bl
add byte [rax], al
int3
out dx, eax
in al, dx
add al, byte [rax]
add byte [rax + rsi*8 + 0x8cffff], cl
add byte [rax], al
int1
call qword [rcx + rax]
add byte [rax], al
pop rsp
ljmp [rcx + rax]
add byte [rax], al
sbb al, 0xf3
call qword [rcx + rax - 0xa740000]
dec dword [rdx + rax]
add byte [rax], al
mov esp, 0x64fffff8
add al, byte [rax]
add byte [rbp + rdi*8 + 0x16cffff], bh
add byte [rax], al
sbb al, 0xff
inc dword [rbx + rax]
add byte [rax], al
dec dword [rbx + rax]
add byte [rax + rax], dl
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x402017
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
clc
out dx, eax
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x402047
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
mov eax, 0x60ffffeb
add dword [rax], eax
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sub al, 0
add byte [rax], al
add byte [rax], r8b
add byte [rax], al
in eax, dx
ljmp [rbx]
adc byte [rdx + rax - 0x79e7f1bf], cl
add eax, dword [rsi + rcx + 0x20]
add dword [rdi + rax*2], 0xe
xor byte [rdx], al
cwde
and byte [rcx + 0xe], al
sbb byte [rcx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax + rax], dl
add byte [rax], al
je 0x40209e
add byte [rax], al
jo 0x402092
inc ecx
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bh
add byte [rax], al
mov word [rax], es
add byte [rax], al
sub cl, dh
inc eax
add byte [rax], al
add byte [rax], al
adc byte [rbp + 0x180e4202], cl
mov word [rbx], es
and byte [rsi + 0x280e4104], al
add dword [rip + 0x2400e44], 0x65
or cl, byte [rsi]
sub byte [rcx + 0xe], al
and byte [rcx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
int3
add byte [rax], al
add byte [rax - 4], cl
jmp qword [rax + 1]
add byte [rax], al
add byte [rsi + 0xe], al
adc byte [rsi + 0x180e4102], cl
add dword [rbx], 2
iretd
or cl, byte [rsi]
adc byte [rdx + 0xe], al
or byte [rax + 0xb], cl
add byte [rax], al
add byte [rax + rax], dl
add ah, dh
add byte [rax], al
add byte [rax + 0x61fffff1], al
add al, byte [rax]
add byte [rax], al
push rdi
adc byte [rsi + 0x180e4502], cl
lea eax, [rbx]
and byte [rsp + rax - 0x79d7f1bc], cl
add eax, 0x83300e41
add ebx, ebx
add dword [rsi], ecx
cmp byte [rcx + 0xe], cl
cmp byte [rcx + 0xe], al
xor byte [rbp + 0xe], dl
cmp byte [rdi + 0xe], bl
cmp byte [rcx + 0xe], al
xor byte [rbx - 0x3d], al
sub byte [rcx - 0x3a], al
and byte [rdx - 0x34], al
sbb byte [rdx - 0x33], al
adc byte [rdx - 0x32], al
or byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x402191
add esi, dword [rax]
or eax, 0x1b030040
or al, 7
or byte [rax + 0x54000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
js 0x40218d
jmp qword [rsi]
add eax, dword [rax]
add byte [rsp + rbp*8], al
and al, byte [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx - 0x5ff1bbf9], al
add dword [rbx], eax
imul eax, dword [rdx], 0xa
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax + rax], bh
add byte [rax - 0xa], dl
stc
add al, 0
add byte [rbx + rdi*8], al
and al, byte [rax]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1bf], es
cmp byte [rbx - 0x4ff1b3f9], al
add dword [rbx], eax
mov ebx, 0x380e0a01
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ch
add byte [rax], al
add byte [rax], al
add al, bl
jmp 0x40224a
ljmp [rcx]
add dword [rax], eax
add byte [rcx], al
and eax, dword [rax]
adc byte [rsi + 0x180e4102], al
add dword [rbx], 0x4e
add dh, dl
or cl, byte [rsi]
sbb byte [rcx + 0xe], al
adc byte [rcx + 0xe], al
or byte [rcx + 0xb], al
add byte [rax + rax], dl
add byte [rax], al
add r8b, byte [rax]
add al, bl
in al, dx
mov esp, 0
adc byte [rdx], al
mov bl, 0xe
or byte [rax + rax], al
add byte [rdx + rax], ah
add byte [rax], dl
cld
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x4022ca
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
lodsb al, byte [rsi]
add al, byte [rax]
add byte [rax], bh
cld
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
or ebx, dword [rcx + 0x5de0504]
add bl, bh
add eax, 0xff000005
inc dword [rcx]
and ch, byte [rbx]
loop 0x402303
add byte [rax], al
rol byte [rdx], 1
mov ah, 2
movabs dword [0xfe00001f05f10009], eax
and al, 0xec
or byte [rax], al
test dword [rcx], ecx
add eax, 0x9af0000
add eax, 0xff0009a3
inc dword [rcx]
andnps xmm2, xmmword [rdi]
add byte [rbx + 0x2850501], bh
add dh, bl
add dword [rsi], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x402dfa
add byte [rax], al
add byte [rax], al
add byte [rax + 0xf], dl
add byte [rax], al
add byte [rax], al
add al, al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd qword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
stc
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
fmul dword [rbx]
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rdi + rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sub eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 5], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sahf
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rax], bl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add dh, bl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rsi], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dl
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], ah
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400c], al
add byte [rax], al
add byte [rsi + 0x400c], dl
add byte [rax], al
add byte [rsi + 0x400c], ah
add byte [rax], al
add byte [rsi + 0x400c], dh
add byte [rax], al
add dh, al
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add dh, dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
or eax, 0x40
add byte [rax], al
push rsi
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x403148
je 0x403151
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x40315f
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x40315c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002d000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 5], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add dh, bl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or byte [rax], al
sbb byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add al, cl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, byte [rax]
loopne 0x40320b
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add al, bl
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, 0
add byte [rax + rax*2], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400d6000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rdi + rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add byte [rdi + rbx + 0x40], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, byte [rax]
clc
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], dl
add ah, ch
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
call 0x409322
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
sal byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x10], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x4010], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rbx], bl
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x602df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add al, ah
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg byte [rax], al
add byte [rax], al
add dword [rax], eax
adc al, 0
call 0x4094ba
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x2000000], ch
add byte [rsi], cl
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
add byte [rdx], bl
add dword [rax], eax
add byte [rdx], al
add byte [rsi], cl
add byte [rax], dl
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
rol dword [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rbx + 1], dh
add byte [rax], al
add al, byte [rax]
add al, ah
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
rol byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rcx + rax + 0x20000], bh
add byte [rax + 0x4012], ah
add byte [rax], al
add byte [rcx + 2], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb dword [rdx], eax
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xf], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bh
add byte [rax], al
sub al, 2
add byte [rax], al
add dword [rax], eax
sbb eax, dword [rax]
enter 0x6039, 0
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bh
add al, byte [rax]
add byte [rcx], al
add byte [rdx], dl
add al, ch
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [r8]
add byte [rcx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 2], dl
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
test byte [rdi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 2], ch
add byte [rax], al
add dword [rax], eax
sbb dword [rax], eax
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 2], bh
add byte [rax], al
add byte [rax], al
adc al, 0
clc
sub eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop qword [rdx]
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x409622
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x1000002], ah
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 4], ch
add byte [rax], al
and byte [rax], al
sbb al, byte [rax]
sal byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x12000002], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, al
add al, byte [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 4], ch
add byte [rax], al
adc al, byte [rax]
add byte [rax], dl
adc byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], cl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loope 0x403694
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
add al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, cl
add al, byte [rax]
add byte [rdx], dl
add byte [rdi], cl
add byte [rdi + rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 3], bl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], dl
adc eax, 0x40
add byte [rax], al
add eax, dword es:[rax]
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x12000003], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rax + 0x120000], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, dh
add eax, dword [rax]
add byte [rcx], dl
add byte [rbx], bl
add byte [rax + 0x6035], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add al, 0
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x11000004], bl
add byte [rbx], bl
add byte [rax + 0x6035], ah
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsp + rax], ch
add byte [rax], al
adc dword [rax], eax
adc byte [rax], al
and byte [rdi], bl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp eax, dword [rax + rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 4], cl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
imul eax, dword [rax + rax], 0x1a001000
add al, al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jbe 0x403816
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
nop
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add al, 0
add byte [rcx], dl
add byte [rbx], bl
add al, al
xor eax, 0x60
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rdx], al
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
sal byte [rdi], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add ch, al
add al, 0
add byte [rcx], dl
add byte [rbx], bl
add byte [rax], al
xor dword [rax], esp
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add al, cl
add al, 0
add byte [rcx], dl
add bl, byte [rdx]
add al, dl
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0x400c], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add eax, 0x2110000
sbb al, byte [rax]
enter 0x6030, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, 0x12000005
add byte [rsi], cl
add byte [rax + 0x401e], ah
add byte [rax], al
add byte [rbp], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub eax, 0x12000005
add byte [rax], al
add byte [rax + 0x400c], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 5], ch
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
push rax
xor eax, 0x60
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
insb byte [rdi], dx
add eax, 0x120000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add eax, 0x220000
add byte [rax + 0x1d], al
add byte [rax], al
add byte [rax], al
add byte [rax + 1], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and dword [rsi], eax
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
sal byte [rax], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x11000006], ch
add byte [rbx], bl
add byte [rax + 0x35], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rax, dword [rsi]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea eax, [rsi]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, byte [rdx]
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
sar byte [rcx], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, bl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub eax, dword [rdi]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
sal byte [rax], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x12000007], cl
add byte [rax], al
add byte [rax], dh
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
stosb byte [rdi], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ret 7
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0x18], al
add byte [rax], al
add byte [rax], al
add cl, bh
add al, 0
add byte [rax], al
add byte [rax], al
add cl, dl
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
xor eax, 0x60
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 7, eax
add byte [rax], al
adc al, byte [rax]
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rcx], ch
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdi], ah
add eax, 0x120000
or eax, dword [rax]
fmul dword [rbx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x403b42
jne 0x403b36
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x403af6
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403b74
jb 0x403b7a
pop rdi
jne 0x403b83
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x403b7d
je 0x403b79
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x403b99
jb 0x403b9f
pop rdi
jne 0x403ba8
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x403bab
jns 0x403b9b
outsb dx, byte gs:[rsi]
je 0x403bb2
jns 0x403b42
jb 0x403ba6
insd dword [rdi], dx
pop rdi
jne 0x403bb8
insd dword [rdi], dx
jns 0x403b4e
pop rdi
pop rdi
jb 0x403bb4
insd dword [rdi], dx
pop rdi
jne 0x403bc6
insd dword [rdi], dx
jns 0x403bbb
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403bc6
jns 0x403bc6
outsb dx, byte gs:[rsi]
je 0x403bdd
jns 0x403b6d
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x5a], bl
push rbx
je 0x403bb0
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403bef
movsxd rbx, dword [rdi + 0x73]
je 0x403bfd
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403bf8
je 0x403c0d
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rdx], esi
pop rdi
pop r15
movsxd rbp, dword [rdi + 0x6e]
jae 0x403c26
jb 0x403c29
movsxd rsi, dword [rcx + rcx*2 + 0x50]
movsxd rax, dword [rbp + 0x45]
jbe 0x403c11
pop rdi
push rbx
pop rdi
push rbx
je 0x403bf6
xor byte [rsi + 0x6f], ah
jb 0x403c40
jb 0x403c30
pop rdi
imul esi, dword [rbp + 0x72], 0x726f7461
pop rdi
je 0x403c39
imul esi, dword cs:[ebx + 0x72], 0x32332e61
add byte [rdi + 0x5a], bl
push rbx
je 0x403c18
pop rdi
pop rdi
imul ebp, dword [rsi + 0x73], 0x69747265
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x403c65
jb 0x403c6c
push r8
push rbx
je 0x403c31
jo 0x403c60
imul esi, dword [rdx + 0x49], 0x4e456369
cmp dword [rdi + 0x5f], ebx
outsb dx, byte [esi]
jne 0x403c6c
movsxd rdi, dword [rax + 0x78]
xor eax, 0x706f5f5f
jae 0x403c48
xor eax, 0x6574495f
jb 0x403c7d
insb byte [rdi], dx
jae 0x403c95
pop rdi
imul esi, dword [rbp + 0x72], 0x54764545
pop rdi
push rbx
pop rdi
push rsp
xor byte [rdi + 0x2e], bl
imul esi, dword [rbx + 0x72], 0x34332e61
add byte [rdi + 0x5a], bl
push rbx
je 0x403c78
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403cb7
movsxd rbx, dword [rdi + 0x73]
je 0x403cc5
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403cc0
je 0x403cd5
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor al, byte [r13 + 0x50]
movsxd rdx, dword [r10 + 0x4b]
push rbx
xor ebx, dword [rdi + 0x2e]
imul esi, dword [rbx + 0x72], 0x36322e61
add byte [rdi + 0x5a], bl
push rbx
je 0x403cba
pop rdi
pop rdi
imul ebp, dword [rsi + 0x74], 0x6f736f72
jb 0x403d09
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
outsd dx, dword [rsi]
jo 0x403ce4
push rax
push rbx
je 0x403cd3
jo 0x403d02
imul esi, dword [rdx + 0x49], 0x6c456369
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x403d0f
movsxd rdi, dword [rax + 0x78]
xor eax, 0x706f5f5f
jae 0x403ceb
xor eax, 0x6574495f
jb 0x403d20
insb byte [rdi], dx
jae 0x403d38
pop rdi
imul esi, dword [rbp + 0x72], 0x54764545
pop rdi
push rbx
pop rdi
push rsp
xor byte [rdi + 0x54], bl
xor dword [rdi + 0x2e], ebx
imul esi, dword [rbx + 0x72], 0x35342e61
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x403d61
pop rdi
pop r15
imul bp, word [rsi], 0x5a5f
push rbx
je 0x403d45
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdi
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403db2
jns 0x403db2
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403dc3
jns 0x403dc3
jae 0x403dda
jb 0x403ddd
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
push rbx
outsd dx, dword [rsi]
insb byte [rdi], dx
jae 0x403dc0
imul eax, dword [rax + 0x40], 0x42494c47
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x403e17
jb 0x403e1a
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x403e0c
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x403e2d
jae 0x403dbd
pop rdi
pop rdx
insb byte [rdi], dx
push rax
jbe 0x403e04
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403e0e
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403e4d
movsxd rbx, dword [rdi + 0x73]
je 0x403e5b
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403e56
je 0x403e6b
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
movsxd rsi, dword [rdx + 0x65]
je 0x403e75
push r10
insd dword [rdi], dx
insd dword [rdi], dx
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x403e63
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
je 0x403eb0
jae 0x403ec2
insb byte [rdi], dx
xor eax, 0x31787863
xor dword [rsi], esi
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x403edd
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x403ee2
pop rdi
je 0x403eea
js 0x403ef0
je 0x403ec9
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x403ed4
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
xor ebp, dword [rcx + 0x6d]
jo 0x403f04
xor eax, 0x31787863
xor dword [rax], eax
pop rdi
push r12
pop r15
jb 0x403f37
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5a], bl
xor al, 0x72
jbe 0x403f4c
insb byte [rdi], dx
xor eax, 0x31787863
xor dword [rax], eax
pop rdi
pop r15
jae 0x403f6e
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x74], dh
jb 0x403f73
outsb dx, byte gs:[rsi]
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x403f83
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403f98
pop rdi
jae 0x403fae
jb 0x403fb1
add byte [rdi + 0x5a], bl
push rbx
je 0x403f7b
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403fba
movsxd rbx, dword [rdi + 0x73]
je 0x403fc8
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403fc3
je 0x403fd8
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rbp + 0x76], r8d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rsi + 0x6f], ah
jne 0x404000
add byte [rbx + 0x68], ah
add byte [rdi + 0x5f], bl
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x403fd3
xor al, 0x62
jae 0x404010
movsxd rbx, dword [rdi + 0x69]
jae 0x404021
jb 0x404014
insd dword [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40401b
je 0x404030
imul esi, dword [rbx + rsi*2 + 0x49], 0x44454563
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
jae 0x40404c
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x40402c
xor al, 0x62
jae 0x404069
movsxd rbx, dword [rdi + 0x6f]
jae 0x40407a
jb 0x40406d
insd dword [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404074
je 0x404089
imul esi, dword [rbx + rsi*2 + 0x49], 0x44454563
xor dword [rbp + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
jo 0x4040ab
add byte [rdi + 0x5a], bl
push rbx
je 0x40406a
pop rdi
pop rdi
outsd dx, dword [rsi]
jae 0x4040b3
jb 0x4040a6
insd dword [rdi], dx
pop rdi
imul ebp, dword [rsi + 0x73], 0x49747265
movsxd rdx, dword [rbx + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4040b4
je 0x4040c9
imul esi, dword [rbx + rsi*2 + 0x49], 0x52454563
push rbx
je 0x404094
xor esp, dword [rdx + 0x61]
jae 0x4040d1
movsxd rbx, dword [rdi + 0x6f]
jae 0x4040e1
jb 0x4040d4
insd dword [rdi], dx
push r12
pop rdi
push rsp
xor byte [rdi + 0x45], bl
push rbx
pop rdi
push rax
push r11
xor ebx, dword [rdi + 0x6c]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
cmp dword [rax], eax
pop rdi
pop rdx
push rbx
je 0x4040c7
xor ebx, dword [rdi + 0x5f]
push 0x75
jae 0x404113
pop rdi
push 0x49706165
push rax
push rbx
je 0x4040dd
jo 0x40410c
imul esi, dword [rdx + 0x49], 0x6c456369
push rbx
xor dword [rdi + 0x4e], ebx
cmp dword [rdi + 0x5f], ebx
outsb dx, byte [esi]
jne 0x40411c
movsxd rdi, dword [rax + 0x78]
xor eax, 0x706f5f5f
jae 0x4040f8
xor eax, 0x6574495f
jb 0x40412d
insb byte [rdi], dx
jae 0x404145
pop rdi
imul esi, dword [rbp + 0x72], 0x54764545
pop rdi
push rsp
xor byte [rdi + 0x53], bl
pop rdi
push rsp
xor dword [rdi + 0x54], ebx
xor bl, byte [rdi]
pop rdi
pop rdi
jae 0x404161
pop rdi
jae 0x404165
jb 0x404168
add byte [rsi], cl
pop rdi
pop rdi
jae 0x40416f
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
imul esi, dword [rdx + 0x73], 0x40695245
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404161
cmp dword [rdi + 0x5f], ebx
je 0x40419d
jb 0x4041a6
ja 0x404198
insb byte [rdi], dx
outsd dx, dword [rsi]
imul esp, dword [ebx + 0x5f], 0x6f727265
jb 0x404195
movsxd rax, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x40418c
xor al, 0x62
jae 0x4041c9
movsxd rbx, dword [rdi + 0x69]
jae 0x4041da
jb 0x4041cd
insd dword [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4041d4
je 0x4041e9
imul esi, dword [rbx + rsi*2 + 0x49], 0x43454563
xor dword [rbp + 0x50], eax
movsxd rdx, dword [r11 + 0x74]
xor dword [rbx], esi
pop rdi
outsd dx, dword [rsi]
jae 0x4041ed
jo 0x4041f6
outsb dx, byte [rsi]
insd dword [rdi], dx
outsd dx, dword [rsi]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x4041db
xor al, 0x62
jae 0x404218
movsxd rbx, dword [rdi + 0x6f]
jae 0x404229
jb 0x40421c
insd dword [rdi], dx
movsxd rdx, dword [r11 + 0x74]
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404223
je 0x404238
imul esi, dword [rbx + rsi*2 + 0x49], 0x43454563
xor dword [rbp + 0x50], eax
movsxd rdx, dword [r11 + 0x74]
xor dword [rbx], esi
pop rdi
outsd dx, dword [rsi]
jae 0x40423c
jo 0x404245
outsb dx, byte [rsi]
insd dword [rdi], dx
outsd dx, dword [rsi]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x404230
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x40426f
movsxd rbx, dword [rdi + 0x73]
je 0x40427d
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x404278
je 0x40428d
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
cmp dword [rdi + 0x4d], ebx
pop rdi
insd dword [rdi], dx
jne 0x4042a3
je 0x404297
insd dword [rdi], dx
insd dword [rdi], dx
push rax
movsxd rbp, dword [r13 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x4042b1
add byte [rdi + 0x5f], bl
js 0x4042ce
pop rdi
jo 0x4042be
jb 0x4042ce
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x4042e0
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x4042f3
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
pop rdi
pop rdx
xor esi, dword [rdx + 0x75]
outsb dx, byte [rsi]
xor eax, 0x31787863
xor dword [rsi], esi
outsb dx, byte [rsi]
js 0x40429c
insd dword [rdi], dx
insd dword [rdi], dx
movsxd rsi, dword [rax + 0x79]
pop r15
xor ch, byte [rsi]
xor dword [rax + rax], esi
insd dword [rdi], dx
imul ebp, dword [rsi], 0x79732e00
insd dword [rdi], dx
je 0x40431c
add byte [rsi], ch
jae 0x404334
jb 0x404336
add byte [rsi], ch
jae 0x404330
jae 0x40433e
jb 0x404340
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x404341
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x40434f
outsb dx, byte cs:[esi]
jne 0x40431d
jne 0x40435b
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x40432b
push 0x687361
jns 0x404374
jae 0x404381
insd dword [rdi], dx
add byte [rsi], ch
jns 0x40437c
jae 0x404384
jb 0x404312
outsb dx, byte cs:[esi]
jne 0x404345
jbe 0x40437e
jb 0x40438e
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x404352
jbe 0x40438b
jb 0x40439b
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x404396
insb byte [rdi], dx
jns 0x4043a5
add byte [rsi], ch
jb 0x4043a0
insb byte [rdi], dx
jo 0x4043ac
je 0x404342
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x40437b
outsd dx, dword [esi]
je 0x404351
je 0x4043b9
js 0x4043ca
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x4043cf
je 0x4043c5
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x4043e8
jo 0x4043fc
pop rdi
je 0x4043ec
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4043fa
jns 0x40439b
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x404416
jns 0x4043a7
push 0x63
jb 0x4043ac
jns 0x40441e
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x404428
je 0x4043be
je 0x404424
add byte [rsi], ch
jae 0x40443b
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x4043d2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 1
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 2], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x40
add byte [rax], al
add eax, 0
add byte [rax], al
sahf
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bl
or byte [rax], al
add byte [rax], al
add byte [rax], al
fimul word [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
or dword [rax], eax
add byte [rax], al
add byte [rax], al
sbb byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 0x4009, 0
add byte [rax], al
add byte [rax], al
enter 9, 0
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
or dword [rax], eax
add byte [rax], al
add byte [rax], al
loopne 0x40467b
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rip + 0x19000000], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
fmul dword [rbx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax + 1], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs byte [0x11], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rdi + rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rbx + 0x40], al
add byte [rax], al
test byte [rdi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
je 0x40483a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
hlt
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, ch
and al, byte [rax]
add byte [rax], al
add byte [rax], al
in al, dx
and al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fild dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sub eax, 0x60
add byte [rax], al
call 0x404922
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sub eax, 0x60
add byte [rax], al
clc
sub eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
sal byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
xor byte [rax], ah
add byte [rax], al
add byte [rax], al
sal byte [rax], 1
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ah, 0x42
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add al, al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rsi], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
cmp al, byte [rax]
add byte [rax], al
add byte [rax], al
add ah, ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
