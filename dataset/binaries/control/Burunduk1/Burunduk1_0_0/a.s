xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x602097
push rbp
sub rax, obj.__TMC_END__
cmp rax, 0xe
mov rbp, rsp
jbe 0x400990
mov eax, 0
test rax, rax
je 0x400990
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.__TMC_END__
push rbp
sub rsi, obj.__TMC_END__
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x4009d8
mov eax, 0
test rax, rax
je 0x4009d8
pop rbp
mov edi, obj.__TMC_END__
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x2016c1], 0
jne 0x4009fa
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x2016ae], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400a10
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400a0b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x58
mov rax, qword fs:[0x28]
mov qword [rbp - 0x18], rax
xor eax, eax
lea rdx, [rbp - 0x4c]
lea rax, [rbp - 0x48]
mov rsi, rax
mov edi, str._d_d
mov eax, 0
call sym.imp.scanf
lea rax, [rbp - 0x38]
mov rdi, rax
call sym.std::allocator_Horse_::allocator
mov eax, dword [rbp - 0x4c]
add eax, 1
movsxd rcx, eax
lea rdx, [rbp - 0x38]
lea rax, [rbp - 0x30]
mov rsi, rcx
mov rdi, rax
call sym.std::vector_Horse_std::allocator_Horse__::vector
lea rax, [rbp - 0x38]
mov rdi, rax
call sym.std::allocator_Horse_::_allocator
pxor xmm0, xmm0
movsd qword [rbp - 0x40], xmm0
mov dword [rbp - 0x44], 0
mov eax, dword [rbp - 0x4c]
cmp dword [rbp - 0x44], eax
jge 0x400b79
mov eax, dword [rbp - 0x44]
movsxd rdx, eax
lea rax, [rbp - 0x30]
mov rsi, rdx
mov rdi, rax
call sym.std::vector_Horse_std::allocator_Horse__::operator__
lea rbx, [rax + 8]
mov eax, dword [rbp - 0x44]
movsxd rdx, eax
lea rax, [rbp - 0x30]
mov rsi, rdx
mov rdi, rax
call sym.std::vector_Horse_std::allocator_Horse__::operator__
mov rdx, rbx
mov rsi, rax
mov edi, str._lf_d
mov eax, 0
call sym.imp.scanf
mov eax, dword [rbp - 0x48]
pxor xmm2, xmm2
cvtsi2sd xmm2, eax
movsd qword [rbp - 0x58], xmm2
mov eax, dword [rbp - 0x44]
movsxd rdx, eax
lea rax, [rbp - 0x30]
mov rsi, rdx
mov rdi, rax
call sym.std::vector_Horse_std::allocator_Horse__::operator__
movsd xmm0, qword [rax]
movsd xmm2, qword [rbp - 0x58]
subsd xmm2, xmm0
movsd qword [rbp - 0x58], xmm2
mov eax, dword [rbp - 0x44]
movsxd rdx, eax
lea rax, [rbp - 0x30]
mov rsi, rdx
mov rdi, rax
call sym.std::vector_Horse_std::allocator_Horse__::operator__
mov eax, dword [rax + 8]
pxor xmm0, xmm0
cvtsi2sd xmm0, eax
movsd xmm2, qword [rbp - 0x58]
divsd xmm2, xmm0
movapd xmm0, xmm2
movsd qword [rbp - 0x38], xmm0
lea rdx, [rbp - 0x38]
lea rax, [rbp - 0x40]
mov rsi, rdx
mov rdi, rax
call sym.std::max_double_
movsd xmm0, qword [rax]
movsd qword [rbp - 0x40], xmm0
add dword [rbp - 0x44], 1
jmp 0x400a9c
mov eax, dword [rbp - 0x48]
pxor xmm0, xmm0
cvtsi2sd xmm0, eax
movsd xmm1, qword [rbp - 0x40]
divsd xmm0, xmm1
mov edi, str._.9f_n
mov eax, 1
call sym.imp.printf
lea rax, [rbp - 0x30]
mov rdi, rax
call sym.std::vector_Horse_std::allocator_Horse__::_vector
nop
mov rax, qword [rbp - 0x18]
xor rax, qword fs:[0x28]
je 0x400bf3
jmp 0x400bee
mov rbx, rax
lea rax, [rbp - 0x38]
mov rdi, rax
call sym.std::allocator_Horse_::_allocator
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
mov rbx, rax
lea rax, [rbp - 0x30]
mov rdi, rax
call sym.std::vector_Horse_std::allocator_Horse__::_vector
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
call sym.imp.__stack_chk_fail
add rsp, 0x58
pop rbx
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
lea rax, [rbp - 0x10]
mov rsi, rax
mov edi, 0x401451
mov eax, 0
call sym.imp.scanf
mov dword [rbp - 0xc], 1
mov eax, dword [rbp - 0x10]
cmp dword [rbp - 0xc], eax
jg 0x400c71
mov eax, dword [rbp - 0xc]
mov esi, eax
mov edi, str.Case___d:
mov eax, 0
call sym.imp.printf
mov rax, qword [rip + 0x20144f]
mov edx, dword [rbp - 0xc]
mov esi, str.Case___d_n
mov rdi, rax
mov eax, 0
call sym.imp.fprintf
call sym.solve
add dword [rbp - 0xc], 1
jmp 0x400c2e
mov eax, 0
mov rcx, qword [rbp - 8]
xor rcx, qword fs:[0x28]
je 0x400c8a
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
cmp dword [rbp - 4], 1
jne 0x400cc7
cmp dword [rbp - 8], 0xffff
jne 0x400cc7
mov edi, obj.std::__ioinit
call sym.std::ios_base::Init::Init
mov edx, obj.__dso_handle
mov esi, obj.std::__ioinit
mov edi, sym.std::ios_base::Init::_Init
call sym.imp.__cxa_atexit
nop
leave
ret
push rbp
mov rbp, rsp
mov esi, 0xffff
mov edi, 1
call sym.__static_initialization_and_destruction_0
pop rbp
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.__gnu_cxx::new_allocator_Horse_::new_allocator
nop
leave
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.__gnu_cxx::new_allocator_Horse_::_new_allocator
nop
leave
ret
nop
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x28
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov qword [rbp - 0x28], rdx
mov rax, qword [rbp - 0x18]
mov rdx, qword [rbp - 0x28]
mov rcx, qword [rbp - 0x20]
mov rsi, rcx
mov rdi, rax
call sym.std::_Vector_base_Horse_std::allocator_Horse__::_Vector_base
mov rdx, qword [rbp - 0x20]
mov rax, qword [rbp - 0x18]
mov rsi, rdx
mov rdi, rax
call sym.std::vector_Horse_std::allocator_Horse__::_M_default_initialize
jmp 0x400d73
mov rbx, rax
mov rax, qword [rbp - 0x18]
mov rdi, rax
call sym.std::_Vector_base_Horse_std::allocator_Horse__::__Vector_base
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
add rsp, 0x28
pop rbx
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::_Vector_base_Horse_std::allocator_Horse__::_M_get_Tp_allocator
mov rdx, rax
mov rax, qword [rbp - 8]
mov rcx, qword [rax + 8]
mov rax, qword [rbp - 8]
mov rax, qword [rax]
mov rsi, rcx
mov rdi, rax
call sym.std::_Destroy_Horse__Horse_
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::_Vector_base_Horse_std::allocator_Horse__::__Vector_base
nop
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rax, qword [rbp - 8]
mov rax, qword [rax]
mov rdx, qword [rbp - 0x10]
shl rdx, 4
add rax, rdx
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rax, qword [rbp - 8]
movsd xmm1, qword [rax]
mov rax, qword [rbp - 0x10]
movsd xmm0, qword [rax]
ucomisd xmm0, xmm1
jbe 0x400e06
mov rax, qword [rbp - 0x10]
jmp 0x400e0a
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
nop
pop rbp
ret
nop
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
nop
pop rbp
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::allocator_Horse_::_allocator
nop
leave
ret
nop
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x28
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov qword [rbp - 0x28], rdx
mov rax, qword [rbp - 0x18]
mov rdx, qword [rbp - 0x28]
mov rsi, rdx
mov rdi, rax
call sym.std::_Vector_base_Horse_std::allocator_Horse__::_Vector_impl::_Vector_impl
mov rdx, qword [rbp - 0x20]
mov rax, qword [rbp - 0x18]
mov rsi, rdx
mov rdi, rax
call sym.std::_Vector_base_Horse_std::allocator_Horse__::_M_create_storage
jmp 0x400e97
mov rbx, rax
mov rax, qword [rbp - 0x18]
mov rdi, rax
call sym.std::_Vector_base_Horse_std::allocator_Horse__::_Vector_impl::__Vector_impl
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
add rsp, 0x28
pop rbx
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rax, qword [rax + 0x10]
mov rdx, rax
mov rax, qword [rbp - 8]
mov rax, qword [rax]
sub rdx, rax
mov rax, rdx
sar rax, 4
mov rdx, rax
mov rax, qword [rbp - 8]
mov rcx, qword [rax]
mov rax, qword [rbp - 8]
mov rsi, rcx
mov rdi, rax
call sym.std::_Vector_base_Horse_std::allocator_Horse__::_M_deallocate
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::_Vector_base_Horse_std::allocator_Horse__::_Vector_impl::__Vector_impl
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::_Vector_base_Horse_std::allocator_Horse__::_M_get_Tp_allocator
mov rdx, rax
mov rax, qword [rbp - 8]
mov rax, qword [rax]
mov rcx, qword [rbp - 0x10]
mov rsi, rcx
mov rdi, rax
call sym.std::__uninitialized_default_n_a_Horse__unsignedlong_Horse_
mov rdx, rax
mov rax, qword [rbp - 8]
mov qword [rax + 8], rdx
nop
leave
ret
nop
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov qword [rbp - 0x18], rdx
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call sym.std::_Destroy_Horse__
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call method.std::allocator_Horse_.allocator
mov rax, qword [rbp - 8]
mov qword [rax], 0
mov rax, qword [rbp - 8]
mov qword [rax + 8], 0
mov rax, qword [rbp - 8]
mov qword [rax + 0x10], 0
nop
leave
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call sym.std::_Vector_base_Horse_std::allocator_Horse__::_M_allocate
mov rdx, rax
mov rax, qword [rbp - 8]
mov qword [rax], rdx
mov rax, qword [rbp - 8]
mov rdx, qword [rax]
mov rax, qword [rbp - 8]
mov qword [rax + 8], rdx
mov rax, qword [rbp - 8]
mov rax, qword [rax]
mov rdx, qword [rbp - 0x10]
shl rdx, 4
add rdx, rax
mov rax, qword [rbp - 8]
mov qword [rax + 0x10], rdx
nop
leave
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov qword [rbp - 0x18], rdx
cmp qword [rbp - 0x10], 0
je 0x401040
mov rax, qword [rbp - 8]
mov rdx, qword [rbp - 0x18]
mov rcx, qword [rbp - 0x10]
mov rsi, rcx
mov rdi, rax
call sym.std::allocator_traits_std::allocator_Horse__::deallocate
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov qword [rbp - 0x18], rdx
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call sym.std::__uninitialized_default_n_Horse__unsignedlong_
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call sym.std::_Destroy_aux_true_::__destroy_Horse__
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rdx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rdx
mov rdi, rax
call method.__gnu_cxx::new_allocator_Horse_.new_allocator
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
cmp qword [rbp - 0x10], 0
je 0x4010e4
mov rax, qword [rbp - 8]
mov rdx, qword [rbp - 0x10]
mov rsi, rdx
mov rdi, rax
call sym.std::allocator_traits_std::allocator_Horse__::allocate
jmp 0x4010e9
mov eax, 0
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov qword [rbp - 0x18], rdx
mov rdx, qword [rbp - 0x18]
mov rcx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov rsi, rcx
mov rdi, rax
call sym.__gnu_cxx::new_allocator_Horse_::deallocate
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov byte [rbp - 1], 1
mov rdx, qword [rbp - 0x20]
mov rax, qword [rbp - 0x18]
mov rsi, rdx
mov rdi, rax
call sym.std::__uninitialized_default_n_1_true_::__uninit_default_n_Horse__unsignedlong_
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
nop
pop rbp
ret
nop
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
nop
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov rcx, qword [rbp - 0x10]
mov rax, qword [rbp - 8]
mov edx, 0
mov rsi, rcx
mov rdi, rax
call sym.__gnu_cxx::new_allocator_Horse_::allocate
leave
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov qword [rbp - 0x18], rdx
mov rax, qword [rbp - 0x10]
mov rdi, rax
call sym.operatordelete
nop
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x30
mov qword [rbp - 0x28], rdi
mov qword [rbp - 0x30], rsi
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
pxor xmm0, xmm0
movsd qword [rbp - 0x20], xmm0
mov dword [rbp - 0x18], 0
lea rdx, [rbp - 0x20]
mov rcx, qword [rbp - 0x30]
mov rax, qword [rbp - 0x28]
mov rsi, rcx
mov rdi, rax
call sym.std::fill_n_Horse__unsignedlong_Horse_
mov rcx, qword [rbp - 8]
xor rcx, qword fs:[0x28]
je 0x401209
call sym.imp.__stack_chk_fail
leave
ret
nop
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov qword [rbp - 0x18], rdx
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.__gnu_cxx::new_allocator_Horse_::max_size
cmp rax, qword [rbp - 0x10]
setb al
test al, al
je 0x40123c
call sym.std::__throw_bad_alloc
mov rax, qword [rbp - 0x10]
shl rax, 4
mov rdi, rax
call sym.operatornew
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x20
mov qword [rbp - 8], rdi
mov qword [rbp - 0x10], rsi
mov qword [rbp - 0x18], rdx
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::__niter_base_Horse__
mov rcx, rax
mov rdx, qword [rbp - 0x18]
mov rax, qword [rbp - 0x10]
mov rsi, rax
mov rdi, rcx
call sym.std::__fill_n_a_Horse__unsignedlong_Horse_
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
movabs rax, 0xfffffffffffffff
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
mov rdi, rax
call sym.std::_Iter_base_Horse__false_::_S_base
leave
ret
push rbp
mov rbp, rsp
mov qword [rbp - 0x18], rdi
mov qword [rbp - 0x20], rsi
mov qword [rbp - 0x28], rdx
mov rax, qword [rbp - 0x20]
mov qword [rbp - 8], rax
cmp qword [rbp - 8], 0
je 0x4012f5
mov rcx, qword [rbp - 0x18]
mov rax, qword [rbp - 0x28]
mov rdx, qword [rax + 8]
mov rax, qword [rax]
mov qword [rcx], rax
mov qword [rcx + 8], rdx
sub qword [rbp - 8], 1
add qword [rbp - 0x18], 0x10
jmp 0x4012cc
mov rax, qword [rbp - 0x18]
pop rbp
ret
push rbp
mov rbp, rsp
mov qword [rbp - 8], rdi
mov rax, qword [rbp - 8]
pop rbp
ret
nop dword [rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200ac6]
push rbp
lea rbp, [rip + 0x200ace]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401366
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401350
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, 0
add byte [rax], al
add eax, 0x6000000
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], cl
or byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
or al, byte [rax]
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
jmp qword [rip + 0x642564]
and eax, 0x642564
and eax, 0x6425666c
add byte [rip + 0xa66392e], ah
and eax, 0xa66392e
add byte [rip + 0x61430064], ah
jae 0x4014bd
and byte [rbx], ah
and eax, 0x203a64
jae 0x4014c8
and byte [rbx], ah
and eax, 0xa64
add byte [rax], al
add byte [rcx], al
add dword [rbx], ebx
add edi, dword [rbx]
pop rax
add dword [rax], eax
add byte [rdx], ch
add byte [rax], al
add ah, dl
jmp qword [rcx + rax - 0xb3c0000]
push qword [rcx + rax]
add byte [rdx - 0x1300000b], bh
add dword [rax], eax
add byte [rsi + 0x14fffff7], cl
add al, byte [rax]
add byte [rax], ah
clc
call qword [rsi + rax - 0x7a20000]
push qword [rsi + rax - 0x78c0000]
push qword [rdx + rax]
add byte [rax], al
nop
clc
call qword [rdx + rax]
add byte [rax + rdi*8 + 0x274ffff], ch
add byte [rax], al
stc
lcall [rdx + rax - 0x6ae0000]
inc esp
add al, byte [rax]
add byte [rdx - 7], dh
jmp rsp
add al, byte [rax]
add byte [rax + 0x4fffff9], ah
add eax, dword [rax]
add byte [rcx + rdi*8 + 0x324ffff], ch
add byte [rax], al
mov eax, 0x44fffff9
add eax, dword [rax]
add ah, dl
stc
jmp qword [rbx + rax]
add byte [rdx], dh
cli
dec dword [rbx + rax - 0x57e0000]
push qword [rbx + rax - 0x53a0000]
call rsp
add eax, dword [rax]
add ah, dl
cli
push rsp
add eax, dword [rax]
add dh, bh
cli
call qword [rsp + rax]
add byte [rax], al
sti
push qword [rsp + rax]
add byte [rax], al
movabs byte [0xd700000454fffffb], al
sti
push qword [rsp + rax]
add byte [rax], al
cld
call qword [rsp + rax - 0x3da0000]
push qword [rsp + rax - 0x3b40000]
call rsp
add al, 0
add byte [rdi - 4], bh
push rsp
add al, 0
add byte [rbp + 0x14fffffc], ch
add eax, 0xfcd60000
push qword [rax - 0x31a0000]
call qword [rbp + rax]
add ch, dh
cld
push qword [rbp + rax]
add byte [rax], ah
std
call qword [rbp + rax - 0x2bd0000]
push qword [rbp + rax - 0x2600000]
call rsp
add eax, 0xfde20000
push rsp
add eax, 0xfe1a0000
call qword [rsi + rax]
add byte [rax], al
push qword [rsi + rax]
add byte [rax], al
call qword [rsi + rax]
add byte [rdi + 0x74fffffe], cl
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
call rsp
add byte [rax], al
adc al, 0xff
lcall [rdi + rax]
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x4015e7
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x401617
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sub dl, dh
jmp rax
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x401659
add esp, eax
or byte [rax], al
add ebx, dword [rbx]
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
call rsp
add dword [rax], eax
add byte [rsp], al
sbb eax, dword [rax]
adc byte [rsi + 0x60d4302], al
add dword [r11], 3
retf 0xc01
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
mov word [rax], es
add byte [rax], al
jb 0x40167f
call qword [rdx]
adc byte [rsi + 0x60d4302], al
add cl, byte [rbp + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
lodsb al, byte [rsi]
add byte [rax], al
add byte [rax], bh
idiv bh
lcall [rbx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rsi
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
int3
add byte [rax], al
add byte [rsi + rsi*8], dh
lcall [rbx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rsi
or al, 7
or byte [rax], al
add byte [rax], al
and al, 0
add byte [rax], al
lodsb al, byte [rsi]
add byte [rax], al
add byte [rax], dh
idiv bh
jmp qword [rdx]
add byte [rax], al
add al, 0xbd
sbb eax, dword [rax]
adc byte [rsi + 0x60d4302], al
add dword [r11], 2
pop rax
or al, 7
or byte [rax], al
add byte [rax], al
and al, 0
add byte [rax], al
add byte [rax], al
add byte [rdx - 0xa], ch
inc dword [rax + rax]
add byte [rcx*8 + 0x4100401b], al
adc byte [rsi + 0x60d4302], al
jg 0x401733
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
cmp al, 1
add byte [rax], al
xchg dh, dh
jmp qword [rax]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
pop rbx
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
pop rsp
add dword [rax], eax
add byte [rsi + 0x2efffff6], al
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
imul ecx, dword [rdi + rax], 8
sbb al, 0
add byte [rax], al
jl 0x401777
add byte [rax], al
xchg eax, esp
idiv bh
dec dword [rbx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
pushfq
add dword [rax], eax
add byte [rax + 0xbfffff6], al
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
mov esp, 0x6c000001
idiv bh
lcall [rbx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rsi
or al, 7
or byte [rax], al
add byte [rax], al
and al, 0
add byte [rax], al
pushfq
add dword [rax], eax
add byte [rax - 0xa], ch
lcall [rsi]
add byte [rax], al
add al, 0xd1
sbb eax, dword [rax]
adc byte [rsi + 0x60d4302], al
add dword [r11], 2
push rsp
or al, 7
or byte [rax], al
add byte [rax], al
and al, 0
add byte [rax], al
add dword [rax], eax
add byte [rsi + 0x50fffff6], bl
add byte [rax], al
add byte [rbx*8 + 0x4100401b], al
adc byte [rsi + 0x60d4302], al
add cl, byte [rbx + 0xc]
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
sub al, 2
add byte [rax], al
idiv bh
inc dword [rbx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
jle 0x401847
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add r8b, byte [rax]
add dl, ch
idiv bh
dec dword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
insb byte [rdi], dx
add al, byte [rax]
add al, bl
idiv bh
ljmp [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
mov word [rdx], es
add byte [rax], al
loop 0x401880
dec dword [rcx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add al, byte [rsp + rcx + 7]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
lodsb al, byte [rsi]
add al, byte [rax]
add byte [rdi + rsi*8], cl
lcall [rcx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add dl, byte [rsp + rcx + 7]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
int3
add al, byte [rax]
add byte [rsi - 9], al
push qword [rip]
adc byte [rsi + 0x60d4302], al
jo 0x4018e7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
in al, dx
add al, byte [rax]
add byte [rbx - 9], bl
ljmp [rcx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
or al, 3
add byte [rax], al
idiv edi
jmp qword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
sub al, 3
add byte [rax], al
push -9
jmp qword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add r8, qword [rax]
add byte [rax - 9], dh
push qword [rbx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
outsb dx, byte [rsi]
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
insb byte [rdi], dx
add eax, dword [rax]
add byte [rbx + 0x2efffff7], al
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
imul ecx, dword [rdi + rax], 8
sbb al, 0
add byte [rax], al
mov word [rbx], es
add byte [rax], al
xchg eax, ecx
idiv edi
ljmp [rcx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
lodsb al, byte [rsi]
add eax, dword [rax]
add byte [rdx + 0xffffff7], bl
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
int3
add eax, dword [rax]
add byte [rdx + 0xffffff7], cl
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
in al, dx
add eax, dword [rax]
add byte [rcx - 9], bh
ljmp [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
or al, 4
add byte [rax], al
test bh, dh
jmp qword [rbx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
pop rsi
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
sub al, 4
add byte [rax], al
xchg edi, esi
lcall [rax + rax]
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add dl, byte [rdi + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add al, 0
add ah, al
idiv edi
inc dword [rdx]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
jge 0x401a67
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
insb byte [rdi], dx
add al, 0
add dh, ah
idiv edi
cmp byte [rax], al
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
jae 0x401a87
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
mov word [rax + rax], es
add dh, bh
idiv edi
call qword [rax + rax]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
lodsb al, byte [rsi]
add al, 0
add dl, dh
idiv edi
lcall [rdx]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
push rbp
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
int3
add al, 0
add ah, ch
idiv edi
inc dword [rdi]
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add al, byte [rdx + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
in al, dx
add al, 0
add byte [rbx], dl
clc
dec dword [rsi]
add byte [rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
or al, 5
add byte [rax], al
test cl, dh
add byte ds:[rax], al
add byte [rax], al
adc byte [rsi + 0x60d4302], al
jns 0x401b27
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
sub al, 5
add byte [rax], al
movabs byte [0x15fffff1], al
adc byte [rsi + 0x60d4302], al
push rax
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rbp + rax], cl
add al, cl
idiv edi
jmp qword [rbp]
add byte [rax], al
add byte [rdx + 0xe], al
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x401b82
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
xchg eax, esp
add eax, 0xf7f00000
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
adc eax, 0x52d
push rbp
add eax, 0xc0000394
add dword [rsi + 0x3ae01], esi
test eax, 0x1f03
inc dword [rcx]
or al, 0x27
add eax, 0x53a0000
add byte [r14 + 5], dl
add byte [rax], al
inc dword [rcx]
add bh, bh
inc dword [rcx]
or byte [rsi], dh
add eax, 0x552003d
add byte [rax], al
inc dword [rcx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
retf 0x400c
add byte [rax], al
add byte [rax], al
add al, ah
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add byte [rbx + rdx + 0x40], al
add byte [rax], al
sbb dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
call 0x407e82
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax + 0x4004], dl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
jne 0x401ed3
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4006], dh
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bh
ljmp [rdi]
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 8], dl
add byte [rax], al
add byte [rax], al
add byte [rsi + 8], ah
add byte [rax], al
add byte [rax], al
add byte [rsi + 8], dh
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x4008], al
add byte [rax], al
add byte [rsi + 0x4008], dl
add byte [rax], al
add byte [rsi + 0x4008], ah
add byte [rax], al
add byte [rsi + 0x4008], dh
add byte [rax], al
add dh, al
or byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
out 8, al
add byte [rax], al
add byte [rax], al
add dh, dh
or byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402108
je 0x402111
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x40211f
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x40211c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002c800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax + 0x4004], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax + 0x4006], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], cl
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add byte [rax], bl
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, 0
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or eax, 0x40092000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax], dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sldt word [rbx + rdx + 0x40]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc byte [rax], al
nop
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc dword [rax], eax
insb byte [rdi], dx
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add al, cl
adc eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
movsb byte [rdi], byte ptr [rsi]
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc al, 0
call 0x4082d2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
and byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 9], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x4009], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, ah
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rbx], bl
add byte [rax + 0x6020], ch
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dl
add byte [rax], al
add dword [rax], eax
adc eax, 0x601df800
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg byte [rax], al
add byte [rax], al
add dword [rax], eax
adc al, 0
call 0x40846a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ch
add byte [rax], dl
add byte [rax + 0x4013], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, al
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x4013], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x4013], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
add byte [rax], al
add byte [rcx], al
add byte [rbx], bl
add byte [rcx + 0x6020], ch
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, dh
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rbx + rdx + 0x40], bl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4013], ah
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x4013], ah
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 1], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
movabs byte [0x100000000004013], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 1], dl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
movsb byte [rdi], byte ptr [rsi]
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
je 0x40254b
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
test al, 0x13
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rbx + rdx + 0x40], ch
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dh, 1
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov al, 0x13
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xlatb
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rbx + rdx + 0x40], dh
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
cld
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4013], bh
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rdx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov esp, 0x4013
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp eax, 0x1000002
add byte [rax], dl
add al, al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdx
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add ah, al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x40260c
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
enter 0x4013, 0
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edi
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add ah, cl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000002
add byte [rax], dl
add al, dl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 2, eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
lsl eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add al, bl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add ah, bl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdi
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add al, ah
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add ah, ah
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
stosd dword [rdi], eax
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add al, ch
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add ah, ch
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax + rax], eax
add byte [rcx], al
add byte [rax], dl
add al, dh
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax + rax]
add byte [rcx], al
add byte [rax], dl
add ah, dh
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rcx], al
add byte [rax], dl
add al, bh
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x402746
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
cld
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax], al
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
int3
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rsp + rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rcx], al
add byte [rax], dl
add byte [rax], cl
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb dword [rip + 0x10000], eax
adc byte [rax], al
or al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
adc byte [rax + rax*2], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
adc al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea eax, [rip + 0x10000]
adc byte [rax], al
sbb byte [rax + rax*2], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov bl, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd qword [rip + 0x10000]
adc byte [rax], al
and byte [rax + rax*2], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rsi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
and al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rsi], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sub byte [rax + rax*2], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sub al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jge 0x402880
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
xor byte [rax + rax*2], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x3800100001000006], eax
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add al, byte [rax]
add byte [rsp + rcx + 0x40], cl
add byte [rax], al
add byte ds:[rax], al
add byte [rax], al
add byte [rax], al
add cl, bh
add byte [rax], al
add al, byte [rax]
add dl, cl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rip], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], dl
add byte [rax], al
add dword [rax], eax
adc al, byte [rax]
movabs al, byte [0x401b]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rax], ch
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
insb byte [rdi], dx
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], bh
add byte [rax], al
add dword [rax], eax
sbb dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 7], dl
add byte [rax], al
add byte [rax], al
adc al, 0
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x4089aa
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 7], bh
add byte [rax], al
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dh
add byte [rax], al
and byte [rax], al
sbb al, byte [rax]
and byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x22000007], al
add byte [rsi], cl
add byte [rsi], cl
adc byte [rax], al
add byte [rax], al
add byte [rax], al
xor eax, 0
add byte [rax], al
add byte [rdx + 0x22000007], bh
add byte [rsi], cl
add dh, ch
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
int 0x10
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, eax
add byte [rax], al
adc al, byte [rax]
add byte [rax + 0x4013], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
add byte [rax], al
and al, byte [rax]
add byte [rdi + rcx + 0x40], dh
add byte [rax], al
pop rcx
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0xc], bh
add byte [rax], al
adc al, byte [rax]
add byte [rax], dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
sub al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rdx], ah
add byte [rsi], cl
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], ah
add byte [rax], al
and al, byte [rax]
add byte [rsi + 0x400e], bl
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg dword [rax], ecx
add byte [rax], al
and al, byte [rax]
add byte [rdx + 0x11], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x20000008], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, cl
or byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, bl
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
adc al, byte [rax]
add byte [rsi], ah
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add dl, dh
or byte [rax], al
add byte [rdx], ah
add byte [rsi], cl
add bl, ch
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
add cl, bh
add byte [rax], al
adc al, byte [rax]
sldt word [rbx + rdx + 0x40]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, 9
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rcx
or dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add byte [rsi + 0x400d], bh
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 9], dh
add byte [rax], al
and al, byte [rax]
add byte [rdx + 0xd], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x22000009], dl
add byte [rsi], cl
add byte [rdx + 0x4012], bl
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
or dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, dh
or dword [rax], eax
add byte [rdx], ah
add byte [rsi], cl
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rcx], bl
add byte [rax], al
and al, byte [rax]
add byte [rsi + 0x4012], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or r8b, byte [r8]
add byte [rdx], ah
add byte [rsi], cl
add byte [rax + rdx + 0x40], ch
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0xa], ch
add byte [rax], al
and al, byte [rax]
add byte [rdx + 0x4010], dl
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x2200000a], al
add byte [rsi], cl
add byte [rax + 0x4010], bh
add byte [rax], al
add byte [rbx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x1200000a], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, cl
or al, byte [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rdx], dh
cmovo eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
or eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rdx + 0x11], dl
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], dh
or eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0x4008], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xb], bl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
je 0x402ca5
add byte [rax], al
and al, byte [rax]
add byte [rsi + rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x1100000b], bl
add byte [rax], dl
add byte [rax + 0x4013], dl
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lodsb al, byte [rsi]
or eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add dh, bl
or eax, 0x40
add byte [rax], al
add byte cs:[rax], al
add byte [rax], al
add byte [rax], al
add dl, al
or eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add al, ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dl
or eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
or eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add ah, bh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, bh
or eax, dword [rax]
add byte [rdx], ah
add byte [rsi], cl
add byte [rax + 0xe], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, 0x2200000c
add byte [rsi], cl
add byte [rsi + rcx], ah
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0xc], bl
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
je 0x402d7e
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
and byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x2200000c], al
add byte [rsi], cl
add byte [rax], bl
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x2200000c], ah
add byte [rsi], cl
add byte [rsi + 0x12], cl
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, cl
or al, 0
add byte [rdx], ah
add byte [rsi], cl
add byte [rax + 0xf], al
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dh
or al, 0
add byte [rdx], ah
add byte [rsi], cl
add byte [rdx + 0xf], ch
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub eax, 0x2200000d
add byte [rsi], cl
add byte [rdx + 0x11], dl
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0xd], bl
add byte [rax], al
and al, byte [rax]
add byte [rdx + 0x4010], dl
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xd], dh
add byte [rax], al
adc dword [rdx], eax
sbb al, byte [rax]
nop
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jl 0x402e3f
add byte [rax], al
and al, byte [rax]
add byte [rsi + 0x400e], bl
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x88001a021100000d], eax
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 0xd
add byte [rax], al
and al, byte [rax]
add byte [rdx + rdx], cl
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jrcxz 0x402e87
add byte [rax], al
and al, byte [rax]
add byte [rcx + 0x11], ah
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
adc al, byte [rax]
add byte [rax], dl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte gs:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
add byte [rax], al
and al, byte [rax]
add byte [rdi + 0x4011], ch
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xe], dh
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
nop
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and al, byte [rax]
add byte [rax], bl
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x2200000e], ah
add byte [rsi], cl
add bl, bh
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, dl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, al
add byte [rax], al
and al, byte [rax]
add byte [rcx + rdx + 0x40], cl
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
sbb eax, dword [rax]
mov al, 0x20
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1200000f], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0xf], cl
add byte [rax], al
and al, byte [rax]
add byte [rcx], bl
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
sub dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
jge 0x402f91
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
movabs al, byte [0x800000000006020]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x2200000f], dl
add byte [rsi], cl
add byte [rdx + rdx + 0x40], dh
add byte [rax], al
add byte [r8], r8b
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rdx], ah
add byte [rsi], cl
add byte [rax + 0xe], al
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, 0x10
add byte [rax], al
and al, byte [rax]
add byte [rbx + 0x10], al
add byte [rax], al
add byte [rax], al
add byte [rcx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x10], ch
add byte [rax], al
adc byte [rax], al
sbb al, byte [rax]
nop
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jb 0x40300a
add byte [rax], al
and al, byte [rax]
add byte [rdx + 0xf], ch
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
stosd dword [rdi], eax
adc byte [rax], al
add byte [rdx], dl
add byte [rax], al
add al, ah
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
int3
adc byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, ah
adc byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ah, dh
adc byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rdx], cl
add byte [rax], al
and al, byte [rax]
add byte [rsi + rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x22000011], dh
add byte [rsi], cl
add byte [rdx + 0xd], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x11], dl
add byte [rax], al
adc al, byte [rax]
add dl, bh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
xchg eax, edx
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
adc al, byte [rax]
or eax, dword [rax]
sbb byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 0x11], bl
add byte [rax], al
and al, byte [rax]
add ah, bh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + rdx], ch
add byte [rdx], ah
add byte [rsi], cl
add byte [rsi + rcx], ah
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x22000011], ah
add byte [rsi], cl
add al, ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsxd rsi, dword [rdx + 0x74]
jae 0x403192
jne 0x403186
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x403146
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4031c4
jb 0x4031ca
pop rdi
jne 0x4031d3
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x4031cd
je 0x4031c9
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x4031e9
jb 0x4031ef
pop rdi
jne 0x4031f8
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x4031fb
jns 0x4031eb
outsb dx, byte gs:[rsi]
je 0x403202
jns 0x403192
jb 0x4031f6
insd dword [rdi], dx
pop rdi
jne 0x403208
insd dword [rdi], dx
jns 0x40319e
pop rdi
pop rdi
jb 0x403204
insd dword [rdi], dx
pop rdi
jne 0x403216
insd dword [rdi], dx
jns 0x40320b
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403216
jns 0x403216
outsb dx, byte gs:[rsi]
je 0x40322d
jns 0x4031bd
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x5a], bl
push rbx
je 0x403214
xor dword [rcx], edi
jo 0x403235
movsxd rsp, dword gs:[rbp + 0x77]
imul esi, dword [rbx + 0x65], 0x6e6f635f
jae 0x40324d
jb 0x403250
movsxd rsi, dword [rax + rax + 0x5f]
pop rdx
push rbx
je 0x40322f
xor dword [rbx], esi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x40324e
jb 0x403259
add byte [rdi + 0x5a], bl
push rbx
je 0x403244
imul esp, dword ss:[rdi + 0x6e], 0x65726f
pop rdi
pop rdx
push rbx
je 0x403251
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x403278
movsxd rdi, dword [rax + 0x78]
xor r14b, byte [rcx]
pop rdi
pop rdi
jne 0x403293
je 0x403288
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x5f]
jo 0x40329f
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x5a5f0045
push rbx
je 0x403287
xor dword [rax], esi
jb 0x4032a2
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x403299
xor dword [rcx], esi
je 0x4032c3
jns 0x4032b2
je 0x4032c4
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x4032ac
xor dword [rax], esi
outsd dx, dword fs:[rsi]
jo 0x4032db
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x4032a4
xor eax, 0x65676572
js 0x4032d9
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032f3
outsb dx, byte [rsi]
je 0x4032f6
xor rax, 0x73616369
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x4032c3
xor eax, 0x65676572
js 0x4032f8
movsxd rbp, dword [rdi + 0x6e]
jae 0x403312
outsb dx, byte [rsi]
je 0x403315
outsb dx, byte ss:[rsi]
outsd dx, dword [rsi]
jae 0x40331d
jae 0x4032f0
add byte [rdi + 0x5a], bl
push rbx
je 0x4032e3
xor eax, 0x65676572
js 0x403318
movsxd rbp, dword [rdi + 0x6e]
jae 0x403332
outsb dx, byte [rsi]
je 0x403335
cmp byte [rdi + 0x70], r13b
je 0x403331
insd dword [rdi], dx
imul edi, dword [rdx + 0x65], 0x5a5f0045
push rbx
je 0x403305
xor eax, 0x65676572
js 0x40333a
movsxd rbp, dword [rdi + 0x6e]
jae 0x403354
outsb dx, byte [rsi]
je 0x403357
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x403352
add byte [r15 + 0x5a], r11b
push rbx
je 0x403326
xor eax, 0x65676572
js 0x40335b
movsxd rbp, dword [rdi + 0x6e]
jae 0x403375
outsb dx, byte [rsi]
je 0x403378
xor qword [rax], r14
push r11
movsxd rsi, dword [rdx + 0x69]
jo 0x403386
add byte [r15 + 0x5a], r11b
push rbx
je 0x40334b
xor eax, 0x65676572
js 0x403380
movsxd rbp, dword [rdi + 0x6e]
jae 0x40339a
outsb dx, byte [rsi]
je 0x40339d
xor rax, 0x69736162
movsxd rax, dword [rbp]
pop rdi
pop rdx
push rbx
je 0x40336a
xor eax, 0x65676572
js 0x40339f
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033b9
outsb dx, byte [rsi]
je 0x4033bc
cmp byte [rbp + 0x78], r12b
je 0x4033b4
outsb dx, byte [rsi]
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x40338c
xor eax, 0x65676572
js 0x4033c1
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033db
outsb dx, byte [rsi]
je 0x4033de
xor r12, qword [rcx + 0x77]
imul eax, dword [rbp], 0x5f
pop rdx
push rbx
je 0x4033a9
xor eax, 0x65676572
js 0x4033de
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033f8
outsb dx, byte [rsi]
je 0x4033fb
xor al, 0x67
jb 0x4033f2
jo 0x4033d4
add byte [rdi + 0x5a], bl
push rbx
je 0x4033c7
xor eax, 0x65676572
js 0x4033fc
movsxd rbp, dword [rdi + 0x6e]
jae 0x403416
outsb dx, byte [rsi]
je 0x403419
xor rax, 0x65726765
jo 0x4033f3
add byte [rdi + 0x5a], bl
push rbx
je 0x4033e6
xor eax, 0x65676572
js 0x40341b
movsxd rbp, dword [rdi + 0x6e]
jae 0x403435
outsb dx, byte [rsi]
je 0x403438
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40342f
push 0x6665645f
jne 0x403440
je 0x40341b
add byte [rdi + 0x5a], bl
push rbx
je 0x40340e
xor eax, 0x65676572
js 0x403443
movsxd rbp, dword [rdi + 0x6e]
jae 0x40345d
outsb dx, byte [rsi]
je 0x403460
xor qword [rbx], r14
insd dword [rdi], dx
je 0x403457
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x403436
xor eax, 0x65676572
js 0x40346b
movsxd rbp, dword [rdi + 0x6e]
jae 0x403485
outsb dx, byte [rsi]
je 0x403488
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40347f
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x40345e
xor eax, 0x65676572
js 0x403493
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034ad
outsb dx, byte [rsi]
je 0x4034b0
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4034a7
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
ja 0x403493
add byte [rdi + 0x5a], bl
push rbx
je 0x403486
xor eax, 0x65676572
js 0x4034bb
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034d5
outsb dx, byte [rsi]
je 0x4034d8
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4034cf
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
ja 0x4034bb
add byte [rdi + 0x5a], bl
push rbx
je 0x4034ae
xor eax, 0x65676572
js 0x4034e3
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034fd
outsb dx, byte [rsi]
je 0x403500
cmp qword [rbp + 0x61], r13
je 0x4034f6
push 0x796e615f
add byte [r15 + 0x5a], r11b
push rbx
je 0x4034d1
xor eax, 0x65676572
js 0x403506
movsxd rbp, dword [rdi + 0x6e]
jae 0x403520
outsb dx, byte [rsi]
je 0x403523
xor qword [rbp*2 + 0x68637461], r14
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
je 0x40351c
outsb dx, byte [rsi]
jne 0x40352c
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x4034fa
xor eax, 0x65676572
js 0x40352f
movsxd rbp, dword [rdi + 0x6e]
jae 0x403549
outsb dx, byte [rsi]
je 0x40354c
xor qword [rsi], r14
insd dword [rdi], dx
je 0x403543
push 0x6e6f635f
je 0x403550
outsb dx, byte [rsi]
jne 0x403559
jne 0x40355f
add byte [r15 + 0x5a], r11b
push rbx
je 0x403525
xor eax, 0x65676572
js 0x40355a
movsxd rbp, dword [rdi + 0x6e]
jae 0x403574
outsb dx, byte [rsi]
je 0x403577
xor qword [rsi], r14
insd dword [rdi], dx
je 0x40356e
push 0x6572705f
jbe 0x403571
jbe 0x403576
imul ebp, dword [rbp + rax*2], 0x534e5a5f
je 0x403550
xor eax, 0x65676572
js 0x403585
movsxd rbp, dword [rdi + 0x6e]
jae 0x40359f
outsb dx, byte [rsi]
je 0x4035a2
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x4035a3
je 0x403598
jne 0x4035ab
je 0x403586
add byte [rdi + 0x5a], bl
push rbx
je 0x403579
xor eax, 0x65676572
js 0x4035ae
movsxd rbp, dword [rdi + 0x6e]
jae 0x4035c8
outsb dx, byte [rsi]
je 0x4035cb
xor qword [rax], r14
outsw dx, word [rsi]
jb 0x4035cc
je 0x4035c1
jae 0x4035c9
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x40359e
xor eax, 0x65676572
js 0x4035d3
movsxd rbp, dword [rdi + 0x6e]
jae 0x4035ed
outsb dx, byte [rsi]
je 0x4035f0
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x4035f1
je 0x4035e6
outsb dx, byte [rsi]
outsd dx, dword [rsi]
pop rdi
movsxd rbp, dword [rdi + 0x70]
jns 0x4035d4
add byte [rdi + 0x5a], bl
push rbx
je 0x4035c7
xor eax, 0x65676572
js 0x4035fc
movsxd rbp, dword [rdi + 0x6e]
jae 0x403616
outsb dx, byte [rsi]
je 0x403619
xor qword [rdi], r14
outsw dx, word [rsi]
jb 0x40361a
je 0x40360f
imul si, word [rdx + 0x73], 0x5f74
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
jns 0x403600
add byte [rdi + 0x5a], bl
push rbx
je 0x4035f3
xor eax, 0x65676572
js 0x403628
movsxd rbp, dword [rdi + 0x6e]
jae 0x403642
outsb dx, byte [rsi]
je 0x403645
xor qword [rbx], r14
jb 0x40364a
outsd dx, dword [rsi]
jb 0x40363a
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x403647
add byte [r15 + 0x5a], r11b
push rbx
je 0x40361b
xor eax, 0x65676572
js 0x403650
movsxd rbp, dword [rdi + 0x6e]
jae 0x40366a
outsb dx, byte [rsi]
je 0x40366d
xor qword [rcx], r14
jb 0x403672
outsd dx, dword [rsi]
jb 0x403662
movsxd rsi, dword [rcx + rdi*2 + 0x70]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x403641
xor eax, 0x65676572
js 0x403676
movsxd rbp, dword [rdi + 0x6e]
jae 0x403690
outsb dx, byte [rsi]
je 0x403693
xor qword [rdx], r14
jb 0x403698
outsd dx, dword [rsi]
jb 0x403688
jae 0x40368f
jo 0x403694
add byte [r15 + 0x5a], r11b
push rbx
je 0x403668
xor eax, 0x65676572
js 0x40369d
movsxd rbp, dword [rdi + 0x6e]
jae 0x4036b7
outsb dx, byte [rsi]
je 0x4036ba
xor qword [rbx], r14
jb 0x4036bf
outsd dx, dword [rsi]
jb 0x4036af
movsxd rbp, dword [rbx + 0x72]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x403690
xor eax, 0x65676572
js 0x4036c5
movsxd rbp, dword [rdi + 0x6e]
jae 0x4036df
outsb dx, byte [rsi]
je 0x4036e2
xor qword [rcx], r14
jb 0x4036e7
outsd dx, dword [rsi]
jb 0x4036d7
jb 0x4036dc
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4036b6
xor eax, 0x65676572
js 0x4036eb
movsxd rbp, dword [rdi + 0x6e]
jae 0x403705
outsb dx, byte [rsi]
je 0x403708
xor qword [rcx], r14
jb 0x40370d
outsd dx, dword [rsi]
jb 0x4036fd
jo 0x403701
jb 0x403707
outsb dx, byte [rsi]
add byte [r15 + 0x5a], r11b
push rbx
je 0x4036dc
xor eax, 0x65676572
js 0x403711
movsxd rbp, dword [rdi + 0x6e]
jae 0x40372b
outsb dx, byte [rsi]
je 0x40372e
xor qword [rcx], r14
jb 0x403733
outsd dx, dword [rsi]
jb 0x403723
jb 0x403728
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x403702
xor eax, 0x65676572
js 0x403737
movsxd rbp, dword [rdi + 0x6e]
jae 0x403751
outsb dx, byte [rsi]
je 0x403754
xor qword [0x726f7272], r14
pop rdi
jb 0x403751
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40372b
xor eax, 0x65676572
js 0x403760
movsxd rbp, dword [rdi + 0x6e]
jae 0x40377a
outsb dx, byte [rsi]
je 0x40377d
xor qword [rcx], r14
jb 0x403782
outsd dx, dword [rsi]
jb 0x403772
jb 0x403776
outsb dx, byte [rsi]
add byte gs:[r15d + 0x5a], r11b
push rbx
je 0x403751
xor eax, 0x65676572
js 0x403786
movsxd rbp, dword [rdi + 0x6e]
jae 0x4037a0
outsb dx, byte [rsi]
je 0x4037a3
xor qword [rcx], r14
jb 0x4037a8
outsd dx, dword [rsi]
jb 0x403798
jae 0x4037ab
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x403777
xor eax, 0x65676572
js 0x4037ac
movsxd rbp, dword [rdi + 0x6e]
jae 0x4037c6
outsb dx, byte [rsi]
je 0x4037c9
xor qword [rip + 0x6f727265], r14
jb 0x4037be
jb 0x4037c9
jo 0x4037cb
je 0x4037ae
add byte [rdi + 0x5a], bl
push rbx
je 0x4037a1
xor eax, 0x65676572
js 0x4037d6
movsxd rbp, dword [rdi + 0x6e]
jae 0x4037f0
outsb dx, byte [rsi]
je 0x4037f3
xor qword [rsi], r14
jb 0x4037f8
outsd dx, dword [rsi]
jb 0x4037e8
movsxd rbp, dword [rdi + 0x6d]
jo 0x4037fa
js 0x4037fa
je 0x40380c
add byte [r15 + 0x5a], r11b
push rbx
je 0x4037cc
xor eax, 0x65676572
js 0x403801
movsxd rbp, dword [rdi + 0x6e]
jae 0x40381b
outsb dx, byte [rsi]
je 0x40381e
xor qword [rcx], r14
jb 0x403823
outsd dx, dword [rsi]
jb 0x403813
jae 0x40382a
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4037f9
pop rdi
pop rdi
je 0x403828
imul ebp, dword [rsp + rcx*2 + 0x31], 0x5f535f39
imul ebp, dword [rsi + 0x76], 0x64696c61
pop rdi
jae 0x40384d
je 0x403841
pop rdi
imul esp, dword [rbp + rax*2], 0x31345a5f
pop rdi
pop rdi
jae 0x40385d
je 0x403855
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x403863
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x403879
jb 0x40387c
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x403891
pop rdi
pop r15
pop rdi
pop rdx
xor eax, 0x766c6f73
jbe 0x40382a
pop rdi
pop rdi
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4038d9
jns 0x4038d9
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4038ea
jns 0x4038ea
jae 0x403901
jb 0x403904
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5a], bl
push rbx
je 0x4038d1
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x403912
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [r11], r14d
pop rdi
pop r15
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
push r8
push rbx
xor byte [rdi + 0x6d], bl
add byte [rdi + 0x5a], bl
push rbx
je 0x40390e
jbe 0x40393f
movsxd rsi, dword [rdi + rbp*2 + 0x72]
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor r14b, byte [r9]
pop rdi
pop r15
jne 0x403964
je 0x403959
imul ebp, dword [rsi + 0x69], 0x6c616974
imul edi, dword [rdx + 0x65], 0x5f006d45
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdx
push rbx
je 0x40394e
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x40398f
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [r15], r14d
pop rdi
pop r15
movsxd rsi, dword [rdx + 0x65]
je 0x4039a9
pop rdi
jae 0x4039bb
outsd dx, dword [rsi]
jb 0x4039ab
insd dword [edi], dx
add byte [rdi + 0x5a], bl
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x4039b8
movsxd rdi, dword [rax + 0x78]
xor dword [rbx], esi
outsb dx, byte [rsi]
ja 0x4039c1
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x4039b5
xor eax, 0x73726f48
xor dword gs:[rbp + 0x76], r8d
add byte [rdi + 0x5a], bl
push rbx
je 0x4039af
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x4039f0
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [rbp + 0x76], r8d
add byte [rdi + 0x5a], bl
push rbx
je 0x4039d6
xor bl, byte [rdi + 0x44]
jae 0x403a1f
jb 0x403a1c
jns 0x403a0e
jne 0x403a2a
xor dword [rbp + 0x45], eax
cmp dword [rdi + 0x5f], ebx
jae 0x403a33
jb 0x403a30
jns 0x403a0c
push rax
xor eax, 0x73726f48
jbe 0x403a22
pop rdi
push rbx
xor al, 0x5f
add byte [rdi + 0x5f], bl
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x403a50
jb 0x403a53
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x403a45
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x403a66
jae 0x4039f6
pop rdi
pop rdx
insb byte [rdi], dx
push rax
jbe 0x403a3d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403a41
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x403a7a
je 0x403a8f
imul esi, dword [rbx + rsi*2 + 0x49], 0x35496153
outsd dx, dword [rsi]
jb 0x403a9d
xor dword gs:[r8], r14d
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
push r10
push rbx
xor dword [rdi + 0x50], ebx
push rbx
xor byte [rdi + 0x6d], bl
add byte [rdi + 0x5a], bl
push rbx
je 0x403a82
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x403aa5
jbe 0x403ad6
movsxd rsi, dword [rdi + rbp*2 + 0x72]
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
imul r15d, dword [r8 + 0x45], 0x5a5f006d
push rbx
je 0x403ac5
jbe 0x403af6
movsxd rsi, dword [rdi + rbp*2 + 0x72]
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [rbp + 0x76], r8d
add byte [rdi + 0x5a], bl
push rbx
je 0x403adf
xor bl, byte [rdi + 0x5f]
outsb dx, byte [rsi]
imul esi, dword [rbp + 0x72], 0x7361625f
push r8
xor eax, 0x73726f48
push rbx
je 0x403af9
xor dword [rdi + 0x4e], ebx
imul esi, dword [rbp + 0x72], 0x7361625f
push r12
pop rdi
xor dword [r11], r14d
imul esi, dword [rbp + 0x72], 0x726f7461
pop rdi
je 0x403b5e
jo 0x403b4c
push r11
xor ebx, dword [rdi]
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x403b6c
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
cmp dword [rdi + 0x5f], ebx
outsb dx, byte [esi]
jne 0x403b74
movsxd rdi, dword [rax + 0x78]
xor dword [rbx], esi
outsb dx, byte [rsi]
ja 0x403b7d
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x403b71
xor eax, 0x73726f48
xor r8b, byte gs:[rbp + 0x76]
add byte [rdi + 0x5a], bl
cmp qword [r15 + 0x5f], rbx
outsb dx, byte [esi]
jne 0x403b9e
movsxd rdi, dword [rax + 0x78]
xor dword [rbx], esi
outsb dx, byte [rsi]
ja 0x403ba7
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x403b9b
xor eax, 0x73726f48
cmp byte gs:[r13 + 0x61], r13b
js 0x403bbd
jae 0x403bc9
jp 0x403bc7
jbe 0x403b65
pop rdi
pop rdx
push rbx
je 0x403ba2
pop rdi
jae 0x403be3
jb 0x403be0
jns 0x403bbc
push rax
xor eax, 0x73726f48
jbe 0x403bd1
pop rdi
push rbx
xor bl, byte [rdi]
pop rdi
pop rdx
push rbx
xor rax, 0x73726f48
xor dword gs:[r13 + 0x52], eax
push r11
xor byte [rdi], bl
pop rdi
pop rdx
push rbx
je 0x403bcf
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x403c10
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [r9], r14d
pop rdi
pop r15
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
insd dword [rdi], dx
add byte [rdi + 0x5f], bl
movsxd rdi, dword [rax + 0x61]
pop rdi
je 0x403c38
js 0x403c3e
je 0x403c17
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x403c1b
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x403c5c
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [r9], r15d
pop rdi
pop r15
je 0x403c6e
push rsp
jo 0x403c71
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x403c61
jbe 0x403c1e
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x403c87
movsxd rdi, dword [rax + 0x78]
xor dword [rbx], esi
outsb dx, byte [rsi]
ja 0x403c90
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x403c84
xor eax, 0x73726f48
xor dword gs:[r13 + 0x52], eax
push r11
xor bl, byte [rdi]
pop rdi
pop rdx
push rbx
je 0x403c89
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x403cde
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5a], bl
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x403cf5
movsxd rdi, dword [rax + 0x78]
xor dword [rbx], esi
outsb dx, byte [rsi]
ja 0x403cfe
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x403cf2
xor eax, 0x73726f48
xor dword gs:[r13 + 0x76], eax
add byte [rdi + 0x49], bl
pop r15
jae 0x403d2f
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rdi + 0x5a], bl
push rbx
je 0x403cfc
insd dword [rdi], dx
js 0x403d16
push r10
push r12
pop rdi
push rbx
xor bl, byte [rdi + 0x53]
xor bl, byte [rdi]
pop rdi
pop rdx
push rbx
xor rax, 0x73726f48
xor al, byte gs:[r13 + 0x76]
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
xor rax, 0x73726f48
xor dword gs:[rbp + 0x76], r8d
add byte [rdi + 0x5a], bl
push rbx
je 0x403d48
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x403d89
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor al, byte [r13 + 0x6d]
push rdx
push r11
xor dword [rdi], ebx
pop rdi
pop rdx
push rbx
je 0x403d74
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x403db5
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [r10], r14d
pop rdi
push rsi
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
imul ebp, dword [rbp + 0x70], 0x4531446c
jbe 0x403d72
pop rdi
push r12
pop r15
jb 0x403dde
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403df3
pop rdi
jae 0x403e09
jb 0x403e0c
add byte [rdi + 0x5a], bl
push rbx
je 0x403dd5
jbe 0x403e06
movsxd rsi, dword [rdi + rbp*2 + 0x72]
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor al, byte [r13 + 0x6d]
push rdx
push r11
xor dword [rdi], ebx
pop rdi
pop rdx
push rbx
je 0x403df9
imul bp, word [rsp + rbp*2 + 0x5f], 0x496e
push rax
xor eax, 0x73726f48
insd dword [rdi], dx
push rbx
xor byte [rdi + 0x45], bl
push rsp
pop rdi
push rbx
xor bl, byte [rdi + 0x54]
xor byte [rdi + 0x52], bl
push r12
xor dword [rdi], ebx
pop rdi
pop rdx
push rbx
je 0x403e21
pop rdi
jae 0x403e62
jb 0x403e5f
jns 0x403e3b
push rax
xor eax, 0x73726f48
push rbx
xor byte [rdi + 0x45], bl
jbe 0x403e53
pop rdi
push rbx
xor bl, byte [rdi + 0x52]
push rbx
push r12
xor byte [rdi + 0x45], bl
add byte [rdi + 0x5a], bl
push rbx
je 0x403e43
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x403e84
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [r10], r14d
pop rdi
push rsi
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
imul ebp, dword [rbp + 0x70], 0x4531436c
push rdx
push r11
xor dword [rdi], ebx
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x403eae
movsxd rdi, dword [rax + 0x78]
xor dword [rbx], esi
outsb dx, byte [rsi]
ja 0x403eb7
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x403eab
xor eax, 0x73726f48
xor al, byte gs:[r13 + 0x52]
push r11
xor bl, byte [rdi]
pop rdi
pop rdx
push rbx
xor rax, 0x73726f48
xor al, byte gs:[r13 + 0x52]
push r11
xor byte [rdi], bl
pop rdi
pop rdi
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
push rbx
je 0x403ecb
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x403f0c
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor r8b, byte [rbp + 0x76]
add byte [rdi + 0x5f], bl
jae 0x403f2f
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5a], bl
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x403f31
movsxd rdi, dword [rax + 0x78]
xor dword [rbx], esi
outsb dx, byte [rsi]
ja 0x403f3a
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x403f2e
xor eax, 0x73726f48
cmp byte gs:[r9 + 0x6c], r12b
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
insd dword [rdi], dx
push rax
jbe 0x403efb
pop rdi
pop rdx
push rbx
je 0x403f32
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x403f6b
je 0x403f80
imul esi, dword [rbx + rsi*2 + 0x49], 0x35496153
outsd dx, dword [rsi]
jb 0x403f8e
cmp byte gs:[r9 + 0x6c], r12b
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
push r10
push rbx
xor dword [rdi + 0x6d], ebx
add byte [rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5a5f0074
push rbx
je 0x403f76
pop rdi
pop rdi
jne 0x403fb7
imul ebp, dword [rsi + 0x69], 0x6c616974
imul edi, dword [rdx + 0x65], 0x65645f64
jne 0x403fc7
je 0x403fbc
outsb dx, byte [rsi]
pop rdi
xor dword [rcx + 0x4c], ecx
xor dword [rbp + 0x45], eax
xor dword [rax], edi
pop rdi
pop rdi
jne 0x403fda
imul ebp, dword [rsi + 0x69], 0x65645f74
jne 0x403fe3
je 0x403fd8
outsb dx, byte [rsi]
push r8
xor eax, 0x73726f48
insd dword [rdi], dx
push r12
pop rdi
push rbx
xor al, 0x5f
push rsp
xor byte [rdi], bl
pop rdi
pop rdi
jae 0x404006
pop rdi
jae 0x40400a
jb 0x40400d
add byte [rdi + 0x5a], bl
push rbx
je 0x403fd6
jbe 0x404007
movsxd rsi, dword [rdi + rbp*2 + 0x72]
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [r13 + 0x6d], eax
push rdx
push r11
xor dword [rdi], ebx
pop rdi
pop rdx
push rbx
je 0x403ff6
xor byte [rdi + 0x49], bl
je 0x40402f
jb 0x40402b
jae 0x404035
push r8
xor eax, 0x73726f48
xor byte [rbp + 0x45], al
pop rdi
push rbx
pop rdi
jae 0x40404a
push r11
xor dword [rdi], ebx
pop rdi
pop rdi
jae 0x404062
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x40406f
movsxd rdi, dword [rax + 0x78]
xor dword [rbx], esi
outsb dx, byte [rsi]
ja 0x404078
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x40406c
xor eax, 0x73726f48
xor dword gs:[r8], r14d
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
push r8
push rbx
xor dword [rdi + 0x6d], ebx
add byte [rdi + 0x5a], bl
push rbx
je 0x404073
pop rdi
pop rdi
je 0x4040af
jb 0x4040b8
ja 0x4040aa
pop rdi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsi, dword [rsi + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdx
push rbx
je 0x40409a
xor eax, 0x6e755f5f
imul ebp, dword [rsi + 0x69], 0x6c616974
imul edi, dword [rdx + 0x65], 0x65645f64
jne 0x4040eb
je 0x4040e0
outsb dx, byte [rsi]
push r8
xor eax, 0x73726f48
insd dword [rdi], dx
push r12
pop rdi
push rbx
xor bl, byte [rdi + 0x54]
xor byte [rdi], bl
jae 0x40410b
jb 0x40410d
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x535a5f00
je 0x4040df
xor byte [rdi + 0x5f], bl
imul bp, word [rsp + rbp*2 + 0x5f], 0x5f6e
push r8
xor eax, 0x73726f48
insd dword [rdi], dx
push rbx
xor byte [rdi + 0x45], bl
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x40412d
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
pop rdi
pop rdi
outsb dx, byte gs:[rsi]
insb byte [rdi], dx
pop rdi
imul esp, dword [rsi + 0x49], 0x73746e58
jb 0x404138
je 0x404118
xor dword [rdi + 0x5f], ebx
imul esi, dword [rbx + 0x5f], 0x6c616373
jb 0x40413d
push rsp
xor dword [rdi + 0x45], ebx
pop rdi
pop rdi
jbe 0x40415e
insb byte [rdi], dx
jne 0x404165
push r12
pop rdi
pop rdi
pop rdi
je 0x404182
jo 0x404170
push r11
pop rdi
push rsp
xor byte [rdi + 0x52], bl
push r11
xor eax, 0x5a5f005f
push rbx
je 0x40414f
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x404190
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [r13 + 0x6d], eax
push rdx
push r11
xor dword [rdi], ebx
pop rdi
pop rdx
push rbx
je 0x40417b
pop rdi
pop rdi
jne 0x4041bc
imul ebp, dword [rsi + 0x69], 0x6c616974
imul edi, dword [rdx + 0x65], 0x65645f64
jne 0x4041cc
je 0x4041c1
outsb dx, byte [rsi]
pop rdi
push r8
xor eax, 0x73726f48
insd dword [rdi], dx
push rbx
xor byte [rdi + 0x45], bl
push rsp
pop rdi
push rbx
xor bl, byte [rdi + 0x54]
xor byte [rdi + 0x52], bl
push rbx
push r12
xor dword [rdi + 0x45], ebx
add byte [rdi + 0x65], bl
je 0x4041ea
add byte [rdi + 0x5a], bl
push rbx
je 0x4041c1
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x404202
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [r10], r14d
pop rdi
push rsi
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
imul ebp, dword [rbp + 0x70], 0x4532436c
push rdx
push r11
xor dword [rdi], ebx
pop rdi
pop rdi
js 0x404240
pop rdi
jo 0x404230
jb 0x404240
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
jo 0x404259
imul ebp, dword [rsi + 0x74], 0x47404066
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x6e5a5f00
ja 0x40426b
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push rbp
outsb dx, byte [rsi]
ja 0x40427a
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x40428d
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x40428d
movsxd rdi, dword [rax + 0x78]
xor dword [rbx], esi
outsb dx, byte [rsi]
ja 0x404296
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x40428a
xor eax, 0x73726f48
xor al, byte gs:[r13 + 0x76]
add byte [rdi + 0x5a], bl
push rbx
je 0x404289
jbe 0x4042ba
movsxd rsi, dword [rdi + rbp*2 + 0x72]
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor r8b, byte [rbp + 0x76]
add byte [rbp + 0x61], ch
imul ebp, dword [rsi], 0x534e5a5f
xor rax, 0x73726f48
xor r8b, byte gs:[rbp + 0x76]
add byte [rdi + 0x5a], bl
push rbx
je 0x4042bb
xor bl, byte [rdi + 0x56]
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
jae 0x4042fc
xor rax, 0x73726f48
push rbx
push r11
xor byte [rdi + 0x45], bl
xor dword [r10], r14d
pop rdi
push rsi
movsxd rsi, dword gs:[rdi + rbp*2 + 0x72]
pop rdi
imul ebp, dword [rbp + 0x70], 0x4532446c
jbe 0x4042b9
pop rdi
pop rdx
push rbx
xor rax, 0x73726f48
xor dword gs:[r13 + 0x76], eax
add byte [rax], al
jae 0x404348
insd dword [rdi], dx
je 0x404333
add byte [rsi], ch
jae 0x40434b
jb 0x40434d
add byte [rsi], ch
jae 0x404347
jae 0x404355
jb 0x404357
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x404358
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x404366
outsb dx, byte cs:[esi]
jne 0x404334
jne 0x404372
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x404342
push 0x687361
jns 0x40438b
jae 0x404398
insd dword [rdi], dx
add byte [rsi], ch
jns 0x404393
jae 0x40439b
jb 0x404329
outsb dx, byte cs:[esi]
jne 0x40435c
jbe 0x404395
jb 0x4043a5
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x404369
jbe 0x4043a2
jb 0x4043b2
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x4043ad
insb byte [rdi], dx
jns 0x4043bc
add byte [rsi], ch
jb 0x4043b7
insb byte [rdi], dx
jo 0x4043c3
je 0x404359
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x404392
outsd dx, dword [esi]
je 0x404368
je 0x4043d0
js 0x4043e1
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x4043e6
je 0x4043dc
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x4043ff
jo 0x404413
pop rdi
je 0x404403
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x404411
jns 0x4043b2
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x40442d
jns 0x4043be
push 0x63
jb 0x4043c3
jns 0x404435
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x40443f
je 0x4043d5
je 0x40443b
add byte [rsi], ch
jae 0x404452
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x4043e9
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 0x4002, 0
add byte [rax], al
add byte [rax], al
enter 2, 0
add byte [rax], al
add byte [rax], al
enter 1, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
add al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax + 4], dl
add byte [rax], al
add byte [rbp + 1], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
add byte [rax], al
add bh, bh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte es:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov al, 6
add byte [rax], al
add byte [rax], al
add byte [rax + 6], dh
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add al, ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x19000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
or byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
loopne 0x404712
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or dword [rax], eax
add byte [rax], al
add byte [rax], al
and byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
xor byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ah
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rdx + 0x40], al
add byte [rax], al
test byte [rbx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4013], dl
add byte [rax], al
add byte [rax + 0x13], dl
add byte [rax], al
add cl, bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 0x1000000], dh
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsp + rdx + 0x40], ch
add byte [rax], al
add byte [rax], al
add byte [rsp + rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rcx + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
adc eax, 0x40
add byte [rax], al
enter 0x15, 0
add byte [rax], al
add byte [rax], al
fadd qword [rip]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
leave
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rbx + 0x40], ah
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rip], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
call 0x40492a
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], al
add byte [rax], al
add byte [rax + 0x20], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], ah
add byte [rax], al
add byte [rax + 0x20], dl
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip + 0x1000001], dl
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x20], dl
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
retf
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, cl
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x10], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rcx], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov bl, 0x11
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
