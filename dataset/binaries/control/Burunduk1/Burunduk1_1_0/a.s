xor ebp, ebp
mov r9, rdx
pop rsi
mov rdx, rsp
and rsp, 0xfffffffffffffff0
push rax
push rsp
mov r8, sym.__libc_csu_fini
mov rcx, sym.__libc_csu_init
mov rdi, sym.main
call sym.imp.__libc_start_main
hlt
nop word [rax + rax]
mov eax, 0x6020c7
push rbp
sub rax, obj.stderr
cmp rax, 0xe
mov rbp, rsp
jbe 0x400cd0
mov eax, 0
test rax, rax
je 0x400cd0
pop rbp
mov edi, obj.stderr
jmp rax
nop word [rax + rax]
pop rbp
ret
nop dword [rax]
nop word cs:[rax + rax]
mov esi, obj.stderr
push rbp
sub rsi, obj.stderr
sar rsi, 3
mov rbp, rsp
mov rax, rsi
shr rax, 0x3f
add rsi, rax
sar rsi, 1
je 0x400d18
mov eax, 0
test rax, rax
je 0x400d18
pop rbp
mov edi, obj.stderr
jmp rax
nop dword [rax]
pop rbp
ret
nop word [rax + rax]
cmp byte [rip + 0x2013a1], 0
jne 0x400d3a
push rbp
mov rbp, rsp
call sym.deregister_tm_clones
pop rbp
mov byte [rip + 0x20138e], 1
ret
nop dword [rax]
mov edi, obj.__JCR_LIST__
cmp qword [rdi], 0
jne 0x400d50
jmp sym.register_tm_clones
nop dword [rax]
mov eax, 0
test rax, rax
je 0x400d4b
push rbp
mov rbp, rsp
call rax
pop rbp
jmp sym.register_tm_clones
push rbp
mov rbp, rsp
push rbx
sub rsp, 0x58
mov dword [rbp - 0x54], edi
mov dword [rbp - 0x58], esi
mov eax, ecx
mov byte [rbp - 0x5c], dl
mov byte [rbp - 0x60], al
mov rax, qword fs:[0x28]
mov qword [rbp - 0x18], rax
xor eax, eax
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
movsx edx, byte [rbp - 0x5c]
lea rax, [rbp - 0x40]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
movsx edx, byte [rbp - 0x60]
lea rax, [rbp - 0x40]
mov esi, edx
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
mov esi, 0x401430
mov edi, obj.ans_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator_
mov dword [rbp - 0x44], 0
mov eax, dword [rbp - 0x44]
cmp eax, dword [rbp - 0x54]
jge 0x400df1
lea rax, [rbp - 0x40]
mov rsi, rax
mov edi, obj.ans_abi:cxx11_
call 0x400b90
add dword [rbp - 0x44], 1
jmp 0x400dd2
mov eax, dword [rbp - 0x54]
cmp eax, dword [rbp - 0x58]
sete bl
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov eax, ebx
mov rcx, qword [rbp - 0x18]
xor rcx, qword fs:[0x28]
je 0x400e38
jmp 0x400e33
mov rbx, rax
lea rax, [rbp - 0x40]
mov rdi, rax
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
mov rax, rbx
mov rdi, rax
call sym.imp._Unwind_Resume
call sym.imp.__stack_chk_fail
add rsp, 0x58
pop rbx
pop rbp
ret
push rbp
mov rbp, rsp
sub rsp, 0x40
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
lea r8, [rbp - 0x28]
lea rdi, [rbp - 0x2c]
lea rcx, [rbp - 0x30]
lea rdx, [rbp - 0x34]
lea rax, [rbp - 0x38]
lea rsi, [rbp - 0x20]
push rsi
lea rsi, [rbp - 0x24]
push rsi
mov r9, r8
mov r8, rdi
mov rsi, rax
mov edi, str._d_d_d_d_d_d_d
mov eax, 0
call sym.imp.scanf
add rsp, 0x10
mov edx, dword [rbp - 0x30]
mov eax, dword [rbp - 0x24]
add edx, eax
mov eax, dword [rbp - 0x38]
cmp edx, eax
jne 0x400ebb
mov esi, dword [rbp - 0x24]
mov eax, dword [rbp - 0x30]
mov ecx, 0x42
mov edx, 0x4f
mov edi, eax
call sym.sub2
jmp 0x4011b3
mov edx, dword [rbp - 0x28]
mov eax, dword [rbp - 0x34]
add edx, eax
mov eax, dword [rbp - 0x38]
cmp edx, eax
jne 0x400ee6
mov esi, dword [rbp - 0x34]
mov eax, dword [rbp - 0x28]
mov ecx, 0x52
mov edx, 0x47
mov edi, eax
call sym.sub2
jmp 0x4011b3
mov edx, dword [rbp - 0x20]
mov eax, dword [rbp - 0x2c]
add edx, eax
mov eax, dword [rbp - 0x38]
cmp edx, eax
jne 0x400f11
mov esi, dword [rbp - 0x2c]
mov eax, dword [rbp - 0x20]
mov ecx, 0x59
mov edx, 0x56
mov edi, eax
call sym.sub2
jmp 0x4011b3
mov eax, dword [rbp - 0x30]
test eax, eax
je 0x400f22
mov edx, dword [rbp - 0x30]
mov eax, dword [rbp - 0x24]
cmp edx, eax
jge 0x400f44
mov eax, dword [rbp - 0x28]
test eax, eax
je 0x400f33
mov edx, dword [rbp - 0x28]
mov eax, dword [rbp - 0x34]
cmp edx, eax
jge 0x400f44
mov eax, dword [rbp - 0x20]
test eax, eax
je 0x400f4e
mov edx, dword [rbp - 0x20]
mov eax, dword [rbp - 0x2c]
cmp edx, eax
jl 0x400f4e
mov eax, 0
jmp 0x4011b3
mov edx, dword [rbp - 0x24]
mov eax, dword [rbp - 0x30]
sub edx, eax
mov eax, edx
mov dword [rbp - 0x24], eax
mov edx, dword [rbp - 0x34]
mov eax, dword [rbp - 0x28]
sub edx, eax
mov eax, edx
mov dword [rbp - 0x34], eax
mov edx, dword [rbp - 0x2c]
mov eax, dword [rbp - 0x20]
sub edx, eax
mov eax, edx
mov dword [rbp - 0x2c], eax
mov edx, dword [rbp - 0x34]
mov eax, dword [rbp - 0x2c]
add edx, eax
mov eax, dword [rbp - 0x24]
cmp edx, eax
jl 0x400fa2
mov edx, dword [rbp - 0x24]
mov eax, dword [rbp - 0x2c]
add edx, eax
mov eax, dword [rbp - 0x34]
cmp edx, eax
jl 0x400fa2
mov edx, dword [rbp - 0x34]
mov eax, dword [rbp - 0x24]
add edx, eax
mov eax, dword [rbp - 0x2c]
cmp edx, eax
jge 0x400fac
mov eax, 0
jmp 0x4011b3
mov esi, 0x401430
mov edi, obj.ans_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator_
mov dword [rbp - 0x1c], 0xffffffff
mov dword [rbp - 0x18], 0xffffffff
mov edx, dword [rbp - 0x24]
mov eax, dword [rbp - 0x34]
add edx, eax
mov eax, dword [rbp - 0x2c]
add eax, edx
mov dword [rbp - 0x38], eax
mov eax, dword [rbp - 0x24]
test eax, eax
jne 0x400ff2
mov eax, dword [rbp - 0x34]
test eax, eax
jne 0x400ff2
mov eax, dword [rbp - 0x2c]
test eax, eax
je 0x4011ae
mov dword [rbp - 0x14], 0xffffffff
mov qword [rbp - 0x10], 0
mov eax, dword [rbp - 0x38]
sub eax, 1
mov dword [rbp - 0x38], eax
cmp dword [rbp - 0x1c], 0x42
je 0x401045
cmp dword [rbp - 0x14], -1
je 0x401036
mov rax, qword [rbp - 0x10]
mov edx, dword [rax]
mov eax, dword [rbp - 0x24]
cmp edx, eax
jl 0x401036
mov rax, qword [rbp - 0x10]
mov edx, dword [rax]
mov eax, dword [rbp - 0x24]
cmp edx, eax
jne 0x401045
cmp dword [rbp - 0x18], 0x42
jne 0x401045
mov dword [rbp - 0x14], 0x42
lea rax, [rbp - 0x24]
mov qword [rbp - 0x10], rax
cmp dword [rbp - 0x1c], 0x52
je 0x401080
cmp dword [rbp - 0x14], -1
je 0x401071
mov rax, qword [rbp - 0x10]
mov edx, dword [rax]
mov eax, dword [rbp - 0x34]
cmp edx, eax
jl 0x401071
mov rax, qword [rbp - 0x10]
mov edx, dword [rax]
mov eax, dword [rbp - 0x34]
cmp edx, eax
jne 0x401080
cmp dword [rbp - 0x18], 0x52
jne 0x401080
mov dword [rbp - 0x14], 0x52
lea rax, [rbp - 0x34]
mov qword [rbp - 0x10], rax
cmp dword [rbp - 0x1c], 0x59
je 0x4010bb
cmp dword [rbp - 0x14], -1
je 0x4010ac
mov rax, qword [rbp - 0x10]
mov edx, dword [rax]
mov eax, dword [rbp - 0x2c]
cmp edx, eax
jl 0x4010ac
mov rax, qword [rbp - 0x10]
mov edx, dword [rax]
mov eax, dword [rbp - 0x2c]
cmp edx, eax
jne 0x4010bb
cmp dword [rbp - 0x18], 0x59
jne 0x4010bb
mov dword [rbp - 0x14], 0x59
lea rax, [rbp - 0x2c]
mov qword [rbp - 0x10], rax
cmp dword [rbp - 0x14], -1
jne 0x4010da
mov ecx, str.bool_solve__
mov edx, 0x2a
mov esi, str.sorted_code_control_Burunduk1_Burunduk1_1_0_b.cpp
mov edi, str.letter_____1
call sym.imp.__assert_fail
mov rax, qword [rbp - 0x10]
mov eax, dword [rax]
test eax, eax
jg 0x4010fd
mov ecx, str.bool_solve__
mov edx, 0x2b
mov esi, str.sorted_code_control_Burunduk1_Burunduk1_1_0_b.cpp
mov edi, str._cnt___0
call sym.imp.__assert_fail
mov eax, dword [rbp - 0x14]
mov dword [rbp - 0x1c], eax
mov eax, dword [rbp - 0x14]
movsx eax, al
mov esi, eax
mov edi, obj.ans_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::operator__
cmp dword [rbp - 0x14], 0x42
jne 0x40113c
mov eax, dword [rbp - 0x30]
test eax, eax
jle 0x40113c
mov esi, 0x401488
mov edi, obj.ans_abi:cxx11_
call 0x400ba0
mov eax, dword [rbp - 0x30]
sub eax, 1
mov dword [rbp - 0x30], eax
jmp 0x40111b
cmp dword [rbp - 0x14], 0x52
jne 0x401163
mov eax, dword [rbp - 0x28]
test eax, eax
jle 0x401163
mov esi, 0x40148b
mov edi, obj.ans_abi:cxx11_
call 0x400ba0
mov eax, dword [rbp - 0x28]
sub eax, 1
mov dword [rbp - 0x28], eax
jmp 0x401142
cmp dword [rbp - 0x14], 0x59
jne 0x40118a
mov eax, dword [rbp - 0x20]
test eax, eax
jle 0x40118a
mov esi, 0x40148e
mov edi, obj.ans_abi:cxx11_
call 0x400ba0
mov eax, dword [rbp - 0x20]
sub eax, 1
mov dword [rbp - 0x20], eax
jmp 0x401169
mov rax, qword [rbp - 0x10]
mov eax, dword [rax]
lea edx, [rax - 1]
mov rax, qword [rbp - 0x10]
mov dword [rax], edx
cmp dword [rbp - 0x18], -1
jne 0x400fd9
mov eax, dword [rbp - 0x1c]
mov dword [rbp - 0x18], eax
jmp 0x400fd9
mov eax, 1
mov rcx, qword [rbp - 8]
xor rcx, qword fs:[0x28]
je 0x4011c7
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov rax, qword fs:[0x28]
mov qword [rbp - 8], rax
xor eax, eax
lea rax, [rbp - 0x10]
mov rsi, rax
mov edi, 0x401491
mov eax, 0
call sym.imp.scanf
mov dword [rbp - 0xc], 1
mov eax, dword [rbp - 0x10]
cmp dword [rbp - 0xc], eax
jg 0x401265
mov eax, dword [rbp - 0xc]
mov esi, eax
mov edi, str.Case___d:
mov eax, 0
call sym.imp.printf
mov rax, qword [rip + 0x200ea0]
mov edx, dword [rbp - 0xc]
mov esi, str.Case___d_n
mov rdi, rax
mov eax, 0
call sym.imp.fprintf
call sym.solve
xor eax, 1
test al, al
je 0x40124d
mov edi, str.IMPOSSIBLE
call sym.imp.puts
jmp 0x40125f
mov edi, obj.ans_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::c_str
mov rdi, rax
call sym.imp.puts
add dword [rbp - 0xc], 1
jmp 0x4011fd
mov eax, 0
mov rcx, qword [rbp - 8]
xor rcx, qword fs:[0x28]
je 0x40127e
call sym.imp.__stack_chk_fail
leave
ret
push rbp
mov rbp, rsp
sub rsp, 0x10
mov dword [rbp - 4], edi
mov dword [rbp - 8], esi
cmp dword [rbp - 4], 1
jne 0x4012d9
cmp dword [rbp - 8], 0xffff
jne 0x4012d9
mov edi, obj.std::__ioinit
call sym.std::ios_base::Init::Init
mov edx, obj.__dso_handle
mov esi, obj.std::__ioinit
mov edi, sym.std::ios_base::Init::_Init
call sym.imp.__cxa_atexit
mov edi, obj.ans_abi:cxx11_
call sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::basic_string
mov edx, obj.__dso_handle
mov esi, obj.ans_abi:cxx11_
mov edi, sym.std::__cxx11::basic_string_char_std::char_traits_char__std::allocator_char__::_basic_string
call sym.imp.__cxa_atexit
nop
leave
ret
push rbp
mov rbp, rsp
mov esi, 0xffff
mov edi, 1
call sym.__static_initialization_and_destruction_0
pop rbp
ret
nop word cs:[rax + rax]
nop dword [rax + rax]
push r15
push r14
mov r15d, edi
push r13
push r12
lea r12, [rip + 0x200ad6]
push rbp
lea rbp, [rip + 0x200ade]
push rbx
mov r14, rsi
mov r13, rdx
sub rbp, r12
sub rsp, 8
sar rbp, 3
call sym._init
test rbp, rbp
je 0x401356
xor ebx, ebx
nop dword [rax + rax]
mov rdx, r13
mov rsi, r14
mov edi, r15d
call qword [r12 + rbx*8]
add rbx, 1
cmp rbx, rbp
jne 0x401340
add rsp, 8
pop rbx
pop rbp
pop r12
pop r13
pop r14
pop r15
ret
nop
nop word cs:[rax + rax]
ret
add byte [rax], al
sub rsp, 8
add rsp, 8
ret
add byte [rax], al
add byte [rcx], al
add dword [rax], eax
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add al, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, 0
add byte [rax], al
add eax, 0x6000000
add byte [rax], al
add byte [rdi], al
add byte [rax], al
add byte [rax], cl
or byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
or al, byte [rax]
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rax]
and eax, 0x25642564
and eax, 0x25642564
and eax, 0x6f730064
jae 0x4014b1
jb str.bool_solve__
pop rdi
movsxd rbp, dword [rdi + 0x64]
movsxd rbp, dword [rdi + 0x6e]
je 0x4014c3
outsd dx, dword [rsi]
insb byte [rdi], dx
jne 0x4014c9
jne 0x4014c7
jne 0x4014c7
xor dword [rdi], ebp
jne 0x4014d3
jne 0x4014d1
jne 0x4014d1
xor dword [rdi + 0x31], ebx
pop rdi
xor byte [rdi], ch
movsxd rsi, dword cs:[rax + 0x70]
add byte [rbp + 0x74], ch
insb byte [rdi], dx
je 0x4014ea
jb 0x401499
and dword [rip + 0x312d20], edi
sub ah, byte [rbx + 0x6e]
je 0x4014a4
and byte ds:[rax], dh
add byte [rdi + 0x42], cl
add byte [rdi + 0x52], al
add byte [rsi + 0x59], dl
add byte [rip + 0x61430064], ah
jae 0x4014fd
and byte [rbx], ah
and eax, 0x203a64
jae 0x401508
and byte [rbx], ah
and eax, 0x49000a64
push r8
push r11
push rbx
add byte [r8], r8b
add byte [rax], al
add byte [rdx + 0x6f], ah
outsd dx, dword [rsi]
outsd dx, dword [rsi]
insb byte [rdi], dx
and byte [rbx + 0x6f], dh
insb byte [rdi], dx
jbe 0x401527
sub byte [rcx], ch
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add dword [rbx], ebx
add edi, dword [rbx]
push rsp
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax - 0xa], bl
jmp qword [rax - 0x58000000]
idiv edi
push qword [rax]
add byte [rax], al
sahf
clc
call 0x774014ed
stc
call qword [rax]
add dword [rax], eax
add byte [rcx], al
std
push qword [rax]
add dword [rax], eax
add byte [rax + 0x50fffffd], bh
add dword [rax], eax
add byte [rsi + rdi*8], dl
push qword [rax + 1]
add byte [rax], al
cmp dh, bh
call qword [rax - 0x57ffffff]
fadd dword [rcx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40153f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x14100701], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
xor bh, dh
ljmp [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x52], edi
add byte [rcx], al
js 0x40156f
add dword [rbx], ebx
or al, 7
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
mov al, 0xf5
inc dword [rax + 1]
add byte [rax], al
add byte [rsi], cl
adc byte [rsi + 0xe], al
sbb byte [rdx + 0xf], cl
or esi, dword [rdi + 8]
add byte [rax], 0x3f
sbb bh, byte [rbx]
sub dh, byte [rbx]
and al, 0x22
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rdx + 0x50], edi
push rdx
add byte [rcx], al
js 0x4015b1
add edx, dword [rax]
or al, 0x40
add byte [rbx], al
sbb ecx, dword [rdi + rax]
or byte [rax + 0x24000001], dl
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
scasb al, byte [rdi]
idiv edi
fld dword [rax]
add byte [rax], al
add al, 0xbc
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
add dword [r11], 2
iretd
or al, 7
or byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
mov word [rax], es
add byte [rax], al
pop rdi
clc
dec dword [rdx + 3]
adc byte [rsi + 0x60d4302], al
add eax, dword [rbp + 0x8070c03]
add byte [rax + rax], bl
add byte [rax], al
lodsb al, byte [rsi]
add byte [rax], al
add cl, cl
sti
push qword [rdi]
adc byte [rsi + 0x60d4302], al
add dh, byte [rdx + 0x8070c]
add byte [rax + rax], bl
add byte [rax], al
int3
add byte [rax], al
add byte [rax - 4], ah
lcall [rax + rax]
add byte [rax], al
adc byte [rsi + 0x60d4302], al
add dl, byte [rdi + 0xc]
or byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
in al, dx
add byte [rax], al
add byte [rsp + rdi*8 + 0x15ffff], bl
add byte [rax], al
add byte [rcx + 0xe], al
adc byte [rsi + 0x60d4302], al
push rax
or al, 7
or byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx + rax], cl
add byte [rax], al
movabs al, byte [0x65fffffc]
adc byte [rdi + 0x180e4202], cl
mov es, word [rbx]
and byte [rbp + 0x280e4204], cl
mov word [rip - 0x79cff1b8], es
cmp byte [rbx + 0x400e4d07], al
jb 0x40169a
cmp byte [rcx + 0xe], al
xor byte [rcx + 0xe], al
sub byte [rdx + 0xe], al
and byte [rdx + 0xe], al
sbb byte [rdx + 0xe], al
adc byte [rdx + 0xe], al
or byte [rax], al
adc al, 0
add byte [rax], al
push rsp
add dword [rax], eax
add al, cl
cld
inc dword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc dword [rcx]
or bh, byte [rdi]
mov bl, 1
add al, cl
add dword [rip], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, 0x40
add byte [rax], al
fcom qword [rdx]
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rcx
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 2], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
or al, byte [rax]
add byte [rax], al
add byte [rax], al
or eax, 0
add byte [rax], al
add byte [rbx + rdx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
sbb eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
sbb eax, 0x60
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmc
ljmp [rdi]
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], ch
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc al, 3
add byte [rax], al
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 1, 0
add byte [rax], al
add byte [rax], al
adc al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
ljmp [rdi]
add byte [rax], al
add byte [rax + 8], dh
add byte [rax], al
add byte [rax], al
add bh, bh
ljmp [rdi]
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dh
ljmp [rdi]
add byte [rax], al
add byte [rax + rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or r8d, dword [rax]
add byte [rax], al
add byte [rax], al
push rsi
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or ax, word [rax]
add byte [rax], al
add byte [rax], al
jbe 0x402045
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x400b], al
add byte [rax], al
add byte [rsi + 0x400b], dl
add byte [rax], al
add byte [rsi + 0x400b], ah
add byte [rax], al
add byte [rsi + 0x400b], dh
add byte [rax], al
add dh, al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
out 0xb, al
add byte [rax], al
add byte [rax], al
add dh, dh
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0xc], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x43], al
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x402138
je 0x402141
and byte [rip + 0x302e342e], dh
sub eax, 0x75627536
outsb dx, byte [rsi]
je 0x40214f
xor dword [rsi + 0x31], edi
xor byte cs:[rsi + rbp], dh
xor al, 0x29
and byte [rip + 0x302e342e], dh
and byte [rdx], dh
xor byte [rcx], dh
xor byte ss:[rsi], dh
xor byte [rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add al, byte [rax]
push rsp
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, dword [rax]
je 0x40214c
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], al
cwde
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add eax, 0x4002d000
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], al
add byte [rax], ch
add eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rax + rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], cl
add byte [rax + 8], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], cl
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, byte [rax]
xor byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], cl
add al, bh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
or al, 0
and byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x400c6000], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], cl
add byte [rax + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], cl
add byte [rbx + rdx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], dl
add byte [rax + 0x4013], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], dl
add al, cl
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdx], dl
add byte [rax], ah
adc eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
adc eax, dword [rax]
mov esp, 0x4016
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax + rax], dl
call 0x408302
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rsi], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rax], bl
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rcx], bl
add byte [rax], al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, byte [rax]
mov al, 0x20
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], al
add byte [rbx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, 0
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], cl
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax + 0x400c], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add al, ah
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
add byte [rax], al
add byte [rdx], al
add byte [rsi], cl
add byte [rax], ah
or eax, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add byte [rcx], al
add byte [rbx], bl
add al, cl
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbx
add byte [rax], al
add byte [rcx], al
add byte [rip + 0x601df800], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, byte [rax]
add byte [rax + 0xd], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], al
add byte [rax + rax], dl
call 0x40849a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x4000000], ah
add cl, dh
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x1000000], ch
add byte [rax], dl
add byte [rax + 0x4013], cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, al
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x4013], cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rcx], al
add byte [rax], dl
add byte [rdx + 0x4013], cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
add byte [rax], al
add byte [rcx], al
add byte [rbx], bl
add byte [rax], al
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
test dword [rax], 0x10000
adc byte [rax], al
mov word [rbx], ss
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4013], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rcx + 0x4013], dl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 1], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
xchg eax, edx
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rbx + rdx + 0x40], dl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
je 0x40257b
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
cwde
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rbx + rdx + 0x40], bl
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dh, 1
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
movabs al, byte [0x400000000004013]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, dl
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rbx + rdx + 0x40], ah
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
cld
add dword [rax], eax
add byte [rcx], al
add byte [rax], dl
add byte [rax + 0x4013], ch
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb eax, dword [rdx]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
lodsb al, byte [rsi]
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp eax, 0x1000002
add byte [rax], dl
add byte [rax + 0x4013], dh
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdx
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rbx + rdx + 0x40], dh
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x40263c
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov eax, 0x4013
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, edi
add al, byte [rax]
add byte [rcx], al
add byte [rax], dl
add byte [rbx + rdx + 0x40], bh
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000002
add byte [rax], dl
add al, al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
out 2, eax
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
lsl eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add al, cl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add ah, cl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rdi
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add al, dl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add ah, dl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
stosd dword [rdi], eax
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add al, bl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, dword [rax]
add byte [rcx], al
add byte [rax], dl
add ah, bl
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax + rax], eax
add byte [rcx], al
add byte [rax], dl
add al, ah
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub al, byte [rax + rax]
add byte [rcx], al
add byte [rax], dl
add ah, ah
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rcx], al
add byte [rax], dl
add al, ch
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
js 0x402776
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
in al, dx
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
movsb byte [rdi], byte ptr [rsi]
add al, 0
add byte [rcx], al
add byte [rax], dl
add al, dh
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
int3
add al, 0
add byte [rcx], al
add byte [rax], dl
add ah, dh
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rcx], al
add byte [rax], dl
add al, bh
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb dword [rip + 0x10000], eax
adc byte [rax], al
cld
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
add byte [rax + rax*2], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0x10000
adc byte [rax], al
add al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
lea eax, [rip + 0x10000]
adc byte [rax], al
or byte [rax + rax*2], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov bl, 5
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
or al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fadd qword [rip + 0x10000]
adc byte [rax], al
adc byte [rax + rax*2], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rsi]
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
adc al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rsi], al
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb byte [rax + rax*2], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rdx
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
sbb al, 0x14
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
jge 0x4028b0
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
and byte [rax + rax*2], dl
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x2800100001000006], eax
adc al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add dword [rax], eax
adc byte [rax], al
mov eax, 0x4014
add byte [rax], al
add byte [rip], cl
add byte [rax], al
add dl, ch
add byte [rax], al
add al, byte [rax]
add byte [rax + 0x4012], al
add byte [rax], al
add byte [rax + rax], bl
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add al, byte [rax]
add ah, bl
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
adc eax, 0
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], dh
add byte [rax], al
add dword [rax], eax
adc al, byte [rax]
mov eax, 0x4016
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 7], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
int1
inc dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx + 7], dl
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
enter 0x4014, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
sbb dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 7], bh
add byte [rax], al
add byte [rax], al
adc al, 0
clc
sbb eax, 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov eax, dword [rdi]
add byte [rax], al
add byte [rax], al
adc al, 0
call 0x4089f2
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000007], bl
add byte [rdi], dl
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dl, dl
or dword [rax], eax
add byte [rax], ah
add byte [rdx], bl
add byte [rax + 0x6020], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
or eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x12000007], ah
add byte [rsi], cl
add byte [rax + 0x13], dh
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, dl
or dword [rax], eax
add byte [rdx], dl
add byte [rsi], cl
add byte [rax + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rdx], ch
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + 0x20000007], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dh, al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
fiadd dword [rdi]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
in al, dx
add byte [rax], al
adc al, byte [rax]
add byte [rdi], bh
add byte [rax], al
add byte [rax], al
add byte [rdx + 3], cl
add byte [rax], al
add dh, dh
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 7
add byte [rax], al
adc al, byte [rax]
add byte [rbx + rdx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], dl
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dh
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 8], dl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
outsd dx, dword [rsi]
or byte [rax], al
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x12000008], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
or dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add byte [rax + 0x400b], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], ch
or dword [rax], eax
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + 9], cl
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg eax, esp
or dword [rax], eax
add byte [rcx], dl
add byte [rax], dl
add byte [rax + 0x4013], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x12000009], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x20000009], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, dl
or dword [rax], eax
add byte [rax], dl
add byte [rdx], bl
add byte [rax + 0x6020], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add ch, bl
or dword [rax], eax
add byte [rdx], dl
add byte [rax], al
add al, ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or al, byte [rax]
add byte [rcx], dl
add bl, byte [rdx]
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor ecx, dword [rdx]
add byte [rax], al
adc al, byte [rax]
add byte [rsi + 0xd], ah
add byte [rax], al
add byte [rax], al
add cl, bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], bh
or al, byte [rax]
add byte [rcx], dl
add bl, byte [rdx]
add byte [rax + 0x6020], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rcx], cl
add byte [rdx], dl
add byte [rsi], cl
add byte [rax], al
adc eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte gs:[rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], ch
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
loopne 0x402caa
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rcx], bl
add byte [rax], dl
add byte [rbx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
push 0x1200000a
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x10000007], al
add byte [rbx], bl
add byte [rax], cl
and dword [rax], esp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test byte [rdx], cl
add byte [rax], al
adc dword [rax], eax
sbb eax, dword [rax]
shl byte [rax], 0x60
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1200000a], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
or al, byte [rax]
add byte [rax], dl
add byte [rdx], bl
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
out dx, al
or al, byte [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], dl
or al, 0x40
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi], cl
or eax, dword [rax]
add byte [rdx], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rcx], ah
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmp al, 0xb
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xchg byte [rbx], cl
add byte [rax], al
adc al, byte [rax]
add cl, cl
adc dword [rax], eax
add byte [rax], al
add byte [rax], al
mov bh, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rsi
or al, byte [rax]
add byte [rdx], dl
add byte [rbx], cl
add al, bh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov ecx, dword [rbx]
add byte [rax], al
adc al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + 0x72], ah
je 0x402e48
je 0x402e4c
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
pop rdi
pop rdi
add byte [rbp + 0x72], ah
imul esi, dword gs:[ebx + 0x74], 0x745f7265
insd dword [rdi], dx
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x402dfe
pop rdi
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402e7c
jb 0x402e82
pop rdi
jne 0x402e8b
add byte [rbx + 0x6f], ah
insd dword [rdi], dx
jo 0x402e85
je 0x402e81
xor eax, 0x5f003538
pop rdi
outsd dx, dword fs:[rsi]
pop rdi
insb byte [edi], dx
outsd dx, dword [rsi]
insb byte [rdi], dx
pop rdi
je 0x402ea1
jb 0x402ea7
pop rdi
jne 0x402eb0
pop rdi
imul bp, word [rsi + 0x69], 0x615f
jb 0x402eb3
jns 0x402ea3
outsb dx, byte gs:[rsi]
je 0x402eba
jns 0x402e4a
jb 0x402eae
insd dword [rdi], dx
pop rdi
jne 0x402ec0
insd dword [rdi], dx
jns 0x402e56
pop rdi
pop rdi
jb 0x402ebc
insd dword [rdi], dx
pop rdi
jne 0x402ece
insd dword [rdi], dx
jns 0x402ec3
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x402ece
jns 0x402ece
outsb dx, byte gs:[rsi]
je 0x402ee5
jns 0x402e75
movsxd rsi, dword cs:[rax + 0x70]
add byte [rdi + 0x5a], bl
push rbx
je 0x402ecc
xor dword [rcx], edi
jo 0x402eed
movsxd rsp, dword gs:[rbp + 0x77]
imul esi, dword [rbx + 0x65], 0x6e6f635f
jae 0x402f05
jb 0x402f08
movsxd rsi, dword [rax + rax + 0x5f]
pop rdx
push rbx
je 0x402ee7
xor dword [rbx], esi
insb byte [rdi], dx
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rsp, dword [rcx + 0x74]
outsd dx, dword [rsi]
jb 0x402f06
jb 0x402f11
add byte [rdi + 0x5a], bl
push rbx
je 0x402efc
imul esp, dword ss:[rdi + 0x6e], 0x65726f
pop rdi
pop rdx
push rbx
je 0x402f09
cmp byte [rdi + 0x5f], bl
imul ebp, dword [rdi + 0x69], 0x74696e
pop rdi
pop rdx
cmp qword [rdi + 0x5f], r11
outsb dx, byte [esi]
jne 0x402f30
movsxd rdi, dword [rax + 0x78]
xor r14b, byte [rcx]
pop rdi
pop rdi
jne 0x402f4b
je 0x402f40
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x5f]
jo 0x402f57
insb byte [rdi], dx
imul esp, dword [rbx + 0x79], 0x5a5f0045
push rbx
je 0x402f3f
xor dword [rax], esi
jb 0x402f5a
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402f51
xor dword [rcx], esi
je 0x402f7b
jns 0x402f6a
je 0x402f7c
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402f64
xor dword [rax], esi
outsd dx, dword fs:[rsi]
jo 0x402f93
pop rdi
insb byte [rdi], dx
outsd dx, dword [rsi]
movsxd rbp, dword [rbx]
pop rdi
pop rdx
push rbx
je 0x402f5c
xor eax, 0x65676572
js 0x402f91
movsxd rbp, dword [rdi + 0x6e]
jae 0x402fab
outsb dx, byte [rsi]
je 0x402fae
xor rax, 0x73616369
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x402f7b
xor eax, 0x65676572
js 0x402fb0
movsxd rbp, dword [rdi + 0x6e]
jae 0x402fca
outsb dx, byte [rsi]
je 0x402fcd
outsb dx, byte ss:[rsi]
outsd dx, dword [rsi]
jae 0x402fd5
jae 0x402fa8
add byte [rdi + 0x5a], bl
push rbx
je 0x402f9b
xor eax, 0x65676572
js 0x402fd0
movsxd rbp, dword [rdi + 0x6e]
jae 0x402fea
outsb dx, byte [rsi]
je 0x402fed
cmp byte [rdi + 0x70], r13b
je 0x402fe9
insd dword [rdi], dx
imul edi, dword [rdx + 0x65], 0x5a5f0045
push rbx
je 0x402fbd
xor eax, 0x65676572
js 0x402ff2
movsxd rbp, dword [rdi + 0x6e]
jae 0x40300c
outsb dx, byte [rsi]
je 0x40300f
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x40300a
add byte [r15 + 0x5a], r11b
push rbx
je 0x402fde
xor eax, 0x65676572
js 0x403013
movsxd rbp, dword [rdi + 0x6e]
jae 0x40302d
outsb dx, byte [rsi]
je 0x403030
xor qword [rax], r14
push r11
movsxd rsi, dword [rdx + 0x69]
jo 0x40303e
add byte [r15 + 0x5a], r11b
push rbx
je 0x403003
xor eax, 0x65676572
js 0x403038
movsxd rbp, dword [rdi + 0x6e]
jae 0x403052
outsb dx, byte [rsi]
je 0x403055
xor rax, 0x69736162
movsxd rax, dword [rbp]
pop rdi
pop rdx
push rbx
je 0x403022
xor eax, 0x65676572
js 0x403057
movsxd rbp, dword [rdi + 0x6e]
jae 0x403071
outsb dx, byte [rsi]
je 0x403074
cmp byte [rbp + 0x78], r12b
je 0x40306c
outsb dx, byte [rsi]
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x403044
xor eax, 0x65676572
js 0x403079
movsxd rbp, dword [rdi + 0x6e]
jae 0x403093
outsb dx, byte [rsi]
je 0x403096
xor r12, qword [rcx + 0x77]
imul eax, dword [rbp], 0x5f
pop rdx
push rbx
je 0x403061
xor eax, 0x65676572
js 0x403096
movsxd rbp, dword [rdi + 0x6e]
jae 0x4030b0
outsb dx, byte [rsi]
je 0x4030b3
xor al, 0x67
jb 0x4030aa
jo 0x40308c
add byte [rdi + 0x5a], bl
push rbx
je 0x40307f
xor eax, 0x65676572
js 0x4030b4
movsxd rbp, dword [rdi + 0x6e]
jae 0x4030ce
outsb dx, byte [rsi]
je 0x4030d1
xor rax, 0x65726765
jo 0x4030ab
add byte [rdi + 0x5a], bl
push rbx
je 0x40309e
xor eax, 0x65676572
js 0x4030d3
movsxd rbp, dword [rdi + 0x6e]
jae 0x4030ed
outsb dx, byte [rsi]
je 0x4030f0
xor qword [rbx], r14
insd dword [rdi], dx
je 0x4030e7
push 0x6665645f
jne 0x4030f8
je 0x4030d3
add byte [rdi + 0x5a], bl
push rbx
je 0x4030c6
xor eax, 0x65676572
js 0x4030fb
movsxd rbp, dword [rdi + 0x6e]
jae 0x403115
outsb dx, byte [rsi]
je 0x403118
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40310f
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x4030ee
xor eax, 0x65676572
js 0x403123
movsxd rbp, dword [rdi + 0x6e]
jae 0x40313d
outsb dx, byte [rsi]
je 0x403140
xor qword [rbx], r14
insd dword [rdi], dx
je 0x403137
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x403116
xor eax, 0x65676572
js 0x40314b
movsxd rbp, dword [rdi + 0x6e]
jae 0x403165
outsb dx, byte [rsi]
je 0x403168
xor qword [rbx], r14
insd dword [rdi], dx
je 0x40315f
push 0x746f6e5f
pop rdi
outsd dx, dword [rsi]
ja 0x40314b
add byte [rdi + 0x5a], bl
push rbx
je 0x40313e
xor eax, 0x65676572
js 0x403173
movsxd rbp, dword [rdi + 0x6e]
jae 0x40318d
outsb dx, byte [rsi]
je 0x403190
xor qword [rbx], r14
insd dword [rdi], dx
je 0x403187
push 0x746f6e5f
pop rdi
outsd dx, dword gs:[rsi]
ja 0x403173
add byte [rdi + 0x5a], bl
push rbx
je 0x403166
xor eax, 0x65676572
js 0x40319b
movsxd rbp, dword [rdi + 0x6e]
jae 0x4031b5
outsb dx, byte [rsi]
je 0x4031b8
cmp qword [rbp + 0x61], r13
je 0x4031ae
push 0x796e615f
add byte [r15 + 0x5a], r11b
push rbx
je 0x403189
xor eax, 0x65676572
js 0x4031be
movsxd rbp, dword [rdi + 0x6e]
jae 0x4031d8
outsb dx, byte [rsi]
je 0x4031db
xor qword [rbp*2 + 0x68637461], r14
pop rdi
outsb dx, byte [rsi]
outsd dx, dword [rsi]
je 0x4031d4
outsb dx, byte [rsi]
jne 0x4031e4
insb byte [rdi], dx
add byte [r15 + 0x5a], r11b
push rbx
je 0x4031b2
xor eax, 0x65676572
js 0x4031e7
movsxd rbp, dword [rdi + 0x6e]
jae 0x403201
outsb dx, byte [rsi]
je 0x403204
xor qword [rsi], r14
insd dword [rdi], dx
je 0x4031fb
push 0x6e6f635f
je 0x403208
outsb dx, byte [rsi]
jne 0x403211
jne 0x403217
add byte [r15 + 0x5a], r11b
push rbx
je 0x4031dd
xor eax, 0x65676572
js 0x403212
movsxd rbp, dword [rdi + 0x6e]
jae 0x40322c
outsb dx, byte [rsi]
je 0x40322f
xor qword [rsi], r14
insd dword [rdi], dx
je 0x403226
push 0x6572705f
jbe 0x403229
jbe 0x40322e
imul ebp, dword [rbp + rax*2], 0x534e5a5f
je 0x403208
xor eax, 0x65676572
js 0x40323d
movsxd rbp, dword [rdi + 0x6e]
jae 0x403257
outsb dx, byte [rsi]
je 0x40325a
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x40325b
je 0x403250
jne 0x403263
je 0x40323e
add byte [rdi + 0x5a], bl
push rbx
je 0x403231
xor eax, 0x65676572
js 0x403266
movsxd rbp, dword [rdi + 0x6e]
jae 0x403280
outsb dx, byte [rsi]
je 0x403283
xor qword [rax], r14
outsw dx, word [rsi]
jb 0x403284
je 0x403279
jae 0x403281
add byte fs:[r15 + 0x5a], r11b
push rbx
je 0x403256
xor eax, 0x65676572
js 0x40328b
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032a5
outsb dx, byte [rsi]
je 0x4032a8
xor qword [rsi], r14
outsd dx, dword [rsi]
jb 0x4032a9
je 0x40329e
outsb dx, byte [rsi]
outsd dx, dword [rsi]
pop rdi
movsxd rbp, dword [rdi + 0x70]
jns 0x40328c
add byte [rdi + 0x5a], bl
push rbx
je 0x40327f
xor eax, 0x65676572
js 0x4032b4
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032ce
outsb dx, byte [rsi]
je 0x4032d1
xor qword [rdi], r14
outsw dx, word [rsi]
jb 0x4032d2
je 0x4032c7
imul si, word [rdx + 0x73], 0x5f74
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
jns 0x4032b8
add byte [rdi + 0x5a], bl
push rbx
je 0x4032ab
xor eax, 0x65676572
js 0x4032e0
movsxd rbp, dword [rdi + 0x6e]
jae 0x4032fa
outsb dx, byte [rsi]
je 0x4032fd
xor qword [rbx], r14
jb 0x403302
outsd dx, dword [rsi]
jb 0x4032f2
movsxd rbp, dword [rdi + 0x6c]
insb byte [rdi], dx
je 0x4032ff
add byte [r15 + 0x5a], r11b
push rbx
je 0x4032d3
xor eax, 0x65676572
js 0x403308
movsxd rbp, dword [rdi + 0x6e]
jae 0x403322
outsb dx, byte [rsi]
je 0x403325
xor qword [rcx], r14
jb 0x40332a
outsd dx, dword [rsi]
jb 0x40331a
movsxd rsi, dword [rcx + rdi*2 + 0x70]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x4032f9
xor eax, 0x65676572
js 0x40332e
movsxd rbp, dword [rdi + 0x6e]
jae 0x403348
outsb dx, byte [rsi]
je 0x40334b
xor qword [rdx], r14
jb 0x403350
outsd dx, dword [rsi]
jb 0x403340
jae 0x403347
jo 0x40334c
add byte [r15 + 0x5a], r11b
push rbx
je 0x403320
xor eax, 0x65676572
js 0x403355
movsxd rbp, dword [rdi + 0x6e]
jae 0x40336f
outsb dx, byte [rsi]
je 0x403372
xor qword [rbx], r14
jb 0x403377
outsd dx, dword [rsi]
jb 0x403367
movsxd rbp, dword [rbx + 0x72]
add byte gs:[r15 + 0x5a], r11b
push rbx
je 0x403348
xor eax, 0x65676572
js 0x40337d
movsxd rbp, dword [rdi + 0x6e]
jae 0x403397
outsb dx, byte [rsi]
je 0x40339a
xor qword [rcx], r14
jb 0x40339f
outsd dx, dword [rsi]
jb 0x40338f
jb 0x403394
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40336e
xor eax, 0x65676572
js 0x4033a3
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033bd
outsb dx, byte [rsi]
je 0x4033c0
xor qword [rcx], r14
jb 0x4033c5
outsd dx, dword [rsi]
jb 0x4033b5
jo 0x4033b9
jb 0x4033bf
outsb dx, byte [rsi]
add byte [r15 + 0x5a], r11b
push rbx
je 0x403394
xor eax, 0x65676572
js 0x4033c9
movsxd rbp, dword [rdi + 0x6e]
jae 0x4033e3
outsb dx, byte [rsi]
je 0x4033e6
xor qword [rcx], r14
jb 0x4033eb
outsd dx, dword [rsi]
jb 0x4033db
jb 0x4033e0
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4033ba
xor eax, 0x65676572
js 0x4033ef
movsxd rbp, dword [rdi + 0x6e]
jae 0x403409
outsb dx, byte [rsi]
je 0x40340c
xor qword [0x726f7272], r14
pop rdi
jb 0x403409
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4033e3
xor eax, 0x65676572
js 0x403418
movsxd rbp, dword [rdi + 0x6e]
jae 0x403432
outsb dx, byte [rsi]
je 0x403435
xor qword [rcx], r14
jb 0x40343a
outsd dx, dword [rsi]
jb 0x40342a
jb 0x40342e
outsb dx, byte [rsi]
add byte gs:[r15d + 0x5a], r11b
push rbx
je 0x403409
xor eax, 0x65676572
js 0x40343e
movsxd rbp, dword [rdi + 0x6e]
jae 0x403458
outsb dx, byte [rsi]
je 0x40345b
xor qword [rcx], r14
jb 0x403460
outsd dx, dword [rsi]
jb 0x403450
jae 0x403463
movsxd rsp, dword [rbp + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x40342f
xor eax, 0x65676572
js 0x403464
movsxd rbp, dword [rdi + 0x6e]
jae 0x40347e
outsb dx, byte [rsi]
je 0x403481
xor qword [rip + 0x6f727265], r14
jb 0x403476
jb 0x403481
jo 0x403483
je 0x403466
add byte [rdi + 0x5a], bl
push rbx
je 0x403459
xor eax, 0x65676572
js 0x40348e
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034a8
outsb dx, byte [rsi]
je 0x4034ab
xor qword [rsi], r14
jb 0x4034b0
outsd dx, dword [rsi]
jb 0x4034a0
movsxd rbp, dword [rdi + 0x6d]
jo 0x4034b2
js 0x4034b2
je 0x4034c4
add byte [r15 + 0x5a], r11b
push rbx
je 0x403484
xor eax, 0x65676572
js 0x4034b9
movsxd rbp, dword [rdi + 0x6e]
jae 0x4034d3
outsb dx, byte [rsi]
je 0x4034d6
xor qword [rcx], r14
jb 0x4034db
outsd dx, dword [rsi]
jb 0x4034cb
jae 0x4034e2
movsxd rbp, dword [rbx + 0x45]
add byte [rdi + 0x5a], bl
push rbx
je 0x4034b1
pop rdi
pop rdi
je 0x4034e0
imul ebp, dword [rsp + rcx*2 + 0x31], 0x5f535f39
imul ebp, dword [rsi + 0x76], 0x64696c61
pop rdi
jae 0x403505
je 0x4034f9
pop rdi
imul esp, dword [rbp + rax*2], 0x355a5a5f
jae 0x40350e
insb byte [rdi], dx
jbe 0x403507
jbe 0x4034e9
xor dword [rcx], edi
pop rdi
pop rdi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
xor al, 0x31
pop rdi
pop rdi
jae 0x403536
je 0x40352e
movsxd rbx, dword [rdi + 0x69]
outsb dx, byte [rsi]
imul esi, dword [rcx + rbp*2 + 0x61], 0x617a696c
je 0x40353c
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
outsb dx, byte [rsi]
pop rdi
jae 0x403552
jb 0x403555
movsxd rsi, dword [rcx + rbp*2 + 0x6f]
outsb dx, byte [rsi]
pop rdi
xor byte [rcx + 0x69], ch
add byte [rdi + 0x47], bl
pop rdi
pop rdi
jae 0x40356a
pop rdi
pop r15
pop rdi
pop rdx
xor esp, dword [rcx + 0x6e]
jae 0x403542
xor eax, 0x31787863
xor dword [rax], eax
pop rdi
pop rdi
push rdx
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push r10
pop rdi
pop rdi
pop rdi
add byte [rdi + 0x5f], bl
push rbp
pop rdi
pop rdi
push rdx
pop r15
push rdx
add byte [rdi + 0x47], bl
pop rdi
push rbx
push r12
pop rdi
push rsp
pop r15
add byte [rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4035b6
jns 0x4035b6
outsb dx, byte gs:[rsi]
add byte fs:[rdi + 0x5f], bl
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x4035c7
jns 0x4035c7
jae 0x4035de
jb 0x4035e1
add byte [rdi + 0x44], bl
pop rcx
add byte [r15 + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul bp, word [rsi + 0x69], 0x5f00
pop rdi
insd dword [edi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
pop rdi
jae 0x403604
jb 0x403607
pop rdi
pop rdi
add byte [rdi + 0x4a], bl
jbe 0x4035f9
push rdx
imul esi, dword gs:[ebx + 0x74], 0x6c437265
jae 0x40361a
jae 0x4035aa
jo 0x403621
je 0x403621
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x355a5f00
jae 0x403630
insb byte [rdi], dx
jbe 0x403629
jbe 0x4035c6
pop rdi
pop rdi
jae 0x40363e
jb 0x403642
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x40361f
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rbx + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
pop rdi
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x6174735f
jb 0x403686
pop rdi
insd dword [rdi], dx
imul ebp, dword [rsi + 0x40], 0x494c4740
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x635f5f00
js 0x40368b
pop rdi
je 0x403693
js 0x403699
je 0x403672
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push rbx
je 0x40367c
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x4036bb
movsxd rbx, dword [rdi + 0x73]
je 0x4036c9
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4036c4
je 0x4036d9
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
jo 0x4036c2
push r10
push r11
xor al, 0x5f
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x4036ca
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403709
movsxd rbx, dword [rdi + 0x73]
je 0x403717
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403712
je 0x403727
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
jo 0x403710
push r8
movsxd rax, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5a], bl
push rbx
je 0x403717
imul ebp, dword [rdi + 0x73], 0x7361625f
xor al, 0x49
outsb dx, byte [rsi]
imul esi, dword [rsp + rax*2 + 0x31], 0x40407645
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0
pop rdi
push r12
pop r15
jb 0x40376c
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5a], bl
push rbx
je 0x403757
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403796
movsxd rbx, dword [rdi + 0x73]
je 0x4037a4
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x40379f
je 0x4037b4
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [r13 + 0x76], eax
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x49], bl
pop r15
jae 0x4037de
imul ebp, dword fs:[rsi + 0x5f], 0x64657375
add byte [rbx + 0x63], dh
outsb dx, byte [rsi]
pop r15w
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x54495f00
pop r15
jb 0x4037f2
imul esi, dword [ebx + 0x74], 0x4d547265
insb byte [rdi], dx
outsd dx, dword [rsi]
outsb dx, byte [rsi]
push rsp
insb byte [rdi], dx
add byte gs:[rdi + 0x5f], bl
je 0x403807
pop rdi
jae 0x40381d
jb 0x403820
add byte [rdi + 0x5a], bl
push rbx
je 0x4037ea
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403829
movsxd rbx, dword [rdi + 0x73]
je 0x403837
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403832
je 0x403847
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor dword [rbp + 0x76], r8d
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x5f], bl
push rsp
pop r15
pop rdi
pop rdi
add byte [rdi + 0x5a], bl
xor al, 0x73
jne 0x40386b
xor ch, byte [rcx + 0x69]
movsxd rsp, dword [rbx]
pop rdi
pop rdi
jae 0x403883
pop rdi
push 0x6c646e61
add byte gs:[rdi + 0x5f], bl
insb byte [rdi], dx
imul esp, dword [rdx + 0x63], 0x7573635f
pop rdi
imul ebp, dword [rsi + 0x69], 0x5f5f0074
jae 0x4038a4
pop rdi
jae 0x4038a8
jb 0x4038ab
add byte [rdi + 0x5f], bl
jae 0x4038b0
movsxd rbp, dword [rbx + 0x5f]
movsxd rbp, dword [rax + 0x6b]
pop rdi
imul ebp, dword [rax + rax*2 + 0x40], 0x42494c47
pop r15
xor ch, byte [rsi]
xor al, 0
jae 0x4038ca
jb 0x4038cc
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x4e5a5f00
push r11
je 0x4038a6
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x4038e5
movsxd rbx, dword [rdi + 0x73]
je 0x4038f3
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4038ee
je 0x403903
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
xor eax, 0x74735f63
jb 0x4038ea
jbe 0x4038e7
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rdi + 0x65], bl
je 0x40391e
add byte [rdi + 0x5f], bl
js 0x40393b
pop rdi
jo 0x40392b
jb 0x40393b
outsd dx, dword [rsi]
outsb dx, byte [rsi]
insb byte [rdi], dx
imul esi, dword [rcx + rdi*2 + 0x5f], 0x40403076
pop r8
pop rax
pop r15
xor dword [rsi], ebp
xor eax, dword [rax]
jo 0x403954
imul ebp, dword [rsi + 0x74], 0x47404066
pop r15
xor ch, byte [rsi]
xor ch, byte [rsi]
xor eax, 0x6e555f00
ja 0x403962
outsb dx, byte [rsi]
pop rdi
push rdx
jae 0x403975
insd dword [rdi], dx
pop r15
xor ebp, dword [rsi]
xor byte [rax], al
pop rdi
pop rdx
push rbx
je 0x403949
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x403988
movsxd rbx, dword [rdi + 0x73]
je 0x403996
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x403991
je 0x4039a6
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
jo 0x40398f
movsxd r8, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rbp + 0x61], ch
imul ebp, dword [rsi], 0x534e5a5f
je 0x403998
pop rdi
pop rdi
movsxd rdi, dword [rax + 0x78]
xor dword [rcx], esi
xor dword [rdx], esi
jae 0x4039d7
movsxd rbx, dword [rdi + 0x73]
je 0x4039e5
imul ebp, dword [rsi + 0x67], 0x74536349
xor dword [rcx], esi
movsxd rbp, dword [rax + 0x61]
jb 0x4039e0
je 0x4039f5
imul esi, dword [rbx + rsi*2 + 0x49], 0x61534563
movsxd rax, dword [r13 + 0x45]
push rbx
push r8
movsxd rax, dword [r8 + 0x40]
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2e
xor dh, byte [rcx]
add byte [rax], al
jae 0x403a24
insd dword [rdi], dx
je 0x403a0f
add byte [rsi], ch
jae 0x403a27
jb 0x403a29
add byte [rsi], ch
jae 0x403a23
jae 0x403a31
jb 0x403a33
add byte [rsi], ch
imul ebp, dword [rsi + 0x74], 0x707265
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x403a34
sub rax, 0x676174
outsb dx, byte cs:[rsi]
outsd dx, dword [rsi]
je 0x403a42
outsb dx, byte cs:[esi]
jne 0x403a10
jne 0x403a4e
insb byte [rdi], dx
sub eax, 0x2e006469
outsb dx, byte [esi]
jne 0x403a1e
push 0x687361
jns 0x403a67
jae 0x403a74
insd dword [rdi], dx
add byte [rsi], ch
jns 0x403a6f
jae 0x403a77
jb 0x403a05
outsb dx, byte cs:[esi]
jne 0x403a38
jbe 0x403a71
jb 0x403a81
imul ebp, dword [rdi + 0x6e], 0x6e672e00
jne 0x403a45
jbe 0x403a7e
jb 0x403a8e
imul ebp, dword [rdi + 0x6e], 0x2e00725f
jb 0x403a89
insb byte [rdi], dx
jns 0x403a98
add byte [rsi], ch
jb 0x403a93
insb byte [rdi], dx
jo 0x403a9f
je 0x403a35
imul ebp, dword cs:[rsi + 0x69], 0x702e0074
insb byte [rdi], dx
je 0x403a6e
outsd dx, dword [esi]
je 0x403a44
je 0x403aac
js 0x403abd
add byte [rsi], ch
imul bp, word [rsi + 0x69], 0x2e00
jb 0x403ac2
je 0x403ab8
add byte [rsi], ch
push 0x6172665f
insd dword [rdi], dx
pop rdi
push 0x2e007264
push 0x6172665f
insd dword [rdi], dx
add byte gs:[rsi], ch
movsxd rsp, dword [ebx + 0x5f]
js 0x403adb
jo 0x403aef
pop rdi
je 0x403adf
insb byte [rdi], dx
add byte gs:[rsi], ch
imul ebp, dword [rsi + 0x69], 0x72615f74
jb 0x403aed
jns 0x403a8e
imul bp, word cs:[rsi + 0x69], 0x615f
jb 0x403b09
jns 0x403a9a
push 0x63
jb 0x403a9f
jns 0x403b11
insd dword [rdi], dx
imul esp, dword [rbx], 0x746f672e
jo 0x403b1b
je 0x403ab1
je 0x403b17
add byte [rsi], ch
jae 0x403b2e
add byte [rsi], ch
movsxd rbp, dword [rdi + 0x6d]
insd dword [rdi], dx
outsb dx, byte gs:[rsi]
je 0x403ac5
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], bl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bh
add al, byte [rax]
add byte [rax], al
add byte [rax], al
cmp byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dl
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx + rax + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rdx + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax + rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, 0
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], r8b
add dh, dh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4002], bl
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
or eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
rol byte [rdx], 1
add byte [rax], al
add byte [rax], al
add al, dl
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax + 2], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], dl
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
sub byte [rip + 0x40], al
add byte [rax], al
sub byte [rip], al
add byte [rax], al
adc al, 3
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
pop rsi
add byte [rax], al
add bh, bh
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax + rcx], bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
xor al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add eax, 0
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx], ch
add byte [rax], al
ljmp [rdi + 2]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 8], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 8], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
nop
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], bh
add byte [rax], al
add al, 0
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rip], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x40000], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
or dword [rax], eax
add byte [rax], al
add byte [rax], al
xor byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 1, 0
add byte [rax], al
add byte [rax], al
add eax, 0x19000000
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + 0x1000000], cl
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
or al, byte [rax]
add byte [rax], al
add byte [rax], al
clc
or al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rdx], bl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov dword [rax], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
and byte [rbx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax + 0x10000], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], ah
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
popfq
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rax + 0xc], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, byte [rdi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
movabs dword [0x600000001000000], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rbx + rdx + 0x40], dh
add byte [rax], al
add byte [rax], al
add byte [rbx + rdx], dh
add byte [rax], al
add byte [rax], al
add byte [rcx], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
test eax, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x4013], al
add byte [rax], al
add byte [rax + 0x13], al
add byte [rax], al
add byte [rbp + 1], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov cl, 0
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add al, byte [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
enter 0x4014, 0
add byte [rax], al
add byte [rax], al
enter 0x14, 0
add byte [rax], al
add byte [rax], al
push rsp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
mov edi, 0x1000000
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
adc eax, 0x40
add byte [rax], al
and byte [rip], dl
add byte [rax], al
pushfq
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add cl, cl
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rsi + rdx + 0x40], bh
add byte [rax], al
mov esp, 0x16
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bl, bl
add byte [rax], al
add byte [rsi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, ch
sbb eax, 0x60
add byte [rax], al
call 0x404002
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, ah
add byte [rax], al
add byte [rdi], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
sbb eax, 0x60
add byte [rax], al
clc
sbb eax, 0
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
clc
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
lock add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x1000000], bl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add al, bh
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rcx], eax
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], ah
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdx], cl
add dword [rax], eax
add byte [rcx], al
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + 0x6020], dh
add byte [rax], al
add byte [rax + 0x20], dh
add byte [rax], al
add byte [rax], dl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], dl
add dword [rax], eax
add byte [rax], cl
add byte [rax], al
add byte [rbx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
and byte [rax], ah
add byte [rax], al
add byte [rax], al
shl byte [rax], 0
add byte [rax], al
add byte [rax], al
add byte [rax], cl
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc eax, 0x1000001
add byte [rax], al
add byte [rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, al
and byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax + rax], dh
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
cmpsd dword [rsi], dword ptr [rdi]
cmp dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rsi], bl
add dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bh
and byte [rax], al
add byte [rax], al
add byte [rax], al
add al, bl
or al, 0
add byte [rax], al
add byte [rax], al
add byte [rdi], bl
add byte [rax], al
add byte [rax], ah
add byte [rax], al
or byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
sbb byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
or dword [rax], eax
add byte [rax], al
add eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
shr byte [rip], 1
add byte [rax], al
xlatb
or eax, dword [rax]
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rcx], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
add bh, bh
