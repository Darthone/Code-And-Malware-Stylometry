call 0x403df8
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x403c10
add ebx, ebx
je 0x403bc6
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x403bfe
cmp rbp, -4
ja 0x403bfe
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x403be6
add ecx, 4
mov dl, byte [rax]
je 0x403c0e
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x403bfe
ret
cld
pop r11
cmp r8b, 2
je 0x403c26
jmp 0x403ca3
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x403c36
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x403c1e
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x403c4e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x403c3b
sub eax, 3
jb 0x403c6c
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x403ca3
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x403c93
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x403c91
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x403c80
cmp rbp, -0xd00
adc ecx, eax
call 0x403bd2
jmp 0x403c26
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x403d7c
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x403d1a
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x403d66
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x403d39
push 0x3a707474
jne 0x403d92
js 0x403d52
jae 0x403d8c
outsb dx, byte cs:[rsi]
je 0x403d4b
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x403db9
jb 0x403dab
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x403dd6
jb 0x403de9
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x219033
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x219033
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x403cb4
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x403ddf
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x403d8d
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add byte [rax], al
jmp rbp
call 0x706f3e87
jb 0x403e9f
movsxd rbp, dword [rdi]
jae 0x403e99
insb byte [rdi], dx
js 0x403e9f
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x403e7f
cmp rsi, rcx
jae 0x403e87
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x403e66
cmp al, 0x8f
ja 0x403e66
cmp byte [rsi - 2], 0xf
je 0x403e6c
sub al, 0xe8
jg 0x403e69
push rdi
cmp al, 1
ja 0x403e54
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x403e57
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x403e84
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x403edb
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c4359
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x403f1f
mov al, 0xa
jmp 0x403f1f
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x403efb
inc ebx
mov al, 0
jmp 0x403f23
mov al, 2
jmp 0x403f23
mov al, 3
jmp 0x403f23
mov al, 0x3c
jmp 0x403f23
push rcx
rcr ah, 1
fstp st(7)
jle 0x403f64
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x403f76
jg 0x403f68
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a96eb
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x403fc2
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb913f
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x403fca
cmp esi, 0x21585055
jne 0x403fce
jge 0x403fc0
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x403fc3
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x403fc7
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x404073
pop rcx
or al, 0x3b
jb 0x404079
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x403feb
jmp 0x403fed
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3663f2e
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf56176
in eax, dx
jg 0x404025
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x40406b
mov bh, 0x2a
add edi, 0x10
jmp 0x404068
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x4040a5
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4040e1
jne 0x4040f8
fstpnce st(6), st(0)
jle 0x4040c1
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4040f7
jrcxz 0x40412b
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1e08f
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x4041aa
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x40416a
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x5829873f
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x4041dd
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x404177
and ecx, 7
or al, 0xeb
jae 0x4041e2
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x404217
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x404255
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x40420e
push rax
call 0xffffffff868d3efb
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x404218
std
cmp edi, esi
xchg eax, edi
jle 0x40426d
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c987f9
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x40426b
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x404259
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x404282
js 0x4042c2
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x404354
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad558f
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x404375
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x40437a
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc23e2c
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x404308
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
and eax, 0xe000001
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], al
or al, 0x20
nop
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rax], al
adc bh, bh
sub byte [rcx], dh
add byte [rax], al
movsxd rcx, dword [rsi]
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x40442e
je 0x404437
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x404400
mov dh, 0x7d
jbe 0x4043ff
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x404438
sahf
sahf
add al, 0
cwde
add eax, 0x1f90e000
and byte [rdi + 0x7300006], bl
add byte [rsi], bh
or ecx, eax
nop
invd
add byte [rax + 0xc700009], ah
in al, 0x13
enter 0xa07, 0
ror byte [rbx], 1
add byte [rax + 0x10], ah
or esp, esp
add ecx, dword [rax + rax]
or byte [rip - 0x3ed1000], 0
stc
add dword [rsi], ecx
add byte [rax], al
adc ecx, dword [rdi]
add ah, ah
jl 0x40447a
jle 0x4043be
adc byte [rax], al
add byte [rbp + 0x11], bh
add al, al
seto byte [rdi]
and byte [rdx], dl
add byte [rax], bl
test byte [rbx], dl
add byte [rax], al
enter -0x7484, 0x14
add al, bl
lea esp, [rax + 4]
add al, 0xf2
adc eax, 0x16e800
and bl, cl
add al, 0xf2
add al, bh
sbb byte [rdi + 0x1f900fc8], cl
sbb dword [rax], eax
add byte [rax - 0x6eb7ffe6], dl
adc ecx, eax
sbb eax, dword [rax]
sbb al, 0x13
mov cl, 0x23
jns 0x4044be
add dword [rdi], edx
add al, 0
int1
dec dword [rbx + rbx]
jbe 0x404464
jo 0x4044f8
mov edi, 0xc0029719
sbb byte [rax + 0x17], al
in al, 0x20
adc ebx, dword [rbx]
add byte [rcx], bl
sbb edx, dword [rdx + 0x5f444041]
sbb eax, dword [rax]
sub byte [rdx + 0x2760c884], dl
add dword [rdi], edx
push rbx
sbb qword [r10 + 0x477aaec1], r10
xchg byte [rbx - 0x28], al
xchg eax, ebp
adc byte [rdi + 0x7cb0d7a5], dl
leave
outsb dx, byte [rsi]
and edx, dword [rax]
jle 0x40450e
mov bh, 0x17
sal dword [rdx], cl
enter -0x7ce0, -0x80
and eax, 0xce41c9fc
jle 0x4044b6
sub eax, 0x1c9c012a
in al, 0xe4
xchg eax, edi
add dword [rax - 0x18f6bc88], r12d
push rbp
xor dh, bl
test esp, ebp
xchg dword [rax - 0x75], edi
movsxd rdx, dword [rdi]
and esi, dword [rsi - 0x80]
test dword [rdi + 0x6f], eax
push -0x4ee6a219
sub eax, dword [rdx + 0x61983f47]
and eax, 0x67142f8c
test eax, 0x195e4f17
mov cl, 0x29
mov esp, 0x9e7b747
movabs dword [0x122fc5208736401b], eax
psrlq mm3, qword [rsp + rdi + 0x11374ae1]
sbb dl, ch
and dl, byte [rbx + 0x67c85d83]
jmp 0xffffffffbba49555
mov dl, 0x73
mov al, 0x55
add al, byte [rax]
cmp al, 0x79
mov dh, 0xa1
and dword [rdi + 0x285f81a8], edx
add byte [rbp + 2], dh
leave
sahf
and byte [rbp + 0x2b], 6
add eax, dword [rcx + 0x70e4e41c]
push 0x42
add eax, dword ds:[rcx + 0x4e]
jbe 0x4045be
loopne 0x4045d8
mov ecx, dword [rsi + rsi*2]
popfq
test dword [rdi], edx
jl 0x40457a
xchg eax, ebp
jb 0x40450c
xchg eax, ebx
add dword [rax], 0x65
ja 0x40456d
or dword [rcx + 6], eax
cmp dword [rcx - 0x70], edi
sbb byte [rdx], ch
scasd eax, dword [rdi]
cmp al, 0x39
fmul st(1)
nop
push 0x3ead7cb
and byte [rdx - 0x7a1b0987], al
sbb al, 4
shr byte [rdx + 0x17], 0xbd
add esp, esp
leave
cmpsb byte [rsi], byte ptr [rdi]
cmp dword [rax - 0x18e5dfee], ecx
ret 0xb006
out 0xcf, al
and bh, dl
ficom word [rdi]
pop rsi
and byte [rdx + rsi*8], bl
add al, 7
add eax, 0x7205488f
mov al, 0x41
cmp byte [rdi], ch
xchg eax, ecx
add eax, 0xec0bd9ec
cmpsb byte [rsi], byte ptr [rdi]
movsd dword [rdi], dword ptr [rsi]
add eax, 0x4766b0bf
outsd dx, dword [rsi]
or byte [rcx], bl
in al, 0x30
enter 0x2fe3, -0x38
and byte [rdi], ah
movq qword [rbp - 0x7f], mm4
pop qword [rdi - 0x7ed450]
stc
adc r8d, dword [r14]
xor byte cs:[rsi + 0x60], bl
cmp byte [rsi], al
outsd dx, dword [rsi]
xchg byte [rax + rcx + 0x1b], ah
ret 0x992f
mov r8d, 0x1c9d8320
jo 0x40466b
cmp dl, byte [rdi]
int1
loope 0x4045f0
imul esi, dword [rbp + 0x4f], 0x9ee00724
sbb al, 0x8c
xchg eax, ebx
jle 0x404648
iretd
push rdi
adc byte [rax + 0x4e41c836], al
sbb byte [rax + 7], ch
insb byte [rdi], dx
and al, 0x83
or al, 0x72
mov rdi, qword [rax]
int1
or byte fs:[rbx], bh
sahf
cmpsd dword [rsi], dword ptr [rdi]
and byte [rsi + rbx*4 + 0x3c], ah
jrcxz 0x4045c1
mov bh, 0x2e
or byte [rdi], bh
adc byte [rcx], ch
sbb byte [rsi], cl
leave
leave
xchg eax, ebx
pop rdi
or al, bh
or byte [rax + r9 - 0x45], bpl
rcr byte [rdi + 0x5d], 0x17
xchg eax, edx
and byte [r11 + 0x7ff01c9d], r8b
adc byte [rdi], ch
movsd dword [rdi], dword ptr [rsi]
or esp, esp
test cl, dh
adc dword [rax - 0x61], eax
retf 0x3c08
loope 0x404672
ret 0x8e6
or dword [rdi], eax
pop rax
jg 0x404682
cmp eax, ebx
test dword [rdi + 0x17], edx
nop
xor dword [rax + 0x669a2c06], 0x37042711
or byte [rdi - 0x10f6131c], al
rol byte [rsi + 0xe40c709], 1
jbe 0x4046c7
mov gs, edi
or dword [rax], esp
mov ebx, 0x802877ae
pcmpgtb mm2, qword [rbx + 0x17c1ce0e]
pop rsp
ja 0x404650
or dword [rbx], 0xef09cbec
in eax, 0x57
adc byte [rbx + 0x72], al
ret 0xf201
or dword [rdi], esi
or byte [rsi], 0x27
sbb al, 0x92
mov bl, 0xa
mov edi, 0x1f0a2a68
enter 0x3921, 0x3b
and al, 0x39
or cl, byte [rdi + 0x7243ac58]
ret 0xa43
scasd eax, dword [rdi]
adc byte [rsi + 0xa], dh
and dh, byte [edx]
ftst
adc byte [rdi], ch
mov al, byte [rbx + 0x6fcbac1c]
pop rax
scasd eax, dword [rdi]
mov esp, 0xc9c8790a
xchg eax, ebx
ja 0x404696
add al, byte [rax]
or ebx, dword [rax + 0x360e4f27]
or byte [rdi - 0x7f9ff4fa], ah
sbb esp, esp
in al, 0x20
cmp byte [rbx], cl
sub byte [rax + 0xb0e4e41], dh
mov eax, 0x9c87170b
sbb eax, 0x7f205264
cmpsd dword [rsi], dword ptr [rdi]
xor al, 0xb
or eax, 0x902f49c9
mov esp, 0xba40025f
adc dh, byte [rdx + 0xb975867]
jnp 0x4047a5
or byte [rbx + 0xc4017ec], bh
out dx, eax
shr byte [rdi + rsi*2 + 0xb], 1
nop
or dl, byte [rdi]
or al, 0x27
in al, 0xd9
jp 0x404752
push rax
sub ebp, 0x4e41500c
cmp byte [rdx + rdi*8], ah
or al, 0x97
loopne 0x404790
jns 0x4047c9
nop
prefetchw byte [rip + 0x2f657c70]
pushfq
shl byte [rax], 7
sbb eax, 0x6f6f800d
and byte [rdi], ch
nop
adc dword [rax + 0x4e0de00d], 0xe
jb 0x404736
jge 0x40476e
or eax, 0x758178b0
adc cl, byte [rsi]
fild word [rbp + 0xe]
and byte [rax + 0x48], dh
lahf
shl byte [rsi + rcx - 0x31], 1
nop
mov bl, 0x83
pop rbp
jp 0x4047a9
adc byte [rdi - 0x59], dh
fadd dword [rip - 0x2bf1408e]
in al, 0x17
imul dword [rdi - 0x60]
sbb dword [rbx], eax
add byte [rdx - 0xa], bh
add bh, byte [rcx - 0xd]
comiss xmm6, xmmword [rax - 0x43839ae7]
adc bh, ch
adc ecx, dword [rdi]
sbb ecx, dword [rdi]
pushfq
int1
add bh, byte [rcx]
rdmsr
ud0
mov eax, 0x90e93921
cmova ecx, dword [eax - 0x4f78b637]
add dword [rdi - 0x61], 0xf
cmpsd dword [rsi], dword ptr [rdi]
jo 0x404812
and al, 0x83
or eax, 0xcda847bb
divps xmm4, xmmword [rax + 0x2f]
mov al, 0x3f
or byte [rax], dl
pop rdi
sbb al, 0x10
cmp dword [rbx + 0x4d], ebp
cmp byte [rdi], ch
or eax, 0x1d9ec22d
adc byte [rdi + 0x30], bl
sahf
movsb byte [rdi], byte ptr [rsi]
add dword [rdi], ebx
test al, 0x92
add dl, byte [rcx]
leave
xchg dh, bl
add eax, 0xb08f1716
jmp 0x404819
in al, 0x41
or byte [rdx], ah
adc dword [rdx + 0x11], ebx
xchg dword [rax + 0x61903921], esi
pop rdi
jge 0x404837
leave
ja 0x4047c6
and byte [r8 - 0x51f27c6d], r14b
loopne 0x40484f
and al, byte [rdi - 0x44]
adc byte [rax], bh
shl byte fs:[rdi + rdi - 0x1f], 0x11
pushfq
sahf
cwde
jg 0x404877
pause
js 0x40486e
mov edi, 0x7f121512
test byte [rbp + 0x20], bl
xor edx, dword [rdx]
test eax, 0x2caf162f
xor bh, byte [rbp + 0xf12dd00]
or al, 2
lea eax, [rip - 0x6d9b9048]
out 0x20, eax
iretd
add eax, 0xe01a1380
nop
popfq
pushfq
xchg dword [rbx], edx
movabs al, byte [0xb740bd9e4f13a8bf]
in al, dx
adc edi, dword [rdi + 0x2357780]
nop
adc al, 0x5e
adc al, 0x2f
leave
movsb byte [rdi], byte ptr [rsi]
cmp dword [rcx], eax
cmpsd dword [rsi], dword ptr [rdi]
nop
cmp dword [rbx], edi
test byte [rip + 0x14ae4796], cl
xlatb
mov al, 0x69
jb 0x40486d
and dword [rdx + 0x7b2f40df], esp
or byte [rdi], ah
xor eax, 0x17573715
out dx, al
xchg dword gs:[rdi + rdx - 0x3f631fee], ebx
retf
add al, 0x27
js 0x404850
mov ebp, 0x15a1c7b2
cmpsd dword [rsi], dword ptr [rdi]
mov ch, 0x15
fild dword [rdx - 0x32]
outsd dx, dword [rsi]
mov byte [rcx], cl
movsxd rsi, dword [rdx + 0x74]
jae 0x404957
jne 0x40494b
jle 0x40486a
bnd jmp qword [rbx]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
adc byte [rbp + 0x72], ah
imul esi, esi, 0x1ad6ffee
pop rdi
je 0x404973
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x40492f
outsd dx, dword fs:[rsi]
pop rdi
or ebp, ebp
mov bh, 0xff
mul byte [rdx + 0x61]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x40497f
jne 0x40499b
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x404994
sub dword gs:[rdi + 0x7f], ebp
cmp ebp, 0x35372e64
cmp byte [rip + 0x69665f24], dh
outsb dx, byte [rsi]
imul ecx, dword [rax], 0xdf617272
outsb dx, byte [rsi]
sub eax, 0x655f79fe
outsb dx, byte [rsi]
je 0x4049ba
jns 0x404933
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x404915
mov edx, 0xd327301
pop rdi
sub dword [rdx + rbp + 0x6f], esi
fild qword [rsi + 0x7f]
jae 0x4049d1
jne 0x4049d6
movsxd rsp, dword [rbp - 0x5f]
jo 0x4049d9
sub dword [rdx + 0x5a], ebx
jae 0x4049da
jae 0x40492c
jg 0x40496f
push 0x45
xor dword [rcx], edi
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
movabs rcx, 0x23323122dbad96d6
push rax
shl byte [rbx + 0x69], 0xb8
sub ch, bh
fild dword [rax + 0x34]
and esp, dword [rcx + 0x64]
push rdx
imul edx, dword [rbx + 0x30], 0x7645455f
jo 0x4049fd
mov edi, 0xfbac23fd
sub eax, 0x424f4c47
or qword [rbx + 0x75], r14
pop rdi
movabs r13, 0x5763385a066eedbb
imul esp, ecx, 0x53496a68
je 0x404a1d
cmp ch, bl
mov esi, 0x6c13ad7b
mov ebx, 0x415246ce
mov sil, 0x3c
fabs
cmp byte [rsi + 0xb], dl
push rbp
and byte [rdi - 5], dil
cmovs eax, dword fs:[rdx + rdx*2 + 0x57]
push rbx
jae 0x404a5b
push rsp
sub al, 0x6c
js 0x404a2e
add eax, 0xcbbb1064
pop rbp
sub edx, dword [rsi + 0x59446607]
jle 0x404a48
xor byte [rdx + 0x166b42ed], bh
and al, 0x87
push rsp
sbb dh, byte gs:[rsi + 0xf]
mov cl, 0x17
outsb dx, byte [rsi]
fist word [rax]
jne 0x404aa1
jo 0x404a31
imul r11d, dword [rcx + 0x13453144], 0x6e1435d6
movabs dword [0x50370a4991127636], eax
fld qword [rdx + 0x61]
sti
movsxd rdi, dword [rax + 0x78]
xor dword [rax], eax
xor ah, byte [rdi + 0x72526324]
js 0x404ac0
outsd dx, dword [rsi]
movsxd rbx, dword [r9d]
adc ah, byte [rbx + 0x68]
cmc
push rcx
jmp 0x404a42
mov dh, 0x6f
jae 0x404a78
push r11
add al, 0x45
push rbx
xor eax, 0xccdd95be
and al, 0x4d
xor dh, byte [rax]
cld
jb 0x404aeb
ja 0x404add
outsd dx, dword [rsi]
lodsd eax, dword [rsi]
mov ch, 0xd6
cmp dword [rcx], ecx
cmpsb byte [rsi], byte ptr [rdi]
wait
pop rbx
push rax
movsxd rdx, r14d
jbe 0x404a8d
fild dword [rax + 0x40]
ror byte [rcx + 0x42], cl
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2a
push rsp
push rsi
lea ebp, fs:[rax + 0x7f]
mov dh, 0x7d
jbe 0x404b12
mov esi, dword gs:[rdx]
xor ebx, dword [rdi + 0x53]
jo 0x404a33
sbb ebp, dword [rsi + 0x6eda58ed]
cmp dword [rdi + 0x70], ebx
outsb dx, byte [rsi]
loopne 0x404b02
fmul dword [rsi + rbp*8]
imul ebx, dword [rsi], -0x63
pop rax
cdq
outsd dx, dword [rsi]
rcr qword [r10 - 0x45], 1
jmp 0x404b27
xchg rax, r11
xor bl, byte [rdi + 0x42]
test eax, 0xffb6c197
push 0x49
push rax
jbe 0x404b56
xchg byte [rbp - 0x6a], al
outsb dx, byte [rsi]
out dx, eax
fimul word [rip + 0x756e67b4]
sub al, 0x4c
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x53]
outsd dx, dword [rsi]
insb byte [rdi], dx
push rcx
push 0x796ddedf
xor r12b, byte [r9 + rsi]
xor al, 0x5f
sbb rax, -0x1204452
mov cl, 0x60
test al, 0x72
push r10
push r11
cmp dword [rcx + rdi*2 + 0x70], esi
je 0x404b7f
outsd dx, dword [rsi]
cld
mov esi, 0x32906615
mov ch, byte [rcx + 0x71]
jne 0x404b8a
mov ecx, dword [rcx + 0x38]
lea ebp, [rbp + 0x43493c73]
xor al, 0x35
ret 0xcf30
ret 0x6cb0
cmp eax, 0x6d323006
out 0xd8, al
mov dl, 0x6d
add al, 0xef
pop rdi
xor ch, byte [rsi]
add dword [rip - 0x13f53d31], esi
movabs r15, 0xa86ed1a9175f304d
movsxd rdi, dword [rdx - 0x3abdd9a7]
outsb dx, byte [rsi]
xor eax, 0x39
outsb dx, byte [rsi]
mov ebp, 0x6c6c1239
or eax, 0xeca4206c
sub dword [rax + 0x1089abe8], ebp
mov dword [rdi - 0x277b2da7], eax
sbb byte [rsi + 0x31], al
jns 0x404b38
sub al, 0x86
mov edx, 0x46196976
cmp edx, esi
insb byte [rdi], dx
jmp 0x49a73c46
pop rax
jb 0x404bd0
insb byte [rdi], dx
mov r14b, 0xa9
xor eax, 0x38677336
pop rax
xor eax, 0x34280776
div dword [rbp + 0x19391aa4]
pop rdi
popfq
sbb al, 0x7e
fcom dword [rsi - 0x19]
jo 0x404bec
sbb byte [rbp + 0x62], al
xor al, 0x81
pop rbx
jrcxz 0x404b49
sub ecx, dword [rbx + 0x7731c213]
cmp dword [rip + 0x65190141], 0x77736ee1
movabs al, byte [0x674986d2a4d3a369]
insd dword [rdi], dx
outsb dx, byte [rsi]
push 0x4afac1db
jbe 0x404c45
push rdx
mov byte [rbx + 0x6c], 0x43
jae 0x404b7b
jno 0x404c35
ja 0x404bb9
mov edx, 0x6d1b7973
mov edx, 0xda111969
test byte [rax - 0x56cc9cd2], bh
xchg eax, ecx
hlt
outsb dx, byte [rsi]
adc dword [rdx + 0x64], esi
insb byte [rdi], dx
push rax
jbe 0x404c4d
test byte [rbx], ah
sbb al, 0xd2
push r11
add dh, byte [rcx]
xor ebp, dword [rbx]
mov eax, 0x54709ee7
outsd dx, dword [rsi]
cwde
push -8
hlt
mov al, 0x94
shr dword [rax], 1
std
or byte [rax - 0x64497bc3], dl
mov ah, 0xc1
jg 0x404c92
pop rdi
mov edx, 0xe5ab7806
pop rdx
xor byte [rdx + 0x78], ch
xor dword [rsi], ebp
xor esp, dword [rax + 0x28]
mov ah, 0xce
movsxd rdi, dword [rax]
retf 0x75b3
xchg eax, ebp
xor dl, bh
mov ch, 0xf4
jbe 0x404c93
xor dword [rdx - 0x7fbccdaf], edx
xor r8b, byte [rdx - 0x49bd6cf7]
outsb dx, byte [rsi]
mov ch, 0x13
leave
push rdx
ror al, cl
fisubr dword [rbp + 0x3b]
or dl, dl
or esp, dword [rip - 0x8f9ce63]
sahf
cmc
sub dword [rcx + rdi], edx
push rbx
xchg eax, ebp
xor dl, al
lodsd eax, dword [rsi]
pop r15
js 0x404c97
sub eax, 0x54348484
cdq
jo 0x404cad
sbb eax, 0xa0048092
stosq qword [rdi], rax
sbb eax, dword [rbp + rax*4 + 0x7561a4a8]
imul esp, dword [rbp + 0x61], 0x982b1911
cmp al, 0x90
mov word [rbp + 7], gs
xor al, 0x77
mov edi, 0x5a56ab6b
and eax, edx
shl byte [rsi + 0x5f], 0x73
or al, ah
outsb dx, byte [rsi]
fist dword [rcx + 0x72]
add eax, 0x65037764
mov al, 0x6e
movsxd rbx, dword [rax]
xchg eax, edx
mov edx, 0x6e08d0ad
pop rcx
jbe 0x404d3f
xchg rax, r9
movabs byte [0x6c5f5ee373256b40], al
retf
mov ch, 0xc
mov r11b, 0x54
movsd dword [rdi], dword ptr [rsi]
outsb dx, byte [rsi]
or byte [rbx], cl
xor ch, byte [rip + 0x20432093]
or al, 0x84
call qword ss:[esi + 0x17]
cmp bh, byte [rdx + 0x4f9b6265]
leave
pop rdi
jne 0x404c8a
xchg eax, ecx
jl 0x404d70
cmp esp, dword [rbp + rbx + 0x56]
mov al, 0x25
xor eax, 0x41300999
insb byte [rdi], dx
adc al, 0xad
test dword [rcx + 0x76], esp
push rbx
xchg eax, ecx
sub byte [rip + 0x686b6136], al
mov eax, 0x30fe0078
pop rax
insb byte [rdi], dx
mov ah, 0xd8
xor eax, 0x5cd65270
wait
mov eax, 0x165f2805
movabs dword [0x5f0f03b92230c05], eax
sub al, 0xd2
ja 0x404d87
push rax
sub ah, ah
jmp 0x2f896b5d
pop rsp
wait
loope 0x404cf1
ficom word [rcx]
insd dword [rdi], dx
xor al, 0x6a
mov bh, 0xe7
jnp 0x404dcd
xor dh, byte [rbp + 0x35507669]
cmp al, 0xf0
push rbx
mov ah, 0x5f
test al, 0x45
adc ah, byte [rbx]
movsb byte [rdi], byte ptr [rsi]
xchg eax, ebp
test al, 0x53
mov ecx, 0x39cc0548
fimul dword [rdi]
xchg eax, esp
cli
xor ah, ah
enter -0x7980, -0x16
test byte [rbp + 0x52], 0x84
not dword [rax]
jmp 0x404d87
imul edx, eax, 0xd8873257
sub al, 0x11
lock sbb byte [rax], dl
leave
xchg eax, edx
push rbx
xor dl, byte [rbx + 6]
ret
and ah, byte [rsi + rsi*4 + 0x9d1e5d6]
imul eax, dword [rsi + 0x58], 0x9b6a346a
mov al, 0x29
leave
xchg byte [rcx + 0x31], bl
and esi, dword [rcx]
pop r12
adc byte [rbp + 0x20], al
jae 0x404dde
je 0x404d72
movabs qword [0x362c2e78ff5f8a49], rax
js 0x404e1f
xor dh, byte [rdi]
imul esi, esp, 0x31
mov ch, byte [rsi + rbp*2 + 0x49]
rcl byte [r13 - 0x37], cl
sbb bl, byte [rsi + 0x5c64c248]
push 0x39
fisubr word [rbp + 0x72]
and ecx, ecx
ror dword [rsi - 0x52105096], 1
mov r9, rax
ret 0x4a07
add eax, 0xe35fb5a1
cmpsd dword [rsi], dword ptr [rdi]
mov dword [ebx + 0x4b], edx
push 0x24fe6c87
xchg eax, ecx
mov ah, ah
push rbx
call 0x32745151
jo 0x404e59
xchg eax, esp
push -0x7603601b
xor ebx, dword [rax]
scasd eax, dword [rdi]
pop rbx
movabs dword [0x1f6b694208d85b39], eax
clc
packuswb mm3, qword [rbx + 0x16]
movabs dword [0x40c146d0624b2090], eax
fild dword [rdi + 0x51]
jne 0x404e67
and ebp, dword fs:[rcx - 0x167c5822]
cmp dword [rdx], eax
and al, 0x9d
jbe 0x404e6d
xchg eax, ebx
shl byte [rsp + rbx*2 + 0x2a83e47b], 1
xor byte [rdx - 0x104a6f22], 0x76
mov dx, 0x2d8
wait
sbb al, 0x30
xor eax, 0x6c636c9f
sbb eax, dword [rsi]
int3
push rdx
mov word [rbp - 0x33], ss
xlatb
sub byte [rbx + 0x7f2c7362], 0x7e
movabs dword [0xa1024ca74a323590], eax
lodsb al, byte [rsi]
ret 0xaa17
pop rax
add eax, 0x49c852f7
imul esp, esp, -0x27
in al, 0x81
and dword [rcx - 0x6fcb4295], esp
push rbx
lodsb al, byte [rsi]
adc dl, byte [rdx - 0x7d]
lahf
sbb eax, 0x88e13b41
xor dword [rax + 0x63], ecx
pop rdx
xor ah, byte [rsi]
mov bl, 0x95
insd dword [rdi], dx
pushfq
lea eax, [r11]
or eax, dword [rsi + 0x4656df9d]
add ebp, dword [rip - 0x5e9219e9]
push rcx
mov fs, word [rdx]
add ecx, dword [rax + rsi]
sbb byte [rbx + 0x11738b2d], ah
jrcxz 0x404ecf
adc ebp, dword [0x78162e8c]
pop rax
enter 0x1b80, 0x31
outsd dx, dword [rsi]
movabs al, byte [0x207fd1b374520b9]
and dword [rbx + 0x151f0350], esp
cmp al, 0x95
mov edx, dword [rsp + rcx*2 + 0x16162f4a]
mov esp, cs
xchg eax, ebp
xchg eax, edi
fldenv [rbx + 0x65]
xor eax, 0x2518cc32
xor al, 0x2c
xchg byte [rbx + rdx*2 + 0x5b18025f], ah
mov cl, 0xf8
jns 0x404f0e
mov bl, 0x62
ret 0xbaca
outsb dx, byte [rsi]
mov ch, 0xb0
and dword [rbx - 0x4d], edi
pop rdx
and bl, al
cmpsd dword [rsi], dword ptr [rdi]
mov al, bpl
insd dword [rdi], dx
js 0x404ecb
or al, 0x33
xchg eax, esp
je 0x404f58
jge 0x404f62
ficom dword [rcx]
movabs byte [0xb380e6bfd6f7240], al
mov bh, 0x2c
and eax, 0x44b95ab4
sub dh, byte [rbx + 0x6f]
sub al, byte [rbp + 0x32]
push rbp
or ecx, dword [rax + 0x30]
jmp 0x404f93
test dword [rax], eax
add dword [rdx - 0x4d], eax
sbb eax, 0xc3b38cd2
clc
fld xword [rbp - 0x7b]
rol dword [rdx - 0x26], 0x5e
outsb dx, byte [rsi]
ja 0x404f3e
cmp rax, 0x360c0e14
fiadd dword [rbx - 0x3c11aaeb]
test dword [rdi + 0x2752224a], ebp
jne 0x404fe1
hlt
push r9
and dword [rcx], eax
xor byte [rdx - 0x1f], bh
cmp al, 0x89
sub eax, 0x42956136
xor eax, 0x90b4612f
adc dword [rdi - 0x79], esi
jns 0x404faa
or esi, dword [rdx]
or ah, bl
sbb ebp, dword [rbp - 0xa9fc792]
mul dword [rsi + 0x6c]
xor esi, dword [rdi + 0x68b0b6ea]
pop rbp
outsd dx, dword [rsi]
jae 0x404f2b
jae 0x405024
mov ebx, 0x623a6d8d
je 0x405027
push 0x6db96309
mov byte [rsi + 0x6e077072], al
outsd dx, dword [rsi]
jmp 0x405033
jbe 0x404f69
sub eax, 0x2e7c0dd8
jne 0x404ff9
push rsi
mov byte [rbp + 0x692d647a], dh
mov byte [rip - 0x64a6c717], cl
mov ecx, 0x796409b7
outsb dx, byte [rsi]
sbb r12d, r11d
test byte [rbp + 0x654476da], bh
or al, 0x5f
sbb edx, dword [rsi]
mov ebp, 0x28617f26
or dword [rax + 0x74], ebx
jo 0x404fd7
xor esi, esp
jb 0x405030
or ch, byte [rdi + rbp*2]
or dh, al
test byte [rax], 0x67
sbb byte [rip - 0x1c90db33], al
xchg eax, esi
jge 0x405013
cmp eax, 0xe668652e
push -0x5cf28d9c
test esi, edx
call 0x2ebbb37f
mov edi, 0x564b8b70
mov word [rbp + 0x43ea2eaf], ss
imul ebx, dword [rip - 0x5295f4ca], -0x5f
xor dword ss:[rbx + 0x3185bd], ebx
push 0x6b555e7b
push rax
xor esi, dword [rbp + 0xd528b04]
test al, 0xcc
xchg eax, esp
add byte [rdi + 1], dh
sub byte [r14 + 0x481f0750], r10b
xchg ah, ah
int3
sbb al, 1
sbb dword [rax + 0x54072366], edx
push rsp
and dword [rcx], ebx
xchg eax, edx
and byte [r9 + rax*2], al
sbb dword [rdx + 0x21747431], edx
outsd dx, dword [rsi]
xchg byte [rdx - 0x9bbdc], dl
ljmp [rdi - 0x7d]
or al, 0x32
enter -0x6768, 0x44
add eax, 0x20c90c01
or byte [rsi - 0x70], cl
wait
mov bl, 0x3f
loopne 0x405072
cdq
insb byte [rdi], dx
jb 0x40510c
push rax
add al, 0xfb
sbb byte [rax + 0x2c], dl
imul eax, dword [rsi], 0x79220356
ret 0xe79b
or eax, 0x92c51904
out dx, al
pop rsi
mov edi, 0x90d90fff
pushfq
mov ebp, 0x25cbf07
add edx, edx
or eax, 0xa0fe3f6b
ror byte [rdx + rsi*2], cl
out 7, al
call rax
add al, 0x14
retf
fiadd word [rax]
jp 0x4050ea
test byte [r8 + r14*8 + 0x3f075f66], r11b
cmp ebp, dword [rdi + rdi*8]
test byte [rdi], bh
xchg eax, edi
sbb al, 0x64
nop
rcl al, 1
nop
add ebx, dword [rcx]
leave
and byte [rax], cl
mov ss, word [rbx]
cmp ecx, esp
test al, 0xe7
lcall [rdx]
xchg byte [r8 + rbp - 0x77], bpl
and byte [rdi + rdx + 0x72], 0x90
xor byte [rax + 2], 0x10
int 0x28
xchg eax, esp
lcall [rip + 0x7c302d9]
setge ah
nop
mov dl, byte [rax + 0x7f13273f]
in al, 0xb0
add eax, 0x3f69e2f2
movabs dword [0x8ff074f84409b99], eax
leave
or dword [rcx + 0xecf21bf], ebp
test eax, 0xc03f7d77
add eax, 0x72432422
and byte [rcx + 0x2cdccf24], dh
mov bh, 7
jg 0x4051a4
add dword [rbx - 0x40a36f76], edx
pop rbp
and al, 0x4f
jo 0x405163
leave
jae 0x4050f5
mov dl, byte [rax + 0x7f07ef3f]
or al, 0x60
sub byte [rcx], bh
fisttp dword [rbx]
movabs eax, dword [0xe4a1ba072f66c608]
test byte [rdi + 0xf3fe710], bh
adc ah, bl
call 0x6509508f
xchg eax, ebx
or esi, ebx
xor rax, qword [rdx + rsi]
clc
xchg eax, edx
wait
or al, 0xf8
call 0x324ce1a5
jg 0x4051b2
cwde
and dh, byte [rbx - 0x4d]
mov dh, byte [rdi + 0xb147f07]
jnp 0x405186
add dword [rcx], eax
mov esp, esp
fldenv [rcx - 0x61]
nop
add qword [rsi + 2], rbp
adc dword [rdx + 0x2507270a], edx
fld qword [rip + 0x3f107f08]
or byte [rax], bh
outsd dx, dword [rsi]
mov dl, 0x82
mov edi, 0x9d907f91
mov esp, 0x115bfc8
xor byte [rdi], dl
ret 0xb0e0
xor al, 0xbf
sub dword [rbx + 0x7b111d98], esp
xlatb
movsxd rdx, dword [rcx - 0x40467ec4]
add dword [rbx + 0x3657acf2], edi
add byte [rax + 0x1218ff91], dl
add ecx, dword [rax + 0x73]
xor eax, 0x24587f09
test al, 0xa3
mov edx, 0x15
add byte [rax], al
add byte [rax + rax], ah
inc dword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x43f7fdea], ecx
adc eax, 0x8f776fc4
pop rax
jge 0x40525d
xor dword [rax], eax
add byte [rbx + 0xe], ah
add byte [rax], al
add dl, 0
add byte [rcx], cl
add byte [rdi - 0xc], bh
add byte [rax], al
add bh, bh
