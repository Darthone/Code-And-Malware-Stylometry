call 0x4044b8
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x4042d0
add ebx, ebx
je 0x404286
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4042be
cmp rbp, -4
ja 0x4042be
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4042a6
add ecx, 4
mov dl, byte [rax]
je 0x4042ce
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4042be
ret
cld
pop r11
cmp r8b, 2
je 0x4042e6
jmp 0x404363
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x4042f6
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x4042de
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x40430e
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x4042fb
sub eax, 3
jb 0x40432c
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x404363
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x404353
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x404351
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x404340
cmp rbp, -0xd00
adc ecx, eax
call 0x404292
jmp 0x4042e6
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x40443c
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x4043da
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x404426
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x4043f9
push 0x3a707474
jne 0x404452
js 0x404412
jae 0x40444c
outsb dx, byte cs:[rsi]
je 0x40440b
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x404479
jb 0x40446b
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x404496
jb 0x4044a9
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21a65b
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21a65b
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x404374
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x40449f
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x40444d
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add al, 0
jmp rbp
call 0x706f4547
jb 0x40455f
movsxd rbp, dword [rdi]
jae 0x404559
insb byte [rdi], dx
js 0x40455f
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x40453f
cmp rsi, rcx
jae 0x404547
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x404526
cmp al, 0x8f
ja 0x404526
cmp byte [rsi - 2], 0xf
je 0x40452c
sub al, 0xe8
jg 0x404529
push rdi
cmp al, 1
ja 0x404514
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x404517
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x404544
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x40459b
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c4a19
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x4045df
mov al, 0xa
jmp 0x4045df
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x4045bb
inc ebx
mov al, 0
jmp 0x4045e3
mov al, 2
jmp 0x4045e3
mov al, 3
jmp 0x4045e3
mov al, 0x3c
jmp 0x4045e3
push rcx
rcr ah, 1
fstp st(7)
jle 0x404624
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x404636
jg 0x404628
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296a9dab
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x404682
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb97ff
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x40468a
cmp esi, 0x21585055
jne 0x40468e
jge 0x404680
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x404683
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x404687
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x404733
pop rcx
or al, 0x3b
jb 0x404739
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x4046ab
jmp 0x4046ad
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x36645ee
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf56836
in eax, dx
jg 0x4046e5
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x40472b
mov bh, 0x2a
add edi, 0x10
jmp 0x404728
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x404765
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x4047a1
jne 0x4047b8
fstpnce st(6), st(0)
jle 0x404781
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x4047b7
jrcxz 0x4047eb
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1e74f
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x40486a
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x40482a
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58298dff
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x40489d
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x404837
and ecx, 7
or al, 0xeb
jae 0x4048a2
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x4048d7
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x404915
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x4048ce
push rax
call 0xffffffff868d45bb
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x4048d8
std
cmp edi, esi
xchg eax, edi
jle 0x40492d
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c98eb9
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x40492b
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x404919
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x404942
js 0x404982
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x404a14
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad5c4f
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x404a35
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x404a3a
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc244ec
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4049c8
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
or eax, 0xe00000b
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], dh
or byte [rax + 0x90], ah
add byte [rax], al
add byte [rax], al
add dil, dil
sbb byte [rdx], dh
add byte [rax], al
jge 0x404a7a
add byte [rax], al
add al, byte [rax]
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x404aee
je 0x404af7
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x404ac0
mov dh, 0x7d
jbe 0x404abf
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
fcom dword [rsi + 0x21e40]
push rsp
add dword [rdi + rbp - 0x38], esi
adc ecx, eax
adc eax, dword [rax + rax]
cwde
add eax, 0x3f2e000
in al, 0x13
add byte [rax + 7], ah
add dh, bh
or ebx, dword [rdi]
retf
add dword [rax], ecx
or al, 0x17
or dword [rax], eax
xor byte [rdi], ah
nop
seto byte [rip + 0xb90000a]
add byte [rbx], dl
enter -0x37f9, 0x50
adc dword [rax + rax], ecx
jo 0x404af8
or esp, esp
add esp, esp
add byte [rax], al
adc al, 0xe
add byte [rax], dl
add al, 0xf2
add edx, esi
verr word [rcx + rdx*4 - 0x6f3ffff0]
and bl, cl
adc dword [rdi - 0x66e7ffee], edx
enter 0x130f, 0
jl 0x404ab2
adc al, 0
fsubr dword [rbp - 0xdfb0da0]
add byte [rip + 0x16e800], dl
retf
add al, 0xf2
add al, 0x17
add al, bh
sbb byte [rdi + 0x201f900f], ch
sbb dword [rax], eax
add byte [rax - 0x37ecffe6], dh
enter -0x4ea8, 0x1b
add byte [rax + 0x3779231c], al
adc eax, dword gs:[rcx]
add al, 0
int1
call rbx
jo 0x404bb1
mov cl, 0xc
sbb edi, dword [rdi - 0x1bfd68e7]
and byte [rbx], dl
jbe 0x404b28
sbb dword [rax + 0x17], eax
sbb edx, dword [rax]
sbb bl, byte [rbx]
xchg eax, edx
push rax
pop rdi
enter 0x2760, 0x1f
sbb eax, dword [rax]
mov dl, 1
push rbx
xchg eax, edx
shr dword [rsi + 0x477a4f84], 0x70
fcom dword [rbp - 0x6879e6f0]
movsd dword [rdi], dword ptr [rsi]
xlatb
leave
outsb dx, byte [rsi]
and eax, dword [rbx - 0x50]
adc byte [rdi], al
xchg eax, ebx
mov dil, 0xc8
and byte [rbx - 0x7f2ce884], al
and eax, 0x320ece41
cld
and byte [rbx - 0x1be3b429], dl
in al, 0xc9
cmp dword [rcx], eax
add byte [rcx], bl
xchg eax, edi
push rbp
add dword [rbx + 9], eax
out 0x9c, eax
shl byte [rdi + 0x64], 0xde
test esp, ebp
js 0x404be2
xchg dword [rax - 0x60], edi
jb 0x404bcf
jbe 0x404b3a
test dword [rax], esi
jle 0x404c28
sbb dword [rcx - 0x6e18dcd5], esi
and eax, 0x2fa75d8c
adc al, 0x67
mov eax, 0x29b11917
retfq
mov r15b, 0x18
pop rsi
or r8b, byte [r15 - 0x361b2be0]
imul ebx, dword [rdi], 0xca593712
jbe 0x404c10
wait
out 0xe4, al
and al, al
jl 0x404bee
ror dword [rsi + 0xe], 0x20
jns 0x404c53
add r11b, cl
xchg dh, ch
retf 0x7100
and dword [rdi + 0x395f96a8], edx
jns 0x404c02
in al, 0x28
add byte [rdx + rax - 0x6fd485b0], al
xchg eax, ebx
adc eax, 0x3a7f4003
cmp eax, ebx
add eax, 0x61034d72
mov al, 0x7e
xchg eax, ebx
cmp ecx, dword [rbx - 0x5ffc6b29]
xchg eax, ecx
pushfq
sbb al, 0x64
mov al, 2
movsb byte [rdi], byte ptr [rsi]
sar byte [rcx + 0x77], 1
in al, 0x64
nop
adc dword [rbx + 0xa], 0x19
sub ah, byte [rax + 0x27]
sbb dword [rsi - 0x283482a0], edi
xchg eax, ebx
in al, 0xf9
add esp, dword [rax]
xchg eax, edi
sub eax, dword [rbx + rbx*4]
out 0xe4, al
fld dword [rax + 0x1bd177f]
xchg eax, edi
adc dh, byte [rax]
sbb eax, eax
xchg eax, ebx
out 0xe, eax
fisub word [rax]
xlatb
xor dword [rax + 8], 0x117ed1b
add eax, 0x3906c107
jnp 0x404cab
add eax, 0x2f38488f
pop rsi
xchg dword [rax + 0x1707b5a0], edx
mov ah, 5
nop
mov bl, 0xc1
mov edi, 0xd730477b
pushfq
cmp al, 0xbc
and edx, esi
jg 0x404d18
sub dword [rdi - 0x617cddfc], 0x380608ff
test byte [rbp + 0x60], bl
and r10b, byte [r15]
or byte fs:[rbx + 0x47956fc0], bh
test al, 0x85
jl 0x404c57
and edi, eax
push rdi
jnp 0x404ccc
xor al, byte [rsi + 0x303f6289]
jne 0x404d3a
mul ah
and byte [rdi + 0x33], cl
loopne 0x404c63
nop
mov bl, 0x83
or al, 0x66
adc byte [rbp - 0x637ce7b9], dl
sbb eax, 0x81407764
ret 0xc90e
and byte [rax], bh
lodsd eax, dword [rsi]
cmpsd dword [rsi], dword ptr [rdi]
jp 0x404d50
cmp al, 0x19
js 0x404cac
cmp eax, 0x93d27908
cmpsd dword [rsi], dword ptr [rdi]
sub dl, cl
and dword [rdi + 0x46], ebx
or byte [rdi], dl
fsub dword [rcx]
cmp eax, edi
pop rcx
or byte [rdi - 0x4e], bl
test byte ss:[rcx], cl
vmaxss xmm1, xmm0, xmm1
ror dword [rsi + 0xe], -0x10
xchg eax, esp
adc byte [rdi], ch
or eax, 0x84e40b09
int1
adc al, byte [rax - 0x49]
xor cl, byte [rcx]
cmp al, 0xe1
add eax, 0x7f094ec2
xchg dword [rcx], ecx
pop rax
xchg eax, esp
or edi, dword [rcx]
fadd dword [rbp - 0x696fe841]
xor byte [rip + 0x11ce9a2c], al
and al, 0x27
fisttp qword [rcx]
shr dh, 1
ja 0x404d16
ror dword [rsi + 0xe], 0x30
jl 0x404ce2
out dx, eax
add cl, byte [rdx]
sbb esp, esp
test byte [rdi], dl
or ch, byte [rdi + 0x4d170f28]
cmp ch, byte [rax + 6]
sub dword [rcx], edx
jl 0x404d70
mov al, 0x93
ja 0x404da2
or ch, bh
outsd dx, dword [rsi]
leave
or dword [rdi], eax
nop
adc byte [rdx + 0xa], bl
xor byte [rax + 0x48], 0xce
jbe 0x404d8c
mov edi, 0x320a9268
fcom dword [rax - 0x5e37e064]
js 0x404d17
in al, 0x84
stosd dword [rdi], eax
or ch, byte [rdi + 0x640ade10]
mov dl, 0xc9
pop rcx
jg 0x404dbf
cmp dword [rax - 0x69], ebx
xchg dword [r8 + 7], r11d
and al, 0xb
xchg eax, ebx
iretd
ja 0x404d54
add ch, byte [rax + 0xb]
sahf
sbb al, 0x6c
nop
mov eax, 0xb6ea708
xchg eax, ebp
enter 0x41c9, 0x4e
movabs al, byte cs:[0xb28321c9c83800b]
mov eax, 0xc9b64e0b
mov edx, 0x873494a7
in al, 0xa4
or eax, dword [r15 - 0x70]
and al, 0xc
loope 0x404d73
sub al, 0x74
pop rdi
add ah, byte [rdi + 0x68]
xor byte [rdi + rbx*8], cl
fldenv [rcx]
in al, dx
add dl, byte [rdi + rdx - 0x58]
or al, 0xef
or byte [rcx], bh
sbb ebp, esp
nop
xor dword [rdi + 0xa], 0xbc9c52f
jns 0x404e79
loop 0x404e11
push rax
xchg eax, esi
push rbp
or eax, 0xc90e33c8
or eax, 0x3b94e057
sbb dword [rsi + rbx*2], ecx
jne 0x404e27
xchg eax, ecx
cmp dword [rcx - 0x6a7af9bd], eax
xchg dword [rdi + 0x41], ebp
pop rsi
and byte [rdi], al
clc
or eax, 0x1c9c0e48
in al, 0x84
jnp 0x404e6b
jge 0x404e94
mov al, 0xf1
add ch, bl
nop
jp 0x404e4c
imul dword [rbp - 0x6f1fbff2]
pushfq
lahf
ror ah, 1
out 0x20, eax
mov ebx, 0x8bd017e2
cmpsd dword [rsi], dword ptr [rdi]
xchg dword [rax + 0xf27e40b], esi
cmp al, 0x17
setle byte [r9 + r15*2]
xchg dword [rax + 0x5b00031a], esi
cmovbe eax, dword [rdi]
mov ebx, 0xc02f6f40
sbb al, byte [rdi]
cmpsb byte [rsi], byte ptr [rdi]
mov word [rdi - 0xcf084e9], cs
sbb ecx, dword [rdi]
xchg dword [rdi], esp
sbb al, 0xc2
ja 0x404e1c
ud0
fsubr dword [rax + rcx*2 + 0x4e]
cmp cl, bh
cmova ecx, dword [rax + 0x724347eb]
shl byte [rcx], cl
adc byte [rdi + 0x1c582370], ah
xchg eax, edx
mov bl, 0x10
test al, 0x35
adc byte [rdi + 0x4c], dl
mov al, 0x17
jo 0x404eb8
pop rdi
test byte [rax - 0x7e331bf], dl
or eax, 0xcdb21795
xchg dl, ch
pop rdi
jns 0x404e6e
nop
test byte [rcx], al
enter 0x6ab2, 0x11
sahf
sal bh, 1
jle 0x404ee2
cmpsq qword [rsi], qword ptr [rdi]
or eax, 0x4f205eb3
mov dl, byte [rcx]
ret 0x1f11
je 0x404ee3
sbb edx, dword [rdx - 0x1aa03650]
adc dword [rcx], esp
cmp dword [rbx - 0x7f], edi
ja 0x404eea
adc al, byte [rdi + 0x40]
or dword [rip + 0x1216c272], 0xfffffff7
and al, byte [rdi + 0x28]
in al, 0x85
rcl byte [rbx + 0x3f79a012], 0x49
adc ah, al
or al, 0x72
neg byte [rax + 0x5b0e2f94]
add esp, 0x13bff90b
jge 0x404f23
xchg eax, edi
add eax, 0x9b7902f6
adc dl, byte [rcx]
adc ebp, dword [rdi]
adc byte [rsi + 0x65], dh
out 0x25, eax
adc eax, dword [rax]
mov ebx, 0x139ce2c0
mov edi, 0xe4799017
cmp eax, ecx
sbb edi, esp
add eax, 0x381a143f
cmpsd dword [rsi], dword ptr [rdi]
adc al, 0xb0
xlatb
adc al, 0xc9
shr dword [rsi], 0x10
iretd
stosd dword [rdi], eax
mov esp, fs
add eax, 0x235ecf2
cmpsd dword [rsi], dword ptr [rdi]
or dl, byte [rip - 0x16c6eae3]
test esp, esi
adc byte [rcx - 0x59], bh
add qword [rdi - 0x4f789860], rdi
and dword [rbp + 0x47], edx
insd dword [rdi], dx
adc eax, 0x4e4d80d7
cmp byte [rbx], ah
adc eax, 0xb2bc60f7
fsub dword [rdi + rax*2]
hlt
je 0x404f96
push rdx
cmp dword [rdx - 0x49], 0x5b
adc ah, bh
add al, 0x5e
xchg eax, edi
add al, 0x3f
jg 0x404f9b
in al, dx
xchg eax, ebp
add eax, 0xa71660f7
fist word [rsi]
jb 0x404f61
je 0x404fb3
xchg dword [rax + 0x74726309], ebp
jae 0x404fa0
xchg eax, edi
push qword [rbp + rsi*2 + 0x66]
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
add byte [rbp + 0x72], ah
imul ebx, dword gs:[edx], 0x5bffbbdb
pop rdi
je 0x405036
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x404ff2
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx - 0x49]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x405042
jne 0x40505e
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x405057
sub dword gs:[rsi + rbp - 0x41], esp
std
add eax, 0x383537f6
xor eax, 0x69665f24
outsb dx, byte [rsi]
imul ecx, dword [rax], 0x79617272
pop rdi
jge 0x404fc0
xor eax, 0x746e65fa
jb 0x405085
or dword [rdx], 0x7520656d
insd dword [rdi], dx
insd dword [rdi], dx
jns 0x40501f
jmp 0x40501e
int3
xor cl, byte [rip + 0x2a74295f]
mov edi, 0x73fdbb7d
outsd dx, dword [rsi]
jne 0x405099
movsxd rsp, dword [rbp - 0x5f]
jo 0x40509c
sub dword [rdx + 0x5a], ebx
jae 0x40509d
jae 0x40509b
push -0x19
jmp rbp
xor dword [r9], r15d
push rax
push rdx
push r12
push rsp
pop rcx
pop rdi
push rbp
push r12
movabs rcx, 0x2332316eb65b5922
push rax
shl byte [rbx + 0x69], 0xb8
sub byte [rax + 0x34036ffd], dl
and esp, dword [rcx + 0x64]
push rdx
imul edx, dword [rbx + 0x30], 0x847f025f
adc eax, 0x764545fe
jo 0x4050c5
or bh, byte [rdi + rax*2]
mov r15b, 0xdd
in eax, dx
mov bh, 0x4c
or dword [rbx + 0x75], esi
pop rdi
pop rdx
cmp byte [rdx + 0x57], dh
imul esi, eax, 0xaf776a68
mov ch, 0x77
pop rax
push rbx
je 0x4050e5
cmp byte [rbx], dl
jnp 0x405067
fld qword [rsi + 0x52]
cmp edi, dword [rbx + rbx*8 + 0x4e49454d]
cmp byte [rbp + 0xb], r12b
lahf
in al, dx
rcl dword [rsi + 0x48204855], 0x44
push rdx
push rdi
push rbx
or r15b, r13b
outsd dx, dword [rsi]
jae 0x405123
push rsp
sub byte [r12], r10b
mov ecx, 0x1085856b
movsd dword [rdi], dword ptr [rsi]
pop cx
pop rbp
push 0x4349776d
jle 0x405110
xor byte [rsi], dl
and al, 0x96
push rsp
ret 0x5bed
mov bh, 0x1a
jbe 0x4050fb
adc byte [rdi + 0x75], r9b
je 0x405162
add al, byte [rsi + 0x69]
test al, 0x86
ret 0xf62d
xor dword [rbp + 0x13], r8d
movabs dword [0xbadf6c28a0217636], eax
or sil, byte [r15]
push rax
movsxd rdi, dword [rax + 0x78]
xor dword [rax], eax
xor dh, byte [rsi + 0x5baded6f]
xor esp, dword [rbx + 0x52]
jb 0x40517b
movsxd rbx, dword [r9d]
adc ah, byte [rbx + 0x68]
fstp st(3)
sbb al, 4
push rcx
outsd dx, dword [rsi]
jae 0x40513c
push r11
add al, 0x45
mov dl, 0x9b
sbb dword [rsi + 6], edi
push rbx
xor eax, 0x32f04d24
xor byte [rbp - 0x348252a], dh
jb 0x4051b3
ja 0x4051a5
cmp dword [rcx], ecx
cmpsb byte [rsi], byte ptr [rdi]
out dx, al
jg 0x405148
lodsd eax, dword [rsi]
wait
pop rbx
push rax
movsxd rax, dword [r8 + 0x40]
ror byte [rcx + 0x42], cl
pop r8
pop rax
pop rdi
xor ebp, dword [rsi]
xor al, 0x2a
iretd
mov dh, 0xcf
ficom dword [rsi + rdx*2 + 0x64]
lea eax, [rbp + 0x76]
push 0x65
mov esi, dword [rdx]
xor ebp, ebp
pop rax
push -0x7c8f8bf5
jmp 0x709f99ea
out dx, al
imul ebx, dword [rbx], -0x52
outsb dx, byte [rsi]
loopne 0x4051d8
popfq
pop rax
mov ebx, 0xa80cd8eb
outsd dx, dword [rsi]
imul rcx, qword [r9 - 0x6d], 0x1e425f32
mov dh, 0xff
rcr dword [rdx + 0x26], 1
test eax, 0x50464979
jbe 0x405219
xchg byte [rbp - 0x22], al
or eax, 0x3796c197
mov spl, 0x67
outsb dx, byte [rsi]
jne 0x405186
fstp st(6), st(0)
outsb dx, byte [rsi]
out dx, eax
sub al, 0x4c
outsd dx, dword [rsi]
movsxd rbp, dword [rbx + 0x53]
outsd dx, dword [rsi]
insb byte [rdi], dx
insd dword [rdi], dx
jns 0x405206
xor ah, byte [rcx + rsi]
xor al, 0x5f
mov cl, 0x51
push 0x656fae1d
mov bh, 0x72
push r10
adc rax, 0x53dfbb66
cmp dword [rcx + rdi*2 + 0x70], esi
je 0x405246
outsd dx, dword [rsi]
nop
xor dh, byte [rbx + 0x3c]
cld
mov esi, 0x7571698a
mov ecx, dword gs:[rcx + 0x38]
je 0x40520a
ret 0x8db0
lodsd eax, dword [rsi]
xor al, 0x35
shr word [rbp + rdi + 6], 1
out 0xd8, al
xor bh, cl
xor byte [rdx], dh
shr dword [rbp + 4], -0x11
or ch, ah
insd dword [rdi], dx
maxps xmm6, xmmword [rdx]
add dword cs:[rip + 0x6ed1bf4b], esi
iretd
ret 0x304d
pop rdi
test al, 0x62
movsxd rdi, dword [rdx - 0x56e80f7d]
pop rcx
xor eax, 0x6e493942
mov ebp, 0xc5eca439
outsb dx, byte [rsi]
adc ch, byte [rsp + rbp*2 + 0xd]
sub dword [rax + 0x206c890e], ebp
call 0x1918d9e8
mov dword [rax], edx
pop rcx
xor dword [rcx - 0x46], r15d
jbe 0x405218
test byte [rdi + 0x4619693b], dh
cmp dword [rcx - 0xde87910], esi
insb byte [rdi], dx
pop r8
jb 0x405292
jmp 0x738dcd9a
cmp bh, dh
mov ch, 0xb6
test eax, 0x76354658
movsb byte [rdi], byte ptr [rsi]
sbb bh, byte [rcx]
sbb eax, ebx
push rsi
sub byte [rdi + rbx*2], dh
popfq
out 0x70, eax
xor ebx, dword [rax]
xchg dword [rbx], ebp
sbb al, 0x7e
xor al, 0x81
mov edx, dword [rbx]
ret 0xe165
pop rbx
jrcxz 0x4052bf
ja 0x405211
cmp eax, 0x77736e41
movabs al, byte [0x6749a3190186d269]
insd dword [rdi], dx
inc ecx
cli
shl dword [rdi + rbx + 0x5f764a6e], cl
push rdx
ja 0x405275
push 0x436c43db
jae 0x405242
mov edx, 0xda1b7973
test byte [rcx + 0x46], dh
insd dword [rdi], dx
mov edx, 0x632eb869
outsb dx, byte [rsi]
adc dword [rcx], ebx
adc dword [rbx], esi
test eax, 0x91d21c72
hlt
insb byte [rdi], dx
push rax
jbe 0x405314
push r11
sahf
jo 0x40525c
and eax, dword [rdx]
xor dword [rbx], esi
sub edx, dword [rdi + rbp*2 - 0x68]
push -0x2f
sub byte [rax - 0xb220719], bh
std
or byte [rbx - 0x6f6b4f4c], bl
cmp eax, 0x5ae57fc1
test byte [rsi + 0x6ba5f61], dh
xor byte [rdx - 0x4c], ch
js 0x4052ac
js 0x4052d8
xor dword [rsi], ebp
xor esp, dword [rbx + 0x38]
retf -0x4a29
sub byte [rbx + 0x7649f475], dh
xor dword [r11 - 0x80], eax
xchg eax, ebp
xor dl, byte [rdx - 0x49bdcdb2]
push rcx
xor al, byte [rdx - 0x374a91f9]
fimul dword [rcx]
xchg eax, ebx
adc ecx, ecx
insd dword [rdi], dx
cmp ebx, dword [rsi]
and eax, 0x8d2529d
xor dword [rsi], eax
sub dword [rdx + rdx*8], edx
or esi, edi
sahf
cmp edx, eax
lodsd eax, dword [rsi]
cmc
push rbx
mov dword [rbx + 0x5f], 0x84157865
xor al, 0x95
xor byte [rcx - 0x3b], cl
push rsp
cdq
sbb eax, 0x2f842d92
add byte [rsp + rax*4], 0x85
jo 0x405378
movabs al, byte [0x611bab2b19a4a849]
jne 0x4053cc
cwde
insd dword [rdi], dx
adc dword [rsp + rsi], edi
ja 0x40532c
imul edx, dword [rip - 0x54736e3a], 0x56
pop rdx
pop rcx
cwde
xor byte [rsi + 0x521745b4], ah
sub eax, 0x846d3c0a
xor dl, byte [rip + 0x662c0d02]
mov eax, 0xd86c6373
jbe 0x405339
retf
push rdi
ja 0x40539c
or dword gs:[rsi + 0x63], ebp
and dword [rcx + 0x8385adb], ebp
outsb dx, byte [rsi]
mov dl, 0x76
int3
lodsb al, byte fs:[rsi]
in al, 0x83
mov byte [rcx - 0x16], cl
test al, 0xb5
push rsi
jb 0x4053f8
int3
movabs dword [0x1b430c1d4b6d0f5e], eax
push rsp
outsb dx, byte [rsi]
or byte [rbx], cl
xor al, byte [rsi + 0x604320ec]
or al, 0x84
rcr byte ss:[rax + 0x56], 0x5d
sbb bh, byte [rdx + 0x4f9b6265]
movsxd rsp, dword [rdi + rbx*2 + 0x75]
sub al, 0x46
mov cl, 0x3b
jbe 0x405438
or dword [rsp + rdx*8 - 0x6ccfd9a0], edx
insb byte [rdi], dx
insd dword [rdi], dx
mov ch, 0x16
xchg eax, edx
test edi, ecx
push rbx
xchg eax, ecx
sub byte [rsi], dl
fadd dword [rbp + rbp*4 + 0x78b868]
inc dl
mov cl, 0xd1
fcomp dword [rcx + 0x488f708e]
pop rcx
jae 0x405477
mov eax, 0xd85f2805
ret
adc byte [rax], dh
jl 0x405409
xchg eax, esp
ret
nop
mov cl, 0xd2
ja 0x405461
adc dword [rdi - 0x57], eax
nop
cmpsd dword [rsi], dword ptr [rdi]
ja 0x40546e
or dword [rdi], ebp
or al, 0x6c
xchg dh, bl
adc dword [rbp + 0x20], ebp
lea ebp, [rax - 0x49]
out 0x66, eax
jnp 0x4054a7
xor dh, byte [rbp + 0x30507669]
pop rcx
jl 0x40542e
movsd dword [rdi], dword ptr [rsi]
or eax, 0xc645015f
or byte [rcx + 0x25], ch
add dword [rbx + rsi*4 - 0x326e8c6f], ebp
cmp dword [rbp + 0x6d], esp
xchg eax, esp
and byte [rcx - 0xc], 0xe4
enter 0x52ee, 0x4f
and r12b, byte [rax + rcx - 0x2f96ff11]
push rdi
mov esp, dword [rip + 0x3759b10f]
lock sbb byte [rbx + 0x58], dl
and dword [rdx + 0xf53328f], edx
mov word [rsi + rax*4], cs
in eax, 0xb1
xchg eax, edx
movabs dword [0xc059df6a346ad213], eax
push rbx
xor dword [rbx], esp
xor dword [rax + 0x4d], esp
cdq
sahf
mov ch, 0x10
and byte [r11 - 0x5d], r14b
insb byte [rdi], dx
call 0x5fcaf704
inc dword [rbp + 0x78]
movsxd rsi, eax
pop rsp
pop rax
push rbx
xor dh, byte [rdi]
jrcxz 0x405516
test byte [rip + 0x496eea57], al
sub rdx, qword [r13 - 0x37]
pop rsp
movabs dword [0x8e6dde39c3913c35], eax
push 0x48
sahf
pop rax
cwde
nop
mov ah, 0x49
mov ch, 0xad
movabs qword [0xa1056468e35fb207], rax
cmpsd dword [rsi], dword ptr [rdi]
movabs rsi, 0x407453a2c5e04b53
add ah, byte [rbx + 0x5284349e]
xchg byte [rsi], ch
mov esp, dword [rcx + 0x70]
movabs al, byte [0x5b55ac594af19f3e]
xchg eax, esp
xchg eax, esi
cmp byte [rbx + 0x6bb439a3], al
or cl, byte [rcx + 0xff8208d]
jns 0x405512
mov ah, 0x65
xor dword [rdx + 0x6d1a92db], esp
adc al, 0x47
push rcx
jne 0x40554b
cmpsd dword [rsi], dword ptr [rdi]
rcr cl, cl
sub ecx, 0x76
imul eax, ecx, 0x20
mov dword [rbx - 0x65c94dd6], eax
xchg eax, esp
jbe 0x4054f1
add eax, dword [rsi - 0x2a]
sbb esp, dword [rsi - 0x46]
fcomp dword [rbp - 0x6c9fb5a7]
lahf
insb byte [rdi], dx
movsxd rbp, dword [rsp + rcx*4 + 0x70]
jne 0x405503
cmp byte [rbp + 0x467362cd], 0xe6
pop rdx
adc ebp, dword [rdi + rdi*2]
jle 0x405597
push rbp
js 0x405564
mov dl, 0xa7
movsd dword [rdi], dword ptr [rsi]
or bl, byte [rcx + 0x20]
xchg eax, esp
stosb byte [rdi], al
pop rax
mov ah, 0xe0
pop rsi
imul esp, esp, -0x27
imul edx, dword [rsi], 0x6a
nop
cmp al, 0x30
xor al, 0x90
push rbx
sbb al, 0x91
push rbp
clc
jbe 0x4055a3
mov dh, 0x32
push 0x5a634827
insd dword [rdi], dx
pushfq
movabs byte [0x1517389d8671a8e5], al
sbb dword [rax + 0x186537c0], edx
insd dword [rdi], dx
mov dword [rdx], esi
xor byte [rbx + 0x29421173], cl
xor al, 0xc3
jrcxz 0x4055a6
pushfq
js 0x40554b
je 0x4055ad
sub edx, eax
jb 0x4055dd
outsd dx, dword [rsi]
sbb ebx, dword [rcx]
test dword [rdx], eax
int 0xfd
add ebx, dword [rdi]
adc eax, 0x81264a4
cmp al, 0x4a
scasb al, byte [rdi]
pop rsp
out dx, al
xchg eax, edi
stosd dword [rdi], eax
xchg eax, ecx
mov cl, 0x10
int3
jno 0x4055fe
and al, 0x1d
sub esp, dword [rip - 0x74fda0ad]
movsd dword [rdi], dword ptr [rsi]
add bh, al
jns 0x4055e1
push rsi
fdiv dword [rbx - 0x4a91b59e]
wait
sub dl, byte [rdx]
mov al, 0x7b
fsubr dword [rsi + rcx]
or ebx, ecx
cmpsd dword [rsi], dword ptr [rdi]
insd dword [rdi], dx
js 0x40561d
xor dl, byte [rsi + 0x52]
stosb byte [rdi], al
scasd eax, dword [rdi]
sub al, byte [rbp - 0x9af8caf]
jmp 0xffffffffca59dc55
and al, 0x31
xor dl, ch
or eax, 0x546fdc65
int1
mov esi, edx
jo 0x40567d
sub al, 0x25
adc dword [rsi], 0x7372b568
outsd dx, dword [rsi]
sub bl, byte [rdi + rbx*4 - 0x7d37f3d0]
test byte [rdx + 0x49], al
and eax, eax
adc byte [rax - 0x16ca789d], 0x6c
ret
xor r13b, byte [r13 + 0x61]
mov al, 0x10
jbe 0x40569a
outsb dx, byte [rsi]
ja 0x4055c2
movabs byte [0x158331364307850f], al
push rbp
sti
jno 0x40562d
imul ecx, dword [rdx + 0x22], 0x52
jne 0x4056c0
add al, 0x28
movabs dword [0x36e21f088c84d130], eax
xor eax, 0x844ce2f
movabs dword [0x339058cb04d08785], eax
sbb eax, dword [rbp - 0x5a368a93]
insb byte [rdi], dx
mov ch, byte [rax + 0x5d]
sbb ebp, dword [rdi]
add byte [rdi + 0x5973676f], dh
jae 0x405703
insd dword [rdi], dx
cmp ah, byte [rdx + 0x11]
ret
jbe 0x405699
je 0x405706
push 0x72c74509
jb 0x40570d
outsb dx, byte [rsi]
outsd dx, dword [rsi]
sub eax, 0xecddd6f5
or eax, 0x75622e7c
and dword [rbp + rbp + 0x69], 0x6b10ad6f
fisttp word [rip + 0x640938e9]
jns 0x40572b
mov ch, 0xb3
jae 0x405711
sbb dword [r14 + 0x44], r14d
movabs r8, 0x61d61b5f0cbc7b09
call 0x28bb5b03
or dword [rax + 0x74], ebx
jb 0x4056a9
loopne 0x405693
xchg dword [edx], ecx
sub al, 0x6f
or byte [rax], bl
add eax, 0x14ed8c7a
jge 0x40570f
outsd dx, dword [rsi]
jrcxz 0x40571c
push 0xcfb2dd1
movsd dword [rdi], dword ptr [rsi]
push 0x5d0d7264
movsxd rax, dword [rax]
or r13d, dword [r13 + 0x70bf2e7b]
loop 0x405771
xchg eax, esi
add al, 0x7a
or eax, dword [r10 - 0x75]
adc eax, 0xa1046a38
xor dword ss:[rcx + 0xdecd98], edi
push -0x19f3a185
stosb byte [rdi], al
xchg eax, ebp
test al, 4
push rdx
jmp 0x405728
test al, 0xe
and dl, byte [rbp + 0x67]
add esi, esp
adc al, 0x4b
fisttp word [rdi]
xor esp, dword [rbx + rax*2]
jb 0x405757
add dword [rbx], esp
and byte [rbx + 0x5407480c], al
push rsp
leave
nop
or al, 0xc9
and byte [rcx + rsi], al
leave
and byte [rbx + 0x2474740c], al
in al, 0x90
idiv dil
ljmp [rdi - 0x68]
adc byte [rax - 0x35], 0xdc
outsd dx, dword [rsi]
or dword [rax], ecx
or ecx, eax
or byte [rdi + 0x1c83208b], ah
loopne 0x405751
xor bl, cl
in al, 0xec
add byte [rbx + rdi*8], 6
sbb byte [rbx + 0x560cd258], ah
add edx, edi
test byte [rdi], dh
popfq
add al, 0x33
mov ah, byte [rip - 0x40a123]
push qword [rdx + 0x77b3921]
mov edi, 0xa4070260
fstp dword [rbx]
imul ebp, dword [rbx], 0x3f
fiadd word [rdi]
call rax
add al, 0x62
fstp dword [rbx]
jp 0x4057c9
mov r14b, 0xc0
fisub word [rdi + rcx*2 + 0x32ff7f07]
enter 0x4760, -0x7c
nop
in al, 0x92
or dword [rax + rdx*4], 0xffffffc0
add ebx, dword [rcx]
xor eax, 0x8e018419
adc eax, dword [rsi]
and eax, 0xa719bc27
lcall [rdx]
xor cl, al
nop
or eax, 0x70703f89
xchg ah, ch
nop
add dl, byte [rax]
xchg eax, esp
jno 0x405835
enter -0x10c1, 0x14
enter 0x6c8e, -0x7f
setge byte [rdi]
and bh, cl
fsub qword [rax + rdx + 7]
jg 0x405794
jge 0x405848
pop rbx
movabs dword [0x9ff073f19b99c94], eax
xor bl, al
nop
xor al, 0xa9
mov edi, 0x5dc03fc0
and byte [rip - 0x4e7027f5], ch
in al, dx
popfq
mov byte [rcx + 0x7f074f3f], dl
or cl, cl
push rsp
add dword [rdi - 0x54c8fb0e], edi
mov bh, 7
stosd dword [rdi], eax
or cl, bl
leave
fist word [rdi]
leave
xor esi, dword [rdi]
jg 0x405896
add bl, bl
xor byte [r14], r12b
jrcxz 0x4058b5
and eax, 0x1f19bc27
mov edi, 0xd2032610
or eax, 0xe80f3fe7
wait
pop rsp
and al, 7
push rbx
and dword [rax - 0xf0fd9bf], edx
fsub qword [rax + rax*2 - 0x66]
clc
clc
nop
and dword [rbx + 0x7f06e890], edi
adc byte [rbx - 0x679b7b00], bl
cmpsd dword [rsi], dword ptr [rdi]
fadd st(3)
cdq
jg 0x405891
add dword [rcx], eax
iretd
test eax, 0x3fb08f58
pop rax
add dword [rax + 0xa245c90], ecx
jo 0x4058b2
inc dword [rdi]
jg 0x4058b3
nop
add ecx, ebp
or byte [rax + 0x38c8bc68], al
add dword [rdi - 0x41], esp
adc eax, 0x90b0e001
popfq
xor byte [rdi], dl
xor al, 0x98
sbb eax, 0x7bfc216
adc dword [rbx + 0x3c], edi
sub dword [rcx], 0xbfda67a9
add dword [rdi + 0x36], edx
movsxd rdx, dword [rcx + 0x48a000bb]
jae 0x4058ac
mov edi, 0x351fff12
add ecx, dword [rcx]
jg 0x4058cb
ret
jns 0x4058fc
add byte [rax], al
pop rax
and al, 0x24
add byte [rax], al
add bh, bh
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
push rbp
push rax
pop rax
and dword [rip - 0x2ef7fdea], ecx
jne 0x4058cb
cmpsb byte cs:[rsi], byte ptr [rdi]
nop
cmpsb byte [rsi], byte ptr [rdi]
sbb byte [rdx], dh
add byte [rax], al
jge 0x405920
add byte [rax], al
and bl, 0
add byte [rcx + 4], cl
add byte [rax - 0xc], bh
add byte [rax], al
add bh, bh
