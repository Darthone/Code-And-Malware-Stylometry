call 0x404bc0
push rbp
push rbx
push rcx
push rdx
add rsi, rdi
push rsi
mov rsi, rdi
mov rdi, rdx
xor ebx, ebx
xor ecx, ecx
or rbp, 0xffffffffffffffff
call 0x4049d8
add ebx, ebx
je 0x40498e
ret
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
ret
lea rax, [rdi + rbp]
cmp ecx, 5
mov dl, byte [rax]
jbe 0x4049c6
cmp rbp, -4
ja 0x4049c6
sub ecx, 4
mov edx, dword [rax]
add rax, 4
sub ecx, 4
mov dword [rdi], edx
lea rdi, [rdi + 4]
jae 0x4049ae
add ecx, 4
mov dl, byte [rax]
je 0x4049d6
inc rax
mov byte [rdi], dl
sub ecx, 1
mov dl, byte [rax]
lea rdi, [rdi + 1]
jne 0x4049c6
ret
cld
pop r11
cmp r8b, 2
je 0x4049ee
jmp 0x404a6b
inc rsi
mov byte [rdi], dl
inc rdi
mov dl, byte [rsi]
add ebx, ebx
jne 0x4049fe
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jb 0x4049e6
lea eax, [rcx + 1]
call r11
adc eax, eax
add ebx, ebx
jne 0x404a16
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
mov dl, byte [rsi]
jae 0x404a03
sub eax, 3
jb 0x404a34
shl eax, 8
movzx edx, dl
or eax, edx
inc rsi
xor eax, 0xffffffff
je 0x404a6b
movsxd rbp, eax
lea eax, [rcx + 1]
call r11
adc ecx, ecx
call r11
adc ecx, ecx
jne 0x404a5b
mov ecx, eax
add eax, 2
call r11
adc ecx, ecx
add ebx, ebx
jne 0x404a59
mov ebx, dword [rsi]
sub rsi, -4
adc ebx, ebx
jae 0x404a48
cmp rbp, -0xd00
adc ecx, eax
call 0x40499a
jmp 0x4049ee
pop rcx
mov rax, rsi
sub rax, rcx
pop rdx
sub rdi, rdx
pop rcx
mov dword [rcx], edi
pop rbx
pop rbp
ret
push 0x1e
pop rdx
call 0x404b44
push rax
push rdx
push r12
pop rdi
pop r8
jl 0x404ae2
push rdx
push r12
pop rdi
push rdi
push rdx
push r12
and byte [r14 + 0x61], r12b
imul ebp, dword [rbp + 0x64], 0xa000a2e
add byte [rcx + rcx*2], ah
outsb dx, byte [rsi]
outsw dx, word [rsi]
cmp ah, byte [rax]
push rsp
push 0x66207369
imul ebp, dword [rbp + 0x20], 0x70207369
movsxd rbp, dword [rbx + 0x65]
and byte fs:[rdi + 0x69], dh
je 0x404b2e
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x78], ah
movsxd rsi, dword gs:[rbp + 0x74]
insb byte [rdi], dx
and byte gs:[rax + 0x61], dh
movsxd rbp, dword [rbx + 0x65]
jb 0x404b01
push 0x3a707474
jne 0x404b5a
js 0x404b1a
jae 0x404b54
outsb dx, byte cs:[rsi]
je 0x404b13
and al, 0xa
add byte [rcx + rcx*2], ah
cmp ah, byte fs:[rax]
push rbp
push rax
pop rax
and byte [rbx], dh
cmp dword cs:[rax], esi
outsd dx, dword [rsi]
jo 0x404b81
jb 0x404b73
push 0x43282074
sub dword [rax], esp
xor dword [rcx], edi
cmp dword [rsi], esi
sub eax, 0x37313032
and byte [rax + rbp*2 + 0x65], dh
and byte [rbp + 0x50], dl
pop rax
and byte [rbp + 0x61], dl
insd dword [rdi], dx
and byte cs:[rcx + 0x6c], al
insb byte [rdi], dx
and byte [rdx + 0x69], dl
push 0x52207374
jae 0x404b9e
jb 0x404bb1
and byte cs:[rdx + rcx], ah
add byte [rax + 0x26a5e90], dl
pop rdi
push 1
pop rax
syscall
push 0x7f
pop rdi
push 0x3c
pop rax
syscall
pop rbx
push 0
push 0x40000c
push rax
push 0x21f384
push rcx
push r15
mov edi, 0x800000
push 7
pop rdx
mov esi, 0x21f384
push 0x32
pop r10
sub r8d, r8d
push 9
pop rax
syscall
cmp edi, eax
jne 0x404a7c
mov esi, 0x400000
mov edx, edi
sub edx, esi
je 0x404ba7
add ebp, edx
add dword [rsp + 8], edx
add dword [rsp + 0x18], edx
mov ecx, ebx
sub ecx, esi
shr ecx, 3
cld
rep movsq qword [rdi], qword ptr [rsi]
xchg eax, edi
mov rsi, rbx
push rax
xchg eax, edx
lodsd eax, dword [rsi]
push rax
mov rcx, rsp
lodsd eax, dword [rsi]
xchg eax, edi
lodsd eax, dword [rsi]
movzx r8d, al
xchg rsi, rdi
call rbp
pop rcx
ret
pop rbp
lea rax, [rbp - 9]
mov r15d, dword [rax]
sub rax, r15
movzx edx, word [rax + 0x38]
imul edx, edx, 0x38
add edx, 0x58
sub r15d, edx
lea rcx, [rax + rdx]
call 0x404b55
xchg eax, esp
add byte [rax], al
add eax, 0x49020000
add dword [rax], eax
jmp rbp
call 0x706f4c4f
jb 0x404c67
movsxd rbp, dword [rdi]
jae 0x404c61
insb byte [rdi], dx
js 0x404c67
add byte [rbx + 0x447549f9], al
push rbx
push rdi
dec dword [rdi + rsi - 3]
pop rsi
push rsi
pop rbx
jmp 0x404c47
cmp rsi, rcx
jae 0x404c4f
push rsi
pop rsi
lodsb al, byte [rsi]
cmp al, 0x80
jb 0x404c2e
cmp al, 0x8f
ja 0x404c2e
cmp byte [rsi - 2], 0xf
je 0x404c34
sub al, 0xe8
jg 0x404c31
push rdi
cmp al, 1
ja 0x404c1c
sbb edx, dword [rsi]
push rsi
lodsd eax, dword [rsi]
sub al, dl
jne 0x404c1f
pop rdi
bswap eax
sub eax, edi
add eax, ebx
stosd dword [rdi], eax
adc al, byte [rbx]
lodsb al, byte [rsi]
jmp 0x404c4c
fld xword [rdi - 1]
fistp word [rbx - 0x3d]
pop r9
mov rsi, rsp
mov r14d, 0xffffeff0
or esp, edi
push 7
pop rcx
rep movsq qword [rdi], qword ptr [rsi]
sub rsp, -0x50
mov bh, 0xdb
add byte ds:[rip - 0x5ef078b], al
stosq qword [rdi], rax
or al, 0x57
or ch, bh
in eax, dx
out dx, al
fisttp qword [rdx]
test byte [rbp + rcx*4 + 0x7f], 0x1b
cmp bh, byte [rax - 0x54c2ffe0]
mov edx, 0xff001000
mov edi, 0x4cfe8920
mov edi, ecx
push 0x59
pop rax
syscall
test eax, eax
js 0x404ca3
mov byte [rsi + rax], 0
add r9, 0xf
pop rcx
pop rsi
pop rdi
sub rsp, -0x1249900
lahf
or dl, ah
mov r8, rbp
push 0
call 0x5a4c5121
adc al, 0xc4
ljmp [rdi + 0x1d]
pop rcx
pop rcx
shl ecx, 0xc
add rdi, rcx
sub esi, ecx
push rax
push 0xb
pop rax
jmp qword [r15]
mov al, 0xb
jmp 0x404ce7
mov al, 0xa
jmp 0x404ce7
mov al, 0xc
mov ebx, 0xebf6fb7d
add eax, 0xca3209b0
movzx eax, al
push rbx
cmp rax, 0x729ff000
add al, 0x82
imul edi, eax, -1
jg 0x404cc3
inc ebx
mov al, 0
jmp 0x404ceb
mov al, 2
jmp 0x404ceb
mov al, 3
jmp 0x404ceb
mov al, 0x3c
jmp 0x404ceb
push rcx
rcr ah, 1
fstp st(7)
jle 0x404d2c
mov r8, qword [rdi + 8]
enter -0xb6, 0x73
or bh, byte [rdi - 0x1e17ed81]
call rcx
in eax, dx
fstp st(2), st(0)
sub bh, bh
je 0x404d3e
jg 0x404d30
leave
inc r8
mov byte [rsi], al
fidiv word [rsi - 0x14391249]
jmp 0x296aa4b3
pop rax
std
push rbp
push r12
pop rsi
mov esi, 0x55cc04dd
cld
std
push rbx
mov qword [rbx + 0xfe828ec], rax
test dl, ah
in eax, dx
std
out 0x44, al
je 0x404d8a
adc byte [rdx - 0x1076f6f4], bh
call 0x54cb9f07
mov ebx, 0x10b6fffd
mov edx, dword [rsp + rdx]
test edx, edx
jne 0x404d92
cmp esi, 0x21585055
jne 0x404d96
jge 0x404d88
xor byte [rdi + 6], ch
sti
cmpsb byte [rsi], byte ptr [rdi]
mov cl, 0xeb
add al, 0x85
div byte [rbp - 0x80]
cmp esi, edx
ja 0x404d8b
outsb dx, byte [rsi]
in eax, dx
dec byte [rcx + 0x33b48d0]
ja 0x404d8f
or cl, byte [rax - 0x75]
or byte [r11 + 0x68], sil
mov dword [rcx - 0xf], eax
mov edi, dword [rbp + 0x61]
fstp xword [rsi - 0x15]
stosd dword [rdi], eax
or byte [rbx + rcx*4 + 0x44], r8b
and al, 0x18
pop rbx
ret 0xd5f9
fstp st(2), st(0)
outsb dx, byte [rsi]
ja 0x404e3b
pop rcx
or al, 0x3b
jb 0x404e41
mov ebp, 0x84191db2
leave
movq mm6, qword [rdi - 0x3d6a0121]
xor eax, eax
test r12, r12
rol byte [rbp + 0x711e74c2], 0
add bl, byte [rcx + 0x77]
mov ebx, ebx
mov dh, 0xb5
mov bh, 0xf0
add esi, dword [rbp + 0xf]
and al, 0x4b
sbb al, byte [rcx + rcx*8]
jnp 0x404db3
jmp 0x404db5
or byte [rcx - 0x2c], al
adc al, 0xda
mov byte [rip - 0x41b24977], r9b
mov ecx, 0xc6b6b3f2
call 0x3664cf6
sbb eax, 0xccd6b784
push rbx
imul ebx, dword [rax], 3
jmp 0xffffffffdbf56f3e
in eax, dx
jg 0x404ded
sub byte [rbx + 0x5d], bl
pop r12
pop r13
ret
adc eax, 0x74ab49ff
sub dword [rdi], esp
out dx, al
test edx, eax
mov dl, 0x5f
int1
enter 0x2c38, -0x38
sete byte [rax + 0x6b385942]
sar dword [rdi + 8], cl
out 0xf, al
pop bx
ja 0x404e33
mov bh, 0x2a
add edi, 0x10
jmp 0x404e30
push rdi
mov eax, 0xff3500e8
mov edi, 0x41c287e1
push rsi
cld
push rbp
push rbx
push 0x2067034c
or byte [rdi], ch
jg 0x404e6d
cmp dword [rdi + 0x10], 3
in al, dx
cmp al, 0xf
mov bh, 0x57
cmp byte [rax - 0x77], cl
xor byte [rcx - 0x1107b7f0], bh
mov dh, 0xdf
stosb byte [rdi], al
sub byte [rbx + rdx + 0x20], cl
cmove ecx, eax
pop rsi
clc
out dx, eax
add byte [rbx - 0x24ce0033], 0x30
and bh, bh
retf 0x2178
jge 0x404ea9
jne 0x404ec0
fstpnce st(6), st(0)
jle 0x404e89
test byte [rsi - 0x50], al
cmp eax, ebp
cmovb rax, qword [rbx]
add eax, dword [rsi + 0x28]
or al, bl
mov cl, 0xf1
lodsd eax, dword [rsi]
fsub dword [rdi]
cmp bl, ch
fstp xword [rip - 0x2dcef11b]
xor r14d, r10d
cmp esi, ebx
cli
sub ebx, ebp
adc al, 0xea
add ebx, 0x1c5f0fff
outsb dx, byte [rsi]
ja 0x404ebf
jrcxz 0x404ef3
fsubp st(0)
mov esp, 0x148d07fd
sbb byte [rbx], ah
call 0xffffffffc1e1ee57
frstor dword [rdi + rdi*2]
cmp byte [rbx + 0x6d], bh
and eax, 0xb2f648b5
jnp 0x404f72
wait
push rbx
test byte [rbx + 0x7c839301], bl
add byte [rbp + 0x24], dh
fild word [rsi + 0x243cfe1b]
jne 0x404f32
sub rax, 0x32034918
mov esi, 0xfe8b2803
mov ecx, 0x301d6f0d
call 0x58299507
sub al, 0x24
add dword [rdi], ecx
test dword [rbx + rdi*8 + 0x2f], ecx
iretd
out 0xa, al
sub byte [rsp + rax*2 + 0x41], al
mov esi, 0x73516240
mov edx, r9d
in eax, dx
fstp xword [rdx + 0x498e046f]
and byte [r8 - 0x3b], spl
jo 0x404fa5
or al, 0xb6
int1
insd dword [rdi], dx
ja 0x404f3f
and ecx, 7
or al, 0xeb
jae 0x404faa
int1
add ah, byte [rbx - 0x4e049062]
stosb byte [rdi], al
add eax, ebp
shr r14d, cl
popfq
frstor dword [rsi]
or byte [rax], cl
mov edi, 0xe63cdd2f
pop rbp
sub al, 0x1a
mov ecx, 0xd8297832
cdq
jne 0x404fdf
movabs eax, dword [0x4412b13c27078ff0]
movsxd rax, ecx
xor ch, bh
xchg byte [rbx - 0x357c1183], bl
add bl, byte [rdx]
clc
fiadd word [rsi + rdx*8 - 0x18]
sar ah, 1
xor esi, dword [rcx + rax*8 - 0x3ac61422]
jne 0x40501d
retf
sbb dword [rbx - 0xd2236a3], ebx
out dx, eax
jrcxz 0x404fd6
push rax
call 0xffffffff868d4cc3
neg esi
int1
push qword [rbx - 0x9be7e25]
mov byte [rdx], 0x74
or eax, 0x2d7c8d4a
add byte [rcx], dh
adc bl, cl
cld
rep stosb byte [rdi], al
mov ebp, dword [rip + 0x3b3fc1dd]
jns 0x404fe0
std
cmp edi, esi
xchg eax, edi
jle 0x405035
or al, 0xc7
or al, 0x88
ret
nop
xor esi, esi
call 0x18c995c1
sbb ebp, esi
leave
xchg byte [rip + 0x744f794e], dl
hlt
mov bh, 0x9b
jnp 0x405033
imul ecx, dword [rip + 0x1d448d49], -0x24
std
cmp ebp, dword [rdx + rax*2 + 0x73]
add al, 0x83
imul eax, esi, 6
stosb byte [rdi], al
cmpsd dword [rsi], dword ptr [rdi]
loope 0x405021
idiv byte [rcx + 0x40dc0858]
cmp eax, 0xffc1b718
fidivr word [rbp - 0x3669e643]
mov bh, 0x47
cmp byte [rax - 0x3c], bh
cmp byte [rcx], bh
or al, 0xf
mov word [rbp - 2], fs
mov es, word [rdi + 0x24bc9f3f]
movabs al, byte [0xd0b6c38b2bbf74ae]
mov ebp, 0x2f70f94
xor byte [rdi + 0xe], dl
add dword [rdx + 0x331b27e3], ebp
sbb al, cl
push 0x5f415e41
shr byte [rip - 0x6a8e65c8], 1
sub eax, 0x9b5578ce
pop rcx
mov edx, 0xe6406a52
push rbx
mov rbx, r8
cmp byte [rbx + 0xd8f870b], cl
xchg eax, ecx
xor al, 0x24
adc byte [rdx], ah
sub al, 0x89
xor al, 0xbd
int 0x3d
mov esi, esi
and dl, al
cwde
out 0xb6, eax
sbb dword [rbx - 0x17df65c1], edi
sti
mov edx, dword [rbp + 0xf]
imul esp
fistp dword [rbx + 0x58]
ret 0xcc4c
mov edx, 0xbe3855b1
add eax, 0x6d8d6d15
imul eax
mov edx, 0x66534111
loope 0x40504a
js 0x40508a
mov cl, 0xdf
div byte [rcx - 0x72690eef]
js 0x40511c
sbb byte [rax + 0x31], dl
in al, 0xde
fcomp st(0), st(0)
mov esi, 0x2fc2bd09
and eax, esp
call 0x5cad6357
movabs al, byte [0x8d5a41889b7d29b1]
xchg eax, ecx
jrcxz 0x40513d
leave
sbb al, 0x41
fdiv qword [rsi + 0x78]
jo 0x405142
mov bh, 0xc3
xchg byte [rsi + 0x7d], dh
adc byte [rbx + rsi*2 + 0xb], cl
sti
mov eax, 0xfbaf1778
iretd
add ch, byte [rdi + 4]
out dx, al
mov edi, eax
call 0x3dc24bf4
setnp byte [rcx + 0x77]
or byte [rsi - 0x14], bh
adc dword [rcx + 0x50], eax
insb byte [rdi], dx
add al, al
test byte [rsi - 0x76fb913b], ch
fidivr dword [rbp + 0x3e]
xchg dword [rax - 0x58], edx
jl 0x4050d0
int 0x43
cmp byte ds:[rsi + 0x482b207], 0x75
sub esp, eax
fimul word [rcx + 0x3aade8df]
nop
iretd
cmp byte [r11 - 0x1f], r13b
mov dh, 0xb0
mov qword [rbp + r8*8 - 0x7c38c6fa], 0x100236f
cmp edi, dword [rax]
sub esp, eax
pop rbp
add byte [rax], al
add byte [rax], al
add byte [rax], al
add byte [rdi + rdi*8], 0
add byte [rax], al
je 0x405164
add byte [rax], al
add byte [rax], al
add byte [rdx], al
add byte [rax], al
add byte [rax], dl
movabs al, byte [0x9282]
add byte [rax], cl
jmp qword [rax]
xor al, 1
add byte [rbx + rdi + 0x20000], dh
add byte [rax], al
sti
inc dword [rdi + 0x43]
cmp spl, byte [r8]
sub byte [rbp + 0x62], dl
jne 0x4051f6
je 0x4051ff
and byte [rip + 0x302e342e], dh
sub eax, 0x310d7536
jle 0x4051c8
mov dh, 0x7d
jbe 0x4051c7
adc byte [rcx + rbp], dh
and byte [rdx], dh
xor byte [rax], dl
xor byte [rcx], al
sar dh, 0xa3
in al, dx
cmp dword [rax], eax
add byte [rbx], al
add byte [rcx], al
add byte [rax], bh
add al, byte [rax + 0x17]
sahf
add al, byte [rax]
push rsp
add eax, dword [rax]
je 0x405200
sahf
sahf
add al, 0
cwde
add eax, 0x1f90e000
and byte [rdi + 0x9100006], bl
add dl, dh
adc ah, ah
enter 0x80f, 0
js 0x4051ee
or dword [rax], eax
adc sil, dl
or esp, esp
add ecx, dword [rdx]
add byte [rax + 0x1818000b], ch
stc
add al, 0xf2
add dword [rax + rax], ecx
or eax, 0x7e1bf000
cmp ah, 0
add byte [rax], al
sbb al, 0xf
add byte [rdx + rbx*4 + 0x403e409f], al
adc byte [rax], al
movabs al, byte [0x201f900fa1700011]
adc al, byte [rax]
and byte [rax - 0xdffffed], dh
enter -0x1274, 0x14
add al, bl
std
add al, 0xf2
add al, 0xf2
adc eax, 0x16e800
and bl, cl
add al, 0xf2
add al, bh
sbb bh, bh
retf
add dh, dl
sbb eax, 0x77610519
sbb al, byte [rcx]
add dword [rsi + 0x1b17601d], esi
add al, 2
fimul word [rbp - 0x27]
sbb al, 0x13
add dword [rdi], edx
add al, 0
int1
jmp rcx
pop rbx
pop rcx
in al, dx
or al, 0x1b
mov edi, 0x92970289
rol dword [rsi + 0x171b30a4], 0x70
outsd dx, dword [rsi]
sbb dword [rsi], ebp
mov al, 0x44
pop rdi
enter -0x7ca0, 0x74
cmpsd dword [rsi], dword ptr [rdi]
enter 0x1701, 0x53
xchg eax, edx
shr dword [rsi + 0x477a4f84], -0x30
fcom dword [rbp - 0x6879e6f0]
movsd dword [rdi], dword ptr [rsi]
xlatb
jmp 0x27f095c6
sal byte [rdi - 0x28], 0x20
or dword [rbp - 0x35], 0x5f
not byte [rsi]
xor ah, ah
test al, 0x9c
or byte [rcx], bl
in al, 0xec
leave
adc eax, 0x171d0c01
and eax, 0x4190642c
xor dword [rdi], ebp
pop rax
jns 0x405277
and dword [rcx], ebx
xchg byte [rcx], al
sbb eax, 0x39072793
sbb ch, byte [rsi + 0x391da901]
jns 0x40533b
nop
sub bl, ah
add ebx, edx
sbb eax, 0x2790bd43
or al, 2
add rbx, qword [rbx]
add dh, byte [rdx]
fcom dword [rax + 0x30c1ef9c]
ret 0xc832
cmp eax, 0x3604c42f
and al, 0x83
or al, 0x64
enter 0x5f76, 0x32
enter 0xc90, -0x37
mov edx, ecx
or eax, 0x9b4320c9
int3
movabs dword [0xae08d0178320c832], eax
xor bl, al
nop
or al, 0xd8
mov ch, 0x47
loopne 0x40531e
leave
in al, 0xd6
nop
xchg eax, ebx
adc dword [rax - 0x64], 0x1b
stc
sar dword [rax + 0x21], 0x1c
sbb byte [rdi + rax*8 - 0x61d8fcde], 0x1c
in al, 0x84
pushfq
jg 0x40537d
pop rdi
add esi, esp
and eax, 0xce419072
pushfq
nop
scasb al, byte [rdi]
xchg eax, esp
je 0x405359
pop rdi
stosd dword [rdi], eax
pop rdi
jg 0x4052cd
cmc
xchg byte [rax + rcx*4 + 0x3717b967], ch
mov dl, 0xde
add ebp, dword [rdi + rax*2]
add eax, dword [rip + 0x1595d8df]
mov ebx, 0xe16747d8
xchg eax, edx
push bx
rcl byte [rdi + rbx*2], cl
mov r10d, 0x59deb2b
add al, 0x47
jg 0x405390
and cl, byte [rsi]
jbe 0x40539b
cmp esi, dword [rdi + 0x1784626e]
xchg eax, ebx
sahf
mov ebp, 0x51ab730
sub qword ss:[rdi], r10
jb 0x405320
sbb qword [r9], -0x1c
in al, 0x20
jns 0x4053de
xor eax, 0x2760e4a2
or al, 0x2a
push rsi
mov esi, 0x17b3c905
pop rsi
or eax, dword [rsi]
ja 0x405391
xor eax, 0xc8393c85
pushfq
jb 0x4053b0
in al, dx
pop rdi
push rbx
lahf
cmp al, 0x79
and dword [rdi + 0x57], ecx
and dh, byte [rcx]
jb 0x4053c5
in al, dx
test dword [rdi + rax], ebx
out dx, eax
lea esp, [rdi]
sbb byte [rax], ah
sub byte [rdi], al
jmp 0x724eac2c
in al, 5
or byte [rbx + 0x42], al
or spl, r12b
and byte [rdi], ah
add r9b, byte [r13 + 0x4d]
jg 0x405400
jb 0x4053ee
bnd jne 0x40545d
in al, 8
ret
jne 0x4053f6
in al, 0x20
or qword cs:[rax + rdi*2], r15
pop rbp
enter 0x17b3, -0x54
or dword [rdi + 0x64c22858], edi
nop
xchg eax, ebx
adc dword [rdi], 0x50
jbe 0x405483
out dx, eax
xchg eax, ebx
sbb dword [rsp + rbx + 0x2923821a], 0xa
xor cl, al
leave
add ch, byte [rax]
xor bh, byte [rsi + rsi]
je 0x4053c4
js 0x40540f
sal byte [rax + 0x10], cl
cmp al, bl
test dword [rdi + 0x737e17ec], ecx
mov ebp, 0x27bd9e90
or edx, dword [rdi]
sbb byte [rdi - 0x37f46271], dl
sahf
pop qword [rdx]
push rbx
ror byte [rbx], 0xc8
leave
mov bl, 0x17
ror dword [rbx], cl
mov edi, 0x38498b4b
sub byte [rsp + rsi*2], 0xc
mov ebx, 0xe0c7b12
jbe 0x405491
jg 0x405427
rcl byte [rdi], 0xd4
in al, 0xc9
xor qword [rax], r9
or eax, 0xabb18bcb
sbb esp, esp
insd dword [rdi], dx
jbe 0x4054a9
movabs al, byte [0x1f0d850f85e13c9c]
push rax
or r11d, dword [r14 - 0x38]
xchg eax, ebx
or ecx, 0xd
jl 0x405517
fimul word [rip + 0x33c85ecf]
xchg eax, ecx
test byte [rip + 0x5de0170e], al
pushfq
cmp al, 0x7b
and dword [rdi + 0xe], esp
pop rdi
cmp dword [rax], 0x8719e4e4
out 0x6c, eax
jl 0x405458
loope 0x405451
pushfq
sbb al, 0x55
pminub mm4, qword [rcx - 0x7c6cf8f1]
pushfq
cmp al, 0x6b
mov word [rax], gs
iretd
bswap ecx
xor ebx, dword [rsi - 0x38]
sub al, 0x84
adc bh, bh
cwde
xor dword [rcx], edi
jns 0x4054d2
in al, 0x89
add dword [rbx + 0x10], edx
nop
call 0x767e5a9
jns 0x4054fe
jle 0x405489
adc byte [rsi - 0x7061bd10], bl
mov al, 0x57
adc dword [rdi], ebx
push 0x6b
cmp dword [rcx - 0xa], edi
pop rsi
adc dword [rdi - 0x1a], eax
xchg eax, ebx
cmp eax, 0x727243b
cdq
adc dword [rcx], esp
not byte [rcx]
cmpsd dword [rsi], dword ptr [rdi]
sahf
cmp al, 0xe2
sub eax, 0x1216008a
jns 0x405591
nop
xchg eax, ebx
xor dword [rdi + 0x34], ecx
adc al, byte [rsi + 0x53]
in al, 0xc9
or ebp, dword [rdx + rdx + 0xe]
adc bl, byte [rsi - 0x29d86f43]
pop rbx
sub dl, byte [rbx]
ficom word [rcx + 0x42f6790b]
jg 0x405555
in eax, dx
pop rsp
mov word [rdi], ss
jb 0x4054f9
pushfq
jne 0x405552
adc al, 0x27
jb 0x405546
mov byte [rdx + 0x5d142b39], 0x42
sahf
jne 0x4055a6
adc al, 0xdf
jle 0x40558b
xchg byte [rbx + 0x10177aee], ah
clc
adc dword [rbx + 0x47c1c85e], 0x14bd4e40
ja 0x4055b4
cmp eax, ecx
leave
sub al, 0x6b
and byte ds:[rip + 0x3c85944c], dl
jmp 0x40550b
sahf
adc eax, 0x6746787f
mov esp, 0x15c6e040
bt dword [rsi], edx
iretd
and dword [rdi + 0x3a], ecx
and al, 0xff
pop qword [rcx + rcx*2 + 0x7a40bc08]
mov edi, 0x17e71766
test byte [rdi], dl
xchg eax, edx
mov esp, 0x60e4e419
cmpsb byte [rsi], byte ptr [rdi]
lahf
in eax, 0x3c
jnp 0x4055e0
xchg eax, esp
mov ebx, dword [rsi]
sbb byte [rdi - 0xb9ea4c6], ah
in al, 0x85
jg 0x4055e5
ret 0x4f27
jp 0x4055f3
iretd
jp 0x405568
sbb byte [rdi + 0x3c], bh
nop
call 0x276139f6
iretd
jbe 0x405617
imul edi, esp, 0x720e4f18
sub eax, 0x19184c43
retf -0xd6d
in al, 0x20
insb byte [rdi], dx
sbb dword [rax], ebp
sahf
in al, 0xd9
xchg eax, ebx
jnp 0x405618
and al, 0x7e
mov bh, 2
pushfq
sbb al, 0xe4
lodsb al, byte [rsi]
in al, 0x4b
fisttp word [rdi - 0x62]
cmp al, 0x39
sbb eax, ebx
or dword [rbx], ecx
sbb ah, byte [rdi - 0x44]
nop
movsxd rsp, dword [rdi]
sbb ah, byte [rdi]
cmp r12b, byte [r8 + r10*2]
sbb al, byte [rdi - 0x3a]
jne 0x40565d
in al, 0xc9
xchg eax, ebx
add eax, ebp
sbb ch, byte [rdx]
sbb eax, 0x9390641b
add qword [rdx + 0x7e], 0x1c9c838e
mov dh, 0x76
pop rsp
mov eax, 0xe93c7394
xchg eax, ebp
add byte [rdi], al
sbb byte [rdi + rdx], bl
mov ch, 0x8d
or edi, dword [rcx]
fadd dword [rbp - 0x6b63e8ba]
jbe 0x4055e1
mov ah, 0x1c
xchg ebx, ebp
xchg eax, esp
mov esp, fs
leave
and byte [rax], r10b
sbb eax, 0xa8e954e5
sbb esp, esp
xchg eax, ebx
sub eax, 0xca07f11
jb 0x405643
and dword [rbx + 0x1c2ba2e7], edi
xchg eax, edx
xchg eax, ebx
add dword [rbp + rbx + 0x591decfa], 0x2f
in al, 9
push rdi
and byte [rax + 0x2f4f1e17], cl
xor byte [rsi], cl
leave
mov edx, 0xa0ff1e7a
cmp eax, ecx
and byte [rdi + 0x77], ah
fisttp dword [rsi]
or eax, 0x9c83931f
cmp al, 0x94
sub al, 0x6e
cmp al, 0x39
enter 0x34c9, 0x61
jne 0x405646
sub bh, byte [rdx + 0xb]
cmp eax, ebx
test ecx, edx
sub byte [rdx + 0x12], dh
sub byte [rdi + 0x34dfa0e0], al
jbe 0x4056f2
cmp byte [rax], ah
push rsi
pop rbp
jbe 0x40573c
push 0x2f6587f8
nop
test dword [rax + 0xe4fc759], edx
jb 0x40575f
imul ebp, dword [rip + 0x41b8210c], 0x2720e4f2
mov ebx, dword [rip - 0x4d9763df]
xchg byte [rdx + rsi*2], cl
sbb eax, 0x5e900767
and byte [rip - 0x1ce8de61], bl
and dword [rdi - 0x44], esi
nop
and bl, byte [rdi - 0x72]
pop rsi
jne 0x40573b
sahf
mov ebp, 0x300727b0
movabs al, byte [0xc9e48a7e5f22882f]
and edi, dword [rsi + 0x1c9c9029]
in al, 0x4e
sub byte [rbx], ah
adc al, 0xe2
test dword [rbx], edi
movsxd rsp, dword [rbx]
clc
cwde
out 0x23, al
xor edi, dword [rdx + 0x21]
jp 0x405752
and al, 0x1f
xor byte [rsi - 0x38], bl
movabs dword [0x436124633f244579], eax
jb 0x4057ad
out 0x3a, eax
scasb al, byte [rdi]
jb 0x405753
mov word [rsi], cs
std
and al, 0xaf
jno 0x4057dc
jp 0x40578c
and eax, 0x25c25a2c
cmp eax, ecx
leave
xor ebx, edi
clc
mov edi, 0x9e4225d7
int1
add bh, byte [rsi]
mov esp, 0x27939036
hlt
push rdx
cmpsd dword es:[rsi], dword ptr [rdi]
push rsp
push rbx
cmp ebx, esp
add eax, 0xd7268f72
out 0xb7, eax
or edi, dword [rcx - 0x3a]
and edi, esi
mov rsi, cr2
xor edi, dword [rax - 0x7f]
jp 0x4057d3
out dx, eax
adc byte [rsi - 0x38], bl
jo 0x40580a
movsb byte [rdi], byte ptr [rsi]
mov eax, 0x790bb027
out dx, eax
or eax, 0x2f2fe456
in al, 0x49
xchg eax, edi
mov edi, 0x283250a5
cmp dword [rcx + 0x52], edi
outsd dx, dword [rsi]
lodsb al, byte [rsi]
pop r10
push 0x28
nop
cmp byte [rdi], ah
scasb al, byte [rdi]
shr dword [rax], 1
jg 0x4057ea
jns 0x405823
stc
sub byte [rdi - 0x33], dh
je 0x405801
enter 0x294b, -0x6d
adc dword [rdi - 0x31f6d8fa], esi
cwde
sub dword [rdi], edx
add eax, 0xf6790bd2
xchg eax, ebp
out 0x29, al
ja 0x40582b
jbe 0x4057e4
xor byte [rax], ah
adc bl, byte [rdi + 0x67]
and ecx, dword [rbp - 0x313ecafe]
xchg eax, ebx
sub ch, byte [rdi + rax*8]
add al, 0xbf
sbb al, 0xe4
in al, 0xc9
sub dl, byte [rax + 0x5c]
lodsb al, byte [rsi]
sub cl, cl
sahf
xchg qword [rbp + 0x2792b36], rbp
in al, 0xcc
pop rdx
movabs dword [0xbc6790b963c872b], eax
shr byte [rbx], 0x57
adc bl, byte [rcx - 0x3986f450]
and dword [rdi + rdi], ebp
add al, 0x4c
enter 0x17b3, 0x72
jnp 0x4058bb
sub al, 0x77
sal byte [rbx + 0x72cf45e], cl
movabs al, byte [0x2db3c9c83926779f]
mov edi, 0x4d4853d6
sub eax, 0x3921c205
cwde
pushfq
sub eax, 0x4f217b07
call 0xffffffffad578686
xchg byte [rbx], ah
cmp al, 0xe1
test dword [0xfffffffff72e6274], edi
mov eax, 0xeac0bc5d
test dword [rsi + 0x2eab772e], edx
nop
sbb dword [rbp + 0x60], -0x61
pop rdi
jae 0x4058fc
sahf
mov esp, 0x5a8a2f41
jp 0x4058d7
shr dword [rsi], -0x54
sahf
sbb byte [rsi - 0xdd04d71], 0x24
pop rsi
enter 0x4bc8, -0x10
scasd eax, dword [rdi]
js 0x405923
mov word [rdi], ss
cmp al, 0x30
out 0x72, eax
insb byte [rdi], dx
fucom st(4)
sbb dword [rdi], ebp
mov al, 0x30
cmpsd dword [rsi], dword ptr [rdi]
int1
xor byte [rdi - 0x1a6da51a], al
xor dword [rcx], esi
adc dword [rdx], eax
xchg eax, ebx
pop rsi
sbb al, 0x3e
xor dword [rdi], edi
stosd dword [rdi], eax
xor dword [rdi - 0x37a130d9], edi
je 0x4058c4
xor dword [rdi - 0x6f85c8ca], edi
pushfq
and dword [rcx], esi
mov dword [rbp + rbx + 0x21ecf272], 0x2ab8d732
xor dh, byte [rbx - 0x40f636f2]
xor r8b, byte [rdi]
cmp al, 0x39
enter 0x6ec9, -0x73
sal dword [r10], 0x28
or r15d, dword [r9]
fadd dword [rbp - 0x6007b804]
mov al, 0xb
jns 0x4058e6
or eax, 0x87f7df33
push rbp
test byte [rdi], dl
jb 0x40597b
jb 0x405966
xchg eax, edi
int3
jb 0x40592a
test byte [rdi], dl
test al, 0x33
jg 0x40598a
and dword [rdi + 0xb], 0xffffff89
cli
xor esp, eax
out 0xa4, eax
jb 0x405922
xor al, 0x4f
retf 0x3475
jb 0x405906
or ebx, edx
pop rcx
pop rsi
lodsb al, byte [rsi]
pop rsi
enter 0x35b3, -0x59
nop
mov ecx, 0x60e08f35
xchg eax, esp
jo 0x40595f
adc bh, byte [rbp + 0x13]
enter -0x6e6d, 0x77
and edx, dword [rsi + 0x36]
loope 0x405901
cmp al, 0xa9
lahf
ror dword [rbp + rax*8 - 0x1efd80ca], cl
test dword [rsp + rsi*2], edi
xchg eax, edi
cmp byte [rdi], ah
int1
iretd
jae 0x4059cf
in al, 0x19
mov esp, 0x37bf9fc0
mov edi, 0xe0908514
or dword [rdi], ebp
cmp dil, al
mov al, 0x9d
ja 0x4059fc
js 0x405930
popfq
pop rbx
cmp byte [rdi - 0x58], al
cmp byte [rdi], dh
mov al, byte [rcx + 0x21782c64]
cli
cmp byte [rdi - 0x48], bh
in al, 0x59
xor bh, byte [rcx]
in al, dx
xor al, 0x50
cmp dword [rsi], edx
in al, 9
out 0x52, al
jae 0x405a0d
push rdi
mov esp, 0x9505e8c0
cmp dword [rdi + 0x193c39c0], ebp
cmp dword [rdx + 0x3f], eax
movabs al, byte [0x8e464f2039e14b34]
cmp dh, byte [rip + 0x4839f73b]
mov ebp, 0x3a654ec0
out dx, eax
scasd eax, dword [rdi]
cmp al, byte [rdi + 0x17610ea4]
int3
cmp ebp, dword [rdi - 0x20]
add eax, 0x3b7e0bc2
sar byte [rbx], 1
ror byte [rsi - 0x38], 0xb1
jg 0x405a6a
xor bh, byte [rdi + rbp*8]
mov ebp, 0x5dbd2790
cmp al, 0x2f
cdq
cmp al, 0xc1
in al, 0x19
or r15b, byte [r10 - 3]
hlt
and al, 0x5e
enter -0x676c, 0x35
cmp eax, 0xf01e221f
add bh, byte [rbx + 0x61]
cmp eax, 0x63d5cd7
mov esp, 0x50572790
popfq
iretd
cmp eax, 0x9c6793f
cmp dword [rdx], edx
ja 0x405a78
lahf
sub qword [rbp + 0x60], r9
ror byte [rbx], 0x44
iretd
movsd dword [rdi], dword ptr [rsi]
jb 0x4059ef
mov bl, 0x83
jge 0x4059f4
in eax, dx
and dword ds:[rdi - 0x18], ecx
add eax, 0x302f3ee7
jnp 0x405a94
jp 0x405ab6
and dl, byte [rbp - 0x4c10c029]
adc eax, dword [rdx]
cmp eax, 0xe3ef1e31
cmpsd dword [rsi], dword ptr [rdi]
cmp al, 0x39
enter 0x6c9, 0x36
xor eax, dword [rsi]
mov dl, 0x99
sbb byte [rax - 0x51], ah
test dword [rsi - 0x71], eax
or cl, cl
mov bh, 0xe0
or ecx, ebx
add al, 0x8e
cmpsd dword [rsi], dword ptr [rdi]
mov qword [rsi], r9
jb 0x405b20
mov al, 0xb5
add ah, byte [rdi]
int 0x40
nop
xchg eax, ebx
movsb byte [rdi], byte ptr [rsi]
cmp eax, dword [rcx]
jmp 0x405af9
jns 0x405ab1
in al, dx
cmpsw word [rsi], word ptr [rdi]
add dword [rdi], ebp
rol byte [r15 + 0x27], 0xcf
call 0xffffffffaf81c854
cwde
je 0x405a85
or esp, esp
and ah, bh
mov esp, 0x878178c0
pop qword [rdx + 0xf]
fld qword [rdx - 0x4d]
mov dl, 0xea
pop rax
jmp qword [rdi]
nop
adc ecx, eax
cmovae esp, dword [rbp + 0x43]
mov dl, 0x43
adc byte [rsi], dh
add dword [rip + 0x4e2fc697], 0x16e811c8
mov ah, 0x98
mov ecx, eax
movsb byte [rdi], byte ptr [rsi]
push rbx
add dh, al
mov bh, 0x64
rol byte [rax + 0x7c13f217], 0x8b
enter 0x719, -0x65
pushfq
mov dh, 0x96
out 0x3b, eax
mov al, 0xb
jns 0x405b99
push rsp
hlt
movsb byte [rdi], byte ptr [rsi]
js 0x405b50
je 0x405abb
xchg eax, ebx
ja 0x405aca
mov es, word [rip - 0x20b21bd9]
insb byte [rdi], dx
cmp dword [rcx + 0x76], edi
cmpsb byte [rsi], byte ptr [rdi]
mov ss, word [rcx]
sbb dword [rbp + 0x20], 7
push -0x9e84eba
fnstcw word [rcx]
test byte [rbx + 0x477fec6e], dl
add byte [rdx + rax + 0xb], dh
pop rsi
xor dword [rdi + 0x1f], eax
jns 0x405bac
sbb al, dh
sahf
cmpsd dword [rsi], dword ptr [rdi]
xchg eax, edi
out dx, eax
xchg ah, ah
movsb byte [rdi], byte ptr [rsi]
adc ecx, dword [rcx]
movabs rdi, 0x5617c1c85e137454
push rdi
mov eax, 0x24f27f48
pop rsi
enter -0x6a18, 0x11
ficom dword [rbx + 0x17a4e487]
call 0xffffffffa9a4a4e7
add al, 2
iretd
add qword [r11 + rax*2 - 0xe], -0x18b683c5
add ch, byte [rdi]
adc byte [rdx], bh
retf 0x2f49
sti
sahf
ror byte [rbx], 0x79
shr byte [rax], cl
inc rcx
push rax
sbb al, 0xec
push rdx
jg 0x405c23
enter 0x13b3, -0x2e
out dx, eax
test byte [rsi + 0xb], cl
pop rsi
enter -0x586d, 0x6c
xchg eax, ebp
movsxd rcx, dword [rbx - 0x1c]
add al, 0x56
mov esp, 0x4e9f4bf2
xor al, r13b
test dword [rbp - 0x12], esi
jo 0x405baf
mov dword [rdi + rbp*4 + 0x38], ecx
add dword [rcx], 0x574cc927
sbb eax, 0x2178134d
jg 0x405c5c
lea ebp, [rbp + 0x4d]
out 0x27, eax
iretd
pop rsi
fcomp dword [rax - 0x60]
jl 0x405c54
out dx, eax
js 0x405c2d
jb 0x405bd0
and dword [rbp - 9], ecx
cmp edi, dword [rcx]
movsb byte [rdi], byte ptr [rsi]
repne lodsb al, byte [rsi]
cmpsb byte [rsi], byte ptr [rdi]
sub al, 0x4f
test byte [rdi], dl
ljmp [rcx + 0x6b]
cli
xchg byte [rbp - 0x45e87fc0], bl
test qword [rax], 0x39193c4f
scasd eax, dword [rdi]
mov esp, 0x4f6e766b
and dword [rdi + 0x38], ecx
adc dword [rcx + 0x7925f74f], 0x7a302f44
adc dword [rax + 7], edx
jbe 0x405c9e
and byte [rdi + 0x46], cl
mov cs, word [rdi]
js 0x405caa
jnp 0x405c12
push rax
xchg eax, ecx
pop rbx
loop 0x405c75
adc dh, byte [rdi + 0x47]
and bh, byte [rcx]
jb 0x405c49
enter 0x120, -0x12
push rax
xchg eax, esi
test dword [rdi], edx
add dword [rdi + 0x46], ecx
mov ds, word [rbx + 0x45657251]
jge 0x405cca
enter -0x6e6d, 0x23
add byte [rsi + 0x72520fa5], cl
in al, 0x46
insd dword [rdi], dx
pop rsi
movabs dword [0x52e213a93c857c52], eax
mov bh, 0x72
mov esp, 0x1bea1190
push rbx
jg 0x405cc0
push rbx
jb 0x405c31
xchg eax, ebx
enter 0x682b, -0x7e
push rbx
in al, 0xc9
or edi, dword [rcx - 0x1c]
push rdi
jmp 0x405d04
push rcx
cmp al, byte [rcx + 0x540c2f45]
push rsp
or al, 0x78
and edi, ecx
imul dword [rsi + rbp - 0x79]
push rsp
outsd dx, dword [rsi]
test byte [rbx], dl
jb 0x405c95
xchg eax, edi
push rbp
scasd eax, dword [rdi]
cli
pop rcx
and eax, edi
test al, 0x17
push rbp
push rax
sbb dword [rdi], esp
nop
mov edx, dword [rbp - 0x16]
push rbp
mov bh, 0xc9
pop rcx
in al, 0x2e
jnp 0x405d00
push rsi
and cl, bl
or ecx, dword [rsi + rcx]
pop rdi
push rsi
ja 0x405ca3
push rsi
xlatb
add eax, 0x5ce42f52
push rsi
lahf
in al, 0xd9
or ebp, esp
movsxd rdx, dword [rdi - 0x41]
mov ebp, 0x363aef57
and dword [rdi + 0x38], ecx
in al, 0x3a
pop rax
scasd eax, dword [rdi]
jl 0x405d60
and byte [rdi], ah
iretd
jp 0x405d5f
pop rax
scasd eax, dword [rdi]
pop rax
out 0x89, al
in al, 0xd9
pop rax
shr byte [rdx], 1
cld
pop rax
or byte [rcx - 0x31], bl
int3
mov esp, 0x60702790
pop rcx
push rdi
push rsi
xchg eax, ecx
out dx, eax
pop rcx
mov edx, dword [rdi]
xor al, byte [rdx]
fistp qword [rax + 0x21]
pop rdx
cmp al, 0x19
add dword [rsi], eax
xchg eax, ebp
jg 0x405d61
mov dl, 0x5a
and dword [rip + 0x5b118139], ebx
int1
xlatb
jnp 0x405d7e
mov bl, 0x78
pop rbx
iretd
mov ds, word [rbx - 0x29]
nop
call 0xffffffff911e99ed
adc al, 0x5c
out 0x72, eax
int1
lodsb al, byte es:[rsi]
xor esp, dword [rip + 0xe4f217a]
pop rsp
pop rbx
sbb ebx, dword [rbp + 0x79]
xor dh, byte [rdx + 0xc]
mov esi, 0x5d82785f
adc ebx, dword [rax + 0x70]
add bl, byte [rsi - 0x61c0f8a3]
popfq
ror byte [rdx + 0x5ebb6f5e], 0xef
mov bl, 0x83
enter -0xfa8, 0x42
or byte [rdi + 0x7f], bl
shr dword [rsi], 0x10
pop rsi
pop rax
pop rdi
scasd eax, dword [rdi]
lodsb al, byte [rsi]
movabs byte [0x40ff8c525ac9c833], al
sahf
mov word [rdi + rdi - 3], ds
add byte [rsi + 0x60], 2
jnp 0x405d42
popfq
mov esp, dword [rax - 0x29]
cmpsd dword [rsi], dword ptr [rdi]
ja 0x405e27
or byte [rsp + rbp*8], bl
mov ebx, 0xff820e2f
out 0x60, eax
adc eax, 0x872ce487
ja 0x405e21
and byte [rdi + 0x46], cl
xchg eax, edx
jmp 0xffffffffca08bfb2
xchg eax, ebx
add r12, qword [rdx + 0x77]
lodsb al, byte [rsi]
imul edx, dword [rbx + 0x31], 0x627205e0
stosd dword [rdi], eax
lahf
enter 0x4e93, -0x38
pop rax
sahf
pop rdi
ret 0xc27b
or eax, dword [rsi + rbx*2]
sbb al, 0x63
mov esp, 0x17a83794
insd dword [rdi], dx
and byte [rdi - 0x50], al
movsxd rcx, ecx
or dword [rax + rax*2 + 0x27644af7], ebx
hlt
test byte [rcx], bl
lodsd eax, dword [rsi]
out 0x88, eax
and byte [rdi], ah
iretd
jmp 0x6de4a593
add eax, 0x49e40bd6
lea esp, gs:[rbp - 0x39]
or edi, dword [rcx]
fdiv dword [rdi + 0x1a62542f]
jb 0x405dd1
jp 0x405dc8
out dx, eax
jae 0x405eb0
add cl, byte [rcx + 0x7f66d013]
out 0x66, al
mov ebp, 0x678178c0
cli
iret
jbe 0x405ec7
leave
adc edi, dword [rdx - 0x7f]
mov dword [rdi + 0x5f], esp
xchg eax, edx
and qword [rcx], r15
cmp eax, ecx
test eax, 0xac526832
jb 0x405e3c
push rdi
push 0x68bd913f
adc byte [r10 - 0x76430de9], r8b
int1
push 0x8e42d7
mov word [rcx - 0x51], gs
stosb byte [rdi], al
jb 0x405e7c
add al, 0x42
jo 0x405e55
imul eax, dword [rdi + 6], 0xa0c6176a
push -0x895c36a
add al, 0xe4
jbe 0x405f13
xor byte [rsp], ch
in al, dx
sbb dword [rdi], esp
mov ch, byte [rdx - 0x79]
mov byte [rax + 0x185e102f], ah
sbb dword [rsi - 0x20a8bd34], esp
push 0x27
je 0x405ec6
sub dword [rdi], esi
sbb ch, byte [rbx - 0x29]
or dword [rax + rdi + 0x5f6b6424], ecx
js 0x405e55
rcr byte [rbx + rbp*2 - 0x5893fca1], 1
or edi, dword [rcx - 0x2e]
or dword [rbp + 0x6c], edi
out dx, eax
scasb al, byte [rdi]
jae 0x405ed5
sahf
mov eax, 0x48365f6c
insd dword [rdi], dx
cmp al, 0xe3
add al, 0x42
cmp al, 0x6d
xchg dword [rsi + 0x5b], ebp
or esp, esp
test dword [rbp + rbp*2 + 0x48b76ddd], eax
loopne 0x405f0b
outsb dx, byte [rsi]
cmp byte [rdi], ah
jne 0x405f6b
outsb dx, byte [rsi]
push rdi
adc ch, byte [rbp + 0x2178ac6e]
mov r11b, 0x78
outsd dx, dword [rsi]
cmovle esp, dword [rax - 0x3c]
or dword [rax + 0x6f], esp
sub dword [r15 - 0x3f], -0x7a
in al, 0xc
ja 0x405f4c
mov ebx, 0x5e040b17
enter -0x733b, -9
outsd dx, dword [rsi]
cmovb ebp, dword [rdi]
in al, 0xc9
adc dword [rax + 6], esi
jge 0x405fa9
jo 0x405eea
or dword [rax], eax
add eax, 0x133f70fa
pop rbp
jno 0x405f88
outsb dx, byte [rsi]
jno 0x405f73
add al, 0x42
sbb al, 0x92
rol byte [rcx + 0x2f48ff71], 1
in al, 0xac
jno 0x405f0c
jno 0x405fc5
pushfq
rol byte [rax + 0x6f725017], 0xb0
jb 0x405f23
xor al, byte [rdx]
jg 0x405f93
cmp dword [rbx + 0x5f], esi
and r11b, byte [rsi - 0x38]
insd dword [rdi], dx
imul ebx, dword [rdi + 0x73], 0x817a3577
hlt
cli
jae 0x405f78
je 0x405ffe
or dword [rdi + rdx*8], ebp
je 0x405f92
and dword [rdi], ebp
in al, 0x60
enter -0x4de9, 0x5a
jne 0x405fee
mov ss, word [rax - 0x69]
add byte [rbx + 0x2075bf1e], dl
pushfq
nop
and edx, eax
mov dword [rsi], ebx
jbe 0x405f78
pop rsi
enter 0x5e93, 0x3a
jbe 0x405fcf
fidiv word [rdx - 0x2c]
cmpsb byte [rsi], byte ptr [rdi]
adc byte [rbx + 6], 0xf4
jbe 0x405fc9
pushfq
rcr byte [rdi - 0x3dd88969], 0xb
cmp eax, ebx
in eax, 0x5f
xchg eax, ebp
ja 0x406026
ror byte [rbx], 0x79
movabs byte [0x4e8b1c8c87778757], al
mov eax, 0x34564777
hlt
sahf
js 0x405fe9
adc edi, dword [rax + 0x72]
nop
xchg eax, ebx
fild qword [esi + 0x2c]
and eax, 0x21893c78
jns 0x40600e
push rdx
js 0x405fcc
xor ch, byte [rdi + rbp - 0x70]
sbb dword [rdi + rdi + 0x795078cc], -0x5c
leave
pop rcx
pop r8
lea edi, [rcx + 0xf]
jb 0x40600f
loop 0x406055
push rsp
movabs byte [0xdc2720e40b2ec879], al
mov esi, 0x48c85e79
rcr dword [rax], 0x7a
outsd dx, dword [rsi]
rcr byte [rax + 0x7a], cl
jno 0x406080
enter 0x7ab8, -0x69
cmp eax, 0x24384f21
sbb dword [rbx + 0x67], edi
adc cl, byte [rax + 0x7a0ce426]
push rcx
jnp 0x405fe6
sahf
sbb al, 0xc0
call 0xffffffffd8678070
jnp 0x40609a
fmul dword [rbx]
or al, 0x5e
in al, dx
jnp 0x4060c1
xor dword [rdi + rbp + 0x5e], edi
enter 0x1793, 0x44
jl 0x405ff2
xchg eax, ebp
scasd eax, dword [rdi]
jl 0x40607c
pop rsi
enter 0x5733, 0x24
xchg eax, esp
jl 0x4060d8
jns 0x406081
xchg esp, esp
and al, ch
jl 0x406070
loop 0x4060f2
in al, 0xd9
or ecx, dword [rax + 0x7d]
out dx, eax
cwde
jge 0x406077
test dword [rsp + rax + 0x7de856d7], ecx
sbb byte [rax + rax*8 - 0x1081fbf9], bh
sbb al, al
and dword [rcx], edi
cmp dword [rsi + 0x77], -2
pop rsi
jle 0x4060ef
test al, 0x13
jg 0x406055
jle 0x406077
adc eax, 0x42f6790b
fstp xword [rsi - 0x29]
sbb byte [rcx - 0x3e61bd10], ah
jg 0x406050
mov ah, 0x8c
xor al, 0x7f
and edi, ecx
js 0x40604a
not dword [rdi + rdi*2 + 0x7873046f]
and dword [rdi + 0x78], ecx
loop 0x406154
push rsi
and dword [rax - 0x74fd8f7f], eax
scasd eax, dword [rdi]
add al, 0x59
scasd eax, dword [rdi]
or ebx, dword [rcx]
cmp dword [rax - 0x7d], 0x20b07f80
sar byte [rax + rax*4 - 0x1b7eda01], 0x19
pushfq
rcr byte [rdi + 0x71d78188], 0x4f
nop
xchg eax, ebx
movsd dword [rdi], dword ptr [rsi]
sbb dword [rdi - 0x10], 0xbc5d72a
jns 0x40617d
mov edi, 0xfd566581
and dword [rbp + 0x723c612], 0xb7610330
xchg eax, edi
xchg eax, ebx
xchg eax, ecx
movsxd rax, dword [rcx]
lahf
mov dword fs:[rdi + 0x3c], edx
stosd dword [rdi], eax
adc ecx, eax
xchg eax, edx
iretd
pop rdx
adc r11, qword [rax - 0x3b]
nop
or edi, 0x55
sbb dword [rsp + rdi - 0x79307c7f], -0x7c
mov eax, dword [rcx - 0x7c6fd0bb]
xor dword [rdi - 0x50], 0x21
cmp dword [rbx], edi
xor al, byte [rdi + rsi*2 + 0xb179b76]
movsb byte [rdi], byte ptr [rsi]
jb 0x406173
test byte [rcx], cl
test edi, edx
pop rsi
enter -0x3be8, 0x6a
test dword [rdi], ecx
fadd dword [rdx + 0x2f09c885]
nop
pop rdi
test dword [rdi], esi
add byte [rcx], cl
in al, 0x49
xor byte [rax], ch
ja 0x406146
test dword [rsp + 0x18], esp
rcr dword [rsi + rax*4], -0x21
xchg byte [rbx + 0x35], ch
cmp al, 0x19
cmp edx, esi
xchg byte [rax], dh
pop rcx
and al, 0xb6
xchg byte [rax + 0x6c8e4723], dl
movsxd rax, dword [rsi]
add dl, byte [rip + 0x28464287]
xchg dword cs:[rdi + 0x204e8fa], eax
hlt
fild word [rdi + 0x278846ef]
mov esp, 0x58579190
jnp 0x406134
jg 0x406136
and dword [rdi], eax
mov ebx, 0x17a95b90
sbb byte [rax + 0x75], bl
add al, byte [rcx + 0x7f88d578]
mov dword ss:[rax], ebx
hlt
sahf
cwde
jns 0x40622a
mov edi, esi
jb 0x4061be
test byte [rbx], dl
xchg eax, ebp
mov edi, eax
movsd dword [rdi], dword ptr [rsi]
sbb al, 0x78
and dword [rdi + 0xe], ecx
movabs dword [0x2f527989e95cdf89], eax
xor byte [rdi - 0x37307605], cl
push 0xbc49e42
mov al, bh
sbb ecx, dword [rbx + 0x27]
in al, 0x48
test dword [rdx + 0x169192d7], ecx
mov esp, ecx
test dword [rcx + rax - 0x74d6fff1], ecx
scasd eax, dword [rdi]
cmp al, 0xe1
test dword [rsp + rsi], edi
sub byte [rdx], bh
mov edi, dword [rdi + 0x30]
xchg eax, esp
in al, dx
test dword [rbp + 0x4f63bf8b], ecx
mov dword [rcx], 0x8b8a1027
call qword [rcx]
mov word [rsi + 0x3727158c], ds
movabs eax, dword [0x409c48178c442f0f]
imul ecx, dword [rdi + rcx*2 - 0xd8df111], -0x74
push qword [rbp - 0x72b26778]
in al, 0x20
pop r14
ja 0x406224
jg 0x4061d5
add ch, byte [rcx + 0x7069f217]
lea eax, [rdi - 0xef71b9c]
or al, 0x8b
and byte [rdi - 0x20], cl
add al, 0xf2
jle 0x4061ef
lahf
push rax
lahf
mov ebp, 0x32217840
pop qword [rdi]
jl 0x4061fe
xchg eax, edx
xchg eax, ebx
pop rsi
mov edi, 0x4668ef8f
mov ss, word [rbp + 0x1c]
clc
lahf
fnstsw dword [rax + 0x48]
sub cl, byte [rsi + 0x20]
jno 0x406218
nop
pop rsi
popfq
shl bh, 0x2f
xchg eax, ecx
div dword [rbx - 0xde85d6f]
or al, 0x47
sub al, 0x8b
add al, 0x92
sbb al, 0x39
and edi, eax
ja 0x4062a7
pop rbx
xchg eax, edx
mov byte [rax + 0x42], bh
sahf
mov word [rbx], gs
jnp 0x406241
rcl byte [rax - 0x700b7e86], 0x92
xlatb
fist dword [rdx + 0x605e803f]
xchg eax, ebx
mov ch, 0x93
jno 0x406317
pushfq
sal bh, 1
xchg eax, esp
xor ecx, dword [rcx]
and al, 0xe0
test dword [rdi + 0x2d], edx
xchg eax, esp
scasd eax, dword [rdi]
test byte [rdx + 0x36], 0x8a
mov dh, 0x8f
adc bl, al
xchg eax, esp
out dx, eax
fmul dword [rbx]
jns 0x406271
sti
xchg eax, esp
xor byte [rbp - 0x6a7dee70], bh
wait
xchg eax, ebp
sbb al, 0xe4
in al, 0x19
scasd eax, dword [rdi]
loopne 0x406328
mov r9b, 0x95
or dword [rax + rdi*2 - 0x486a1d7f], ebp
js 0x406333
in al, 0xd9
xchg eax, esi
cmpsb byte [rsi], byte ptr [rdi]
in eax, dx
add edi, dword [rdi + 0x5d85ea90]
push rax
add edi, dword [rdi + 0x2ef9674]
and byte [rdi], r12b
mov esi, 0x42970c96
outsd dx, dword [rsi]
movabs al, byte [0x5304e28c095f9728]
xchg eax, edi
or dword [r15], r13d
in al, 0xd9
xchg eax, edi
cmpsd dword [rsi], dword ptr [rdi]
xlatb
push rsp
mov esp, 0xc1c81f97
in al, 0x74
jmp 0x766a058f
add ah, byte [rbx + 0x2797fe5e]
sbb ebx, dword [rax - 0x1db0de29]
add eax, 0xf437982f
jnp 0x4063cf
add ch, byte [rbx]
jp 0x4063c8
cwde
not edx
cwde
mov ebp, 0xb8bf2790
xchg eax, ecx
setns bh
cmpsb byte [rsi], byte ptr [rdi]
adc dword [rax], 0x555490bc
cdq
pop r14
enter 0x38b3, 0x77
cdq
out 0xd6, eax
cdq
sahf
jo 0x4063cc
or ebx, dword [rdx - 0x1ba1cee1]
or al, dh
xchg eax, edi
jle 0x406328
or edi, dword [rcx + 0x12]
mov ebp, 0x985a679a
jp 0x406321
ror byte [rsi - 0x65], 0xf
rcr byte [rbx - 0x398dbc79], cl
or dword [rdx], esp
pushfq
lahf
sub eax, 0xe4e41970
mov esp, 0xc8c00a56
and byte [rdi], ah
and byte [rsi + rsi], dh
fmul st(0), st(0)
cmp cl, byte [rax]
xchg edi, ebx
sub eax, 0xc09c9d2f
jns 0x40636e
xchg eax, edi
retf -0x3963
or dword [rcx], edi
add dh, byte [rdi]
sub edi, esp
popfq
out 0xc7, eax
jb 0x40637b
sub bl, byte [rsi + 0x943aeaf]
sub al, 0x3a
and dword [rcx - 0x62], ecx
in al, dx
add eax, 0x279e8cc6
cmpsb byte [rsi], byte ptr [rdi]
sahf
pop rdi
mov edx, 0x22caf468
lock add byte [rax], dl
lahf
enter 0x13b3, 0x48
iretd
lahf
lahf
fmul dword [rbx]
mov word [rsi - 0x24], ds
lahf
scasd eax, dword [rdi]
stc
lahf
nop
mov cl, 0x88
or al, 0xa0
mov word [rdi], ss
adc al, byte [rdi]
mov ebx, 0x2a62176a
xchg eax, edi
test dword [rdi + 0x10], eax
test al, 0xa0
xchg dword [rdx + 0x3b3c9ca0], ebx
add dword [rdi - 0x53405eff], 0xc85e8d5e
xchg eax, ebx
and dword [rbx + 0xa8b3da1], 0xffffffa2
int3
jp 0x40646a
iretd
out dx, eax
movsd dword [rdi], dword ptr [rsi]
xor byte es:[rdx + 0x438a1167], ah
adc ch, byte [rdi]
cmp al, 0xa2
inc dword [rsi + rax]
mov esp, 0xa2462890
xchg eax, eax
or dword [rax + rbp*8 - 0x39e85d7a], esp
movabs byte [0x37a31a570813a0c0], al
sahf
popfq
jge 0x40641a
xlatb
mov al, 0x37
add dword [rdi], ebp
in al, 0xc9
xchg eax, esi
movabs dword [0x95881a46a3dd56f9], eax
scasd eax, dword [rdi]
movsb byte [rdi], byte ptr [rsi]
mov al, ah
add al, 0xf2
jp 0x406437
lahf
movsb byte [rdi], byte ptr [rsi]
jns 0x4064e9
xor byte [rdi - 0x3b], ch
movsb byte [rdi], byte ptr [rsi]
out 0x56, eax
jp 0x406422
ror dword [rbx], 0x18
movsd dword [rdi], dword ptr [rsi]
and dword [rbp + 0x3027679], 0xffffffc7
mov ebx, 0x9938bfa5
nop
or dword [rip + 0x782f4639], 0x47
hlt
sahf
mov ebp, 0x4fefa61b
cmpsb byte [rsi], byte ptr [rdi]
rol byte [rdx], 0x5e
and byte [rdi + 0x2e6fa65f], bh
push rax
xchg byte [rax + 0x109fb7ca], bl
push 0x25
fisub dword gs:[rsi - 0x65bf45d7]
out dx, eax
cmpsd dword [rsi], dword ptr [rdi]
cmpsd dword [rsi], dword ptr [rdi]
cmpsd dword [rsi], dword ptr [rdi]
sahf
mov word [rdx + rbx*8], ds
cmp al, 0xcc
cmpsd dword [rsi], dword ptr [rdi]
jae 0x406518
nop
and edx, dword [rcx + 0x22]
test al, 0x5b
test al, 2
cmp dword [rcx - 0x5791a8ff], eax
cmp byte [rdi], ah
jno 0x4064ac
test al, 0xaf
test al, 0x63
ror dword [rcx], -0x5c
cmp ebp, dword [rcx + 0x11c681f]
js 0x406538
test rax, -0x62d91f19
sahf
mov word [rdx], ss
push rbp
test eax, 0x3a24a99f
adc dword [rip - 0x563669], 0x9c54813
stosb byte [rdi], al
xchg eax, ecx
and eax, edi
test al, 0xaa
out 0x39, eax
pop rdi
test byte [rcx], bl
adc bh, byte [rax + rdx*4 + 0x520dab91]
stosd dword [rdi], eax
mov edi, 0x3909d09c
adc eax, 0x47abcb70
sub al, byte [rbp + 0x5490eb3c]
lodsb al, byte [rsi]
push rsi
jns 0x406530
nop
cmp al, 0xe9
lahf
lodsb al, byte [rsi]
js 0x4064e8
lodsb al, byte [rsi]
add ah, byte [rcx]
jp 0x4064ea
xchg dword [rbp*4 + 0x605e0107], eax
jne 0x4064fc
lodsd eax, dword [rsi]
lodsd eax, dword [rsi]
scasd eax, dword [rdi]
xor al, 0x84
jo 0x40657d
pop rcx
scasb al, byte [rdi]
fild qword [rsi + 0x204eaac]
out dx, eax
mov ebp, dword [rsi - 0x261b1b59]
or dword [rcx], esp
scasd eax, dword [rdi]
out dx, eax
mov esi, 0xf158ec71
add bh, byte [rbx]
scasd eax, dword [rdi]
pop rdi
jo 0x406548
push rdi
popfq
shl byte [rdx + 0x47afc913], 0x13
mov al, 0x30
add al, 0x16
mov al, 0x9f
add qword [rdi + 0x27], rsp
lodsb al, byte [rsi]
mov al, 0x77
xor byte [rdi], bl
and edx, esp
xchg eax, ebx
pop rsi
sahf
add ebx, dword [rdi + 0x16]
or al, 9
nop
int 0xb0
add esi, dword [rcx + 0x2f546097]
in al, 0x82
cmp byte [r9 - 0x7c6f46b1], r14b
pop r15
in eax, dx
pop rsp
movsb byte [rdi], byte ptr [rsi]
mov edx, 0x98072173
pop rdx
repe cmpsd dword [rsi], dword ptr [rdi]
and al, 0x27
jne 0x40662f
adc eax, 0x7212e7b2
cmp r12b, byte [r8 - 0x4e]
call 0x104f7596
mov esp, 0xb2730e40
mov dl, 0x42
sub dword ss:[rdi], 0x813a5fff
loope 0x40660d
push rsi
cmc
push -0x4c21d04d
xor dl, byte [rsi]
add ch, byte [rip + 0x27e29fb4]
nop
adc byte [rdi], 0x73
mov ah, 0x97
mov ebp, 0x232178b4
mov edi, 0x10b4d8a1
jp 0x40664e
iretd
pslld mm2, qword [rsi + 0x4ebfb50b]
and byte [rcx + 0x2f], al
push rcx
mov ch, 0x3f
mov esp, 0xe48744b5
or al, 0x47
fmul st(5)
mov ch, 0x42
or edi, 0x5d3c47f2
in al, dx
add al, 0x16
int1
xor eax, 0xb67d4fb6
pop rdi
add dword [rsi - 0x38], ebx
push rdx
cmpsd dword [rsi], dword ptr [rdi]
movabs al, byte [0xee1c84e93cafb68f]
jrcxz 0x40661f
cmpsd dword [rsi], dword ptr [rdi]
push rsp
pop rcx
pushfq
cmp al, 0xe1
test dword [rax], ebp
mov bh, 0x7f
je 0x4066a8
push rbp
pop rsi
enter -0x7c6d, 0x42
mov bh, 0xd6
xchg eax, esp
mov bh, 0x39
jb 0x406685
movabs eax, dword [0x3c813a6a4cb7f9c7]
sbb esi, eax
mov edi, dword [rax + 0x7018b91d]
add ah, byte [rbx]
out 0x84, eax
mov ecx, 0x2749e1cf
in al, 0x7a
jnp 0x406673
mov ecx, 0x371ea32f
and dword [rdi - 0x62], ecx
cmp al, 0x5a
add ebx, ebx
mov ecx, 0x642f6b12
xor byte [rax + 0xe], bh
mov edx, 0xba6f818f
push rsi
in al, 9
push rsp
mov dh, 0xba
sahf
or edi, dword [rcx - 0x4c]
mov edx, 0x5e99e657
hlt
mov r11d, 0x4bb621f
add bh, byte [rax + rax*8 - 0x84454b9]
enter -0x1def, -0x3f
mov ebx, 0xed42f6cf
mov ebx, 0x4f21780
mov bh, 0xb8
jne 0x406737
mov esp, 0x409d120
not eax
mov esp, 0xa4f2176f
in al, dx
mov esp, 0x6c978a57
jb 0x4066fb
test byte [rbp + 0x148736df], bh
retf
mov ebp, 0x40bbd52e
jrcxz 0x40672e
xlatb
xchg eax, ebp
xchg eax, ebx
fadd dword [r10 + 0x2f]
adc dword [rsi - 0x3615b0e0], edi
jge 0x406747
retf 0x6f01
and dword [rsi - 0x37a1fee4], edi
pop rcx
jae 0x4066f1
sar qword [r9 - 0x64], 1
sahf
cmp byte [rdx + 0x4fbef8be], ch
mov ss, word [rdi]
xchg byte [rbp + 0x32], bl
and dword [rdi + 0x239193c8], edi
int3
outsb dx, byte [rsi]
sub dword [rsi - 0x76fd0e41], ecx
adc esp, dword [rbx]
rcr byte [rdi], 0xac
shl byte [rdx], 4
push rsi
push rdi
in eax, 0xc0
and dword [rbx], esp
or dword [rbx - 0x3f], ecx
scasd eax, dword [rdi]
enter 0x4f49, 0x78
jg 0x406732
sbb byte [rdx + 0x4ea02a7], 0x52
jo 0x40673c
xchg dword [rip - 0x42aa7e3e], edx
lahf
mov bh, 0xc2
pop rcx
or dword [rdx + rdi], ebp
retf
ret 0x1b8f
ret
xchg eax, ecx
stosb byte [rdi], al
adc ecx, dword [rax - 0x61]
jo 0x406759
push rdi
add dword [rax], 0xc91c90bc
ret
xchg dword [rsi - 0x38], ebx
xor edi, dword [rax]
and ah, al
out dx, eax
push rax
jnp 0x4067ff
add bl, byte [rsi - 0x38]
xchg eax, ebx
pop rdi
push rbp
xchg eax, esp
add dword [rdi], esp
mov al, 0x27
mov ah, 0xcf
add al, 0x4e
add cl, byte [rsi + 0x6f]
jg 0x406812
nop
and edx, dword [rcx]
mov edx, 0x80dbbfc5
xor cl, byte [rax - 0x64]
cmp dh, al
scasd eax, dword [rdi]
movsxd rcx, dword [rdx - 0x7d38dcd9]
cmp byte [ebx + esi + 0x270481cc], cl
nop
stc
out dx, eax
mov word [rcx + rax], ds
cmp byte [rsi], dh
and byte [rsi + 0x20], cl
sbb dword [rbp - 0x387b61c0], ebx
jmp 0x4067c1
add al, byte [ebx]
leave
cmp eax, 0xe8cfc80f
add al, 0x52
jo 0x406834
enter -0x7319, -0x38
add dword [rax + 0x27], 0xc8c00f90
xlatb
ror dword [rcx], -0x7c
cmp ah, byte [rdi]
leave
mov dword [rdi + 0x4e0090c9], 0xc9d5d720
xlatb
loopne 0x40682c
push rsi
push rbx
retf -0x6eb9
retf 0x7527
add al, byte [rcx]
dec edx
lcall [rcx]
in al, 0x49
mov ebp, 0xcba79190
iretd
jne 0x406822
add eax, 0xcbe42f06
out dx, eax
or esp, ecx
test dword [rcx], ebx
xchg dword [rdi + 0x6a4cc8e], esi
jns 0x4067d7
out 0x8b, eax
int3
push rcx
lahf
sahf
sbb al, 0xe4
pop rbx
int 0xcc
mov eax, 0x95be493
int1
imul ecx, ebp, 0x40cd479f
movabs byte [0xe0b7cde883c2f217], al
nop
pushfq
popfq
adc al, 0xce
ja 0x4068d2
push rsp
add dword [rbp - 0x44], 0xce636f40
scasd eax, dword [rdi]
and byte [rdi], ah
cmp r14b, r10b
je 0x4068ba
mov bl, 0x17
in al, 0xe9
movsb byte [rdi], byte ptr [rsi]
sbb dword [rdx - 0x31], 0x21d20dcb
movabs eax, dword [0xc0bd26d7cf798fb0]
pop rsi
or byte [rdi - 0x7e], dh
iretd
pushfq
iretd
cmp r8b, byte [r9 - 0x3045e0eb]
xlatb
or word [rdx + rdi*2], sp
and ebp, esp
iretd
or byte [rsi + 0x60], cl
rol dword [rbx - 0x30], 1
ror byte [rsi - 0x20cfd900], 1
movabs eax, dword [0x42e2c0bc50b37fd0]
ror byte [rdi], 1
ror dword [ebx], 1
pop rbp
iretd
adc bh, byte [rdi - 0x63bb7e9a]
nop
rol dword [rdi - 0x7c], 1
add byte [rax], bh
add eax, 0xef9eb7d2
nop
pushfq
sbb al, 0xe4
outsd dx, dword [rsi]
js 0x4068d1
mov bl, byte [rsp + rbp*8]
add ah, bl
xchg eax, ebx
shr byte [rdi - 0x59], cl
and dh, byte [rbx]
add bh, byte [rcx]
pop rax
pushfq
push rdx
out 0xcb, eax
shl byte [rax + 0x5df1605e], cl
shl dword [rdi], cl
movsd dword [rdi], dword ptr [rsi]
rcl dword [rax - 0x7038dcd9], cl
push 0x54
cmp al, 0xfb
ror dword [rsi + 0x60], cl
adc eax, 0x27d41127
in al, dx
or r13b, byte [rdi - 1]
cmp al, 0xeb
test dword [rdi + rax*2], ebx
retfq -0x202c
and esi, dword [rcx + 0x21]
loopne 0x4068cb
outsd dx, dword [rsi]
in al, 0x8a
pushfq
add byte [rax + 0x43], dil
jb 0x406929
test eax, 0x57058138
int3
adc byte [rcx], bh
add dl, dh
jg 0x406973
movabs al, byte [0xd6270dbf23279027]
test dh, dl
mov esp, 0xbebf6790
outsb dx, byte [rsi]
in al, dx
mov ebp, 0x3f04e840
xlatb
xchg eax, esi
xlatb
cmp r8b, byte [rcx - 0x284450bc]
loopne 0x40696f
or byte [rbp + 0x48], dh
loopne 0x406967
or byte [rsi - 1], ch
push rsi
mov dh, 0xb
fmul dword [rcx]
movsxd rsi, dword [rdx + 0x74]
jae 0x40699b
xchg eax, edi
push qword [rbp + rsi*2 + 0x66]
movsxd rax, dword cs:[rax]
pop rdi
pop rdi
push r10
pop rdi
push r11
push rsp
add byte [rbp + 0x72], ah
imul ebx, dword gs:[edx], 0x5bffbbdb
pop rdi
je 0x406a31
pop rdi
movsxd rbp, dword [rdi + rbp*2 + 0x6e]
jae 0x4069ed
outsd dx, dword fs:[rsi]
pop rdi
or esp, dword [edx - 0x49]
insb byte [rdi], dx
or dword [rdi + rbp*2 + 0x72], esi
jae 0x406a3d
jne 0x406a59
outsd dx, dword [rsi]
insd dword [rdi], dx
jo 0x406a52
sub dword gs:[rsi + rbp - 0x41], esp
std
add eax, 0x383537f6
xor eax, 0x69665f24
outsb dx, byte [rsi]
imul ecx, dword [rax], 0x79617272
pop rdi
imul ebp
clc
outsb dx, byte gs:[rsi]
je 0x406a78
jns 0x406a01
or ch, byte [rbp + 0x65]
and byte [rbp + 0x6d], dh
insd dword [rdi], dx
jns 0x406a43
lodsb al, byte [rsi]
sbb esi, dword [rax]
or eax, 0x2a74295f
jae 0x406a8b
mov dh, 0xff
in eax, dx
div byte [rbp + 0x72]
movsxd rsp, dword [rbp - 0x5f]
jo 0x406a97
sub dword [rdx + 0x53], ebx
je 0x406a78
xor dword [rcx], edi
jo 0x406a99
adc byte gs:[rdi + 0x73], dh
fbstp tbyte [rsi + 0x7c329ed6]
outsb dx, byte [rsi]
movsb byte [rdi], byte ptr [rsi]
jb 0x406ab3
movsxd rsi, dword [rdx + rbx + 0x18]
fstp st(2)
in eax, 0x6d
cmp byte [rcx + 0x61687467], bh
adc bpl, byte fs:[rcx + 0x76]
fld dword [rbx - 0x68]
mov ebx, 0x1876701f
sbb dword [rbp + 0x32], eax
xor byte [rip + 0x5b58c97d], dl
xor rax, 0xffffffffda757165
add edi, dword [rbx - 0x53]
retf 0x1698
xor byte [rbp + 0x75], ch
fdiv st(6)
xlatb
out 0x63, eax
imul edx, dword [rax + 0x2d], 0x70
adc al, 0x74
sub esp, ebp
xchg eax, ecx
mov word [rbx], gs
xor dh, byte [rbp + 0x6e]
sub eax, 0xddb762df
cmp qword [rsi + r13*2], r13
jne 0x406a61
js 0x406b0d
stosd dword [rdi], eax
movsxd rbp, dword [rax + 0x61]
outsb dx, byte [rsi]
enter -0x5102, -0x4b
pop qword [edx + ebx*4]
push r8
push rsi
imul ebp, dword [rcx + 0x27], 0x7257da15
xor dh, byte [rip + 0xd69735f]
mov word [rax], ds
scasb al, byte [rdi]
lodsb al, byte [rsi]
sub eax, 0x61dd6437
pop rsi
jo 0x406b26
je 0x406adb
pop rbx
jnp 0x406b34
mov edx, 0x6f870836
sub dword [rdx + 0x33], 0xd661b4fa
sahf
xor eax, 0x6792c718
adc al, 0x36
imul edx, dword [rdi + rcx + 0x17], 0x65d91c36
xor ecx, edi
in al, dx
insb byte [rdi], dx
je 0x406a73
std
test dword [rax], ecx
adc eax, 0x696c6f4a
movsxd rdi, dword [rcx + 0x45]
xor byte [rcx - 0x50], spl
out 0x70, eax
sbb ecx, dword [rcx + rbx + 0x11]
xor ebx, ebx
in al, dx
jbe 0x406b6a
wait
cld
outsd dx, dword [rsi]
adc dh, byte [rax]
xchg eax, esp
outsd dx, dword [rsi]
jo 0x406b51
sbb esp, esi
sti
ret
xor ecx, dword [rcx + 0x4e]
cwde
out dx, eax
fimul word [rax]
push rbp
jo 0x406acf
cmp al, 0x42
push rbp
scasb al, byte [rdi]
ret
outsd dx, dword [rsi]
ja 0x406b21
push rbx
pop r10
cmp cl, byte [rbp + 0x41]
pop rax
and eax, dword [rbp + 0x4e]
push r12
int1
jg 0x406b3a
test dh, 0x37
sbb esi, dword [rdx + rax*2 + 0x61]
add al, 0x6a
xor dword [r11 + 0x54455250], r12d
push rsp
pop rcx
pop rdi
pop rbx
imul dword [rbx - 1]
push rbp
push r12
adc byte [rdx], r12b
xor dword [rdx], esi
and edx, dword [rax - 0x39]
movsxd rsp, dword [rcx + 0x20]
fisttp dword [rdx]
add al, 0xf2
outsb dx, byte [rsi]
sub byte [rsp + rbp*4], dh
nop
adc eax, 0x524a49fe
imul edx, dword [rbx - 2], 0x76454502
jo 0x406bd4
ret
xor byte [rbp + 0x343c3095], al
adc eax, 0x8518c2a0
or edi, edx
imul ecx, dword [rsi - 0x3d], 0x69ee6870
jp 0x406bab
outsd dx, dword [rsi]
sub dword [rdi], -0x44
out dx, eax
inc bl
wrmsr
xor r14b, byte [rbp + 0x62]
pop rdi
wait
in eax, dx
outsb dx, byte [rsi]
pop rdx
cmp byte [rdx + 0x68466957], ah
push 0x24
push rdx
xchg eax, ebx
popfq
fsubp st(5)
push 0x4e
pop rcx
lodsb al, byte [rsi]
or eax, dword [rdi - 0xa]
mul byte [rax - 0x35]
push rbp
and byte [rax + 0x44], cl
push rdx
adc al, byte [rcx + rbx*2 + 0x4e]
or eax, dword [rbp + 0x49ee484d]
sbb ecx, dword [r14 + 0x64]
adc byte [rsi], dl
sub edi, dword es:[rcx + 0x4f75ff99]
push rcx
push rbx
mov bh, 0x23
mov ah, 0xdf
rcr dword [rdi + 0x54], 0x41
xchg eax, r9d
xor esp, dword [rdi + 0x7e]
mov dil, 0xc6
ljmp [rbp + 0x30]
push r8
cmp dword [rcx + 0x6e], ecx
jo 0x406bc3
imul r11d, dword [rsi + r10 + 0x31], 0x6d4f0834
or al, ch
stc
or qword [r10 - 0x727a22a6], rdi
sbb r14, qword [rbx]
pop rdi
insb byte [rdi], dx
xor ebp, dword [rdx + rbp*8 + 0x18]
insd dword [rdi], dx
mov esi, 0x151c5849
xor eax, 0xb63f7614
jo 0x406c8b
sub al, 0x54
sub dh, byte [rsp + rsi*2]
jns 0x406cba
xor byte gs:[rbx + 0x38], dl
scasb al, byte [rdi]
sbb dword [rsi - 0x33c99709], ecx
push 0x48
pop rdx
js 0x406c35
test qword [rbx + 0x61], r10
add dh, byte [rdx + rsi + 0x33]
jo 0x406c9a
lodsb al, byte [rsi]
in al, 0x3a
mov ebp, 0x5d49b648
sub ebp, dword [rbx + 0x4636334a]
cmp dword [rcx - 0x59], ecx
jbe 0x406c3c
mov ecx, 0x5fd02c80
add ecx, edi
mov ch, 0xd2
mov edi, 0x50466c6d
jbe 0x406c71
add dword [rax], eax
xor byte [rsi + 0x69], ch
scasq rax, qword [rdi]
sub al, 0x4c
movsd dword [rdi], dword ptr [rsi]
pop rsi
mov eax, 0x2632037d
add eax, 0x50515352
push rbx
jo 0x406ce8
insd dword [rdi], dx
ret
xchg eax, ebp
lodsb al, byte [rsi]
test al, 0x62
movabs r14, 0xb2543850074786bb
xor byte [rax], dh
lea rsi, [r8]
xchg dword [rbx + 0x31], ebx
rol byte [rdx], 1
xor dword [rax - 0x45], ebx
movabs eax, dword [0x7665443a374f68b0]
push -0x1fd48fca
adc cl, cl
sti
pop rdi
outsb dx, byte [rsi]
add eax, 0x65bc3383
movsxd rbp, dword [rdx + 0x63]
sbb dword [rbx], 0x8b31d26
enter 0x3154, -0x14
jnp 0x406d37
lodsb al, byte [rsi]
sub eax, 0x6e38d2b5
vshufps xmm6, xmm15, xmmword [rdx - 0x27], 0x71
adc ebx, dword [rsi + 4]
sub al, 0x71
cmc
lodsb al, byte [rsi]
push rsi
sub cl, ah
insb byte [rdi], dx
jae 0x406d41
scasb al, byte [rdi]
adc al, al
test dword [rbp + 0x5f], 0x3486ab68
pop rdi
cmp ecx, dword ss:[rax + rsi*4 + 0x764744ed]
rcl byte [rdi - 0x38], cl
push rbx
mov dl, 0x36
cdq
dec byte [rdx + rcx*2 + 0x96c2970]
xor cl, byte [rcx + 0x28772746]
jl 0x406d4c
push rbx
in eax, dx
scasd eax, dword [rdi]
push r12
and al, 0x40
xchg byte [rax + rsi - 0x6f73b57d], cl
sbb al, 0x65
sbb qword [rax + r14*4 - 0x7b], 0x34fca510
cmp byte [rsi + 0x6e1bb699], cl
test al, 0xb
xor al, 0x62
pop rsp
mov es, word [rip + 0x34937c6e]
lea ebp, [rcx + 0x66]
add byte [rbp - 0x75], ch
fisttp word [rdi + 0x37]
jne 0x406df1
imul eax, edx, 0xc3756269
imul rax, qword [r13 + 0x1f], 0x14283e36
sbb dl, byte [rcx - 0x5c]
movabs al, byte [0x81dd95c9935c679b]
cmc
jnp 0x406df8
adc eax, 0x35bfbdb6
test eax, 0x383631c9
xor byte [rdi], dh
rol dword [r11], 1
xor al, dh
jrcxz 0x406d48
std
xor al, 0x38
xor esi, dword [rsi]
add eax, 0x68c34e7f
push -0x43292448
popfq
jb 0x406d72
jae 0x406e2c
test byte [rsi + rdi*4 + 0x7e192876], dh
cmp al, 0x5e
insd dword [rdi], dx
jne 0x406e2b
mov ch, 0xa7
push rdi
push rdx
add dh, byte [rip + 0x497931fc]
movabs byte [0x2237e7cee0e66eb9], al
insb byte [rdi], dx
mov bh, 0xb5
fist word [rsi + 0x49]
out 0x35, al
jbe 0x406e10
add dword [rbp - 0x1a], 6
jae 0x406dc5
and al, 0x7c
clc
sal dh, cl
pop rcx
adc dword [rbx + 0x58], 0x766f6ddc
popfq
push rdx
push rbp
mov ch, 0x67
imul ebx, dword [rbp + 0x32], 0x75
xchg eax, ecx
cdq
test eax, 0x5f1cf81d
jb 0x406dd1
pop rcx
jnp 0x406e82
nop
mov word [rip + 0x14f7343e], gs
jno 0x406e86
test dword [rdx + rax*2 - 0x5c], edx
mov edx, 0x95e1f0f1
loopne 0x406e43
or byte [rax + 0x35], r15b
ja 0x406e7a
test byte [rdi], ch
mov ch, 0x5c
and al, 0xc7
test al, 0x4b
movsxd rsp, dword [rbx + 0x49]
adc esi, dword [rdx + rax*8 + 0x7439edc7]
push rbx
psubq xmm1, xmmword [rdi]
pop rsp
sub byte [rcx], r10b
add eax, 0xc9c7969a
jnp 0x406de0
jrcxz 0x406ebf
xchg eax, ebp
pop rdi
sbb dword ds:[rcx + rcx*2 - 0x3abebb71], edi
enter -0x423e, -0x4a
insd dword [rdi], dx
movabs eax, dword [0xed8e031860733d61]
or eax, 0xa5df3200
adc eax, dword [rdi - 0x5532f8f5]
movsxd rbp, dword [r13 + rbp - 0x10]
fisubr dword [rbx + 0x32]
sub eax, 0x44463
xor byte [rbp - 0x3d], bl
jp 0x406e59
stosd dword [rdi], eax
xor byte [rsi], dh
sbb byte [rsi + 0x44], cl
pop rax
movabs byte [0x86b98690893466d], al
jmp 0xffffffffb61d6d56
xlatb
add dword [rcx + 0x350e6d6d], ebx
loopne 0x406eaa
adc ah, byte [rsi]
or al, 0x9d
xor al, 0x73
ja 0x406f15
jo 0x406f31
xor dword [rdx + 0x21], eax
add byte [rdx + 0x71], 0x43
push rbx
pop rdx
lodsd eax, dword [rsi]
movsxd rsi, dword [rbx]
movsb byte [rdi], byte ptr [rsi]
jle 0x406f0e
imul eax, dword [rbp + 0x57], 0xb1121695
push rsp
mov cl, 0x26
xchg byte fs:[rcx], ah
mov al, 0x20
ja 0x406f4b
pop rsp
mov dl, 0xc8
mov dh, 0xb0
loopne 0x406ebb
xor dword [rsi + rax + 9], edi
xchg dh, dl
mov esi, 0x4078bc62
ror bl, 1
mov ebp, 0x634aee52
in al, dx
mov cs, word [rax - 0xe]
shl byte [rax + 0x30], 1
pop rcx
xor esp, r9d
push rax
sbb esp, dword [rax + rsi + 0x6b]
rcl byte [rip - 0x3e7eecc6], cl
xor cl, byte fs:[rbx + 0x1b2e9637]
and eax, 0x637936b0
js 0x406ec2
xchg eax, edi
adc byte [rbp + 0x2398433f], bl
adc ah, ah
xchg eax, esi
xor dword [rdx + 0x18c82543], esi
push rdx
sbb ah, ah
or ecx, dword [rax]
jl 0x406ee4
xor eax, 0x468950db
push rcx
stosb byte [rdi], al
adc al, 0x20
jae 0x406ef1
pop rbx
mov esp, 0x427370d1
or eax, 0x6540406d
add byte [rdx - 0x18], bl
pop r8
movsb byte [rdi], byte ptr [rsi]
xor esp, dword [rsi - 0x50e9a7d0]
not dword [rcx + 0x17]
and al, 0x37
add eax, dword [rdi]
sub esp, dword [rbx]
and dl, byte [rsi - 0x7cfd1aa0]
je 0x406f9b
mov r8d, r12d
ret 0xab08
in eax, dx
pop rcx
or al, 0x17
xor al, byte [rdx + rax*4 - 0x46cfb70d]
fmul st(4)
cmp al, 0xd7
mov bl, 0xd
push rbx
cwde
js 0x406fca
sub byte [rax + 0x658c9ecd], dh
shr byte [rax], 1
retf
pop rbp
xor dword [rsi + 0x4d5816c0], 0xffffffc9
jnp 0x406f91
xlatb
sub byte [rdx + 0x73], 0xb9
fidiv dword [rax - 0x6c]
int1
vpcmpeqd xmm14, xmm5, xmmword [rbp - 0x3f8b0e8a]
mov dl, 0x14
or eax, 0x612b36bd
xchg eax, edi
cmp al, 0x50
and al, 0x15
xlatb
mov dl, 0x98
sub al, 0x79
ja 0x406fb6
pop rax
add al, 0x12
sbb cl, byte [rcx - 0xe]
test al, 7
mov word [rbx + rax*4 - 0x15e4b68f], es
cmpsb byte [rsi], byte ptr [rdi]
add esi, dword [rcx + 0x31]
mov byte [rdx + 0x44], ah
rol dword [rcx], 1
out dx, eax
outsd dx, dword [rsi]
jns 0x406ffc
add eax, 0x39acc09
adc ebx, dword fs:[rsi]
push rsi
pop rbp
mov fs, word [rbx + 0x172639d9]
int 0xd4
movsb byte [rdi], byte ptr [rsi]
mov bl, 0xb2
jg 0x406fa7
enter 0x657a, -0x47
add bl, byte [rax + 0x61]
pop rdx
imul eax, edx, -0x43
sbb dh, dh
sbb al, 0xc7
jbe 0x407036
push rax
loopne 0x406fd4
outsd dx, dword [rsi]
push rsi
xor cl, cl
jo 0x407088
xor al, 0x8d
cmpsb byte [rsi], byte ptr [rdi]
test byte [rsi + 0x1170404a], dl
rcl dword [rbp - 0x65], 0x36
mov ah, 0x2f
ret 0x6261
outsb dx, byte [rsi]
loope 0x407009
pop rax
sbb byte [rbx - 0x3d8686ca], dh
xchg eax, ecx
cmp eax, 0xf3c3135c
xlatb
pop rbx
mov eax, 0x4d76f4e
push rsi
add ebx, dword es:[rax]
cmp al, 0x61
imul esi, dword [rcx], 1
fmul qword [rax + 0x11]
cmpsb byte [rsi], byte ptr [rdi]
out 0x62, al
and al, 0x2f
sahf
and byte [rcx], bl
push r9
xor dword [rcx + rbp*8], esi
jo 0x4070a3
jle 0x4070d8
outsd dx, dword [rsi]
jbe 0x4070e0
xor cl, bl
ja 0x4070ee
jne 0x407011
or byte [rcx + 0x22496a31], cl
lodsb al, byte [rsi]
xchg byte [rdi - 0x41], al
xor al, 0x39
adc eax, 0xc20210bb
xchg eax, edx
jl 0x4070c4
or eax, 0x24316416
jno 0x4070eb
add ebp, dword [rcx]
xchg eax, edx
xor al, bh
jbe 0x407033
sub eax, dword [rax - 0x3ee7fa4b]
jmp 0x726d9b10
nop
mov ss, word [rax + rsi*4 - 0x38ccfd1c]
pop rsi
lodsb al, byte [rsi]
jrcxz 0x4070ea
iret
xor eax, 0x15637c80
loope 0x40708b
cmp esi, esp
jne 0x40712b
push 0x5d
movsxd rbx, dword [rdx + 0xd778e37]
sub al, 0x30
jp 0x4070b6
xchg dword [rdx + 0x52], eax
sub al, byte [rsi + 0x52]
xchg eax, ebx
and al, 0xcc
or byte [rcx], dl
push rdx
xchg eax, ebx
or al, 0xce
and al, 0x46
cmp al, 0x56
cmp dword [rdx - 0x3c], esi
adc byte [rcx], cl
and byte [rsi], al
js 0x40709c
add ah, bl
nop
mov al, 0x20
and ecx, dword [rcx]
or al, 0xc2
test al, 0x8c
movsd dword [rdi], dword ptr [rsi]
add ebx, dword [rsi]
or al, 2
and eax, 0x5ef4d545
or dh, byte [rcx - 0x4cd00dd]
retf
and al, 0x46
pushfq
cmp byte [r13 + 0x61], r13b
js 0x407111
jnp 0x4070bf
movabs al, byte [0xa56a381e4b31dc7a]
ja 0x4070cc
adc dword [rdx + 0x7e], ebx
jne 0x40713d
mov cl, 0xb0
insd dword [rdi], dx
cmp eax, 0x801b5e10
sbb byte [rdi], ah
out 0xc3, eax
pop rcx
sub byte [rdx + 4], cl
cmc
wait
lodsd eax, dword [rsi]
and ah, byte [rcx + 0x257b47f8]
xchg eax, edx
xchg al, cl
std
or cl, byte fs:[rax + rbx*8]
sub byte [rcx + 0x69], ch
popfq
movabs rcx, 0x40805a4a4a229928
and byte [rcx], cl
sub edx, dword [rax]
add cl, byte [rbx + 0x22]
or byte [rcx - 0x74], cl
sub al, 0xa9
mov byte [rsp - 0x70], bl
sub esi, dword [rdx]
pop rbx
sbb byte [rbp - 0x72], ch
lea ebp, es:[rbp - 0x20]
jbe 0x407173
xchg eax, edx
test eax, 0x32464884
sub dword [rcx - 0x42bee7b], ebp
adc eax, 0x439c5918
jae 0x40714c
add al, 0x88
and dh, bh
sub edx, dword [rcx - 0x44]
push rsp
pop rax
outsd dx, dword [rsi]
movsxd rbp, dword [rax]
movabs dword [0x943a7a210210b061], eax
sub al, 0x58
test byte [rdi + 0x70], bh
sub al, byte [r10]
xchg dword [rdx + 0x4b], esi
imul eax, dword [rbp + 0x4989285d], 0x4d2e3378
xor byte [rsi + rcx*8 + 0x728fa662], bh
jge 0x40715d
leave
loope 0x40721d
nop
or eax, 0x3b68e8dc
insb byte [rdi], dx
fnsave dword [rsp + rbx*2]
jo 0x407259
movsxd rdx, dword [rdx + 0x557723a0]
mov al, 0x4b
xor ch, byte [rax]
push rdx
and dword [rcx + rcx*2 - 0x4edbc674], esp
nop
xchg eax, ecx
cmc
push rsi
test byte [rdi + 0x6b], dl
and esi, dword [rcx]
cmp byte [rbp + 0x46], ah
mov al, 0x4b
xchg eax, esi
movabs al, byte [0x5a4a3064bc2b5040]
sbb dword [rbp + 7], eax
sbb esi, dword [rdx + 0x4ee7697a]
sbb eax, 0x22327734
add ch, byte [rdi - 0x35]
imul eax, dword [rdx + 0x35], 0x2b
out dx, al
test byte [rax + 0x642e4340], bl
xchg eax, ebp
rcl dword [rax], cl
xchg eax, esi
shl byte [rdx], 0x92
mov ebx, 0xa17010a9
lahf
sbb al, 0xf8
pop rsi
pop qword [rdx + 0x47]
cmp dword [rsi + 0x1bb0c1a1], ebx
ja 0x4072b2
jne 0x4072a1
cmp eax, 0x5a012d21
in al, dx
jno 0x4071d3
or dword [rsi + 0x4b], 0x11878e18
adc ch, byte [rbx + 0x432038c]
outsd dx, dword [rsi]
jne 0x40726a
jno 0x407279
cmp byte [rbp + 0x6d], dl
fst dword [rdx + rax*2]
sub al, 0x2c
jbe 0x4072af
pop r13
mov bpl, bpl
add dword [rdx + 0x41], edx
mov bl, 0x4b
xor edi, dword [rcx + 0x45a64255]
jbe 0x4072e5
jno 0x4072cc
mov cl, 8
sbb al, byte [rsi + 0x2b422f54]
cmp r15d, r9d
xchg dword [rsi - 0x47], ebx
sub ecx, dword [rdx + 0x5c]
adc ebp, 0x5968902
mov ah, byte [rdi - 0x6c]
add al, 0xe6
pushfq
xor dword [rcx + 0xc], ecx
sbb byte [rcx + 0x64], ah
and edi, dword [rdi + 0x6c823770]
push rsi
xchg eax, r12d
sub eax, 0xb36435c7
test eax, 0x495e1a5d
test qword [r15 + r11*2 + 0x75], r12
je 0x4072e6
cmp edx, dword [rsi + 0x24]
adc dword [rsi - 0xc], ecx
imul esi, dword [rsi - 0x2d], 0x2503a848
push 0x42105a68
popfq
adc r13b, byte [ebp - 0x4d3418f0]
cmp ah, byte [rdx]
test byte [rcx + 0x44], bl
loopne 0x40730a
jne 0x407301
pop rsp
push rax
jge 0x407359
ja 0x40734d
pop rbx
or byte [rax - 0x5b], bl
and al, 0x39
imul edx, dword [rcx], 0x58
lodsd eax, dword [rsi]
insd dword [rdi], dx
movabs al, byte [0xc81d75588c036456]
lodsd eax, dword [rsi]
and al, 0xdb
int 0xb9
or eax, 0x4e520238
fbstp tbyte [rbx]
add byte [rcx], ch
xchg eax, ecx
add al, 0xbc
cmp al, 0xa
sub al, 0x78
xor ah, dl
add dword [rdx], ecx
add ecx, dword [rsi]
ret 0x5485
push rbx
movabs byte [0x5b494847b0612f42], al
lodsb al, byte [rsi]
lodsb al, byte [rsi]
adc bh, byte [rcx]
xor r8d, edx
sal dword [rdx], -0x6e
wait
imul word [rsi + rdx + 0x2e]
ret
insd dword [rdi], dx
std
xchg eax, esi
pop rdx
jb 0x407346
sub al, 0xa
movabs eax, dword [0x45f51f82482c1525]
jp 0x4073b8
or eax, dword ss:[rsi + 0x34]
cmovge edi, dword [rsi - 0x3e]
rcr dword [rdi], cl
retf
stosd dword [rdi], eax
outsb dx, byte [rsi]
add bl, byte [rax + 6]
push rbx
push rsi
stc
cmp eax, 0x812d1d7a
cmpsd dword [rsi], dword ptr [rdi]
sbb dword [rcx + 5], esp
push 0x49524419
and cl, byte [rcx - 0xddb4b6b]
adc byte [rax + 0x2c], bl
mov ecx, 0x1221ca31
jb 0x4073b9
mov ch, 0x85
xor byte [rsi - 0x1b], bl
je 0x40733d
mov dil, byte [rsi - 0x6ddf27b8]
mov eax, 0x1ae42485
loope 0x407360
rol dword [rbx - 0xfe6baf0], cl
adc ch, ch
pop rcx
adc al, 0xc1
xor dword [rax], edi
out 0x25, eax
add eax, edi
mov ecx, 0x4a4fbd0a
push 0x904956a
fdiv qword [rsi + 0x19]
xor bh, al
xor dword [rax], esi
xchg dword [rcx + 0x47], esp
ror byte [rsp + rbp*2], 1
sahf
wbinvd
rcr rdi, 0x40
add ebx, eax
mov edi, 0x5f494241
xor dword [rsi], ebp
xor eax, dword [rax]
test dword [rsi - 0x33], esi
adc eax, 0xa2614306
test qword [r8 + 0x51], rsp
and dword [rsi + 0x35], esi
and al, byte [rsi]
adc dword [rsi], 0xd0aa4ab
xchg eax, ebx
test al, 0x19
rcl dword [rdx], 1
int1
movabs al, byte [0x40adb4351c4a6110]
sbb dword [rdx + rdx*4], ebp
fadd st(1), st(0)
add byte [rdi - 0x7646c22a], ah
fdivr dword [rax + 0x21]
cmc
jl 0x4073ec
xor eax, 0x4c760473
and al, 0
cmpsd dword [rsi], dword ptr [rdi]
rcl byte [rdi + 0x4a], 0x41
ret
and byte [rdx + r11*8 + 0x28], 0xa3
mov es, word [rax]
xor byte [rax + rsi + 0x2518ae1b], r14b
jg 0x407431
int 0xb4
test byte [r8 + 0x6f], dl
or dword [rsp + rcx*8 - 0x32], ecx
imul eax, dword [rax], 0x72
test ah, al
lodsb al, byte [rsi]
xchg eax, ebp
push -0x7bad9569
and al, 0xa
and dword [rbx], esp
mov al, 0x80
ficom dword [rdx]
call 0xffffffffcb8a0713
int 0x39
and al, byte [rcx]
movsxd rbp, dword [rsp + 0x3e]
fild dword [rbx - 0x4291f24f]
pop rdi
xor ch, byte [rsi]
add dword [rip + 0x1d163e0], esi
or al, 0xbe
pop rdi
shl dword [rcx - 0x7e], 1
sbb dword [rax - 0x58], esi
xor dl, byte [rcx - 0x36]
mov dh, 0x70
cmp al, 0x40
retf
insd dword [rdi], dx
jb 0x4074f4
mov dl, 0xa3
and al, 0xb4
mov dl, 0x3f
push rdi
call 0xffffffffa682b666
xor al, 0x24
xor edx, dword [rdi]
adc dword [rax], 0x18
or byte [rax - 0x737e9d28], bl
xchg eax, edx
jl 0x407432
movsxd rdx, dword [rsp + rdx + 0x3294c023]
xchg eax, esp
sub eax, 0x323261
xor dword [rbp + 0xc], esp
ret 0x3d28
mov ebx, 0x5a2ca15b
je 0x407447
lodsd eax, dword [esi]
xor ah, byte [rsi]
mov esi, dword [rbx + 0x30]
pop rdi
movabs byte [0xa170c84c16558b2a], al
add eax, 0x1f3532b9
add byte [rax + rsi - 0x70], dh
loopne 0x4074d3
retf 0x36d4
mov al, byte [rdi + rsi*8]
fcmovbe st(0), st(3)
imul ecx, dword [rdx + 0x6f], 0x848da41
scasb al, byte [rdi]
cmp byte fs:[rax], dh
or al, ah
stosb byte [rdi], al
push rbx
add cl, byte [rdx + rax*8 + 0x2b]
add dword [rsi - 0x3d], esp
sbb edx, dword [rsi + rbp*8]
mov edx, 0xb5049018
int1
adc byte [r8 + 0x3b], r12b
and ebx, dword [rip - 0x4ebdfdbd]
adc byte [rcx], 0x58
mov cl, 0x37
ret 0x9908
mov sil, 0x4a
clc
jo 0x4074af
add byte [rcx + 0x35208b79], ah
add eax, 0x20600837
mov word [rcx + rax*8], fs
jb 0x40750a
add dl, byte [rsi + 0x465b83d1]
pop rax
or ebx, ebp
xor ebp, dword [rbx - 0x3def7a56]
add byte [rcx + 0x30ac5661], cl
or byte [rsi - 0x36972f8c], 0x14
xor al, 0x7e
xchg byte [rdx], dh
test byte [rbx + rdx*8], bl
xor eax, 0x2c419063
stc
and byte es:[rcx + 0x65], ch
adc dword [rdx], eax
in eax, dx
pop rsp
mov cl, 8
in al, 0x20
push r9
or esp, 0xc348516
test byte [rbx - 0x44], dl
ret 0x7132
xchg eax, ebx
xchg eax, ebp
sub eax, 0x4c6d9bc6
jns 0x4075a6
lodsb al, byte [rsi]
loopne 0x40751e
popfq
adc al, 0x62
in eax, 0x70
test dl, ah
adc eax, 0xce635f3b
adc byte [r13 + 0x3978ab14], 0x58
mov al, 0xb0
int3
xor byte [rdx], dh
xor byte [rbx - 0x80], bl
add al, 0x11
pop rsp
pop rdi
insd dword [rdi], dx
movsd dword [rdi], dword ptr [rsi]
sub al, 0x70
pop rbx
or al, 0x72
xor eax, 0x56146928
imul ebx, dword [rbp + 0x111956ca], 0x9048e38c
sub al, 0x41
jns 0x40761c
and al, 0x96
xor byte [rax + 0x68bd47b9], dl
xchg eax, esp
and bh, ah
mov r9b, 0xe4
sal cl, 0x30
xchg dword [rcx], esi
cwde
sub ecx, dword [rbp + 0x20e5339f]
push r14
ret
xor dword [rax - 0x72], eax
enter 0x988, -0x2d
add eax, 0x3ef8c5c8
clc
sub qword [r11], rax
mov ecx, 0x12db09d
push rsi
int 0x14
jae 0x4075a2
xor eax, 0x13fd028a
sbb bh, byte [rcx + 0x7c2e402]
test al, dl
add dh, dl
insb byte [rdi], dx
mov word [rsi], cs
adc dword [rdx - 0x4d], 0x38df3447
insb byte [rdi], dx
xchg eax, ebx
xor dword [rax], ebx
cmp byte [rax + 0x7ac2316e], ah
or eax, 0xc8e913f5
sbb byte [rax - 0x4f], 1
sbb byte [rdx + rbp*2 - 0x40ed3ee0], dl
sub al, 0xc6
insd dword [rdi], dx
xchg eax, ecx
ja 0x4076a0
movsxd rax, ecx
sbb ebp, dword [rdi + 0x54]
and al, 0xc1
add byte [rdi + rax - 0x76], 1
loope 0x407648
or byte [rax - 0x67237b95], bl
lahf
adc ecx, 0x2a
sub al, 0x88
xchg eax, ecx
push rsp
sub ebx, dword [rax]
and dword [rcx + 0x2c], esp
cmp byte [rbx + 0x5124120], ah
loopne 0x407622
movsb byte [rdi], byte ptr [rsi]
nop
cmp dword [rdi + rax*2], edx
push rdi
sbb al, 0xac
sub dword gs:[rax + rsi + 0x24e12e88], ebp
lea bp, [rip - 0x1ec69dbd]
sbb edx, dword [rdx]
sub al, 0xc6
cmp qword [r11 + 0x56], r10
sbb edx, dword [rdx]
add edi, dword [rdx]
insd dword [rdi], dx
mov dl, 0x4e
xor eax, 0x39361da9
and byte [rbx + 0xd], bh
je 0x4076c6
mov ch, 0x83
movsxd rbp, dword [rcx + 0x5c15246]
and al, 0xf7
xor byte [rdx + 0x7eb60237], al
jb 0x4076af
adc ch, byte [rcx - 0x4d72b51b]
jae 0x4076cc
stosd dword [rdi], eax
xor cl, byte [rax - 0x76284e80]
mov byte [rdi], al
test al, 0xde
add dword [rdx + 0x51b840e2], esi
pop rdx
add al, 0x46
cdq
shl dword [r10], cl
xchg eax, esi
and dword [rcx], eax
or eax, 0xe28c6d50
retf -0x5730
mov byte [rdx - 0x34], 0x92
fstp st(3)
jle 0x4076fa
movsd dword [rdi], dword ptr [rsi]
sub al, 0x58
mov byte [rcx], cl
mov ah, ah
test al, 0xac
xor ah, dl
je 0x407679
pop rbp
xor bh, byte [rsi - 0x5a]
loop 0x40767e
movsb byte [rdi], byte ptr [rsi]
xor rax, qword [r14 + 0x42]
movabs al, byte [0x988b222c36c11195]
xchg eax, r14d
adc byte [rbx + rcx], bl
and edi, 0x30
rcr byte [rsi - 0x17a6059f], 0x83
and dword [rax + rcx], eax
int 0x87
iretd
mov ch, 0x20
jmp 0xffffffffae8a704a
movabs al, byte [0x2ab2851838224281]
mov ah, 0x46
cmp byte [rcx + rbp], bl
adc al, cl
fisttp qword [rcx + rcx*2 + 0x55241c96]
test al, 0x32
sbb al, 0xa1
ret 0x8dc2
and dword [rdx + 0x562f6f54], eax
jbe 0x4077a3
adc eax, 0xc92eae6a
adc eax, 0x4aee1560
pop rsi
or dword [rdx], esi
push rsi
or ebp, esp
add r14b, byte [rax + 0x4a9e0632]
test dword [rbx], eax
mov dl, 0x94
jo 0x407724
xchg eax, edi
add byte [rax + rsi*4], al
movsxd rsp, dword [rsi - 0x6f]
push rdx
enter 0x2001, 0x4a
shl ah, 2
xor ch, dl
xor dword [rip + 0x359d4188], esp
pop rdi
push 0x5068c0d4
iretq
out dx, al
adc al, 0xb0
pop rdx
lea ecx, [rip - 0x11b6e312]
mov ecx, 0x7962ef4d
retf
movabs al, byte [0xab50d70b2400e879]
ret 0x8670
movabs al, byte [0x390251589c124fc4]
push rdi
pop rax
rcl dword [rdx + 0x2454ec68], 1
jo 0x40774b
add byte [rdi + 0x1688408d], dil
pop rdi
or eax, 0x51811d0c
nop
mov byte [rdi + rcx*4 - 0x16], dh
add al, 0xe7
pop rbp
retf
insb byte [rdi], dx
sbb byte [rax + 0x30], bl
add byte [rax], dh
jae 0x40780a
ror byte [rax - 0x58], 0x2d
jno 0x407848
cmovne eax, dword [rax]
mov ecx, eax
movabs byte [0x6492847065201a13], al
or byte [rdi], dh
sub ebp, dword [rax + 0x46]
jmp 0x46aede36
and eax, 0x548c0980
hlt
and byte [rsi], cl
add dword [rax + rsi - 0x3e], 0x2a
retf 0x4a25
scasb al, byte [rdi]
in al, dx
and byte [rcx + 0x55d6364a], bh
sbb al, 6
rcr dword [rdx], 1
in al, dx
push 0x48
jo 0x40787b
xchg eax, ebx
movsxd rdi, dword [rsi]
mov cl, byte [rcx - 0x663bdaee]
test dword [rax + 0x20], edx
cld
and eax, 0x3902267c
push rbx
pop rdi
hlt
push rbp
out 0x48, eax
push 0x2b064380
movabs eax, dword [0x56a42378241dff64]
sub eax, dword [rax + 0x48b92c42]
movsb byte [rdi], byte ptr [rsi]
xor bl, byte [rsi + 0x7ad4a21]
jae 0x4078d8
mov dl, 0xe0
sahf
imul edi, dword [rcx + 0x5f691810], 0x31
imul ecx, dword [rbx], 0xc41905a4
sub esi, dword [rdi - 0x3bb7e1f9]
frstor dword [rbp + 0x71]
cmp r8, qword [r13 - 0x49a05fd0]
test al, 0xe4
xor cl, byte [rbp + 0x64]
cwde
cmp esi, ebx
cmc
adc dword [rip + 0x4aa39b8c], eax
sub al, 0x48
sbb dword [rdi + 0x4e88c83d], ebx
sbb al, 0xa3
add byte [rsi - 0x4c], al
cmpsb byte [rsi], byte ptr [rdi]
sub al, 0x19
add ch, byte [rcx + 0x3241326c]
add dword [rax], 0xe2ca4ae0
add dword [rip + 0x2b2d6f34], ebx
out 0xe2, al
rol byte [rax - 0x7307b203], 6
mov esi, 0x3d766976
pop rcx
insb byte [rdi], dx
mov al, 0x5f
cmp edx, dword [rcx + 0xb]
add ebx, dword [rax + 0x2001ab45]
push rdi
and eax, 0x25084a3b
mov al, 0xc7
xor al, 0x84
ror byte [rdx], 1
xchg eax, ecx
cmp eax, 0x1a60c848
and dword [rip + 0x26d42a3], esi
and eax, 0xf72a4310
sbb dword [rdx], 1
add dword [rax - 0x62b9c01d], ecx
add eax, 0xc353e301
pop rax
and dword [rbx], 0x253252fa
mov ebp, 0x329e4854
jrcxz 0x40789a
push rax
or byte [rbx + rsi - 0x7c], al
and cl, byte [rbx]
jo 0x4078d6
add cl, byte [rax + 8]
mov edx, 0x3281497a
sub byte [rbp + 0x6f], 0x50
mov dh, 0x40
popfq
or dword [rcx + 0xb], ecx
sbb dword [rdx], esp
test eax, 0xe1d3392
adc cl, byte [rdx - 0x21cbabb5]
add ecx, ebx
adc al, 0x42
sbb cl, byte [rdx - 0x2f]
pop rsp
pop rbx
add dh, al
wait
xor byte [rax + 1], bl
jbe 0x407919
and dword [rax + 0x6b], ecx
insd dword [rdi], dx
sub eax, dword [rcx + 0x49af70a0]
cmpsb byte [rsi], byte ptr [rdi]
sub byte [rsi - 0xc], dl
xor dword [rcx], edx
add eax, 0xe0a154b
or eax, 0x9558aa90
retf 0x31e0
rol byte [rdx + rbp*2], cl
add eax, 0x839e3172
add dword [rdx + rcx*4 + 0x43], 0xda824b28
sub dh, byte [rbp - 0x6e547d24]
adc esi, eax
cmpsb byte [rsi], byte ptr [rdi]
jg 0x407913
movabs al, byte [0xc28478cb4e0aa315]
push 0x65
sub ah, byte [rdx + 0x33]
push 0x66
and cl, byte [rsi]
pop rax
fmul dword [rsi + 0x11ea240]
lodsd eax, dword [rsi]
outsd dx, dword [rsi]
int3
xchg eax, ecx
add al, 0x11
sub al, 0x6c
xor dword [rip - 0x54f5af], esp
mov bh, 0x99
and byte [rbx], al
movabs byte [0xca95e31615804431], al
add dl, byte [rsi + 0x16]
or byte [rsi], 0xac
jns 0x407a00
xchg byte [rax + 0x5f34f258], dh
clc
imul ecx, dword [rdx - 0x62dcd4a6], 0x56480f81
enter -0x7cba, -0x54
or byte [rbx - 0x70], al
jb 0x4079fb
or byte cs:[rsi], cl
enter 0x3e93, 0x20
mov eax, fs
ret 0x32d9
fadd st(1)
or al, 4
push rdx
push rcx
push rax
jb 0x40798c
nop
cmc
nop
or al, byte [rcx - 0x5f35b1b6]
adc eax, 0x3294a808
mov eax, 0x30b11a33
adc byte [rbx - 0x6f95556e], al
add byte [rbx + 0x25], al
movabs byte [0x549b0a01203ddc32], al
push rbx
add eax, 0xea658302
retf 0x217
xchg eax, ebx
push rax
je 0x407aa6
enter 0x7249, 0
add al, 0x32
and byte [r8 - 0x51], dl
push rbp
in al, dx
push rdx
pop rax
push rsi
cmp dword [rbx - 0x24], ebp
xor bl, bl
loope 0x4079cc
or byte [rax + 0x68], al
xchg eax, edx
jae 0x407abd
in ax, dx
imul edx, dword [rbx - 0x4c], 0x20
fcom dword [rbx + 0x36]
mov esi, 0x20407a1
push rdx
sub ah, al
or byte [rbp + 0xa], al
xor dword [rdx - 0x3e], ecx
push -0x6163e7fb
or al, byte [rdx + 0x32e3c791]
mov al, 0x82
add byte [rax], dil
rol byte [rbx + 0x320a5ae0], 1
cwde
popfq
xchg eax, r13d
jae 0x407a8f
add dword [rdi], edi
push rdx
sbb ah, byte [rcx + 0x20132403]
and al, 0x68
and dword [rsi - 0x11b8554e], ebp
jb 0x407b07
push rdx
mov dh, 0x5f
cmpsb byte [rsi], byte ptr [rdi]
cmpsb byte [rsi], byte ptr [rdi]
xor dword [rdi], esi
sbb eax, 0x1d447604
adc byte [rcx], 0x48
jns 0x407ad1
add byte [rbx + 0x356a7085], ah
push rax
xor cl, dl
mov cl, 0x73
cli
xor dword [rbp + 0x1140ee15], eax
jrcxz 0x407b01
movabs dword es:[0xd2ac10812c49c042], eax
std
adc al, 0x59
and byte [rsi + 0x56], 0x70
add cl, 0x41
mov al, 0x6e
jg 0x407a7d
adc al, cl
add byte [rsi + 0x6d], cl
loopne 0x407ae5
nop
or byte [rbx - 0x4d54a9a5], bl
mov bl, 0x33
add al, 0x4c
sbb dword [rip + 0xa2d6230], esi
jns 0x407b1b
adc eax, 0x820a9031
add byte [rbx], dl
in al, 4
push 2
mov ah, 0x14
hlt
pop rdx
and byte [rax], dh
or bl, byte [rax + 0x61]
retf 0x5115
jb 0x407b3d
pop rbp
and dword [rdx + 4], edi
pop rbp
popfq
push rax
and rdx, qword [rsp + r10 + 0x50fa22ad]
xchg eax, ebp
test byte [rbx], bh
out dx, ax
sub dword [rbx + 0x69], esi
mov edx, edi
lodsb al, byte [rsi]
adc cl, byte [rdx + 0x12]
stc
xchg eax, edx
adc dword [rax], 0x4532bb08
and byte [rbx - 0x7583b4f7], al
test byte [rdx + 0x64544285], al
add byte [rdi + 0x46], ah
stc
jmp 0x407b5a
sub byte [r14 + 0x4f], al
imul esp, dword [rdx], -0x7f
xchg eax, esi
sbb al, 0x57
pop rdi
imul eax, dword [rax + rbp*2], -0x4a
sub al, 0x51
movabs byte [0x49a18ea31e0ac0c4], al
sub edx, dword [rax - 0x1c68b6d5]
movabs byte [0x4484b85b4afd6884], al
and ebx, ecx
loop 0x407b47
add dword [rcx + rcx], 0x902124a9
xor dword [rbx], r9d
pop rbx
push r14
out 0x94, al
xlatb
mov ch, 0xdc
outsd dx, dword [rsi]
jae 0x407bfb
imul esi, dword [rax + 0x43], 0x736750fd
mov bh, 0x88
pop rbp
mov ebp, 0x7882b6a2
imul eax, dword [rsi], 0x24b23002
inc esp
add dword [rcx], ecx
sbb al, 0xfe
je 0x407be3
test al, 2
add dword [rsi - 0x25], edx
lodsb al, byte [rsi]
sbb byte [r9 - 0x12], r8b
lodsb al, byte ss:[rsi]
push rcx
push rsp
loope 0x407b5b
sbb byte [rax + 0x609b2c41], dl
or cl, byte [r10 + rax*8]
xor byte ds:[rdx], ch
adc byte [rdx + 0x36], dh
pop rsi
xchg eax, ecx
xchg eax, edx
movabs dword [0x25d2454af7284e49], eax
nop
adc byte [rax + 0x6a], dh
and dword [rcx + 0x7a], 0x901c84c3
xor qword [rdx + 0x1a], r9
or eax, 0x679c5a30
push rsi
xchg eax, esp
or ch, byte [rcx + rdi*4]
mov al, 6
pushfq
movabs al, byte [0x41040ac356137f50]
mov ebx, 0x528040a9
pop rcx
push rsp
and byte [rax + 0xa4f849], dl
jb 0x407c15
xor ch, byte [rcx - 0x4e6f96e0]
imul edi, dword [rbp + 0x64b64229], 0x35
or r13, qword [rcx + 0x10]
push rsi
or cl, byte [rip + 0xe2a9e0e]
xor ch, bh
imul ebx, dword [rdi + 0x34], 0x15a13165
pop rdi
and dword [rbp + 0x6c], edx
and eax, esp
mov ebx, 0xb808cc95
adc al, 0xb9
insd dword [rdi], dx
push -0x3edf6c16
outsb dx, byte [rsi]
jae 0x407bd4
imul edx, dword [rcx + rcx + 0x2d], 0x905552c8
sub dword [rax + rax*4], ebp
xor dword [r10 - 0x4b], edx
xor byte [rdx + 0x64], bh
insb byte [rdi], dx
push rax
adc byte [rbp + 0x4208bc4], bh
enter -0x754e, 0x51
loope 0x407cd8
or al, byte [rbp + 0x56]
movabs dword [0x3880104519d26abf], eax
punpcklbw mm0, mm4
add byte [rax + rbx*4 + 0x19b44171], 0xc4
cmp byte [rcx], dh
jp 0x407cb5
or dword [rax], 0xffffff84
sub eax, 0xc3107376
and byte [rdx], ch
mov edi, 0x841e2248
sub al, 0x92
and al, 0xe0
adc al, 0x8d
ror ebp, 1
mov al, byte [rip - 0x57ee53fe]
mov word gs:[rdx + 0x35], es
push rdi
pushfq
adc al, 0x31
js 0x407cbb
xor eax, 0x4b1081ab
or cl, byte [rdx]
or al, 0x82
add eax, 0x490320
cdq
or ch, byte [rcx + rsi]
pop rdx
xchg eax, ecx
add al, 0x8d
outsd dx, dword [rsi]
cwde
push rcx
sub cl, byte [rcx - 0x2eb67448]
sub byte [rbx + rcx*8 - 0x6f79bf49], al
or byte [rcx], 0x64
and qword [rax], rdx
and eax, dword [rdx + 0x10]
push 0x22
and dword [rdi], edx
xor bh, byte [rsi]
sub dword [rcx + rcx*4 + 0x460ecf44], 0xc
add al, byte [rcx - 0x6f76015d]
and byte [rsi + 0x25], dl
stosd dword [rdi], eax
pop rdx
ror dword [rax + rsi + 0x6328e320], cl
retf
mov ecx, 0xbf50e8b2
xchg eax, esi
xor cl, byte [rax]
leave
sub eax, 0x73126662
xchg eax, edx
and ecx, dword [rax + 8]
mov bl, 0x4a
and byte [rcx], ah
push rbp
pushfq
outsb dx, byte [rsi]
ja 0x407d31
out 0xe4, al
or al, byte [rcx]
xor ebp, dword [rax]
movabs eax, dword [0x1a32ac16f2e74915]
scasq rax, qword [rdi]
cdq
movabs eax, dword [0x51905c58d2460a30]
or dword [rbx + 2], 0x40
retf
add byte [rcx], 0x3e
add dword [rdx + 0x40], esi
sbb byte [rcx + rcx*2 + 0x48012a65], dh
cmp eax, 0x19280131
adc byte [rbp + 0x45], al
adc dword [rdx + 0x1ea14a03], 0x51
add byte [rax + rcx*8 - 0x38], ah
xchg eax, ecx
adc eax, edx
xor dword es:[r9], esp
add al, 0xaf
test eax, 0x58420325
jno 0x407dc9
xchg eax, ecx
mov edi, dword [rdx]
xor byte [rax], ah
sbb eax, 0x22100651
push rax
movsd dword [rdi], dword ptr [rsi]
sub al, 0x62
push rsi
rcr byte [rbx], 1
test dword [rdx + 0x120bfcbc], ebp
test dword [rcx + rsi + 0x74], ebx
and al, 0x55
movsb byte [rdi], byte ptr [rsi]
and bl, byte [rsi]
add ecx, 0xa
push rsi
enter 0x454b, -0x76
and ah, byte [rdi]
or byte [rbp + 0x44], ah
add ch, byte [rbp + 0x134f212]
lodsd eax, dword [rsi]
lodsb al, byte [rsi]
retf
test byte [rsp + rdx*4 - 0x64], cl
xor dl, byte [rbp + 0x42]
xor eax, 0x450025ca
or eax, dword [rax + rdi*2 - 0x5b42acac]
and byte [rsp + rbp*4], spl
pop rsi
or al, byte [rdx]
and byte [rax - 0x38], dh
and byte [rdx + 0xe6dc538], dil
xchg eax, edx
sub dword [rbp + 0x59124949], esp
xchg eax, ecx
adc eax, 0x9c016406
out 0x41, al
leave
add cl, byte [rsi + 0x185a7e34]
enter 0x241, -0x80
xor dword [rax + 0x4750252], ebp
add edi, dword fs:[rax - 0x55]
rcr byte [rdi], 0xe4
test dword [rax - 0x5b], edx
and byte [rbx + 0x1888c20b], ch
loop 0x407e0e
test byte [rax + rcx*4], ch
xor dl, byte [rax - 0x4b]
adc ch, byte [rdx + 0x12257161]
enter 0x215, 0x4e
xor dword [rax + rcx - 0x2c], eax
or al, 0xc6
push rax
movabs eax, dword [0x4949558ab2d3a830]
jo 0x407e32
shl byte fs:[rbp + 0x66], 0
nop
movabs byte [0x31439d0181286f89], al
add esi, dword [rdx]
sub al, 0xc
rol dword [rbp + 0x6a], cl
sbb al, 0x58
add dword [rax], 0x393244eb
xor ah, byte [rdx + rcx - 0x77]
std
test qword [rsi + r8*8], rcx
and dh, byte [rdi + 0x31]
mov esi, dword [rdx + 0x67520600]
xor bl, byte [rcx + 0x5801404]
stosb byte [rdi], al
test eax, 0x6115e160
push rbx
movabs byte [0x340b000c525c126e], al
cmp eax, 0xe7146188
and dl, bl
jb 0x407e1c
stosd dword [rdi], eax
pop rsi
stosd dword [rdi], eax
clc
imul esi, dword [rdx - 0x2074f480], 0x34
add al, 0xe8
adc al, 0x85
xchg eax, ebx
lodsb al, byte [rsi]
loop 0x407e5f
sub byte [rsi], 0x9b
test byte [rsp + rdx*4], dl
add bh, byte [rdx + 0x2b81121]
add ah, bh
js 0x407e57
lodsb al, byte [rsi]
mov al, byte [rbx + 9]
add al, 0x2b
and dword [rdi], esp
xchg eax, esi
nop
sub ah, byte [rdi + rdx]
or rbp, qword [r10]
or al, 0x1f
or byte [rax], dh
jns 0x407ef2
push r12
pushfq
add al, 0x49
jno 0x407ee8
ja 0x407ed4
or ah, byte [rax*8 - 0x6e058a90]
push rcx
lea eax, [rax]
movsb byte [rdi], byte ptr [rsi]
xchg eax, edx
mov ecx, dword [rax - 0x5e]
test byte [rdx + 0x22], cl
xchg eax, ebp
push rax
mov al, 0x5f
sub byte [rax], bh
and al, 1
imul ebp, dword [rcx], 0x6a
and dword [rbp + 0x4c], eax
push rsi
retf 0x622
or byte [rdi - 0x2fa9bddd], al
and al, dh
mov dl, 0x54
movsd dword [rdi], dword ptr [rsi]
mov dh, 0x56
out 0x5c, al
add dword [rcx], esi
xor eax, 0xd8516a21
adc al, 0x2a
shl dword [rbp + rax + 0xb25a04a], cl
add byte [rip - 0x2ebdfad0], dl
sbb bh, byte ss:[rax]
pop rdx
cwde
ret 0x6172
mov rax, r10
add r8b, r11b
or dh, byte [rdx + 0x27]
outsd dx, dword [rsi]
loop 0x407f70
stosb byte [rdi], al
xor r15, qword [rcx]
out dx, al
xchg eax, ecx
xor al, 0
pushfq
fcomip st(4)
push rbp
mov ch, 0x43
jbe 0x407f16
lodsb al, byte [rsi]
pop r10
stosb byte [rdi], al
jb 0x407f9e
test eax, 0x71595a66
sub bh, cl
int1
jo 0x407f8e
xchg eax, esp
adc eax, 0x7070d5b1
mov eax, ecx
or byte [rax + 0x20e726a0], dl
pop rdx
push rsi
js 0x407f80
cld
adc dword [rax + 0x2849aa12], edx
in eax, 0xdc
retf
mov eax, 0xd4614108
sbb eax, 0x3233751f
cmp byte cs:[rip + 0x2a40ab54], bh
scasb al, byte [rdi]
in eax, dx
and eax, 0x861491a9
wait
add ch, byte [rcx - 0x52b4f9bb]
sbb eax, 0x53308052
adc dh, byte [rcx]
or bpl, bpl
pop rsp
xchg eax, edx
loop 0x408005
lea rsi, [rdx]
cmp byte [rax + 0x24], cl
push rax
or dword [rbp - 0x57bfd1be], esp
pop rbx
adc dword [rsp + rdx], 0x8b5d6be
mov eax, edi
add eax, 0x54d4597a
retf
nop
mov dword [rdx + 0x3832db02], esi
sbb ecx, dword [rcx]
mov ebp, 0x93d33433
movabs ax, word [0x49912ecce78d68d0]
xchg byte [rax + 0x3b98580b], dl
js 0x407fac
test al, 0x4b
mov byte [rdx + 0x52], dh
cwde
sbb bl, byte [rdx]
xor ebp, dword [rax - 0x248083c8]
push -0x13
int 0xa0
je 0x408076
and al, 0x25
movabs al, byte [0xac918c3ae7b57b46]
pop rdx
lahf
pop rax
cmp eax, 0x24a05f8
cmp dword [rcx - 0x40], ebx
adc eax, 0x30615348
xor eax, 0xe904a230
and dword [rbx], edx
add byte [rcx], 0x4f
movabs al, byte [0x602b2160af11eb55]
sub dword [rdx + 0x48], esp
mul dword [rax - 0x7db55bc7]
xchg eax, edx
sbb al, 0x1b
int3
add eax, 0x321a5048
and bh, byte [rdx]
add al, 0x2d
test al, 0xf7
push 5
int 4
jbe 0x40803c
mov eax, 0x4c5d230a
mov edi, dword [rcx]
and ch, byte fs:[rdx + rcx - 0x7e37b5c1]
mov ebp, 0xa8a4aa37
mov dl, 0x85
sar byte [rdx], 0xd1
lock not byte [rdx + 0xc116520]
imul ecx, dword [rcx + 0x31039cc0], 0x34
js 0x40800e
or ch, byte [rcx - 0x6fb7b79e]
outsb dx, byte [rsi]
xchg eax, edx
sub al, 0x39
cmp byte [rdx - 0x80], dl
movabs al, byte [0x430d125160705cac]
sub eax, dword [rbx + 0x51]
add ch, byte [rsp + rdi*4]
push rcx
add ebx, dword [rdx + 0x537a2210]
push 0x44
and dword [rbp - 0x3be75fce], edx
sub al, 0xe7
adc al, 0x81
xor eax, 0xf631b928
in al, 0x48
test al, 2
clc
xor eax, 0xd0916168
xor ebx, edi
jo 0x4080cd
push rax
lodsb al, byte [rsi]
add eax, 0xbcb76db5
ror dword [rdx], cl
adc byte [rax + 0x519cb998], ch
xor eax, 0x6dac6684
movabs byte [0x3905846885056442], al
iretd
mov ch, 0x49
mov word [rdx], fs
sub edi, edi
and al, byte [rsi]
test dword [rcx + 0x1d], edx
xor byte [rsp + rbx], cl
mov cl, 0x10
or byte [rax - 0x6e], ch
cmp dl, byte [rax + rax*2 + 0x4e6bbdd0]
push rax
sub ah, byte [rbx]
push rcx
add al, 0xb
and eax, 0x582d0bc4
sub eax, dword [rax]
and dword [rbp + 0x204084c7], edx
leave
xor eax, esp
adc byte [rdx], al
add eax, 0x2e88b5c5
mov eax, 0x4aeb37e0
je 0x40818e
xchg eax, ecx
adc dword [rbx], esp
mov dl, 3
xchg eax, esp
adc byte [rsp + rax*4 + 0x18b090fd], dh
add al, 0x32
xor eax, 0x7aa9c0d9
xor eax, ebx
push rbx
adc byte [rax], 0x95
or dword [rax + 0x24], ecx
mov word [rcx], es
cmpsd dword [rsi], dword ptr [rdi]
sub eax, dword [rax + 0x56]
loopne 0x408181
test byte [rbp + 0x2d17a4c6], dl
add cl, byte [rbx]
push rbx
adc al, 0x12
push rax
jl 0x408177
or al, 0x69
adc dword [rax + 0x61160c2c], esp
test al, 0x54
enter 0x3502, 0x53
mov bl, byte [rcx]
xor al, cl
ret 0xad66
sub dl, byte fs:[rdx - 0x27bacedd]
mov dl, 0xea
test eax, 0x8457614
or dword [rax + 0x5ef55db], eax
push rdx
sub esi, dword [rdx]
xor dl, byte [rdi - 0x3c]
push rbx
vsubpd ymm8, ymm3, ymmword [rdi - 0x77]
insb byte [rdi], dx
add dl, byte [rbp + 7]
lodsb al, byte [rsi]
imul ebx, dword [rcx - 0x5c3ffb6c], 0x89c50129
or bh, al
jbe 0x40815f
push rbp
adc dl, cl
mov eax, 0x800cba86
adc al, 0x72
xor dword [rdx + 0x9515b2], eax
sub eax, 0x32400e70
xor dword [rcx + rcx*2 - 0x80], r10d
in al, 0x14
ret 0x6a29
movsb byte [rdi], byte ptr [rsi]
movabs al, byte [0x8a64d5955ab45095]
xor edi, ebp
and al, 0xa8
enter -0x6dcd, 9
sub dword [rbx], ecx
pop rsi
fstp qword [rdx - 0x25]
and ch, byte [rbp + 0x3622458c]
push rcx
and ah, dl
or ebx, dword [rax - 0x379b7f75]
or dword [rax], esi
leave
push rsp
xor byte [r8], spl
xor bl, byte [rax]
add edx, edx
test qword [r8], rcx
adc al, 2
push rcx
adc dword [rbx + 0x28], ecx
or al, 0x49
sub bh, ah
sahf
in al, 0x88
push rsi
sub ebx, 0x13
mov r15b, 0xe6
loopne 0x408208
jge 0x408293
jb 0x4081c4
mov al, 0xa0
xchg eax, ebp
movabs byte [0x9a5361c80222902f], al
sub cl, byte [rsi]
xor dword [rax], eax
and dword [rdx + 0x21], esi
xchg eax, edx
or ah, dl
add al, 8
fcomp st(1)
test byte [rcx + 6], 0xc4
stosb byte [rdi], al
and eax, ebx
pop rdx
insd dword [rdi], dx
movabs eax, dword [0xeaa43947ee0e36f8]
adc byte [rdx], ah
and byte [rbp - 0x18], al
adc eax, 0xdca15524
adc byte [rcx + 0x6b5fc032], al
push rbx
adc byte [rdx], dh
add al, 0x8e
push rax
cmp dh, bh
xchg eax, edx
and byte [rax + rsi + 0x65413d68], cl
test dword [rax + rdi*8], eax
dec byte [rbx + 0x2d727563]
jns 0x40824a
test byte [rax + 0x28], cl
sub bl, byte [rdx]
stc
or al, byte [rsi]
adc byte [rdx + rcx*2], 0x15
xchg eax, edx
and dword [rax - 0x77b5b51a], edx
add dword [rcx - 0x37], ecx
in al, dx
xor byte [rdx + 0x25], cl
lodsb al, byte [rsi]
lodsb al, byte [rsi]
add byte [rcx - 0x7f], cl
pcmpeqd mm1, qword [rcx + 0x1148452a]
or ebp, dword [rax]
nop
adc eax, 0x64ad600d
add cl, byte [rbx]
lea ecx, [rdx + 0x12]
and byte [rcx - 0x7f], dl
sub ch, byte [rbx]
nop
jnp 0x408271
xchg eax, ecx
adc ch, dl
xor dword [rip - 0x7d06eef3], ecx
js 0x40827f
xlatb
sbb ecx, ecx
test byte [rax], al
mov ah, 0x4a
call 0xffffffff9456d8d9
clc
xor byte [rax], al
fbstp tbyte [rcx]
add byte [rax + rcx + 0x35c91b26], 0x45
add dl, al
push rbx
push rbp
sbb byte [rax + 0x3d30d741], dl
xchg rax, rbp
add al, 0x28
adc dword [rdx], esi
and dword [rax + 0x6e], edx
xor dword [rdi - 0x2c], eax
stosb byte [rdi], al
mov eax, 0xc20c3a9e
movabs al, byte [0x507782c0b4417739]
add cl, byte [rbp + rax*4 - 0x68]
sbb byte [rcx + 0x7a], bl
sub ah, byte [rbx]
adc byte [rcx + 0x65], 0xc9
push rcx
shl dl, 0x4a
sub eax, eax
sbb byte [rax], 0xb4
push rcx
cwde
xor dword [rsp + rbp*4 + 0x3a], ecx
ror al, 0x6e
push rdi
movsxd rdx, dword [rsp + rbp*2]
sbb eax, 0x7670994
jns 0x408375
and ebx, ecx
and ebx, edx
xor eax, 0x21e2f31a
mov esp, 0x337a2f37
test byte [rdx], cl
mov bh, 0xc2
mov esi, 0x2562cc4d
mov al, 0
fild dword [rcx - 0x75]
xchg eax, edx
adc esp, dword [rdi + 0x4a]
sub byte [rip + 0x491c21c8], al
add byte gs:[rcx], r9b
movabs byte [0x8231b82c84060559], al
adc dword [rsi], eax
xor byte [rsi], dh
sti
pop rsi
test al, 0x24
wait
movsb byte [rdi], byte ptr [rsi]
cli
cmp ecx, eax
movabs al, byte [0xc0945ab02a419007]
xchg eax, edi
mov ch, byte [rax]
adc dl, byte [rdx]
loopne 0x4083d7
xor dword [rcx + 0x45e0de94], ebx
push rsi
add byte [rdx + rdi], bl
pop rax
cmp bh, byte [rcx]
xchg eax, ebp
push rsp
jo 0x4083db
add byte [rbx - 0x16], cl
push rbx
or byte [r9], bpl
js 0x4083fa
pop rdx
jb 0x408412
mov word [rax], es
cmp byte [rax + rax*8 + 0x264880c8], dh
xor byte [rdx], dl
movabs byte [0x7e14801c80eee14c], al
mov ss, word [r8]
and al, byte [rdx - 8]
xor ecx, dword [rsi]
sub byte [rcx + 0x4770495a], ah
add byte [rdx], al
push rdx
mov ebx, 0x40a1a323
outsb dx, byte [rsi]
int 0
jno 0x40844d
stosd dword [rdi], eax
adc byte [rdx + 0x6a], ch
and al, byte [rdx]
in al, dx
insd dword [rdi], dx
movabs dword [0x678d18500ea8b62], eax
mov dl, 0x88
test edx, eax
shr cl, 1
js 0x408435
sbb dword [rax], edx
pushfq
sub dword [rdx], esi
rcl dword [rcx + 0x56], -0x3b
xor dword [r13], ebx
or ebp, dword [rdx + rbp + 0x5622caa6]
sbb edi, ecx
movsxd rsi, dword [rbx + 9]
add byte [rdx + rdi*4 - 0x3fef7bc7], ch
rcl byte [rbx + 0x6e], cl
ja 0x408423
nop
push rbp
sbb al, 0xa
push rbp
cdq
and byte [rdx], ah
cwde
and qword [r11 + 0x54], rcx
and edx, dword [rbx + 0x56]
fcmovu st(0), st(0)
add dl, byte [rdi + 0x38]
push qword [rbx - 0x20]
xor al, 0xc8
and al, byte [rsi + 2]
adc al, 0xd7
jrcxz 0x408475
add al, 0xb7
out dx, eax
xor al, byte [rdi + 0xa]
xchg eax, ecx
and byte [rsi - 0x575bb3b7], bh
push rdi
push rbp
test al, al
fld dword [rax + rbx*2]
mov byte [r13 + 0x18], bl
retf 0x200a
sbb esi, dword [rdx]
xor ecx, ebx
movabs eax, dword [0x90837216c63092c]
and ah, byte [rip - 0x7ef5d56d]
xor eax, 0x484aa3b8
in eax, 0x1e
and al, 0xc2
and dl, byte [rax + rcx + 0x23]
mov r12b, 0x85
push rsi
int 0xc1
jrcxz 0x4084fa
in eax, 5
enter 0x1ea8, -0x20
pop rsp
mov dl, 0
cwde
add eax, 0x235857d
add qword [r9 + 0x44383ec1], 2
xchg byte [rdi + 0x2a], bl
add ebp, dword [rax + r15*8]
add byte [rcx], 0x94
sub al, 0x6a
inc byte [rdi + rcx*2 - 0x1e]
cmc
mov byte [rdx + 0x6f180368], dl
fmul dword [rcx + 0x3845e424]
xor ebp, dword [rsi - 0x69]
adc dword [rbx + 0x4d], -0x2c
push rax
pop rbx
sbb ebp, dword [rbx + 0x2488404]
mov r9b, 0x12
push 0x28
je 0x4084db
jae 0x408543
and byte [rbx + 0x14], ah
adc ch, dl
mov eax, dword [rcx]
and al, 0x30
pop rsi
and eax, 0xc8503886
jge 0x408529
push rsp
mov word [r8], ss
nop
mov al, 0xd1
push rax
nop
sbb al, 0x61
push rax
cmp dword [rcx - 0x20], ecx
mov al, 0xca
sbb bl, byte [rbx]
insd dword [rdi], dx
and ch, byte [rcx + 0x15324a89]
push rbp
push rsp
adc qword [rax], rbx
mov byte [rcx], dl
adc dword es:[rsi + rdx + 0x122d8660], ebx
sbb dh, byte [rdx + 0x60]
xchg byte [rdx - 0x49], ah
jnp 0x408550
leave
or eax, 0xaed26bbf
cmp dword [rdx + 0x53d9d8ea], edx
pop r9
cmp dword [rbp + 0x52], edx
xchg eax, ecx
or byte [rbp - 0x55b7d1d6], bh
pop rbx
stosb byte [rdi], al
movabs dword [0x26528b9835e8790d], eax
test dword [rax], eax
test byte [rdx], bl
lodsb al, byte [rsi]
add dword [rdx + rcx*8 + 0x94d400], esp
cwde
sar eax, 1
add byte [rdi + 0x22], ah
or ecx, dword [rax]
cwde
xor dword [rbx - 0x5fbef6fa], ecx
rol dword [rcx + 0x4f20ac11], cl
push rcx
add dword [rbx], r10d
xor bh, byte [rcx - 0x5d]
adc al, 0xc5
add al, 0x2c
mov dl, 0x60
and eax, 0x80a35dc1
push rcx
mov ecx, 0x6a2c0643
enter 0x3140, -0x1a
pop rax
pop rcx
movabs eax, dword [0x604ac72cc45a0244]
push rcx
and esp, dword [rsp + rcx - 0x3eef6e76]
adc eax, 0x9108dc32
adc eax, 0xaae4a30
and byte cs:[rcx + r14 + 9], bpl
xchg eax, edx
push rbx
test eax, 0x7b7f6b61
pop rdi
jae 0x40861f
sbb al, 0x58
or dword [rbx], ecx
xor al, 0x22
hlt
xor byte [rax + rax*2 - 0x5a], bl
shl byte [rax], 0xc6
xor dword [rbp + 0x69180840], esp
jo 0x40860a
nop
adc dword [rax], ebp
pop rsp
sub eax, 0x21221465
loop 0x40862b
ret 0x1002
sub byte [rcx + 0x483c00df], al
jno 0x408651
add al, 0x6b
jns 0x4085f7
add edx, dword [rsi]
or dh, bh
jle 0x4085ff
add edx, dword [rsi]
mov dh, 0x80
and dl, byte [rdx]
push rsi
jno 0x40865b
push rbx
mov cs, word [rcx - 0x4b]
add byte [rdi + rbx*4], cl
jb 0x4085a5
or byte [rbx - 0x54fd60a6], ah
pop rax
jrcxz 0x40861f
sbb dword [rdx + rcx*4], eax
mov ah, byte [rax]
cmp byte [rax], dh
mov byte [rax + rbp + 0x2f922144], al
mov edx, 0xe5d00201
outsb dx, byte [rsi]
xor bh, byte [rax]
adc byte [rcx + 0x2d6a0032], dh
and dword [rdx], esp
xchg eax, esp
pop rsi
or r9b, byte [r10 + 0x48]
popfq
lodsd eax, dword [rsi]
adc eax, eax
add al, 0x49
xor dword [rsi], 0x807ce2a4
wait
push rbp
jo 0x4086c2
jne 0x4085dd
adc al, ah
and dh, byte [rax]
cmc
lodsb al, byte [rsi]
nop
push rsp
mov r10b, byte [r9 + 0x102ac015]
add al, ch
ror byte [rsi], 0x54
push rsi
pop rdi
mov word [r10 - 0x6b26fa56], ss
jo 0x408693
and dword [rax + 0x18209642], esi
movsd dword [rdi], dword ptr [rsi]
rol qword [rax + 0x70], -0x5b
sbb al, 0xc0
or ebp, dword [rdx + 0x10]
pop rax
fstp xword [rdx - 0x25]
adc eax, 0x34f02d59
xchg eax, ebp
xor bh, byte [rax + 0x41]
adc bl, bl
add byte [rax + 0x76456053], ch
and al, byte [rax + 0x1490d15]
or r14b, byte [rdx + 0x34]
stosb byte [rdi], al
push rcx
xor ah, byte [rcx + rdi + 0x31]
xor al, 0xa2
or al, 0x8e
add eax, 0xd845320
xor dword [rax + 0x26], eax
or eax, dword [rdx + 0x20124ab2]
adc al, 0x21
mov ebx, dword [rcx + rcx + 0x45]
adc cl, byte [rbx]
xor dword [rax], ebx
and byte [rsi + 0x207005d7], dl
and bl, cl
sbb byte [rbx], cl
scasb al, byte [rdi]
pop rdx
loopne 0x40874f
fimul word [rdx]
out dx, al
jno 0x40869d
cmp ebp, ebx
sub dl, byte [rax - 0x1ab6aaa0]
xchg eax, esi
or eax, 0x5944c8f4
mov esp, 0x61a0b188
movsb byte [rdi], byte ptr [rsi]
sub al, 0xaa
mov edx, 0x9dbc0c51
or dl, cl
jbe 0x40877a
imul ecx, dword [rbp - 8], -0x5e
cwde
add edx, dword [rdx + 0x575ff029]
movabs al, byte [0x154794968a631305]
ret
stosb byte [rdi], al
push rsi
sub cl, byte [rax]
add al, 2
movabs eax, dword [0xe28d58c844e82d4c]
rol ecx, 1
sub byte [rbx], ah
out 7, eax
stosd dword [rdi], eax
sub al, 0xe0
jg 0x408756
lodsb al, byte [rsi]
adc al, 0x49
push rax
jp 0x40878c
sub eax, 0x44a15910
xchg eax, r14d
lodsb al, byte [rsi]
sub cl, byte [rdx]
mov ah, 0xbb
or al, 0xa2
xlatb
push rbp
mov r9d, 0x16b47754
movabs byte [0x187081421188642c], al
mov byte [rbx + 0x7f], cl
cli
mov al, 0x22
fst dword [rbp + 0x6e]
ja 0x40871a
push rdx
xor eax, 0xe825a9f0
insd dword [rdi], dx
rol dword [rbx + 0x43], 1
in al, dx
xor byte [rbp + 0x76c2a8f0], ch
call 0xffffffffe2421e1f
add dword [rdi - 0x5d9493], eax
or al, 0x6a
sub edi, dword [rcx]
mov r13b, 0x29
movsb byte [rdi], byte ptr [rsi]
add byte [rbx], 0x54
xor al, byte [rdi]
and byte [rbp + rax*2 + 0x14164cab], dl
sub dword [rcx], ebp
and dword [rbx], ecx
sub al, 0xa3
push rbp
or ch, byte ds:[rdx]
adc byte [rax], cl
xor al, 0x32
push -0x7b
add byte [rbx + 0x19], cl
test byte [rax + rdx*2], ch
xchg eax, ecx
or al, 0x4b
and dword [rdx - 0x75387b9e], edx
or dword [rsp + rdi*4 + 0x6d], edx
mov bl, cl
and byte [rcx + 0x329471ac], sil
cdq
adc dword [rbx - 0x6cd967ae], edx
leave
xor bh, byte fs:[rcx]
out 0x4c, eax
add ah, ah
add dword [rdx + 0x72], esp
xor al, 0x20
and edi, dword [rdx - 0x7b]
sub eax, 0xb5109520
fcomp qword [rcx + 0x30]
add ch, byte [rcx + rcx*2]
xor ch, byte [rax + 0x2c]
xor byte [rax - 0x4bae6ce4], cl
pop di
movsb byte [rdi], byte ptr [rsi]
in al, 0x82
xor al, byte [rax]
xor al, byte [rax]
xor dl, byte [rax + 0x344a1310]
adc byte [rax], al
add cl, byte [rax - 0x75]
rol byte [rdx], 0xe2
shl bh, cl
add rax, -0x7da2ebfa
lodsb al, byte [rsi]
int 0xc3
fidiv word [rbx]
xor dword [rbp + 0x4282c444], eax
sub dh, cl
add dword [rcx], esp
fild dword [rbx + 5]
add ah, byte [rsp + rsi*8]
rol byte [r9 + 0x6d966d14], 0x40
stosd dword [rdi], eax
in al, 0x4a
pop r10
xor al, byte [rax]
adc bh, byte [rcx + 0x31]
add byte [rcx + 0x493c0048], bh
test byte [rbx], al
adc eax, 0x75cd2b
and dword [rcx + rbp + 0x10645a62], 0xfffffff9
cmp eax, 0x53f354ea
cdq
and byte [rdi + 0x41], ah
pop rsp
xor dword [rcx], eax
cmp byte [rax - 0x757554d6], dl
add byte [rbx + 0x39b17cea], cl
mov ebx, 0xac417812
sub ch, bl
or al, al
adc byte [rcx], ah
jp 0x408824
add al, 8
xor dh, byte [rsi]
or al, 0x28
add dword gs:[rdx - 0x1b69ffda], ebp
sub byte [rdx], dh
cld
sbb dword [rip + 0x78695e14], edx
push rbp
hlt
or byte [rdx + rcx*4 + 0x4292aa54], al
push rbp
jg 0x408867
sbb ch, al
push rsp
xor dword [rbx + rax - 0x70], eax
mov byte [rsi + 0x44], dl
adc byte [rcx + rcx*2 + 0x41], 0xde
add byte [rdi + 0x20], ah
mov word [rcx], cs
xor dword [rax], edx
and byte [rdi], dl
sbb esp, eax
mov al, 0xa
or al, 0x88
stosd dword [rdi], eax
adc dword [rax - 0xe], 0x8430a239
add byte [rdi + 5], cl
out 0x88, al
mov dl, 0xb4
xor dl, byte [rdi + rcx]
push rsi
jne 0x40894f
or dword [rcx + rdx], 0x25494a06
fldenv [rax]
push 0x50103879
xor byte [rdx - 0x76d0428b], dh
movabs al, byte [0x2b1edc42030b6500]
cwde
mov al, 0x46
pop rdi
retf
or cl, dl
test edx, ecx
push rsp
test dword [rbx], ecx
xor dword ss:[rsi], 0x5a
wait
adc byte [rax + 0x4c], ch
insd dword [rdi], dx
adc dword [rsp - 0x3eedcdfe], ecx
movabs dword [0x101a335062066d21], eax
in al, dx
test byte [rbx], ah
mov byte [rax], cl
or dword [rax + 0xa], ecx
add esp, dword [rdx + 0x25]
sub byte [rdx + 0x60], dh
and dh, 0x38
xor eax, 0x81ab0c61
adc byte [rcx], 0x47
cmp ebp, eax
mov ecx, 0x753a177
ja 0x408911
wait
cld
scasb al, byte [rdi]
lodsb al, byte [rsi]
adc ecx, dword [rcx - 0x26]
scasd eax, dword [rdi]
pop rax
xor cl, byte [rdi]
jb 0x4089ca
inc dword [rax + 0x4abc644a]
pop rsi
or eax, edx
enter -0x4bb2, 0x5b
add eax, 0x21b1949c
push rdx
popfq
xchg byte [r9 - 0x28], r8b
push 0x6e076709
out 0x2a, eax
push rbp
adc al, 0xd6
xchg eax, ebp
and byte [rbx - 0x6573133a], ch
or eax, 0x91bbea34
add al, 0x40
and byte [rbx + 0x10], dl
nop
add byte [rax], cl
push rax
sbb dl, byte [rbp + 0x61]
add eax, 0x2bc05236
or al, byte [rip - 0x17e8f746]
sbb byte [rdx], 0x18
stosd dword [rdi], eax
rcl dword [rbx + 8], 1
mov cl, 0xaf
push rbp
adc eax, 0x504d0832
or dl, byte [rdx + 0x46326538]
shl byte [rsi + rsi], 0x30
rdmsr
retf 0x5808
cmc
xchg qword [rax + 0x10], rax
loopne 0x408a1e
mov al, 8
sbb ah, byte [rcx]
adc bl, byte [rax + 0x64553289]
and byte [rbx + 0x16492016], cl
add dword [rbp + 0x3022e46c], eax
and dh, byte [rdx]
xor dword [rdx + 0x18], ebx
adc byte [rip - 0x73b1d734], al
jae 0x4089fd
movabs eax, dword [0x253b600553b33a48]
mov edx, 0x74f36944
mov edx, 0x8c4194a0
sbb r12, qword [r9 - 0x3b]
add byte [rbx + 0xad4d4e4], cl
mov word [rdx + 0x54a2ca86], gs
rcr dword fs:[rbp + 0x31], 1
in al, 0
sbb dword [rdx + 0x4a], ecx
and ah, byte [rcx + 0x23455646]
push rbp
push rdi
pop rcx
add byte cs:[rax + r11*2], bl
pop rcx
cmp eax, 0x5c94a4fc
pop rax
stosd dword [rdi], eax
xor dword [rdx + rdx*2 + 0x69990230], ecx
pop rsi
movabs eax, dword [0x92408420bf0288c0]
cmovb ebx, dword [rax + 0x7a0c4c13]
jns 0x408a9c
add byte [rax], bl
adc bh, ch
and ah, byte [rip - 0x7a76d3af]
shr byte [rax - 0x353d765c], 1
add dword [rcx], eax
mov dl, 0xdb
or esp, 0x6a290060
push rbx
jp 0x408a82
mov dl, 2
lea esp, [rax]
push rax
add dword [rip - 0x5bdf4bba], r14d
and dword [rsi], 0xffffffa9
and eax, 0x94514a43
adc byte [rbp + 0xa8ada02], cl
punpckldq mm6, qword [rdi + 0x192b053d]
rol dword [rdx + 0x4e], 0x18
xchg eax, edx
xor dword [rip + 0x465a0012], esi
mov edi, dword [rdx + 0xa64207e]
add byte [rsi], bpl
jae 0x408b2e
insd dword [rdi], dx
sbb dh, byte [rsi - 0x4e]
fist dword [rsi]
je 0x408b31
push -0x48d2f2f7
pop qword [rcx + 0x6f6e0770]
pop rdx
sub eax, 0x7305dc6f
or eax, 0x75622eb3
xchg dword [rbp + rbp + 0x69], esp
out dx, al
lodsd eax, dword [rsi]
mov ch, 0xd8
add byte fs:[rip + 0x64093860], cl
jns 0x408b56
sbb r13d, r10d
movabs al, byte [0x901b5f0c353b09b9]
jp 0x408b57
mov al, 0xd7
ljmp [rax]
or esp, ecx
je 0x408b76
xchg eax, ecx
fistp dword [rsi + 0x23]
pop rsp
or ch, byte [rdi + rbp*2]
or byte [rax + 0x62ce44ed], ah
add eax, 0xb36f24bc
sub dl, bh
sub edx, edx
push -0x48b97f31
in al, dx
push 0x5d0d7264
movsxd rax, dword [rcx]
movabs al, byte [0xec116cbdd59375c8]
ret
mov al, byte [r11 + 0xb]
push 0x63
jb 0x408ade
insb byte [rdi], dx
not byte [rsi]
pop rdx
push 0x5e7b6800
adc dl, ch
add dword [rax + rbx*4], 0x82bac021
add byte es:[rax], al
mov al, 0x84
movabs al, byte [0x59b99cc701031bba]
sbb al, 0xd2
or al, 0xc9
nop
add dword [rbx], esp
xor cl, al
and byte [rbx], al
push rsp
push rsp
and byte [rbx + 0x32], al
and al, 0x43
add al, 0x31
je 0x408bcb
xor cl, al
and byte [rsp + 6], dh
cmp esp, ebp
int 0x44
idiv bh
ljmp [rdi + 0x7f]
cwde
cwde
sbb dword [rax + rdx*4 + 0x41], esp
add eax, 0x9a406c08
and dword [rsi + 0xb], ecx
loopne 0x408bda
sbb eax, esp
xor byte [rsi], al
sti
jae 0x408b69
leave
sbb byte [rax], al
push rsi
add edx, dword [rdx + 0x100e4f27]
or dword [rax], edx
or ecx, esp
leave
add ecx, ebp
pop rsi
mov edi, 0xc810f2ff
xchg ah, ah
in al, 0xf2
adc byte [rdx + rax - 0x6fe361f9], al
outsb dx, byte [rsi]
imul edi, edi, -2
js 0x408be4
js 0x408be6
rol byte [rsi], 1
add al, 0xe4
and dword [rbx + rbx], eax
jp 0x408bf9
adc sil, byte [rax + 0x48f27210]
adc ah, byte [rax - 1]
stc
ficomp word [rdi - 0x7f57bdc1]
pop rsp
jb 0x408b89
test al, 0x70
add eax, 0x49b38419
mov ds, word [rdi - 0xe7e8ff]
fst dword [rax + 0x72]
sbb byte [rax], bl
sbb cl, byte [rcx - 0x7cdf1bc1]
or al, 0x40
mov al, 3
xchg dword [rax + rcx*8 + 0x2e], ebp
adc byte [rdi], al
xchg eax, esp
sbb esi, dword [rdx + 0x73bc605]
seto byte [rbx + 0xb]
cmp ebx, dword [rbp + 0x401c383f]
cmp ebp, dword [rcx + rax*4 - 0x63]
jle 0x408cb8
add byte [rbx - 0x361b1b01], ah
and dword [rdx + rbx*4 - 0x3ef6657c], eax
xchg byte [rcx + 0x3fa0bfa9], ah
and al, 0x17
jb 0x408be1
movabs al, byte [0xb1324208a12006cf]
mov bh, 0x17
leave
xor esi, dword [rdi]
jg 0x408c0e
mov edi, 0x2420a033
mov edi, 0x704f245d
insb byte [rdi], dx
cmp eax, 0xe4f279c9
nop
jg 0x408c04
in eax, dx
mov ebp, gs
fadd dword [rcx]
fldenv [rcx + rbp*8 + 0xe83db22]
xchg eax, esp
pushfq
adc ah, ch
std
mov edi, 0x480c9b10
out 0x3f, eax
psubsb mm0, qword [rdi]
insb byte [rdi], dx
jb 0x408c9b
push rbx
xchg byte [rax + 6], al
cdq
clc
jb 0x408c3a
add dword [rcx + 6], ebp
clc
xchg r12b, bpl
call 0x48510bbb
sahf
sbb al, 0x92
cwde
clc
clc
call qword [rdi - 0x3e]
mov dh, 7
add dword [rcx], eax
test eax, 0x484ec8b9
call 0x404acbd1
clc
and eax, ebp
add dword [rdi], eax
add dword [rdi - 0x4d], edi
add ebp, ecx
adc byte es:[rdi + 8], bh
add bh, byte [rdi]
jns 0x408c74
jno 0x408c75
clc
push rax
add dword [rdi + 0x61c10115], edi
and dword [rbx], edi
xor byte [rdi], dl
xor al, 0x2c
cmp ebp, dword [rsp + rax*4]
mov edi, 0xc97b1107
adc dword [rax + 0x21], edi
xlatb
sub al, 2
mov edi, 0x3607011e
xor byte [rsi], dl
mov ebx, 0x73483029
xchg eax, ebx
add ah, byte [rax]
push rdx
lcall [rdi]
adc rax, 0x903610a
jg 0x408d28
add byte [rax - 0x5cc06138], dh
fdivr dword [rdi]
add byte [rax], al
add byte [rax], al
add byte [rax], al
inc qword [rax]
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rax], eax
add byte [rax], al
add byte [rax], al
add byte [rbp + 0x50], dl
pop rax
and dword [rip - 0x1df7fdea], ecx
sbb ch, byte [rax - 0x6a]
xchg eax, edx
out 0xff, eax
and byte [rcx + rax], dh
add byte [rbx + rdi + 0x36180000], dh
add al, byte [rax]
add qword [r8], rax
jg 0x408d51
add byte [rax], al
add bh, bh
